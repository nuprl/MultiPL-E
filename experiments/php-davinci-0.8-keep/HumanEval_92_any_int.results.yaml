name: HumanEval_92_any_int
language: php
results:
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ((is_int($x) == true) && (is_int($y) == true) && (is_int($z) == true)) {\n\
    \t\tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\t\treturn\
    \ true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && ($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y);\n}\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3,\
    \ 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2,\
    \ 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(gettype($x) == \"integer\" and gettype($y) == \"integer\" and gettype($z)\
    \ == \"integer\"){\n\t\tif($x == $y + $z or $y == $x + $z or $z == $x + $y){\n\
    \t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse{\n\
    \t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\n\
    echo any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (gettype($x) !== \"integer\" || gettype($y) !== \"integer\" || gettype($z)\
    \ !== \"integer\") {\n\t\treturn false;\n\t} elseif ($x + $y === $z || $x + $z\
    \ === $y || $y + $z === $x) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho\
    \ any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if(is_int($x) && is_int($y) && is_int($z)) {\n    if($x === $y + $z || $y ===\
    \ $x + $z || $z === $x + $y) {\n      return true;\n    } else {\n      return\
    \ false;\n    }\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$x = (int)$x;\n\t$y = (int)$y;\n\t$z = (int)$z;\n  if ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n    return true;\n  } else {\n    return false;\n\
    \  }\n}\n\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7pz8cxc.php:36\n\
    Stack trace:\n#0 /tmp/tmpz7pz8cxc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz7pz8cxc.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return is_int($x) && is_int($y) && is_int($z) && ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && (($x == $y + $z) || ($y ==\
    \ $x + $z) || ($z == $x + $y));\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (gettype($x) != 'integer' || gettype($y) != 'integer' || gettype($z) != 'integer')\
    \ {\n\t\treturn false;\n\t}\n\telseif (($x + $y) == $z || ($x + $z) == $y || ($y\
    \ + $z) == $x) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n\
    echo any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$array_num = [$x, $y, $z];\n\t$sum = 0;\n\t$max = max($array_num);\n\tforeach\
    \ ($array_num as $key => $value) {\n\t\tif ($value != $max) {\n\t\t\t$sum += $value;\n\
    \t\t}\n\t}\n\tif ($sum == $max) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\n\
    echo any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ce0axi3.php:36\n\
    Stack trace:\n#0 /tmp/tmp9ce0axi3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9ce0axi3.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (($x + $y == $z || $x + $z == $y || $y + $z == $x) && is_int($x) &&\
    \ is_int($y) && is_int($z));\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ((int)$x === $x && (int)$y === $y && (int)$z === $z) {\n        if ($x\
    \ + $y === $z || $x + $z === $y || $y + $z === $x) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $sum = $x + $y + $z;\n    if ($x == $sum / 3 && $y == $sum / 3 && $z == $sum\
    \ / 3 && gettype($x) == \"integer\" && gettype($y) == \"integer\" && gettype($z)\
    \ == \"integer\") {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2,\
    \ 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdm85yaq.php:27\n\
    Stack trace:\n#0 /tmp/tmpkdm85yaq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkdm85yaq.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x + $y == $z) {\n        return true;\n    } elseif ($x + $z == $y)\
    \ {\n        return true;\n    } elseif ($y + $z == $x) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6i0_clf.php:29\n\
    Stack trace:\n#0 /tmp/tmpq6i0_clf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq6i0_clf.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return ($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y);\n}\n\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjayjt8mu.php:21\n\
    Stack trace:\n#0 /tmp/tmpjayjt8mu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjayjt8mu.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\necho any_int(3, 6, 3);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y + $z\
    \ || $y == $x + $z || $z == $x + $y) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\n\necho any_int(2, 3, 5);\necho any_int(2, 4, 2);\necho any_int(2, 5,\
    \ 2);\necho any_int(2, 2, 2);\necho any_int(2, 5, 2.1);\necho any_int(2, 2.1,\
    \ 2);\necho any_int(2.1, 2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  $result = $x + $y;\n  if($result == $z){\n    return true;\n  }else{\n    return\
    \ false;\n  }\n}\n\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2,\
    \ 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpai2xo3gu.php:32\n\
    Stack trace:\n#0 /tmp/tmpai2xo3gu.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpai2xo3gu.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\tif (is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n    return true;\n\
    \  }\n  else {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptidf7zmy.php:25\n\
    Stack trace:\n#0 /tmp/tmptidf7zmy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptidf7zmy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif($x+$y == $z || $x+$z == $y || $y+$z == $x){\n\t\tif(is_int($x) && is_int($y)\
    \ && is_int($z)){\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho\
    \ any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdkx2tp8r.php:31\n\
    Stack trace:\n#0 /tmp/tmpdkx2tp8r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdkx2tp8r.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn ( $x+$y == $z || $x+$z == $y || $y+$z == $x ) && ( gettype($x) == \"\
    integer\" && gettype($y) == \"integer\" && gettype($z) == \"integer\" );\n}\n\
    echo any_int(5, 2, 7) ? \"True\" : \"False\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return is_int($x) && is_int($y) && is_int($z) &&\n  ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return (int)$x + (int)$y == $z || (int)$x + (int)$z == $y || (int)$y + (int)$z\
    \ == $x;\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\n\
    echo \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2g1yadn.php:34\n\
    Stack trace:\n#0 /tmp/tmpq2g1yadn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq2g1yadn.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return $x + $y == $z || $x + $z == $y || $y + $z == $x;\n}\n\necho any_int(5,\
    \ 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) .\
    \ PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppyxz6lse.php:25\n\
    Stack trace:\n#0 /tmp/tmppyxz6lse.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppyxz6lse.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ((is_int($x) == false) || (is_int($y) == false) || (is_int($z) == false))\
    \ {\n\t\treturn false;\n\t} elseif (($x + $y) == $z) {\n\t\treturn true;\n\t}\
    \ elseif (($x + $z) == $y) {\n\t\treturn true;\n\t} elseif (($y + $z) == $x) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, 2, 2);\n\
    echo any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && (($x == $y + $z) || ($y ==\
    \ $x + $z) || ($z == $x + $y));\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (($x + $y) == $z || ($x + $z) == $y || ($y + $z) == $x) && is_int($x)\
    \ && is_int($y) && is_int($z);\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif (($x + $y) == $z || ($x\
    \ + $z) == $y || ($y + $z) == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return is_int($x) && is_int($y) && is_int($z) ? ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) : false;\n}\n\necho any_int(4, 2, 6) ? \"true\\n\" :\
    \ \"false\\n\";\necho any_int(6, 2, 7) ? \"true\\n\" : \"false\\n\";\necho any_int(3,\
    \ 2, 2) ? \"true\\n\" : \"false\\n\";\necho any_int(3, -2, 1) ? \"true\\n\" :\
    \ \"false\\n\";\necho any_int(3.6, -2.2, 2) ? \"true\\n\" : \"false\\n\";\necho\
    \ any_int(3.6, -2.2, 0.1) ? \"true\\n\" : \"false\\n\";\necho any_int(3.6, -2.2,\
    \ 0.4) ? \"true\\n\" : \"false\\n\";\necho any_int(3.6, -2.2, 1.4) ? \"true\\\
    n\" : \"false\\n\";\necho any_int(3.6, -2.2, 1.5) ? \"true\\n\" : \"false\\n\"\
    ;\necho any_int(3.6, -2.2, 2.5) ? \"true\\n\" : \"false\\n\";\necho any_int(3.6,\
    \ -2.2, 3.5) ? \"true\\n\" : \"false\\n\";\necho any_int(3.6, -2.2, 4.5) ? \"\
    true\\n\" : \"false\\n\";\necho any_int(3.6, -2.2, 5.5) ? \"true\\n\" : \"false\\\
    n\";\necho any_int(3.6, -2.2, 6.5) ? \"true\\n\" : \"false\\n\";\necho any_int(3.6,\
    \ -2.2, 7.5) ? \"true\\n\" : \"false\\n\";\necho any_int(3.6, -2.2, 8.5)\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg0s9ko_8.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $x = (int)$x;\n    $y = (int)$y;\n    $z = (int)$z;\n    $data = [$x, $y,\
    \ $z];\n    $add = $x + $y;\n    $add2 = $x + $z;\n    $add3 = $y + $z;\n    if\
    \ (\n        $x == $add2 ||\n        $y == $add ||\n        $z == $add3\n    )\
    \ {\n        return true;\n    }\n    return false;\n}\n$x = 3.6;\n$y = -2.2;\n\
    $z = 2;\necho any_int($x, $y, $z);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi67ydla5.php:36\n\
    Stack trace:\n#0 /tmp/tmpi67ydla5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpi67ydla5.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x % 1 !== 0 || $y % 1 !== 0 || $z % 1 !== 0) {\n\t\treturn false;\n\t}\
    \ else if ($x === $y + $z || $y === $x + $z || $z === $x + $y) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) == false || is_int($y) == false || is_int($z) == false) {\n\t\
    \treturn false;\n\t} elseif (($x + $y) == $z || ($x + $z) == $y || ($y + $z) ==\
    \ $x) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3,\
    \ 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y) == $z) {\n\t\treturn true;\n\t} elseif (($x + $z) == $y) {\n\t\
    \treturn true;\n\t} elseif (($y + $z) == $x) {\n\t\treturn true;\n\t} else {\n\
    \t\treturn false;\n\t}\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps44maagp.php:28\n\
    Stack trace:\n#0 /tmp/tmps44maagp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps44maagp.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexh3i4s1.php:23\n\
    Stack trace:\n#0 /tmp/tmpexh3i4s1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpexh3i4s1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if($x + $y == $z) {\n        return true;\n    }\n    else if($x + $z ==\
    \ $y) {\n        return true;\n    }\n    else if($y + $z == $x) {\n        return\
    \ true;\n    }\n    else {\n        return false;\n    }\n}\necho any_int(5, 2,\
    \ 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4otp_0f4.php:35\n\
    Stack trace:\n#0 /tmp/tmp4otp_0f4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4otp_0f4.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return is_int($x) && is_int($y) && is_int($z) && (\n        $x + $y == $z\
    \ ||\n        $x + $z == $y ||\n        $y + $z == $x\n    );\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$value = false;\n\tif (is_int($x) == true && is_int($y) == true && is_int($z)\
    \ == true) {\n\t\tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\t\
    \t$value = true;\n\t\t}\n\t}\n\treturn $value;\n}\necho any_int(3, 2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  $sum = $x + $y + $z;\n  if($x == $sum || $y == $sum || $z == $sum){\n    return\
    \ true;\n  }\n}\n\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_14y3inj.php:25\n\
    Stack trace:\n#0 /tmp/tmp_14y3inj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_14y3inj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn $x + $y == $z or $x + $z == $y or $y + $z == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptay26047.php:20\n\
    Stack trace:\n#0 /tmp/tmptay26047.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptay26047.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) &&\n\t\t(($x === $y + $z) || ($y\
    \ === $x + $z) || ($z === $x + $y));\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn ($x+$y==$z || $x+$z==$y || $y+$z==$x) && is_int($x) && is_int($y) &&\
    \ is_int($z);\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return ((($x+$y)==$z)||(($x+$z)==$y)||(($y+$z)==$x))&&(is_int($x)&&is_int($y)&&is_int($z));\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(!is_int($x) || !is_int($y) || !is_int($z)){\n\t\treturn false;\n\t}\n\tif($x\
    \ == $y + $z || $y == $x + $z || $z == $x + $y){\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\n\
    echo \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  $sum = $x + $y + $z;\n  if ($x == $sum - $y - $z || $y == $sum - $x - $z ||\
    \ $z == $sum - $x - $y) {\n    return True;\n  }\n  else {\n    return False;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47rv9086.php:25\n\
    Stack trace:\n#0 /tmp/tmp47rv9086.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp47rv9086.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\tif (is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x === $y + $z || $y\
    \ === $x + $z || $z === $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, 2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if ($x + $y == $z) {\n    return true;\n  } elseif ($x + $z == $y) {\n    return\
    \ true;\n  } elseif ($y + $z == $x) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\
    \\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\"\
    ;\necho any_int(3.6, -2.2, -0.6) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpml21c7g6.php:34\n\
    Stack trace:\n#0 /tmp/tmpml21c7g6.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpml21c7g6.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n    return true;\n} else\
    \ {\n    return false;\n}\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qngr8t7.php:25\n\
    Stack trace:\n#0 /tmp/tmp7qngr8t7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7qngr8t7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $result = false;\n    $xint = filter_var($x, FILTER_VALIDATE_INT);\n    $yint\
    \ = filter_var($y, FILTER_VALIDATE_INT);\n    $zint = filter_var($z, FILTER_VALIDATE_INT);\n\
    \    if($xint && $yint && $zint){\n        if($x == $y + $z || $y == $x + $z ||\
    \ $z == $x + $y){\n            $result = true;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6b51uz3.php:36\n\
    Stack trace:\n#0 /tmp/tmpc6b51uz3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc6b51uz3.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)){\n        if (is_int($x)\
    \ && is_int($y) && is_int($z)){\n            return true;\n        }\n    }\n\
    \    return false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (($x === $y + $z || $y === $x + $z || $z === $x + $y) &&\n        is_int($x)\
    \ && is_int($y) && is_int($z)) {\n        return 'True';\n    } else {\n     \
    \   return 'False';\n    }\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9yi2o8i.php:24\n\
    Stack trace:\n#0 /tmp/tmph9yi2o8i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph9yi2o8i.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif($x == $y + $z || $y == $x + $z || $z == $x + $y){\n\t\treturn true;\n\t}else{\n\
    \t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8y5dnnm.php:25\n\
    Stack trace:\n#0 /tmp/tmpp8y5dnnm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp8y5dnnm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if($x == $y + $z || $y == $x + $z || $z == $x + $y){\n        return true;\n\
    \    }\n    else{\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) .\
    \ \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vkt40cg.php:30\n\
    Stack trace:\n#0 /tmp/tmp7vkt40cg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7vkt40cg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (int)$x + (int)$y == $z || (int)$x + (int)$z == $y || (int)$y + (int)$z\
    \ == $x;\n}\necho any_int(3,2,3);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpolrqzypc.php:28\n\
    Stack trace:\n#0 /tmp/tmpolrqzypc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpolrqzypc.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $sum = $x + $y + $z;\n    if($x == $sum || $y == $sum || $z == $sum){\n \
    \       if(is_int($x) && is_int($y) && is_int($z)){\n            return true;\n\
    \        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_s_9pcc.php:24\n\
    Stack trace:\n#0 /tmp/tmpm_s_9pcc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm_s_9pcc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(3, 2, 2) ? \"True\" : \"False\";\necho \"\\n\";\necho any_int(3,\
    \ -2, 1) ? \"True\" : \"False\";\necho \"\\n\";\necho any_int(3.6, -2.2, 2) ?\
    \ \"True\" : \"False\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nTrue\nFalse"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \   return (is_int($x) && is_int($y) && is_int($z)) && ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\necho any_int(5,\
    \ 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1)\
    \ . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wju0_t1.php:24\n\
    Stack trace:\n#0 /tmp/tmp3wju0_t1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3wju0_t1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && ($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y);\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  $arr = array($x, $y, $z);\n  sort($arr);\n  return array_sum($arr) == $arr[2]\
    \ * 2 && is_int($arr[0]) && is_int($arr[1]) && is_int($arr[2]);\n}\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\necho any_int(3.0, -2.0, 2)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop1by239.php:31\n\
    Stack trace:\n#0 /tmp/tmpop1by239.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpop1by239.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) &&\n\t\t($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x);\n}\necho any_int(5, 2, 7);\necho \"\\n\";\necho\
    \ any_int(3, 2, 2);\necho \"\\n\";\necho any_int(3, -2, 1);\necho \"\\n\";\necho\
    \ any_int(3.6, -2.2, 2);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif($x == $y + $z) return true;\n\tif($y == $x + $z) return true;\n\tif($z ==\
    \ $x + $y) return true;\n\treturn false;\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgv1a4_bp.php:23\n\
    Stack trace:\n#0 /tmp/tmpgv1a4_bp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgv1a4_bp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppckjt3dp.php:18\n\
    Stack trace:\n#0 /tmp/tmppckjt3dp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppckjt3dp.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1)\
    \ . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x + $z ==\
    \ $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\tif (is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"\\n\";\necho any_int(3, 2, 2);\necho \"\\n\"\
    ;\necho any_int(3, -2, 1);\necho \"\\n\";\necho any_int(3.6, -2.2, 2);\necho \"\
    \\n\";\necho any_int(13, 4, -1);\necho \"\\n\";\necho any_int(13, 4, -1.1);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z) {\n\t\treturn true;\n\t} elseif ($y == $x + $z) {\n\t\treturn\
    \ true;\n\t} elseif ($z == $x + $y) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\n\n$int = any_int(3, -2, 1);\necho $int;\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsn1twkd.php:32\n\
    Stack trace:\n#0 /tmp/tmpjsn1twkd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjsn1twkd.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        return \"\
    True\";\n    } else {\n        return \"False\";\n    }\n}\n\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "TrueFalseTrueFalse\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb56fpue.php:27\n\
    Stack trace:\n#0 /tmp/tmptb56fpue.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb56fpue.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (($x + $y) == $z || ($x + $z) == $y || ($y + $z) == $x) && is_int($x)\
    \ && is_int($y) && is_int($z);\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && ($x === $y + $z || $y === $x\
    \ + $z || $z === $x + $y);\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x === $y + $z || $y === $x + $z || $z === $x + $y) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\n\
    echo any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y + $z\
    \ || $y == $x + $z || $z == $x + $y) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\"\
    ;\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x === $y + $z || $y\
    \ === $x + $z || $z === $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t// if all are integers or not\n\tif(is_int($x) && is_int($y) && is_int($z))\
    \ {\n\t\t// check if $x = $y + $z\n\t\tif($x == $y + $z) {\n\t\t\treturn true;\n\
    \t\t} else if($y == $x + $z) {\n\t\t\treturn true;\n\t\t} else if($z == $x + $y)\
    \ {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\
    \t\treturn false;\n\t}\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x == $y + $z || $y == $x + $z || $z == $x + $y) && is_int($x) && is_int($y)\
    \ && is_int($z)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    echo any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif (($x == $y + $z) || ($y\
    \ == $x + $z) || ($z == $x + $y)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\necho any_int(5, 2, 7).\"\\n\";\necho any_int(3, 2, 2).\"\\n\";\n\
    echo any_int(3, -2, 1).\"\\n\";\necho any_int(3.6, -2.2, 2).\"\\n\";\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if(is_int($x) && is_int($y) && is_int($z)) {\n        if($x === $y + $z ||\
    \ $y === $x + $z || $z === $x + $y) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$sum = $x + $y + $z;\n\treturn is_int($x) && is_int($y) && is_int($z) &&\n\t\
    \t(($x == $sum - $y - $z) || ($y == $sum - $x - $z) || ($z == $sum - $x - $y));\n\
    }\necho any_int(3, -2, 1) ? \"true\" : \"false\";\necho \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) ? \"true\" : \"false\";\necho \"\\n\";\necho any_int(3, 2, 2) ? \"\
    true\" : \"false\";\necho \"\\n\";\necho any_int(5, 2, 7) ? \"true\" : \"false\"\
    ;\necho \"\\n\";\necho any_int(0, 0, 0) ? \"true\" : \"false\";\necho \"\\n\"\
    ;\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "true\nfalse\ntrue\ntrue\ntrue\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp1xprfjfg.php:34\nStack trace:\n#0 /tmp/tmp1xprfjfg.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1xprfjfg.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && (\n\t\t($x == $y + $z) ||\n\
    \t\t($y == $x + $z) ||\n\t\t($z == $x + $y)\n\t);\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) === false || is_int($y) === false || is_int($z) === false) {\n\
    \t\treturn false;\n\t}\n\telseif(($x == $y + $z) || ($y == $x + $z) || ($z ==\
    \ $x + $y)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\necho\
    \ any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\treturn ($x + $y === $z ||\
    \ $x + $z === $y || $y + $z === $x);\n\t}\n\treturn false;\n}\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2,\
    \ 1);\necho any_int(3.6, -2.2, 2);\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif (($x + $y) == $z || ($x\
    \ + $z) == $y || ($y + $z) == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\treturn $x + $y == $z || $x\
    \ + $z == $y || $y + $z == $x;\n\t}else {\n\t\treturn false;\n\t}\n}\necho any_int(5,\
    \ 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3,\
    \ -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\tif (is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9sqazsj.php:26\n\
    Stack trace:\n#0 /tmp/tmpn9sqazsj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpn9sqazsj.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$check = array($x, $y, $z);\n\t$check = array_unique($check);\n\tif(count($check)\
    \ < 3) {\n\t\treturn false;\n\t}\n\telseif(count($check) == 3) {\n\t\t$sum = $x\
    \ + $y;\n\t\tif($sum == $z) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\t$sum\
    \ = $x + $z;\n\t\t\tif($sum == $y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\
    \ {\n\t\t\t\t$sum = $y + $z;\n\t\t\t\tif($sum == $x) {\n\t\t\t\t\treturn true;\n\
    \t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\
    \t}\n}\necho any_int(1, 1, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc5le3pr.php:46\n\
    Stack trace:\n#0 /tmp/tmpzc5le3pr.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpzc5le3pr.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return $x + $y == $z || $x + $z == $y || $y + $z == $x;\n}\n\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpla8w84uo.php:25\n\
    Stack trace:\n#0 /tmp/tmpla8w84uo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpla8w84uo.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$nums = array($x, $y, $z);\n\t$result = array_unique($nums);\n\tif (count($result)\
    \ == 1) {\n\t\treturn false;\n\t} elseif (count($result) == 2) {\n\t\tif ($x +\
    \ $y + $z == 0) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t\
    }\n\t} else {\n\t\tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\t\
    \treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8moai_ez.php:36\n\
    Stack trace:\n#0 /tmp/tmp8moai_ez.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8moai_ez.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\techo \"true\";\n\
    \t} else {\n\t\techo \"false\";\n\t}\n}\nany_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "truetrue\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86ivwwnv.php:23\n\
    Stack trace:\n#0 /tmp/tmp86ivwwnv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp86ivwwnv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return \"True\";\n       \
    \ } else {\n            return \"False\";\n        }\n    } else {\n        return\
    \ \"False\";\n    }\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2)\
    \ . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nTrue\nFalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcdsqhtad.php:30\nStack trace:\n#0 /tmp/tmpcdsqhtad.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcdsqhtad.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args) {\n   \
    \ return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2_3sg4r.php:28\n\
    Stack trace:\n#0 /tmp/tmpu2_3sg4r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu2_3sg4r.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) && (is_int($x)\
    \ && is_int($y) && is_int($z));\n}\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3,\
    \ -2, 1) . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\necho any_int(5,\
    \ 2, 7) . \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br>1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$arr = [$x, $y, $z];\n\t$sum = $x + $y + $z;\n\t\n\tforeach ($arr as $value)\
    \ {\n\t\tif(!is_int($value)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tforeach\
    \ ($arr as $value) {\n\t\tif($value === $sum - $value - $value) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\n\necho any_int(5, 2, 7);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfrm_3d7.php:39\n\
    Stack trace:\n#0 /tmp/tmpdfrm_3d7.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdfrm_3d7.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif($x == ($y + $z) || $y == ($x + $z) || $z == ($x + $y)) {\n\t\tif($x == floor($x)\
    \ && $y == floor($y) && $z == floor($z)) {\n\t\t\treturn true;\n\t\t} else {\n\
    \t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp43rr72r.php:40\n\
    Stack trace:\n#0 /tmp/tmpp43rr72r.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpp43rr72r.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) && is_int($x)\
    \ && is_int($y) && is_int($z);\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x === $y + $z || $y ===\
    \ $x + $z || $z === $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n      if ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n        return true;\n      } else {\n  \
    \      return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\
    \  //or\n  function any_int2($x, $y, $z) {\n    if (is_int($x) && is_int($y) &&\
    \ is_int($z)) {\n      if (in_array($x + $y, [$z, $x, $y]) || in_array($x + $z,\
    \ [$y, $x, $z]) || in_array($y + $z, [$x, $y, $z])) {\n        return true;\n\
    \      } else {\n        return false;\n      }\n    } else {\n      return false;\n\
    \    }\n  }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) {\n\t\techo 'True';\n\
    \t} else {\n\t\techo 'False';\n\t}\n}\nany_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "TrueTrue\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk11cqdb.php:23\n\
    Stack trace:\n#0 /tmp/tmpzk11cqdb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzk11cqdb.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) {\n\t\tif ((is_int($x))\
    \ && (is_int($y)) && (is_int($z))) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\
    \treturn false;\n\t}\n}\n\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3,\
    \ 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpia0v_hz8.php:34\n\
    Stack trace:\n#0 /tmp/tmpia0v_hz8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpia0v_hz8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z) {\n\t\treturn true;\n\t} elseif ($y == $x + $z) {\n\t\treturn\
    \ true;\n\t} elseif ($z == $x + $y) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\n\
    echo any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghcq2hjv.php:32\n\
    Stack trace:\n#0 /tmp/tmpghcq2hjv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpghcq2hjv.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn $x + $y == $z || $x + $z == $y || $y + $z == $x ? \"True\" : \"False\"\
    ;\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"\
    <br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True<br>False<br>True<br>False\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2d7tcvai.php:25\nStack trace:\n#0 /tmp/tmp2d7tcvai.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2d7tcvai.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) ? $x+$y == $z || $x+$z == $y\
    \ || $y+$z == $x : false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (is_int($x) && is_int($y) && is_int($z)) ? $x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y : false;\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x == $y + $z || $y\
    \ == $x + $z || $z == $x + $y) {\n      return true;\n    } else {\n      return\
    \ false;\n    }\n  } else {\n    return false;\n  }\n}\n\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    \nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $sum_x_y = $x + $y;\n    $sum_x_z = $x + $z;\n    $sum_y_z = $y + $z;\n \
    \   if ($sum_x_y == $z || $sum_x_z == $y || $sum_y_z == $x) {\n        if (is_int($x)\
    \ && is_int($y) && is_int($z)) {\n            return true;\n        }\n    } else\
    \ {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\\n\";\n\
    echo any_int(3, 2, 2);\necho \"\\n\";\necho any_int(3, -2, 1);\necho \"\\n\";\n\
    echo any_int(3.6, -2.2, 2);\necho \"\\n\";\nfunction candidate(...$args) {\n \
    \   return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_7jvgjm.php:37\n\
    Stack trace:\n#0 /tmp/tmpm_7jvgjm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpm_7jvgjm.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$numbers = array ($x, $y, $z);\n\t$num_count = count($numbers);\n\t$x = $numbers[0];\n\
    \t$y = $numbers[1];\n\t$z = $numbers[2];\n\tsort($numbers);\n\tif ($num_count\
    \ == 3 && is_int($x) && is_int($y) && is_int($z)) {\n\t\tif (($numbers[2] == $numbers[0]\
    \ + $numbers[1]) || ($numbers[1] == $numbers[0] + $numbers[2]) || ($numbers[0]\
    \ == $numbers[1] + $numbers[2])) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\
    \treturn false;\n\t\t}\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\necho any_int(3,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$sum = $x + $y + $z;\n\t$array = array($x, $y, $z);\n\tfor ($i=0; $i < 3; $i++)\
    \ { \n\t\tif ($array[$i] === $sum - $array[$i] && is_int($array[$i])) {\n\t\t\t\
    return true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho any_int(3, 2, 2) . \"\\n\"\
    ;\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1uqwwoag.php:27\n\
    Stack trace:\n#0 /tmp/tmp1uqwwoag.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1uqwwoag.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmiob0jeg.php:27\n\
    Stack trace:\n#0 /tmp/tmpmiob0jeg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmiob0jeg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) and is_int($y) and is_int($z)) {\n\t\tif ($x+$y==$z) {\n\t\t\t\
    return \"true\";\n\t\t}\n\t\telseif ($x+$z==$y) {\n\t\t\treturn \"true\";\n\t\t\
    }\n\t\telseif ($y+$z==$x) {\n\t\t\treturn \"true\";\n\t\t}\n\t\telse {\n\t\t\t\
    return \"false\";\n\t\t}\n\t}\n\telse {\n\t\treturn \"false\";\n\t}\n}\necho any_int(5,\
    \ 2, 7).\"<br>\";\necho any_int(3, 2, 2).\"<br>\";\necho any_int(3, -2, 1).\"\
    <br>\";\necho any_int(3.6, -2.2, 2).\"<br>\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "true<br>false<br>true<br>false<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7covk6c6.php:38\nStack trace:\n#0 /tmp/tmp7covk6c6.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7covk6c6.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x+$y==$z) return true;\n\tif ($x+$z==$y) return true;\n\tif ($y+$z==$x)\
    \ return true;\n\treturn false;\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4ekjv51.php:23\n\
    Stack trace:\n#0 /tmp/tmpd4ekjv51.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpd4ekjv51.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if(is_int($x) && is_int($y) && is_int($z)) {\n    if($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n      return true;\n    }\n  }\n  return false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7) . PHP_EOL;\n\
    echo any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6,\
    \ -2.2, 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dno_cye.php:28\n\
    Stack trace:\n#0 /tmp/tmp8dno_cye.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8dno_cye.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$sum = $x + $y + $z;\n\t$arr = [$x, $y, $z];\n\t$arr2 = [$x, $y, $z];\n\tfor\
    \ ($i=0; $i < count($arr); $i++) { \n\t\t$arr2[$i] = $sum - $arr[$i];\n\t}\n\t\
    for ($i=0; $i < count($arr); $i++) { \n\t\tif ($arr[$i] == $arr2[$i]) {\n\t\t\t\
    return true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpedxu9w50.php:32\n\
    Stack trace:\n#0 /tmp/tmpedxu9w50.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpedxu9w50.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if($x == $y + $z || $y == $x + $z || $z == $x + $y){\n        if(is_int($x)\
    \ && is_int($y) && is_int($z)){\n            return true;\n        }\n    }\n\
    \    return false;\n}\necho any_int(5, 2, 7);\necho \"\\n\";\necho any_int(3,\
    \ 2, 2);\necho \"\\n\";\necho any_int(3, -2, 1);\necho \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2);\necho \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn ($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y);\n}\necho any_int(3,\
    \ -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwl2b51u.php:23\n\
    Stack trace:\n#0 /tmp/tmpkwl2b51u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkwl2b51u.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return ( ( $x + $y == $z ) || ( $x + $z == $y ) || ( $y + $z == $x ) ) && (\
    \ is_int($x) && is_int($y) && is_int($z) );\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $sum = $x + $y + $z;\n    if (is_int($x) && is_int($y) && is_int($z)) {\n\
    \        if ($x == $sum || $y == $sum || $z == $sum) {\n            return true;\n\
    \        } else {\n            return false;\n        }\n    } else {\n      \
    \  return false;\n    }\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2307yxj.php:27\n\
    Stack trace:\n#0 /tmp/tmpf2307yxj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf2307yxj.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63rtaix8.php:25\n\
    Stack trace:\n#0 /tmp/tmp63rtaix8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp63rtaix8.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  $arr = [$x, $y, $z];\n  $result = array_sum($arr) - max($arr);\n  return max($arr)\
    \ == $result && max($arr) == (int) max($arr);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc4fb0e4.php:22\n\
    Stack trace:\n#0 /tmp/tmpuc4fb0e4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpuc4fb0e4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && (\n\t\t$x === $y + $z ||\n\
    \t\t$y === $x + $z ||\n\t\t$z === $x + $y\n\t);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf5ld_fc.php:27\n\
    Stack trace:\n#0 /tmp/tmpaf5ld_fc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpaf5ld_fc.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y + $z\
    \ || $y == $x + $z || $z == $x + $y) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(1, 2, 3);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqi360sa.php:25\n\
    Stack trace:\n#0 /tmp/tmpqqi360sa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqqi360sa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if(is_int($x)&&is_int($y)&&is_int($z)){\n        if($x==$y+$z||$y==$x+$z||$z==$x+$y){\n\
    \            return true;\n        }\n    }\n    return false;\n}\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) or ($x + $z == $y) or ($y + $z == $x)) {\n\t\treturn true;\n\
    \t}\n\telse {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\"\
    ;\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h7e1phh.php:34\n\
    Stack trace:\n#0 /tmp/tmp5h7e1phh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5h7e1phh.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return $x + $y == $z || $x + $z == $y || $y + $z == $x;\n}\necho any_int(5,\
    \ 2, 7);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3yi9duh.php:21\n\
    Stack trace:\n#0 /tmp/tmp_3yi9duh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_3yi9duh.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && (($x == $y + $z) || ($y ==\
    \ $x + $z) || ($z == $x + $y));\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$arr = array($x, $y, $z);\n\tsort($arr);\n\t\n\t$sum = $arr[0] + $arr[1];\n\t\
    $sum_as_string = (string)$sum;\n\t$sum_length = strlen($sum_as_string);\n\t\n\t\
    $diff = $arr[2] - $sum;\n\t$diff_as_string = (string)$diff;\n\t$diff_length =\
    \ strlen($diff_as_string);\n\t\n\treturn $diff_length <= $sum_length;\n}\n\necho\
    \ any_int(5, 2, 7) ? \"true\" : \"false\"; // true\necho any_int(3, 2, 2) ? \"\
    true\" : \"false\"; // false\necho any_int(3, -2, 1) ? \"true\" : \"false\"; //\
    \ true\necho any_int(3.6, -2.2, 2) ? \"true\" : \"false\"; // false\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "truefalsetruetrue\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_h823com.php:36\n\
    Stack trace:\n#0 /tmp/tmp_h823com.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_h823com.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return ($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x);\n}\necho any_int(5,\
    \ 2, 7) ? \"true\" : \"false\";\necho \"<br>\";\necho any_int(3, 2, 2) ? \"true\"\
    \ : \"false\";\necho \"<br>\";\necho any_int(3, -2, 1) ? \"true\" : \"false\"\
    ;\necho \"<br>\";\necho any_int(3.6, -2.2, 2) ? \"true\" : \"false\";\necho \"\
    <br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "true<br>false<br>true<br>false<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwwgifemg.php:28\nStack trace:\n#0 /tmp/tmpwwgifemg.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwwgifemg.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif($x == $y + $z) {\n\t\treturn true;\n\t} elseif($y == $x + $z) {\n\t\treturn\
    \ true;\n\t} elseif($z == $x + $y) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2)\
    \ . PHP_EOL;\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4myinmzu.php:32\n\
    Stack trace:\n#0 /tmp/tmp4myinmzu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4myinmzu.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && (($x == $y + $z) || ($y ==\
    \ $x + $z) || ($z == $x + $y));\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$isAny = false;\n\tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif (($x\
    \ == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) {\n\t\t\t$isAny = true;\n\
    \t\t}\n\t}\n\treturn $isAny;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n      if ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n        return true;\n      } else {\n  \
    \      return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\
    \  echo any_int(2, 3, 6) . \"\\n\";\n  echo any_int(2, 4, 2) . \"\\n\";\n  echo\
    \ any_int(5, 4, 1) . \"\\n\";\n  echo any_int(1, 2, 3.2) . \"\\n\";\n  ?>\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n1\n1\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\tif (is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n\t\t\treturn \"true\";\n\t\t}\n\t}\n\telse {\n\t\
    \treturn \"false\";\n\t}\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_xcr9q3.php:26\n\
    Stack trace:\n#0 /tmp/tmp6_xcr9q3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6_xcr9q3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $int = (is_int($x) && is_int($y) && is_int($z));\n    $sum = (($x + $y) ==\
    \ $z || ($x + $z) == $y || ($y + $z) == $x);\n    if ($int && $sum) {\n      \
    \  return \"True\";\n    } else {\n        return \"False\";\n    }\n}\necho any_int(3,\
    \ 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\necho \"<br>\";\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>True<br>False<br>True\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpblgbv2c4.php:31\nStack trace:\n#0 /tmp/tmpblgbv2c4.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpblgbv2c4.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if(!is_int($x) or !is_int($y) or !is_int($z)) {\n        return false;\n\
    \    } else {\n        if($x === $y + $z or $y === $x + $z or $z === $x + $y)\
    \ {\n            return true;\n        } else {\n            return false;\n \
    \       }\n    }\n}\necho \"<h1>Task-1</h1>\";\necho any_int(5, 2, 7) ? \"True\
    \ <br>\" : \"False <br>\";\necho any_int(3, 2, 2) ? \"True <br>\" : \"False <br>\"\
    ;\necho any_int(3, -2, 1) ? \"True <br>\" : \"False <br>\";\necho any_int(3.6,\
    \ -2.2, 2) ? \"True <br>\" : \"False <br>\";\necho \"<hr>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <h1>Task-1</h1>True <br>False <br>True <br>False <br><hr>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $sum = $x + $y + $z;\n    $int = is_int($x);\n    $int2 = is_int($y);\n \
    \   $int3 = is_int($z);\n    if($int == 1 && $int2 == 1 && $int3 == 1) {\n   \
    \     return true;\n    }\n    else {\n        return false;\n    }\n}\necho any_int(5,\
    \ 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1)\
    \ . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7js241ix.php:35\n\
    Stack trace:\n#0 /tmp/tmp7js241ix.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7js241ix.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\
    \t\t}\n\t}else{\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args) {\n \
    \   return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif (($x + $y == $z) || ($x\
    \ + $z == $y) || ($y + $z == $x)) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\
    \treturn false;\n\t}\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_1q2xrb.php:27\n\
    Stack trace:\n#0 /tmp/tmpk_1q2xrb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk_1q2xrb.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljf82n_x.php:25\n\
    Stack trace:\n#0 /tmp/tmpljf82n_x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpljf82n_x.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$x = (int)$x;\n\t$y = (int)$y;\n\t$z = (int)$z;\n\t$sum = $x + $y;\n\tif($sum\
    \ == $z || $sum == $x || $sum == $y){\n\t\treturn true;\n\t}else{\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0927vnzf.php:26\n\
    Stack trace:\n#0 /tmp/tmp0927vnzf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0927vnzf.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, 2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return $x+$y === $z || $x+$z === $y || $y+$z === $x;\n}\necho any_int(3,\
    \ 2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\treturn \"True\"\
    ;\n\t} else {\n\t\treturn \"False\";\n\t}\n}\necho any_int(5, 2, 7);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpey4yd482.php:23\n\
    Stack trace:\n#0 /tmp/tmpey4yd482.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpey4yd482.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == ($y + $z) || $y == ($x + $z) || $z == ($x + $y)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7) . \"<br>\";\necho\
    \ any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7n_wm5x.php:28\n\
    Stack trace:\n#0 /tmp/tmpf7n_wm5x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpf7n_wm5x.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) && (is_int($x)\
    \ && is_int($y) && is_int($z));\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnroozj9.php:18\n\
    Stack trace:\n#0 /tmp/tmpdnroozj9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdnroozj9.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x===($y+$z) || $y===($x+$z) || $z===($x+$y)) {\n\t\tif (is_int($x) && is_int($y)\
    \ && is_int($z)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t\
    }\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if (is_int($x) == false || is_int($y) == false || is_int($z) == false) {\n\
    \    return false;\n  } elseif ($x + $y == $z || $x + $z == $y || $y + $z == $x)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\n\necho \"The 'any_int'\
    \ function is: <br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2) . \"<br>\";\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3, 2,\
    \ 2) . \"<br>\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The 'any_int' function is: <br>1<br><br>1<br><br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\n\nvar_dump(any_int(5, 2, 7));\nfunction candidate(...$args) {\n   \
    \ return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(!is_int($x) || !is_int($y) || !is_int($z)) {\n\t\treturn false;\n\t}\n\t\
    if($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $var_x = (int)$x;\n    $var_y = (int)$y;\n    $var_z = (int)$z;\n    if (($var_x\
    \ == $var_y + $var_z) || ($var_y == $var_x + $var_z) || ($var_z == $var_x + $var_y))\
    \ {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nTrue\nFalse\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp37gxo8ah.php:29\nStack trace:\n#0 /tmp/tmp37gxo8ah.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp37gxo8ah.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return $x === $y + $z || $y === $x + $z || $z === $x + $y;\n}\necho any_int(3,\
    \ 6, 9);\necho any_int(3, 3, 3);\necho any_int(2, 3, 4);\necho any_int(2, -3,\
    \ -4);\necho any_int(2, -3, 2);\necho any_int(2, 3, 2);\necho any_int(2, 4, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return $x == $y + $z || $y == $x + $z || $z == $x + $y &&\n    is_int($x) &&\
    \ is_int($y) && is_int($z);\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp331cw9p0.php:22\n\
    Stack trace:\n#0 /tmp/tmp331cw9p0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp331cw9p0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x == $y + $z || $y\
    \ == $x + $z || $z == $x + $y) {\n      return true;\n    } else {\n      return\
    \ false;\n    }\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x === $y + $z || $y\
    \ === $x + $z || $z === $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho any_int(5, 2, 7);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return $x+$y == $z || $x+$z == $y || $y+$z == $x;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4qn_h9c.php:20\n\
    Stack trace:\n#0 /tmp/tmpx4qn_h9c.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpx4qn_h9c.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) ? ($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y) : false;\n}\n\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t}\n\telse {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br/>\"\
    ;\necho any_int(3, 2, 2);\necho \"<br/>\";\necho any_int(3, -2, 1);\necho \"<br/>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br/><br/>1<br/>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkzqt9ji.php:32\n\
    Stack trace:\n#0 /tmp/tmpwkzqt9ji.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwkzqt9ji.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        if (is_int($x)\
    \ && is_int($y) && is_int($z)) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn $x + $y == $z || $x + $z == $y || $y + $z == $x ? true : false;\n}\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz36f1pna.php:20\n\
    Stack trace:\n#0 /tmp/tmpz36f1pna.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpz36f1pna.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif(($x == $y + $z) || ($y ==\
    \ $x + $z) || ($z == $x + $y)){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn\
    \ false;\n\t\t}\n\t}else{\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  return is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return $x + $y == $z || $x + $z == $y || $y + $z == $x ? true : false;\n\
    \  }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4ewl4lz.php:20\n\
    Stack trace:\n#0 /tmp/tmpl4ewl4lz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl4ewl4lz.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return $x == $y + $z || $y == $x + $z || $z == $x + $y ? \"True\" : \"False\"\
    ;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0c76sgs.php:19\n\
    Stack trace:\n#0 /tmp/tmpe0c76sgs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpe0c76sgs.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if(!is_int($x) || !is_int($y) || !is_int($z)) {\n    return false;\n  } elseif\
    \ ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n    return true;\n  } else\
    \ {\n    return false;\n  }\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3,\
    \ 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\necho \"<br>\";\necho any_int(3, 1, 2);\necho \"<br>\";\necho any_int(3,\
    \ 2, 1);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>1<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $x = (int)$x;\n    $y = (int)$y;\n    $z = (int)$z;\n    $sum = $x + $y;\n\
    \    if($x == $sum || $y == $sum || $z == $sum){\n        return true;\n    }else\
    \ {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl794hb0n.php:27\n\
    Stack trace:\n#0 /tmp/tmpl794hb0n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl794hb0n.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && ( $x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y );\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1)\
    \ . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    $sum = $x + $y + $z;\n    if ($x == $sum / 3 && is_int($x) && is_int($y)\
    \ && is_int($z)) {\n        return true;\n    } else if ($y == $sum / 3 && is_int($x)\
    \ && is_int($y) && is_int($z)) {\n        return true;\n    } else if ($z == $sum\
    \ / 3 && is_int($x) && is_int($y) && is_int($z)) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"<br>\"\
    ;\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(9, 7, 7);\necho \"\
    <br>\";\necho any_int(9, 7, -1);\necho \"<br>\";\necho any_int(9, -4, 4);\necho\
    \ \"<br>\";\necho any_int(9, -4, -4);\necho \"<br>\";\necho any_int(9, -4, 4.5);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br><br><br><br><br><br><br><br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpug8up3ml.php:49\nStack trace:\n#0 /tmp/tmpug8up3ml.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpug8up3ml.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$xy = $x + $y;\n\t$yz = $y + $z;\n\t$xz = $x + $z;\n\tif ($xz == $y || $yz ==\
    \ $x || $xy == $z){\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    echo any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7howj1p.php:31\n\
    Stack trace:\n#0 /tmp/tmpm7howj1p.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm7howj1p.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x % 1 == 0 && $y % 1 == 0 && $z % 1 == 0) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\
    \ else {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_5yp_0i.php:29\n\
    Stack trace:\n#0 /tmp/tmph_5yp_0i.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph_5yp_0i.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if ($x == ($y + $z) || $y == ($x + $z) || $z == ($x + $y)) {\n    if (is_int($x)\
    \ && is_int($y) && is_int($z)) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho \"<br>\";\necho\
    \ \"<br>\";\necho \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br><br><br><br><br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppso9vidc.php:35\nStack trace:\n#0 /tmp/tmppso9vidc.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmppso9vidc.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn ($x === $y + $z) || ($y === $x + $z) || ($z === $x + $y) && (gettype($x)\
    \ == 'integer') && (gettype($y) == 'integer') && (gettype($z) == 'integer');\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn \"True\";\n\t\t}\n\t}\n\treturn \"\
    False\";\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjntlvzhh.php:24\n\
    Stack trace:\n#0 /tmp/tmpjntlvzhh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjntlvzhh.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && ( $x+$y === $z || $x+$z ===\
    \ $y || $y+$z === $x );\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3,\
    \ 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\necho \"<br>\";\necho any_int(5, 3, 7);\necho \"<br>\";\necho any_int(1,\
    \ 2, 3);\necho \"<br>\";\necho any_int(1, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ 2.2, 2);\necho \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br><br>1<br><br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if (($x + $y) == $z || ($x + $z) == $y || ($y + $z) == $x) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\necho any_int(5, 2, 7) . \"\\n\";\necho\
    \ any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3j6yst7s.php:28\n\
    Stack trace:\n#0 /tmp/tmp3j6yst7s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3j6yst7s.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \  if(is_int($x) && is_int($y) && is_int($z)) {\n    if($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n      return True;\n    }\n  }\n  return False;\n\
    }\necho any_int(5, 2, 7).\"\\n\";\necho any_int(3, 2, 2).\"\\n\";\necho any_int(3,\
    \ -2, 1).\"\\n\";\necho any_int(3.6, -2.2, 2).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$sum = $x + $y + $z;\n\tif ($x % 1 != 0 || $y % 1 != 0 || $z % 1 != 0) {\n\t\
    \treturn false;\n\t} elseif ($x == $sum || $y == $sum || $z == $sum) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hcmnanr.php:29\n\
    Stack trace:\n#0 /tmp/tmp9hcmnanr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9hcmnanr.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x == ($y + $z) && is_int($x) && is_int($y) && is_int($z)) {\n      \
    \  return true;\n    } elseif ($y == ($x + $z) && is_int($x) && is_int($y) &&\
    \ is_int($z)) {\n        return true;\n    } elseif ($z == ($x + $y) && is_int($x)\
    \ && is_int($y) && is_int($z)) {\n        return true;\n    } else {\n       \
    \ return false;\n    }\n}\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x == $y + $z || $y == $x + $z || $z == $x + $y) && (gettype($x) == 'integer'\
    \ && gettype($y) == 'integer' && gettype($z) == 'integer')) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \t$result = false;\n\tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x\
    \ === $y + $z || $y === $x + $z || $z === $x + $y) {\n\t\t\t$result = true;\n\t\
    \t}\n\t}\n\treturn $result;\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3,\
    \ 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn \n\t\tis_int($x) && is_int($y) && is_int($z)\n\t\t&& (\n\t\t\t$x + $y\
    \ == $z\n\t\t\t|| $x + $z == $y\n\t\t\t|| $y + $z == $x\n\t\t)\n\t;\n}\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(gettype($x) === \"integer\" && gettype($y) === \"integer\" && gettype($z)\
    \ === \"integer\") {\n\t\tif($x + $y === $z || $x + $z === $y || $y + $z === $x)\
    \ {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\
    \t\treturn false;\n\t}\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif($x + $y == $z) {\n\t\treturn true;\n\t} elseif($x + $z == $y) {\n\t\treturn\
    \ true;\n\t} elseif($y + $z == $x) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"\
    <br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek0zomo3.php:32\n\
    Stack trace:\n#0 /tmp/tmpek0zomo3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpek0zomo3.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception

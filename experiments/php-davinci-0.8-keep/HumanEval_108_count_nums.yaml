name: HumanEval_108_count_nums
language: php
prompt: "<?php\n// Write a function count_nums which takes an array of integers and\
  \ returns\n// the number of elements which has a sum of digits > 0.\n// If a number\
  \ is negative, then its first signed digit will be negative:\n// e.g. -123 has signed\
  \ digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1, 11, -11])\
  \ == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr) {\n"
tests: "function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0, 1,\
  \ 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $digits\
    \ = 0;\n    if ($arr[$i] < 0) {\n      $digits += abs($arr[$i] % 10);\n      $arr[$i]\
    \ = abs($arr[$i]);\n    }\n    while ($arr[$i] > 0) {\n      $digits += $arr[$i]\
    \ % 10;\n      $arr[$i] = floor($arr[$i] / 10);\n    }\n    if ($digits > 0) $count++;\n\
    \  }\n  return $count;\n}\n\necho count_nums([]) . \"\\n\"; // 0\necho count_nums([-1,\
    \ 11, -11]) . \"\\n\"; // 1\necho count_nums([1, 1, 2]) . \"\\n\"; // 3\n", " \
    \   // TODO\n}", "  $arrNums = array_filter($arr, function($n) {\n    return ($n\
    \ > 0) || ($n < 0 && abs($n) > 0);\n  });\n  return count($arrNums);\n}", "  \
    \  // $sum = 0;\n    // for ($i = 0; $i < count($arr); $i++) {\n    //     if\
    \ ($arr[$i] < 0) {\n    //         $sum += $arr[$i] * -1;\n    //     } else {\n\
    \    //         $sum += $arr[$i];\n    //     }\n    // }\n    // return $sum;\n\
    \    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $sum = 0;\n\
    \        if ($arr[$i] < 0) {\n            $digits = str_split($arr[$i] * -1);\n\
    \        } else {\n            $digits = str_split($arr[$i]);\n        }\n   \
    \     for ($j = 0; $j < count($digits); $j++) {\n            $sum += $digits[$j];\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "\t$count = 0;\n\tforeach ($arr as $key => $value) {\n\
    \t\t$sum = 0;\n\t\t$signed = $value;\n\t\tif ($value < 0) {\n\t\t\t$signed = $value\
    \ * -1;\n\t\t}\n\t\tdo {\n\t\t\t$last_digit = $signed % 10;\n\t\t\t$sum += $last_digit;\n\
    \t\t\t$signed = floor($signed / 10);\n\t\t} while ($signed >= 1);\n\t\tif ($sum\
    \ > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "  // your code\
    \ here\n}", "    $count = 0;\n    foreach ($arr as $num) {\n        $count +=\
    \ sum_of_digits($num) > 0 ? 1 : 0;\n    }\n    return $count;\n}\n", "    if (empty($arr))\
    \ {\n        return 0;\n    }\n    $result = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = array_sum(array_map(function($value) {\n            return abs($value);\n\
    \        }, str_split($num)));\n        if ($sum > 0) {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\n\necho '<pre>';\nvar_dump(count_nums([]));\n\
    var_dump(count_nums([-1, 11, -11]));\nvar_dump(count_nums([1, 1, 2]));\necho '</pre>';",
  "  return 0;\n}\n", "    $count = 0;\n    foreach ($arr as $number) {\n        $sum\
    \ = 0;\n        if ($number < 0) {\n            $sum += $number * -1 % 10;\n \
    \           $number = $number * -1;\n        }\n        for ($i = 0; $i < strlen($number);\
    \ $i++) {\n            $sum += substr($number, $i, 1);\n        }\n        if\
    \ ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "    //\n}", "    $arr = array_map(function($i) {\n        if ($i < 0)\n\
    \            return -$i;\n        return $i;\n    }, $arr);\n    $arr = array_map('array_sum',\
    \ array_map('str_split', $arr));\n    return count(array_filter($arr, function($i)\
    \ {\n        return $i > 0;\n    }));\n}\n", "  return array_sum(array_map(function($el)\
    \ {\n    return array_sum(array_map(function($n) {\n      return abs($n);\n  \
    \  }, str_split($el)));\n  }, $arr)) > 0 ? count($arr) : 0;\n}", "    $counter\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $digitsSum = 0;\n\
    \        $number = $arr[$i];\n        if ($number < 0) {\n            $number\
    \ = -$number;\n        }\n        while ($number > 0) {\n            $digitsSum\
    \ += $number % 10;\n            $number = (int)($number / 10);\n        }\n  \
    \      if ($digitsSum > 0) {\n            $counter++;\n        }\n    }\n    return\
    \ $counter;\n}", "  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0)\
    \ {\n      $digits = array_map(function($n) {\n        return intval($n);\n  \
    \    }, str_split(abs($num)));\n      $digits[0] *= -1;\n    } else {\n      $digits\
    \ = array_map(function($n) {\n        return intval($n);\n      }, str_split($num));\n\
    \    }\n    $count += count(array_filter($digits, function($x) {\n      return\
    \ $x > 0;\n    }));\n  }\n  return $count;\n}\n\necho '<p>count_nums([1, 11, -11])\
    \ = ' . count_nums([1, 11, -11]) . '</p>';\necho '<p>count_nums([1, 1, 2]) = '\
    \ . count_nums([1, 1, 2]) . '</p>';\necho '<p>count_nums([-1, -11, -11]) = ' .\
    \ count_nums([-1, -11, -11]) . '</p>';\necho '<p>count_nums([]) = ' . count_nums([])\
    \ . '</p>';\n", "\t$ret = 0;\n\tforeach ($arr as $n) {\n\t\t$s = 0;\n\t\t$x =\
    \ abs($n);\n\t\twhile ($x > 0) {\n\t\t\t$s += $x % 10;\n\t\t\t$x /= 10;\n\t\t\
    }\n\t\tif ($s > 0) {\n\t\t\t$ret++;\n\t\t}\n\t}\n\treturn $ret;\n}", "\t$n = 0;\n\
    \tforeach ($arr as $number) {\n\t\t$number = (string) abs($number);\n\t\t$sum\
    \ = 0;\n\t\tfor ($i = 0; $i < strlen($number); $i++) {\n\t\t\t$sum += $number[$i];\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$n++;\n\t\t}\n\t}\n\treturn $n;\n}\n", "   \
    \ $c = 0;\n    foreach ($arr as $n) {\n        $s = 0;\n        $n = abs($n);\n\
    \        while ($n) {\n            $s += $n % 10;\n            $n /= 10;\n   \
    \     }\n        if ($s) $c++;\n    }\n    return $c;\n}\n", "\t$count = 0;\n\t\
    foreach ($arr as $value) {\n\t\t$digits = [];\n\t\twhile ($value != 0) {\n\t\t\
    \tarray_push($digits, $value % 10);\n\t\t\t$value = floor($value / 10);\n\t\t\
    }\n\t\t$sum = 0;\n\t\tforeach ($digits as $v) {\n\t\t\t$sum += $v;\n\t\t}\n\t\t\
    if ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $returnVal\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($value != 0) {\n         \
    \   $returnVal++;\n        }\n    }\n    return $returnVal;\n}", "\n}", "  $count\
    \ = 0;\n  foreach ($arr as $num) {\n    $digits = get_digits($num);\n    $sum\
    \ = array_sum($digits);\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n", "    if (!$arr) {\n        return 0;\n    }\n\n    return array_reduce($arr,\
    \ function ($carry, $item) {\n        $digits = abs($item);\n        $sum = 0;\n\
    \        while ($digits > 0) {\n            $sum += $digits % 10;\n          \
    \  $digits = (int) ($digits / 10);\n        }\n\n        if ($sum > 0) {\n   \
    \         return $carry + 1;\n        }\n\n        return $carry;\n    }, 0);\n\
    }\n\necho count_nums([]) == 0 ? 'PASS' : 'FAIL';\necho count_nums([-1, 11, -11])\
    \ == 1 ? 'PASS' : 'FAIL';\necho count_nums([1, 1, 2]) == 3 ? 'PASS' : 'FAIL';",
  "  $signed_sum = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $n = $arr[$i];\n\
    \    if ($n < 0) {\n      $sign = -1;\n      $n = -$n;\n    } else {\n      $sign\
    \ = 1;\n    }\n    $sum = 0;\n    while ($n > 0) {\n      $sum += $n % 10;\n \
    \     $n = (int)($n / 10);\n    }\n    $signed_sum += $sign * $sum;\n  }\n  return\
    \ max(0, $signed_sum);\n}\n\n$arr = [];\necho count_nums($arr) . \"\\n\";\n$arr\
    \ = [-1, 11, -11];\necho count_nums($arr) . \"\\n\";\n$arr = [1, 1, 2];\necho\
    \ count_nums($arr) . \"\\n\";", '}', "    $count = 0;\n    foreach ($arr as $element)\
    \ {\n        $sum = 0;\n        $digits = str_split($element);\n        if ($element\
    \ < 0) {\n            $sum += $digits[0];\n            array_shift($digits);\n\
    \        }\n        $sum += array_sum($digits);\n        if ($sum > 0) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}", "\n}\n", "\t$count\
    \ = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t$num = abs($num);\n\t\t\
    while ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = floor($num / 10);\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n",
  "  // your solution here\n  return '3';\n}", "\t$sum = array_sum($arr);\n\t$count\
    \ = 0;\n\tif ($sum === 0) {\n\t\t$count += 1;\n\t}\n\treturn $count;\n}\n", " \
    \   // Write your code here\n    $num_count = 0;\n    foreach ($arr as $number)\
    \ {\n        $string = $number;\n        $negative = false;\n        if ($number\
    \ < 0) {\n            $string = $number * -1;\n            $negative = true;\n\
    \        }\n        $sum = 0;\n        while ($string != 0) {\n            $sum\
    \ += $string % 10;\n            $string = floor($string / 10);\n        }\n  \
    \      if (($negative && $sum > 1) || (!$negative && $sum > 0)) {\n          \
    \  $num_count++;\n        }\n    }\n    return $num_count;\n}\n$arr = [-1, 11,\
    \ -11];\n$sum = count_nums($arr);\necho $sum;\n", "    $count = 0;\n    foreach\
    \ ($arr as $num) {\n        $count += count_num($num);\n    }\n    return $count;\n\
    }\n", "    // TODO: implement this function\n\n    $count = 0;\n    $arrSize =\
    \ count($arr);\n\n    for ($i = 0; $i < $arrSize; $i++) {\n        $number = abs($arr[$i]);\n\
    \        $number_string = (string)$number;\n        $total = 0;\n\n        for\
    \ ($j = 0; $j < strlen($number_string); $j++) {\n            $total += $number_string[$j];\n\
    \        }\n\n        if ($total > 0) {\n            $count++;\n        }\n  \
    \  }\n\n    return $count;\n}\n", "    // YOUR CODE HERE\n}", "  $result = 0;\n\
    \  foreach ($arr as $value) {\n    if ($value < 0) {\n      $value = substr($value,\
    \ 1);\n    }\n    if (array_sum(str_split($value)) > 0) {\n      $result++;\n\
    \    }\n  }\n  return $result;\n}\n", "\t$count = 0;\n\tforeach ($arr as $key\
    \ => $value) {\n\t\t$sum = 0;\n\t\tfor ($i=0; $i < strlen($value); $i++) { \n\t\
    \t\t$sum += $value[$i];\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\necho count_nums([-1, 11, -11]) . PHP_EOL;\necho count_nums([1,\
    \ 1, 2]) . PHP_EOL;\necho count_nums([]) . PHP_EOL;", "\treturn 0;\n}", "    //\
    \ Your code here\n}", "  $count = 0;\n  foreach ($arr as $int) {\n    if ($int\
    \ < 0) {\n      $int = abs($int);\n      $int = str_split($int);\n      $int[0]\
    \ = -$int[0];\n    } else {\n      $int = str_split($int);\n    }\n    $sum =\
    \ 0;\n    foreach ($int as $num) {\n      $sum += $num;\n    }\n    if ($sum >\
    \ 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n", "    $count = 0;\n\
    \    foreach ($arr as $number) {\n        $abs = abs($number);\n        $sum =\
    \ 0;\n        while ($abs) {\n            $sum += $abs % 10;\n            $abs\
    \ = (int)($abs / 10);\n        }\n        if ($sum) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "\n}\n\necho \"count_nums([]) ==\
    \ 0: \";\necho count_nums([]) == 0 ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([-1,\
    \ 11, -11]) == 1: \";\necho count_nums([-1, 11, -11]) == 1 ? \"ok\\n\" : \"not\
    \ ok\\n\";\n\necho \"count_nums([1, 1, 2]) == 3: \";\necho count_nums([1, 1, 2])\
    \ == 3 ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([0, 0, 0]) == 0: \";\n\
    echo count_nums([0, 0, 0]) == 0 ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([1,\
    \ 1, -1]) == 3: \";\necho count_nums([1, 1, -1]) == 3 ? \"ok\\n\" : \"not ok\\\
    n\";\n\necho \"count_nums([-1, -1, -1]) == 1: \";\necho count_nums([-1, -1, -1])\
    \ == 1 ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([-1, -1, 2]) == 2: \"\
    ;\necho count_nums([-1, -1, 2]) == 2 ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([-1,\
    \ 11, -11, 9999]) == 2: \";\necho count_nums([-1, 11, -11, 9999]) == 2 ? \"ok\\\
    n\" : \"not ok\\n\";\n\necho \"count_nums([0, 0, 1, 1, 2, -1, -1, -1, 11, -11,\
    \ 9999]) == 7: \";\necho count_nums([0, 0, 1, 1, 2, -1, -1, -1, 11, -11, 9999])\
    \ == 7 ? \"ok\\n\" : \"not ok\\n\";\n\necho \"count_nums([-1, -1, -1, -", "\t\
    $result = 0;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\t$sum = 0;\n\t\t$str\
    \ = strval($arr[$i]);\n\t\tfor ($j = 0; $j < strlen($str); $j++) {\n\t\t\t$sum\
    \ += intval($str[$j]);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$result++;\n\t\t}\n\t\
    }\n\treturn $result;\n}\n\necho count_nums([1, 2, -4]) . \"\\n\";\necho count_nums([])\
    \ . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\\n\";\necho count_nums([1, 1,\
    \ 2]) . \"\\n\";\n", "  return 0;\n}\n\necho \"count_nums(): \";\necho count_nums([])\
    \ . PHP_EOL;\necho count_nums([-1, 11, -11]) . PHP_EOL;\necho count_nums([1, 1,\
    \ 2]) . PHP_EOL;\necho PHP_EOL;", "    $n = 0;\n    foreach ($arr as $a) {\n \
    \       $d = get_digits($a);\n        $sum = array_sum($d);\n        if ($sum\
    \ > 0) {\n            $n++;\n        }\n    }\n    return $n;\n}\n", "    // your\
    \ code here\n    return 0;\n}\n", "  // Write your code here\n}", "    $count\
    \ = 0;\n    foreach ($arr as $val) {\n        $sum = 0;\n        if ($val < 0)\
    \ {\n            $sum = $val;\n        }\n        while ($val) {\n           \
    \ $sum += $val % 10;\n            $val = floor($val / 10);\n        }\n      \
    \  if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho count_nums([]) . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\\n\";\n\
    echo count_nums([1, 1, 2]) . \"\\n\";", "    $ret = 0;\n    foreach ($arr as $n)\
    \ {\n        if ($n === 0) {\n            continue;\n        }\n        $s = array_sum(str_split(abs($n)));\n\
    \        if ($s > 0) {\n            $ret++;\n        }\n    }\n    return $ret;\n\
    }", "    // TODO\n}\ncount_nums([1, 1, 2]);\n", "  if(count($arr) === 0) return\
    \ 0;\n  $count = 0;\n  foreach($arr as $num) {\n    $sum = 0;\n    if($num < 0)\
    \ {\n      $sum += abs($num % 10);\n      $num = floor($num / 10);\n    }\n  \
    \  while($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if($sum > 0) $count++;\n  }\n  return $count;\n}\n", "    if (empty($arr))\
    \ {\n        return 0;\n    }\n\n    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $sum -= $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n        if ($num\
    \ < 0) {\n            $num = -$num;\n        }\n        $num_str = (string) $num;\n\
    \        $sum = 0;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n    \
    \        $sum += $num_str[$i];\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n", "    $count = 0;\n\
    \    foreach ($arr as $number) {\n        $number = abs($number);\n        $sum\
    \ = 0;\n        while ($number > 0) {\n            $sum += $number % 10;\n   \
    \         $number = intval($number / 10);\n        }\n        if ($sum > 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n", "    $counter\
    \ = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0)\
    \ {\n            $sum = $num * -1;\n        } else {\n            $sum = $num;\n\
    \        }\n        while ($sum >= 1) {\n            $sum -= 10;\n        }\n\
    \        if ($sum < 0) {\n            $counter++;\n        }\n    }\n    return\
    \ $counter;\n}", "  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0)\
    \ {\n      $num = -$num;\n    }\n    $sum = 0;\n    while ($num > 0) {\n     \
    \ $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    if ($sum > 0)\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho count_nums([]) .\
    \ \"\\n\"; // 0\necho count_nums([-1, 11, -11]) . \"\\n\"; // 1\necho count_nums([1,\
    \ 1, 2]) . \"\\n\"; // 3", "\t$count = 0;\n\t$sum = 0;\n\tforeach ($arr as $key\
    \ => $value) {\n\t\tif ($value < 0) {\n\t\t\t$value = str_replace('-', '', $value);\n\
    \t\t}\n\t\t$arr[$key] = str_split($value);\n\t\tforeach ($arr[$key] as $k => $v)\
    \ {\n\t\t\t$sum += $v;\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count += 1;\n\t\t}\n\
    \t\t$sum = 0;\n\t}\n\treturn $count;\n}", '}', "    $cnt = 0;\n    foreach ($arr\
    \ as $num) {\n        $s = 0;\n        while ($num != 0) {\n            $s +=\
    \ abs($num % 10);\n            $num /= 10;\n        }\n        if ($s > 0) {\n\
    \            $cnt++;\n        }\n    }\n    return $cnt;\n}", "\t//return 0;\n\
    \t// return array_reduce($arr, function($carry, $item) {\n\t// \treturn $carry\
    \ + (array_sum(str_split(abs($item))) > 0 ? 1 : 0);\n\t// }, 0);\n\t$count = 0;\n\
    \tforeach ($arr as $item) {\n\t\t$sum = 0;\n\t\t$abs = abs($item);\n\t\twhile\
    \ ($abs > 0) {\n\t\t\t$sum += $abs % 10;\n\t\t\t$abs = (int)($abs / 10);\n\t\t\
    }\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", " \
    \   // Your implementation goes here.\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num != 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $c = 0;\n    foreach ($arr as $num) {\n        $digits = str_split($num);\n\
    \        $digitsum = 0;\n        foreach ($digits as $digit) {\n            $digitsum\
    \ += $digit;\n        }\n        if ($digitsum > 0) {\n            $c++;\n   \
    \     }\n    }\n    return $c;\n}\n", "\t$count = 0;\n\tfor ($i = 0; $i < count($arr);\
    \ $i++) {\n\t\t$sum = 0;\n\t\t$x = $arr[$i];\n\t\twhile ($x != 0) {\n\t\t\t$digit\
    \ = $x % 10;\n\t\t\t$sum += $digit;\n\t\t\t$x = ($x - $digit) / 10;\n\t\t}\n\t\
    \tif ($sum > 0) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n}", "  $result\
    \ = 0;\n  foreach ($arr as $value) {\n    $result += sum_digit($value);\n  }\n\
    \  return $result;\n}\n", "  $total = 0;\n  foreach ($arr as $num) {\n    $sum\
    \ = 0;\n    $num *= $num < 0 ? -1 : 1;\n    while ($num > 0) {\n      $sum +=\
    \ $num % 10;\n      $num = floor($num / 10);\n    }\n    if ($sum > 0) {\n   \
    \   $total++;\n    }\n  }\n  return $total;\n}\n\necho \"count_nums([]) == 0:\
    \ \" . (count_nums([]) == 0 ? \"true\" : \"false\") . \"\\n\";\necho \"count_nums([-1,\
    \ 11, -11]) == 1: \" . (count_nums([-1, 11, -11]) == 1 ? \"true\" : \"false\"\
    ) . \"\\n\";\necho \"count_nums([1, 1, 2]) == 3: \" . (count_nums([1, 1, 2]) ==\
    \ 3 ? \"true\" : \"false\") . \"\\n\";", "\t$total = 0;\n\tforeach ($arr as $num)\
    \ {\n\t\t$num = abs($num);\n\t\twhile ($num >= 1) {\n\t\t\t$digit = $num % 10;\n\
    \t\t\t$total += $digit;\n\t\t\t$num = floor($num / 10);\n\t\t}\n\t}\n\treturn\
    \ $total;\n}\necho count_nums([1, 1, 2]).\"\\n\";", "    // YOUR CODE HERE\n}",
  "\n}", "  $count = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $sum\
    \ = array_sum(str_split($num));\n    } else {\n      $sum = array_sum(str_split(substr($num,\
    \ 1)));\n    }\n    if ($sum > 0) {\n      $count += 1;\n    }\n  }\n  return\
    \ $count;\n}", "    // STUDENT-TODO\n}\n", "    //echo \"count_nums($arr)==\"\
    ;\n    $count = 0;\n    foreach ($arr as $num) {\n        if (abs($num) < 10)\
    \ {\n            $count++;\n        } else {\n            $sum = 0;\n        \
    \    while ($num) {\n                $sum += abs($num % 10);\n               \
    \ $num = intval($num / 10);\n            }\n            if ($sum > 0) {\n    \
    \            $count++;\n            }\n        }\n    }\n    //echo \"$count\\\
    n\";\n    return $count;\n}\n", "\t$count = 0;\n\tif(empty($arr)){\n\t\t$count;\n\
    \t}\n\t$arr_length = count($arr);\n\tfor($i = 0; $i < $arr_length; $i++){\n\t\t\
    $sum = 0;\n\t\tif($arr[$i] < 0){\n\t\t\t$arr[$i] = -$arr[$i];\n\t\t}\n\t\twhile($arr[$i]\
    \ != 0){\n\t\t\t$rem = $arr[$i] % 10;\n\t\t\t$sum = $sum + $rem;\n\t\t\t$arr[$i]\
    \ = $arr[$i] / 10;\n\t\t}\n\t\tif($sum > 0){\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}\n", "    $output = 0;\n    foreach ($arr as $value) {\n    \
    \    if (sum_digits($value) > 0) {\n            $output++;\n        }\n    }\n\
    \    return $output;\n}", "    $result = 0;\n    foreach ($arr as $int) {\n  \
    \      $digits = array_map('intval', str_split($int));\n        $result += (array_sum($digits)\
    \ > 0);\n    }\n    return $result;\n}\n", "    $count = 0;\n    foreach ($arr\
    \ as $key => $value) {\n        if($value < 0) {\n            $value = -1 * $value;\n\
    \        }\n        $currentSum = 0;\n        while ($value > 0) {\n         \
    \   $digit = $value % 10;\n            $currentSum += $digit;\n            $value\
    \ = (int)($value / 10);\n        }\n        if($currentSum > 0) {\n          \
    \  $count++;\n        }\n    }\n    return $count;\n}", "  if (empty($arr)) return\
    \ 0;\n  $sum_arr = [];\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num\
    \ < 0) {\n      $num = -$num;\n      $sum = -1;\n    }\n    for ($i = 0; $i <\
    \ strlen($num); $i++) {\n      $sum += $num[$i];\n    }\n    $sum_arr[] = $sum;\n\
    \  }\n  return count(array_filter($sum_arr, function($x) {\n    return $x > 0;\n\
    \  }));\n}\necho count_nums([]) . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\
    \\n\";\necho count_nums([1, 1, 2]) . \"\\n\";\n", "    $counter = 0;\n    foreach\
    \ ($arr as $num) {\n        $sum = 0;\n        $num = $num < 0 ? $num * -1 : $num;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $count += signed_digit_sum($value) > 0 ? 1 : 0;\n    }\n\
    \    return $count;\n}", "    return 0;\n}", "\t$count = 0;\n\tforeach ($arr as\
    \ $i) {\n\t\t$digits_sum = sum_digits($i);\n\t\tif ($digits_sum > 0) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}", "\t// $count = 0;\n\t// foreach ($arr\
    \ as $key => $value) {\n\t// \t$count += abs(array_sum(str_split($value)));\n\t\
    // }\n\t// return $count;\n\t$count = array_filter($arr, function($n) {\n\t\t\
    return array_sum(str_split($n)) > 0;\n\t});\n\treturn count($count);\n}\nprint_r(count_nums([]));\n\
    print_r(count_nums([-1, 11, -11]));\nprint_r(count_nums([1, 1, 2]));", "  // Your\
    \ code here!\n}", "    return array_reduce($arr, function($c, $i) {\n        return\
    \ $c + ($i > 0 || $i < 0 && abs($i) % 10 > 0 ? 1 : 0);\n    }, 0);\n}", "    $count\
    \ = 0;\n    $num = 0;\n    $sign = 0;\n    foreach ($arr as $value) {\n      \
    \  $num = $value;\n        $sign = $value;\n        $sum = 0;\n        if ($value\
    \ < 0) {\n            $sign = 0 - $value;\n        }\n        while ($num != 0)\
    \ {\n            $rem = $num % 10;\n            $sum = $sum + $rem;\n        \
    \    $num = (int)($num / 10);\n        }\n        if ($sum != 0 && $sign < 0)\
    \ {\n            $count = $count + 1;\n        } else if ($sum != 0 && $sign >\
    \ 0) {\n            $count = $count + 1;\n        }\n    }\n    return $count;\n\
    }\n\nclass Tests extends PHPUnit_Framework_TestCase {\n    public function testBaseCases()\
    \ {\n        $this->assertEquals(0, count_nums([]));\n        $this->assertEquals(1,\
    \ count_nums([-1, 11, -11]));\n        $this->assertEquals(3, count_nums([1, 1,\
    \ 2]));\n    }\n}\n\n$t = new Tests();\n$t->testBaseCases();", "  $num = 0;\n\
    \  foreach ($arr as $item) {\n    $sum = 0;\n    if ($item < 0) {\n      $item\
    \ = -$item;\n      $sum = -1;\n    }\n    while ($item > 0) {\n      $sum += $item\
    \ % 10;\n      $item = floor($item / 10);\n    }\n    if ($sum > 0) {\n      $num++;\n\
    \    }\n  }\n  return $num;\n}\necho count_nums([-1, 11, -11]) . \"\\n\";\necho\
    \ count_nums([1, 1, 2]) . \"\\n\";\n", "    $c = 0;\n    foreach ($arr as $n)\
    \ {\n        $d = 0;\n        if ($n < 0) $n = -$n;\n        for ($m = $n; $m\
    \ != 0; $m /= 10) $d += $m % 10;\n        if ($d > 0) $c++;\n    }\n    return\
    \ $c;\n}", "  $c = 0;\n  foreach ($arr as $n) {\n    $sum = 0;\n    if ($n < 0)\
    \ {\n      $sum += -1 * ($n % 10);\n      $n = floor($n / 10);\n    }\n    while\
    \ ($n > 0) {\n      $sum += $n % 10;\n      $n = floor($n / 10);\n    }\n    if\
    \ ($sum > 0) {\n      $c++;\n    }\n  }\n  return $c;\n}\n", "    $count = 0;\n\
    \    for ($i = 0; $i < count($arr); $i++) {\n        $sum = 0;\n        $num =\
    \ abs($arr[$i]);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = intval($num / 10);\n        }\n        if ($sum > 0) {\n \
    \           $count++;\n        }\n    }\n    return $count;\n}\n$arr = [1, 1,\
    \ 2];\necho count_nums($arr);\n", '}', "    $count = 0;\n    foreach ($arr as\
    \ $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $sum += $num;\n\
    \            $num = abs($num);\n        }\n        while ($num != 0) {\n     \
    \       $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n\
    \      $count += sum_digits(($num * -1)) > 0 ? 1 : 0;\n    } else {\n      $count\
    \ += sum_digits($num) > 0 ? 1 : 0;\n    }\n  }\n  return $count;\n}\n", "    //\
    \ YOUR CODE HERE\n}", "    // TODO\n}", "\t// $count = 0;\n\t// foreach ($arr\
    \ as $num) {\n\t// \t$sum = 0;\n\t// \tif ($num < 0) {\n\t// \t\t$num = abs($num);\n\
    \t// \t\t$sum += 1;\n\t// \t}\n\t// \t$strNum = (string)$num;\n\t// \t$digits\
    \ = str_split($strNum);\n\t// \tforeach ($digits as $digit) {\n\t// \t\t$sum +=\
    \ $digit;\n\t// \t}\n\t// \tif ($sum > 0) {\n\t// \t\t$count++;\n\t// \t}\n\t\
    // }\n\t// return $count;\n\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum\
    \ = 0;\n\t\t$strNum = (string)$num;\n\t\t$digits = str_split($strNum);\n\t\tforeach\
    \ ($digits as $digit) {\n\t\t\t$sum += $digit;\n\t\t}\n\t\tif ($sum > 0) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho count_nums([]) . \" should\
    \ be 0\\n\";\necho count_nums([-1, 11, -11]) . \" should be 1\\n\";\necho count_nums([1,\
    \ 1, 2]) . \" should be 3\\n\";", "  $count = 0;\n  foreach ($arr as $a) {\n \
    \   $count += (array_sum(str_split(abs($a))) > 0) ? 1 : 0;\n  }\n  return $count;\n\
    }\n", "    return array_reduce($arr, function($carry, $v) {\n        $sum = array_sum(str_split(abs($v)));\n\
    \        return $carry + ($sum > 0 ? 1 : 0);\n    }, 0);\n}\n", "\t$count = 0;\n\
    \tif(count($arr) == 0)\n\t\treturn $count;\n\tforeach($arr as $key => $value)\
    \ {\n\t\tif(abs($value) < 10) {\n\t\t\tif($value >= 0)\n\t\t\t\t$count++;\n\t\t\
    }\n\t\telse if(abs($value) >= 10 && abs($value) < 100) {\n\t\t\tif(abs($value)\
    \ / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\t\t}\n\t\telse if(abs($value)\
    \ >= 100 && abs($value) < 1000) {\n\t\t\tif(abs($value) / 100 + (abs($value) %\
    \ 100) / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\t\t}\n\t\telse if(abs($value)\
    \ >= 1000 && abs($value) < 10000) {\n\t\t\tif(abs($value) / 1000 + (abs($value)\
    \ % 1000) / 100 + (abs($value) % 100) / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\
    \t\t}\n\t\telse if(abs($value) >= 10000 && abs($value) < 100000) {\n\t\t\tif(abs($value)\
    \ / 10000 + (abs($value) % 10000) / 1000 + (abs($value) % 1000) / 100 + (abs($value)\
    \ % 100) / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\t\t}\n\t\telse if(abs($value)\
    \ >= 100000 && abs($value) < 1000000) {\n\t\t\tif(abs($value) / 100000 + (abs($value)\
    \ % 100000) / 10000 + (abs($value) % 10000) / 1000 + (abs($value) % 1000) / 100\
    \ + (abs($value) % 100) / 10 + abs($value) % 10 > 0)\n\t\t\t\t$count++;\n\t\t\
    }\n\t\telse if(abs($value) >= 1000000 && abs($value) < 10000000) {\n\t\t\tif(abs($value)\
    \ / 1000000 + (abs($value) % 1000000) / 100", "    $count = 0;\n    $arrLen =\
    \ count($arr);\n    if($arrLen==0) {\n        return 0;\n    } else {\n      \
    \  for($i=0; $i<$arrLen; $i++) {\n            $current = $arr[$i];\n         \
    \   $numLen = strlen(abs($current));\n            $sum = 0;\n            for($j=0;\
    \ $j<$numLen; $j++) {\n                $sum += substr($current, $j, 1);\n    \
    \        }\n            if($sum>0) {\n                $count++;\n            }\n\
    \        }\n        return $count;\n    }\n}\n", "    // YOUR CODE HERE\n    return\
    \ $count;\n}\n", "  $r = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $n\
    \ = 0;\n    if ($arr[$i] < 0) {\n      $n += $arr[$i] % 10;\n      $arr[$i] =\
    \ ($arr[$i] - $n) / -10;\n    }\n    while ($arr[$i] > 0) {\n      $n += $arr[$i]\
    \ % 10;\n      $arr[$i] = ($arr[$i] - $n) / 10;\n    }\n    if ($n > 0) {\n  \
    \    $r++;\n    }\n  }\n  return $r;\n}\n\n$inputs = [[], [-1, 11, -11], [1, 1,\
    \ 2]];\nforeach ($inputs as $input) {\n  echo count_nums($input), \"\\n\";\n}",
  "    return array_reduce($arr, function($carry, $item) {\n        $digits = intToArray($item);\n\
    \        $sum = array_sum($digits);\n        if ($sum > 0) {\n            $carry\
    \ += 1;\n        }\n        return $carry;\n    }, 0);\n}", "\n}\n", "  $count\
    \ = 0;\n  foreach ($arr as $num) {\n    $count += has_positive_sum_of_digits($num);\n\
    \  }\n  return $count;\n}\n", "    if (sizeof($arr) == 0) {\n        return 0;\n\
    \    }\n    $count = 0;\n    foreach ($arr as $value) {\n        $svalue = strval($value);\n\
    \        $sum = 0;\n        if ($value < 0) {\n            $sum += intval($svalue[0]);\n\
    \            $svalue = substr($svalue, 1);\n        }\n        while ($svalue)\
    \ {\n            $sum += intval($svalue[0]);\n            $svalue = substr($svalue,\
    \ 1);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "  if (empty($arr)) return 0;\n  $count = 0;\n\
    \  foreach ($arr as $i) {\n    $signed_digits = num_to_digits($i);\n    $sum =\
    \ array_sum($signed_digits);\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n", "    return count(\n        array_filter(\n         \
    \   $arr,\n            function($item) {\n                return array_sum(\n\
    \                    array_map(\n                        function($item) {\n \
    \                           return abs($item);\n                        },\n \
    \                       str_split($item)\n                    )\n            \
    \    ) > 0;\n            }\n        )\n    );\n}\n", "    $count = 0;\n    foreach\
    \ ($arr as $key => $value) {\n        $sum = 0;\n        if ($value > 0) {\n \
    \           $sum = array_sum(str_split($value));\n        } else {\n         \
    \   $sum = -1 * array_sum(str_split(abs($value)));\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n", "\t\
    $sum = 0;\n\t$numbers = array();\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\
    \t$sum = 0;\n\t\t$number = $arr[$i];\n\t\twhile ($number != 0) {\n\t\t\t$digit\
    \ = $number % 10;\n\t\t\t$sum += $digit;\n\t\t\t$number = $number / 10;\n\t\t\
    }\n\t\tif ($sum > 0) {\n\t\t\tarray_push($numbers, $arr[$i]);\n\t\t}\n\t}\n\t\
    return count($numbers);\n}", "  $sum = 0;\n  for ($i = 0; $i < count($arr); $i++)\
    \ {\n    $signed = abs($arr[$i]);\n    while ($signed > 0) {\n      $sum += $signed\
    \ % 10;\n      $signed = floor($signed / 10);\n    }\n    if ($sum > 0) {\n  \
    \    $sum = 0;\n      $count++;\n    }\n  }\n  return $count;\n}\necho count_nums([])\
    \ . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\\n\";\necho count_nums([1, 1,\
    \ 2]) . \"\\n\";", "  $count = 0;\n  foreach ($arr as $value) {\n    if (array_sum(str_split($value))\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nprint(count_nums([-1,\
    \ 11, -11]));\n", "    $result = 0;\n    foreach ($arr as $n) {\n        $i =\
    \ $n;\n        $n = abs($n);\n        $sum = 0;\n        while ($n != 0) {\n \
    \           $sum += $n % 10;\n            $n = intval($n / 10);\n        }\n \
    \       if ($sum > 0) {\n            if ($i >= 0) {\n                $result++;\n\
    \            } else {\n                $result--;\n            }\n        }\n\
    \    }\n    return $result;\n}\n", "\t$count = 0;\n\tif (!empty($arr)) {\n\t\t\
    foreach ($arr as $number) {\n\t\t\t$temp = 0;\n\t\t\tif ($number < 0) {\n\t\t\t\
    \t$number = $number * -1;\n\t\t\t\t$temp += $number % 10;\n\t\t\t\t$number = ($number\
    \ - $temp) / 10;\n\t\t\t}\n\t\t\twhile ($number > 0) {\n\t\t\t\t$temp += $number\
    \ % 10;\n\t\t\t\t$number = ($number - $temp) / 10;\n\t\t\t}\n\t\t\tif ($temp >\
    \ 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "    return\
    \ array_sum(array_map(function($n) {\n        $abs = abs($n);\n        if ($abs\
    \ < 10) {\n            return ($abs > 0);\n        }\n        return count_nums(str_split($abs));\n\
    \    }, $arr));\n}\n", "\t\n}\n", "    return array_reduce($arr, function($n,\
    \ $e) {\n        return $n + (abs($e) > 0 ? 1 : 0);\n    }, 0);\n}", "    $result\
    \ = 0;\n    foreach ($arr as $int) {\n        $result += ($int == 0 ? 0 : 1);\n\
    \    }\n    return $result;\n}\n", '}', "    $count = 0;\n    foreach ($arr as\
    \ $val) {\n        if ($val < 0) {\n            $val = -$val;\n        }\n   \
    \     $digits = array();\n        while ($val > 0) {\n            $digits[] =\
    \ $val % 10;\n            $val = (int)($val / 10);\n        }\n        $sum =\
    \ array_sum($digits);\n        if ($sum > 0) {\n            $count++;\n      \
    \  }\n    }\n    return $count;\n}\n", "  $i = 0;\n  foreach ($arr as $x) {\n\
    \    $digits = $x < 0 ? str_split($x * -1) : str_split($x);\n    if (array_sum($digits)\
    \ > 0) {\n      $i++;\n    }\n  }\n  return $i;\n}\n\nassert(count_nums([]) ==\
    \ 0);\nassert(count_nums([-1, 11, -11]) == 1);\nassert(count_nums([1, 1, 2]) ==\
    \ 3);\n", "\n}", "    return 0;\n}\n", "  $count = 0;\n  foreach ($arr as $i)\
    \ {\n    $sum = array_sum(str_split(abs($i)));\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n", "    $count = 0;\n    foreach ($arr as $number)\
    \ {\n        if ($number < 0) {\n            $number = -1 * $number;\n       \
    \ }\n        $string = (string) $number;\n        $sum = 0;\n        for ($i =\
    \ 0; $i < strlen($string); $i++) {\n            $sum += $string[$i];\n       \
    \ }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "  $count = 0;\n  $sum_digits = 0;\n  foreach ($arr as $value)\
    \ {\n    $str = strval($value);\n    if ($value < 0) {\n      $sum_digits += $str[1];\n\
    \    } else {\n      $sum_digits += $str[0];\n    }\n    if ($sum_digits > 0)\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\necho count_nums([-1, 11,\
    \ -11]);\necho \"\\n\";\necho count_nums([1, 1, 2]);\necho \"\\n\";\n", "    if\
    \ (count($arr) == 0) {\n        return 0;\n    }\n\n    $count = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        $count += (signed_sum($arr[$i]) > 0)\
    \ ? 1 : 0;\n    }\n\n    return $count;\n}\n", '}', "    if (count($arr) == 0)\
    \ {\n        return 0;\n    }\n    $cnt = 0;\n    foreach ($arr as $i) {\n   \
    \     $num = abs($i);\n        $sum = 0;\n        while ($num > 0) {\n       \
    \     $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n  \
    \      if ($sum > 0) {\n            $cnt++;\n        }\n    }\n    return $cnt;\n\
    }\n\necho count_nums([]) . PHP_EOL;\necho count_nums([-1, 11, -11]) . PHP_EOL;\n\
    echo count_nums([1, 1, 2]) . PHP_EOL;", "\t// Your code here\n}", "  $sum = 0;\n\
    \  for ($i = 0; $i < count($arr); $i++) {\n    $signed_digits = str_split($arr[$i]);\n\
    \    for ($j = 0; $j < count($signed_digits); $j++) {\n      $sum += $signed_digits[$j];\n\
    \    }\n    if ($sum > 0) {\n      $cnt++;\n    }\n    $sum = 0;\n  }\n  return\
    \ $cnt;\n}", "\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\t\
    for ($i = 0; $i < strlen($value); $i++) {\n\t\t\t$sum += $value[$i];\n\t\t}\n\t\
    \tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "  $count\
    \ = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n   \
    \ while ($num > 0) {\n      $sum += $num % 10;\n      $num = intval($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}",
  "  $count = 0;\n  foreach ($arr as $num) {\n    if ($num == 0) {\n      continue;\n\
    \    }\n    $numStr = (string) abs($num);\n    $numArr = str_split($numStr);\n\
    \    $sum = array_sum($numArr);\n    if ($sum > 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n", "  $count = 0;\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    $sum = 0;\n    if ($arr[$i] < 0) {\n      $sum += ($arr[$i] % 10)\
    \ * -1;\n      $arr[$i] = -1 * (floor($arr[$i] / 10));\n    }\n    while ($arr[$i]\
    \ > 0) {\n      $sum += $arr[$i] % 10;\n      $arr[$i] = floor($arr[$i] / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nassert(count_nums([]) == 0);\nassert(count_nums([-1, 11, -11]) == 1);\nassert(count_nums([1,\
    \ 1, 2]) == 3);\nassert(count_nums([10, -10, 1, -1, -1, 2, 3, -2, -3]) == 5);\n\
    assert(count_nums([-999, 999, 1, -1, -1, -1, -1, 2, -2, -2, 3, -3, -3]) == 6);\n",
  "    // Your code here\n    $n = 0;\n    foreach ($arr as $key => $value) {\n  \
    \      $n += $value < 0 ? $value % 10 : $value % 10;\n        while ($value !=\
    \ 0) {\n            $value = (int)($value / 10);\n            $n += $value < 0\
    \ ? $value % 10 : $value % 10;\n        }\n    }\n    return $n;\n}", "\t// your\
    \ code here\n}", "\t$ret = 0;\n\tforeach ($arr as $n) {\n\t\t$ret += sum($n) >\
    \ 0 ? 1 : 0;\n\t}\n\treturn $ret;\n}", "    $result = 0;\n    foreach ($arr as\
    \ $key => $value) {\n        if ($value < 0) {\n            $value = $value *\
    \ -1;\n        }\n        $digitSum = 0;\n        while ($value > 0) {\n     \
    \       $digitSum += $value % 10;\n            $value = floor($value / 10);\n\
    \        }\n        if ($digitSum > 0) {\n            $result++;\n        }\n\
    \    }\n    return $result;\n}\n", "    $counter = 0;\n    foreach ($arr as $value)\
    \ {\n        $sum = 0;\n        if ($value < 0) {\n            $value = $value\
    \ * -1;\n            $sum = $sum + ($value % 10);\n            $value = $value\
    \ / 10;\n        }\n        while ($value > 0) {\n            $sum = $sum + ($value\
    \ % 10);\n            $value = $value / 10;\n        }\n        if ($sum > 0)\
    \ {\n            $counter++;\n        }\n    }\n    return $counter;\n}\n", " \
    \   // STUDENT CODE HERE\n    return 0;\n}\n", "\t$result = 0;\n\tforeach ($arr\
    \ as $int) {\n\t\tif (is_int($int)) {\n\t\t\tif ($int < 0) {\n\t\t\t\t$int = $int\
    \ * -1;\n\t\t\t}\n\t\t\t$nums = str_split($int);\n\t\t\t$sum = 0;\n\t\t\tforeach\
    \ ($nums as $num) {\n\t\t\t\t$sum += $num;\n\t\t\t}\n\t\t\tif ($sum > 0) {\n\t\
    \t\t\t$result++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t$result = 0;\n\
    \tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\t$digits = str_split(abs($value));\n\
    \t\tforeach ($digits as $digit) {\n\t\t\t$sum += $digit;\n\t\t}\n\t\tif ($sum\
    \ != 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n}", "    $count =\
    \ 0;\n    foreach ($arr as $num) {\n        $num = abs($num);\n        $sum =\
    \ 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n           \
    \ $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "  $count = 0;\n  foreach ($arr as\
    \ $item) {\n    $sum = 0;\n    $item_to_check = $item;\n    if ($item < 0) {\n\
    \      $item_to_check = abs($item);\n      $sum += -1;\n    }\n    $num_as_string\
    \ = strval($item_to_check);\n    for ($i = 0; $i < strlen($num_as_string); $i++)\
    \ {\n      $sum += intval($num_as_string[$i]);\n    }\n    if ($sum > 0) {\n \
    \     $count++;\n    }\n  }\n  return $count;\n}\n", "  // YOUR CODE HERE\n}",
  "    if (!empty($arr)) {\n        $count = 0;\n        foreach ($arr as $value)\
    \ {\n            $abs = str_split(abs($value));\n            $sum = array_sum($abs);\n\
    \            if ($sum > 0) {\n                $count++;\n            }\n     \
    \   }\n        return $count;\n    } else {\n        return 0;\n    }\n}\n", " \
    \   $result = 0;\n    foreach ($arr as $v) {\n        $sum = 0;\n        $v_abs\
    \ = abs($v);\n        while ($v_abs > 0) {\n            $sum += $v_abs % 10;\n\
    \            $v_abs = floor($v_abs / 10);\n        }\n        if ($sum > 0) {\n\
    \            $result++;\n        }\n    }\n    return $result;\n}\n", "  $count\
    \ = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $str = strval($num);\n\
    \    for ($i = 0; $i < strlen($str); $i++) {\n      $sum += intval($str[$i]);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}",
  "  //count sum for each element of the array\n  $count = 0;\n  foreach ($arr as\
    \ $number) {\n    $sum = 0;\n    //if number is negative, make it positive and\
    \ add -1 to sum\n    if ($number < 0) {\n      $number = -$number;\n      $sum++;\n\
    \    }\n    //go through the digits of the number\n    while ($number > 0) {\n\
    \      $sum += $number % 10;\n      $number = (int)($number / 10);\n    }\n  \
    \  //if sum > 0, increment count\n    if ($sum > 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n\n$arr = array(1, 2, 3, -1, -2, -3);\necho count_nums($arr);\n",
  "  $count = 0;\n  foreach ($arr as $val) {\n    $sum = 0;\n    if ($val < 0) {\n\
    \      $sum += abs($val) % 10;\n      $val = -floor(abs($val) / 10);\n    }\n\
    \    while ($val > 0) {\n      $sum += $val % 10;\n      $val = floor($val / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n",
  "  $count = 0;\n  foreach ($arr as $num) {\n    $num = abs($num);\n    $sum = 0;\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \necho count_nums([-1, 11, -11]) . \"\\n\";\necho count_nums([1, 1, 2]) . \"\\\
    n\";\n", "    $count = 0;\n    foreach ($arr as $value) {\n        $digits = str_split(abs($value));\n\
    \        $digitsSum = array_sum($digits);\n        if ($digitsSum > 0) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}", "  $count = 0;\n\
    \  foreach ($arr as $item) {\n    if ($item < 0) {\n      $item = abs($item);\n\
    \      $count = $count + ($item % 10);\n      $item = $item / 10;\n      $count\
    \ = $count + ($item % 10);\n      $item = $item / 10;\n      $count = $count +\
    \ ($item % 10);\n    } else {\n      $count = $count + ($item % 10);\n      $item\
    \ = $item / 10;\n      $count = $count + ($item % 10);\n      $item = $item /\
    \ 10;\n      $count = $count + ($item % 10);\n    }\n  }\n  return $count;\n}\n\
    echo count_nums([]) . \" == 0\" . PHP_EOL;\necho count_nums([-1, 11, -11]) . \"\
    \ == 1\" . PHP_EOL;\necho count_nums([1, 1, 2]) . \" == 3\" . PHP_EOL;", "\t$i\
    \ = 0;\n\t$arrlength = count($arr);\n\tfor ($x = 0; $x < $arrlength; $x++) {\n\
    \t\t$string = (string)$arr[$x];\n\t\t$i = $i + strlen($string);\n\t}\n\treturn\
    \ $i;\n}\n", "\t$count = 0;\n\tforeach ($arr as $number) {\n\t\tif (sum_digits($number)\
    \ > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $count = 0;\n\
    \    foreach ($arr as $key => $value) {\n        if ($value >= 0) {\n        \
    \    $str = (string)$value;\n            $sum = 0;\n            for ($i = 0; $i\
    \ < strlen($str); $i++) {\n                $sum += $str[$i];\n            }\n\
    \            if ($sum > 0) {\n                $count++;\n            }\n     \
    \   } else {\n            $str = (string)$value;\n            $str = ltrim($str,\
    \ '-');\n            $sum = -$str[0];\n            for ($i = 1; $i < strlen($str);\
    \ $i++) {\n                $sum += $str[$i];\n            }\n            if ($sum\
    \ > 0) {\n                $count++;\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    // Complete\n}\n", "    $sum = 0;\n    foreach ($arr as\
    \ $value) {\n        $temp_sum = 0;\n        $value = abs($value);\n        while\
    \ ($value != 0) {\n            $temp_sum += $value % 10;\n            $value =\
    \ (int)($value / 10);\n        }\n        if ($temp_sum > 0) {\n            $sum++;\n\
    \        }\n    }\n    return $sum;\n}", "    // Good luck!\n}", "    $result\
    \ = 0;\n    foreach ($arr as $item) {\n        $digits_sum = 0;\n        if ($item\
    \ < 0) {\n            $item = str_replace('-', '', $item);\n        }\n      \
    \  while ($item) {\n            $digits_sum += $item % 10;\n            $item\
    \ = floor($item / 10);\n        }\n        if ($digits_sum > 0) {\n          \
    \  $result++;\n        }\n    }\n    return $result;\n}", "    $count = 0;\n \
    \   $sums = [];\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ < 0) {\n            $sums[$i] = abs($arr[$i]) % 10;\n        } else {\n    \
    \        $sums[$i] = $arr[$i] % 10;\n        }\n    }\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] < 0) {\n            $sums[$i] += floor(abs($arr[$i])\
    \ / 10);\n        } else {\n            $sums[$i] += floor($arr[$i] / 10);\n \
    \       }\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($sums[$i]\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   // your code goes here\n}", "  // YOUR CODE HERE\n  $count = 0;\n  foreach\
    \ ($arr as $key => $value) {\n    if ($value >= 0) {\n      if (str_split($value)\
    \ > 0) {\n        $count++;\n      }\n    } else {\n      if (str_split($value)\
    \ < 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\n$array\
    \ = array(1, 2, 3, 4, 5, 6, -1, -2, -3, -4, -5, -6);\necho count_nums($array);",
  "    if (empty($arr)) {\n        return 0;\n    }\n    $count = 0;\n    foreach\
    \ ($arr as $number) {\n        $number = str_split($number);\n        $countNegative\
    \ = 0;\n        foreach ($number as $digit) {\n            if ($digit < 0) {\n\
    \                $countNegative++;\n            }\n        }\n        if (array_sum($number)\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $total = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $num = $arr[$i];\n\
    \        if ($num < 0) {\n            $num = -1 * $num;\n        }\n        $digits_sum\
    \ = 0;\n        while ($num > 0) {\n            $digits_sum += $num % 10;\n  \
    \          $num = (int)($num / 10);\n        }\n        if ($digits_sum > 0) {\n\
    \            $total++;\n        }\n    }\n    return $total;\n}", "  return array_reduce($arr,\
    \ function($count, $x) {\n    return $count + has_positive_sum_of_digits($x);\n\
    \  }, 0);\n}\n", "    // TODO\n}", "  // WRITE CODE HERE\n}\n", "    // TODO:\
    \ Write code here\n    $sum_of_digits_greater_than_zero = 0;\n    foreach ($arr\
    \ as $number) {\n        $number_of_digits = strlen(abs($number));\n        $digits_sum\
    \ = 0;\n        for ($i = 0; $i < $number_of_digits; $i++) {\n            $digits_sum\
    \ += $number % 10;\n            $number = $number / 10;\n        }\n        if\
    \ ($digits_sum > 0) {\n            $sum_of_digits_greater_than_zero++;\n     \
    \   }\n    }\n    return $sum_of_digits_greater_than_zero;\n}\n", "    return\
    \ array_reduce($arr, function($count, $el){\n        return $count + intval(array_sum(str_split($el)));\n\
    \    }, 0);\n}", "    return 0;\n}\n", "    $count = 0;\n    foreach ($arr as\
    \ $num) {\n        $count += ($num < 0) ? (($num % 10) + 1) : ($num % 10);\n \
    \   }\n    return $count;\n}", "}\n", "\t$n = count($arr);\n\tif ($n <= 0) {\n\
    \t\treturn 0;\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t$sum =\
    \ 0;\n\t\t$num = $arr[$i];\n\t\tif ($num < 0) {\n\t\t\t$num = -$num;\n\t\t\t$sum\
    \ = $sum - ($num % 10);\n\t\t\t$num = intval($num / 10);\n\t\t}\n\t\twhile ($num\
    \ > 0) {\n\t\t\t$sum = $sum + ($num % 10);\n\t\t\t$num = intval($num / 10);\n\t\
    \t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n\
    echo count_nums([]) . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\\n\";\necho\
    \ count_nums([1, 1, 2]) . \"\\n\";", "    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $digits_sum = 0;\n        while ($num) {\n            $digits_sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($digits_sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n", "\t\
    $counter = 0;\n\tforeach ($arr as $number) {\n\t\t$sdigit = $number < 0 ? -1 *\
    \ $number % 10 : $number % 10;\n\t\t$number = (int) ($number / 10);\n\t\twhile\
    \ ($number != 0) {\n\t\t\t$sdigit += $number % 10;\n\t\t\t$number = (int) ($number\
    \ / 10);\n\t\t}\n\t\tif ($sdigit > 0) $counter++;\n\t}\n\treturn $counter;\n}",
  "    return 0;\n}\n", "\treturn array_sum(array_map(function($n) {\n\t\treturn $n\
    \ > 0 ? $n : -$n;\n\t}, $arr));\n}\n", "  $count = 0;\n  foreach ($arr as $elem)\
    \ {\n    $elem = abs($elem);\n    $sum = 0;\n    while ($elem > 0) {\n      $sum\
    \ += $elem % 10;\n      $elem = floor($elem / 10);\n    }\n    if ($sum > 0) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nassert(count_nums([]) ==\
    \ 0);\nassert(count_nums([-1, 11, -11]) == 1);\nassert(count_nums([1, 1, 2]) ==\
    \ 3);\n", "\n}", "\n}", "\t// TODO: Write your code here\n}", "  // TODO: your\
    \ code here\n}\n", "  if (!sizeof($arr)) {\n    return 0;\n  }\n  return array_reduce($arr,\
    \ function($carry, $item) {\n    $digits = str_split(abs($item));\n    $sum =\
    \ array_reduce($digits, function($carry, $item) {\n      return $carry + $item;\n\
    \    });\n    return $carry + ($sum > 0 ? 1 : 0);\n  }, 0);\n}\n", "  $num_count\
    \ = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $sign = 1;\n    if ($num\
    \ < 0) {\n      $sign = -1;\n      $num = $num * -1;\n    }\n    $digits = str_split($num);\n\
    \    foreach ($digits as $digit) {\n      $sum += $digit;\n    }\n    if ($sum\
    \ * $sign > 0) {\n      $num_count += 1;\n    }\n  }\n  return $num_count;\n}\n\
    \necho count_nums([]) . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\\n\";\n\
    echo count_nums([1, 1, 2]) . \"\\n\";\n", "  $count = 0;\n  for ($i = 0; $i <\
    \ count($arr); $i++) {\n    $sum = 0;\n    for ($j = 0; $j < strlen(abs($arr[$i]));\
    \ $j++) {\n      $sum += $arr[$i] % 10;\n      $arr[$i] = $arr[$i] / 10;\n   \
    \ }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n\
    if (count_nums([]) == 0 &&\n    count_nums([-1, 11, -11]) == 1 &&\n    count_nums([1,\
    \ 1, 2]) == 3) {\n  echo \"Pass\\n\";\n} else {\n  echo \"Fail\\n\";\n}", "  //\
    \ === your code here ===\n}", "    $count = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        $x = str_split($arr[$i]);\n        $sum = 0;\n        for ($j\
    \ = 0; $j < count($x); $j++) {\n            $sum += $x[$j];\n        }\n     \
    \   if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "  // TODO: Your code here\n}\n", "    $newarr = array();\n    $num = 0;\n\
    \    foreach ($arr as $key => $value) {\n        if ($value < 0) {\n         \
    \   $value = -1 * $value;\n        }\n        $newarr[$key] = $value;\n    }\n\
    \    foreach ($newarr as $key => $value) {\n        $sum = 0;\n        while ($value\
    \ != 0) {\n            $sum += $value % 10;\n            $value = $value / 10;\n\
    \        }\n        if ($sum > 0) {\n            $num++;\n        }\n    }\n \
    \   return $num;\n}\n", '}', "\n}", "\tif (count($arr) == 0) {\n\t\treturn 0;\n\
    \t} else {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < count($arr); $i++) {\n\t\t\t\
    $sum = 0;\n\t\t\tif ($arr[$i] < 0) {\n\t\t\t\t$arr[$i] = abs($arr[$i]);\n\t\t\t\
    \t$sum += $arr[$i] % 10;\n\t\t\t\t$arr[$i] = floor($arr[$i] / 10);\n\t\t\t}\n\t\
    \t\twhile ($arr[$i] > 0) {\n\t\t\t\t$sum += $arr[$i] % 10;\n\t\t\t\t$arr[$i] =\
    \ floor($arr[$i] / 10);\n\t\t\t}\n\t\t\tif ($sum > 0) {\n\t\t\t\t$count++;\n\t\
    \t\t}\n\t\t}\n\t\treturn $count;\n\t}\n}\n\necho count_nums([-1, 11, -11]) . PHP_EOL;\n\
    echo count_nums([1, 1, 2]) . PHP_EOL;\necho count_nums([]) . PHP_EOL;\n", "\t\
    $count = 0;\n\tforeach ($arr as $num) {\n\t\t$digits = abs($num);\n\t\t$sum =\
    \ 0;\n\t\twhile ($digits > 0) {\n\t\t\t$sum += $digits % 10;\n\t\t\t$digits =\
    \ floor($digits / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\necho count_nums([]) . \"\\n\"; // 0\necho count_nums([-1,\
    \ 11, -11]) . \"\\n\"; // 1\necho count_nums([1, 1, 2]) . \"\\n\"; // 3", "  \
    \  $count = 0;\n    foreach ($arr as $num) {\n        $digits = [];\n        if\
    \ ($num < 0) {\n            $digits[] = $num % 10;\n            $num = $num /\
    \ -10;\n        }\n        while ($num > 0) {\n            $digits[] = $num %\
    \ 10;\n            $num = $num / 10;\n        }\n        $sum = 0;\n        foreach\
    \ ($digits as $digit) {\n            $sum += $digit;\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n", " \
    \   $count = 0;\n    foreach ($arr as $number) {\n        $number = abs($number);\n\
    \        while ($number > 0) {\n            $count += $number % 10;\n        \
    \    $number = floor($number / 10);\n        }\n    }\n    return $count;\n}\n\
    echo count_nums([]) . \"\\n\";\necho count_nums([-1, 11, -11]) . \"\\n\";\necho\
    \ count_nums([1, 1, 2]) . \"\\n\";", "\t// debug\n\t// print_r($arr);\n\t$count\
    \ = 0;\n\t$digits = array();\n\tforeach ($arr as $value) {\n\t\t$digits = str_split(abs($value));\n\
    \t\t// debug\n\t\t// print_r($digits);\n\t\t$sum = 0;\n\t\tforeach ($digits as\
    \ $digit) {\n\t\t\t$sum += $digit;\n\t\t}\n\t\t// debug\n\t\t// echo $sum;\n\t\
    \tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t// debug\n\t// echo $count;\n\
    \treturn $count;\n}", "  $i = 0;\n  foreach ($arr as $value) {\n    $sum = 0;\n\
    \    if ($value < 0) {\n      $value = $value * -1;\n    }\n    while ($value\
    \ > 0) {\n      $sum += $value % 10;\n      $value = $value / 10;\n    }\n   \
    \ if ($sum > 0) {\n      $i += 1;\n    }\n  }\n  return $i;\n}", "    $count =\
    \ 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n            $num\
    \ = abs($num);\n            $count += ($num % 10 + 1);\n            $num = floor($num\
    \ / 10);\n        }\n        while ($num > 0) {\n            $count += ($num %\
    \ 10);\n            $num = floor($num / 10);\n        }\n    }\n    return $count;\n\
    }", "  return 0;\n}\n", "\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum =\
    \ 0;\n\t\t$num = abs($num);\n\t\t$i = 10;\n\t\t$digit = $num % $i;\n\t\twhile\
    \ ($digit != $num) {\n\t\t\t$sum += $digit;\n\t\t\t$num = floor($num / $i);\n\t\
    \t\t$digit = $num % $i;\n\t\t}\n\t\t$sum += $digit;\n\t\tif ($sum > 0) {\n\t\t\
    \t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $result = 0;\n    foreach\
    \ ($arr as $i) {\n        if ($i < 0) {\n            $i = -$i;\n        }\n  \
    \      $sum = 0;\n        while ($i > 0) {\n            $sum += $i % 10;\n   \
    \         $i = (int)($i / 10);\n        }\n        if ($sum > 0) {\n         \
    \   $result++;\n        }\n    }\n    return $result;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

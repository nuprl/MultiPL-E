name: HumanEval_155_even_odd_count
language: php
results:
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$num = abs($num);\n\
    \t$num = str_split($num);\n\t$tuple = array(0, 0);\n\tfor ($i = 0; $i < count($num);\
    \ $i++) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t$tuple[0]++;\n\t\t} else {\n\t\t\
    \t$tuple[1]++;\n\t\t}\n\t}\n\treturn $tuple;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if($num<0){\n\
    \        $num *= -1;\n    }\n    $c_even = 0;\n    $c_odd = 0;\n    for($i=0;$i<strlen($num);$i++){\n\
    \        if($num[$i]%2==0){\n            $c_even += 1;\n        }else{\n     \
    \       $c_odd += 1;\n        }\n    }\n    return [$c_even,$c_odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppvwq6iu.php:27\n\
    Stack trace:\n#0 /tmp/tmpppvwq6iu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpppvwq6iu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $temp = abs($num);\n    $div = 10;\n    if ($temp %\
    \ $div > 0) {\n        $even++;\n    } else {\n        $odd++;\n    }\n    for\
    \ (; $temp / $div > 0; $div *= 10) {\n        if ($temp % $div > 0) {\n      \
    \      $even++;\n        } else {\n            $odd++;\n        }\n    }\n   \
    \ return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmprkpk632c.php:17\n\
    Stack trace:\n#0 /tmp/tmprkpk632c.php(27): even_odd_count(7)\n#1 /tmp/tmprkpk632c.php(31):\
    \ candidate(7)\n#2 /tmp/tmprkpk632c.php(41): test()\n#3 {main}\n  thrown in /tmp/tmprkpk632c.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $arr = str_split($num);\n    foreach ($arr as $n) {\n\
    \        if ($n % 2 === 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmphoszv_y7.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphoszv_y7.php:26\n\
    Stack trace:\n#0 /tmp/tmphoszv_y7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphoszv_y7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $odd = 0;\n\
    \  $even = 0;\n  $num = abs($num);\n  $digits = str_split($num);\n  foreach ($digits\
    \ as $digit) {\n    if ($digit % 2 == 0) {\n      $even += 1;\n    } else {\n\
    \      $odd += 1;\n    }\n  }\n  return array($even, $odd);\n}\necho even_odd_count(-12)[0];\n\
    echo even_odd_count(-12)[1];\necho even_odd_count(123)[0];\necho even_odd_count(123)[1];\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1112'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $count\
    \ = [0, 0];\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $count[0]++;\n        } else\
    \ {\n            $count[1]++;\n        }\n        $num = (int)($num / 10);\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dn6im3i.php:33\n\
    Stack trace:\n#0 /tmp/tmp_dn6im3i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_dn6im3i.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $digits\
    \ = [];\n    $evenCount = 0;\n    $oddCount = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $digits[] = $num % 10;\n        $num = intval($num / 10);\n\
    \    }\n    foreach ($digits as $digit) {\n        if ($digit % 2 == 0) {\n  \
    \          $evenCount++;\n        } else {\n            $oddCount++;\n       \
    \ }\n    }\n    return [$evenCount, $oddCount];\n}\necho json_encode(even_odd_count(-12));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "[1,1]\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpieh4grnd.php:37\n\
    Stack trace:\n#0 /tmp/tmpieh4grnd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpieh4grnd.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $arr =\
    \ array();\n    $odd = 0;\n    $even = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    $arr[] = $even;\n    $arr[] =\
    \ $odd;\n    return $arr;\n}\nprint_r(even_odd_count(123) );\necho \"<br>\";\n\
    print_r(even_odd_count(-12) );\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 3\n    [1] => 0\n)\n<br>Array\n(\n    [0] => 3\n \
    \   [1] => 0\n)\n<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp835r0n71.php:31\n\
    Stack trace:\n#0 /tmp/tmp835r0n71.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp835r0n71.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ str_split(abs($num));\n    $count = [0, 0];\n    foreach ($num as $digit) {\n\
    \        $count[$digit % 2]++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // $evens\
    \ = 0;\n    // $odds = 0;\n    // $num_string = (string)$num;\n    // for ($i\
    \ = 0; $i < strlen($num_string); $i++) {\n    //     if ($num_string[$i] % 2 ==\
    \ 0) {\n    //         $evens++;\n    //     } else {\n    //         $odds++;\n\
    \    //     }\n    // }\n    // return array($evens, $odds);\n    return array((string)$num\
    \ == 0 ? 0 : substr_count((string)$num, '0') + substr_count((string)$num, '2')\
    \ + substr_count((string)$num, '4') + substr_count((string)$num, '6') + substr_count((string)$num,\
    \ '8'), substr_count((string)$num, '1') + substr_count((string)$num, '3') + substr_count((string)$num,\
    \ '5') + substr_count((string)$num, '7') + substr_count((string)$num, '9'));\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdorkwxvi.php:33\n\
    Stack trace:\n#0 /tmp/tmpdorkwxvi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdorkwxvi.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $counterEven\
    \ = 0;\n  $counterOdd = 0;\n  $string = strval($num);\n  for ($i = 0; $i < strlen($string);\
    \ $i++) {\n    if ($string[$i] % 2 == 0) {\n      $counterEven++;\n    } else\
    \ {\n      $counterOdd++;\n    }\n  }\n  return array($counterEven, $counterOdd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0a8_wbrj.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a8_wbrj.php:26\n\
    Stack trace:\n#0 /tmp/tmp0a8_wbrj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0a8_wbrj.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $evenCount\
    \ = 0;\n  $oddCount = 0;\n  $stringOfNum = strval($num);\n  $arrOfNum = str_split($stringOfNum);\n\
    \  foreach ($arrOfNum as $index => $num) {\n    if ($num == '-') {\n      unset($arrOfNum[$index]);\n\
    \    }\n  }\n  foreach ($arrOfNum as $index => $num) {\n    if ($num % 2 == 0)\
    \ {\n      $evenCount++;\n    } else {\n      $oddCount++;\n    }\n  }\n  return\
    \ [$evenCount, $oddCount];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 === 0) $even++;\n        else $odd++;\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\necho '<pre>';\n\
    print_r(even_odd_count(-12));\necho '</pre>';\necho '<pre>';\nprint_r(even_odd_count(123));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp5z_y565b.php:36\nStack trace:\n#0 /tmp/tmp5z_y565b.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp5z_y565b.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $isEven\
    \ = true;\n    $even = 0;\n    $odd = 0;\n    while ($num != 0) {\n        if\
    \ ($isEven) {\n            if ($num % 2 == 0) {\n                $even++;\n  \
    \          }\n        } else {\n            if ($num % 2 != 0) {\n           \
    \     $odd++;\n            }\n        }\n        $num = floor($num / 10);\n  \
    \      $isEven = !$isEven;\n    }\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qgtpttz.php:31\n\
    Stack trace:\n#0 /tmp/tmp0qgtpttz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0qgtpttz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = [];\n    $odd = [];\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $n) {\n        if ($n % 2 === 0) {\n            $even[] = $n;\n        }\
    \ else {\n            $odd[] = $n;\n        }\n    }\n    return array(count($even),\
    \ count($odd));\n}\n\nvar_dump(even_odd_count(-12));\nvar_dump(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8bxwicd_.php on line\
    \ 11\narray(2) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(1)\n}\narray(2) {\n  [0]=>\n\
    \  int(1)\n  [1]=>\n  int(2)\n}\n\nWarning: A non-numeric value encountered in\
    \ /tmp/tmp8bxwicd_.php on line 11\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8bxwicd_.php:28\nStack trace:\n#0 /tmp/tmp8bxwicd_.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8bxwicd_.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if\
    \ ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6ghfmci.php:24\n\
    Stack trace:\n#0 /tmp/tmpc6ghfmci.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpc6ghfmci.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ 0;\n    $even = 0;\n    $result = '';\n    $arr = str_split($num);\n    for\
    \ ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] % 2 == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n    }\n  \
    \  $result = \"({$even}, {$odd})\";\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4x0wlyqw.php:27\n\
    Stack trace:\n#0 /tmp/tmp4x0wlyqw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4x0wlyqw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while($num > 0) {\n        $digit = $num % 10;\n  \
    \      if($digit % 2 == 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\necho \"even_odd_count(-12) ==> (\" . even_odd_count(-12)[0]\
    \ . \", \" . even_odd_count(-12)[1] . \")\\n\";\necho \"even_odd_count(123) ==>\
    \ (\" . even_odd_count(123)[0] . \", \" . even_odd_count(123)[1] . \")\\n\";\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> (0, 0)\neven_odd_count(123) ==> (1, 2)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpe28tg3bs.php:28\nStack trace:\n\
    #0 /tmp/tmpe28tg3bs.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe28tg3bs.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $neg =\
    \ 1;\n    if ($num < 0) {\n        $neg = -1;\n        $num *= -1;\n    }\n  \
    \  $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $dig = $num % 10;\n\
    \        if ($dig % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n    if ($neg\
    \ == -1) {\n        $odd++;\n    }\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn_08pqh.php:35\n\
    Stack trace:\n#0 /tmp/tmpjn_08pqh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjn_08pqh.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbu3ftums.php:14\n\
    Stack trace:\n#0 /tmp/tmpbu3ftums.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbu3ftums.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while($num > 0) {\n        $digit = $num % 10;\n  \
    \      if($digit % 2 == 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ya0xk5u.php:27\n\
    Stack trace:\n#0 /tmp/tmp3ya0xk5u.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3ya0xk5u.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $tup_even_odd\
    \ = array(0, 0);\n    for ($i = 0; $i < strlen($num); $i++) {\n        if ((int)$num[$i]\
    \ % 2 == 0) {\n            $tup_even_odd[0] += 1;\n        } else {\n        \
    \    $tup_even_odd[1] += 1;\n        }\n    }\n    return $tup_even_odd;\n}\n\
    print_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 3\n    [1] => 0\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 0\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplb8fb226.php:24\n\
    Stack trace:\n#0 /tmp/tmplb8fb226.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplb8fb226.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ 0;\n    $even = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $rem\
    \ = $num % 10;\n        if ($rem % 2 == 0)\n            $even++;\n        else\n\
    \            $odd++;\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytl_az8v.php:26\n\
    Stack trace:\n#0 /tmp/tmpytl_az8v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpytl_az8v.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $num = (string)\
    \ $num;\n  $odd = 0;\n  $even = 0;\n  for ($i = 0; $i < strlen($num); $i++) {\n\
    \    if ($num[$i] % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n \
    \   }\n  }\n  return array($even, $odd);\n}\n\necho 'even_odd_count(-12) => ';\n\
    echo '<pre>';\nprint_r(even_odd_count(-12));\necho '</pre>';\n\necho 'even_odd_count(123)\
    \ => ';\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) => <pre>\nWarning: A non-numeric value encountered\
    \ in /tmp/tmproldrs8w.php on line 11\nArray\n(\n    [0] => 2\n    [1] => 1\n)\n\
    </pre>even_odd_count(123) => <pre>Array\n(\n    [0] => 1\n    [1] => 2\n)\n</pre>\n\
    Warning: A non-numeric value encountered in /tmp/tmproldrs8w.php on line 11\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmproldrs8w.php:36\nStack\
    \ trace:\n#0 /tmp/tmproldrs8w.php(45): test()\n#1 {main}\n  thrown in /tmp/tmproldrs8w.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $str = $num;\n  $arr = str_split($str);\n  foreach ($arr\
    \ as $value) {\n    if ($value%2 == 0) {\n      $even++;\n    } else {\n     \
    \ $odd++;\n    }\n  }\n  return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpppu1u5tw.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppu1u5tw.php:26\n\
    Stack trace:\n#0 /tmp/tmpppu1u5tw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpppu1u5tw.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = $odd = 0;\n    $num = abs($num);\n    while ($num) {\n        if ($num % 2)\
    \ {\n            $odd++;\n        } else {\n            $even++;\n        }\n\
    \        $num = (int)($num / 10);\n    }\n    return array($even, $odd);\n}\n\
    echo \"<pre>even_odd_count(123):\\n\";\nprint_r(even_odd_count(123));\necho \"\
    </pre>\";\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>even_odd_count(123):\nArray\n(\n    [0] => 1\n    [1] => 2\n)\n</pre>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpv8yusx9d.php:35\nStack\
    \ trace:\n#0 /tmp/tmpv8yusx9d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv8yusx9d.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if($num\
    \ < 0) $num *= -1;\n    $str = (string)$num;\n    $even = 0;\n    $odd = 0;\n\
    \    $len = strlen($str);\n    for($i = 0; $i < $len; $i++) {\n        if($str[$i]%2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    return array($even, $odd);\n}\necho implode(\" \", even_odd_count(-12));\n\
    echo \"<br>\";\necho implode(\" \", even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1 1<br>1 2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\tforeach (str_split($num) as $value) {\n\t\tif ($value % 2\
    \ === 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t}\n\t}\n\treturn\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpjl0lrcle.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjl0lrcle.php:25\n\
    Stack trace:\n#0 /tmp/tmpjl0lrcle.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjl0lrcle.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    $num = $num . \"\";\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (ord($num[$i]) % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    return array($even_count,\
    \ $odd_count);\n}\n\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmubkpiw.php:29\n\
    Stack trace:\n#0 /tmp/tmpqmubkpiw.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqmubkpiw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $str = strval($num);\n\
    \  $even = 0;\n  $odd = 0;\n  for ($i = 0; $i < strlen($str); $i++) {\n    if\
    \ ($str[$i]%2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n  }\n\
    \  return \"($even, $odd)\";\n}\necho even_odd_count(-12).\"\\n\";\necho even_odd_count(123).\"\
    \\n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4rt79khi.php on line\
    \ 11\n(2, 1)\n(1, 2)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rt79khi.php:26\n\
    Stack trace:\n#0 /tmp/tmp4rt79khi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4rt79khi.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$temp =\
    \ array();\n\t$even = 0;\n\t$odd = 0;\n\t$num = abs($num);\n\t$new_str = strval($num);\n\
    \tfor ($i = 0; $i < strlen($new_str); $i++) {\n\t\t$temp[$i] = intval($new_str[$i]);\n\
    \t\tif ($temp[$i] % 2 == 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\t\t\t$odd +=\
    \ 1;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\nprint_r(even_odd_count(-12)\
    \ . PHP_EOL);\nprint_r(even_odd_count(123) . PHP_EOL);\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    $new_num = abs($num);\n    while ($new_num >\
    \ 0) {\n        $remainder = $new_num % 10;\n        if ($remainder % 2 == 0)\
    \ {\n            $even_count += 1;\n        } else {\n            $odd_count +=\
    \ 1;\n        }\n        $new_num = floor($new_num / 10);\n    }\n    return array($even_count,\
    \ $odd_count);\n}\n\necho \"Even and odd digit count for number -12 is: \";\n\
    print_r(even_odd_count(-12));\necho \"<br>\";\necho \"Even and odd digit count\
    \ for number 123 is: \";\nprint_r(even_odd_count(123));\necho \"<br>\";\necho\
    \ \"Even and odd digit count for number 1234 is: \";\nprint_r(even_odd_count(1234));\n\
    echo \"<br>\";\necho \"Even and odd digit count for number 0 is: \";\nprint_r(even_odd_count(0));\n\
    echo \"<br>\";\necho \"Even and odd digit count for number 939 is: \";\nprint_r(even_odd_count(939));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Even and odd digit count for number -12 is: Array\n(\n    [0] => 1\n  \
    \  [1] => 1\n)\n<br>Even and odd digit count for number 123 is: Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n<br>Even and odd digit count for number 1234 is:\
    \ Array\n(\n    [0] => 2\n    [1] => 2\n)\n<br>Even and odd digit count for number\
    \ 0 is: Array\n(\n    [0] => 0\n    [1] => 0\n)\n<br>Even and odd digit count\
    \ for number 939 is: Array\n(\n    [0] => 0\n    [1] => 3\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpe047eonc.php:48\nStack trace:\n#0 /tmp/tmpe047eonc.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpe047eonc.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = ['even' => 0, 'odd' => 0];\n    if ($num < 0) {\n        $num = -$num;\n \
    \   }\n    $digits = str_split($num);\n    for ($i = 0; $i < count($digits); $i++)\
    \ {\n        if ($digits[$i] % 2 == 0) {\n            $result['even']++;\n   \
    \     } else {\n            $result['odd']++;\n        }\n    }\n    return array_values($result);\n\
    }\n\necho \"Test #1: \" . (implode(\",\", even_odd_count(-12)) == implode(\",\"\
    , [1, 1]) ? \"PASS\" : \"FAIL\") . \"\\n\";\necho \"Test #2: \" . (implode(\"\
    ,\", even_odd_count(123)) == implode(\",\", [1, 2]) ? \"PASS\" : \"FAIL\") . \"\
    \\n\";\necho \"Test #3: \" . (implode(\",\", even_odd_count(1111)) == implode(\"\
    ,\", [0, 4]) ? \"PASS\" : \"FAIL\") . \"\\n\";\necho \"Test #4: \" . (implode(\"\
    ,\", even_odd_count(22222)) == implode(\",\", [5, 0]) ? \"PASS\" : \"FAIL\") .\
    \ \"\\n\";\necho \"Test #5: \" . (implode(\",\", even_odd_count(3)) == implode(\"\
    ,\", [0, 1]) ? \"PASS\" : \"FAIL\") . \"\\n\";\necho \"Test #6: \" . (implode(\"\
    ,\", even_odd_count(0)) == implode(\",\", [1, 0]) ? \"PASS\" : \"FAIL\") . \"\\\
    n\";\necho \"Test #7: \" . (implode(\",\", even_odd_count(1)) == implode(\",\"\
    , [0, 1]) ? \"PASS\" : \"FAIL\") . \"\\n\";\necho \"Test #8: \" . (implode(\"\
    ,\", even_odd_count(11)) == implode(\",\", [0, 2]) ? \"PASS\" : \"FAIL\") . \"\
    \\n\";\necho \"Test #9: \" . (\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzgogmfl_.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    $number = abs($num);\n    $output = [];\n   \
    \ while ($number > 0) {\n        $remainder = $number % 10;\n        if ($remainder\
    \ % 2 == 0) {\n            $even_count += 1;\n        } else {\n            $odd_count\
    \ += 1;\n        }\n        $number = floor($number / 10);\n    }\n    $output\
    \ = [$even_count, $odd_count];\n    return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xa5k8nk.php:36\n\
    Stack trace:\n#0 /tmp/tmp_xa5k8nk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_xa5k8nk.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  // Write\
    \ your code here\n  $n = $num >= 0 ? $num : -$num;\n  $even = 0;\n  $odd = 0;\n\
    \  while ($n >= 1) {\n    $digit = $n % 10;\n    if ($digit % 2 == 0) {\n    \
    \  $even++;\n    } else {\n      $odd++;\n    }\n    $n = $n / 10;\n  }\n  return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50sbqq9f.php:35\n\
    Stack trace:\n#0 /tmp/tmp50sbqq9f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp50sbqq9f.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  if($num\
    \ < 0) {\n    $num = -1 * $num;\n  }\n  $odd = 0;\n  $even = 0;\n  $num_array\
    \ = array_map('intval', str_split($num));\n  foreach($num_array as $number) {\n\
    \    if($number % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n   \
    \ }\n  }\n  return array($even, $odd);\n}\n\necho '<h3>even_odd_count(-12) ==>\
    \ (1, 1)</h3>';\nvar_dump(even_odd_count(-12));\necho '<h3>even_odd_count(123)\
    \ ==> (1, 2)</h3>';\nvar_dump(even_odd_count(123));\necho '<h3>even_odd_count(1133)\
    \ ==> (0, 3)</h3>';\nvar_dump(even_odd_count(1133));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<h3>even_odd_count(-12) ==> (1, 1)</h3>array(2) {\n  [0]=>\n  int(1)\n\
    \  [1]=>\n  int(1)\n}\n<h3>even_odd_count(123) ==> (1, 2)</h3>array(2) {\n  [0]=>\n\
    \  int(1)\n  [1]=>\n  int(2)\n}\n<h3>even_odd_count(1133) ==> (0, 3)</h3>array(2)\
    \ {\n  [0]=>\n  int(0)\n  [1]=>\n  int(4)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t$lastDigit = $num % 10;\n\t\tif ($lastDigit\
    \ % 2 == 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\t\t\t$odd += 1;\n\t\t}\n\t\t\
    $num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\necho \"<pre>\"\
    ;\necho even_odd_count(-12)[0] . \"\\n\";\necho even_odd_count(-12)[1] . \"\\\
    n\";\necho even_odd_count(123)[0] . \"\\n\";\necho even_odd_count(123)[1] . \"\
    \\n\";\necho \"</pre>\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>0\n0\n1\n2\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9ln0htty.php:33\nStack trace:\n#0 /tmp/tmp9ln0htty.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9ln0htty.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $r = [0,\
    \ 0];\n  while($num) {\n    $r[0] += $num % 2;\n    $num = (int)($num / 2);\n\
    \  }\n  $r[1] = 8 - $r[0];\n  return $r;\n}\n\n$l = [-12, 123, 456, 5678, 2147483647];\n\
    for($i = 0; $i < count($l); $i++) {\n  $t = even_odd_count($l[$i]);\n  echo \"\
    $l[$i] => ($t[0], $t[1])\\n\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "-12 => (-2, 10)\n123 => (6, 2)\n456 => (4, 4)\n5678 => (7, 1)\n2147483647\
    \ => (31, -23)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt0ww5t2x.php:27\n\
    Stack trace:\n#0 /tmp/tmpt0ww5t2x.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpt0ww5t2x.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $num) {\n    $num =\
    \ abs($num);\n    $num % 2 === 0 ? $even++ : $odd++;\n  }\n  return [$even, $odd];\n\
    }\nprint_r(even_odd_count(-12));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzra8wt1j.php:22\nStack trace:\n#0 /tmp/tmpzra8wt1j.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzra8wt1j.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_counter\
    \ = 0;\n    $odd_counter = 0;\n    $final_result = [];\n    $num_array = [];\n\
    \    $num_array = str_split(abs($num));\n    foreach ($num_array as $value) {\n\
    \        if ($value % 2 == 0) {\n            $even_counter++;\n        } else\
    \ {\n            $odd_counter++;\n        }\n    }\n    $final_result = array($even_counter,\
    \ $odd_counter);\n    return $final_result;\n}\n$result = even_odd_count(-123);\n\
    var_dump($result);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$evenCount\
    \ = 0;\n\t$oddCount = 0;\n\t$stringNum = strval($num);\n\t$stringArray = str_split($stringNum);\n\
    \tif ($num < 0) {\n\t\tarray_shift($stringArray);\n\t}\n\tforeach ($stringArray\
    \ as $num) {\n\t\tif ($num % 2 == 0) {\n\t\t\t$evenCount++;\n\t\t} else {\n\t\t\
    \t$oddCount++;\n\t\t}\n\t}\n\treturn array($evenCount, $oddCount);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\tif($num\
    \ > 0) {\n\t\t$num_str = (string)$num;\n\t\t$even_count = substr_count($num_str,\
    \ '0') + substr_count($num_str, '2') + substr_count($num_str, '4') + substr_count($num_str,\
    \ '6') + substr_count($num_str, '8');\n\t\t$odd_count = substr_count($num_str,\
    \ '1') + substr_count($num_str, '3') + substr_count($num_str, '5') + substr_count($num_str,\
    \ '7') + substr_count($num_str, '9');\n\t} else {\n\t\t$num_str = (string)(-$num);\n\
    \t\t$even_count = substr_count($num_str, '0') + substr_count($num_str, '2') +\
    \ substr_count($num_str, '4') + substr_count($num_str, '6') + substr_count($num_str,\
    \ '8');\n\t\t$odd_count = substr_count($num_str, '1') + substr_count($num_str,\
    \ '3') + substr_count($num_str, '5') + substr_count($num_str, '7') + substr_count($num_str,\
    \ '9');\n\t}\n\treturn array($even_count, $odd_count);\n}\necho 'even_odd_count(-12)\
    \ is [1, 1]: ';\nprint_r(even_odd_count(-12));\necho '<br>';\necho 'even_odd_count(123)\
    \ is [1, 2]: ';\nprint_r(even_odd_count(123));\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) is [1, 1]: Array\n(\n    [0] => 1\n    [1] => 1\n)\n\
    <br>even_odd_count(123) is [1, 2]: Array\n(\n    [0] => 1\n    [1] => 2\n)\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ft0pivp.php:15\n\
    Stack trace:\n#0 /tmp/tmp5ft0pivp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5ft0pivp.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $result\
    \ = [0, 0];\n  $abs_num = abs($num);\n  while ($abs_num >= 1) {\n    $current_num\
    \ = $abs_num % 10;\n    if ($current_num % 2 === 0) {\n      $result[0] += 1;\n\
    \    } else {\n      $result[1] += 1;\n    }\n    $abs_num = (int)($abs_num /\
    \ 10);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprpfm1ewg.php:33\n\
    Stack trace:\n#0 /tmp/tmprpfm1ewg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprpfm1ewg.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ == 0) {\n        return array(0,0);\n    }\n    $mod = $num % 10;\n    if ($mod\
    \ % 2 === 0) {\n        $even = 1;\n        $odd = 0;\n    } else {\n        $even\
    \ = 0;\n        $odd = 1;\n    }\n    return array_merge(even_odd_count($num /\
    \ 10), array($even, $odd));\n}\n\n$output = even_odd_count(-12);\nprint_r($output);\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 1\n    [3] => 0\n    [4]\
    \ => 1\n    [5] => 0\n    [6] => 1\n    [7] => 0\n    [8] => 1\n    [9] => 0\n\
    \    [10] => 1\n    [11] => 0\n    [12] => 1\n    [13] => 0\n    [14] => 1\n \
    \   [15] => 0\n    [16] => 1\n    [17] => 0\n    [18] => 1\n    [19] => 0\n  \
    \  [20] => 1\n    [21] => 0\n    [22] => 1\n    [23] => 0\n    [24] => 1\n   \
    \ [25] => 0\n    [26] => 1\n    [27] => 0\n    [28] => 1\n    [29] => 0\n    [30]\
    \ => 1\n    [31] => 0\n    [32] => 1\n    [33] => 0\n    [34] => 1\n    [35] =>\
    \ 0\n    [36] => 1\n    [37] => 0\n    [38] => 1\n    [39] => 0\n    [40] => 1\n\
    \    [41] => 0\n    [42] => 1\n    [43] => 0\n    [44] => 1\n    [45] => 0\n \
    \   [46] => 1\n    [47] => 0\n    [48] => 1\n    [49] => 0\n    [50] => 1\n  \
    \  [51] => 0\n    [52] => 1\n    [53] => 0\n    [54] => 1\n    [55] => 0\n   \
    \ [56] => 1\n    [57] => 0\n    [58] => 1\n    [59] => 0\n    [60] => 1\n    [61]\
    \ => 0\n    [62] => 1\n    [63] => 0\n    [64] => 1\n    [65] => 0\n    [66] =>\
    \ 1\n    [67] => 0\n    [68] => 1\n    [69] => 0\n    [70] => 1\n    [71] => 0\n\
    \    [72] => 1\n    [73] => 0\n    [74] => 1\n    [75] => 0\n    [76] => 1\n \
    \   [77] => 0\n    [78] => 1\n    [79] => 0\n    [80] => 1\n    [81] => 0\n  \
    \  [82] => 1\n    [83] => 0\n    [84] => 1\n    [85] => 0\n    [86] => 1\n   \
    \ [87] => 0\n    [88] => 1\n    [89] => 0\n    [90] => 1\n    [91] => 0\n    [92]\
    \ => 1\n    [93] => 0\n    [94] => 1\n    [95] => 0\n    [96] => 1\n    [97] =>\
    \ 0\n    [98] => 1\n    [99] => 0\n    [100] => 1\n    [101] => 0\n    [102] =>\
    \ 1\n    [103] => 0\n    [104] => 1\n    [105] => 0\n    [106] => 1\n    [107]\
    \ => 0\n    [108] => 1\n    [109] => 0\n    [110] => 1\n    [111] => 0\n    [112]\
    \ => 1\n    [113] => 0\n    [114] => 1\n    [115] => 0\n    [116] => 1\n    [117]\
    \ => 0\n    [118] => 1\n    [119] => 0\n    [120] => 1\n    [121] => 0\n    [122]\
    \ => 1\n    [123] => 0\n    [124] => 1\n    [125] => 0\n    [126] => 1\n    [127]\
    \ => 0\n    [128] => 1\n    [129] => 0\n    [130] => 1\n    [131] => 0\n    [132]\
    \ => 1\n    [133] => 0\n    [134] => 1\n    [135] => 0\n    [136] => 1\n    [137]\
    \ => 0\n    [138] => 1\n    [139] => 0\n    [140] => 1\n    [141] => 0\n    [142]\
    \ => 1\n    ["
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evendigits\
    \ = 0;\n    $odddigits = 0;\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $evendigits++;\n        } else {\n\
    \            $odddigits++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ [$evendigits, $odddigits];\n}\nprint_r(even_odd_count(-12));\necho \"<br/>\"\
    ;\nprint_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n)\n<br/>Array\n(\n    [0] => 324\n\
    \    [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpodjunkos.php:28\n\
    Stack trace:\n#0 /tmp/tmpodjunkos.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpodjunkos.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $divisor\
    \ = $num < 0 ? -1 : 1;\n    $even_count = 0;\n    $odd_count = 0;\n    while ($num\
    \ != 0) {\n        $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n\
    \            $even_count++;\n        } else {\n            $odd_count++;\n   \
    \     }\n        $num = floor($num / 10);\n    }\n    return array($even_count,\
    \ $odd_count);\n}\n\n$num = -12;\n$result = even_odd_count($num);\nprintf(\"even_odd_count(%d)\
    \ = %d, %d\\n\", $num, $result[0], $result[1]);\n$num = 123;\n$result = even_odd_count($num);\n\
    printf(\"even_odd_count(%d) = %d, %d\\n\", $num, $result[0], $result[1]);\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = (string) $num;\n  for ($i = 0; $i < strlen($num);\
    \ $i++) {\n    if ($num[$i] % 2 === 0) {\n      $even++;\n    } else {\n     \
    \ $odd++;\n    }\n  }\n  return [$even, $odd];\n}\n\nvar_dump(even_odd_count(-12)\
    \ ==> (1, 1));\nvar_dump(even_odd_count(123) ==> (1, 2));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyyuoae80.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_odd\
    \ = [0, 0];\n    $digits = [];\n    if ($num < 0) {\n        $num = $num * -1;\n\
    \    }\n    while ($num > 0) {\n        $digits[] = $num % 10;\n        $num =\
    \ (int)($num / 10);\n    }\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 === 0) {\n            $even_odd[0] += 1;\n        } else {\n           \
    \ $even_odd[1] += 1;\n        }\n    }\n    return $even_odd;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_oalcmrz.php:37\n\
    Stack trace:\n#0 /tmp/tmp_oalcmrz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_oalcmrz.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  if ($num < 0) {\n    $num = -$num;\n  }\n  $digits = str_split($num);\n\
    \  foreach ($digits as $digit) {\n    if ($digit % 2 === 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n  }\n  return array($even, $odd);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\t$temp_num = $num;\n\tif ($num < 0) {\n\t\t$temp_num = $num\
    \ * -1;\n\t}\n\twhile ($temp_num != 0) {\n\t\t$remainder = $temp_num % 10;\n\t\
    \tif ($remainder % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t\
    }\n\t\t$temp_num = $temp_num / 10;\n\t}\n\treturn array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2on0msq7.php:30\n\
    Stack trace:\n#0 /tmp/tmp2on0msq7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2on0msq7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $arr = [];\n    if ($num < 0) {\n        $num = -$num;\n\
    \    }\n    for ($i = 0; $i < strlen($num); $i++) {\n        if ($num[$i] % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    array_push($arr, $even, $odd);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv59l4p0k.php:29\n\
    Stack trace:\n#0 /tmp/tmpv59l4p0k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv59l4p0k.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ abs($num);\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 === 0) {\n            $even++;\n      \
    \  } else {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n\
    \    }\n    return [$even, $odd];\n}\necho implode(', ', even_odd_count(-12))\
    \ . \"\\n\";\necho implode(', ', even_odd_count(123)) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1, 1\n1, 2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm31097m2.php:36\n\
    Stack trace:\n#0 /tmp/tmpm31097m2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm31097m2.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\tif($num<0)\n\
    \t\t$num *= -1;\n\t$even_count = 0;\n\t$odd_count = 0;\n\twhile($num>0){\n\t\t\
    $digit = $num%10;\n\t\tif($digit%2==0)\n\t\t\t$even_count++;\n\t\telse\n\t\t\t\
    $odd_count++;\n\t\t$num = $num/10;\n\t}\n\t$arr = array($even_count, $odd_count);\n\
    \treturn $arr;\n}\n\nprint_r(even_odd_count(-12));\necho \"<br>\";\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 324\n    [1] => 1\n)\n<br>Array\n(\n    [0] => 324\n\
    \    [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3fy8lxy2.php:31\n\
    Stack trace:\n#0 /tmp/tmp3fy8lxy2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3fy8lxy2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen((string)$num); $i++) {\n \
    \       if ((int)substr((string)$num, $i, 1) % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return \"($even,\
    \ $odd)\";\n}\necho even_odd_count(-12) . PHP_EOL;\necho even_odd_count(123) .\
    \ PHP_EOL;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(2, 1)\n(1, 2)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3icc5fgs.php:26\n\
    Stack trace:\n#0 /tmp/tmp3icc5fgs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3icc5fgs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num != 0) {\n      \
    \  $last = $num % 10;\n        if ($last % 2 == 0) $even++;\n        else $odd++;\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0asioclk.php:30\n\
    Stack trace:\n#0 /tmp/tmp0asioclk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0asioclk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  \n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqtzr52o.php:15\n\
    Stack trace:\n#0 /tmp/tmphqtzr52o.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphqtzr52o.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if\
    \ (ord($num[$i]) % 2 == 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvow6abl8.php:24\n\
    Stack trace:\n#0 /tmp/tmpvow6abl8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvow6abl8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $arr =\
    \ str_split(abs($num));\n    $count_even = array_reduce($arr, function($a, $b)\
    \ {\n        return $a + (($b % 2) == 0);\n    });\n    $count_odd = count($arr)\
    \ - $count_even;\n    return array($count_even, $count_odd);\n}\n\necho \"<pre>even_odd_count(-12)\\\
    r\\n\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>even_odd_count(123)\\\
    r\\n\";\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>even_odd_count(-12)\nArray\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>even_odd_count(123)\n\
    Array\n(\n    [0] => 1\n    [1] => 2\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  if ($num < 0) {\n    $num = $num * -1;\n  }\n  for ($i =\
    \ $num; $i > 0; $i = $i / 10) {\n    $number = $i % 10;\n    if ($number % 2 ==\
    \ 0) {\n      $even += 1;\n    } else {\n      $odd += 1;\n    }\n  }\n  return\
    \ \"($even, $odd)\";\n}\n\necho even_odd_count(-12);\necho \"\\n\";\necho even_odd_count(123);\n\
    echo \"\\n\";\necho even_odd_count(0);\necho \"\\n\";\necho even_odd_count(1);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(324, 1)\n(324, 2)\n(0, 0)\n(323, 1)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpv5j_hc89.php:36\nStack trace:\n#0 /tmp/tmpv5j_hc89.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpv5j_hc89.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        $num = -$num;\n    }\n    $even = 0;\n    $odd = 0;\n    while\
    \ ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n\n$num = readline(\"\
    Enter a number: \");\nlist($even, $odd) = even_odd_count($num);\necho \"Even:\
    \ $even\\n\";\necho \"Odd: $odd\\n\";\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmppajte_37.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmppajte_37.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if\
    \ ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    $tuple = array($even, $odd);\n    return $tuple;\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiw05gcus.php:25\n\
    Stack trace:\n#0 /tmp/tmpiw05gcus.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpiw05gcus.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  for ($i = 0; $i < strlen((string)$num); $i++) {\n    if ((int)$num[$i]\
    \ % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n  }\n  return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvymy6zbj.php:24\n\
    Stack trace:\n#0 /tmp/tmpvymy6zbj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvymy6zbj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $number = abs($num);\n    while ($number != 0) {\n\
    \        $digit = $number % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $number = floor($number\
    \ / 10);\n    }\n    return [$even, $odd];\n}\n\necho implode(', ', even_odd_count(-12))\
    \ . \"\\n\";\necho implode(', ', even_odd_count(123)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1, 1\n1, 2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsnq3exap.php:36\n\
    Stack trace:\n#0 /tmp/tmpsnq3exap.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsnq3exap.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$num = (string)\
    \ abs($num);\n\t$even = $odd = 0;\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\
    \t\tif ((int) $num[$i] % 2 === 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t}\n\treturn [$even, $odd];\n}\n\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$evens =\
    \ 0;\n\t$odds = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$evens++;\n\t\t} else {\n\t\t\t$odds++;\n\
    \t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($evens, $odds);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8pbqqyz.php:34\n\
    Stack trace:\n#0 /tmp/tmpe8pbqqyz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe8pbqqyz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // Your\
    \ code here\n    $num = abs($num);\n    $odds = 0;\n    $evens = 0;\n    for ($i\
    \ = 0; $i < strlen((string)$num); $i++) {\n        if ($num % 2 == 0) {\n    \
    \        $evens++;\n        } else {\n            $odds++;\n        }\n      \
    \  $num = $num / 10;\n    }\n    return array($evens, $odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34o3_rmv.php:27\n\
    Stack trace:\n#0 /tmp/tmp34o3_rmv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp34o3_rmv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$arr = str_split($num);\n\
    \t$r1 = 0;\n\t$r2 = 0;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($arr[$i]\
    \ % 2 == 0) {\n\t\t\t$r1 += 1;\n\t\t} else {\n\t\t\t$r2 += 1;\n\t\t}\n\t}\n\t\
    return array($r1, $r2);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp5f2ghdzb.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5f2ghdzb.php:26\n\
    Stack trace:\n#0 /tmp/tmp5f2ghdzb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5f2ghdzb.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $res =\
    \ array(0, 0);\n    $str = (string)$num;\n    for ($i = 0; $i < strlen($str);\
    \ $i++) {\n        if ($str[$i] % 2 === 0) $res[0]++;\n        else $res[1]++;\n\
    \    }\n    return $res;\n}\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    print_r(even_odd_count(123456789));\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp9_r93xl0.php on line\
    \ 10\nArray\n(\n    [0] => 2\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\nArray\n(\n    [0] => 4\n    [1] => 5\n)\n\nWarning: A non-numeric value\
    \ encountered in /tmp/tmp9_r93xl0.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9_r93xl0.php:24\nStack trace:\n#0 /tmp/tmp9_r93xl0.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9_r93xl0.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $arr = str_split($num);\n  foreach ($arr as $number) {\n\
    \    if ($number % 2 === 0) {\n      $even += 1;\n    } else {\n      $odd +=\
    \ 1;\n    }\n  }\n  return [$even, $odd];\n}\n\necho even_odd_count(-12)[0] .\
    \ \" \" . even_odd_count(-12)[1] . \"\\n\";\necho even_odd_count(123)[0] . \"\
    \ \" . even_odd_count(123)[1] . \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp96mz8aqj.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmp96mz8aqj.php on line\
    \ 11\n2 1\n1 2\n\nWarning: A non-numeric value encountered in /tmp/tmp96mz8aqj.php\
    \ on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96mz8aqj.php:28\n\
    Stack trace:\n#0 /tmp/tmp96mz8aqj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp96mz8aqj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$arr = str_split($num);\n\
    \t$odd = 0;\n\t$even = 0;\n\tforeach ($arr as $key => $value) {\n\t\tif ($value\
    \ % 2 != 0) {\n\t\t\t$odd++;\n\t\t} else {\n\t\t\t$even++;\n\t\t}\n\t}\n\treturn\
    \ \"($even, $odd)\";\n}\necho even_odd_count(-12);\necho even_odd_count(123);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp91shr0y1.php on line\
    \ 11\n(2, 1)(1, 2)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91shr0y1.php:27\n\
    Stack trace:\n#0 /tmp/tmp91shr0y1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp91shr0y1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evenCount\
    \ = 0;\n    $oddCount = 0;\n    while($num > 0) {\n        $digit = $num % 10;\n\
    \        if($digit % 2 == 0) {\n            $evenCount++;\n        } else {\n\
    \            $oddCount++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return array($evenCount, $oddCount);\n}\n\n$result = even_odd_count(-12);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8_pgz330.php:29\nStack trace:\n#0 /tmp/tmp8_pgz330.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8_pgz330.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  while ($num != 0) {\n    $remainder = $num % 10;\n    if\
    \ ($remainder % 2 == 0) {\n      $even += 1;\n    } else {\n      $odd += 1;\n\
    \    }\n    $num = ($num - $remainder) / 10;\n  }\n  return array($even, $odd);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprl5imc56.php:32\n\
    Stack trace:\n#0 /tmp/tmprl5imc56.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprl5imc56.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // Compute\
    \ the absolute value of the number\n    $num = abs($num);\n    // Convert the\
    \ number to a string\n    $num = (string)$num;\n    // Find length of the string\n\
    \    $length = strlen($num);\n    // Set even and odd count\n    $even = 0;\n\
    \    $odd = 0;\n    // Loop through all the digits\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        // If even\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    // Create a tuple\
    \ of even and odd count\n    $tuple = array($even, $odd);\n    // Return the tuple\n\
    \    return $tuple;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ $odd = 0;\n  $num = (string)$num;\n  for ($i = 0; $i < strlen($num); $i++) {\n\
    \    if ($num[$i] % 2 === 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpjh1zblz0.php on line\
    \ 10\nArray\n(\n    [0] => 2\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nWarning: A non-numeric value encountered in /tmp/tmpjh1zblz0.php\
    \ on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjh1zblz0.php:26\n\
    Stack trace:\n#0 /tmp/tmpjh1zblz0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjh1zblz0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$odd_count\
    \ = 0;\n\t$even_count = 0;\n\t$num = abs($num);\n\twhile($num > 0) {\n\t\t$digit\
    \ = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even_count++;\n\t\t} else {\n\
    \t\t\t$odd_count++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even_count,\
    \ $odd_count);\n}\n\n$even_odd_count = even_odd_count(-12);\necho 'even_odd_count(-12)\
    \ ==> (' . $even_odd_count[0] . ', ' . $even_odd_count[1] . ')<br />';\n\n$even_odd_count\
    \ = even_odd_count(123);\necho 'even_odd_count(123) ==> (' . $even_odd_count[0]\
    \ . ', ' . $even_odd_count[1] . ')<br />';\nfunction candidate(...$args) {\n \
    \   return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> (1, 1)<br />even_odd_count(123) ==> (1, 2)<br />\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp9ht6mepq.php:39\nStack\
    \ trace:\n#0 /tmp/tmp9ht6mepq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9ht6mepq.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // $even\
    \ = 0;\n    // $odd = 0;\n    // $n = $num < 0 ? abs($num) : $num;\n    // while\
    \ ($n > 0) {\n    //     $digit = $n % 10;\n    //     if ($digit % 2 == 0) $even++;\n\
    \    //     else $odd++;\n    //     $n = floor($n / 10);\n    // }\n    // return\
    \ [$even, $odd];\n\n    $even = 0;\n    $odd = 0;\n    $n = $num < 0 ? abs($num)\
    \ : $num;\n    while ($n > 0) {\n        $digit = $n % 10;\n        $even += $digit\
    \ % 2 == 0 ? 1 : 0;\n        $odd += $digit % 2 == 1 ? 1 : 0;\n        $n = floor($n\
    \ / 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwrc9s48.php:42\n\
    Stack trace:\n#0 /tmp/tmpwwrc9s48.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwwrc9s48.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $array =\
    \ str_split($num);\n  $newArray = [];\n  $result = [];\n  foreach ($array as $key\
    \ => $value) {\n    if ($value % 2 == 0) {\n      $newArray[$key] = $value;\n\
    \    }\n  }\n  array_push($result, count($newArray));\n  array_push($result, count($array)\
    \ - count($newArray));\n  return $result;\n}\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>\nWarning: A non-numeric value encountered in /tmp/tmp1qbiwhb2.php\
    \ on line 11\nArray\n(\n    [0] => 2\n    [1] => 1\n)\n</pre>\nWarning: A non-numeric\
    \ value encountered in /tmp/tmp1qbiwhb2.php on line 11\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1qbiwhb2.php:28\nStack trace:\n#0 /tmp/tmp1qbiwhb2.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1qbiwhb2.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $arr =\
    \ str_split(abs($num));\n    $result = array_map(function($item) {\n        return\
    \ $item % 2 == 0 ? \"even\" : \"odd\";\n    }, $arr);\n    $res[\"even\"] = count(array_filter($result,\
    \ function($item) {\n        return $item == \"even\";\n    }));\n    $res[\"\
    odd\"] = count(array_filter($result, function($item) {\n        return $item ==\
    \ \"odd\";\n    }));\n    return $res;\n}\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wwq85lq.php:24\n\
    Stack trace:\n#0 /tmp/tmp9wwq85lq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9wwq85lq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $count\
    \ = 0;\n    $even = 0;\n    $odd = 0;\n    $f = true;\n    while ($num != 0) {\n\
    \        $count++;\n        $remainder = $num % 10;\n        if ($remainder %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n        $num = $num / 10;\n    }\n    return [$even, $odd];\n}\n\necho\
    \ \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 324\n    [1] => 1\n)\n</pre><pre>Array\n(\n \
    \   [0] => 324\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwz_5m2ct.php:36\nStack trace:\n#0 /tmp/tmpwz_5m2ct.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwz_5m2ct.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    if($num < 0) {\n        $num = $num * -1;\n \
    \   }\n    $num = strval($num);\n    for($i = 0; $i < strlen($num); $i++) {\n\
    \        if(intval($num[$i]) % 2 == 0) {\n            $even_count++;\n       \
    \ } else {\n            $odd_count++;\n        }\n    }\n    $result = array($even_count,\
    \ $odd_count);\n    return $result;\n}\n\n$num = -12;\n$result = even_odd_count($num);\n\
    echo \"even_odd_count($num) ==> (\" . $result[0] . \", \" . $result[1] . \")\\\
    n\";\n\n$num = 123;\n$result = even_odd_count($num);\necho \"even_odd_count($num)\
    \ ==> (\" . $result[0] . \", \" . $result[1] . \")\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> (1, 1)\neven_odd_count(123) ==> (1, 2)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $arr =\
    \ str_split($num);\n    $odd = 0;\n    $even = 0;\n    foreach ($arr as $n) {\n\
    \        if ($n%2 == 0) {\n            $even++;\n        } else {\n          \
    \  $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\necho '<pre>';\n\
    print_r(even_odd_count(-12));\necho '</pre>';\n\necho '<pre>';\nprint_r(even_odd_count(123));\n\
    echo '</pre>';\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>\nWarning: A non-numeric value encountered in /tmp/tmpkaoe6xly.php\
    \ on line 11\nArray\n(\n    [0] => 2\n    [1] => 1\n)\n</pre><pre>Array\n(\n \
    \   [0] => 1\n    [1] => 2\n)\n</pre>\nWarning: A non-numeric value encountered\
    \ in /tmp/tmpkaoe6xly.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpkaoe6xly.php:34\nStack trace:\n#0 /tmp/tmpkaoe6xly.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkaoe6xly.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ [];\n\t$odd = [];\n\t$str = strval($num);\n\tif ($num < 0) {\n\t\t$str = substr($str,\
    \ 1);\n\t}\n\tfor ($i = 0; $i < strlen($str); $i++) {\n\t\tif ($str[$i] % 2 ==\
    \ 0) {\n\t\t\tarray_push($even, $str[$i]);\n\t\t} else {\n\t\t\tarray_push($odd,\
    \ $str[$i]);\n\t\t}\n\t}\n\treturn array(count($even), count($odd));\n}\necho\
    \ even_odd_count(-12) . \"<br>\";\necho even_odd_count(123) . \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$a = $num\
    \ * -1;\n\t$even = array();\n\t$odd = array();\n\tif ($num < 0) {\n\t\t$num =\
    \ $a;\n\t}\n\t$a = str_split($num);\n\tfor ($i = 0; $i < count($a); $i++) {\n\t\
    \tif ($a[$i] % 2 == 0) {\n\t\t\tarray_push($even, $a[$i]);\n\t\t} else {\n\t\t\
    \tarray_push($odd, $a[$i]);\n\t\t}\n\t}\n\t$data = array(count($even), count($odd));\n\
    \treturn $data;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $arr = str_split(abs($num));\n\
    \  $length = count($arr);\n  $even = 0;\n  $odd = 0;\n  for ($i = 0; $i < $length;\
    \ $i++) {\n    if ($arr[$i] % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $string\
    \ = strval($num);\n    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        if (is_numeric($string[$i])) {\n            if ($string[$i]\
    \ % 2 == 0) {\n                $even++;\n            } else {\n              \
    \  $odd++;\n            }\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $count =\
    \ array(\n    \"even\" => 0,\n    \"odd\" => 0\n  );\n  while ($num) {\n    $last_digit\
    \ = $num % 10;\n    if ($last_digit % 2 == 0) {\n      $count[\"even\"]++;\n \
    \   } else {\n      $count[\"odd\"]++;\n    }\n    $num = intval($num / 10);\n\
    \  }\n  return $count;\n}\n\n$a = even_odd_count(-12);\necho '$a = even_odd_count(-12)'\
    \ . \"\\n\";\nvar_dump($a);\n\n$b = even_odd_count(123);\necho '$b = even_odd_count(123)'\
    \ . \"\\n\";\nvar_dump($b);\n\n$c = even_odd_count(123456789);\necho '$c = even_odd_count(123456789)'\
    \ . \"\\n\";\nvar_dump($c);\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "$a = even_odd_count(-12)\narray(2) {\n  [\"even\"]=>\n  int(1)\n  [\"odd\"\
    ]=>\n  int(1)\n}\n$b = even_odd_count(123)\narray(2) {\n  [\"even\"]=>\n  int(1)\n\
    \  [\"odd\"]=>\n  int(2)\n}\n$c = even_odd_count(123456789)\narray(2) {\n  [\"\
    even\"]=>\n  int(4)\n  [\"odd\"]=>\n  int(5)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpk2goq0ax.php:40\nStack trace:\n#0 /tmp/tmpk2goq0ax.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpk2goq0ax.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if\
    \ (strval($num)[$i] % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    return array($even, $odd);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpo7ivwchn.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7ivwchn.php:24\n\
    Stack trace:\n#0 /tmp/tmpo7ivwchn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo7ivwchn.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $num = abs($num);\n\
    \  $count = array(0, 0);\n  while ($num > 0) {\n    $count[$num % 2]++;\n    $num\
    \ = floor($num / 10);\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqcdvnze.php:27\n\
    Stack trace:\n#0 /tmp/tmpxqcdvnze.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxqcdvnze.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\t$array = str_split($num);\n\tfor ($i = 0; $i < count($array);\
    \ $i++) {\n\t\tif ($array[$i] % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\n$test1 = even_odd_count(-12);\n\
    $test2 = even_odd_count(123);\nprint_r($test1);\nprint_r($test2);\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpuzl35st9.php on line\
    \ 11\nArray\n(\n    [0] => 2\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nWarning: A non-numeric value encountered in /tmp/tmpuzl35st9.php\
    \ on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzl35st9.php:30\n\
    Stack trace:\n#0 /tmp/tmpuzl35st9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzl35st9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ abs($num);\n    $evens = 0;\n    $odds = 0;\n    while ($num > 0) {\n      \
    \  $cur = $num % 10;\n        if ($cur % 2 == 0) {\n            $evens++;\n  \
    \      } else {\n            $odds++;\n        }\n        $num = intval($num /\
    \ 10);\n    }\n    return [$evens, $odds];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xzj6ttn.php:34\n\
    Stack trace:\n#0 /tmp/tmp4xzj6ttn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4xzj6ttn.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even_count\
    \ = 0;\n  $odd_count = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit\
    \ = $num % 10;\n    if ($digit % 2 == 0) {\n      $even_count++;\n    } else {\n\
    \      $odd_count++;\n    }\n    $num = floor($num / 10);\n  }\n  return [$even_count,\
    \ $odd_count];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqilpguo.php:34\n\
    Stack trace:\n#0 /tmp/tmpvqilpguo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvqilpguo.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  while ($num > 0) {\n    $rem = $num % 10;\n    if ($rem %\
    \ 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num\
    \ / 10);\n  }\n  return array($even, $odd);\n}\n\necho \"return a tuple that has\
    \ the number of even and odd digits respectively.\\n\";\necho even_odd_count(-12)\
    \ . \" ==> (1, 1)\\n\";\necho even_odd_count(123) . \" ==> (1, 2)\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "return a tuple that has the number of even and odd digits respectively.\n\
    Array ==> (1, 1)\nArray ==> (1, 2)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp6ihr8zuq.php:31\nStack trace:\n#0 /tmp/tmp6ihr8zuq.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6ihr8zuq.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  if (empty($num))\
    \ {\n    return $num;\n  }\n\n  $evens = 0;\n  $odds = 0;\n\n  while ($num > 0)\
    \ {\n    $remainder = $num % 10;\n    if ($remainder % 2 === 0) {\n      $evens++;\n\
    \    } else {\n      $odds++;\n    }\n    $num = intval($num / 10);\n  }\n\n \
    \ return array($evens, $odds);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpthty5gnt.php:33\n\
    Stack trace:\n#0 /tmp/tmpthty5gnt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpthty5gnt.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  if ($num\
    \ == 0) return [0, 0];\n  $str = (string)$num;\n  $even = substr_count($str, '2')\
    \ + substr_count($str, '4') + substr_count($str, '6') + substr_count($str, '8');\n\
    \  $odd = substr_count($str, '1') + substr_count($str, '3') + substr_count($str,\
    \ '5') + substr_count($str, '7') + substr_count($str, '9');\n  return [$even,\
    \ $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyrn76av0.php:26\n\
    Stack trace:\n#0 /tmp/tmpyrn76av0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyrn76av0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $revNum = strrev((string)$num);\n    for ($i = 0; $i\
    \ < strlen($revNum); $i++) {\n        if (is_numeric($revNum[$i])) {\n       \
    \     if ($revNum[$i] % 2 == 0) {\n                $even++;\n            } else\
    \ {\n                $odd++;\n            }\n        }\n    }\n    return \"($even,\
    \ $odd)\";\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqr8uk5os.php:27\n\
    Stack trace:\n#0 /tmp/tmpqr8uk5os.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqr8uk5os.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $arr =\
    \ [];\n    $count = 0;\n    $even = 0;\n    $odd = 0;\n    while ($num >= 1) {\n\
    \        $arr[$count] = $num % 10;\n        $num = floor($num / 10);\n       \
    \ $count++;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        if ($arr[$i]\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    $result = [$even, $odd];\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgank2tf.php:32\n\
    Stack trace:\n#0 /tmp/tmpzgank2tf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzgank2tf.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$evenCount\
    \ = 0;\n\t$oddCount = 0;\n\t$numArray = str_split($num);\n\tforeach ($numArray\
    \ as $value) {\n\t\tif ($value % 2 == 0) {\n\t\t\t$evenCount++;\n\t\t} else {\n\
    \t\t\t$oddCount++;\n\t\t}\n\t}\n\treturn array($evenCount, $oddCount);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpf7fthbkc.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7fthbkc.php:26\n\
    Stack trace:\n#0 /tmp/tmpf7fthbkc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpf7fthbkc.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num != 0) {\n        $curr = $num % 10;\n \
    \       if ($curr % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n\necho \"even_odd_count(-12) = (1, 1): \";\nprint_r(even_odd_count(-12));\n\
    echo \"<br />\";\necho \"even_odd_count(123) = (1, 2): \";\nprint_r(even_odd_count(123));\n\
    echo \"<br />\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) = (1, 1): Array\n(\n    [0] => 1\n    [1] => 1\n)\n\
    <br />even_odd_count(123) = (1, 2): Array\n(\n    [0] => 1\n    [1] => 2\n)\n\
    <br />\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xgcbsn7.php:39\n\
    Stack trace:\n#0 /tmp/tmp8xgcbsn7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8xgcbsn7.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even_count\
    \ = 0;\n\t$odd_count = 0;\n\t$str = strval($num);\n\tfor ($i = 0; $i < strlen($str);\
    \ $i++) {\n\t\tif ($str[$i] % 2 == 0) {\n\t\t\t$even_count++;\n\t\t} else {\n\t\
    \t\t$odd_count++;\n\t\t}\n\t}\n\t$ret = [$even_count, $odd_count];\n\treturn $ret;\n\
    }\n\n$num = -12;\necho \"<pre>\";\nprint_r(even_odd_count($num));\necho \"</pre>\"\
    ;\n\n$num = -12;\necho \"<pre>\";\nprint_r(even_odd_count($num));\necho \"</pre>\"\
    ;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>\nWarning: A non-numeric value encountered in /tmp/tmp8vyfeljq.php\
    \ on line 11\nArray\n(\n    [0] => 2\n    [1] => 1\n)\n</pre><pre>\nWarning: A\
    \ non-numeric value encountered in /tmp/tmp8vyfeljq.php on line 11\nArray\n(\n\
    \    [0] => 2\n    [1] => 1\n)\n</pre>\nWarning: A non-numeric value encountered\
    \ in /tmp/tmp8vyfeljq.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp8vyfeljq.php:37\nStack trace:\n#0 /tmp/tmp8vyfeljq.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8vyfeljq.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n   // Your\
    \ code here\n   $result = array();\n   $digits = array_map('intval', str_split($num));\n\
    \   foreach ($digits as $digit) {\n     if ($digit % 2 == 0) {\n       array_push($result,\
    \ 'even');\n     } else {\n       array_push($result, 'odd');\n     }\n   }\n\
    \   return [substr_count($result, 'even'), substr_count($result, 'odd')];\n}\n\
    \n$num = -12;\nprint_r(even_odd_count($num));\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: substr_count() expects parameter 1 to be string, array given\
    \ in /tmp/tmpkaaaovy6.php on line 17\n\nWarning: substr_count() expects parameter\
    \ 1 to be string, array given in /tmp/tmpkaaaovy6.php on line 17\nArray\n(\n \
    \   [0] => \n    [1] => \n)\n\nWarning: substr_count() expects parameter 1 to\
    \ be string, array given in /tmp/tmpkaaaovy6.php on line 17\n\nWarning: substr_count()\
    \ expects parameter 1 to be string, array given in /tmp/tmpkaaaovy6.php on line\
    \ 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkaaaovy6.php:27\n\
    Stack trace:\n#0 /tmp/tmpkaaaovy6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkaaaovy6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  while ($num != 0) {\n    $last_digit = $num % 10;\n    if\
    \ ($last_digit % 2 == 0) {\n      $even += 1;\n    } else {\n      $odd += 1;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n$result\
    \ = even_odd_count(-12);\necho \"$result[0] $result[1]\\n\";\n$result = even_odd_count(123);\n\
    echo \"$result[0] $result[1]\\n\";\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $intArray\
    \ = str_split(abs($num));\n    $odd = 0;\n    $even = 0;\n    foreach ($intArray\
    \ as $number) {\n        if ($number % 2 === 0) {\n            $even += 1;\n \
    \       } else {\n            $odd += 1;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even_count\
    \ = 0;\n\t$odd_count = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit\
    \ = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even_count += 1;\n\t\t} else\
    \ {\n\t\t\t$odd_count += 1;\n\t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn\
    \ array($even_count, $odd_count);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2boyvqk.php:34\n\
    Stack trace:\n#0 /tmp/tmpb2boyvqk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpb2boyvqk.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ 0;\n    $even = 0;\n    while ($num >= 1) {\n        $div = $num % 10;\n   \
    \     if ($div % 2 == 0) {\n            $even++;\n        } else {\n         \
    \   $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\necho json_encode(even_odd_count(-12));\necho '<br/>';\necho json_encode(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "[0,0]<br/>[1,2]\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94et6zej.php:29\n\
    Stack trace:\n#0 /tmp/tmp94et6zej.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp94et6zej.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $str =\
    \ abs($num);\n    $odd = 0;\n    $even = 0;\n    while($str > 0) {\n        $str\
    \ % 2 ? $odd++ : $even++;\n        $str = floor($str / 10);\n    }\n    return\
    \ [$even, $odd];\n}\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkv0t_e87.php:30\n\
    Stack trace:\n#0 /tmp/tmpkv0t_e87.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkv0t_e87.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $split\
    \ = str_split($num);\n    $even = 0;\n    $odd = 0;\n    foreach ($split as $val)\
    \ {\n        if ($val % 2 == 0) {\n            $even++;\n        } else {\n  \
    \          $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpgbsgcjvz.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgbsgcjvz.php:26\n\
    Stack trace:\n#0 /tmp/tmpgbsgcjvz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgbsgcjvz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $res =\
    \ array(0, 0);\n    $num = abs($num);\n    while ($num > 0) {\n        $curr =\
    \ $num % 10;\n        if ($curr % 2 == 0) {\n            $res[0]++;\n        }\
    \ else {\n            $res[1]++;\n        }\n        $num = intval($num / 10);\n\
    \    }\n    return $res;\n}\necho \"even_odd_count(-12) ==> \";\nprint_r(even_odd_count(-12));\n\
    echo \"<br>\";\necho \"even_odd_count(123) ==> \";\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> Array\n(\n    [0] => 1\n    [1] => 1\n)\n<br>even_odd_count(123)\
    \ ==> Array\n(\n    [0] => 1\n    [1] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfyym7ofb.php:37\nStack trace:\n#0 /tmp/tmpfyym7ofb.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfyym7ofb.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ 0;\n    $even = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 === 0) {\n            $even++;\n      \
    \  } else {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n\
    \    }\n    return [$even, $odd];\n}\n\necho \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\n\
    echo \"even_odd_count(123) ==> \";\nvar_dump(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n\
    }\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9kyw2kl.php:38\n\
    Stack trace:\n#0 /tmp/tmpv9kyw2kl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpv9kyw2kl.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2a7inp2n.php:15\n\
    Stack trace:\n#0 /tmp/tmp2a7inp2n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2a7inp2n.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen((string)$num); $i++) {\n \
    \       if ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n   \
    \         $odd++;\n        }\n    }\n    return [$even, $odd];\n}\necho \"<pre>even_odd_count(-12)\\\
    r\\n\";\nvar_dump(even_odd_count(-12));\necho \"</pre>\";\necho \"<pre>even_odd_count(123)\\\
    r\\n\";\nvar_dump(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>even_odd_count(-12)\narray(2) {\n  [0]=>\n  int(3)\n  [1]=>\n  int(0)\n\
    }\n</pre><pre>even_odd_count(123)\narray(2) {\n  [0]=>\n  int(3)\n  [1]=>\n  int(0)\n\
    }\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqiw_c1x.php:29\n\
    Stack trace:\n#0 /tmp/tmpiqiw_c1x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpiqiw_c1x.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ (string) $num;\n    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8yy38fko.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yy38fko.php:25\n\
    Stack trace:\n#0 /tmp/tmp8yy38fko.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8yy38fko.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $str = strval($num);\n\
    \  $evenCount = 0;\n  $oddCount = 0;\n  for ($i = 0; $i < strlen($str); $i++)\
    \ {\n    if ($str[$i] % 2 == 0) {\n      $evenCount++;\n    } else {\n      $oddCount++;\n\
    \    }\n  }\n  return array($evenCount, $oddCount);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpq3qwp162.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3qwp162.php:26\n\
    Stack trace:\n#0 /tmp/tmpq3qwp162.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpq3qwp162.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num_list = str_split($num);\n    for ($i = 0; $i <\
    \ count($num_list); $i++) {\n        if ($num_list[$i] % 2 == 0) {\n         \
    \   $even += 1;\n        } else {\n            $odd += 1;\n        }\n    }\n\
    \    return [$even, $odd];\n}\necho implode(', ', even_odd_count(-12)) . \"\\\
    n\";\necho implode(', ', even_odd_count(123)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpi2w90ei3.php on line\
    \ 11\n2, 1\n1, 2\n\nWarning: A non-numeric value encountered in /tmp/tmpi2w90ei3.php\
    \ on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2w90ei3.php:27\n\
    Stack trace:\n#0 /tmp/tmpi2w90ei3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi2w90ei3.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $odd = 0;\n\
    \  $even = 0;\n  for ($i = 0; $i < strlen($num); $i++) {\n    if ($num[$i] % 2\
    \ == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n  }\n  return \"\
    ($even, $odd)\";\n}\n\necho even_odd_count(-12) . \"\\n\";\necho even_odd_count(123)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(3, 0)\n(3, 0)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0esbiq8m.php:26\n\
    Stack trace:\n#0 /tmp/tmp0esbiq8m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0esbiq8m.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    while ($num != 0) {\n        $number = $num %\
    \ 10;\n        if ($number % 2 == 0) {\n            $even_count++;\n        }\
    \ else {\n            $odd_count++;\n        }\n        $num = $num / 10;\n  \
    \  }\n    return [$even_count, $odd_count];\n}\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 324\n    [1] => 1\n)\n</pre><pre>Array\n(\n \
    \   [0] => 324\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpralz488m.php:31\nStack trace:\n#0 /tmp/tmpralz488m.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpralz488m.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $evenCount\
    \ = 0;\n  $oddCount = 0;\n  $digits = str_split(abs($num));\n  foreach ($digits\
    \ as $digit) {\n    if ($digit % 2 == 0) {\n      $evenCount++;\n    } else {\n\
    \      $oddCount++;\n    }\n  }\n  return \"(\" . $evenCount . \", \" . $oddCount\
    \ . \")\";\n}\n\necho even_odd_count(-12) . PHP_EOL;\necho even_odd_count(123)\
    \ . PHP_EOL;\necho even_odd_count(999) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "(1, 1)\n(1, 2)\n(0, 3)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplfei4w8v.php:29\nStack trace:\n#0 /tmp/tmplfei4w8v.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmplfei4w8v.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $num = abs($num);\n\
    \  $num = str_split($num);\n  $even = 0;\n  $odd = 0;\n  foreach ($num as $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return array($even, $odd);\n}\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num_str\
    \ = strval($num);\n    $even_count = 0;\n    $odd_count = 0;\n    for ($i = 0;\
    \ $i < strlen($num_str); $i++) {\n        if ($num_str[$i] % 2 == 0) {\n     \
    \       $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    return array($even_count, $odd_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfnwv_zg9.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnwv_zg9.php:26\n\
    Stack trace:\n#0 /tmp/tmpfnwv_zg9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfnwv_zg9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n   $result\
    \ = [];\n   $num = abs($num);\n   $num = str_split($num);\n   $even = 0;\n   $odd\
    \ = 0;\n   foreach ($num as $value) {\n      if ($value % 2 == 0) {\n        \
    \ $even += 1;\n      } else {\n         $odd += 1;\n      }\n   }\n   array_push($result,\
    \ $even, $odd);\n   return $result;\n}\necho var_dump(even_odd_count(-12)). \"\
    <br>\";\necho var_dump(even_odd_count(123)). \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n}\n<br>array(2) {\n \
    \ [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $arr = str_split(abs($num));\n\
    \  $even_num = 0;\n  $odd_num = 0;\n  foreach ($arr as $digit) {\n    if ($digit\
    \ % 2 == 0) {\n      $even_num++;\n    } else {\n      $odd_num++;\n    }\n  }\n\
    \  return [$even_num, $odd_num];\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $arr =\
    \ [];\n    $arr[0] = 0;\n    $arr[1] = 0;\n    $num = str_split($num);\n    foreach\
    \ ($num as $key => $value) {\n        if ($value % 2 == 0) {\n            $arr[0]++;\n\
    \        }\n        else {\n            $arr[1]++;\n        }\n    }\n    return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpqr00sja9.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqr00sja9.php:28\n\
    Stack trace:\n#0 /tmp/tmpqr00sja9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqr00sja9.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$num = abs($num);\n\
    \t$odd = $even = 0;\n\twhile ($num > 0) {\n\t\t$i = $num % 10;\n\t\tif ($i % 2\
    \ == 0) $even++;\n\t\telse $odd++;\n\t\t$num = floor($num / 10);\n\t}\n\treturn\
    \ [$even, $odd];\n}\necho implode(', ', even_odd_count(-12)) . PHP_EOL;\necho\
    \ implode(', ', even_odd_count(123)) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1, 1\n1, 2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu88uf_u_.php:32\n\
    Stack trace:\n#0 /tmp/tmpu88uf_u_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu88uf_u_.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $result\
    \ = ['even' => 0, 'odd' => 0];\n  if ($num < 0) {\n    $num = -$num;\n  }\n  while\
    \ ($num) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $result['even']++;\n\
    \    } else {\n      $result['odd']++;\n    }\n    $num = (int)($num / 10);\n\
    \  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3s0pd1jg.php:27\n\
    Stack trace:\n#0 /tmp/tmp3s0pd1jg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3s0pd1jg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if\
    \ ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return [$even, $odd];\n}\n\n$answer = even_odd_count(123);\n\
    echo $answer[0].\"-\".$answer[1];\n\necho \"<br>\";\necho \"<br>\";\necho \"<br>\"\
    ;\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3-0<br><br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3vy8nrx.php:32\n\
    Stack trace:\n#0 /tmp/tmpz3vy8nrx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpz3vy8nrx.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\n$countOdd\
    \ = 0;\n$countEven = 0;\n$num = abs($num);\n\n$numDigits = strlen($num);\n\n$numArray\
    \ = str_split($num);\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpufkcr0pe.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    //your\
    \ code here\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp848_lplh.php:14\n\
    Stack trace:\n#0 /tmp/tmp848_lplh.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp848_lplh.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num_str\
    \ = (string)$num;\n    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num_str);\
    \ $i++) {\n        if ($num_str[$i] % 2 == 0) {\n            $even++;\n      \
    \  } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1xfz3k8j.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1xfz3k8j.php:25\n\
    Stack trace:\n#0 /tmp/tmp1xfz3k8j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1xfz3k8j.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\treturn [substr_count(abs($num),\
    \ \"13579\"), substr_count(abs($num), \"02468\")];\n}\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n)\nArray\n(\n    [0] => 0\n    [1]\
    \ => 0\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprut4j2mj.php:16\n\
    Stack trace:\n#0 /tmp/tmprut4j2mj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprut4j2mj.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num_array = str_split($num);\n  $length = count($num_array);\n\
    \  for ($i = 0; $i < $length; $i++) {\n    if ($num_array[$i] % 2 == 0) {\n  \
    \    $even++;\n    } else {\n      $odd++;\n    }\n  }\n  return [$even, $odd];\n\
    }\necho \"[\" . even_odd_count(-12)[0] . \", \" . even_odd_count(-12)[1] . \"\
    ]<br>\";\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpbuxlacs6.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpbuxlacs6.php on line\
    \ 12\n[2, 1]<br>\nWarning: A non-numeric value encountered in /tmp/tmpbuxlacs6.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuxlacs6.php:28\n\
    Stack trace:\n#0 /tmp/tmpbuxlacs6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbuxlacs6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $r = \"\"\
    ;\n  if (is_int($num)) {\n    $abs = abs($num);\n    $arr = str_split($abs);\n\
    \    $odd = 0;\n    $even = 0;\n    foreach ($arr as $digit) {\n      if ($digit\
    \ % 2 == 0) {\n        $even++;\n      } else {\n        $odd++;\n      }\n  \
    \  }\n    $r = \"($even, $odd)\";\n  }\n  return $r;\n}\n$answer = even_odd_count(-12);\n\
    echo \"even_odd_count(-12) ==> $answer <br/>\";\n$answer = even_odd_count(123);\n\
    echo \"even_odd_count(123) ==> $answer <br/>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> (1, 1) <br/>even_odd_count(123) ==> (1, 2) <br/>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpci2mdo6w.php:33\nStack\
    \ trace:\n#0 /tmp/tmpci2mdo6w.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpci2mdo6w.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $remainder =\
    \ $num % 10;\n    if ($remainder % 2 == 0) {\n      $even++;\n    } else {\n \
    \     $odd++;\n    }\n    $num = $num / 10;\n  }\n  return array($even, $odd);\n\
    }\n\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 324\n    [1] => 1\n)\nArray\n(\n    [0] => 324\n \
    \   [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8dq7cja.php:29\n\
    Stack trace:\n#0 /tmp/tmpc8dq7cja.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc8dq7cja.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$test =\
    \ str_split(abs($num));\n\t$even = 0;\n\t$odd = 0;\n\tforeach ($test as $value)\
    \ {\n\t\tif($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\
    \t}\n\t}\n\treturn array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = [0, 0];\n    $str = (string)abs($num);\n    for ($i = 0; $i < strlen($str);\
    \ $i++) {\n        $digit = $str[$i];\n        if ($digit % 2 == 0) $result[0]++;\n\
    \        else $result[1]++;\n    }\n    return $result;\n}\necho even_odd_count(-12);\n\
    echo even_odd_count(123);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ArrayArray
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\t$num = $num < 0 ? -$num : $num;\n\twhile ($num > 0) {\n\t\
    \t$digit = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else\
    \ {\n\t\t\t$odd++;\n\t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even,\
    \ $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegqpbjwx.php:33\n\
    Stack trace:\n#0 /tmp/tmpegqpbjwx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpegqpbjwx.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$arr = str_split($num);\n\
    \t$even = 0;\n\t$odd = 0;\n\tforeach ($arr as $k => $v) {\n\t\tif (abs($v) % 2\
    \ == 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\t\t\t$odd += 1;\n\t\t}\n\t}\n\treturn\
    \ array($even, $odd);\n}\necho '<pre>';\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9509d5h.php:28\n\
    Stack trace:\n#0 /tmp/tmpg9509d5h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg9509d5h.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ array_map('intval', str_split(abs($num)));\n    $even_count = 0;\n    $odd_count\
    \ = 0;\n    foreach ($num as $int) {\n        if ($int % 2 == 0) {\n         \
    \   $even_count++;\n        } else {\n            $odd_count++;\n        }\n \
    \   }\n    return [$even_count, $odd_count];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\t$numbers = str_split($num);\n\tforeach ($numbers as $number)\
    \ {\n\t\tif ($number % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t}\n\treturn \"($even, $odd)\";\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvl8s_13d.php:25\n\
    Stack trace:\n#0 /tmp/tmpvl8s_13d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvl8s_13d.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ $odd = 0;\n  if($num < 0) $num *= -1;\n  while($num > 0) {\n    if($num % 2\
    \ == 0) $even++;\n    else $odd++;\n    $num /= 10;\n  }\n  return array($even,\
    \ $odd);\n}\nprint_r(even_odd_count(-12));\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 324\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpq30zmtz_.php:23\nStack trace:\n#0 /tmp/tmpq30zmtz_.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpq30zmtz_.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $stringNum = strval($num);\n    for ($i = 0; $i < strlen($stringNum);\
    \ $i++) {\n        if ($stringNum[$i] % 2 == 0) {\n            $even++;\n    \
    \    } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpncsyaft0.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncsyaft0.php:26\n\
    Stack trace:\n#0 /tmp/tmpncsyaft0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpncsyaft0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $result\
    \ = ['even' => 0, 'odd' => 0];\n  $num = abs($num);\n  while ($num > 0) {\n  \
    \  $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $result['even']++;\n\
    \    } else {\n      $result['odd']++;\n    }\n    $num = intval($num / 10);\n\
    \  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzeialvtr.php:25\n\
    Stack trace:\n#0 /tmp/tmpzeialvtr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzeialvtr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $arrNum\
    \ = str_split($num);\n    $evenCount = 0;\n    $oddCount = 0;\n    foreach ($arrNum\
    \ as $num) {\n        if ($num % 2 == 0) {\n            $evenCount++;\n      \
    \  } else {\n            $oddCount++;\n        }\n    }\n    return array($evenCount,\
    \ $oddCount);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp90jl8nyq.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90jl8nyq.php:26\n\
    Stack trace:\n#0 /tmp/tmp90jl8nyq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp90jl8nyq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\t$digits = str_split($num);\n\tfor ($i = 0; $i < count($digits);\
    \ $i++) {\n\t\tif ($digits[$i] % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\
    \t$odd++;\n\t\t}\n\t}\n\treturn \"(\" . $even . \", \" . $odd . \")\";\n}\necho\
    \ even_odd_count(-12) . PHP_EOL;\necho even_odd_count(123) . PHP_EOL;\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp09u7hci6.php on line\
    \ 11\n(2, 1)\n(1, 2)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09u7hci6.php:27\n\
    Stack trace:\n#0 /tmp/tmp09u7hci6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp09u7hci6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $num = str_split($num);\n\
    \  $result = [0, 0];\n  foreach ($num as $key => $value) {\n    $value % 2 ==\
    \ 0 ? $result[0]++ : $result[1]++;\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpnd2523ts.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnd2523ts.php:20\n\
    Stack trace:\n#0 /tmp/tmpnd2523ts.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpnd2523ts.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $string\
    \ = strval($num);\n  $array = str_split($string);\n  $even = 0;\n  $odd = 0;\n\
    \  foreach ($array as $value) {\n    if ($value % 2 == 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n  }\n  return array($even, $odd);\n}\n\n\
    echo \"even_odd_count(-12) should return (1, 1): \";\nvar_dump(even_odd_count(-12));\n\
    echo \"\\n\";\necho \"even_odd_count(123) should return (1, 2): \";\nvar_dump(even_odd_count(123));\n\
    echo \"\\n\";\necho \"even_odd_count(0) should return (1, 0): \";\nvar_dump(even_odd_count(0));\n\
    echo \"\\n\";\necho \"even_odd_count(2) should return (1, 0): \";\nvar_dump(even_odd_count(2));\n\
    echo \"\\n\";\necho \"even_odd_count(1) should return (0, 1): \";\nvar_dump(even_odd_count(1));\n\
    echo \"\\n\";\necho \"even_odd_count(13) should return (0, 1): \";\nvar_dump(even_odd_count(13));\n\
    echo \"\\n\";\necho \"even_odd_count(16) should return (2, 0): \";\nvar_dump(even_odd_count(16));\n\
    echo \"\\n\";\necho \"even_odd_count(150) should return (2, 1): \";\nvar_dump(even_odd_count(150));\n\
    echo \"\\n\";\necho \"even_odd_count(153) should return (0, 3): \";\nvar_dump(even_odd_count(153));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) should return (1, 1): \nWarning: A non-numeric value\
    \ encountered in /tmp/tmpwqxxml19.php on line 12\narray(2) {\n  [0]=>\n  int(2)\n\
    \  [1]=>\n  int(1)\n}\n\neven_odd_count(123) should return (1, 2): array(2) {\n\
    \  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n\neven_odd_count(0) should return (1,\
    \ 0): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(0)\n}\n\neven_odd_count(2)\
    \ should return (1, 0): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(0)\n}\n\n\
    even_odd_count(1) should return (0, 1): array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n\
    \  int(1)\n}\n\neven_odd_count(13) should return (0, 1): array(2) {\n  [0]=>\n\
    \  int(0)\n  [1]=>\n  int(2)\n}\n\neven_odd_count(16) should return (2, 0): array(2)\
    \ {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n}\n\neven_odd_count(150) should return\
    \ (2, 1): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n\neven_odd_count(153)\
    \ should return (0, 3): array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(3)\n}\n\n\
    \nWarning: A non-numeric value encountered in /tmp/tmpwqxxml19.php on line 12\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqxxml19.php:54\nStack\
    \ trace:\n#0 /tmp/tmpwqxxml19.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpwqxxml19.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $arr = str_split($num);\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp6n688evd.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n688evd.php:26\n\
    Stack trace:\n#0 /tmp/tmp6n688evd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6n688evd.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_counter\
    \ = 0;\n    $odd_counter = 0;\n    $num_string = strval($num);\n    for ($i =\
    \ 0; $i < strlen($num_string); $i++) {\n        if ($num_string[$i] % 2 == 0)\
    \ {\n            $even_counter++;\n        } else {\n            $odd_counter++;\n\
    \        }\n    }\n    return array($even_counter, $odd_counter);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmppkb_wu86.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkb_wu86.php:26\n\
    Stack trace:\n#0 /tmp/tmppkb_wu86.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppkb_wu86.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even_count\
    \ = 0;\n  $odd_count = 0;\n  if ($num < 0) {\n    $num = -$num;\n  }\n  $digit\
    \ = 1;\n  while ($num >= $digit) {\n    $digit_last = ($num / $digit) % 10;\n\
    \    if ($digit_last % 2 == 0) {\n      $even_count++;\n    } else {\n      $odd_count++;\n\
    \    }\n    $digit *= 10;\n  }\n  return array($even_count, $odd_count);\n}\n\n\
    echo even_odd_count(-12)[0].\" \".even_odd_count(-12)[1].\"\\n\";\necho even_odd_count(123)[0].\"\
    \ \".even_odd_count(123)[1].\"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1 1\n1 2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2kt_f5o.php:40\n\
    Stack trace:\n#0 /tmp/tmpl2kt_f5o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpl2kt_f5o.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even=0;\n\
    \t$odd=0;\n\t$num=str_split($num);\n\tforeach ($num as $val) {\n\t\tif ($val%2==0)\
    \ {\n\t\t\t$even++;\n\t\t}\n\t\telse{\n\t\t\t$odd++;\n\t\t}\n\t}\n\treturn array($even,$odd);\n\
    }\necho \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>\nWarning: A non-numeric value encountered in /tmp/tmpdki0yb79.php\
    \ on line 11\nArray\n(\n    [0] => 2\n    [1] => 1\n)\n</pre><pre>Array\n(\n \
    \   [0] => 1\n    [1] => 2\n)\n</pre>\nWarning: A non-numeric value encountered\
    \ in /tmp/tmpdki0yb79.php on line 11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdki0yb79.php:32\nStack trace:\n#0 /tmp/tmpdki0yb79.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdki0yb79.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $str = (string)$num;\n    $str_len = strlen($str);\n\
    \    for ($i = 0; $i < $str_len; $i++) {\n        if ($str[$i] % 2 == 0) {\n \
    \           $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpe69s6npt.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe69s6npt.php:27\n\
    Stack trace:\n#0 /tmp/tmpe69s6npt.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpe69s6npt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\tif($num < 0) {\n\t\t$num = abs($num);\n\t}\n\twhile($num\
    \ > 0) {\n\t\t$digit = $num % 10;\n\t\tif($digit % 2 == 0) {\n\t\t\t$even += 1;\n\
    \t\t} else {\n\t\t\t$odd += 1;\n\t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7x2k_kh.php:36\n\
    Stack trace:\n#0 /tmp/tmpj7x2k_kh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj7x2k_kh.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$arr = array();\n\
    \t$even = 0;\n\t$odd = 0;\n\t$num = str_split($num);\n\tforeach ($num as $key\
    \ => $value) {\n\t\tif($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t}\n\tarray_push($arr, $even, $odd);\n\treturn $arr;\n}\necho\
    \ \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>\nWarning: A non-numeric value encountered in /tmp/tmp533de3rr.php\
    \ on line 12\nArray\n(\n    [0] => 2\n    [1] => 1\n)\n</pre>\nWarning: A non-numeric\
    \ value encountered in /tmp/tmp533de3rr.php on line 12\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp533de3rr.php:31\nStack trace:\n#0 /tmp/tmp533de3rr.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp533de3rr.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$num = abs($num);\n\
    \t$even = 0;\n\t$odd = 0;\n\twhile ($num != 0) {\n\t\t$last_digit = $num % 10;\n\
    \t\tif ($last_digit % 2 == 0)\n\t\t\t$even++;\n\t\telse\n\t\t\t$odd++;\n\t\t$num\
    \ = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vtqk1dg.php:33\n\
    Stack trace:\n#0 /tmp/tmp2vtqk1dg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2vtqk1dg.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = [0, 0];\n    $num = abs($num);\n    if ($num < 10) {\n        if ($num % 2\
    \ == 0) {\n            $result[0]++;\n        } else {\n            $result[1]++;\n\
    \        }\n    } else {\n        while ($num > 0) {\n            $d = $num %\
    \ 10;\n            if ($d % 2 == 0) {\n                $result[0]++;\n       \
    \     } else {\n                $result[1]++;\n            }\n            $num\
    \ = floor($num / 10);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $rem = $num % 10;\n        if ($rem % 2 == 0) {\n            $even++;\n    \
    \    } else {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6uvp3cl.php:34\n\
    Stack trace:\n#0 /tmp/tmpe6uvp3cl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe6uvp3cl.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evenCount\
    \ = 0;\n    $oddCount = 0;\n    $numAbs = abs($num);\n    while ($numAbs > 0)\
    \ {\n        $digit = $numAbs % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $evenCount++;\n        } else {\n            $oddCount++;\n        }\n  \
    \      $numAbs = floor($numAbs / 10);\n    }\n    return array($evenCount, $oddCount);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfp3jco_.php:33\n\
    Stack trace:\n#0 /tmp/tmpwfp3jco_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwfp3jco_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        $num = abs($num);\n    }\n    $arr = array_map('intval', str_split($num));\n\
    \    $even = 0;\n    $odd = 0;\n    foreach ($arr as $num) {\n        if ($num\
    \ % 2 === 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = $odd = 0;\n    while ($num > 0) {\n        $last_digit = $num % 10;\n    \
    \    if ($last_digit % 2 == 0)\n            $even++;\n        else\n         \
    \   $odd++;\n        $num = $num / 10;\n    }\n    return [$even, $odd];\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7taji_m.php:24\n\
    Stack trace:\n#0 /tmp/tmpq7taji_m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpq7taji_m.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$ans = [0,\
    \ 0];\n\twhile($num != 0) {\n\t\t$last_digit = $num % 10;\n\t\tif($last_digit\
    \ % 2 == 0)\n\t\t\t$ans[0]++;\n\t\telse\n\t\t\t$ans[1]++;\n\t\t$num = floor($num\
    \ / 10);\n\t}\n\treturn $ans;\n}\n$ans = even_odd_count(-12);\necho \"[{$ans[0]},\
    \ {$ans[1]}]\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $a = str_split(abs($num));\n\
    \    $even = 0;\n    $odd = 0;\n    foreach ($a as $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $ev = 0;\n\
    \  $od = 0;\n  $r = 0;\n  while ($num > 0) {\n    $r = $num % 10;\n    if ($r\
    \ % 2 == 0) {\n      $ev += 1;\n    } else {\n      $od += 1;\n    }\n    $num\
    \ = intval($num / 10);\n  }\n  return array($ev, $od);\n}\n\n$arr = array(-12,\
    \ 123, 1212, 13, 23111, 1, 5);\nforeach ($arr as $num) {\n  print_r(even_odd_count($num)\
    \ . PHP_EOL);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\nArray\nArray\nArray\nArray\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcbgy0vv_.php:32\nStack trace:\n#0 /tmp/tmpcbgy0vv_.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcbgy0vv_.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  // Your\
    \ code here\n  \t$number = (string) $num;\n  \t$return = ['even' => 0, 'odd' =>\
    \ 0];\n  \t$number = abs($number);\n  \t$count = 0;\n  \tfor ($i=0; $i < strlen($number);\
    \ $i++) { \n  \t\tif($count % 2 == 0){\n  \t\t\t$return['even']++;\n  \t\t}else{\n\
    \  \t\t\t$return['odd']++;\n  \t\t}\n  \t\t$count++;\n  \t}\n  \treturn $return;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdn4bxku.php:28\n\
    Stack trace:\n#0 /tmp/tmpwdn4bxku.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwdn4bxku.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $output\
    \ = ['even' => 0, 'odd' => 0];\n    $num_string = strval($num);\n    for ($i =\
    \ 0; $i < strlen($num_string); $i++) {\n        if ($num_string[$i] % 2 == 0)\
    \ {\n            $output['even']++;\n        } else {\n            $output['odd']++;\n\
    \        }\n    }\n    return array_values($output);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4bg67ckv.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bg67ckv.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bg67ckv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4bg67ckv.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $str =\
    \ strval($num);\n    $len = strlen($str);\n    $evens = 0;\n    $odds = 0;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        if ($str[$i] % 2 == 0) {\n      \
    \      $evens++;\n        } else {\n            $odds++;\n        }\n    }\n \
    \   return array($evens, $odds);\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpazl3dbej.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazl3dbej.php:26\n\
    Stack trace:\n#0 /tmp/tmpazl3dbej.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpazl3dbej.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // get\
    \ the absolute value of the number\n    $num = abs($num);\n    // convert the\
    \ number to a string\n    $str = strval($num);\n    // initialize both even and\
    \ odd counts to 0\n    $even = 0;\n    $odd = 0;\n    // iterate through the string\n\
    \    for ($i = 0; $i < strlen($str); $i++) {\n        // if the number is even\n\
    \        if ($str[$i] % 2 == 0) {\n            // increase the even count\n  \
    \          $even++;\n        } else {\n            // otherwise, increase the\
    \ odd count\n            $odd++;\n        }\n    }\n    // return the counts in\
    \ a tuple\n    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $num = abs($num);\n\
    \  $even = 0;\n  $odd = 0;\n  while ($num > 0) {\n    $digit = $num % 10;\n  \
    \  if ($digit % 2 === 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n\
    \    $num = (int)($num / 10);\n  }\n  return [$even, $odd];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkuqa0d0i.php:34\n\
    Stack trace:\n#0 /tmp/tmpkuqa0d0i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkuqa0d0i.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $digits\
    \ = str_split(abs($num));\n  $even = array_filter($digits, function($digit) {\n\
    \    return $digit % 2 == 0;\n  });\n  $odd = array_filter($digits, function($digit)\
    \ {\n    return $digit % 2 != 0;\n  });\n  return array(count($even), count($odd));\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num != 0) {\n        $x = $num % 10;\n    \
    \    if ($x % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = (int)($num / 10);\n    }\n    return [$even, $odd];\n\
    }\n\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nprint_r(even_odd_count(0));\n\
    print_r(even_odd_count(33));\nprint_r(even_odd_count(100100100100));\nprint_r(even_odd_count(123123123123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\nArray\n(\n    [0] => 0\n    [1] => 0\n)\nArray\n(\n    [0] => 0\n \
    \   [1] => 2\n)\nArray\n(\n    [0] => 8\n    [1] => 4\n)\nArray\n(\n    [0] =>\
    \ 4\n    [1] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2okt9wvk.php:39\n\
    Stack trace:\n#0 /tmp/tmp2okt9wvk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2okt9wvk.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ abs($num);\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n   \
    \     } else {\n            $odd++;\n        }\n        $num = $num / 10;\n  \
    \  }\n    return array($even, $odd);\n}\necho \"In {-12}: \" . implode(\", \"\
    , even_odd_count(-12)) . \"\\n\";\necho \"In {123}: \" . implode(\", \", even_odd_count(123))\
    \ . \"\\n\";\necho \"In {-123}: \" . implode(\", \", even_odd_count(-123)) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "In {-12}: 324, 1\nIn {123}: 324, 2\nIn {-123}: 324, 2\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp4ft54seb.php:29\nStack trace:\n#0 /tmp/tmp4ft54seb.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4ft54seb.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$count_odd\
    \ = 0;\n\t$count_even = 0;\n\t$abs_num = abs($num);\n\t$abs_num_string = strval($abs_num);\n\
    \t$abs_num_length = strlen($abs_num_string);\n\tfor ($i = 0; $i < $abs_num_length;\
    \ $i++) {\n\t\t$current_digit = $abs_num_string[$i];\n\t\tif ($current_digit %\
    \ 2 == 0) {\n\t\t\t$count_even++;\n\t\t} else {\n\t\t\t$count_odd++;\n\t\t}\n\t\
    }\n\treturn array($count_even, $count_odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\tif ($num\
    \ < 0) {\n\t\t$num = abs($num);\n\t}\n\t$arr = str_split($num);\n\t$even = 0;\n\
    \t$odd = 0;\n\tforeach ($arr as $key => $value) {\n\t\tif ($value % 2 == 0) {\n\
    \t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t}\n\t}\n\treturn \"($even, $odd)\"\
    ;\n}\n\necho even_odd_count(-12).\"\\n\";\necho even_odd_count(123).\"\\n\";\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "(1, 1)\n(1, 2)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzedsdedt.php:30\n\
    Stack trace:\n#0 /tmp/tmpzedsdedt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzedsdedt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\t$num = abs($num);\n\t$abs = $num;\n\twhile ($num >= 1) {\n\
    \t\t$digit = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else\
    \ {\n\t\t\t$odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even,\
    \ $odd);\n}\n\necho json_encode(even_odd_count(-12));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "[1,1]\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsj6h944y.php:36\n\
    Stack trace:\n#0 /tmp/tmpsj6h944y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsj6h944y.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $evenCount\
    \ = 0;\n  $oddCount = 0;\n  $numArr = str_split($num);\n  $numArr = array_map('intval',\
    \ $numArr);\n  foreach ($numArr as $num) {\n    if ($num % 2 == 0) {\n      $evenCount\
    \ += 1;\n    } else {\n      $oddCount += 1;\n    }\n  }\n  return \"($evenCount,\
    \ $oddCount)\";\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpim8cn3wj.php:25\n\
    Stack trace:\n#0 /tmp/tmpim8cn3wj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpim8cn3wj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $count =\
    \ strlen($num);\n  $odd = 0;\n  $even = 0;\n  for ($i = 0; $i < $count; $i++)\
    \ {\n    if ($num[$i] % 2 === 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return \"($even, $odd)\";\n}\necho even_odd_count(-12) . PHP_EOL;\n\
    echo even_odd_count(123) . PHP_EOL;\necho even_odd_count(4) . PHP_EOL;\necho even_odd_count(5)\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(3, 0)\n(3, 0)\n(1, 0)\n(1, 0)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp9zbudcob.php:29\nStack trace:\n#0 /tmp/tmp9zbudcob.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9zbudcob.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $num = abs($num);\n\
    \  $even = 0;\n  $odd = 0;\n  while ($num > 0) {\n    $digit = $num % 10;\n  \
    \  if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n\
    \    $num = intval($num / 10);\n  }\n  return [$even, $odd];\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ia3xdnp.php:33\n\
    Stack trace:\n#0 /tmp/tmp8ia3xdnp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8ia3xdnp.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $numbers\
    \ = str_split($num);\n    $evens = 0;\n    $odds = 0;\n    foreach ($numbers as\
    \ $number) {\n        if ($number % 2 === 0) {\n            $evens++;\n      \
    \  } else {\n            $odds++;\n        }\n    }\n    return array($evens,\
    \ $odds);\n}\necho implode(\", \", even_odd_count(-12)) . \"\\n\";\necho implode(\"\
    , \", even_odd_count(123)) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpobqtbojh.php on line\
    \ 11\n2, 1\n1, 2\n\nWarning: A non-numeric value encountered in /tmp/tmpobqtbojh.php\
    \ on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobqtbojh.php:27\n\
    Stack trace:\n#0 /tmp/tmpobqtbojh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpobqtbojh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $oddCount\
    \ = 0;\n    $evenCount = 0;\n    $nums = str_split(abs($num));\n    foreach ($nums\
    \ as $number) {\n        if ($number % 2 == 0) {\n            $evenCount++;\n\
    \        } else {\n            $oddCount++;\n        }\n    }\n    return [$evenCount,\
    \ $oddCount];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $int =\
    \ strval($num);\n    $list = str_split($int);\n    $evenCount = 0;\n    $oddCount\
    \ = 0;\n    foreach ($list as $i){\n        if ($i % 2 == 0){\n            $evenCount++;\n\
    \        } else {\n            $oddCount++;\n        }\n    }\n    return \"({$evenCount},\
    \ {$oddCount})\";\n}\n\necho(even_odd_count(-12));\necho(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp9w4jbivz.php on line\
    \ 12\n(2, 1)(1, 2)\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9w4jbivz.php:28\n\
    Stack trace:\n#0 /tmp/tmp9w4jbivz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9w4jbivz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$count =\
    \ [0, 0];\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$n = $num % 10;\n\t\t\
    if ($n % 2 == 0) {\n\t\t\t$count[0]++;\n\t\t} else {\n\t\t\t$count[1]++;\n\t\t\
    }\n\t\t$num = floor($num / 10);\n\t}\n\treturn $count;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgltd6ch.php:32\n\
    Stack trace:\n#0 /tmp/tmphgltd6ch.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphgltd6ch.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // 949\
    \ + 1 = 950\n    // 949 + 1.5 = 950.5\n    // ceil(number) \n    // floor(number)\n\
    \    // number - 0.5\n    // round(number)\n    $num = abs($num);\n    $even =\
    \ 0;\n    $odd = 0;\n    while ($num > 0) {\n        $lastDigit = $num % 10;\n\
    \        if ($lastDigit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gxqh5fy.php:39\n\
    Stack trace:\n#0 /tmp/tmp2gxqh5fy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2gxqh5fy.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num as $x) {\n\
    \        if ($x % 2 == 0) {\n            $even += 1;\n        } else {\n     \
    \       $odd += 1;\n        }\n    }\n    return array($even, $odd);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpoiqbfj2f.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoiqbfj2f.php:25\n\
    Stack trace:\n#0 /tmp/tmpoiqbfj2f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoiqbfj2f.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehus8azx.php:34\n\
    Stack trace:\n#0 /tmp/tmpehus8azx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpehus8azx.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ str_split(abs($num));\n    $totalEven = 0;\n    $totalOdd = 0;\n    foreach($num\
    \ as $value) {\n        if($value % 2 == 0) {\n            $totalEven++;\n   \
    \     } else {\n            $totalOdd++;\n        }\n    }\n    return array($totalEven,\
    \ $totalOdd);\n}\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    print_r(even_odd_count(100100));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\nArray\n(\n    [0] => 4\n    [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $arr = str_split($num);\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    if (((int)$arr[$i]) % 2 == 0) {\n      $even++;\n    } else {\n\
    \      $odd++;\n    }\n  }\n  return \"($even, $odd)\";\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8w6a5jpg.php:24\n\
    Stack trace:\n#0 /tmp/tmp8w6a5jpg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8w6a5jpg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $digits\
    \ = str_split(abs($num));\n  $even = 0;\n  $odd = 0;\n  foreach ($digits as $digit)\
    \ {\n    if ($digit % 2 === 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  // convert\
    \ num to string\n  $num = strval($num);\n  // count even numbers\n  $even = strlen(preg_replace('/[13579]/',\
    \ '', $num));\n  // count odd numbers\n  $odd = strlen(preg_replace('/[02468]/',\
    \ '', $num));\n  // return tuple\n  return array($even, $odd);\n}\nprint_r(even_odd_count(-12)\
    \ . PHP_EOL);\nprint_r(even_odd_count(123) . PHP_EOL);\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsc_ms4u.php:24\n\
    Stack trace:\n#0 /tmp/tmphsc_ms4u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphsc_ms4u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $abs =\
    \ abs($num);\n    $evens = substr_count($abs, '2') + substr_count($abs, '4') +\
    \ substr_count($abs, '6') + substr_count($abs, '8');\n    $odds = substr_count($abs,\
    \ '1') + substr_count($abs, '3') + substr_count($abs, '5') + substr_count($abs,\
    \ '7') + substr_count($abs, '9');\n    return array($evens, $odds);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfyk9bdx.php:24\n\
    Stack trace:\n#0 /tmp/tmptfyk9bdx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptfyk9bdx.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odds\
    \ = array();\n    $evens = array();\n    $num_str = (string)$num;\n    for ($i\
    \ = 0; $i < strlen($num_str); $i++) {\n        if ($num_str[$i] % 2 === 0) {\n\
    \            array_push($evens, $num_str[$i]);\n        } else {\n           \
    \ array_push($odds, $num_str[$i]);\n        }\n    }\n    return [count($evens),\
    \ count($odds)];\n}\n\necho \"even_odd_count(-12) ==> (\" . even_odd_count(-12)[0]\
    \ . \", \" . even_odd_count(-12)[1] . \")\";\necho \"\\n\";\necho \"even_odd_count(123)\
    \ ==> (\" . even_odd_count(123)[0] . \", \" . even_odd_count(123)[1] . \")\";\n\
    echo \"\\n\";\necho \"even_odd_count(23455) ==> (\" . even_odd_count(23455)[0]\
    \ . \", \" . even_odd_count(23455)[1] . \")\";\necho \"\\n\";\necho \"even_odd_count(10)\
    \ ==> (\" . even_odd_count(10)[0] . \", \" . even_odd_count(10)[1] . \")\";\n\
    echo \"\\n\";\necho \"even_odd_count(6) ==> (\" . even_odd_count(6)[0] . \", \"\
    \ . even_odd_count(6)[1] . \")\";\necho \"\\n\";\necho \"even_odd_count(1) ==>\
    \ (\" . even_odd_count(1)[0] . \", \" . even_odd_count(1)[1] . \")\";\necho \"\
    \\n\";\necho \"even_odd_count(0) ==> (\" . even_odd_count(0)[0] . \", \" . even_odd_count(0)[1]\
    \ . \")\";\necho \"\\n\";\necho \"even_odd_count(101) ==> (\" . even_odd_count(101)[0]\
    \ . \", \" . even_odd_count(101)[1] . \")\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5q1hyskd.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $arr = str_split($num);\n\
    \  $even = 0;\n  $odd = 0;\n  foreach ($arr as $a) {\n    if ($a % 2 == 0) {\n\
    \      $even++;\n    } else {\n      $odd++;\n    }\n  }\n  return [$even, $odd];\n\
    }\necho \"even_odd_count(-12) ==> (\" . even_odd_count(-12)[0] . \", \" . even_odd_count(-12)[1]\
    \ . \")<br>\";\necho \"even_odd_count(123) ==> (\" . even_odd_count(123)[0] .\
    \ \", \" . even_odd_count(123)[1] . \")<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpw97cerws.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmpw97cerws.php on line\
    \ 11\neven_odd_count(-12) ==> (2, 1)<br>even_odd_count(123) ==> (1, 2)<br>\nWarning:\
    \ A non-numeric value encountered in /tmp/tmpw97cerws.php on line 11\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpw97cerws.php:28\nStack trace:\n\
    #0 /tmp/tmpw97cerws.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpw97cerws.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even_count\
    \ = 0;\n  $odd_count = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $last_digit\
    \ = $num % 10;\n    if ($last_digit % 2 == 0) {\n      $even_count += 1;\n   \
    \ } else {\n      $odd_count += 1;\n    }\n    $num = floor($num / 10);\n  }\n\
    \  return [$even_count, $odd_count];\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5qamvty.php:34\n\
    Stack trace:\n#0 /tmp/tmp_5qamvty.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_5qamvty.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$positive_num\
    \ = abs($num);\n\t$integer_num = intval($positive_num);\n\t$convert_to_string\
    \ = strval($integer_num);\n\t$break_string_to_array = str_split($convert_to_string);\n\
    \t$odd_number = 0;\n\t$even_number = 0;\n\tforeach ($break_string_to_array as\
    \ $item) {\n\t\tif ($item % 2 == 0) {\n\t\t\t$even_number += 1;\n\t\t} else {\n\
    \t\t\t$odd_number += 1;\n\t\t}\n\t}\n\t$result = array($even_number, $odd_number);\n\
    \treturn $result;\n}\n\nprint_r(even_odd_count(-12));\necho \"\\n\";\nprint_r(even_odd_count(123));\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nArray\n(\n    [0] => 1\n   \
    \ [1] => 2\n)\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $evenCount\
    \ = 0;\n  $oddCount = 0;\n  $arr = str_split($num);\n  foreach ($arr as $value)\
    \ {\n    if ($value % 2 == 0) {\n      $evenCount++;\n    } else {\n      $oddCount++;\n\
    \    }\n  }\n  return \"($evenCount, $oddCount)\";\n}\n\necho even_odd_count(-12);\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp5vc7lmmb.php on line\
    \ 11\n(2, 1)\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5vc7lmmb.php:27\n\
    Stack trace:\n#0 /tmp/tmp5vc7lmmb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5vc7lmmb.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    while ($num != 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder % 2 == 0) {\n            $even_count++;\n    \
    \    } else {\n            $odd_count++;\n        }\n        $num = floor($num\
    \ / 10);\n    }\n    return $even_count . ', ' . $odd_count;\n}\necho even_odd_count(-12)\
    \ . '<br>';\necho even_odd_count(123) . '<br>';\necho even_odd_count(545) . '<br>';\n\
    echo even_odd_count(2334) . '<br>';\necho even_odd_count(100) . '<br>';\necho\
    \ even_odd_count(6532) . '<br>';\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $arr = str_split($num);\n\
    \  return [\n    array_reduce($arr, function($acc, $cur) {\n      return $cur\
    \ % 2 == 0 ? $acc + 1 : $acc;\n    }, 0),\n    array_reduce($arr, function($acc,\
    \ $cur) {\n      return $cur % 2 == 1 ? $acc + 1 : $acc;\n    }, 0)\n  ];\n}\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8o983tha.php on line\
    \ 10\n\nWarning: A non-numeric value encountered in /tmp/tmp8o983tha.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8o983tha.php:24\n\
    Stack trace:\n#0 /tmp/tmp8o983tha.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8o983tha.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    if ($num == 0) {\n        $even = 1;\n    } elseif\
    \ ($num > 0) {\n        $arr = str_split($num);\n        for ($i = 0; $i < count($arr);\
    \ $i++) {\n            if ($arr[$i] % 2 == 0) {\n                $even++;\n  \
    \          } else {\n                $odd++;\n            }\n        }\n    }\
    \ else {\n        $arr = str_split(abs($num));\n        for ($i = 0; $i < count($arr);\
    \ $i++) {\n            if ($arr[$i] % 2 == 0) {\n                $even++;\n  \
    \          } else {\n                $odd++;\n            }\n        }\n    }\n\
    \    return array($even, $odd);\n}\nprint_r(even_odd_count(-12) . PHP_EOL);\n\
    print_r(even_odd_count(123) . PHP_EOL);\nprint_r(even_odd_count(2) . PHP_EOL);\n\
    print_r(even_odd_count(0) . PHP_EOL);\nprint_r(even_odd_count(100) . PHP_EOL);\n\
    print_r(even_odd_count(-1) . PHP_EOL);\nprint_r(even_odd_count(201) . PHP_EOL);\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\nArray\nArray\nArray\nArray\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t// Enter\
    \ code here\n\t$num = $num < 0 ? abs($num) : $num;\n\t$str_num = (string)$num;\n\
    \t$even_digits = 0;\n\t$odd_digits = 0;\n\tfor ($i = 0; $i < strlen($str_num);\
    \ $i++) {\n\t\tif ((int)$str_num[$i] % 2 == 0) {\n\t\t\t$even_digits++;\n\t\t\
    } else {\n\t\t\t$odd_digits++;\n\t\t}\n\t}\n\treturn [$even_digits, $odd_digits];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $tuple =\
    \ [0, 0];\n  $arr = str_split($num);\n  for ($i = 0; $i < count($arr); $i++) {\n\
    \    if ($arr[$i] % 2 == 0) {\n      $tuple[0]++;\n    } else {\n      $tuple[1]++;\n\
    \    }\n  }\n  return $tuple;\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp2fpf58k_.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fpf58k_.php:25\n\
    Stack trace:\n#0 /tmp/tmp2fpf58k_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2fpf58k_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\t$num = abs($num);\n\t\n\twhile ($num > 0) {\n\t\t$digit =\
    \ $num % 10;\n\t\tif ($digit % 2 == 0)\n\t\t\t$even++;\n\t\telse\n\t\t\t$odd++;\n\
    \t\t$num = floor($num / 10);\n\t}\n\t\n\treturn array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxkj85h9.php:35\n\
    Stack trace:\n#0 /tmp/tmpzxkj85h9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzxkj85h9.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $str = strval($num);\n  $len = strlen($str);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    if ($str[$i] % 2 == 0) {\n      $even++;\n    } else\
    \ {\n      $odd++;\n    }\n  }\n  return array($even, $odd);\n}\necho 'even_odd_count(123)\
    \ ==> ';\nprint_r(even_odd_count(123));\necho '<br>';\necho 'even_odd_count(-12)\
    \ ==> ';\nprint_r(even_odd_count(-12));\necho '<br>';\necho 'even_odd_count(1234)\
    \ ==> ';\nprint_r(even_odd_count(1234));\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(123) ==> Array\n(\n    [0] => 1\n    [1] => 2\n)\n<br>even_odd_count(-12)\
    \ ==> \nWarning: A non-numeric value encountered in /tmp/tmpopkw7dgt.php on line\
    \ 12\nArray\n(\n    [0] => 2\n    [1] => 1\n)\n<br>even_odd_count(1234) ==> Array\n\
    (\n    [0] => 2\n    [1] => 2\n)\n<br>\nWarning: A non-numeric value encountered\
    \ in /tmp/tmpopkw7dgt.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpopkw7dgt.php:35\nStack trace:\n#0 /tmp/tmpopkw7dgt.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpopkw7dgt.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $abs = abs($num);\n  $digits = str_split($abs);\n  foreach\
    \ ($digits as $digit) {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else\
    \ {\n      $odd++;\n    }\n  }\n  return [$even, $odd];\n}\n\nprint_r(even_odd_count(-12));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n"
  stderr: ''
  exit_code: 0
  status: OK

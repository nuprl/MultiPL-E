name: HumanEval_125_split_words
language: php
results:
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $odd_count = 0;\n  if (strpos($txt, ' ')\
    \ !== false) {\n    return explode(' ', $txt);\n  } elseif (strpos($txt, ',')\
    \ !== false) {\n    return explode(',', $txt);\n  } else {\n    for ($i = 0; $i\
    \ < strlen($txt); $i++) {\n      if (ord($txt[$i]) % 2 !== 0) {\n        $odd_count++;\n\
    \      }\n    }\n    return $odd_count;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3hbj35i9.php:34\n\
    Stack trace:\n#0 /tmp/tmp3hbj35i9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3hbj35i9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ preg_split('/\\s+/', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n  \
    \  return preg_split('/,/', $txt);\n  } else {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n      if (ord($txt[$i]) % 2 !== 0) {\n      \
    \  $count++;\n      }\n    }\n    return $count;\n  }\n}\necho split_words(\"\
    Hello world!\");\necho split_words(\"Hello,world!\");\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "ArrayArray3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7xuw3boa.php:37\n\
    Stack trace:\n#0 /tmp/tmp7xuw3boa.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7xuw3boa.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $regex = \"/\\s|,/\";\n    if (preg_match($regex,\
    \ $txt)) {\n        return preg_split($regex, $txt);\n    } else {\n        $count\
    \ = 0;\n        $alphabet = range('a', 'z');\n        for ($i = 0; $i < count($alphabet);\
    \ $i++) {\n            if ($i % 2 == 1) {\n                $count += substr_count($txt,\
    \ $alphabet[$i]);\n            }\n        }\n        return $count;\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y3eli63.php:32\n\
    Stack trace:\n#0 /tmp/tmp0y3eli63.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0y3eli63.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if (strpos($txt,\
    \ ' ') > 0) {\n        return explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') > 0) {\n        return explode(',', $txt);\n    } else {\n        $letter\
    \ = 0;\n        $order = [];\n        for ($i = 0; $i < strlen($txt); $i++) {\n\
    \            $order[] = ord($txt[$i]);\n        }\n        for ($i = 0; $i < count($order);\
    \ $i++) {\n            if ($order[$i] % 2 != 0) {\n                $letter++;\n\
    \            }\n        }\n        return $letter;\n    }\n}\n\necho split_words(\"\
    Hello world!\") . \"<br>\";\necho split_words(\"Hello,world!\") . \"<br>\";\n\
    echo split_words(\"abcdef\");\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5hu_zm9t.php:43\n\
    Stack trace:\n#0 /tmp/tmp5hu_zm9t.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5hu_zm9t.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $low_letters =\
    \ 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $low_letters++;\n            }\n        }\n  \
    \      return $low_letters;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_auwhqai.php:35\n\
    Stack trace:\n#0 /tmp/tmp_auwhqai.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_auwhqai.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (ctype_alpha($txt)) {\n        $res\
    \ = [];\n        $array = str_split($txt);\n        foreach ($array as $letter)\
    \ {\n            if (ord($letter) % 2 == 1) {\n                $res[] = $letter;\n\
    \            }\n        }\n        return count($res);\n    } elseif (ctype_punct($txt))\
    \ {\n        $res = [];\n        $array = str_split($txt);\n        foreach ($array\
    \ as $item) {\n            if ($item == ',') {\n                $res[] = $item;\n\
    \            }\n        }\n        return count($res);\n    } else {\n       \
    \ $array = str_split($txt);\n        foreach ($array as $item) {\n           \
    \ if ($item == ' ') {\n                $res[] = $item;\n            }\n      \
    \  }\n        return count($res);\n    }\n}\n\necho split_words(\"Hello world!\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7_ssnx9.php:45\n\
    Stack trace:\n#0 /tmp/tmpe7_ssnx9.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpe7_ssnx9.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = preg_split('/\\s+/', $txt);\n\
    \    if (count($words) <= 1) {\n        $words = preg_split('/,/', $txt);\n  \
    \      if (count($words) <= 1) {\n            $words = preg_split('/([a-z])(?=[A-Z])/',\
    \ $txt);\n            return count($words);\n        }\n    }\n    return $words;\n\
    }\nprint_r(split_words(\"Hello world!\"));\necho \"<br>\";\nprint_r(split_words(\"\
    Hello,world!\"));\necho \"<br>\";\nprint_r(split_words(\"abcdef\"));\necho \"\
    <br>\";\nprint_r(split_words(\"abcDEF\"));\necho \"<br>\";\nprint_r(split_words(\"\
    abc,def\"));\necho \"<br>\";\nprint_r(split_words(\"abc,DEF\"));\necho \"<br>\"\
    ;\nprint_r(split_words(\"HelloWorld!\"));\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => Hello\n    [1] => world!\n)\n<br>Array\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n<br>1<br>2<br>Array\n(\n    [0] => abc\n   \
    \ [1] => def\n)\n<br>Array\n(\n    [0] => abc\n    [1] => DEF\n)\n<br>2<br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp579rvu0l.php:44\nStack\
    \ trace:\n#0 /tmp/tmp579rvu0l.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp579rvu0l.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') === false) {\n  \
    \      if (strpos($txt, ',') === false) {\n            return substr_count($txt,\
    \ 'a') + substr_count($txt, 'c') + substr_count($txt, 'e') + substr_count($txt,\
    \ 'g') + substr_count($txt, 'i') + substr_count($txt, 'k') + substr_count($txt,\
    \ 'm') + substr_count($txt, 'o') + substr_count($txt, 'q') + substr_count($txt,\
    \ 's') + substr_count($txt, 'u') + substr_count($txt, 'w') + substr_count($txt,\
    \ 'y');\n        } else {\n            return explode(',', $txt);\n        }\n\
    \    } else {\n        return explode(' ', $txt);\n    }\n}\necho '<pre>';\nprint_r(split_words(\"\
    Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpimjp5_cw.php:39\nStack trace:\n#0 /tmp/tmpimjp5_cw.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpimjp5_cw.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $text = str_split($txt);\n    $new = [];\n\
    \    $new2 = [];\n    foreach ($text as $i) {\n        if (ctype_alpha($i)) {\n\
    \            $new2[] = $i;\n        } else {\n            $new[] = $i;\n     \
    \   }\n    }\n    if (count($new) > 0) {\n        return explode(\" \", $txt);\n\
    \    } else if (count($new2) > 0) {\n        return explode(\",\", $txt);\n  \
    \  } else {\n        $count = 0;\n        foreach ($text as $i) {\n          \
    \  if (ord($i) % 2 != 0) {\n                $count += 1;\n            }\n    \
    \    }\n        return $count;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd5xj4tt.php:41\n\
    Stack trace:\n#0 /tmp/tmprd5xj4tt.php(50): test()\n#1 {main}\n  thrown in /tmp/tmprd5xj4tt.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t// return array_filter(str_split($txt), function($a)\
    \ {\n\t// \treturn ord($a) % 2 == 0;\n\t// });\n\t$parts = explode(',', $txt);\n\
    \tif (count($parts) == 1) {\n\t\t$parts = explode(' ', $txt);\n\t\tif (count($parts)\
    \ == 1) {\n\t\t\treturn array_filter(str_split($txt), function($a) {\n\t\t\t\t\
    return ord($a) % 2 == 0;\n\t\t\t});\n\t\t}\n\t}\n\treturn $parts;\n}\n\necho(var_dump(split_words(\"\
    Hello world!\"))); // [\"Hello\", \"world!\"]\necho(var_dump(split_words(\"Hello,world!\"\
    ))); // [\"Hello\", \"world!\"]\necho(var_dump(split_words(\"abcdef\"))); // 3\n\
    echo(var_dump(split_words(\"codewars\"))); // 4\necho(var_dump(split_words(\"\
    abcdefghijklmnopqrstuvwxyz\"))); // 13\necho(var_dump(split_words(\"abcdefghijklmnopqrstuvwxyz1234567890\"\
    ))); // 16\necho(var_dump(split_words(\"abcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()\"\
    ))); // 16\necho(var_dump(split_words(\"abc,defghi,jklmnopqrst,uvwxyz\"))); //\
    \ [\"abc\", \"defghi\", \"jklmnopqrst\", \"uvwxyz\"]\necho(var_dump(split_words(\"\
    abc,defghi,jklmnopqrst,uvwxyz,1234567890\"))); // [\"abc\", \"defghi\", \"jklmnopqrst\"\
    , \"uvwxyz\", \"1234567890\"]\necho(var_dump(split_words(\"abc,defghi,jklmnopqrst,uvwxyz,1234567890!@#$%^&*()\"\
    ))); // [\"abc\", \"defghi\", \"jklmnopqrst\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\narray(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\narray(3) {\n  [1]=>\n  string(1) \"b\"\n  [3]=>\n  string(1) \"d\"\n  [5]=>\n\
    \  string(1) \"f\"\n}\narray(2) {\n  [2]=>\n  string(1) \"d\"\n  [6]=>\n  string(1)\
    \ \"r\"\n}\narray(13) {\n  [1]=>\n  string(1) \"b\"\n  [3]=>\n  string(1) \"d\"\
    \n  [5]=>\n  string(1) \"f\"\n  [7]=>\n  string(1) \"h\"\n  [9]=>\n  string(1)\
    \ \"j\"\n  [11]=>\n  string(1) \"l\"\n  [13]=>\n  string(1) \"n\"\n  [15]=>\n\
    \  string(1) \"p\"\n  [17]=>\n  string(1) \"r\"\n  [19]=>\n  string(1) \"t\"\n\
    \  [21]=>\n  string(1) \"v\"\n  [23]=>\n  string(1) \"x\"\n  [25]=>\n  string(1)\
    \ \"z\"\n}\narray(18) {\n  [1]=>\n  string(1) \"b\"\n  [3]=>\n  string(1) \"d\"\
    \n  [5]=>\n  string(1) \"f\"\n  [7]=>\n  string(1) \"h\"\n  [9]=>\n  string(1)\
    \ \"j\"\n  [11]=>\n  string(1) \"l\"\n  [13]=>\n  string(1) \"n\"\n  [15]=>\n\
    \  string(1) \"p\"\n  [17]=>\n  string(1) \"r\"\n  [19]=>\n  string(1) \"t\"\n\
    \  [21]=>\n  string(1) \"v\"\n  [23]=>\n  string(1) \"x\"\n  [25]=>\n  string(1)\
    \ \"z\"\n  [27]=>\n  string(1) \"2\"\n  [29]=>\n  string(1) \"4\"\n  [31]=>\n\
    \  string(1) \"6\"\n  [33]=>\n  string(1) \"8\"\n  [35]=>\n  string(1) \"0\"\n\
    }\narray(24) {\n  [1]=>\n  string(1) \"b\"\n  [3]=>\n  string(1) \"d\"\n  [5]=>\n\
    \  string(1) \"f\"\n  [7]=>\n  string(1) \"h\"\n  [9]=>\n  string(1) \"j\"\n \
    \ [11]=>\n  string(1) \"l\"\n  [13]=>\n  string(1) \"n\"\n  [15]=>\n  string(1)\
    \ \"p\"\n  [17]=>\n  string(1) \"r\"\n  [19]=>\n  string(1) \"t\"\n  [21]=>\n\
    \  string(1) \"v\"\n  [23]=>\n  string(1) \"x\"\n  [25]=>\n  string(1) \"z\"\n\
    \  [27]=>\n  string(1) \"2\"\n  [29]=>\n  string(1) \"4\"\n  [31]=>\n  string(1)\
    \ \"6\"\n  [33]=>\n  string(1) \"8\"\n  [35]=>\n  string(1) \"0\"\n  [37]=>\n\
    \  string(1) \"@\"\n  [39]=>\n  string(1) \"$\"\n  [41]=>\n  string(1) \"^\"\n\
    \  [42]=>\n  string(1) \"&\"\n  [43]=>\n  string(1) \"*\"\n  [44]=>\n  string(1)\
    \ \"(\"\n}\narray(4) {\n  [0]=>\n  string(3) \"abc\"\n  [1]=>\n  string(6) \"\
    defghi\"\n  [2]=>\n  string(11) \"jklmnopqrst\"\n  [3]=>\n  string(6) \"uvwxyz\"\
    \n}\narray(5) {\n  [0]=>\n  string(3) \"abc\"\n  [1]=>\n  string(6) \"defghi\"\
    \n  [2]=>\n  string(11) \"jklmnopqrst\"\n  [3]=>\n  string(6) \"uvwxyz\"\n  [4]=>\n\
    \  string(10) \"1234567890\"\n}\narray(5) {\n  [0]=>\n  string(3) \"abc\"\n  [1]=>\n\
    \  string(6) \"defg"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $even = 0;\n  $odd = 0;\n  $len = strlen($txt);\n\
    \  for ($i = 0; $i < $len; $i++){\n    if(ord($txt[$i]) % 2 === 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n  }\n  if (strpos($txt, ' ') !== false) {\n\
    \    return explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n\
    \    return explode(',', $txt);\n  } else {\n    return $odd;\n  }\n}\necho \"\
    split_words('Hello world!') = \";\nprint_r(split_words('Hello world!'));\necho\
    \ \"<br>\";\necho \"split_words('Hello,world!') = \";\nprint_r(split_words('Hello,world!'));\n\
    echo \"<br>\";\necho \"split_words('abcdef') = \";\nprint_r(split_words('abcdef'));\n\
    echo \"<br>\";\necho \"split_words('def') = \";\nprint_r(split_words('def'));\n\
    echo \"<br>\";\necho \"split_words('def,ghi') = \";\nprint_r(split_words('def,ghi'));\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "split_words('Hello world!') = Array\n(\n    [0] => Hello\n    [1] => world!\n\
    )\n<br>split_words('Hello,world!') = Array\n(\n    [0] => Hello\n    [1] => world!\n\
    )\n<br>split_words('abcdef') = 3<br>split_words('def') = 1<br>split_words('def,ghi')\
    \ = Array\n(\n    [0] => def\n    [1] => ghi\n)\n<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmphlwzgs51.php:53\nStack trace:\n#0 /tmp/tmphlwzgs51.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphlwzgs51.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $words = preg_split('/[\\s,]+/', $txt);\n\
    \  return empty($words[1]) ? 3 : $words;\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0xvcx9b.php:21\n\
    Stack trace:\n#0 /tmp/tmpo0xvcx9b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpo0xvcx9b.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $odd = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if ($i % 2 == 0) {\n        $odd++;\n      }\n    }\n    return\
    \ $odd;\n  }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbos4r_ak.php:34\n\
    Stack trace:\n#0 /tmp/tmpbos4r_ak.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbos4r_ak.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (count(explode(\" \", $txt)) > 1) {\n\t\
    \treturn explode(\" \", $txt);\n\t}\n\tif (count(explode(\",\", $txt)) > 1) {\n\
    \t\treturn explode(\",\", $txt);\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}\necho split_words(\"Hello world!\");\necho split_words(\"Hello,world!\"\
    );\necho split_words(\"abcdef\");\necho split_words(\"abcefgh\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "ArrayArray34\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnna46n9w.php:38\n\
    Stack trace:\n#0 /tmp/tmpnna46n9w.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnna46n9w.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    // your code here\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7i9d2f0a.php:17\n\
    Stack trace:\n#0 /tmp/tmp7i9d2f0a.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7i9d2f0a.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(preg_match('/[ ,]/', $txt)){\n    if(preg_match('/\
    \ /', $txt)){\n      return explode(' ', $txt);\n    }else{\n      return explode(',',\
    \ $txt);\n    }\n  }else{\n    $arr = [];\n    for($i = 0; $i < strlen($txt);\
    \ $i++){\n      if(ord($txt[$i]) % 2 != 0){\n        $arr[] = $txt[$i];\n    \
    \  }\n    }\n    return count($arr);\n  }\n}\necho split_words(\"Hello world!\"\
    ) . \"<br>\";\necho split_words(\"Hello,world!\") . \"<br>\";\necho split_words(\"\
    abcdef\") . \"<br>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmps60oqvtv.php:39\nStack trace:\n#0 /tmp/tmps60oqvtv.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmps60oqvtv.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = explode(\" \", $txt);\n    if (count($txt)\
    \ == 1) {\n        $txt = explode(\",\", $txt[0]);\n        if (count($txt) ==\
    \ 1) {\n            $sum = 0;\n            for ($i = 0; $i < strlen($txt[0]);\
    \ $i++) {\n                if (ord($txt[0][$i]) % 2 != 0) $sum++;\n          \
    \  }\n            return $sum;\n        }\n    }\n    return $txt;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_425hx8v.php:34\n\
    Stack trace:\n#0 /tmp/tmp_425hx8v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_425hx8v.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $text = str_split($txt);\n    $arr = [];\n\
    \    for ($i = 0; $i < count($text); $i++) {\n        if ($text[$i] === \" \"\
    ) {\n            $arr[] = array_splice($text, 0, $i);\n            $text = array_slice($text,\
    \ $i + 1);\n            $i = 0;\n        } else if ($text[$i] === \",\") {\n \
    \           $arr[] = array_splice($text, 0, $i);\n            $text = array_slice($text,\
    \ $i + 1);\n            $i = 0;\n        }\n    }\n    $arr[] = $text;\n    $text\
    \ = array_map(function ($x) {\n        return implode($x);\n    }, $arr);\n  \
    \  return $text;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jqkm4tk.php:35\n\
    Stack trace:\n#0 /tmp/tmp2jqkm4tk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2jqkm4tk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $txt = str_split($txt);\n\
    \        $odds = 0;\n        foreach ($txt as $letter) {\n            if (ord($letter)\
    \ % 2 != 0) {\n                $odds++;\n            }\n        }\n        return\
    \ $odds;\n    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lq8s1dq.php:35\n\
    Stack trace:\n#0 /tmp/tmp_lq8s1dq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_lq8s1dq.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $ret = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $ret = explode(' ', $txt);\n    } else if (strpos($txt, ',')\
    \ !== false) {\n        $ret = explode(',', $txt);\n    } else {\n        $i =\
    \ 0;\n        for ($j = 0; $j < strlen($txt); $j++) {\n            if (ord($txt[$j])\
    \ % 2 == 1) {\n                $i++;\n            }\n        }\n        $ret =\
    \ $i;\n    }\n    return $ret;\n}\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5s_mtnn.php:36\n\
    Stack trace:\n#0 /tmp/tmpc5s_mtnn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpc5s_mtnn.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $split = preg_split('/\\s+/', $txt);\n\
    \    if (count($split) === 1) {\n        $split = preg_split('/,/', $txt);\n \
    \       if (count($split) === 1) {\n            $sum = 0;\n            $letters\
    \ = str_split($txt);\n            foreach ($letters as $letter) {\n          \
    \      $ord = ord($letter);\n                if ($ord % 2 === 1) {\n         \
    \           $sum++;\n                }\n            }\n            return $sum;\n\
    \        }\n    }\n    return $split;\n}\n\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5es_lgq.php:38\n\
    Stack trace:\n#0 /tmp/tmpn5es_lgq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn5es_lgq.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t\n\t$arr = str_split($txt);\n\t$n = count($arr);\n\
    \t$res = [];\n\t$odd = 0;\n\t$cnt = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t\
    if ($arr[$i] == ' ' || $arr[$i] == ',') {\n\t\t\t$res[] = $odd;\n\t\t\t$odd =\
    \ 0;\n\t\t\t$cnt++;\n\t\t} else {\n\t\t\tif (ord($arr[$i]) % 2 == 1) {\n\t\t\t\
    \t$odd++;\n\t\t\t}\n\t\t}\n\t}\n\tif ($cnt == 0) {\n\t\treturn $odd;\n\t}\n\t\
    return $res;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7m_nr90k.php:38\n\
    Stack trace:\n#0 /tmp/tmp7m_nr90k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7m_nr90k.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  }\n  if (strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  }\n  $count = 0;\n  for ($i = 0; $i < strlen($txt); $i++) {\n    if\
    \ (ord($txt[$i]) % 2 == 1) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\necho split_words(\"abcdef\").PHP_EOL;\necho split_words(\"Hello world!\").PHP_EOL;\n\
    echo split_words(\"Hello,world!\").PHP_EOL;\necho split_words(\"a,b,c,d,e,f\"\
    ).PHP_EOL;\necho split_words(\"Hello,my,name,is,Peter,Parker\").PHP_EOL;\necho\
    \ split_words(\"Hello my name is Peter Parker\").PHP_EOL;\necho split_words(\"\
    Hello,my,name,is,Peter,Parker\").PHP_EOL;\necho split_words(\"Hello my name is\
    \ Peter Parker\").PHP_EOL;\necho split_words(\"Hello!It's,me\").PHP_EOL;\necho\
    \ split_words(\"Hello!It's,me\").PHP_EOL;\necho split_words(\"Hello,It's,me\"\
    ).PHP_EOL;\necho split_words(\"Hello,my,name,is,Peter,Parker\").PHP_EOL;\necho\
    \ split_words(\"Hello my name is Peter Parker\").PHP_EOL;\necho split_words(\"\
    Hello,my,name,is,Peter,Parker\").PHP_EOL;\necho split_words(\"Hello my name is\
    \ Peter Parker\").PHP_EOL;\necho split_words(\"Hello!It's,me\").PHP_EOL;\necho\
    \ split_words(\"Hello!It's,me\").PHP_EOL;\necho split_words(\"Hello,It's,me\"\
    ).PHP_EOL;\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "3\nArray\nArray\nArray\nArray\nArray\nArray\nArray\nArray\nArray\nArray\n\
    Array\nArray\nArray\nArray\nArray\nArray\nArray\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpk4qk9ytw.php:52\nStack trace:\n#0 /tmp/tmpk4qk9ytw.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpk4qk9ytw.php on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $letter_count = strlen($txt);\n    if(stristr($txt,\
    \ ' ')) {\n        return explode(' ', $txt);\n    }\n    elseif(stristr($txt,\
    \ ',')) {\n        return explode(',', $txt);\n    }\n    else {\n        $odd_count\
    \ = 0;\n        for($i = 0; $i < $letter_count; $i++) {\n            if(ord($txt[$i])\
    \ % 2 != 0) {\n                $odd_count++;\n            }\n        }\n     \
    \   return $odd_count;\n    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip44f03u.php:37\n\
    Stack trace:\n#0 /tmp/tmpip44f03u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpip44f03u.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $noSplitters = false;\n  $noCommas = false;\n\
    \  $noSplitter = false;\n  $noWhitespace = false;\n  $returnInt = false;\n  $arr\
    \ = array();\n  $txt = trim($txt);\n  for ($i = 0; $i < strlen($txt); $i++) {\n\
    \    $char = $txt[$i];\n    if (ord($char) >= 97 && ord($char) <= 122) {\n   \
    \   $arr[] = $char;\n    }\n  }\n  $odds = array();\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    if ($i % 2 != 0) {\n      $odds[] = $arr[$i];\n    }\n  }\n  if\
    \ (count($odds) > 0) {\n    return count($odds);\n  }\n  if (strpos($txt, \" \"\
    ) == true) {\n    $noWhitespace = true;\n  }\n  if (strpos($txt, \",\") == true)\
    \ {\n    $noCommas = true;\n  }\n  if ($noWhitespace == false && $noCommas ==\
    \ false) {\n    $noSplitters = true;\n  }\n  if ($noWhitespace == false && $noCommas\
    \ == true) {\n    $noSplitter = true;\n  }\n  if ($noSplitters == true || $noSplitter\
    \ == true) {\n    $returnInt = true;\n  }\n  if ($returnInt == true) {\n    return\
    \ count($odds);\n  }\n  if ($noCommas == true) {\n    $chars = explode(\",\",\
    \ $txt);\n    return $chars;\n  }\n  if ($noWhitespace == true) {\n    $chars\
    \ = explode(\" \", $txt);\n    return $chars;\n  }\n}\necho var_dump(split_words(\"\
    Hello world!\")) . \"\\n\";\necho var_dump(split_words(\"Hello,world!\")) . \"\
    \\n\";\necho var_dump(split_words(\"abcdef\")) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(4)\n\nint(4)\n\nint(3)\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgz8l9mcg.php:67\nStack trace:\n#0 /tmp/tmpgz8l9mcg.php(77): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgz8l9mcg.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') === false) {\n  \
    \      if (strpos($txt, ',') === false) {\n            if ($txt !== strtoupper($txt))\
    \ {\n                return(substr_count($txt, 'a') + substr_count($txt, 'c')\
    \ + substr_count($txt, 'e') + substr_count($txt, 'g') + substr_count($txt, 'i')\
    \ + substr_count($txt, 'k') + substr_count($txt, 'm') + substr_count($txt, 'o')\
    \ + substr_count($txt, 'q') + substr_count($txt, 's') + substr_count($txt, 'u')\
    \ + substr_count($txt, 'w') + substr_count($txt, 'y'));\n            }\n     \
    \   } else {\n            return(explode(',', $txt));\n        }\n    } else {\n\
    \        return(explode(' ', $txt));\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalcyiqg8.php:33\n\
    Stack trace:\n#0 /tmp/tmpalcyiqg8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpalcyiqg8.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$splited = explode(' ', $txt);\n\tif (count($splited)\
    \ > 1) {\n\t\treturn $splited;\n\t}\n\t$splited = explode(',', $txt);\n\tif (count($splited)\
    \ > 1) {\n\t\treturn $splited;\n\t}\n\treturn count_odd($txt);\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_odd() in\
    \ /tmp/tmpefwr3n63.php:18\nStack trace:\n#0 /tmp/tmpefwr3n63.php(22): split_words('abcdef')\n\
    #1 /tmp/tmpefwr3n63.php(30): candidate('abcdef')\n#2 /tmp/tmpefwr3n63.php(36):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpefwr3n63.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $res1 = explode(\" \", $txt);\n  $res2 =\
    \ explode(\",\", $txt);\n  if(count($res1) > 1) {\n    return $res1;\n  } else\
    \ if(count($res2) > 1) {\n    return $res2;\n  } else {\n    $odds = 0;\n    for($i\
    \ = 0; $i < 26; $i++) {\n      if($i % 2 != 0) {\n        $odds++;\n      }\n\
    \    }\n    return $odds;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rk5nmgs.php:35\n\
    Stack trace:\n#0 /tmp/tmp8rk5nmgs.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8rk5nmgs.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $arr = str_split($txt);\n  if(strpos($txt,\
    \ ' ') !== false) {\n    return explode(' ', $txt);\n  } else if(strpos($txt,\
    \ ',') !== false) {\n    return explode(',', $txt);\n  } else {\n    $count =\
    \ 0;\n    for($i = 0; $i < count($arr); $i++) {\n      if(ord($arr[$i]) % 2 ==\
    \ 1) {\n        $count++;\n      }\n    }\n    return $count;\n  }\n}\necho split_words(\"\
    Hello world!\");\necho '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\n\
    echo split_words(\"abcdef\");\necho '<br>';\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp6xbnf0f_.php:41\nStack trace:\n#0 /tmp/tmp6xbnf0f_.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6xbnf0f_.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false) {\n\t\t\
    return explode(' ', $txt);\n\t} elseif (strpos($txt, ',') !== false) {\n\t\treturn\
    \ explode(',', $txt);\n\t} else {\n\t\t$letters = str_split($txt);\n\t\treturn\
    \ count(array_filter($letters, function($letter) {\n\t\t\treturn ord($letter)\
    \ % 2 === 1;\n\t\t}));\n\t}\n}\n\n$ret = split_words(\"abcdef\");\nvar_dump($ret);\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "int(3)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37zy4i2n.php:34\n\
    Stack trace:\n#0 /tmp/tmp37zy4i2n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp37zy4i2n.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (preg_match(\"/\\s/\", $txt)) {\n  \
    \      return preg_split(\"/\\s/\", $txt);\n    } elseif (preg_match(\"/,/\",\
    \ $txt)) {\n        return preg_split(\"/,/\", $txt);\n    } else {\n        $counter\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $counter++;\n            }\n        }\n       \
    \ return $counter;\n    }\n}\necho split_words(\"Hello world!\");\necho \"\\n\"\
    ;\necho split_words(\"Hello,world!\");\necho \"\\n\";\necho split_words(\"abcdef\"\
    );\necho \"\\n\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19m44ocp.php:40\n\
    Stack trace:\n#0 /tmp/tmp19m44ocp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp19m44ocp.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') === false) {\n    if\
    \ (strpos($txt, ',') === false) {\n      $letters = str_split($txt);\n      $odd_order\
    \ = [];\n      foreach ($letters as $letter) {\n        if (ord($letter) % 2 !=\
    \ 0) {\n          $odd_order[] = $letter;\n        }\n      }\n      return count($odd_order);\n\
    \    } else {\n      return explode(',', $txt);\n    }\n  } else {\n    return\
    \ explode(' ', $txt);\n  }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zk5vq4n.php:37\n\
    Stack trace:\n#0 /tmp/tmp5zk5vq4n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5zk5vq4n.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(preg_match(\"/\\s/\", $txt)){\n    \
    \    return preg_split(\"/\\s/\", $txt);\n    } elseif(preg_match(\"/,/\", $txt)){\n\
    \        return preg_split(\"/,/\", $txt);\n    } else {\n        $count = 0;\n\
    \        for($i = 0; $i < strlen($txt); $i++){\n            if(ord($txt[$i]) %\
    \ 2 == 1){\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoilta5m.php:35\n\
    Stack trace:\n#0 /tmp/tmpqoilta5m.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqoilta5m.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$arr = [];\n\tif (strpos($txt, ' ') != false)\
    \ {\n\t\t$arr = explode(' ', $txt);\n\t} elseif (strpos($txt, ',') != false) {\n\
    \t\t$arr = explode(',', $txt);\n\t} else {\n\t\t$count = 0;\n\t\tfor ($i = 0;\
    \ $i < strlen($txt); $i++) {\n\t\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t\t$arr = $count;\n\t}\n\treturn $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpi44f4p.php:36\n\
    Stack trace:\n#0 /tmp/tmpwpi44f4p.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwpi44f4p.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $odds = 0;\n    $arr = [];\n    $split\
    \ = \"\";\n    $split = preg_split(\"/[\\s,]+/\", $txt);\n    for ($i = 0; $i\
    \ < count($split); $i++) {\n        if (ord($split[$i]) % 2 != 0) {\n        \
    \    $odds++;\n        }\n    }\n    return $odds;\n}\necho split_words(\"Hello\
    \ world!\");\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpboc_yvib.php:27\n\
    Stack trace:\n#0 /tmp/tmpboc_yvib.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpboc_yvib.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') == false) {\n   \
    \     if (strpos($txt, ',') == false) {\n            $odds = 0;\n            $a\
    \ = 'a';\n            for ($i = 0; $i < strlen($txt); $i++) {\n              \
    \  if (ord($txt[$i]) % 2 !== 0) {\n                    $odds++;\n            \
    \    }\n            }\n            return $odds;\n        } else {\n         \
    \   return explode(',', $txt);\n        }\n    } else {\n        return explode('\
    \ ', $txt);\n    }\n}\necho split_words(\"Hello world!\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmply7fbsvi.php:38\n\
    Stack trace:\n#0 /tmp/tmply7fbsvi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmply7fbsvi.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $txt = str_replace(\",\", \" \", $txt);\n\
    \  $words = explode(\" \", $txt);\n  if(count($words) <= 1) {\n    return count_letter($txt);\n\
    \  } else {\n    return $words;\n  }\n}\n\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkmnvdj8.php:26\n\
    Stack trace:\n#0 /tmp/tmpqkmnvdj8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqkmnvdj8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(preg_match('/[a-z]/', $txt)){\n    $result\
    \ = 0;\n    $i = 0;\n    while($i < strlen($txt)){\n      if(ord($txt[$i]) % 2\
    \ != 0){\n        $result += 1;\n      }\n      $i++;\n    }\n    return $result;\n\
    \  }\n  if(preg_match('/\\s/', $txt)){\n    return preg_split('/\\s/', $txt);\n\
    \  }\n  if(preg_match('/,/', $txt)){\n    return preg_split('/,/', $txt);\n  }\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfyx8oyhq.php:33\n\
    Stack trace:\n#0 /tmp/tmpfyx8oyhq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfyx8oyhq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (preg_match('/[, ]/', $txt)) {\n\t\t$split_whitespace\
    \ = preg_split('/[, ]/', $txt);\n\t\treturn $split_whitespace;\n\t} else {\n\t\
    \t$arr = str_split($txt);\n\t\t$result = 0;\n\t\tforeach ($arr as $key => $value)\
    \ {\n\t\t\tif (ord($value) % 2 != 0) {\n\t\t\t\t$result++;\n\t\t\t}\n\t\t}\n\t\
    \treturn $result;\n\t}\n}\necho split_words(\"Hello world!\") . \"\\n\";\necho\
    \ split_words(\"Hello,world!\") . \"\\n\";\necho split_words(\"abcdef\") . \"\\\
    n\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8w4c7d9.php:34\n\
    Stack trace:\n#0 /tmp/tmpl8w4c7d9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpl8w4c7d9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (str_replace(' ', '', $txt) == $txt) {\n\
    \t\tif (str_replace(',', '', $txt) == $txt) {\n\t\t\treturn count(str_split($txt))/2;\n\
    \t\t}\n\t\treturn explode(',', $txt);\n\t}\n\treturn explode(' ', $txt);\n}\n\n\
    echo '<pre>';\nvar_dump(split_words(\"Hello world!\"));\nvar_dump(split_words(\"\
    Hello,world!\"));\nvar_dump(split_words(\"abcdef\"));\nvar_dump(split_words(\"\
    abcdefg\"));\nvar_dump(split_words(\"abcdefgh\"));\nvar_dump(split_words(\"abcdefghi\"\
    ));\nvar_dump(split_words(\"abcdefghij\"));\nvar_dump(split_words(\"abcdefghijk\"\
    ));\nvar_dump(split_words(\"abcdefghijkl\"));\nvar_dump(split_words(\"abcdefghijklm\"\
    ));\nvar_dump(split_words(\"abcdefghijklmn\"));\nvar_dump(split_words(\"abcdefghijklmno\"\
    ));\nvar_dump(split_words(\"abcdefghijklmnop\"));\nvar_dump(split_words(\"abcdefghijklmnopq\"\
    ));\nvar_dump(split_words(\"abcdefghijklmnopqr\"));\nvar_dump(split_words(\"abcdefghijklmnopqrs\"\
    ));\nvar_dump(split_words(\"abcdefghijklmnopqrst\"));\nvar_dump(split_words(\"\
    abcdefghijklmnopqrstu\"));\nvar_dump(split_words(\"abcdefghijklmnopqrstuv\"));\n\
    var_dump(split_words(\"abcdefghijklmnopqrstuvw\"));\nvar_dump(split_words(\"abcdefghijklmnopqrstuvwx\"\
    ));\nvar_dump(split_words(\"abcdefghijklmnopqrstuvwxy\"));\nvar_dump(split_words(\"\
    abcdefghijklmnopqrstuvwxyz\"));\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"\
    world!\"\n}\narray(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6)\
    \ \"world!\"\n}\nint(3)\nfloat(3.5)\nint(4)\nfloat(4.5)\nint(5)\nfloat(5.5)\n\
    int(6)\nfloat(6.5)\nint(7)\nfloat(7.5)\nint(8)\nfloat(8.5)\nint(9)\nfloat(9.5)\n\
    int(10)\nfloat(10.5)\nint(11)\nfloat(11.5)\nint(12)\nfloat(12.5)\nint(13)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp3s2ny1k_.php:54\nStack\
    \ trace:\n#0 /tmp/tmp3s2ny1k_.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp3s2ny1k_.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $j = 0;\n    $letters = array();\n    $commas\
    \ = array();\n    $txt = str_split($txt);\n    foreach ($txt as $i => $c) {\n\
    \        $ascii = ord($c);\n        if ($ascii >= 65 && $ascii <= 90) {\n    \
    \        $letters[$j] = chr($ascii + 32);\n            $j++;\n        } else if\
    \ ($ascii >= 97 && $ascii <= 122) {\n            $letters[$j] = $c;\n        \
    \    $j++;\n        } else if ($c == ' ') {\n            break;\n        } else\
    \ if ($c == ',') {\n            array_push($commas, $i);\n        }\n    }\n \
    \   if ($j == count($txt)) {\n        $count = 0;\n        foreach ($letters as\
    \ $i => $c) {\n            if ($i % 2 != 0) {\n                $count++;\n   \
    \         }\n        }\n        return $count;\n    } else if (count($commas)\
    \ == 0) {\n        return $letters;\n    } else {\n        $a = array();\n   \
    \     $a[0] = '';\n        $a[1] = '';\n        $commas = $commas[0];\n      \
    \  foreach ($txt as $i => $c) {\n            if ($i <= $commas) {\n          \
    \      $a[0] .= $c;\n            } else {\n                $a[1] .= $c;\n    \
    \        }\n        }\n        return $a;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02j0nb79.php:58\n\
    Stack trace:\n#0 /tmp/tmp02j0nb79.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp02j0nb79.php\
    \ on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $text = preg_split('/[,\\s]+/', $txt);\n\
    \  if (empty($text[1])) {\n    $text = preg_split('//', $txt, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    return count(array_filter($text, function($x) {\n      return (ord($x) %\
    \ 2 == 1);\n    }));\n  }\n  return $text;\n}\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps54d60ts.php:26\n\
    Stack trace:\n#0 /tmp/tmps54d60ts.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps54d60ts.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif(strpos($txt, ' ') !== false) {\n\t\treturn\
    \ explode(' ', $txt);\n\t} elseif(strpos($txt, ',') !== false) {\n\t\treturn explode(',',\
    \ $txt);\n\t} else {\n\t\t$odds = 0;\n\t\tfor($i = 0; $i < strlen($txt); $i++)\
    \ {\n\t\t\tif(ord($txt[$i]) % 2 !== 0) {\n\t\t\t\t$odds++;\n\t\t\t}\n\t\t}\n\t\
    \treturn $odds;\n\t}\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqs864l1.php:35\n\
    Stack trace:\n#0 /tmp/tmpuqs864l1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuqs864l1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    $isDigit = ctype_digit($txt);\n\
    \    $isUpper = ctype_upper($txt);\n    if ($isDigit) {\n        return $txt;\n\
    \    } else if ($isUpper) {\n        return strtolower($txt);\n    } else {\n\
    \        $txt = str_replace('\"', '', $txt);\n        $txt = str_replace(\"'\"\
    , '', $txt);\n        $txt = str_replace('.', '', $txt);\n        $txt = str_replace(',',\
    \ '', $txt);\n        $txt = str_replace(';', '', $txt);\n        $txt = str_replace('-',\
    \ '', $txt);\n        $txt = str_replace('/', '', $txt);\n        $txt = str_replace('&',\
    \ '', $txt);\n        $txt = str_replace(')', '', $txt);\n        $txt = str_replace('(',\
    \ '', $txt);\n        $txt = str_replace('!', '', $txt);\n        $txt = str_replace('?',\
    \ '', $txt);\n        $txt = str_replace('+', '', $txt);\n        $txt = str_replace('=',\
    \ '', $txt);\n        $txt = str_replace('$', '', $txt);\n        $txt = str_replace('|',\
    \ '', $txt);\n        $txt = str_replace('%', '', $txt);\n        $txt = str_replace('^',\
    \ '', $txt);\n        $txt = str_replace('*', '', $txt);\n        $txt = str_replace('#',\
    \ '', $txt);\n        $txt = str_replace('@', '', $txt);\n        $txt = str_replace('~',\
    \ '', $txt);\n        $txt = str_replace('{', '', $txt);\n        $txt = str_replace('}',\
    \ '', $txt);\n        $txt = str_replace('[', '', $txt);\n        $txt = str_replace(']',\
    \ '', $txt);\n        $txt = str_replace('<', '', $txt);\n        $txt =\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp13ai8vrf.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        return floor(strlen($txt)\
    \ / 2);\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcin8zgox.php:36\nStack trace:\n#0 /tmp/tmpcin8zgox.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcin8zgox.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (preg_match(\"/\\s/\", $txt)) {\n\t\t\
    $txt = preg_split(\"/\\s/\", $txt);\n\t} elseif (preg_match(\"/,/\", $txt)) {\n\
    \t\t$txt = preg_split(\"/,/\", $txt);\n\t} else {\n\t\t$arr = str_split($txt);\n\
    \t\t$counter = 0;\n\t\tfor ($i=0; $i < sizeof($arr); $i++) { \n\t\t\tif (ord($arr[$i])\
    \ % 2 != 0) {\n\t\t\t\t$counter++;\n\t\t\t}\n\t\t}\n\t\t$txt = $counter;\n\t}\n\
    \tprint_r($txt);\n}\nsplit_words(\"abcdef\");\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3Array\n(\n    [0] => Hello\n    [1] => world!\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp2aupj12b.php:32\nStack trace:\n#0 /tmp/tmp2aupj12b.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2aupj12b.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $letter_array = str_split($txt);\n    $odd_num\
    \ = 0;\n    for ($i = 0; $i < count($letter_array); $i++) {\n        if (ord($letter_array[$i])\
    \ >= ord('a') && ord($letter_array[$i]) <= ord('z')) {\n            if ($i % 2\
    \ != 0) {\n                $odd_num++;\n            }\n        }\n    }\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } else\
    \ if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n   \
    \ } else {\n        return $odd_num;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $txt = explode(\" \", $txt);\n  if (count($txt)\
    \ == 1) {\n    $txt = explode(\",\", $txt[0]);\n    if (count($txt) == 1) {\n\
    \      $cnt = 0;\n      for ($i = 0; $i < strlen($txt[0]); $i++) {\n        if\
    \ (ord($txt[0][$i]) % 2 == 1) {\n          $cnt++;\n        }\n      }\n     \
    \ return $cnt;\n    }\n  }\n  return $txt;\n}\necho split_words(\"Hello world!\"\
    );\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"<br>\";\necho\
    \ split_words(\"abcdef\");\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp425bn_bb.php:40\n\
    Stack trace:\n#0 /tmp/tmp425bn_bb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp425bn_bb.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (preg_match('/\\s/', $txt)) {\n\t\treturn\
    \ preg_split('/\\s/', $txt);\n\t}\n\tif (preg_match('/,/', $txt)) {\n\t\treturn\
    \ preg_split('/,/', $txt);\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}\necho split_words(\"Hello world!\");\necho \"\\n\";\necho split_words(\"\
    Hello,world!\");\necho \"\\n\";\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxks4qstf.php:39\n\
    Stack trace:\n#0 /tmp/tmpxks4qstf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxks4qstf.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') === false && strpos($txt,\
    \ ',') === false) {\n        $arr = str_split($txt);\n        $count = 0;\n  \
    \      for($i = 0; $i < count($arr); $i++) {\n            if(ord($arr[$i]) % 2\
    \ === 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    } elseif(strpos($txt, ' ') === false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        return explode(' ', $txt);\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbr20tfd.php:35\n\
    Stack trace:\n#0 /tmp/tmpfbr20tfd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfbr20tfd.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (preg_match(\"/\\s/\", $txt)) {\n  \
    \      return preg_split(\"/\\s/\", $txt);\n    }\n    if (preg_match(\"/,/\"\
    , $txt)) {\n        return preg_split(\"/,/\", $txt);\n    }\n    $counter = 0;\n\
    \    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 !==\
    \ 0) {\n            $counter++;\n        }\n    }\n    return $counter;\n}\necho\
    \ \"split_words('Hello world!') => \";\nprint_r(split_words('Hello world!'));\n\
    echo \"<br>\";\necho \"split_words('Hello,world!') => \";\nprint_r(split_words('Hello,world!'));\n\
    echo \"<br>\";\necho \"split_words('abcdef') => \";\nprint_r(split_words('abcdef'));\n\
    echo \"<br>\";\necho \"split_words('abc def') => \";\nprint_r(split_words('abc\
    \ def'));\necho \"<br>\";\necho \"split_words('def') => \";\nprint_r(split_words('def'));\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "split_words('Hello world!') => Array\n(\n    [0] => Hello\n    [1] => world!\n\
    )\n<br>split_words('Hello,world!') => Array\n(\n    [0] => Hello\n    [1] => world!\n\
    )\n<br>split_words('abcdef') => 3<br>split_words('abc def') => Array\n(\n    [0]\
    \ => abc\n    [1] => def\n)\n<br>split_words('def') => 1<br>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpls4ifdvw.php:49\nStack trace:\n#0 /tmp/tmpls4ifdvw.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpls4ifdvw.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd = '';\n  \
    \      for ($i = 0; $i < strlen($txt); $i += 2) {\n            $odd .= $txt[$i];\n\
    \        }\n        return strlen($odd);\n    }\n}\necho split_words(\"Hello world!\"\
    ) . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho split_words(\"\
    abcdef\") . '<br>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp57syh9pl.php:35\nStack trace:\n#0 /tmp/tmp57syh9pl.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp57syh9pl.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd_chars = array();\n\
    \        $i = 0;\n        while ($i < strlen($txt)) {\n            if ($i % 2\
    \ == 0) {\n                $odd_chars[] = $txt[$i];\n            }\n         \
    \   $i++;\n        }\n        return count($odd_chars);\n    }\n}\necho \"<pre>\"\
    ;\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>3</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4_mwv3o.php:39\n\
    Stack trace:\n#0 /tmp/tmpt4_mwv3o.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpt4_mwv3o.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $alphabet = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \  if (strpos($txt, ' ') == false) {\n    if (strpos($txt, ',') == false) {\n\
    \      $count = 0;\n      for ($i = 0; $i < strlen($txt); $i++) {\n        if\
    \ (ord($txt[$i]) % 2 == 1) {\n          $count++;\n        }\n      }\n      return\
    \ $count;\n    } else {\n      return explode(',', $txt);\n    }\n  } else {\n\
    \    return explode(' ', $txt);\n  }\n}\n\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45bnc8x5.php:38\n\
    Stack trace:\n#0 /tmp/tmp45bnc8x5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp45bnc8x5.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') === false && strpos($txt,\
    \ ',') === false) {\n    $odd = 0;\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n      if (ord($txt[$i]) % 2 != 0) {\n        $odd++;\n      }\n    }\n  \
    \  return $odd;\n  }\n  elseif (strpos($txt, ' ') === false) {\n    return explode(',',\
    \ $txt);\n  }\n  else {\n    return explode(' ', $txt);\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo525e55i.php:36\n\
    Stack trace:\n#0 /tmp/tmpo525e55i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpo525e55i.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $alpha = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n      if (strpos($alpha,\
    \ $txt[$i]) % 2 !== 0) {\n        $count++;\n      }\n    }\n    return $count;\n\
    \  }\n}\necho split_words('Hello world!');\necho '<br>';\necho split_words('Hello,world!');\n\
    echo '<br>';\necho split_words('abcdef');\necho '<br>';\necho split_words('abc,def');\n\
    echo '<br>';\necho split_words('abcde,f');\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>Array<br>Array<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if (ord($txt[$i]) % 2 != 0) {\n                $result++;\n            }\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkrd8k81.php:35\n\
    Stack trace:\n#0 /tmp/tmpkkrd8k81.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkkrd8k81.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if (strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $sum = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 === 1) {\n                $sum++;\n            }\n      \
    \  }\n        return $sum;\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"\
    Split,on,commas.\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"\
    Split,on,no,whitespace.\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"\
    Split,on,no,whitespace,and,no,commas,either.\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(split_words(\"Split,on,no,whitespace,and,no,commas,.\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,whitespace,and,commas.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,whitespace,and,commas,no,period.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,whitespace,and,commas,no,period,either.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,whitespace,and,commas,period,exists.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Splitonwhitespaceandcommasperiodexists\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvpwrgi0i.php on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(preg_match(\"/[a-zA-Z]/\", $txt)) {\n\
    \        if(preg_match(\"/[a-zA-Z]\\s[a-zA-Z]/\", $txt)) {\n            $words\
    \ = preg_split(\"/\\s/\", $txt);\n            return $words;\n        }\n    \
    \    elseif(preg_match(\"/[a-zA-Z],\\s[a-zA-Z]/\", $txt)) {\n            $words\
    \ = preg_split(\"/,\\s/\", $txt);\n            return $words;\n        }\n   \
    \     else {\n            $abc = \"abcdefghijklmnopqrstuvwxyz\";\n           \
    \ $num_of_letters = strlen($txt);\n            $odd_letters = 0;\n           \
    \ for($i = 0; $i < $num_of_letters; $i++) {\n                $letter = strtolower($txt[$i]);\n\
    \                if(preg_match(\"/[$letter]/\", $abc)) {\n                   \
    \ $index = strpos($abc, $letter);\n                    if($index % 2 == 1) {\n\
    \                        $odd_letters++;\n                    }\n            \
    \    }\n            }\n            return $odd_letters;\n        }\n    }\n  \
    \  else {\n        return \"Input is invalid.\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_g1o69t.php:45\n\
    Stack trace:\n#0 /tmp/tmp1_g1o69t.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp1_g1o69t.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $oddLetters = ['a', 'c', 'e', 'g', 'i', 'k',\
    \ 'm', 'o', 'q', 's', 'u', 'w', 'y'];\n  $onlyLetters = str_replace(['-', ',',\
    \ '.', '!', '?', ';', ':', ' ', '/', '\"'], '', $txt);\n  if (strlen($onlyLetters)\
    \ > 0) {\n    $letters = str_split($onlyLetters);\n    $lowerCase = [];\n    foreach\
    \ ($letters as $l) {\n      $lowerCase[] = strtolower($l);\n    }\n    $odds =\
    \ array_intersect($lowerCase, $oddLetters);\n    return count($odds);\n  }\n \
    \ $array = explode(' ', $txt);\n  if (count($array) > 1) {\n    return $array;\n\
    \  }\n  $array = explode(',', $txt);\n  if (count($array) > 1) {\n    return $array;\n\
    \  }\n  return 0;\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"\
    Hi-Low\") . '<br>';\necho split_words(\"Wonderful!\") . '<br>';\necho split_words(\"\
    Hello!\") . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho split_words(\"\
    I need a drink.\") . '<br>';\necho split_words(\"When you're hot, you're hot!\"\
    ) . '<br>';\necho split_words(\"My name is Bob.\") . '<br>';\necho split_words(\"\
    Jingle bells, Batman smells!\") . '<br>';\necho split_words(\"YOLO!\") . '<br>';\n\
    echo split_words(\"GIF\") . '<br>';\necho split_words(\"YESTERDAY\") . '<br>';\n\
    echo split_words(\"ALABAMA\") . '<br>';\necho split_words\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpeipkqdqn.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif(strstr($txt, ' ')) {\n\t\treturn explode('\
    \ ', $txt);\n\t} elseif(strstr($txt, ',')) {\n\t\treturn explode(',', $txt);\n\
    \t} else {\n\t\t$txtArray = str_split($txt);\n\t\t$letters = 0;\n\t\tforeach($txtArray\
    \ as $char) {\n\t\t\tif(ord($char) % 2 === 1) {\n\t\t\t\t$letters++;\n\t\t\t}\n\
    \t\t}\n\t\treturn $letters;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5hkxtre.php:35\n\
    Stack trace:\n#0 /tmp/tmpm5hkxtre.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpm5hkxtre.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (str_word_count($txt) > 1) {\n     \
    \   return explode(\" \", $txt);\n    } elseif (strpos($txt, \",\") != false)\
    \ {\n        return explode(\",\", $txt);\n    } else {\n        $count = 0;\n\
    \        for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0)\
    \ {\n                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuia68xo.php:30\n\
    Stack trace:\n#0 /tmp/tmppuia68xo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppuia68xo.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(preg_match(\"/\\s/\", $txt)){\n    return\
    \ explode(\" \", $txt);\n  }\n  if(preg_match(\"/,/\", $txt)){\n    return explode(\"\
    ,\", $txt);\n  }\n  $sum = 0;\n  $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \  for($i = 0; $i < strlen($txt); $i++){\n    if(in_array($txt[$i], str_split($alphabet))){\n\
    \      $index = strpos($alphabet, $txt[$i]);\n      if($index % 2 == 1){\n   \
    \     $sum++;\n      }\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$words = explode(' ', $txt);\n\t$commas =\
    \ preg_match('/,/', $txt);\n\t$count = 0;\n\tif (count($words) > 1) {\n\t\treturn\
    \ $words;\n\t} else if ($commas > 0) {\n\t\treturn $words;\n\t} else {\n\t\t$letters\
    \ = str_split($txt);\n\t\tforeach ($letters as $key => $value) {\n\t\t\tif (ord($value)\
    \ % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n}\n\
    echo split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"Hello,world!\"\
    );\necho '<br>';\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mqk0rfu.php:38\n\
    Stack trace:\n#0 /tmp/tmp8mqk0rfu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8mqk0rfu.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $regex = '/[^\\s]+|\\\
    s+/';\n    preg_match_all($regex, $txt, $matches);\n    for ($i = 0; $i < count($matches[0]);\
    \ $i++) {\n        $result[] = $matches[0][$i];\n    }\n    if (count($result)\
    \ > 1) {\n        return $result;\n    } else {\n        $regex = '/[^,]+|,+/';\n\
    \        preg_match_all($regex, $txt, $matches);\n        for ($i = 0; $i < count($matches[0]);\
    \ $i++) {\n            $result[] = $matches[0][$i];\n        }\n        if (count($result)\
    \ > 1) {\n            return $result;\n        } else {\n            return lowercase_odd($txt);\n\
    \        }\n    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqpgzlhlo.php:36\n\
    Stack trace:\n#0 /tmp/tmpqpgzlhlo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqpgzlhlo.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } else if(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $oddCount = 0;\n  \
    \      for($i = 0; $i < strlen($txt); $i++) {\n            if($i % 2 == 0) {\n\
    \                $oddCount++;\n            }\n        }\n        return $oddCount;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjq_ywu3r.php:34\n\
    Stack trace:\n#0 /tmp/tmpjq_ywu3r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjq_ywu3r.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    // return str_split($txt);\n    if(strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif(strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        $chars = str_split($txt);\n        foreach($chars as $char)\
    \ {\n            if(ord($char) % 2 !== 0) {\n                $count++;\n     \
    \       }\n        }\n        return $count;\n    }\n}\necho \"Number of odd characters\
    \ \".split_words(\"abcdef\").\"\\n\";\necho \"Two word split \".split_words(\"\
    Hello world!\").\"\\n\";\necho \"Two word split \".split_words(\"Hello,world!\"\
    ).\"\\n\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Number of odd characters 3\nTwo word split Array\nTwo word split Array\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7pbh77j.php:40\nStack\
    \ trace:\n#0 /tmp/tmpf7pbh77j.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpf7pbh77j.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$w = explode(\" \", $txt);\n\tif (count($w)\
    \ > 1) {\n\t\treturn $w;\n\t}\n\t$w = explode(\",\", $txt);\n\tif (count($w) >\
    \ 1) {\n\t\treturn $w;\n\t}\n\t$o = 0;\n\tfor ($i = 0; $i < strlen($txt); $i++)\
    \ {\n\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t$o++;\n\t\t}\n\t}\n\treturn $o;\n\
    }\necho split_words(\"Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\"\
    );\necho \"<br>\";\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3bdfq2kn.php:41\n\
    Stack trace:\n#0 /tmp/tmp3bdfq2kn.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3bdfq2kn.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  }\n  if (strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  }\n  $charArray = str_split($txt);\n  $count = 0;\n  foreach ($charArray\
    \ as $value) {\n    if (ord($value) % 2 != 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\necho '<pre>';\nvar_dump(split_words(\"Hello world!\"));\n\
    var_dump(split_words(\"Hello,world!\"));\nvar_dump(split_words(\"abcdef\"));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"\
    world!\"\n}\narray(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6)\
    \ \"world!\"\n}\nint(3)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp1fzy7t45.php:40\nStack trace:\n#0 /tmp/tmp1fzy7t45.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1fzy7t45.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = preg_split('/[\\s,]+/', $txt);\n\
    \    if(count($result) < 2) {\n        $result = ord(strtolower($txt[0])) % 2;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4404v71p.php:23\n\
    Stack trace:\n#0 /tmp/tmp4404v71p.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4404v71p.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $char_list = str_split($txt);\n    $char_array\
    \ = [];\n    $odd_char_number = 0;\n    foreach ($char_list as $char) {\n    \
    \    if (ord($char) >= 97 && ord($char) <= 122) {\n            $char_array[] =\
    \ ord($char);\n        }\n    }\n    foreach ($char_array as $number) {\n    \
    \    if ($number % 2 == 1) {\n            $odd_char_number += 1;\n        }\n\
    \    }\n    if (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n\
    \    } elseif (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    } else {\n        return $odd_char_number;\n    }\n}\n$txt = \"h,e!l!l,!o,w!o!r,l,d?\"\
    ;\necho split_words($txt);\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8moa0r2a.php:43\n\
    Stack trace:\n#0 /tmp/tmp8moa0r2a.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp8moa0r2a.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(strpos($txt, ' ') == true) {\n    return\
    \ explode(' ', $txt);\n  } elseif(strpos($txt, ',') == true) {\n    return explode(',',\
    \ $txt);\n  } else {\n    $letters = str_split($txt);\n    $res = [];\n    foreach($letters\
    \ as $let) {\n      if(ord($let) % 2 != 0) {\n        $res[] = $let;\n      }\n\
    \    }\n    return count($res);\n  }\n}\necho split_words(\"Hello world!\");\n\
    \ ?>\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Arrayfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $text = preg_split('/[\\s,]+/', $txt);\n\
    \    if (count($text) > 1) {\n        return $text;\n    }\n    else {\n     \
    \   $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n           \
    \ if ($i % 2 != 0) {\n                $count++;\n            }\n        }\n  \
    \      return $count;\n    }\n}\n$result = split_words(\"abcdef\");\nprint_r($result);\n\
    echo \"</br>\";\n$result = split_words(\"Hello world!\");\nprint_r($result);\n\
    echo \"</br>\";\n$result = split_words(\"Hello,world!\");\nprint_r($result);\n\
    echo \"</br>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "3</br>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</br>Array\n(\n\
    \    [0] => Hello\n    [1] => world!\n)\n</br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmph_qvsw1g.php:40\nStack trace:\n#0 /tmp/tmph_qvsw1g.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph_qvsw1g.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/', $txt);\n\
    \    if (count($words) == 1) {\n        $odds = array_filter(str_split($txt),\
    \ function($s) {\n            return ord($s) % 2 === 1;\n        });\n       \
    \ return count($odds);\n    }\n    return $words;\n}\nprint_r(split_words(\"abcdef\"\
    ));\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbpcscyj.php:27\n\
    Stack trace:\n#0 /tmp/tmpjbpcscyj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjbpcscyj.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$txt = str_replace(\",\", \" \", $txt);\n\
    \t$split = explode(\" \", $txt);\n\t$count = 0;\n\tforeach($split as $index =>\
    \ $word) {\n\t\tif(ctype_lower($word) && $index % 2 == 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count > 0 ? $count : $split;\n}\necho \"<pre>\";\nprint_r(split_words(\"\
    Hello world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>1</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpgoo9wy5_.php:36\nStack trace:\n#0 /tmp/tmpgoo9wy5_.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgoo9wy5_.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$text = str_split($txt);\n\t$words = [];\n\
    \t$i = 0;\n\t$n = count($text);\n\twhile ($i < $n) {\n\t\t$word = \"\";\n\t\t\
    while ($i < $n && $text[$i] != \" \" && $text[$i] != \",\") {\n\t\t\t$word .=\
    \ $text[$i];\n\t\t\t$i++;\n\t\t}\n\t\t$words[] = $word;\n\t\t$i++;\n\t}\n\tif\
    \ (count($words) == 1) {\n\t\t$word = str_split($words[0]);\n\t\t$odds = 0;\n\t\
    \tforeach ($word as $letter) {\n\t\t\tif (ord($letter) % 2 == 1) {\n\t\t\t\t$odds++;\n\
    \t\t\t}\n\t\t}\n\t\treturn $odds;\n\t}\n\treturn $words;\n}\necho split_words(\"\
    Hello world!\") . PHP_EOL;\necho split_words(\"Hello,world!\") . PHP_EOL;\necho\
    \ split_words(\"abcdef\") . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzcep85c.php:45\n\
    Stack trace:\n#0 /tmp/tmpvzcep85c.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpvzcep85c.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $chars = str_split($txt);\n\
    \    $result = [];\n    foreach ($chars as $char) {\n        if (ord($char) %\
    \ 2 == 1) {\n            $result[] = $char;\n        }\n    }\n    return count($result);\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6v4grpp.php:35\n\
    Stack trace:\n#0 /tmp/tmpr6v4grpp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpr6v4grpp.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $r = [];\n    $t = str_split($txt);\n \
    \   $i = 0;\n    foreach ($t as $c) {\n        if (preg_match('/[a-z]/', $c))\
    \ {\n            $r[$i] .= $c;\n        } else {\n            $i++;\n        }\n\
    \    }\n    if (count($r) === 1) {\n        $i = 0;\n        foreach ($t as $c)\
    \ {\n            if (preg_match('/[A-Z]/', $c)) {\n                $r[$i] .= $c;\n\
    \            } else {\n                $i++;\n            }\n        }\n    }\n\
    \    if (count($r) === 1) {\n        $i = 0;\n        foreach ($t as $c) {\n \
    \           if (preg_match('/[!,.\\s]/', $c)) {\n                $r[$i] .= $c;\n\
    \            } else {\n                $i++;\n            }\n        }\n    }\n\
    \    if (count($r) === 1) {\n        $i = 0;\n        foreach ($t as $c) {\n \
    \           if (preg_match('/[0-9]/', $c)) {\n                $r[$i] .= $c;\n\
    \            } else {\n                $i++;\n            }\n        }\n    }\n\
    \    if (count($r) === 1) {\n        $i = 0;\n        foreach ($t as $c) {\n \
    \           if (preg_match('/[=\\+\\-\\*\\/\\^\\%]/', $c)) {\n               \
    \ $r[$i] .= $c;\n            } else {\n                $i++;\n            }\n\
    \        }\n    }\n    if (count($r) === 1) {\n        $i = 0;\n        foreach\
    \ ($t as $c) {\n            if (preg_match('/[()]/', $c)) {\n                $r[$i]\
    \ .= $c;\n            } else {\n                $i++;\n            }\n       \
    \ }\n    }\n    if (count($\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps7jvcghi.php on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $cnt = 0;\n   \
    \     for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 === 0) {\n\
    \                $cnt++;\n            }\n        }\n        return $cnt;\n   \
    \ }\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\n\
    echo \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpche71u0a.php:43\nStack trace:\n#0 /tmp/tmpche71u0a.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpche71u0a.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') === false && strpos($txt,\
    \ ',') === false) {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($txt); $i++)\
    \ {\n\t\t\tif (ord($txt[$i]) % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\
    \treturn $count;\n\t} elseif (strpos($txt, ' ') === false) {\n\t\treturn explode(',',\
    \ $txt);\n\t} else {\n\t\treturn explode(' ', $txt);\n\t}\n}\necho implode('<br>',\
    \ split_words('Hello world!'));\necho '<br>';\necho implode('<br>', split_words('Hello,world!'));\n\
    echo '<br>';\necho split_words('abcdef');\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Hello<br>world!<br>Hello<br>world!<br>3\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpp1uce1zi.php:39\nStack trace:\n#0 /tmp/tmpp1uce1zi.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpp1uce1zi.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  }\n  if(strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  }\n  $arr = str_split($txt);\n  $odds = [];\n  foreach($arr as $char)\
    \ {\n    if((ord($char) % 2) === 1) {\n      $odds[] = $char;\n    }\n  }\n  return\
    \ count($odds);\n}\necho split_words(\"Hello world!\") . PHP_EOL;\necho split_words(\"\
    Hello,world!\") . PHP_EOL;\necho split_words(\"abcdef\") . PHP_EOL;\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtf6p5k5.php:39\n\
    Stack trace:\n#0 /tmp/tmpxtf6p5k5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxtf6p5k5.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $last_space = 0;\n \
    \   $last_comma = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if\
    \ (substr($txt, $i, 1) == ' ') {\n            $result[] = substr($txt, $last_space,\
    \ $i - $last_space);\n            $last_space = $i + 1;\n        } else if (substr($txt,\
    \ $i, 1) == ',') {\n            $result[] = substr($txt, $last_comma, $i - $last_comma);\n\
    \            $last_comma = $i + 1;\n        }\n    }\n    if (empty($result))\
    \ {\n        $result = substr_count($txt, 'a') + substr_count($txt, 'c') + substr_count($txt,\
    \ 'e') + substr_count($txt, 'g') + substr_count($txt, 'i') + substr_count($txt,\
    \ 'k') + substr_count($txt, 'm') + substr_count($txt, 'o') + substr_count($txt,\
    \ 'q') + substr_count($txt, 's') + substr_count($txt, 'u') + substr_count($txt,\
    \ 'w') + substr_count($txt, 'y');\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ofsiekt.php:32\n\
    Stack trace:\n#0 /tmp/tmp9ofsiekt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9ofsiekt.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $split_word = explode(' ', $txt);\n   \
    \ if (count($split_word) > 1) {\n        return $split_word;\n    } else {\n \
    \       $split_comma = explode(',', $txt);\n        if (count($split_comma) >\
    \ 1) {\n            return $split_comma;\n        } else {\n            $split_lower_case\
    \ = count(preg_grep('/[a-z]/', str_split($txt), PREG_GREP_INVERT));\n        \
    \    return $split_lower_case;\n        }\n    }\n}\necho split_words(\"abcdef\"\
    ) . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho split_words(\"\
    Hello world!\") . '<br>';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0<br>Array<br>Array<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuyxgpe69.php:36\nStack trace:\n#0 /tmp/tmpuyxgpe69.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuyxgpe69.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    }\n\n    if(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n\n    $chars = str_split($txt);\n\
    \    $count = 0;\n    foreach($chars as $char) {\n        if(ord($char) % 2 ==\
    \ 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho\
    \ split_words(\"Hello world!\");\necho \"\\n\";\necho split_words(\"Hello,world!\"\
    );\necho \"\\n\";\necho split_words(\"abcdef\");\necho \"\\n\";\necho split_words(\"\
    \");\necho \"\\n\";\necho split_words(\"\");\necho \"\\n\";\necho split_words(\"\
    Hello,world!abcdef\");\necho \"\\n\";\necho split_words(\"abcdef,Hello world!\"\
    );\necho \"\\n\";\necho split_words(\"abcdef,Hello world!a\");\necho \"\\n\";\n\
    echo split_words(\"abcdef,Hello world!b\");\necho \"\\n\";\necho split_words(\"\
    abcdef,Hello world!c\");\necho \"\\n\";\necho split_words(\"abcdef,Hello world!d\"\
    );\necho \"\\n\";\necho split_words(\"abcdef,Hello world!e\");\necho \"\\n\";\n\
    echo split_words(\"abcdef,Hello world!f\");\necho \"\\n\";\necho split_words(\"\
    abcdef,Hello world!g\");\necho \"\\n\";\necho split_words(\"abcdef,Hello world!h\"\
    );\necho \"\\n\";\necho split_words(\"abcdef,Hello world!i\");\necho \"\\n\";\n\
    echo split_words(\"abcdef,Hello world!j\");\necho \"\\n\";\necho split_words(\"\
    abcdef,Hello world!k\");\necho \"\\n\";\necho split_words(\"abcdef,Hello world!l\"\
    );\necho \"\\n\";\necho split_words(\"abcdef,Hello world!m\");\necho \"\\n\";\n\
    echo split_words(\"abcdef,Hello world!n\");\necho \"\\n\";\necho split_words(\"\
    abcdef,Hello world!o\");\necho \"\\\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqo8pgf_i.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $result = array();\n    $strlen = strlen($txt);\n\
    \    for ($i = 0; $i < $strlen; $i++) {\n      if (ord($txt[$i]) % 2 !== 0) {\n\
    \        $result[] = $txt[$i];\n      }\n    }\n    return count($result);\n \
    \ }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiieqnua.php:36\n\
    Stack trace:\n#0 /tmp/tmppiieqnua.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppiieqnua.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$l = str_split(strtolower($txt));\n\t$p =\
    \ count(array_filter($l, function($k) { return ($k >= 0 && $k <= 25) && $k % 2\
    \ == 1; }));\n\treturn (!$p) ? (!strpos($txt, ' ') ? (!strpos($txt, ',') ? $p\
    \ : explode(',', $txt)) : explode(' ', $txt)) : $p;\n}\n\necho implode(', ', split_words('abcdef'))\
    \ . PHP_EOL;\necho implode(', ', split_words('Hello world!')) . PHP_EOL;\necho\
    \ implode(', ', split_words('Hello,world!')) . PHP_EOL;\necho split_words('abcdef')\
    \ . PHP_EOL;\necho split_words('Hello world!') . PHP_EOL;\necho split_words('Hello,world!')\
    \ . PHP_EOL;\necho PHP_EOL;\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php on line\
    \ 11\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpvwx15bpg.php on\
    \ line 15\n\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\nHello, world!\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric value encountered in /tmp/tmpvwx15bpg.php\
    \ on line 11\n\nWarning: A non-numeric val"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') === false && strpos($txt,\
    \ ',') === false) {\n        return countOddLowerCaseLetters($txt);\n    }\n \
    \   if (strpos($txt, ' ') === false) {\n        return explode(',', $txt);\n \
    \   }\n    return explode(' ', $txt);\n}\n\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countOddLowerCaseLetters()\
    \ in /tmp/tmpkn22nawx.php:11\nStack trace:\n#0 /tmp/tmpkn22nawx.php(20): split_words('abcdef')\n\
    #1 /tmp/tmpkn22nawx.php(28): candidate('abcdef')\n#2 /tmp/tmpkn22nawx.php(34):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpkn22nawx.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = preg_replace('/\\s+/', ' ', $txt);\n\
    \    $str = preg_split('/(\\,|\\s)/', $txt);\n    if (strpos($txt, ',') === false\
    \ && strpos($txt, ' ') === false) {\n        $odd = 0;\n        for ($i = 0; $i\
    \ < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2 != 0) {\n       \
    \         $odd++;\n            }\n        }\n        return $odd;\n    }\n   \
    \ return $str;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\necho\
    \ '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkdiqypdn.php:39\nStack trace:\n#0 /tmp/tmpkdiqypdn.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkdiqypdn.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $res = [];\n  if (strpos($txt, ' ') !== false)\
    \ {\n    $res = explode(' ', $txt);\n  } else if (strpos($txt, ',') !== false)\
    \ {\n    $res = explode(',', $txt);\n  } else {\n    $count = 0;\n    $letters\
    \ = range('a', 'z');\n    foreach ($letters as $key => $letter) {\n      if ($key\
    \ % 2 !== 0) {\n        $count += substr_count($txt, $letter);\n      }\n    }\n\
    \    $res = $count;\n  }\n  return $res;\n}\necho implode(', ', split_words('Hello\
    \ world!'));\necho '<br>';\necho implode(', ', split_words('Hello,world!'));\n\
    echo '<br>';\necho split_words('abcdef');\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Hello, world!<br>Hello, world!<br>3
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $txt = str_replace(\",\", \" \", $txt);\n\
    \  $txt = str_replace(\"!\", \" \", $txt);\n  $words = preg_split(\"/\\s+/\",\
    \ $txt);\n  if(count($words) > 1) {\n    return $words;\n  } else {\n    $letters\
    \ = str_split($txt);\n    $sum = 0;\n    foreach($letters as $letter) {\n    \
    \  $number = ord($letter) - 97;\n      if($number % 2 == 1) {\n        $sum++;\n\
    \      }\n    }\n    return $sum;\n  }\n}\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0lp8tyxj.php:32\n\
    Stack trace:\n#0 /tmp/tmp0lp8tyxj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0lp8tyxj.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if (ord($txt[$i]) % 2 != 0) {\n        $count++;\n      }\n \
    \   }\n    return $count;\n  }\n}\necho \"<pre>\";\nvar_dump(split_words(\"Hello\
    \ world!\"));\nvar_dump(split_words(\"Hello,world!\"));\nvar_dump(split_words(\"\
    abcdef\"));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"\
    world!\"\n}\narray(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6)\
    \ \"world!\"\n}\nint(3)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdev0u1wr.php:39\nStack trace:\n#0 /tmp/tmpdev0u1wr.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdev0u1wr.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $i = 0;\n    for ($x = 0;\
    \ $x < strlen($txt); $x++) {\n        if (ord($txt[$x]) % 2 == 1) {\n        \
    \    $i++;\n        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5lcoatz8.php:35\n\
    Stack trace:\n#0 /tmp/tmp5lcoatz8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5lcoatz8.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    }\n\n    if(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n\n    return substr_count($txt,\
    \ 'b') + substr_count($txt, 'd') + substr_count($txt, 'f') + substr_count($txt,\
    \ 'h') + substr_count($txt, 'j') + substr_count($txt, 'l') + substr_count($txt,\
    \ 'n') + substr_count($txt, 'p') + substr_count($txt, 'r') + substr_count($txt,\
    \ 't') + substr_count($txt, 'v') + substr_count($txt, 'x') + substr_count($txt,\
    \ 'z');\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $list = str_split($txt);\n    $len = strlen($txt);\n\
    \    $result = [];\n    $str = \"\";\n    for ($i = 0; $i < $len; $i++) {\n  \
    \      if ($list[$i] == \" \" || $list[$i] == \",\") {\n            if ($str !=\
    \ \"\") {\n                array_push($result, $str);\n                $str =\
    \ \"\";\n            }\n        } else {\n            $str .= $list[$i];\n   \
    \     }\n    }\n    if ($str != \"\") {\n        array_push($result, $str);\n\
    \    }\n    if (count($result) == 0) {\n        $count = 0;\n        for ($i =\
    \ 0; $i < $len; $i++) {\n            if (ord($list[$i]) % 2 == 1) {\n        \
    \        $count++;\n            }\n        }\n        return $count;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7s0s5bj.php:46\n\
    Stack trace:\n#0 /tmp/tmps7s0s5bj.php(54): test()\n#1 {main}\n  thrown in /tmp/tmps7s0s5bj.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $split_on_comma = explode(\",\", $txt);\n\
    \  $split_on_space = explode(\" \", $txt);\n  $split_on_no_char = str_split($txt);\n\
    \  $ordinal_of_no_char = ord($txt);\n  $odd_ordinal_of_no_char = [];\n  $result\
    \ = [];\n  if (count($split_on_comma) === 2) {\n    $result = $split_on_comma;\n\
    \  } else if (count($split_on_space) === 2) {\n    $result = $split_on_space;\n\
    \  } else {\n    foreach ($split_on_no_char as $char) {\n      $ordinal_of_char\
    \ = ord($char);\n      if ($ordinal_of_char % 2 === 1) {\n        array_push($odd_ordinal_of_no_char,\
    \ $ordinal_of_char);\n      }\n    }\n    $result = count($odd_ordinal_of_no_char);\n\
    \  }\n  echo print_r($result, true) . PHP_EOL;\n}\n\n$txt = \"Hello world!\";\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => Hello\n    [1] => world!\n)\n\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpchstqny9.php:38\nStack trace:\n#0 /tmp/tmpchstqny9.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpchstqny9.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $lowercase = preg_match(\"/[a-z]/\", $txt);\n\
    \  $uppercase = preg_match(\"/[A-Z]/\", $txt);\n  $numbers = preg_match(\"/[0-9]/\"\
    , $txt);\n  $whiteSpace = preg_match(\"/\\s/\", $txt);\n  $comma = preg_match(\"\
    /,/\", $txt);\n  $count = 0;\n  $split = [];\n  if ($whiteSpace == 0 && $comma\
    \ == 0) {\n    $split = str_split($txt);\n    for ($i = 0; $i < count($split);\
    \ $i++) {\n      if (ord($split[$i]) % 2 != 0) {\n        $count++;\n      }\n\
    \    }\n    return $count;\n  } else if ($whiteSpace == 0 && $comma != 0) {\n\
    \    $split = preg_split(\"/,/\", $txt);\n    return $split;\n  } else if ($whiteSpace\
    \ != 0 && $comma == 0) {\n    $split = preg_split(\"/\\s/\", $txt);\n    return\
    \ $split;\n  }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5byr0my.php:41\n\
    Stack trace:\n#0 /tmp/tmpb5byr0my.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpb5byr0my.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = preg_split('/[\\s,]+/', $txt);\n\
    \    if(count($result) == 1) {\n        $txt = str_split($txt);\n        $oddOrderAlpha\
    \ = array();\n        foreach($txt as $key => $value) {\n            if($key %\
    \ 2 == 0) {\n                array_push($oddOrderAlpha, $value);\n           \
    \ }\n        }\n        return count($oddOrderAlpha);\n    } else {\n        return\
    \ $result;\n    }\n}\necho \"2. Given a string of words, return a list of words\
    \ split on whitespace, if no whitespaces exists in the text you should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\\\
    n\";\necho \"split_words('Hello world!')\\n\";\nprint_r(split_words('Hello world!'));\n\
    echo \"split_words('Hello,world!')\\n\";\nprint_r(split_words('Hello,world!'));\n\
    echo \"split_words('abcdef')\\n\";\nprint_r(split_words('abcdef'));\necho \"split_words('abcde')\\\
    n\";\nprint_r(split_words('abcde'));\necho \"split_words('abcdefg')\\n\";\nprint_r(split_words('abcdefg'));\n\
    echo \"split_words('abcdefgh')\\n\";\nprint_r(split_words('abcdefgh'));\necho\
    \ \"split_words('abcdefghi')\\n\";\nprint_r(split_words('abcdefghi'));\necho \"\
    split_words('abcdefghij')\\n\";\nprint_r(split_words('abcdefghij'));\necho \"\
    split_words('abcdefghijk')\\n\";\nprint_r(split_words('abcdefghijk'));\necho \"\
    split_words('abcdefghijkl')\\n\";\nprint_r(split_words('abcdefghijkl'));\necho\
    \ \"split_words('abcdefghijklm')\\n\";\nprint\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyz2fcm3s.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $str = preg_replace('/[^a-z]/i', '', $txt);\n\
    \  if($str == '') {\n    $arr = explode(',', $txt);\n    if($arr[0] == $txt) {\n\
    \      $arr = str_split($txt);\n      return count(array_filter($arr, function($v,\
    \ $k) {\n        return $k % 2;\n      }, ARRAY_FILTER_USE_BOTH));\n    }\n  \
    \  return $arr;\n  }\n  return preg_split('/\\s+/', $txt);\n}\necho '<pre>';\n\
    print_r(split_words(\"Hello world!\"));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpucuaoz1e.php:32\nStack trace:\n\
    #0 /tmp/tmpucuaoz1e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpucuaoz1e.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $txtArray = [];\n    for ($i = 0; $i <\
    \ strlen($txt); $i++) {\n      $str = strtolower($txt[$i]);\n      $ord = ord($str);\n\
    \      if ($ord % 2 === 1) {\n        $txtArray[] = $str;\n      }\n    }\n  \
    \  return count($txtArray);\n  }\n}\necho split_words('abcdef').PHP_EOL;\necho\
    \ split_words('Hello world!').PHP_EOL;\necho split_words('Hello,world!').PHP_EOL;\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "3\nArray\nArray\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps40h_mob.php:39\n\
    Stack trace:\n#0 /tmp/tmps40h_mob.php(44): test()\n#1 {main}\n  thrown in /tmp/tmps40h_mob.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $res = '';\n    if(strpos($txt, ' ') !==\
    \ false) {\n        $res = explode(' ', $txt);\n    } elseif(strpos($txt, ',')\
    \ !== false) {\n        $res = explode(',', $txt);\n    } else {\n        $oddCount\
    \ = 0;\n        for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i])\
    \ % 2 === 1) {\n                $oddCount++;\n            }\n        }\n     \
    \   $res = $oddCount;\n    }\n    return $res;\n}\necho split_words(\"Hello world!\"\
    );\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"<br>\";\necho\
    \ split_words(\"abcdef\");\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6rsautx.php:41\n\
    Stack trace:\n#0 /tmp/tmpn6rsautx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpn6rsautx.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(preg_match('/\\s/', $txt)){\n      \
    \  return explode(' ', $txt);\n    }\n    if(preg_match('/,/', $txt)){\n     \
    \   return explode(',', $txt);\n    }\n    preg_match_all('/[a-z]/', $txt, $matches);\n\
    \    $count = 0;\n    foreach($matches[0] as $match){\n        if(ord($match)\
    \ % 2 != 0){\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo split_words(\"abcdef\");\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpft6jfvp6.php:36\n\
    Stack trace:\n#0 /tmp/tmpft6jfvp6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpft6jfvp6.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>3</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dak77o_.php:37\n\
    Stack trace:\n#0 /tmp/tmp_dak77o_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_dak77o_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $temp = $txt;\n    $temp = preg_replace('/\\\
    s+/', '', $temp);\n    if ($temp === $txt) {\n        $temp = preg_replace('/[,]/',\
    \ '', $temp);\n        if ($temp === $txt) {\n            $temp = 0;\n       \
    \     for ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i])\
    \ % 2 == 1) {\n                    $temp++;\n                }\n            }\n\
    \            return $temp;\n        }\n    }\n    return explode(' ', $txt);\n\
    }\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\";\n\
    echo \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello,world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpwgmkxrf1.php:41\nStack trace:\n#0 /tmp/tmpwgmkxrf1.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwgmkxrf1.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$pattern = '/[^a-zA-Z]/';\n\t$pattern2 =\
    \ '/[^a-z]/';\n\tif (preg_match($pattern, $txt)) {\n\t\t$pattern = '/[a-z]/';\n\
    \t\tpreg_match_all($pattern, $txt, $matches);\n\t\t$txt = implode('', $matches[0]);\n\
    \t}\n\tif (preg_match($pattern2, $txt)) {\n\t\t$pattern = '/[A-Z]/';\n\t\tpreg_match_all($pattern,\
    \ $txt, $matches);\n\t\t$txt = implode('', $matches[0]);\n\t}\n\t$arr = str_split($txt);\n\
    \t$result = [];\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($i % 2 == 0)\
    \ {\n\t\t\tarray_push($result, $arr[$i]);\n\t\t}\n\t}\n\tif (count($result) ==\
    \ 0) {\n\t\treturn count($arr);\n\t}\n\treturn $result;\n}\n\necho implode(',\
    \ ', split_words('abcdef'));\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "a, c, e\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02fgalyz.php:41\n\
    Stack trace:\n#0 /tmp/tmp02fgalyz.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp02fgalyz.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$s = preg_split('/\\s|,/', $txt);\n\tif (count($s)\
    \ > 1) return $s;\n\tif (count($s) == 1) {\n\t\t$count = 0;\n\t\tfor ($i = 0;\
    \ $i < strlen($txt); $i++) {\n\t\t\tif ($i % 2 == 0 && strtolower($txt[$i]) ==\
    \ $txt[$i]) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n}\n\
    \necho split_words(\"Hello world!\") . \"\\n\";\necho split_words(\"Hello,world!\"\
    ) . \"\\n\";\necho split_words(\"abcdef\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgwak2q8f.php:33\n\
    Stack trace:\n#0 /tmp/tmpgwak2q8f.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgwak2q8f.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$txt = str_replace(\",\", \" \", $txt);\n\
    \t$ret = array();\n\t$txt = explode(\" \", $txt);\n\tforeach ($txt as $word) {\n\
    \t\tif (!empty($word)) {\n\t\t\t$ret[] = $word;\n\t\t}\n\t}\n\treturn empty($ret)\
    \ ? substr_count($txt[0], \"a\") : $ret;\n}\necho \"<pre>\";\nprint_r(split_words(\"\
    hills,of,california\"));\necho \"</pre>\";\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hills\n    [1] => of\n    [2] => california\n\
    )\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb23vplqr.php:30\n\
    Stack trace:\n#0 /tmp/tmpb23vplqr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb23vplqr.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif(ctype_alnum($txt)) {\n\t\tif (ctype_alpha($txt))\
    \ {\n\t\t\t$sum = 0;\n\t\t\tfor ($i=0; $i < strlen($txt); $i++) { \n\t\t\t\tif\
    \ (ord($txt[$i]) % 2 != 0) {\n\t\t\t\t\t$sum += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\
    return $sum;\n\t\t} else {\n\t\t\treturn $txt;\n\t\t}\n\t} else {\n\t\t$arr =\
    \ explode(' ', $txt);\n\t\treturn $arr;\n\t}\n}\necho split_words(\"Hello world!\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpom4gp2vd.php:34\n\
    Stack trace:\n#0 /tmp/tmpom4gp2vd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpom4gp2vd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $text = \"\";\n    if (strpos($txt, \"\
    \ \") !== false) {\n        $text = explode(\" \", $txt);\n    } elseif (strpos($txt,\
    \ \",\") !== false) {\n        $text = explode(\",\", $txt);\n    } else {\n \
    \       $text = count(array_filter(array_map(function ($e) {\n            return\
    \ ord($e) % 2 === 1;\n        }, str_split($txt))));\n    }\n    return $text;\n\
    }\n\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8wkhotrd.php:44\nStack trace:\n#0 /tmp/tmp8wkhotrd.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8wkhotrd.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') == true) {\n    \
    \    return $split = explode(' ', $txt);\n    } elseif (strpos($txt, ',') == true)\
    \ {\n        return $split = explode(',', $txt);\n    } else {\n        $split\
    \ = array();\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ ($i % 2 == 0) {\n                array_push($split, $txt[$i]);\n           \
    \ }\n        }\n        return count($split);\n    }\n}\necho split_words(\"Hello\
    \ world!\") . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho split_words(\"\
    abcdef\") . '<br>';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp6640a82u.php:38\nStack trace:\n#0 /tmp/tmp6640a82u.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6640a82u.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = preg_split('/\\s+/', $txt);\n  \
    \  if (sizeof($arr) > 1) return $arr;\n    $arr = preg_split('/,/', $txt);\n \
    \   if (sizeof($arr) > 1) return $arr;\n    $odds = 0;\n    for ($i = 0; $i <\
    \ strlen($txt); $i++) {\n        if ((ord($txt[$i]) - ord('a')) % 2 == 1) $odds++;\n\
    \    }\n    return $odds;\n}\n\necho split_words(\"Hello world!\") . \"\\n\";\n\
    echo split_words(\"Hello,world!\") . \"\\n\";\necho split_words(\"abcdef\") .\
    \ \"\\n\";\necho split_words(\"abcdef,ghi jkl!\") . \"\\n\";\necho split_words(\"\
    abcde,fghi,jk,lmnop\") . \"\\n\";\necho split_words(\"abcde,fghi,jk,lmn\") . \"\
    \\n\";\necho split_words(\"abcde,fghi,jk,lmnopqrstuv\") . \"\\n\";\necho split_words(\"\
    abcde,fghi,jk,lmnopqrst\") . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n3\nArray\nArray\nArray\nArray\nArray\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) return explode('\
    \ ', $txt);\n  if (strpos($txt, ',') !== false) return explode(',', $txt);\n \
    \ return strlen(preg_replace('/[^a-z]/i', '', $txt)) / 2;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi950sj9e.php:24\n\
    Stack trace:\n#0 /tmp/tmpi950sj9e.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi950sj9e.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n    $result\
    \ = [];\n    if (count($words) >= 2) {\n        foreach ($words as $word) {\n\
    \            if ($word !== \"\") {\n                array_push($result, $word);\n\
    \            }\n        }\n        return $result;\n    } else {\n        $words\
    \ = explode(\",\", $txt);\n        if (count($words) >= 2) {\n            foreach\
    \ ($words as $word) {\n                if ($word !== \"\") {\n               \
    \     array_push($result, $word);\n                }\n            }\n        \
    \    return $result;\n        } else {\n            $odds = [];\n            for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i]) % 2 !==\
    \ 0) {\n                    array_push($odds, $txt[$i]);\n                }\n\
    \            }\n            return count($odds);\n        }\n    }\n}\necho split_words(\"\
    Hello world!\");\necho split_words(\"Hello,world!\");\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "ArrayArray3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuhr4ae3.php:52\n\
    Stack trace:\n#0 /tmp/tmppuhr4ae3.php(57): test()\n#1 {main}\n  thrown in /tmp/tmppuhr4ae3.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n   $words = explode(\" \", $txt);\n   if (sizeof($words)\
    \ == 1) {\n      $words = explode(\",\", $txt);\n      if (sizeof($words) == 1)\
    \ {\n         return count(array_filter(range(0, 25), function($i) use ($txt)\
    \ {\n            return strpos($txt, chr($i + 97)) % 2 == 1;\n         }));\n\
    \      }\n   }\n   return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfulwczwy.php:32\n\
    Stack trace:\n#0 /tmp/tmpfulwczwy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfulwczwy.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $reg_ex = \"/\\s/\";\n    $result = preg_split($reg_ex,\
    \ $txt);\n    if (count($result) > 1) {\n        return $result;\n    } else {\n\
    \        $reg_ex = \"/,/\";\n        $result = preg_split($reg_ex, $txt);\n  \
    \      if (count($result) > 1) {\n            return $result;\n        } else\
    \ {\n            $num_odd = 0;\n            $len = strlen($txt);\n           \
    \ for ($i = 0; $i < $len; $i++) {\n                $ascii = ord($txt[$i]);\n \
    \               if ($ascii % 2 != 0) {\n                    $num_odd++;\n    \
    \            }\n            }\n            return $num_odd;\n        }\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgrvl3zq.php:43\n\
    Stack trace:\n#0 /tmp/tmpjgrvl3zq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjgrvl3zq.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $split_word_num = 0;\n    $txt_split =\
    \ array();\n    if(preg_match('/\\s/', $txt)) {\n        $txt_split = preg_split('/\\\
    s/', $txt);\n    } else if(preg_match('/,/', $txt)) {\n        $txt_split = preg_split('/,/',\
    \ $txt);\n    } else {\n        for($i = 0; $i < strlen($txt); $i++) {\n     \
    \       if(ord($txt[$i]) % 2 === 1) {\n                $split_word_num++;\n  \
    \          }\n        }\n    }\n    return empty($txt_split) ? $split_word_num\
    \ : $txt_split;\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpp5ev30qx.php:44\nStack trace:\n#0 /tmp/tmpp5ev30qx.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpp5ev30qx.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false) {\n\t\t\
    return explode(' ', $txt);\n\t}\n\tif (strpos($txt, ',') !== false) {\n\t\treturn\
    \ explode(',', $txt);\n\t}\n\t$odd = 0;\n\tfor ($i = 0; $i < strlen($txt); $i++)\
    \ {\n\t\tif (ord($txt[$i]) % 2 == 1) {\n\t\t\t$odd++;\n\t\t}\n\t}\n\treturn $odd;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc00yalob.php:35\n\
    Stack trace:\n#0 /tmp/tmpc00yalob.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpc00yalob.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 != 0) {\n      \
    \          $arr[] = ord($txt[$i]);\n            }\n        }\n    }\n    return\
    \ $arr;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(split_words(\"Hello,world!\"));\necho '</pre>';\necho '<pre>';\n\
    print_r(split_words(\"abcdef\"));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n(\n    [0] => 98\n\
    \    [1] => 100\n    [2] => 102\n)\n</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplst319d7.php:42\nStack trace:\n#0 /tmp/tmplst319d7.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplst319d7.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       $arr = str_split($txt);\n        foreach ($arr as $key => $val) {\n  \
    \          if ($key % 2 === 0) {\n                $count++;\n            }\n \
    \       }\n        return $count;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9t9vya8.php:36\n\
    Stack trace:\n#0 /tmp/tmpg9t9vya8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg9t9vya8.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $num = 0;\n    $x = explode(' ', $txt);\n\
    \    if (count($x) > 1) {\n        return $x;\n    } else {\n        $x = explode(',',\
    \ $txt);\n        if (count($x) > 1) {\n            return $x;\n        } else\
    \ {\n            for ($i = 0; $i < count($txt); $i++) {\n                if ($i\
    \ % 2 == 0) {\n                    $num++;\n                }\n            }\n\
    \            return $num;\n        }\n    }\n}\necho split_words(\"Hello world!\"\
    ) . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho split_words(\"\
    abcdef\") . '<br>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>\nWarning: count(): Parameter must be an array or an\
    \ object that implements Countable in /tmp/tmpc7jbp7ab.php on line 19\n\nWarning:\
    \ count(): Parameter must be an array or an object that implements Countable in\
    \ /tmp/tmpc7jbp7ab.php on line 19\n1<br>\nWarning: count(): Parameter must be\
    \ an array or an object that implements Countable in /tmp/tmpc7jbp7ab.php on line\
    \ 19\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpc7jbp7ab.php on line 19\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpc7jbp7ab.php:40\nStack trace:\n#0 /tmp/tmpc7jbp7ab.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpc7jbp7ab.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $arr = array();\n  $ind = 0;\n  $l = strlen($txt);\n\
    \  for ($i = 0; $i < $l; $i++) {\n    if ((!ctype_alpha($txt[$i]) && !ctype_digit($txt[$i]))\
    \ && $i != 0) {\n      if (ctype_alpha($txt[$i - 1]) || ctype_digit($txt[$i -\
    \ 1])) {\n        $ind++;\n      }\n    } else if ($i == $l - 1) {\n      $ind++;\n\
    \    }\n    $arr[$ind] .= $txt[$i];\n  }\n  if (count($arr) == 1) {\n    $chars\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $odd_chars = array();\n    for ($i =\
    \ 0; $i < strlen($chars); $i += 2) {\n      $odd_chars[] = $chars[$i];\n    }\n\
    \    $sum = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n      if (in_array($txt[$i],\
    \ $odd_chars)) {\n        $sum++;\n      }\n    }\n    return $sum;\n  }\n  return\
    \ $arr;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsvdqiwq.php:44\n\
    Stack trace:\n#0 /tmp/tmpvsvdqiwq.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvsvdqiwq.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $odd_letters = 0;\n    for ($i = 0; $i\
    \ < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 == 1) {\n           \
    \ $odd_letters++;\n        }\n    }\n    if (strpos($txt, \" \") == false && strpos($txt,\
    \ \",\") == false) {\n        return $odd_letters;\n    } elseif (strpos($txt,\
    \ \" \") == false) {\n        return explode(\",\", $txt);\n    } else {\n   \
    \     return explode(\" \", $txt);\n    }\n}\necho split_words(\"Hello world!\"\
    );\necho \"<br/>\";\necho split_words(\"Hello,world!\");\necho \"<br/>\";\necho\
    \ split_words(\"abcdef\");\necho \"<br/>\";\necho split_words(\"a\").\"<br/>\"\
    ;\necho split_words(\"a,b,c\").\"<br/>\";\necho split_words(\"a,b,c,d,e,f\").\"\
    <br/>\";\necho split_words(\"hello, world\").\"<br/>\";\necho split_words(\"hello,\
    \ world, how, are, you\").\"<br/>\";\necho split_words(\"welcome, to, epicodus\"\
    ).\"<br/>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br/>Array<br/>3<br/>1<br/>Array<br/>Array<br/>Array<br/>Array<br/>Array<br/>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp6rjd4txo.php:46\nStack\
    \ trace:\n#0 /tmp/tmp6rjd4txo.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp6rjd4txo.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif(strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  } else {\n    $count = 0;\n    for($i = 0; $i < strlen($txt); $i++)\
    \ {\n      if($i % 2 == 0 && strpos('aeiou', $txt[$i]) !== false) {\n        $count++;\n\
    \      }\n    }\n    return $count;\n  }\n}\necho split_words('Hello world!');\n\
    echo '<br>';\necho split_words('Hello,world!');\necho '<br>';\necho split_words('abcdef');\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_geuc1b.php:38\n\
    Stack trace:\n#0 /tmp/tmp4_geuc1b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4_geuc1b.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $txt = str_replace(['!', '.', '?', ','],\
    \ ' ', $txt);\n  $txt = str_replace(array(\"\\n\", \"\\r\"), '', $txt);\n  $txt\
    \ = str_replace('  ', ' ', $txt);\n  $txt = trim($txt);\n  if (strpos($txt, '\
    \ ') === false) {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n      if (ord($txt[$i]) % 2 !== 0) {\n        $count++;\n      }\n    }\n\
    \    return $count;\n  }\n  return explode(' ', $txt);\n}\n\necho '<pre>';\nprint_r(split_words(\"\
    Hello,world!\"));\necho '</pre>';\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world\n)\n</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpwxtj9b6o.php:35\nStack trace:\n\
    #0 /tmp/tmpwxtj9b6o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwxtj9b6o.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       $count_arr = [];\n        for ($i = 97; $i <= 122; $i++) {\n         \
    \   $count_arr[] = chr($i);\n        }\n        $arr = str_split($txt);\n    \
    \    foreach ($arr as $item) {\n            if (in_array($item, $count_arr)) {\n\
    \                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70cjce8a.php:38\n\
    Stack trace:\n#0 /tmp/tmp70cjce8a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp70cjce8a.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$split_words = [];\n\tif (strpos($txt, '\
    \ ') === false && strpos($txt, ',') === false) {\n\t\t$split_words = strlen($txt);\n\
    \t} elseif (strpos($txt, ' ') === false) {\n\t\t$split_words = explode(',', $txt);\n\
    \t} else {\n\t\t$split_words = explode(' ', $txt);\n\t}\n\treturn $split_words;\n\
    }\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\necho '</pre>';\necho\
    \ '<pre>';\nprint_r(split_words(\"Hello,world!\"));\necho '</pre>';\necho '<pre>';\n\
    print_r(split_words(\"abcdef\"));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>6</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpz8a_jbix.php:38\nStack trace:\n#0 /tmp/tmpz8a_jbix.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz8a_jbix.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $out = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if ($i % 2 == 0) {\n        $out++;\n      }\n    }\n    return\
    \ $out;\n  }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptanlretz.php:34\n\
    Stack trace:\n#0 /tmp/tmptanlretz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptanlretz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(preg_match(\"/ /\", $txt)) {\n    return\
    \ explode(\" \", $txt);\n  } else if(preg_match(\"/,/\", $txt)) {\n    return\
    \ explode(\",\", $txt);\n  } else {\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $alphabet = str_split($alphabet);\n    $count = 0;\n    for($i = 0; $i\
    \ < 26; $i += 2) {\n      if(strpos($txt, $alphabet[$i]) !== false) {\n      \
    \  $count++;\n      }\n    }\n    return $count;\n  }\n}\n\necho split_words(\"\
    Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"\
    <br>\";\necho split_words(\"abcdef\");\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe552t8ea.php:42\n\
    Stack trace:\n#0 /tmp/tmpe552t8ea.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpe552t8ea.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') === false) {\n  \
    \      if (strpos($txt, ',') === false) {\n            $count = 0;\n         \
    \   for ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i])\
    \ % 2 !== 0) {\n                    $count++;\n                }\n           \
    \ }\n            return $count;\n        } else {\n            return explode(',',\
    \ $txt);\n        }\n    } else {\n        return explode(' ', $txt);\n    }\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptnktm9bn.php:36\n\
    Stack trace:\n#0 /tmp/tmptnktm9bn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptnktm9bn.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$txt = preg_replace('/\\s*,\\s*/', ',', $txt);\n\
    \t$txt = preg_replace('/\\s*\\.\\s*/', '.', $txt);\n\t$txt = preg_replace('/\\\
    s*\\?\\s*/', '?', $txt);\n\t$txt = preg_replace('/\\s*!\\s*/', '!', $txt);\n\t\
    $txt = preg_replace('/\\s*\\(\\s*/', '(', $txt);\n\t$txt = preg_replace('/\\s*\\\
    )\\s*/', ')', $txt);\n\t$txt = preg_replace('/\\s*\\[\\s*/', '[', $txt);\n\t$txt\
    \ = preg_replace('/\\s*\\]\\s*/', ']', $txt);\n\t$txt = preg_replace('/\\s*\\\
    {\\s*/', '{', $txt);\n\t$txt = preg_replace('/\\s*\\}\\s*/', '}', $txt);\n\t$txt\
    \ = preg_replace('/\\s*\\|\\s*/', '|', $txt);\n\t$txt = preg_replace('/\\s*\\\\\
    \\s*/', '\\\\', $txt);\n\t$txt = preg_replace('/\\s*\\/\\s*/', '/', $txt);\n\t\
    $txt = preg_replace('/\\s*\\+\\s*/', '+', $txt);\n\t$txt = preg_replace('/\\s*\\\
    *\\s*/', '*', $txt);\n\t$txt = preg_replace('/\\s*\\=\\s*/', '=', $txt);\n\t$txt\
    \ = preg_replace('/\\s*\\-\\s*/', '-', $txt);\n\t$txt = preg_replace('/\\s*\\\
    :\\s*/', ':', $txt);\n\t$txt = preg_replace('/\\s*\\@\\s*/', '@', $txt);\n\t$txt\
    \ = preg_replace('/\\s*\\%\\s*/', '%', $txt);\n\t$txt = preg_\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsyc6d_6m.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$str = explode(' ', $txt);\n\t\n\tif(count($str)\
    \ > 1) {\n\t\treturn $str;\n\t} else {\n\t\t$str = explode(',', $txt);\n\t\tif(count($str)\
    \ > 1) {\n\t\t\treturn $str;\n\t\t} else {\n\t\t\t$str = str_split($txt);\n\t\t\
    \t$num = 0;\n\t\t\tfor($i = 0; $i < count($str); $i++) {\n\t\t\t\tif(ord($str[$i])\
    \ % 2 == 1) {\n\t\t\t\t\t$num++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $num;\n\t\t\
    }\n\t}\n}\n\necho split_words(\"Hello world!\");\necho split_words(\"Hello,world!\"\
    );\necho split_words(\"abcdef\");\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "ArrayArray3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslzxnd32.php:44\n\
    Stack trace:\n#0 /tmp/tmpslzxnd32.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpslzxnd32.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $word_ar=explode(\" \",$txt);\n  if(count($word_ar)==1){\n\
    \    $word_ar=explode(\",\",$txt);\n    if(count($word_ar)==1){\n      $ltr_count=0;\n\
    \      for($i=0;$i<strlen($txt);$i++){\n        if(ord($txt[$i])%2==1){\n    \
    \      $ltr_count++;\n        }\n      }\n      return $ltr_count;\n    }\n  }\n\
    \  return $word_ar;\n}\necho \"the input is : \\\"Hello world!\\\"<br>\";\necho\
    \ \"the output is : \";\nprint_r(split_words(\"Hello world!\"));\necho \"<br>---------------------------------<br>\"\
    ;\necho \"the input is : \\\"Hello,world!\\\"<br>\";\necho \"the output is : \"\
    ;\nprint_r(split_words(\"Hello,world!\"));\necho \"<br>---------------------------------<br>\"\
    ;\necho \"the input is : \\\"abcdef\\\"<br>\";\necho \"the output is : \";\nprint_r(split_words(\"\
    abcdef\"));\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "the input is : \"Hello world!\"<br>the output is : Array\n(\n    [0] =>\
    \ Hello\n    [1] => world!\n)\n<br>---------------------------------<br>the input\
    \ is : \"Hello,world!\"<br>the output is : Array\n(\n    [0] => Hello\n    [1]\
    \ => world!\n)\n<br>---------------------------------<br>the input is : \"abcdef\"\
    <br>the output is : 3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoawogy2b.php:46\n\
    Stack trace:\n#0 /tmp/tmpoawogy2b.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpoawogy2b.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (preg_match(\"#[\\s]#\", $txt)){\n\t\t\
    return preg_split(\"#[\\s]#\", $txt);\n\t} else if (preg_match(\"#[,]#\", $txt)){\n\
    \t\treturn preg_split(\"#[,]#\", $txt);\n\t} else {\n\t\treturn  count(array_filter(str_split($txt),\
    \ function($x){\n\t\t\treturn ord($x)%2==1;\n\t\t}));\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"\
    abcdef\"));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpbfgdj7nx.php:39\nStack trace:\n#0 /tmp/tmpbfgdj7nx.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbfgdj7nx.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $arr = preg_split('/[\\s,]+/', $txt);\n \
    \ if(count($arr) > 1) {\n    return $arr;\n  } else {\n    $count = 0;\n    $arr\
    \ = str_split($txt);\n    foreach($arr as $key => $v) {\n      if($key % 2 !==\
    \ 0) {\n        $count += 1;\n      }\n    }\n    return $count;\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5i1_9kl.php:31\n\
    Stack trace:\n#0 /tmp/tmpj5i1_9kl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj5i1_9kl.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $letters = str_split(strtolower($txt));\n\
    \  $odd = 0;\n  foreach ($letters as $letter) {\n    if (ord($letter) % 2 == 1)\
    \ $odd++;\n  }\n  if (count($letters) == $odd) return $odd;\n  if (strpos($txt,\
    \ ',') === false) return explode(' ', $txt);\n  return [strstr($txt, ',', true),\
    \ substr(strstr($txt, ','), 1)];\n}\necho implode(', ', split_words('Hello, world!'))\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Hello,  world!\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjhkrxfyv.php:27\n\
    Stack trace:\n#0 /tmp/tmpjhkrxfyv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjhkrxfyv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $arr = [];\n  $txt = trim($txt);\n  if (strpos($txt,\
    \ ' ') !== false) {\n    $arr = explode(' ', $txt);\n  } elseif (strpos($txt,\
    \ ',') !== false) {\n    $arr = explode(',', $txt);\n  } else {\n    $count =\
    \ 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n      if (ord($txt[$i]) % 2\
    \ == 1) {\n        $count++;\n      }\n    }\n    return $count;\n  }\n  return\
    \ $arr;\n}\nprint_r(split_words(\"Hello world!\") . PHP_EOL);\nprint_r(split_words(\"\
    Hello,world!\") . PHP_EOL);\nprint_r(split_words(\"abcdef\") . PHP_EOL);\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjcxbf1xj.php:40\n\
    Stack trace:\n#0 /tmp/tmpjcxbf1xj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjcxbf1xj.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) return explode('\
    \ ', $txt);\n  if (strpos($txt, ',') !== false) return explode(',', $txt);\n \
    \ $letters = 'abcdefghijklmnopqrstuvwxyz';\n  $odd = 0;\n  $txt = strtolower($txt);\n\
    \  for ($i = 0; $i < strlen($txt); $i++) {\n    if (strpos($letters, $txt[$i])\
    \ % 2 === 1) $odd++;\n  }\n  return $odd;\n}\necho \"<pre>split_words('Hello world!')\\\
    r\\n\";\nprint_r(split_words('Hello world!'));\necho \"</pre>\";\necho \"<pre>split_words('Hello,world!')\\\
    r\\n\";\nprint_r(split_words('Hello,world!'));\necho \"</pre>\";\necho \"<pre>split_words('abcdef')\\\
    r\\n\";\nprint_r(split_words('abcdef'));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>split_words('Hello world!')\nArray\n(\n    [0] => Hello\n    [1] =>\
    \ world!\n)\n</pre><pre>split_words('Hello,world!')\nArray\n(\n    [0] => Hello\n\
    \    [1] => world!\n)\n</pre><pre>split_words('abcdef')\n3</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp40lu8egs.php:40\nStack trace:\n\
    #0 /tmp/tmp40lu8egs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp40lu8egs.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $split = explode(\" \", $txt);\n    if\
    \ (count($split) < 2) {\n        $split = explode(\",\", $txt);\n        if (count($split)\
    \ < 2) {\n            $split = count_letters($txt);\n        }\n    }\n    return\
    \ $split;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_letters()\
    \ in /tmp/tmp52fukfzd.php:14\nStack trace:\n#0 /tmp/tmp52fukfzd.php(21): split_words('abcdef')\n\
    #1 /tmp/tmp52fukfzd.php(29): candidate('abcdef')\n#2 /tmp/tmp52fukfzd.php(35):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp52fukfzd.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif(strpos($txt, ' ') == true) {\n\t\treturn\
    \ explode(' ', $txt);\n\t} elseif(strpos($txt, ',') == true) {\n\t\treturn explode(',',\
    \ $txt);\n\t} else {\n\t\t$new_arr = str_split($txt);\n\t\t$number = 0;\n\t\t\
    for($i = 0; $i < count($new_arr); $i++) {\n\t\t\tif(ord($new_arr[$i]) % 2 !==\
    \ 0) {\n\t\t\t\t$number++;\n\t\t\t}\n\t\t}\n\t\treturn $number;\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpma8korgk.php:36\n\
    Stack trace:\n#0 /tmp/tmpma8korgk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpma8korgk.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n//     $arr = str_split($txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuj8zpq48.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $array = str_split($txt);\n    if (str_word_count($txt)\
    \ === 1) {\n        $oddLetters = [];\n        for ($i = 0; $i < count($array);\
    \ $i++) {\n            if (ord($array[$i]) % 2 != 0) {\n                array_push($oddLetters,\
    \ $array[$i]);\n            }\n        }\n        return count($oddLetters);\n\
    \    } else if (str_word_count($txt) > 1) {\n        return explode(\" \", $txt);\n\
    \    } else {\n        return explode(\",\", $txt);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfibzds8o.php:32\n\
    Stack trace:\n#0 /tmp/tmpfibzds8o.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfibzds8o.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $tot = 0;\n    for ($i = 0;\
    \ $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 == 1) {\n        \
    \    $tot++;\n        }\n    }\n    return $tot;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprzvp44ac.php:35\n\
    Stack trace:\n#0 /tmp/tmprzvp44ac.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprzvp44ac.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strstr($txt, ' ')) {\n    return explode('\
    \ ', $txt);\n  } elseif (strstr($txt, ',')) {\n    return explode(',', $txt);\n\
    \  } else {\n    return strlen(preg_replace('/[a-z]/', '', $txt));\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy45iqbz0.php:27\n\
    Stack trace:\n#0 /tmp/tmpy45iqbz0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpy45iqbz0.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$whitespace = preg_match(\"/\\s/\", $txt);\n\
    \t$comma = preg_match(\"/,/\", $txt);\n\tif ($whitespace != 0) {\n\t\t$result\
    \ = preg_split(\"/\\s/\", $txt);\n\t} elseif ($comma != 0) {\n\t\t$result = preg_split(\"\
    /,/\", $txt);\n\t} else {\n\t\t$result = 0;\n\t\tfor ($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t\t$result++;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $result;\n}\n\necho \"<pre>\";\nprint_r(split_words(\"Hello\
    \ world!\"));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"qwerty123\"));\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"strawberries and bananas\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"this is a sentence\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"\"));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"coconut\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(split_words(\"apple,pear,kiwi\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(split_words(\"apple, pear, kiwi\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(split_words(\"nothing\"));\necho \"</pre>\";\n\n\
    echo \"<pre>\";\nprint_r(split_words(\"abcd efghi\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpur47jmlu.php on line 78\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n    if(!empty($arr[1]))\
    \ {\n        return $arr;\n    } else {\n        $arr = explode(\",\", $txt);\n\
    \        if(!empty($arr[1])) {\n            return $arr;\n        } else {\n \
    \           $sum = 0;\n            for($i = 0; $i < strlen($txt); $i++) {\n  \
    \              if($i % 2 == 0) {\n                    $sum++;\n              \
    \  }\n            }\n            return $sum;\n        }\n    }\n}\necho \"<pre>\"\
    ;\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>3</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwbv8fp1.php:42\n\
    Stack trace:\n#0 /tmp/tmpzwbv8fp1.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpzwbv8fp1.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $result = explode(\"\
    \ \", $txt);\n    if (count($result) == 1) {\n        $result = explode(\",\"\
    , $txt);\n        if (count($result) == 1) {\n            $result = 0;\n     \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n                if ($i % 2 ==\
    \ 0) {\n                    $result++;\n                }\n            }\n   \
    \     }\n    }\n    return $result;\n}\necho \"<pre>\";\nprint_r(split_words(\"\
    Hello world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpigjmka1i.php:44\nStack trace:\n#0 /tmp/tmpigjmka1i.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpigjmka1i.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $ret = [];\n    if (strpos($txt, ' ') ===\
    \ false) {\n        if (strpos($txt, ',') === false) {\n            $od = 0;\n\
    \            for ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i])\
    \ % 2 != 0) {\n                    $od++;\n                }\n            }\n\
    \            return $od;\n        } else {\n            $ret = explode(',', $txt);\n\
    \        }\n    } else {\n        $ret = explode(' ', $txt);\n    }\n    return\
    \ $ret;\n}\necho join(', ', split_words('Hello world!')) . '<br>';\necho join(',\
    \ ', split_words('Hello,world!')) . '<br>';\necho split_words('abcdef') . '<br>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Hello, world!<br>Hello, world!<br>3<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmphinb4522.php:41\nStack trace:\n#0 /tmp/tmphinb4522.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphinb4522.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') != false) {\n    \
    \    return explode(' ', $txt);\n    } else if(strpos($txt, ',') != false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $arr = str_split($txt);\n\
    \        $count = 0;\n        for($i = 0; $i < count($arr); $i++) {\n        \
    \    if(ord($arr[$i]) % 2 != 0) {\n                $count++;\n            }\n\
    \        }\n        return $count;\n    }\n}\necho '<pre>';\nprint_r(split_words(\"\
    Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp0ur0lq6u.php:44\nStack trace:\n#0 /tmp/tmp0ur0lq6u.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0ur0lq6u.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) return explode('\
    \ ', $txt);\n  if (strpos($txt, ',') !== false) return explode(',', $txt);\n \
    \ $count = 0;\n  for ($i = 0; $i < strlen($txt); $i++) {\n    if (ord($txt[$i])\
    \ % 2 == 1) $count++;\n  }\n  return $count;\n}\necho split_words(\"Hello world!\"\
    ) . \"<br>\";\necho split_words(\"Hello,world!\") . \"<br>\";\necho split_words(\"\
    abcdef\") . \"<br>\";\necho split_words(\"abcde\") . \"<br>\";\necho split_words(\"\
    abcdefg\") . \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\") . \"\
    <br>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>3<br>4<br>13<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpiz0idzft.php:34\nStack trace:\n#0 /tmp/tmpiz0idzft.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpiz0idzft.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  }\n  if (strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  }\n  $n = 0;\n  for ($i = 0; $i < strlen($txt); $i++) {\n    if (ord($txt[$i])\
    \ % 2 !== 0) {\n      $n++;\n    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfantcaux.php:35\n\
    Stack trace:\n#0 /tmp/tmpfantcaux.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfantcaux.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  }\n  if(strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  }\n  $num_odd_alphabet = 0;\n  $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  for($i = 0; $i < strlen($txt); $i++) {\n    if(ord($txt[$i]) % 2 != 0) {\n\
    \      $num_odd_alphabet++;\n    }\n  }\n  return $num_odd_alphabet;\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuof_2gqp.php:35\n\
    Stack trace:\n#0 /tmp/tmpuof_2gqp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuof_2gqp.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$arr = [];\n\t$arrSpace = explode(\" \",\
    \ $txt);\n\t$arrComma = explode(\",\", $txt);\n\t$arrLtr = str_split($txt);\n\t\
    \n\tif(count($arrSpace) > 1){\n\t\treturn $arrSpace;\n\t}elseif(count($arrComma)\
    \ > 1){\n\t\treturn $arrComma;\n\t}else{\n\t\t$arrFilter = array_filter($arrLtr,\
    \ function($letter){\n\t\t\treturn ord($letter) % 2 != 0;\n\t\t});\n\t\treturn\
    \ count($arrFilter);\n\t}\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpneuowvfv.php:36\n\
    Stack trace:\n#0 /tmp/tmpneuowvfv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpneuowvfv.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n    $new_arr\
    \ = [];\n    if(count($words) === 1) {\n        $words = explode(',', $txt);\n\
    \        if(count($words) === 1) {\n            foreach($words as $value) {\n\
    \                $new_arr[] = ord($value);\n            }\n            return\
    \ $new_arr;\n        }\n    }\n    return $words;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp253cv6vx.php:32\n\
    Stack trace:\n#0 /tmp/tmp253cv6vx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp253cv6vx.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       $letters = str_split($txt);\n        foreach ($letters as $letter) {\n\
    \            if (ord($letter) % 2 != 0) {\n                $count++;\n       \
    \     }\n        }\n        return $count;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon9v0quk.php:35\n\
    Stack trace:\n#0 /tmp/tmpon9v0quk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpon9v0quk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    // TODO:\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_h9q_wec.php:18\n\
    Stack trace:\n#0 /tmp/tmp_h9q_wec.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_h9q_wec.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $res = [];\n    $arr = str_split($txt);\n\
    \    foreach ($arr as $key => $val) {\n        if ($val == ' ') {\n          \
    \  $res[] = implode('', array_slice($arr, 0, $key));\n            $res[] = implode('',\
    \ array_slice($arr, $key + 1));\n            break;\n        }\n        if ($val\
    \ == ',') {\n            $res[] = implode('', array_slice($arr, 0, $key));\n \
    \           $res[] = implode('', array_slice($arr, $key + 1));\n            break;\n\
    \        }\n    }\n    if (empty($res)) {\n        $count = 0;\n        foreach\
    \ ($arr as $val) {\n            if ((ord($val) - ord('a')) % 2 == 1) {\n     \
    \           $count++;\n            }\n        }\n        $res[] = $count;\n  \
    \  }\n    return $res;\n}\n\necho split_words(\"Hello world!\");\necho split_words(\"\
    Hello,world!\");\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "ArrayArrayArray\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4whvw1ea.php:47\n\
    Stack trace:\n#0 /tmp/tmp4whvw1ea.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp4whvw1ea.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(preg_match('/[^\\s,]+,/', $txt)) {\n \
    \   $arr = explode(',', $txt);\n    return $arr;\n  } elseif(preg_match('/[^\\\
    s,]+/', $txt)) {\n    $count = preg_match_all('/[^\\s,]+/', $txt);\n    return\
    \ $count;\n  }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4a6ajtp.php:23\n\
    Stack trace:\n#0 /tmp/tmp_4a6ajtp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_4a6ajtp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 !== 0) {\n    \
    \        $count++;\n        }\n    }\n    return $count;\n}\necho split_words(\"\
    Hello world!\") . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho\
    \ split_words(\"abcdef\") . '<br>';\necho split_words(\"abcdef,ghi jklmno\") .\
    \ '<br>';\necho split_words(\"abcdefghijklmno\") . '<br>';\necho split_words(\"\
    abcdefghijklmn,opqrstuvwxyz\") . '<br>';\necho split_words(\"123456789\") . '<br>';\n\
    echo split_words(\"123456789,abcdefghijklmnopqrstuvwxyz\") . '<br>';\necho split_words(\"\
    123456789,abcdefghijklmnopqrstuvwxyz, !\") . '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz,123456789\"\
    ) . '<br>';\necho split_words(\"\") . '<br>';\necho split_words(\"123456789,\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz,\") . '<br>';\necho\
    \ split_words(\"abcdefghijklmnopqrstuvwxyz,123456789,\") . '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuvwxyz,123456789,!\") . '<br>';\necho split_words(\"!\") .\
    \ '<br>';\necho split_words(\"123456789,!\") . '\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwgjkmn5b.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\treturn $txt . \"\\n\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4n0uzk2m.php:18\n\
    Stack trace:\n#0 /tmp/tmp4n0uzk2m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4n0uzk2m.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if(strpos($txt, ' ') !== false) return explode('\
    \ ', $txt);\n  if(strpos($txt, ',') !== false) return explode(',', $txt);\n  $chars\
    \ = str_split($txt);\n  $odds = [];\n  foreach($chars as $char) {\n    if(ord($char)\
    \ % 2 === 1) $odds[] = $char;\n  }\n  return count($odds);\n}\necho split_words(\"\
    abcdef\") . '<br>';\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"Hello world!, I am a string.\");\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "3<br>Array<br>Array<br>Array\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqdecjpjt.php:33\nStack trace:\n#0 /tmp/tmpqdecjpjt.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqdecjpjt.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $arr = explode(' ', $txt);\n    if (count($arr) < 2) {\n        $arr = [];\n\
    \        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $arr[] = $txt[$i];\n            }\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgj7wiwv.php:30\n\
    Stack trace:\n#0 /tmp/tmpfgj7wiwv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfgj7wiwv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$space = \" \";\n\t$comma = \",\";\n\tif\
    \ (strpos($txt, $space) !== false) {\n\t\treturn explode(\" \", $txt);\n\t} elseif\
    \ (strpos($txt, $comma) !== false) {\n\t\treturn explode(\",\", $txt);\n\t} else\
    \ {\n\t\t$chars = str_split($txt);\n\t\t$count = 0;\n\t\tforeach ($chars as $char)\
    \ {\n\t\t\tif (ord($char) % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\t\
    return $count;\n\t}\n}\necho split_words(\"Hello world!\");\necho \"<br>\";\n\
    echo split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\necho \"<br>\";\necho split_words(\"a,b,c,d,e,f\");\necho \"<br>\";\necho split_words(\"\
    b,a,c,d,e,f\");\necho \"<br>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>Array<br>Array<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpaavk_03i.php:47\nStack trace:\n#0 /tmp/tmpaavk_03i.php(52):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaavk_03i.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $res = [];\n    $tmp = explode(\" \", $txt);\n\
    \    if(count($tmp) == 1) {\n        $tmp = explode(\",\", $txt);\n        if(count($tmp)\
    \ == 1) {\n            $res = count(preg_grep(\"/(.)\\1/\", array_map(\"chr\"\
    , range(ord(\"a\"), ord(\"z\")))));\n        } else {\n            foreach($tmp\
    \ as $t) {\n                $res[] = $t;\n            }\n        }\n    } else\
    \ {\n        foreach($tmp as $t) {\n            $res[] = $t;\n        }\n    }\n\
    \    return $res;\n}\necho \"<pre>\";\nprint_r(split_words(\"aaaabbcde\"));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>0</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqh7l_s3x.php:40\n\
    Stack trace:\n#0 /tmp/tmpqh7l_s3x.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqh7l_s3x.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t// your code goes here\n\tif(strpos($txt,\
    \ ' ') !== false) {\n\t\treturn explode(' ', $txt);\n\t}\n\tif(strpos($txt, ',')\
    \ !== false) {\n\t\treturn explode(',', $txt);\n\t}\n\t$sum = 0;\n\tfor($i = 0;\
    \ $i < strlen($txt); $i++) {\n\t\tif($i % 2 !== 0) {\n\t\t\t$sum++;\n\t\t}\n\t\
    }\n\treturn $sum;\n}\necho split_words(\"Hello world!\") . \"<br>\";\necho split_words(\"\
    Hello,world!\") . \"<br>\";\necho split_words(\"abcdef\") . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpf5z8t1wk.php:39\nStack trace:\n#0 /tmp/tmpf5z8t1wk.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpf5z8t1wk.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $res = [];\n    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    if (strpos($txt, \" \") !== false) {\n        $res = explode(\" \", $txt);\n\
    \    } else if (strpos($txt, \",\") !== false) {\n        $res = explode(\",\"\
    , $txt);\n    } else {\n        $ct = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            $index = strpos($letters, $txt[$i]);\n            if ($index\
    \ % 2 != 0) {\n                $ct++;\n            }\n        }\n        $res[]\
    \ = $ct;\n    }\n    return $res;\n}\necho \"<pre>\";\nprint_r(split_words(\"\
    Hello world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n(\n    [0] => 3\n\
    )\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqczhnwuc.php:46\n\
    Stack trace:\n#0 /tmp/tmpqczhnwuc.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqczhnwuc.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (ctype_alpha($txt)) {\n        $count\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    } else if (strpos($txt, ' ') === false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        return explode(' ', $txt);\n    }\n}\necho split_words(\"\
    Hello world!\");\necho \"<br/>\";\necho split_words(\"Hello,world!\");\necho \"\
    <br/>\";\necho split_words(\"abcdef\");\necho \"<br/>\";\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array<br/>Array<br/>3<br/>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpamq4u6qt.php:41\nStack trace:\n#0 /tmp/tmpamq4u6qt.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpamq4u6qt.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    // Check if whitespace exists\n    $output\
    \ = explode(\" \", $txt);\n    if (count($output) > 1) {\n        return $output;\n\
    \    }\n    // Check if comma exists\n    $output = explode(\",\", $txt);\n  \
    \  if (count($output) > 1) {\n        return $output;\n    }\n    // Check for\
    \ the number of lower-case letters with odd order in the alphabet\n    $odd_count\
    \ = 0;\n    $letters = range('a', 'z');\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n        if (in_array($txt[$i], $letters)) {\n            $letter_value =\
    \ array_search($txt[$i], $letters);\n            if ($letter_value % 2 != 0) {\n\
    \                $odd_count++;\n            }\n        }\n    }\n    return $odd_count;\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') != false) {\n    \
    \    return explode(' ', $txt);\n    } else if(strpos($txt, ',') != false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $num = 0;\n       \
    \ $txt = str_split($txt);\n        for($i = 0; $i < sizeof($txt); $i++) {\n  \
    \          if(ord($txt[$i]) % 2 == 1) {\n                $num++;\n           \
    \ }\n        }\n        return $num;\n    }\n}\necho split_words(\"Hello world!\"\
    );\necho split_words(\"Hello,world!\");\necho split_words(\"abcdef\");\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "ArrayArray3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6w3qqumn.php:38\n\
    Stack trace:\n#0 /tmp/tmp6w3qqumn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6w3qqumn.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t// your code here\n}\necho implode(\", \"\
    , split_words(\"Hello world!\"));\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: implode(): Invalid arguments passed in /tmp/tmprvhbftmk.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvhbftmk.php:18\n\
    Stack trace:\n#0 /tmp/tmprvhbftmk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprvhbftmk.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$txt = trim($txt);\n\t$parts = array_map(function($word)\
    \ {\n\t\treturn trim($word);\n\t}, explode(' ', $txt));\n\tif (count($parts) >\
    \ 1) {\n\t\treturn $parts;\n\t}\n\t$parts = array_map(function($word) {\n\t\t\
    return trim($word);\n\t}, explode(',', $txt));\n\tif (count($parts) > 1) {\n\t\
    \treturn $parts;\n\t}\n\t$letters = array_map(function($word) {\n\t\treturn ord($word);\n\
    \t}, str_split($txt));\n\t$n = 0;\n\tforeach ($letters as $l) {\n\t\tif ($l%2\
    \ == 1) {\n\t\t\t$n++;\n\t\t}\n\t}\n\treturn $n;\n}\necho split_words(\"Hello\
    \ world!\") . \"\\n\";\necho split_words(\"Hello,world!\") . \"\\n\";\necho split_words(\"\
    abcdef\") . \"\\n\";\necho split_words(\"a1\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n2\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_z047_l2.php:48\nStack trace:\n#0 /tmp/tmp_z047_l2.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_z047_l2.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       $len = strlen($txt);\n        for ($i = 0; $i < $len; $i++) {\n      \
    \      if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n            }\n\
    \        }\n        return $count;\n    }\n}\n\necho implode(', ', split_words('Hello\
    \ world!'));\necho \"\\n\";\necho implode(', ', split_words('Hello,world!'));\n\
    echo \"\\n\";\necho split_words('abcdef');\necho \"\\n\";\necho split_words('abc');\n\
    echo \"\\n\";\necho split_words('abcde');\necho \"\\n\";\necho split_words('abcdefg');\n\
    echo \"\\n\";\necho split_words('Abcdefg');\necho \"\\n\";\necho split_words('Abcdefg,\
    \ hijkl');\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Hello, world!\nHello, world!\n3\n2\n3\n4\n4\nArray\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmptph233aj.php:53\nStack trace:\n#0 /tmp/tmptph233aj.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptph233aj.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (preg_match('/\\s/', $txt)) {\n\t\treturn\
    \ array_filter(explode(' ', $txt));\n\t}\n\tif (preg_match('/,/', $txt)) {\n\t\
    \treturn array_filter(explode(',', $txt));\n\t}\n\tif (preg_match('/[a-z]/', $txt))\
    \ {\n\t\t$chars = str_split($txt);\n\t\t$odd = array_filter($chars, function($char)\
    \ {\n\t\t\t$ascii = ord($char);\n\t\t\treturn ($ascii % 2 !== 0);\n\t\t});\n\t\
    \treturn count($odd);\n\t}\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqgpa7prz.php:36\n\
    Stack trace:\n#0 /tmp/tmpqgpa7prz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqgpa7prz.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (preg_match('/[a-z]/', $txt)) {\n    $count\
    \ = 0;\n    $array = [];\n    for ($i = 0; $i < strlen($txt); $i++) {\n      $num\
    \ = (ord($txt[$i]) - ord('a')) % 2;\n      if ($num == 1) {\n        $count++;\n\
    \      }\n    }\n    return $count;\n  } else if (preg_match('/[,]/', $txt)) {\n\
    \    return explode(',', $txt);\n  } else {\n    return explode(' ', $txt);\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3z9k3e_p.php:32\n\
    Stack trace:\n#0 /tmp/tmp3z9k3e_p.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3z9k3e_p.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strstr($txt, ' ')) {\n    return explode('\
    \ ', $txt);\n  } elseif (strstr($txt, ',')) {\n    return explode(',', $txt);\n\
    \  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \    if (ord($txt[$i]) % 2 === 1) {\n        $count++;\n      }\n    }\n    return\
    \ $count;\n  }\n}\necho split_words(', world!')[0];\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ",\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3j_7ri3.php:35\n\
    Stack trace:\n#0 /tmp/tmpp3j_7ri3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpp3j_7ri3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 === 0\
    \ && ord($txt[$i]) > 96 && ord($txt[$i]) < 123) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqs3qx62p.php:34\n\
    Stack trace:\n#0 /tmp/tmpqs3qx62p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqs3qx62p.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd_count = 0;\n\
    \        $length = strlen($txt);\n        for ($i = 0; $i < $length; $i++) {\n\
    \            if ($i % 2 != 0) {\n                $odd_count++;\n            }\n\
    \        }\n        return $odd_count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphm5e98rc.php:37\n\
    Stack trace:\n#0 /tmp/tmphm5e98rc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphm5e98rc.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $arr = explode(\" \", $txt);\n  if(count($arr)\
    \ == 1) {\n    $arr = explode(\",\", $txt);\n    if(count($arr) == 1) {\n    \
    \  $arr = str_split($txt);\n      $count = 0;\n      foreach($arr as $item) {\n\
    \        if(ord($item) % 2 == 1) {\n          $count++;\n        }\n      }\n\
    \      $arr = $count;\n    }\n  }\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabcpoghz.php:36\n\
    Stack trace:\n#0 /tmp/tmpabcpoghz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpabcpoghz.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$ans = '';\n\tif(str_word_count($txt, 1)\
    \ > 1) {\n\t\t$ans = str_word_count($txt, 1);\n\t} else if(substr_count($txt,\
    \ ',') > 0) {\n\t\t$ans = explode(',', $txt);\n\t} else {\n\t\t$ans = count(preg_grep('/[a-z]/',\
    \ str_split($txt)));\n\t}\n\treturn $ans;\n}\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbet7aojn.php:25\n\
    Stack trace:\n#0 /tmp/tmpbet7aojn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbet7aojn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(preg_match(\"/\\s/\", $txt)) {\n   \
    \     return explode(\" \", $txt);\n    }\n    if(preg_match(\"/,/\", $txt)) {\n\
    \        return explode(\",\", $txt);\n    }\n    $letters = str_split($txt);\n\
    \    $result = 0;\n    foreach($letters as $letter) {\n        if(ord($letter)\
    \ % 2 == 1) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\necho split_words(\"Hello world!\");\necho \"\\n\";\necho split_words(\"Hello,world!\"\
    );\necho \"\\n\";\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6ws2ik3.php:40\n\
    Stack trace:\n#0 /tmp/tmp_6ws2ik3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_6ws2ik3.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (preg_match('/[ ]/', $txt)) {\n    return\
    \ preg_split('/[ ]/', $txt);\n  } elseif (preg_match('/[,]/', $txt)) {\n    return\
    \ preg_split('/[,]/', $txt);\n  } else {\n    return preg_match_all('/[a-z]/',\
    \ $txt, $arr);\n  }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpel27sici.php:27\n\
    Stack trace:\n#0 /tmp/tmpel27sici.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpel27sici.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $a = \"abcedefghijklmnopqrstuvwxyz\";\n\
    \    $a = str_split($a);\n    $txt = str_split($txt);\n    $k = 0;\n    for ($i\
    \ = 0; $i < count($txt); $i++) {\n        if (in_array($txt[$i], $a)) {\n    \
    \        $k++;\n        }\n    }\n    if (strpos($txt, \" \") === false && strpos($txt,\
    \ \",\") === false) {\n        return $k;\n    } elseif (strpos($txt, \" \") ===\
    \ false) {\n        return explode(\",\", $txt);\n    } else {\n        return\
    \ explode(\" \", $txt);\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello\
    \ world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>\nWarning: strpos() expects parameter 1 to be string, array given\
    \ in /tmp/tmp8woyvs9w.php on line 19\n\nWarning: strpos() expects parameter 1\
    \ to be string, array given in /tmp/tmp8woyvs9w.php on line 21\n\nWarning: explode()\
    \ expects parameter 2 to be string, array given in /tmp/tmp8woyvs9w.php on line\
    \ 24\n</pre><pre>\nWarning: strpos() expects parameter 1 to be string, array given\
    \ in /tmp/tmp8woyvs9w.php on line 19\n\nWarning: strpos() expects parameter 1\
    \ to be string, array given in /tmp/tmp8woyvs9w.php on line 21\n\nWarning: explode()\
    \ expects parameter 2 to be string, array given in /tmp/tmp8woyvs9w.php on line\
    \ 24\n</pre><pre>\nWarning: strpos() expects parameter 1 to be string, array given\
    \ in /tmp/tmp8woyvs9w.php on line 19\n\nWarning: strpos() expects parameter 1\
    \ to be string, array given in /tmp/tmp8woyvs9w.php on line 21\n\nWarning: explode()\
    \ expects parameter 2 to be string, array given in /tmp/tmp8woyvs9w.php on line\
    \ 24\n</pre>\nWarning: strpos() expects parameter 1 to be string, array given\
    \ in /tmp/tmp8woyvs9w.php on line 19\n\nWarning: strpos() expects parameter 1\
    \ to be string, array given in /tmp/tmp8woyvs9w.php on line 21\n\nWarning: explode()\
    \ expects parameter 2 to be string, array given in /tmp/tmp8woyvs9w.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8woyvs9w.php:41\n\
    Stack trace:\n#0 /tmp/tmp8woyvs9w.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp8woyvs9w.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false) {\n\t\t\
    return explode(' ', $txt);\n\t}\n\tif (strpos($txt, ',') !== false) {\n\t\treturn\
    \ explode(',', $txt);\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($txt); $i++)\
    \ {\n\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,\");\necho '<br>';\necho split_words(\"z abcdef\");\n\
    echo '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"\
    a,b,c,d,e,f\");\necho '<br>';\necho split_words(\"a,b,c,d,e,f,\");\necho '<br>';\n\
    echo split_words(\"z a,b,c,d,e,f\");\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_agwf0vu.php:52\nStack\
    \ trace:\n#0 /tmp/tmp_agwf0vu.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp_agwf0vu.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') === false) {\n    if\
    \ (strpos($txt, ',') === false) {\n      return substr_count($txt, 'a') + substr_count($txt,\
    \ 'c') + substr_count($txt, 'e') + substr_count($txt, 'g') + substr_count($txt,\
    \ 'i') + substr_count($txt, 'k') + substr_count($txt, 'm') + substr_count($txt,\
    \ 'o') + substr_count($txt, 'q') + substr_count($txt, 's') + substr_count($txt,\
    \ 'u') + substr_count($txt, 'w') + substr_count($txt, 'y');\n    } else {\n  \
    \    return explode(',', $txt);\n    }\n  } else {\n    return explode(' ', $txt);\n\
    \  }\n}\n\necho var_dump(split_words(\"Hello world!\"));\necho '<br>';\necho var_dump(split_words(\"\
    Hello,world!\"));\necho '<br>';\necho var_dump(split_words(\"abcdef\"));\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\n<br>array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\n<br>int(3)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb86dpdui.php:37\n\
    Stack trace:\n#0 /tmp/tmpb86dpdui.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb86dpdui.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $str = \"\"\
    ;\n    $str1 = \"\";\n    $str2 = \"\";\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        if ($arr[$i] === \" \") {\n            $str = $str1;\n          \
    \  break;\n        } elseif ($arr[$i] === \",\") {\n            $str = $str2;\n\
    \            break;\n        } else {\n            $str1 .= $arr[$i];\n      \
    \      $str2 .= $arr[$i];\n        }\n    }\n    $arr = explode($str, $txt);\n\
    \    if (count($arr) === 1) {\n        $num = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 !== 0) {\n                $num++;\n\
    \            }\n        }\n        return $num;\n    } else {\n        return\
    \ $arr;\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"\
    </pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>\nWarning: explode(): Empty delimiter in /tmp/tmp2cgoe7fh.php on line\
    \ 26\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp2cgoe7fh.php on line 27\n3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp2cgoe7fh.php:47\nStack trace:\n#0 /tmp/tmp2cgoe7fh.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2cgoe7fh.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false) {\n\t\t\
    return explode(' ', $txt);\n\t} elseif (strpos($txt, ',') !== false) {\n\t\treturn\
    \ explode(',', $txt);\n\t} else {\n\t\t$odd_chars = 0;\n\t\tfor ($i = 0; $i <\
    \ strlen($txt); $i++) {\n\t\t\tif (ord($txt[$i]) % 2 === 1) {\n\t\t\t\t$odd_chars++;\n\
    \t\t\t}\n\t\t}\n\t\treturn $odd_chars;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_ol0t6v.php:35\n\
    Stack trace:\n#0 /tmp/tmp8_ol0t6v.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8_ol0t6v.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $output = [];\n    // $len = strlen($txt);\n\
    \    // $arr = str_split($txt);\n    // $i = 0;\n    // while ($i < $len) {\n\
    \    //     $char = $arr[$i];\n    //     if ($char === ' ') {\n    //       \
    \  $word = '';\n    //         $i++;\n    //         while ($i < $len && $arr[$i]\
    \ !== ' ') {\n    //             $word .= $arr[$i];\n    //             $i++;\n\
    \    //         }\n    //         $output[] = $word;\n    //     } else {\n  \
    \  //         $i++;\n    //     }\n    // }\n    // return $output;\n    $matches\
    \ = [];\n    preg_match_all('/(\\S+)/', $txt, $matches);\n    return $matches[0];\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqb63zgpx.php:40\n\
    Stack trace:\n#0 /tmp/tmpqb63zgpx.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpqb63zgpx.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $counter = 0;\n\
    \        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $counter++;\n            }\n        }\n      \
    \  return $counter;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocoyd0h_.php:35\n\
    Stack trace:\n#0 /tmp/tmpocoyd0h_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpocoyd0h_.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  }\n  if (strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  }\n  return substr_count($txt, 'a') + substr_count($txt, 'c') + substr_count($txt,\
    \ 'e') + substr_count($txt, 'g') + substr_count($txt, 'i') + substr_count($txt,\
    \ 'k') + substr_count($txt, 'm') + substr_count($txt, 'o') + substr_count($txt,\
    \ 'q') + substr_count($txt, 's') + substr_count($txt, 'u') + substr_count($txt,\
    \ 'w') + substr_count($txt, 'y');\n}\necho split_words(\"Hello world!\");\necho\
    \ '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"\
    abcdef\");\necho '<br>';\necho split_words(\"def\");\necho '<br>';\necho split_words(\"\
    ab,cd,ef\");\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3<br>1<br>Array\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpi4k10hhy.php:37\nStack trace:\n#0 /tmp/tmpi4k10hhy.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi4k10hhy.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $count = 0;\n     \
    \   $n = strlen($txt);\n        for($i = 0; $i < $n; $i++) {\n            if(ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array<br>Array<br>3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6c19j8vv.php:40\n\
    Stack trace:\n#0 /tmp/tmp6c19j8vv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6c19j8vv.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('  ', ' ', $txt);\n    $txt = trim($txt);\n    $str_to_arr\
    \ = explode(' ', $txt);\n    if (count($str_to_arr) == 1) {\n        $char_array\
    \ = str_split($txt);\n        $count = 0;\n        for ($i = 0; $i < count($char_array);\
    \ $i++) {\n            if ($i % 2 == 0) {\n                $count++;\n       \
    \     }\n        }\n        return $count;\n    }\n    return $str_to_arr;\n}\n\
    \n$txt = \"Hello world!\";\nprint_r(split_words($txt));\necho \"<br/>\";\n\n$txt\
    \ = \"Hello,world!\";\nprint_r(split_words($txt));\necho \"<br/>\";\n\n$txt =\
    \ \"abcdef\";\nprint_r(split_words($txt));\necho \"<br/>\";\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => Hello\n    [1] => world!\n)\n<br/>Array\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n<br/>3<br/>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpc__3v4wx.php:46\nStack trace:\n#0 /tmp/tmpc__3v4wx.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpc__3v4wx.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$arr = str_split($txt);\n\tif (in_array(\"\
    \ \", $arr)){\n\t\treturn explode(\" \", $txt);\n\t} else if (in_array(\",\",\
    \ $arr)){\n\t\treturn explode(\",\", $txt);\n\t} else {\n\t\t$count = 0;\n\t\t\
    foreach($arr as $letter){\n\t\t\tif (ord($letter) % 2 === 1){\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n}\nprint_r(split_words(\"Hello world!\"\
    ));\necho \"<br>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"<br>\";\n\
    print_r(split_words(\"abcdef\"));\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => Hello\n    [1] => world!\n)\n<br>Array\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n<br>3\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp27r3a35_.php:40\nStack trace:\n#0 /tmp/tmp27r3a35_.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp27r3a35_.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strstr($txt, ' ')) {\n        return\
    \ explode(' ', $txt);\n    } elseif (strstr($txt, ',')) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\necho split_words(\"\
    Hello world!\");\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2j8o3kqo.php:36\n\
    Stack trace:\n#0 /tmp/tmp2j8o3kqo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2j8o3kqo.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (empty($txt)) {\n    return \"\";\n  }\n\
    \  if (preg_match(\"/\\s/\", $txt)) {\n    return explode(\" \", $txt);\n  }\n\
    \  if (preg_match(\"/,/\", $txt)) {\n    return explode(\",\", $txt);\n  }\n \
    \ $arr = [];\n  $str = preg_split('//u', $txt, -1, PREG_SPLIT_NO_EMPTY);\n  foreach\
    \ ($str as $value) {\n    if (ord($value) % 2 != 0) {\n      array_push($arr,\
    \ $value);\n    }\n  }\n  return count($arr);\n}\nprint_r(split_words(\"abcdef\"\
    ));\nprint_r(split_words(\"Hello world!\"));\nprint_r(split_words(\"Hello,world!\"\
    ));\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "3Array\n(\n    [0] => Hello\n    [1] => world!\n)\nArray\n(\n    [0] =>\
    \ Hello\n    [1] => world!\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp73456iy3.php:41\nStack trace:\n#0 /tmp/tmp73456iy3.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp73456iy3.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n// \t$txt = preg_replace(\"/\\s+/\", \",\"\
    , $txt);\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpx1qjfhcq.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$text = preg_split('/[\\s,]+/', $txt);\n\t\
    $arr = [];\n\tforeach ($text as $value) {\n\t\t$arr[] = $value;\n\t}\n\treturn\
    \ count($arr) > 1 ? $arr : count_letters($txt);\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbk4om18.php:25\n\
    Stack trace:\n#0 /tmp/tmpmbk4om18.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmbk4om18.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $txt = trim($txt);\n  $txt = preg_replace('/\\\
    s+/', ' ', $txt);\n  if(preg_match(\"/\\s/\", $txt)){\n    return explode(\" \"\
    , $txt);\n  }\n  if(preg_match(\"/,/\", $txt)){\n    return explode(\",\", $txt);\n\
    \  }\n  $result = 0;\n  $arr = str_split($txt);\n  foreach($arr as $item){\n \
    \   if(ord($item) % 2 === 1){\n      $result++;\n    }\n  }\n  return $result;\n\
    }\necho split_words(\"abcdef\").\"\\n\";\necho split_words(\"Hello world!\").\"\
    \\n\";\necho split_words(\"Hello,world!\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "3\nArray\nArray\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrm0c8mc.php:40\n\
    Stack trace:\n#0 /tmp/tmpkrm0c8mc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkrm0c8mc.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = str_replace(\"\
    ,\", \" \", $txt);\n    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"\
    .\", \" \", $txt);\n    $result = explode(\" \", $txt);\n    $letterCount = 0;\n\
    \    for ($i = 0; $i < count($result); $i++) {\n        $letterCount += strlen($result[$i]);\n\
    \    }\n    if ($letterCount > count($result)) {\n        return $result;\n  \
    \  } else {\n        $oddOrd = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $oddOrd++;\n \
    \           }\n        }\n        return $oddOrd;\n    }\n}\necho split_words(\"\
    Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"\
    <br>\";\necho split_words(\"abcdef\");\necho \"<br>\";\necho split_words(\"abcd,efg!\"\
    );\necho \"<br>\";\necho split_words(\"abcde,fg!\");\necho \"<br>\";\necho split_words(\"\
    Hello World,I am here!\");\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array<br>Array<br>Array<br>Array<br>Array<br>Array\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp0f6mujyr.php:47\nStack trace:\n#0 /tmp/tmp0f6mujyr.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0f6mujyr.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $array = [];\n  if (strpos($txt, ' ') !==\
    \ false) {\n    $array = explode(' ', $txt);\n  } elseif (strpos($txt, ',') !==\
    \ false) {\n    $array = explode(',', $txt);\n  } else {\n    $lowercase = range('a',\
    \ 'z');\n    $array = array_filter($lowercase, function($x){\n      return ord($x)\
    \ % 2 === 1;\n    });\n    $array = count($array);\n  }\n  return $array;\n}\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35r2ngu9.php:33\n\
    Stack trace:\n#0 /tmp/tmp35r2ngu9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp35r2ngu9.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    return count(array_filter(str_split($txt),\
    \ function($c) {\n      return ord($c) % 2 == 1;\n    }));\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_f7v9w8y.php:30\n\
    Stack trace:\n#0 /tmp/tmp_f7v9w8y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_f7v9w8y.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t\n\tif(strpos($txt, ' ') !== false) {\n\t\
    \t$txt = explode(' ', $txt);\n\t\treturn $txt;\n\t} elseif(strpos($txt, ',') !==\
    \ false) {\n\t\t$txt = explode(',', $txt);\n\t\treturn $txt;\n\t} else {\n\t\t\
    return count_odd($txt);\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_odd() in\
    \ /tmp/tmpyr90vrr_.php:18\nStack trace:\n#0 /tmp/tmpyr90vrr_.php(23): split_words('abcdef')\n\
    #1 /tmp/tmpyr90vrr_.php(31): candidate('abcdef')\n#2 /tmp/tmpyr90vrr_.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpyr90vrr_.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (count(explode(\" \", $txt))>1) {\n  \
    \  return explode(\" \", $txt);\n  }\n  else if (count(explode(\",\", $txt))>1)\
    \ {\n    return explode(\",\", $txt);\n  }\n  else {\n    $counter = 0;\n    for\
    \ ($i=0; $i < strlen($txt); $i++) {\n      if ($i%2==0) {\n        $counter +=\
    \ 1;\n      }\n    }\n    return $counter;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo2ja9zf.php:36\n\
    Stack trace:\n#0 /tmp/tmpoo2ja9zf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpoo2ja9zf.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception

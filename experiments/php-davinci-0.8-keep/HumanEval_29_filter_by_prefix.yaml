name: HumanEval_29_filter_by_prefix
language: php
prompt: "<?php\n// Filter an input list of strings only for ones that start with a\
  \ given prefix.\n// >>> filter_by_prefix([], 'a')\n// []\n// >>> filter_by_prefix(['abc',\
  \ 'bcd', 'cde', 'array'], 'a')\n// ['abc', 'array']\nfunction filter_by_prefix($strings,\
  \ $prefix) {\n"
tests: "function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\",\
  \ \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
  , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $result = [];\n  foreach ($strings as $s) {\n    if (starts_with($s,\
    \ $prefix)) {\n      $result[] = $s;\n    }\n  }\n  return $result;\n}\n", " \
    \   // BEGIN (write your solution here)\n    $result = [];\n    foreach ($strings\
    \ as $string) {\n        if (mb_substr($string, 0, mb_strlen($prefix)) === $prefix)\
    \ {\n            $result[] = $string;\n        }\n    }\n    return $result;\n\
    \    // END\n}\n", "  $result = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $prefix) === 0) {\n      $result[] = $string;\n    }\n  }\n\
    \  return $result;\n}\n", "    $values = [];\n    foreach ($strings as $string)\
    \ {\n        if (substr($string, 0, strlen($prefix)) == $prefix) {\n         \
    \   $values[] = $string;\n        }\n    }\n    return $values;\n}\n", "    if\
    \ (empty($strings)) return [];\n    $result = [];\n    foreach ($strings as $string)\
    \ {\n        if (substr($string, 0, strlen($prefix)) == $prefix) {\n         \
    \   $result[] = $string;\n        }\n    }\n    return $result;\n}\n", "\t$filtered\
    \ = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $prefix) === 0)\
    \ {\n\t\t\t$filtered[] = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}", "    $prefixed\
    \ = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $prefixed[] = $string;\n        }\n    }\n  \
    \  return $prefixed;\n}", "  $length = strlen($prefix);\n  $results = [];\n  foreach\
    \ ($strings as $string) {\n    if (substr($string, 0, $length) == $prefix) {\n\
    \      $results[] = $string;\n    }\n  }\n  return $results;\n}\n", "    $filtered\
    \ = [];\n    foreach ($strings as $string) {\n        if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}", "    $result = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $prefix) === 0) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n", "    return array_filter($strings,\
    \ function($str) use ($prefix) {\n        return strpos($str, $prefix) === 0;\n\
    \    });\n}\n", "  $output = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $prefix) === 0) {\n      $output[] = $string;\n    }\n  }\n  return $output;\n\
    }\n", "    return array_filter($strings, function($string) use ($prefix) {\n \
    \       return starts_with($string, $prefix);\n    });\n}\n", "\t$matching = [];\n\
    \tforeach ($strings as $str) {\n\t\tif (preg_match(\"/^$prefix/\", $str)) {\n\t\
    \t\t$matching[] = $str;\n\t\t}\n\t}\n\treturn $matching;\n}\n", "  $filtered_strings\
    \ = [];\n  foreach ($strings as $string) {\n    if (starts_with($string, $prefix))\
    \ {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n", "    $filtered = [];\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $filtered[] = $string;\n    \
    \    }\n    }\n    return $filtered;\n}\n", "    $out = [];\n    for ($i = 0;\
    \ $i < count($strings); $i++) {\n        if (strpos($strings[$i], $prefix) ===\
    \ 0) {\n            $out[] = $strings[$i];\n        }\n    }\n    return $out;\n\
    }\n", "    $result = [];\n    foreach ($strings as $value) {\n        if (strpos($value,\
    \ $prefix) === 0) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}", "    $out = [];\n    foreach ($strings as $string) {\n       \
    \ if (starts_with($string, $prefix)) {\n            $out[] = $string;\n      \
    \  }\n    }\n    return $out;\n}\n", "  $results = [];\n  for ($i = 0; $i < count($strings);\
    \ $i++) {\n    if (startswith($strings[$i], $prefix)) {\n      $results[] = $strings[$i];\n\
    \    }\n  }\n  return $results;\n}\n", "    $result = [];\n    for($i = 0; $i\
    \ < count($strings); $i++) {\n        if(str_starts_with($strings[$i], $prefix))\
    \ {\n            $result[] = $strings[$i];\n        }\n    }\n    return $result;\n\
    }\n", "  return array_filter($strings, function($string) use ($prefix) {\n   \
    \ return substr($string, 0, strlen($prefix)) === $prefix;\n  });\n}\n", "    $filtered_strings\
    \ = [];\n    foreach ($strings as $str) {\n        if (strpos($str, $prefix) ===\
    \ 0) {\n            $filtered_strings[] = $str;\n        }\n    }\n    return\
    \ $filtered_strings;\n}", "    $filtered = [];\n    foreach ($strings as $str)\
    \ {\n        if (strlen($str) < strlen($prefix)) {\n            continue;\n  \
    \      }\n        $str_prefix = substr($str, 0, strlen($prefix));\n        if\
    \ ($str_prefix == $prefix) {\n            $filtered[] = $str;\n        }\n   \
    \ }\n    return $filtered;\n}\n", "    $result = [];\n    foreach ($strings as\
    \ $string) {\n        if (substr($string, 0, strlen($prefix)) == $prefix) {\n\
    \            $result[] = $string;\n        }\n    }\n    return $result;\n}\n",
  "    $f = create_function('$str', 'return substr($str, 0, strlen($prefix)) == $prefix;');\n\
    \    return array_filter($strings, $f);\n}", "    $filtered = [];\n    foreach\
    \ ($strings as $string) {\n        if (starts_with($string, $prefix)) {\n    \
    \        $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n",
  "  // TODO\n}\n", "    $filtered = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $prefix) === 0) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n\n$test1 = filter_by_prefix([], 'a');\n\
    assert($test1 === []);\n$test2 = filter_by_prefix(['abc', 'bcd', 'cde', 'array'],\
    \ 'a');\nassert($test2 === ['abc', 'array']);\n\necho \"All tests pass.\\n\";",
  "    if (empty($strings)) return [];\n    if ($strings[0][0] === $prefix) {\n  \
    \      $result = [$strings[0]];\n    } else {\n        $result = [];\n    }\n\
    \    return array_merge($result, filter_by_prefix(array_slice($strings, 1), $prefix));\n\
    }\n", "  foreach ($strings as $str) {\n    if (strpos($str, $prefix) === 0) {\n\
    \      yield $str;\n    }\n  }\n}\n$strings = ['abc', 'bcd', 'cde', 'array'];\n\
    $result = iterator_to_array(filter_by_prefix($strings, 'a'));\nvar_dump($result);",
  "    $prefix_len = strlen($prefix);\n    $matching_strings = [];\n    foreach ($strings\
    \ as $string) {\n        if (substr($string, 0, $prefix_len) === $prefix) {\n\
    \            $matching_strings[] = $string;\n        }\n    }\n    return $matching_strings;\n\
    }\n", "    $results = [];\n    foreach ($strings as $str) {\n        if (substr($str,\
    \ 0, strlen($prefix)) == $prefix) {\n            $results[] = $str;\n        }\n\
    \    }\n    return $results;\n}\n", "    $start_with_prefix = function($str) use\
    \ ($prefix) {\n        return starts_with($str, $prefix);\n    };\n    return\
    \ array_filter($strings, $start_with_prefix);\n}\n", "    $new_array = [];\n \
    \   foreach ($strings as $str) {\n        if (strpos($str, $prefix) === 0) {\n\
    \            $new_array[] = $str;\n        }\n    }\n    return $new_array;\n\
    }\n", "    // Your code here.\n    $result = [];\n    foreach ($strings as $str)\
    \ {\n        if (strlen($str) >= strlen($prefix) && substr($str, 0, strlen($prefix))\
    \ == $prefix) {\n            $result[] = $str;\n        }\n    }\n    return $result;\n\
    }\n", "    // YOUR CODE GOES HERE\n    $output = [];\n    foreach ($strings as\
    \ $value) {\n        if (strpos($value, $prefix) === 0) {\n            $output[]\
    \ = $value;\n        }\n    }\n    return $output;\n}\n", "    return array_filter($strings,\
    \ function($string) use ($prefix) {\n        return strpos($string, $prefix) ===\
    \ 0;\n    });\n}\n", "\t// BEGIN (write your solution here)\n\tforeach ($strings\
    \ as $value) {\n\t\tif (strpos($value, $prefix) === 0) {\n\t\t\t$result[] = $value;\n\
    \t\t}\n\t}\n\treturn $result;\n\t// END\n}\n", "    $return = [];\n    foreach\
    \ ($strings as $string) {\n        if (substr($string, 0, strlen($prefix)) ==\
    \ $prefix) {\n            $return[] = $string;\n        }\n    }\n    return $return;\n\
    }\n", "    $out = [];\n    foreach ($strings as $str) {\n        if (startswith($str,\
    \ $prefix)) {\n            $out[] = $str;\n        }\n    }\n    return $out;\n\
    }", "\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $prefix) === 0) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n\
    }\n", "    if (empty($strings)) {\n        return [];\n    } else {\n        $filtered\
    \ = [];\n        foreach ($strings as $string) {\n            if (starts_with($string,\
    \ $prefix)) {\n                $filtered[] = $string;\n            }\n       \
    \ }\n        return $filtered;\n    }\n}\n", "    $len = strlen($prefix);\n  \
    \  return array_filter($strings, function($s) use ($prefix, $len) {\n        return\
    \ substr($s, 0, $len) == $prefix;\n    });\n}\n", "  $result = [];\n  foreach\
    \ ($strings as $item) {\n    if (strpos($item, $prefix) === 0) {\n      $result[]\
    \ = $item;\n    }\n  }\n  return $result;\n}\n", "\t$result = [];\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $prefix) === 0) {\n\t\t\t$result[] =\
    \ $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  $filtered = [];\n  foreach\
    \ ($strings as $string) {\n    if (strpos($string, $prefix) === 0) {\n      $filtered[]\
    \ = $string;\n    }\n  }\n  return $filtered;\n}\n", "    $out = [];\n    foreach\
    \ ($strings as $string) {\n        if (starts_with($string, $prefix)) {\n    \
    \        $out[] = $string;\n        }\n    }\n    return $out;\n}\n", "    $filtered\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $prefix)\
    \ === 0) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\
    \treturn $filtered;\n}\n", "    return array_filter($strings, function($s) use\
    \ ($prefix) {\n        return starts_with($s, $prefix);\n    });\n}\n", "    return\
    \ array_filter($strings, function($value) use ($prefix) {\n        return strpos($value,\
    \ $prefix) === 0;\n    });\n}", "  $newArray = [];\n  foreach ($strings as $str)\
    \ {\n    if (strpos($str, $prefix) === 0) {\n      $newArray[] = $str;\n    }\n\
    \  }\n  return $newArray;\n}", "    $out = [];\n    foreach ($strings as $str)\
    \ {\n        if (strpos($str, $prefix) === 0) {\n            $out[] = $str;\n\
    \        }\n    }\n    return $out;\n}\n", "    $filtered = [];\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $prefix) === 0) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "    $result = [];\n\
    \    foreach ($strings as $string) {\n        if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($strings as $str) {\n     \
    \   if (strpos($str, $prefix) === 0) {\n            $result[] = $str;\n      \
    \  }\n    }\n    return $result;\n}", "  $filtered = [];\n  foreach ($strings\
    \ as $string) {\n    if (substr($string, 0, strlen($prefix)) == $prefix) {\n \
    \     $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n", "\t$result\
    \ = [];\n\tforeach ($strings as $string) {\n\t\tif (starts_with($string, $prefix))\
    \ {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  $result\
    \ = [];\n  foreach ($strings as $string) {\n    if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n",
  "    if (empty($strings)) {\n        return [];\n    }\n    $filtered = [];\n  \
    \  foreach ($strings as $string) {\n        if (strpos($string, $prefix) === 0)\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "\treturn array_filter($strings, function($str) use ($prefix) {\n\t\treturn\
    \ substr($str, 0, strlen($prefix)) == $prefix;\n\t});\n}\n", "\t// YOUR CODE GOES\
    \ HERE\n\t$res = array();\n\tforeach ($strings as $string) {\n\t\tif(substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n\t\t\tarray_push($res, $string);\n\t\t}\n\
    \t}\n\treturn $res;\n}", "    $result = [];\n    foreach ($strings as $string)\
    \ {\n        if (0 === strpos($string, $prefix)) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $prefix) === 0) {\n   \
    \         $result[] = $string;\n        }\n    }\n    return $result;\n}\n", "\t\
    $arr = [];\n\tforeach ($strings as $s) {\n\t\tif (substr($s, 0, strlen($prefix))\
    \ == $prefix) {\n\t\t\t$arr[] = $s;\n\t\t}\n\t}\n\treturn $arr;\n}\n", "    if\
    \ (empty($strings)) {\n        return [];\n    }\n    if (in_array($prefix, $strings))\
    \ {\n        return $prefix;\n    }\n    $result = [];\n    for ($i = 0; $i <\
    \ count($strings); $i++) {\n        if (strpos($strings[$i], $prefix) === 0) {\n\
    \            $result[] = $strings[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $strings = array_filter($strings, function($element) use ($prefix)\
    \ {\n        return (substr($element, 0, strlen($prefix)) == $prefix);\n    });\n\
    \    return $strings;\n}\n", "\t// WRITE ME!\n\t$result = array();\n\tforeach\
    \ ($strings as $v) {\n\t\tif (preg_match(\"/^\".$prefix.\"/\", $v)) {\n\t\t\t\
    $result[] = $v;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    return array_filter($strings,\
    \ function($s) use ($prefix) {\n        return strlen($s) > 0 && $s[0] == $prefix;\n\
    \    });\n}\necho implode(', ', filter_by_prefix(['abc', 'bcd', 'cde', 'array'],\
    \ 'a'));", "  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $prefix) === 0) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }\n", "  // START_EXAMPLE\n  $filtered = array_filter($strings, function($string)\
    \ use ($prefix) {\n    return strpos($string, $prefix) === 0;\n  });\n  // END_EXAMPLE\n\
    \  return $filtered;\n}\n", "\t$output = [];\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $prefix) === 0) {\n\t\t\t$output[] = $string;\n\t\
    \t}\n\t}\n\treturn $output;\n}\n", "    $filtered = [];\n    foreach ($strings\
    \ as $str) {\n        if (strpos($str, $prefix) === 0) {\n            $filtered[]\
    \ = $str;\n        }\n    }\n    return $filtered;\n}\n\n/**\n * @param string\
    \ $text\n * @return string\n */", "    $result = [];\n    foreach ($strings as\
    \ $string) {\n        if (preg_match(\"/^$prefix/\", $string)) {\n           \
    \ $result[] = $string;\n        }\n    }\n    return $result;\n}", "    return\
    \ array_filter($strings, function($string) use ($prefix) {\n        return strpos($string,\
    \ $prefix) === 0;\n    });\n}", "    if (count($strings) == 0) {\n        return\
    \ [];\n    } else {\n        $match = [];\n        for ($i = 0; $i < count($strings);\
    \ $i++) {\n            if (strpos($strings[$i], $prefix) === 0) {\n          \
    \      $match[] = $strings[$i];\n            }\n        }\n        return $match;\n\
    \    }\n}\n", "  // BEGIN (write your solution here)\n  $filtered_array = [];\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $prefix) === 0) {\n\
    \      $filtered_array[] = $string;\n    }\n  }\n  return $filtered_array;\n \
    \ // END\n}\nprint_r(filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a'));",
  "\t$result = [];\n\tforeach ($strings as $s) {\n\t\tif (strpos($s, $prefix) ===\
    \ 0) {\n\t\t\t$result[] = $s;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test_cases\
    \ = [\n\t[\n\t\t'result' => [],\n\t\t'args' => [[], 'a'],\n\t],\n\t[\n\t\t'result'\
    \ => ['abc', 'array'],\n\t\t'args' => [['abc', 'bcd', 'cde', 'array'], 'a'],\n\
    \t],\n];\n\n$failed = false;\n\nforeach ($test_cases as $case) {\n\t$result =\
    \ call_user_func_array('filter_by_prefix', $case['args']);\n\tif ($result !==\
    \ $case['result']) {\n\t\techo 'FAILED: filter_by_prefix(' . implode(', ', $case['args'])\
    \ . ') = ' . json_encode($result) .\n\t\t\t', expected ' . json_encode($case['result'])\
    \ . \"\\n\";\n\t\t$failed = true;\n\t}\n}\n\nif (!$failed) {\n\techo \"Success!\\\
    n\";\n}", "    $result = [];\n    foreach ($strings as $string) {\n        if\
    \ (substr($string, 0, strlen($prefix)) == $prefix) {\n            $result[] =\
    \ $string;\n        }\n    }\n    return $result;\n}\n", "  $result = [];\n  foreach\
    \ ($strings as $string) {\n    if (strpos($string, $prefix) === 0) {\n      $result[]\
    \ = $string;\n    }\n  }\n  return $result;\n}\n", "    // Your code here\n}\n",
  "  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", " \
    \   $output = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $output[] = $string;\n        }\n    }\n    return\
    \ $output;\n}\n", "\t$result = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str,\
    \ $prefix) === 0) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    $length = strlen($prefix);\n    $new_arr = [];\n    foreach ($strings\
    \ as $string) {\n        if (substr($string, 0, $length) == $prefix) {\n     \
    \       $new_arr[] = $string;\n        }\n    }\n    return $new_arr;\n}", " \
    \   $filtered = [];\n    foreach ($strings as $string) {\n        if (starts_with($string,\
    \ $prefix)) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    foreach ($strings as $index => $string) {\n        if\
    \ (!starts_with($string, $prefix)) {\n            unset($strings[$index]);\n \
    \       }\n    }\n    return $strings;\n}\n", "    return array_filter($strings,\
    \ function($item) use ($prefix) {\n        return preg_match(\"/^\" . $prefix\
    \ . \"/\", $item);\n    });\n}\n", "\t$result = [];\n\tforeach ($strings as $str)\
    \ {\n\t\tif (strpos($str, $prefix) === 0) {\n\t\t\t$result[] = $str;\n\t\t}\n\t\
    }\n\treturn $result;\n}\n", "    return array_filter($strings, function($string)\
    \ use ($prefix) {\n        return strpos($string, $prefix) === 0;\n    });\n}",
  "    $result = [];\n    foreach ($strings as $string) {\n        if (preg_match(\"\
    /^$prefix/\", $string)) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}", "    if (empty($strings)) {\n        return [];\n  \
    \  } else {\n        return array_filter($strings, function($string) use ($prefix)\
    \ {\n            return strpos($string, $prefix) === 0;\n        });\n    }\n\
    }\n", "  // Your code here.\n}\n", "    return array_filter($strings, function($value)\
    \ use ($prefix) {\n        return starts_with($value, $prefix);\n    });\n}\n",
  "    $result = [];\n    foreach ($strings as $string) {\n        if (starts_with($string,\
    \ $prefix)) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $output = [];\n    foreach ($strings as $string) {\n  \
    \      if (mb_substr($string, 0, mb_strlen($prefix)) == $prefix) {\n         \
    \   $output[] = $string;\n        }\n    }\n    return $output;\n}", "    // Your\
    \ code here.\n    $i = 0;\n    foreach ($strings as $str) {\n        if (substr($str,\
    \ 0, 1) == $prefix) {\n            $output[$i] = $str;\n            $i++;\n  \
    \      }\n    }\n    return $output;\n}\n", "    $filtered = [];\n    foreach\
    \ ($strings as $s) {\n        if (strlen($s) > 0 && $s[0] == $prefix) {\n    \
    \        $filtered[] = $s;\n        }\n    }\n    return $filtered;\n}\n", " \
    \   $result = [];\n    foreach ($strings as $str) {\n        if (strpos($str,\
    \ $prefix) === 0) {\n            $result[] = $str;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($strings as $string) {\n  \
    \      if (substr($string, 0, strlen($prefix)) == $prefix) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n", "  // Your code here.\n\
    \  $strings_filtered = [];\n  foreach ($strings as $string) {\n    if (preg_match(\"\
    /^$prefix/\", $string)) {\n      $strings_filtered[] = $string;\n    }\n  }\n\
    \  return $strings_filtered;\n}\n", "    // YOUR CODE GOES HERE\n}", "  $filtered\
    \ = [];\n  for ($i = 0; $i < count($strings); $i++) {\n    if (strpos($strings[$i],\
    \ $prefix) === 0) {\n      $filtered[] = $strings[$i];\n    }\n  }\n  return $filtered;\n\
    }\n", "  return array_filter($strings, function($string) use ($prefix) {\n   \
    \ return strpos($string, $prefix) === 0;\n  });\n}\n", "    // <<<YOUR_CODE_HERE\n\
    \    // >>>YOUR_CODE_HERE\n}\n", "    $result = [];\n    foreach ($strings as\
    \ $value) {\n        if (strpos($value, $prefix) === 0) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "\t// BEGIN (write your\
    \ solution here)\n\treturn array_filter($strings, function($string) use ($prefix)\
    \ {\n\t\treturn (substr($string, 0, strlen($prefix)) === $prefix);\n\t});\n\t\
    // END\n}\n", "\t$result = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str,\
    \ $prefix) === 0) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "\tforeach ($strings as $value) {\n\t\tif (substr($value, 0,\
    \ strlen($prefix)) == $prefix) {\n\t\t\t$ret[] = $value;\n\t\t}\n\t}\n\treturn\
    \ $ret;\n}\n", "\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $prefix) === 0) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif (starts_with($string,\
    \ $prefix)) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n\
    }\n", "  $result = [];\n  foreach ($strings as $string) {\n    if (strlen($string)\
    \ >= strlen($prefix) &&\n        substr($string, 0, strlen($prefix)) == $prefix)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}", "    $results\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $prefix)\
    \ === 0) {\n            $results[] = $string;\n        }\n    }\n    return $results;\n\
    }\n", "\t// Your code here\n}\n", "    $prefix_length = strlen($prefix);\n   \
    \ $filtered = [];\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, $prefix_length) === $prefix) {\n            $filtered[] = $string;\n    \
    \    }\n    }\n    return $filtered;\n}", "    $result = [];\n    foreach ($strings\
    \ as $string) {\n        if (starts_with($string, $prefix)) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n", "  $result = [];\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $prefix) === 0) {\n\
    \      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "  $beginning\
    \ = [];\n  foreach ($strings as $word) {\n    if (strpos($word, $prefix) === 0)\
    \ {\n      $beginning[] = $word;\n    }\n  }\n  return $beginning;\n}\n", "  \
    \  return array_filter($strings, function($str) use ($prefix) {\n        return\
    \ strpos($str, $prefix) === 0;\n    });\n}\n", "  $new_strings = [];\n  foreach\
    \ ($strings as $string) {\n    if (strlen($string) > 0 && $string[0] == $prefix)\
    \ {\n      $new_strings[] = $string;\n    }\n  }\n  return $new_strings;\n}\n",
  "    $result = [];\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $string;\n      \
    \  }\n    }\n    return $result;\n}\n", "    $result = [];\n    for ($i = 0; $i\
    \ < count($strings); $i++) {\n        if (strlen($strings[$i]) > 0 && $strings[$i][0]\
    \ == $prefix) {\n            $result[] = $strings[$i];\n        }\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    foreach ($strings as $str) {\n\
    \        if (strpos($str, $prefix) === 0) {\n            $result[] = $str;\n \
    \       }\n    }\n    return $result;\n}", "  $l = strlen($prefix);\n  $result\
    \ = [];\n  foreach ($strings as $s) {\n    if (substr($s, 0, $l) == $prefix) {\n\
    \      $result[] = $s;\n    }\n  }\n  return $result;\n}\n", "    $filtered =\
    \ [];\n    foreach ($strings as $string) {\n        if (starts_with($string, $prefix))\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "    $res = [];\n    foreach ($strings as $str) {\n        if (starts_with($str,\
    \ $prefix)) {\n            $res[] = $str;\n        }\n    }\n    return $res;\n\
    }\n", "    $filtered_array = [];\n    foreach ($strings as $string) {\n      \
    \  if (starts_with($string, $prefix)) {\n            $filtered_array[] = $string;\n\
    \        }\n    }\n    return $filtered_array;\n}\n", "  $result = [];\n  foreach\
    \ ($strings as $string) {\n    if (strncmp($string, $prefix, strlen($prefix))\
    \ == 0) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "\t\
    return array_filter($strings, function($string) use ($prefix) {\n\t\treturn strpos($string,\
    \ $prefix) === 0;\n\t});\n}\n", "    // Your code here\n    $result = [];\n  \
    \  foreach ($strings as $string) {\n        if (preg_match(\"/^\" . $prefix .\
    \ \"/\", $string)) {\n            $result[] = $string;\n        }\n    }\n   \
    \ return $result;\n}\n", "  return array_filter($strings, function($s) use ($prefix)\
    \ {\n    return strpos($s, $prefix) === 0;\n  });\n}\n", "    // START SOLUTION\n\
    \    $result = [];\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $string;\n      \
    \  }\n    }\n    return $result;\n    // END SOLUTION\n}\n", "    $filtered =\
    \ [];\n    foreach ($strings as $string) {\n        if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    return array_filter($strings, function($string) use ($prefix)\
    \ {\n        return strpos($string, $prefix) === 0;\n    });\n}\n", "    $result\
    \ = [];\n    foreach ($strings as $string) {\n        if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}", "    return array_filter($strings, function($s) use ($prefix)\
    \ {\n        return starts_with($s, $prefix);\n    });\n}\n", "    // Your code\
    \ here\n}", "    $filtered = [];\n    foreach ($strings as $str) {\n        if\
    \ (substr($str, 0, strlen($prefix)) == $prefix) {\n            $filtered[] = $str;\n\
    \        }\n    }\n    return $filtered;\n}\n", "    $result = [];\n    foreach\
    \ ($strings as $str) {\n        if (strpos($str, $prefix) === 0) {\n         \
    \   $result[] = $str;\n        }\n    }\n    return $result;\n}", "    $results\
    \ = [];\n    foreach ($strings as $string) {\n        if (starts_with($string,\
    \ $prefix)) {\n            $results[] = $string;\n        }\n    }\n    return\
    \ $results;\n}", "    return array_filter($strings, function($string) use ($prefix)\
    \ {\n        return strpos($string, $prefix) === 0;\n    });\n}\n", "\t$result\
    \ = [];\n\tforeach ($strings as $s) {\n\t\tif (strpos($s, $prefix) === 0) {\n\t\
    \t\t$result[] = $s;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $result = [];\n\
    \    foreach ($strings as $s) {\n        if (mb_substr($s, 0, mb_strlen($prefix))\
    \ == $prefix) {\n            $result[] = $s;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($strings as $s) {\n        if (substr($s,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $s;\n        }\n\
    \    }\n    return $result;\n}\n", "    // Your code here\n    $prefixList = [];\n\
    \    foreach ($strings as $str) {\n        if (strpos($str, $prefix) === 0) {\n\
    \            array_push($prefixList, $str);\n        }\n    }\n    return $prefixList;\n\
    }", "    $result = [];\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $string;\n      \
    \  }\n    }\n    return $result;\n}\n", "    $matches = array();\n    foreach\
    \ ($strings as $value) {\n        if (strpos($value, $prefix) === 0) {\n     \
    \       $matches[] = $value;\n        }\n    }\n    return $matches;\n}\n", " \
    \   foreach ($strings as $key => $value) {\n        if (strpos($value, $prefix)\
    \ === false) {\n            unset($strings[$key]);\n        }\n    }\n    return\
    \ $strings;\n}\n", "    $filtered_strings = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $prefix) === 0) {\n            $filtered_strings[]\
    \ = $string;\n        }\n    }\n    return $filtered_strings;\n}\n\n$strings =\
    \ ['abc', 'bcd', 'cde', 'array'];\n$prefix = 'a';\necho implode(', ', filter_by_prefix($strings,\
    \ $prefix));", "    $result = [];\n    foreach ($strings as $string) {\n     \
    \   if (strpos($string, $prefix) === 0) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n", "    $new = [];\n    foreach ($strings\
    \ as $value) {\n        if (preg_match(\"/^\" . $prefix . \"/\", $value)) {\n\
    \            $new[] = $value;\n        }\n    }\n    return $new;\n}", "  $prefix_len\
    \ = strlen($prefix);\n  $ret = [];\n  foreach ($strings as $s) {\n    if (substr($s,\
    \ 0, $prefix_len) === $prefix) {\n      $ret[] = $s;\n    }\n  }\n  return $ret;\n\
    }\n", "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $prefix) === 0) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}", "    $res = [];\n    foreach ($strings\
    \ as $string) {\n        if (starts_with($string, $prefix)) {\n            $res[]\
    \ = $string;\n        }\n    }\n    return $res;\n}\n", "\t$result = [];\n\t$length\
    \ = strlen($prefix);\n\tforeach ($strings as $string) {\n\t\tif (substr($string,\
    \ 0, $length) == $prefix) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "  $filtered = [];\n  foreach ($strings as $string) {\n    if\
    \ (substr($string, 0, strlen($prefix)) == $prefix) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}", "    $results = [];\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $prefix) === 0) {\n            $results[]\
    \ = $string;\n        }\n    }\n    return $results;\n}\n", "    $filtered = [];\n\
    \    foreach ($strings as $str) {\n        if (strpos($str, $prefix) === 0) {\n\
    \            $filtered[] = $str;\n        }\n    }\n    return $filtered;\n}\n",
  "    $filtred = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $filtred[] = $string;\n        }\n    }\n   \
    \ return $filtred;\n}\n", "    $cnt = count($strings);\n    $res = [];\n    for\
    \ ($i = 0; $i < $cnt; $i++) {\n        if (strlen($strings[$i]) >= strlen($prefix)\
    \ &&\n            substr($strings[$i], 0, strlen($prefix)) == $prefix) {\n   \
    \         $res[] = $strings[$i];\n        }\n    }\n    return $res;\n}", "\t\
    $filtered_strings = [];\n\tfor($i = 0; $i < count($strings); $i++) {\n\t\tif (is_string($strings[$i])\
    \ && is_string($prefix)) {\n\t\t\tif (substr($strings[$i], 0, strlen($prefix))\
    \ == $prefix) {\n\t\t\t\t$filtered_strings[] = $strings[$i];\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $filtered_strings;\n}\n", "\treturn array_filter($strings, function($string)\
    \ use ($prefix) {\n\t\treturn strpos($string, $prefix) === 0;\n\t});\n}\n", " \
    \   $startswith = function($string) use ($prefix) {\n        return substr($string,\
    \ 0, strlen($prefix)) === $prefix;\n    };\n    return array_filter($strings,\
    \ $startswith);\n}\n", "    $filtered = [];\n    foreach ($strings as $string)\
    \ {\n        if (starts_with($string, $prefix)) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n", "    return array_filter($strings,\
    \ function($str) use ($prefix) {\n        return substr($str, 0, strlen($prefix))\
    \ == $prefix;\n    });\n}\n", "    // Your code here.\n}\n", "    $filter_by_prefix\
    \ = array_filter($strings, function($item) use ($prefix) {\n        return strpos($item,\
    \ $prefix) === 0;\n    });\n    return $filter_by_prefix;\n}", "    $matches =\
    \ array();\n    foreach ($strings as $string) {\n        if (substr($string, 0,\
    \ strlen($prefix)) == $prefix) {\n            $matches[] = $string;\n        }\n\
    \    }\n    return $matches;\n}\n\n$strings = array('abc', 'bcd', 'cde', 'array');\n\
    $prefix = 'a';\n$matches = filter_by_prefix($strings, $prefix);\necho '$strings\
    \ = ';\nvar_dump($strings);\necho '$prefix = ';\nvar_dump($prefix);\necho '$matches\
    \ = ';\nvar_dump($matches);", "    return array_filter($strings, function($str)\
    \ use ($prefix) {\n        return strpos($str, $prefix) === 0;\n    });\n}", " \
    \ $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "\t\
    $result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $prefix)\
    \ === 0) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t\
    $new = [];\n\tforeach ($strings as $string) {\n\t\tif (strlen($string) > strlen($prefix)\
    \ and substr($string, 0, strlen($prefix)) == $prefix) {\n\t\t\t$new[] = $string;\n\
    \t\t}\n\t}\n\treturn $new;\n}\n", "    $filtered = [];\n    foreach ($strings\
    \ as $str) {\n        if (strlen($str) >= strlen($prefix) && substr($str, 0, strlen($prefix))\
    \ == $prefix) {\n            $filtered[] = $str;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    // your code here\n    return array_filter($strings,\
    \ function($string) use ($prefix) {\n      return strpos($string, $prefix) ===\
    \ 0;\n    });\n}\n", "    $filtered = [];\n    foreach ($strings as $string) {\n\
    \        if (strpos($string, $prefix) === 0) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n", "    $result = [];\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $prefix) === 0) {\n   \
    \         $result[] = $string;\n        }\n    }\n    return $result;\n}\n", " \
    \   $filtered_list = [];\n    foreach ($strings as $string) {\n        if (startswith($string,\
    \ $prefix)) {\n            $filtered_list[] = $string;\n        }\n    }\n   \
    \ return $filtered_list;\n}\n", "\t$result = [];\n\tforeach ($strings as $string)\
    \ {\n\t\tif (substr($string, 0, strlen($prefix)) == $prefix) {\n\t\t\t$result[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    // Your code here.\n}\n",
  "  return array_filter($strings, function($string) use ($prefix) {\n    return (strlen($string)\
    \ > 0 && $string[0] == $prefix);\n  });\n}\n", "    // Your code here\n}\n", " \
    \   $result = [];\n    foreach ($strings as $str) {\n        if (strpos($str,\
    \ $prefix) === 0) {\n            $result[] = $str;\n        }\n    }\n    return\
    \ $result;\n}", "  $result = [];\n  foreach ($strings as $string) {\n    if (starts_with($string,\
    \ $prefix)) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n",
  "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    return array_filter($strings, function($str) use ($prefix)\
    \ {\n        return (strpos($str, $prefix) === 0);\n    });\n}\n\nif (!debug_backtrace())\
    \ {\n    $fruits = array('apple', 'apricot', 'banana', 'blueberry', 'carrot',\
    \ 'coconut', 'eggplant', 'apricot');\n    print_r(filter_by_prefix($fruits, 'a'));\n\
    }", "    return array_filter($strings, function($string) use ($prefix) {\n   \
    \     return strpos($string, $prefix) === 0;\n    });\n}\n", "    $length = strlen($prefix);\n\
    \    $matches = [];\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, $length) == $prefix) {\n            $matches[] = $string;\n        }\n  \
    \  }\n    return $matches;\n}\n", "    $results = [];\n    foreach ($strings as\
    \ $string) {\n        if (substr($string, 0, strlen($prefix)) == $prefix) {\n\
    \            $results[] = $string;\n        }\n    }\n    return $results;\n}",
  "    $filterStrings = array();\n    foreach ($strings as $value) {\n        if (strpos($value,\
    \ $prefix) === 0) {\n            $filterStrings[] = $value;\n        }\n    }\n\
    \    return $filterStrings;\n}\n", "\t// Your code here\n}", "\t$matches = [];\n\
    \tforeach ($strings as $string) {\n\t\tif (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n\t\t\t$matches[] = $string;\n\t\t}\n\t}\n\treturn $matches;\n\
    }", "    $result = [];\n    for ($i = 0; $i < count($strings); $i++) {\n     \
    \   if (substr($strings[$i], 0, strlen($prefix)) == $prefix) {\n            $result[]\
    \ = $strings[$i];\n        }\n    }\n    return $result;\n}\n", "  // Your code\
    \ here.\n}\n", "    $result = [];\n    foreach ($strings as $string) {\n     \
    \   if (strpos($string, $prefix) === 0) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}\n", "    return array_filter($strings,\
    \ function($str) use ($prefix) {\n        return strpos($str, $prefix) === 0;\n\
    \    });\n}\n", "    $prefix_length = strlen($prefix);\n    return array_filter($strings,\
    \ function($string) use ($prefix, $prefix_length) {\n        return substr($string,\
    \ 0, $prefix_length) === $prefix;\n    });\n}", "    return array_filter($strings,\
    \ function($str) use ($prefix) {\n        return strpos($str, $prefix) === 0;\n\
    \    });\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

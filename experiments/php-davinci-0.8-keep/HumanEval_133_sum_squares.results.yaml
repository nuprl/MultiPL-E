name: HumanEval_133_sum_squares
language: php
results:
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $value = ceil($value);\n\
    \    $sum += $value * $value;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwukmxbf0.php:25\n\
    Stack trace:\n#0 /tmp/tmpwukmxbf0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwukmxbf0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $lst = array_map('ceil', $lst);\n    return array_sum(array_map(function($x)\
    \ {\n        return $x * $x;\n    }, $lst));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdr7sj164.php:23\n\
    Stack trace:\n#0 /tmp/tmpdr7sj164.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdr7sj164.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $answer = 0;\n    foreach ($lst as $value) {\n        $answer += ceil($value)\
    \ * ceil($value);\n    }\n    return $answer;\n}\n\n$lst = [1, 2, 3];\nprint_r(sum_squares($lst));\n\
    echo PHP_EOL;\n\n$lst = [1, 4, 9];\nprint_r(sum_squares($lst));\necho PHP_EOL;\n\
    \n$lst = [1, 3, 5, 7];\nprint_r(sum_squares($lst));\necho PHP_EOL;\n\n$lst = [1.4,\
    \ 4.2, 0];\nprint_r(sum_squares($lst));\necho PHP_EOL;\n\n$lst = [-2.4, 1, 1];\n\
    print_r(sum_squares($lst));\necho PHP_EOL;\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8wg3rdz.php:43\n\
    Stack trace:\n#0 /tmp/tmpb8wg3rdz.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpb8wg3rdz.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($x)\
    \ { return $x * $x; }, $lst));\n}\necho sum_squares([1,2,3]);\necho \"\\n\";\n\
    echo sum_squares([1,4,9]);\necho \"\\n\";\necho sum_squares([1,3,5,7]);\necho\
    \ \"\\n\";\necho sum_squares([1.4,4.2,0]);\necho \"\\n\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh50v6fr.php:30\n\
    Stack trace:\n#0 /tmp/tmpwh50v6fr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpwh50v6fr.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum=0;\n    for($i=0;$i<count($lst);$i++){\n        $sum=$sum+ceil($lst[$i])*ceil($lst[$i]);\n\
    \    }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3t6ue1a8.php:23\n\
    Stack trace:\n#0 /tmp/tmp3t6ue1a8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3t6ue1a8.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $item) {\n    $ceiling = ceil($item);\n  \
    \  $result += $ceiling * $ceiling;\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_46rlw8.php:24\n\
    Stack trace:\n#0 /tmp/tmpy_46rlw8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy_46rlw8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $newList = [];\n  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n   \
    \ $newList[] = ceil($lst[$i]);\n  }\n  for ($i = 0; $i < count($newList); $i++)\
    \ {\n    $sum += $newList[$i] * $newList[$i];\n  }\n  return $sum;\n}\n\necho\
    \ sum_squares([1, 2, 3]);\necho sum_squares([1, 4, 9]);\necho sum_squares([1,\
    \ 3, 5, 7]);\necho sum_squares([1.4, 4.2, 0]);\necho sum_squares([-2.4, 1, 1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz161a4pd.php:33\n\
    Stack trace:\n#0 /tmp/tmpz161a4pd.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpz161a4pd.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $value = ceil($value);\n\
    \    $value = $value * $value;\n    $sum += $value;\n  }\n  return $sum;\n}\n\
    echo sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho\
    \ sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\n\
    echo sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprwitnwe6.php:30\n\
    Stack trace:\n#0 /tmp/tmprwitnwe6.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprwitnwe6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $number = 0;\n  foreach ($lst as $n) {\n    $n = ceil($n);\n    $number +=\
    \ $n * $n;\n  }\n  return $number;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_fsq1v9.php:25\n\
    Stack trace:\n#0 /tmp/tmp3_fsq1v9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3_fsq1v9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $new_lst = [];\n  foreach ($lst as $num) {\n    $num = ceil($num);\n    $num\
    \ = $num * $num;\n    array_push($new_lst, $num);\n  }\n  return array_sum($new_lst);\n\
    }\n\n$answer = sum_squares([1,2,3]);\nprint_r(\"$answer \\n\");\n\n$answer = sum_squares([1,4,9]);\n\
    print_r(\"$answer \\n\");\n\n$answer = sum_squares([1,3,5,7]);\nprint_r(\"$answer\
    \ \\n\");\n\n$answer = sum_squares([1.4,4.2,0]);\nprint_r(\"$answer \\n\");\n\n\
    $answer = sum_squares([-2.4,1,1]);\nprint_r(\"$answer \\n\");\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14 \n98 \n84 \n29 \n6 \n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmps1qs1a4d.php:40\nStack trace:\n#0 /tmp/tmps1qs1a4d.php(54): test()\n\
    #1 {main}\n  thrown in /tmp/tmps1qs1a4d.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) * ceil($num);\n\
    \  }\n  return $sum;\n}\n\necho sum_squares([1,2,3]) . PHP_EOL;\necho sum_squares([1,4,9])\
    \ . PHP_EOL;\necho sum_squares([1,3,5,7]) . PHP_EOL;\necho sum_squares([1.4,4.2,0])\
    \ . PHP_EOL;\necho sum_squares([-2.4,1,1]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2b4pcv3i.php:29\n\
    Stack trace:\n#0 /tmp/tmp2b4pcv3i.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2b4pcv3i.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $square = [];\n  foreach ($lst as $number) {\n    $number = ceil($number);\n\
    \    $square[] = $number * $number;\n  }\n  return array_sum($square);\n}\n\n\
    echo sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\necho \"\
    \\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\necho sum_squares([-2.4,4,4]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n36\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_bw73swq.php:36\nStack trace:\n#0 /tmp/tmp_bw73swq.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_bw73swq.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp362_yeyb.php:24\n\
    Stack trace:\n#0 /tmp/tmp362_yeyb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp362_yeyb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \t$result = 0;\n\tforeach ($lst as $value) {\n\t\t$result += pow(ceil($value),\
    \ 2);\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5lbhf62.php:24\n\
    Stack trace:\n#0 /tmp/tmpg5lbhf62.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg5lbhf62.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0;\n    foreach ($lst as $item) {\n        $item = ceil($item);\n\
    \        $result += $item ** 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6ac7rfs.php:25\n\
    Stack trace:\n#0 /tmp/tmpc6ac7rfs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc6ac7rfs.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $number) {\n    $result += ceil($number) *\
    \ ceil($number);\n  }\n  return $result;\n}\n\necho sum_squares([1,2,3]) . '<br>';\n\
    echo sum_squares([1,4,9]) . '<br>';\necho sum_squares([1,3,5,7]) . '<br>';\necho\
    \ sum_squares([1.4,4.2,0]) . '<br>';\necho sum_squares([-2.4,1,1]) . '<br>';\n\
    echo sum_squares([5.5,5.5,5.5]) . '<br>';\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>108<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpppsbmaiu.php:31\nStack trace:\n#0 /tmp/tmpppsbmaiu.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpppsbmaiu.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $newArr = [];\n  foreach ($lst as $value) {\n    array_push($newArr, ceil($value));\n\
    \  }\n  $finalSum = 0;\n  foreach ($newArr as $value) {\n    $newValue = $value\
    \ * $value;\n    $finalSum += $newValue;\n  }\n  return $finalSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbky_6yax.php:29\n\
    Stack trace:\n#0 /tmp/tmpbky_6yax.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbky_6yax.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \t$total = 0;\n\tforeach ($lst as $key => $value) {\n\t\t$total += ceil($value)\
    \ * ceil($value);\n\t}\n\treturn $total;\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsc3yjqk_.php:23\n\
    Stack trace:\n#0 /tmp/tmpsc3yjqk_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsc3yjqk_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $list = array_map('ceil', $lst);\n  return array_sum(array_map(function($number)\
    \ {\n    return $number * $number;\n  }, $list));\n}\n\necho sum_squares([1,2,3])\
    \ . PHP_EOL;\necho sum_squares([1,4,9]) . PHP_EOL;\necho sum_squares([1,3,5,7])\
    \ . PHP_EOL;\necho sum_squares([1.4,4.2,0]) . PHP_EOL;\necho sum_squares([-2.4,1,1])\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ghi9rb_.php:28\n\
    Stack trace:\n#0 /tmp/tmp0ghi9rb_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0ghi9rb_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $key => $value) {\n    $lst[$key] = round($value);\n  }\n\
    \  $result = array_sum(array_map(function($value) {\n    return $value ** 2;\n\
    \  }, $lst));\n  return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5esutwf.php:25\n\
    Stack trace:\n#0 /tmp/tmpo5esutwf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpo5esutwf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $key => $value) {\n    $lst[$key] = ceil($value);\n  }\n \
    \ return array_sum(array_map(function($a) {\n    return $a ** 2;\n  }, $lst));\n\
    }\n\necho sum_squares([1, 2, 3]) . PHP_EOL;\necho sum_squares([1, 4, 9]) . PHP_EOL;\n\
    echo sum_squares([1, 3, 5, 7]) . PHP_EOL;\necho sum_squares([1.4, 4.2, 0]) . PHP_EOL;\n\
    echo sum_squares([-2.4, 1, 1]) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfaha9653.php:30\n\
    Stack trace:\n#0 /tmp/tmpfaha9653.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfaha9653.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $arr = [];\n    foreach ($lst as $l) {\n        array_push($arr, ceil($l)\
    \ ** 2);\n    }\n    return array_sum($arr);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgc4uodb.php:23\n\
    Stack trace:\n#0 /tmp/tmphgc4uodb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphgc4uodb.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    // # code\n  foreach ($lst as $key => $value) {\n    if($value % 1 !== 0){\n \
    \     $x = ceil($value);\n      $arr[] = $x * $x;\n    }\n    else{\n      $arr[]\
    \ = $value * $value;\n    }\n  }\n  $total = array_sum($arr);\n  return $total;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nw3owo2.php:30\n\
    Stack trace:\n#0 /tmp/tmp2nw3owo2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2nw3owo2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum=0;\n    for($i=0;$i<count($lst);$i++){\n        $sum +=ceil($lst[$i])**2;\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p3a48hr.php:23\n\
    Stack trace:\n#0 /tmp/tmp2p3a48hr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2p3a48hr.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwuevx928.php:18\n\
    Stack trace:\n#0 /tmp/tmpwuevx928.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwuevx928.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyuge85yw.php:24\n\
    Stack trace:\n#0 /tmp/tmpyuge85yw.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpyuge85yw.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $item) {\n    $result += ceil($item) * ceil($item);\n\
    \  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_6hxakk.php:23\n\
    Stack trace:\n#0 /tmp/tmpk_6hxakk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk_6hxakk.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $arr = [];\n    foreach ($lst as $value) {\n        $arr[] = ceil($value)\
    \ ** 2;\n    }\n    return array_sum($arr);\n}\necho sum_squares([1, 2, 3]) .\
    \ '<br>';\necho sum_squares([1, 4, 9]) . '<br>';\necho sum_squares([1, 3, 5, 7])\
    \ . '<br>';\necho sum_squares([1.4, 4.2, 0]) . '<br>';\necho sum_squares([-2.4,\
    \ 1, 1]);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpwknahhon.php:28\nStack trace:\n#0 /tmp/tmpwknahhon.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwknahhon.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $value) {\n    $value = ceil($value);\n    $new_lst[] = $value;\n\
    \  }\n  foreach ($new_lst as $value) {\n    $squared = $value * $value;\n    $squared_lst[]\
    \ = $squared;\n  }\n  $sum = array_sum($squared_lst);\n  return $sum;\n}\n\n$lst\
    \ = [1,2,3];\necho sum_squares($lst) . PHP_EOL;\n$lst = [1,4,9];\necho sum_squares($lst)\
    \ . PHP_EOL;\n$lst = [1,3,5,7];\necho sum_squares($lst) . PHP_EOL;\n$lst = [1.4,4.2,0];\n\
    echo sum_squares($lst) . PHP_EOL;\n$lst = [-2.4,1,1];\necho sum_squares($lst)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7g1j8vct.php:39\n\
    Stack trace:\n#0 /tmp/tmp7g1j8vct.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp7g1j8vct.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp222082u2.php:20\n\
    Stack trace:\n#0 /tmp/tmp222082u2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp222082u2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0;\n    foreach ($lst as $item) {\n        $result += ceil($item)\
    \ ** 2;\n    }\n    return $result;\n}\n$lst = [1, 2, 3];\necho(sum_squares($lst));\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvhtluend.php:25\n\
    Stack trace:\n#0 /tmp/tmpvhtluend.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvhtluend.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return array_sum(array_map(function($n) { return ceil($n) * ceil($n); },\
    \ $lst));\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp350rlf2p.php:20\n\
    Stack trace:\n#0 /tmp/tmp350rlf2p.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp350rlf2p.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd00bwmpi.php:29\n\
    Stack trace:\n#0 /tmp/tmpd00bwmpi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpd00bwmpi.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \t\n}\n$tests = [\n\t[[1,2,3], 14],\n\t[[1,4,9], 98],\n\t[[1,3,5,7], 84],\n\t\
    [[1.4,4.2,0], 29],\n\t[[-2.4,1,1], 6],\n];\n$pass = true;\nforeach ($tests as\
    \ $test) {\n\tif (sum_squares($test[0]) !== $test[1]) {\n\t\t$pass = false;\n\t\
    \techo \"Failed on: \" . json_encode($test) . \"\\n\";\n\t}\n}\nif ($pass) {\n\
    \techo \"Pass\\n\";\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Failed on: [[1,2,3],14]\nFailed on: [[1,4,9],98]\nFailed on: [[1,3,5,7],84]\n\
    Failed on: [[1.4,4.2,0],29]\nFailed on: [[-2.4,1,1],6]\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp_4atf8y8.php:36\nStack trace:\n#0 /tmp/tmp_4atf8y8.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_4atf8y8.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $res = 0;\n  foreach ($lst as $val) {\n    $res += pow(ceil($val), 2);\n  }\n\
    \  return $res;\n}\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho\
    \ sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_5c_i7p.php:28\n\
    Stack trace:\n#0 /tmp/tmpt_5c_i7p.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt_5c_i7p.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map('ceil', $lst);\n  $sum = 0;\n  foreach ($lst as $num) {\n\
    \    $sum += pow($num, 2);\n  }\n  return $sum;\n}\n\n$lst = [1,2,3];\nprint_r(sum_squares($lst));\n\
    \n$lst = [1,4,9];\nprint_r(sum_squares($lst));\n\n$lst = [1,3,5,7];\nprint_r(sum_squares($lst));\n\
    \n$lst = [1.4,4.2,0];\nprint_r(sum_squares($lst));\n\n$lst = [-2.4,1,1];\nprint_r(sum_squares($lst));\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_jm47akf.php:39\n\
    Stack trace:\n#0 /tmp/tmp_jm47akf.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_jm47akf.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($x)\
    \ {\n    return $x * $x;\n  }, $lst));\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8zanx_p.php:23\n\
    Stack trace:\n#0 /tmp/tmpu8zanx_p.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu8zanx_p.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($v) { return pow($v, 2); }, $lst));\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbz1y8ms.php:20\n\
    Stack trace:\n#0 /tmp/tmprbz1y8ms.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprbz1y8ms.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nprint_r(sum_squares([1,2,3]));\necho PHP_EOL;\n\
    print_r(sum_squares([1,4,9]));\necho PHP_EOL;\nprint_r(sum_squares([1,3,5,7]));\n\
    echo PHP_EOL;\nprint_r(sum_squares([1.4,4.2,0]));\necho PHP_EOL;\nprint_r(sum_squares([-2.4,1,1]));\n\
    echo PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2uvxmfug.php:34\n\
    Stack trace:\n#0 /tmp/tmp2uvxmfug.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2uvxmfug.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value)*ceil($value);\n\
    \  }\n  return $result;\n}\necho sum_squares([1,2,3]) . \"<br>\";\necho sum_squares([1,4,9])\
    \ . \"<br>\";\necho sum_squares([1,3,5,7]) . \"<br>\";\necho sum_squares([1.4,4.2,0])\
    \ . \"<br>\";\necho sum_squares([-2.4,1,1]) . \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcw0ygre_.php:29\nStack trace:\n#0 /tmp/tmpcw0ygre_.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcw0ygre_.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sq_sum = 0;\n  foreach ($lst as $item) {\n    $item = ceil($item);\n    $sq_sum\
    \ += $item * $item;\n  }\n  return $sq_sum;\n}\n\n$lst = [1,2,3];\necho sum_squares($lst);\
    \ // 14\n$lst = [1,4,9];\necho sum_squares($lst); // 98\n$lst = [1,3,5,7];\necho\
    \ sum_squares($lst); // 84\n$lst = [1.4,4.2,0];\necho sum_squares($lst); // 29\n\
    $lst = [-2.4,1,1];\necho sum_squares($lst); // 6\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3x_m8j78.php:35\n\
    Stack trace:\n#0 /tmp/tmp3x_m8j78.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3x_m8j78.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $ret = 0;\n  foreach ($lst as $i) {\n    $ret += ceil($i) ** 2;\n  }\n  return\
    \ $ret;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb7hwgaor.php:29\n\
    Stack trace:\n#0 /tmp/tmpb7hwgaor.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpb7hwgaor.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd0a43pm.php:18\n\
    Stack trace:\n#0 /tmp/tmprd0a43pm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprd0a43pm.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $results = array_map('ceil', $lst);\n  $sum = 0;\n  foreach ($results as $value)\
    \ {\n    $sum += $value * $value;\n  }\n  return $sum;\n}\necho sum_squares([1,2,3]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2r_0cb5.php:25\n\
    Stack trace:\n#0 /tmp/tmpy2r_0cb5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpy2r_0cb5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($i) {\n    return ceil($i) * ceil($i);\n\
    \  }, $lst));\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pwk7axo.php:22\n\
    Stack trace:\n#0 /tmp/tmp5pwk7axo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5pwk7axo.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $item) {\n    $sum += ceil($item) * ceil($item);\n\
    \  }\n  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwotieefo.php:28\n\
    Stack trace:\n#0 /tmp/tmpwotieefo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwotieefo.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $output = 0;\n  foreach ($lst as $l) {\n    $output += pow(ceil($l), 2);\n\
    \  }\n  return $output;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho\
    \ sum_squares([1,4,9]);\necho \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\\
    n\";\necho sum_squares([1.4,4.2,0]);\necho \"\\n\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kcipvy_.php:34\n\
    Stack trace:\n#0 /tmp/tmp6kcipvy_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp6kcipvy_.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $i = 0;\n  $j = 0;\n  foreach ($lst as $key => $value) {\n    $j = ceil($value);\n\
    \    $i += $j*$j;\n  }\n  return $i;\n}\necho sum_squares([1,2,3]);\necho \"<br>\"\
    ;\necho sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\n\
    echo \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"<br>\";\n ?>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>function candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $value = ceil($value);\n    $squared_value\
    \ = $value * $value;\n    $sum += $squared_value;\n  }\n  return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mhubvwr.php:25\n\
    Stack trace:\n#0 /tmp/tmp5mhubvwr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5mhubvwr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($x)\
    \ { return $x * $x; }, $lst));\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpik62xky4.php:20\n\
    Stack trace:\n#0 /tmp/tmpik62xky4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpik62xky4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $sum;\n}\necho sum_squares([1, 2, 3]);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdx5xkn1.php:24\n\
    Stack trace:\n#0 /tmp/tmpqdx5xkn1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqdx5xkn1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0;\n    $length = count($lst);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result += ceil($lst[$i]) ** 2;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprpahu97r.php:25\n\
    Stack trace:\n#0 /tmp/tmprpahu97r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprpahu97r.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += (int)$value * (int)$value;\n\
    \  }\n  return $result;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n17\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5vahzvb.php:32\n\
    Stack trace:\n#0 /tmp/tmpd5vahzvb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpd5vahzvb.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $key => $value) {\n    $val = ceil($value);\n    $lst[$key]\
    \ = $val * $val;\n  }\n  return array_sum($lst);\n}\n\nprint_r(sum_squares([1,\
    \ 2, 3]));\necho \"\\n\";\nprint_r(sum_squares([1, 4, 9]));\necho \"\\n\";\nprint_r(sum_squares([1,\
    \ 3, 5, 7]));\necho \"\\n\";\nprint_r(sum_squares([1.4, 4.2, 0]));\necho \"\\\
    n\";\nprint_r(sum_squares([-2.4, 1, 1]));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0dtwkco.php:34\n\
    Stack trace:\n#0 /tmp/tmpo0dtwkco.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpo0dtwkco.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map(function($n) {\n    return ceil($n);\n  }, $lst);\n  $result\
    \ = 0;\n  foreach ($lst as $num) {\n    $result += pow($num, 2);\n  }\n  return\
    \ $result;\n}\necho sum_squares([1,2,3]);\necho \"<br />\";\necho sum_squares([1,4,9]);\n\
    echo \"<br />\";\necho sum_squares([1,3,5,7]);\necho \"<br />\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br />\";\necho sum_squares([-2.4,1,1]);\necho \"<br />\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br />98<br />84<br />29<br />6<br />\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpq680nz33.php:36\nStack trace:\n#0 /tmp/tmpq680nz33.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpq680nz33.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $arr=array();\n  foreach($lst as $value){\n    $arr[]=ceil($value);\n  }\n\
    \  return array_sum(array_map(function($x){return $x*$x;},$arr));\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfn_gra2f.php:23\n\
    Stack trace:\n#0 /tmp/tmpfn_gra2f.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfn_gra2f.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // your code here...\n}\nprint_r(sum_squares([1,2,3])); // 14\nprint_r(sum_squares([1,4,9]));\
    \ // 98\nprint_r(sum_squares([1,3,5,7])); // 84\nprint_r(sum_squares([1.4,4.2,0]));\
    \ // 29\nprint_r(sum_squares([-2.4,1,1])); // 6\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmper1h_uwi.php:24\n\
    Stack trace:\n#0 /tmp/tmper1h_uwi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmper1h_uwi.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($x) { return pow($x, 2); }, array_map('ceil',\
    \ $lst)));\n}\nprint_r(sum_squares([1,2,3]) . \"\\n\");\nprint_r(sum_squares([1,4,9])\
    \ . \"\\n\");\nprint_r(sum_squares([1,3,5,7]) . \"\\n\");\nprint_r(sum_squares([1.4,4.2,0])\
    \ . \"\\n\");\nprint_r(sum_squares([-2.4,1,1]) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0aius5et.php:24\n\
    Stack trace:\n#0 /tmp/tmp0aius5et.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0aius5et.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map('intval', $lst)) ** 2;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgy8q6qe.php:19\n\
    Stack trace:\n#0 /tmp/tmpsgy8q6qe.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsgy8q6qe.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $new_array = [];\n  foreach ($lst as $key => $value) {\n    array_push($new_array,\
    \ ceil($value));\n  }\n  $sum = 0;\n  foreach ($new_array as $key => $value) {\n\
    \    $sum += $value ** 2;\n  }\n  return $sum;\n}\n$lst = [1,2,3];\necho sum_squares($lst);\n\
    echo \"<br>\";\n$lst = [1,4,9];\necho sum_squares($lst);\necho \"<br>\";\n$lst\
    \ = [1,3,5,7];\necho sum_squares($lst);\necho \"<br>\";\n$lst = [1.4,4.2,0];\n\
    echo sum_squares($lst);\necho \"<br>\";\n$lst = [-2.4,1,1];\necho sum_squares($lst);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0749_86d.php:42\nStack trace:\n#0 /tmp/tmp0749_86d.php(56): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0749_86d.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $result += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n  }\n  return $result;\n}\n\necho sum_squares([1,2,3]);\n\
    echo sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\n\
    echo sum_squares([-2.4,1,1]);\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm175ilt_.php:30\n\
    Stack trace:\n#0 /tmp/tmpm175ilt_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpm175ilt_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += ceil($number) ** 2;\n\
    \  }\n  return $sum;\n}\necho sum_squares([1, 2, 3]) . \"<br />\";\necho sum_squares([1,\
    \ 4, 9]) . \"<br />\";\necho sum_squares([1, 3, 5, 7]) . \"<br />\";\necho sum_squares([1.4,\
    \ 4.2, 0]) . \"<br />\";\necho sum_squares([-2.4, 1, 1]) . \"<br />\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br />98<br />84<br />29<br />6<br />\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpb67qbzq_.php:28\nStack trace:\n#0 /tmp/tmpb67qbzq_.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb67qbzq_.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // your code here\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux1lvlta.php:20\n\
    Stack trace:\n#0 /tmp/tmpux1lvlta.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpux1lvlta.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxq84g00.php:24\n\
    Stack trace:\n#0 /tmp/tmpgxq84g00.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgxq84g00.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sqSum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $lst[$i] = ceil($lst[$i]);\n\
    \    $sqSum += pow($lst[$i], 2);\n  }\n  return $sqSum;\n}\n\necho sum_squares([1,2,3]);\n\
    echo \"<br>\";\necho sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\n\
    echo \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmph3rzidsd.php:34\nStack trace:\n#0 /tmp/tmph3rzidsd.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmph3rzidsd.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $n) {\n    $sum += ($n < 0 ? ceil($n) : floor($n))\
    \ ** 2;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4dffhso.php:24\n\
    Stack trace:\n#0 /tmp/tmpo4dffhso.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo4dffhso.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += ceil($num) ** 2;\n\
    \    }\n    return $sum;\n}\n\nprint_r(sum_squares([1, 2, 3]));\necho '<br>';\n\
    print_r(sum_squares([1, 4, 9]));\necho '<br>';\nprint_r(sum_squares([1, 3, 5,\
    \ 7]));\necho '<br>';\nprint_r(sum_squares([1.4, 4.2, 0]));\necho '<br>';\nprint_r(sum_squares([-2.4,\
    \ 1, 1]));\necho '<br>';\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpy8s0aoeh.php:34\nStack trace:\n#0 /tmp/tmpy8s0aoeh.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpy8s0aoeh.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map('ceil', $lst)) ** 2;\n}\n\nprint_r(sum_squares([1,2,3])\
    \ . \"\\n\");\nprint_r(sum_squares([1,4,9]) . \"\\n\");\nprint_r(sum_squares([1,3,5,7])\
    \ . \"\\n\");\nprint_r(sum_squares([1.4,4.2,0]) . \"\\n\");\nprint_r(sum_squares([-2.4,1,1])\
    \ . \"\\n\");\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "36\n196\n256\n49\n0\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp053qe1bs.php:25\nStack trace:\n#0 /tmp/tmp053qe1bs.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp053qe1bs.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\n ?>\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6function candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    // \treturn array_sum(array_map(function($x) { return ceil($x)*ceil($x); }, $lst));\n\
    \t$sum=0;\n\tforeach($lst as $item){\n\t\t$sum+=pow(ceil($item),2);\n\t}\n\treturn\
    \ $sum;\n}\n\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\n\
    echo sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7hpivcj.php:30\n\
    Stack trace:\n#0 /tmp/tmpl7hpivcj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpl7hpivcj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  //..\n  return array_sum(array_map(function($num){\n    return pow(ceil($num),\
    \ 2);\n  }, $lst));\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm343ib6.php:23\n\
    Stack trace:\n#0 /tmp/tmpzm343ib6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzm343ib6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $tot = 0;\n  foreach($lst as $l){\n    $tot += pow(ceil($l),2);\n  }\n  return\
    \ $tot;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\necho sum_squares([1,1,1]);\n\
    echo \"<br>\";\n ?>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>3<br>function candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $ceiling = array_map('ceil', $lst);\n  $pow = array_map('pow', $ceiling, array_fill(0,\
    \ count($ceiling), 2));\n  return array_sum($pow);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztpjv6os.php:22\n\
    Stack trace:\n#0 /tmp/tmpztpjv6os.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpztpjv6os.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $key => $value) {\n    $lst[$key] = ceil($value);\n  }\n \
    \ return array_sum(array_map(function($number) {\n    return $number ** 2;\n \
    \ }, $lst));\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nev2sn9.php:24\n\
    Stack trace:\n#0 /tmp/tmp3nev2sn9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3nev2sn9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($num) {\n      return pow(ceil($num), 2);\n\
    \  }, $lst));\n}\n\necho sum_squares([1, 2, 3]);\necho sum_squares([1, 4, 9]);\n\
    echo sum_squares([1, 3, 5, 7]);\necho sum_squares([1.4, 4.2, 0]);\necho sum_squares([-2.4,\
    \ 1, 1]);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqed3usm.php:27\n\
    Stack trace:\n#0 /tmp/tmpcqed3usm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcqed3usm.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $key => $value) {\n        $value = ceil($value);\n    \
    \    $lst[$key] = $value * $value;\n    }\n    return array_sum($lst);\n}\n\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4qnem3x.php:24\n\
    Stack trace:\n#0 /tmp/tmps4qnem3x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps4qnem3x.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ($lst[$i]\
    \ * $lst[$i]);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbct8p2u.php:24\n\
    Stack trace:\n#0 /tmp/tmpfbct8p2u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfbct8p2u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += pow(ceil($value),\
    \ 2);\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56xixjag.php:23\n\
    Stack trace:\n#0 /tmp/tmp56xixjag.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp56xixjag.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return array_sum(array_map(function($value) {\n        return ($value >=\
    \ 0) ? ceil($value) ** 2 : floor($value) ** 2;\n    }, $lst));\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv2dxars.php:22\n\
    Stack trace:\n#0 /tmp/tmpdv2dxars.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdv2dxars.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = [];\n  foreach ($lst as $number) {\n    $number = ceil($number);\n\
    \    $number = $number * $number;\n    $result[] = $number;\n  }\n  $result =\
    \ array_sum($result);\n  return $result;\n}\necho sum_squares([1,2,3]);\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6x35hcl.php:27\n\
    Stack trace:\n#0 /tmp/tmp_6x35hcl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_6x35hcl.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map(function($x) {\n    return ceil($x);\n  }, $lst);\n  return\
    \ array_sum(array_map(function($x) {\n    return $x*$x;\n  }, $lst));\n}\n$answer\
    \ = sum_squares([1,2,3]);\nprint_r(\"$answer \\n\");\n\n$answer = sum_squares([1,4,9]);\n\
    print_r(\"$answer \\n\");\n\n$answer = sum_squares([1,3,5,7]);\nprint_r(\"$answer\
    \ \\n\");\n\n$answer = sum_squares([1.4,4.2,0]);\nprint_r(\"$answer \\n\");\n\n\
    $answer = sum_squares([-2.4,1,1]);\nprint_r(\"$answer \\n\");\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14 \n98 \n84 \n29 \n6 \n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpxt7i2aam.php:38\nStack trace:\n#0 /tmp/tmpxt7i2aam.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxt7i2aam.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += pow(ceil($lst[$i]),\
    \ 2);\n    }\n    return $sum;\n}\n\nprint_r(sum_squares([1,2,3]) . \"\\n\");\n\
    print_r(sum_squares([1,4,9]) . \"\\n\");\nprint_r(sum_squares([1,3,5,7]) . \"\\\
    n\");\nprint_r(sum_squares([1.4,4.2,0]) . \"\\n\");\nprint_r(sum_squares([-2.4,1,1])\
    \ . \"\\n\");\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldhf9ziv.php:29\n\
    Stack trace:\n#0 /tmp/tmpldhf9ziv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpldhf9ziv.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($a) {\n    return pow(ceil($a), 2);\n \
    \ }, $lst));\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprj9qeavv.php:32\n\
    Stack trace:\n#0 /tmp/tmprj9qeavv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprj9qeavv.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0;\n    foreach ($lst as $item) {\n        $result += ceil($item)\
    \ ** 2;\n    }\n    return $result;\n}\n\necho sum_squares([1,2,3]);\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7kyjvag.php:25\n\
    Stack trace:\n#0 /tmp/tmpr7kyjvag.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr7kyjvag.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $num = 0;\n  foreach ($lst as $l) {\n    $num += ceil($l)**2;\n  }\n  return\
    \ $num;\n}\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\n\
    echo sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uwbxum0.php:28\n\
    Stack trace:\n#0 /tmp/tmp0uwbxum0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0uwbxum0.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $new_lst = [];\n    foreach ($lst as $value) {\n        array_push($new_lst,\
    \ ceil($value));\n    }\n    echo array_sum($new_lst) ** 2;\n}\nsum_squares([1,2,3]);\n\
    echo \"<br>\";\nsum_squares([1,4,9]);\necho \"<br>\";\nsum_squares([1,3,5,7]);\n\
    echo \"<br>\";\nsum_squares([1.4,4.2,0]);\necho \"<br>\";\nsum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "36<br>196<br>256<br>49<br>036\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmphe24jlyh.php:32\nStack trace:\n#0 /tmp/tmphe24jlyh.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmphe24jlyh.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \tforeach ($lst as $key => $num) {\n\t\t$lst[$key] = ceil($num);\n\t}\n\treturn\
    \ array_sum(array_map('power', $lst));\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'power' not found or invalid function name in /tmp/tmpftgr78hl.php on line 15\n\
    \nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpftgr78hl.php\
    \ on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftgr78hl.php:23\n\
    Stack trace:\n#0 /tmp/tmpftgr78hl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpftgr78hl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $total = 0;\n  foreach ($lst as $number) {\n    $number = ceil($number);\n\
    \    $total += $number**2;\n  }\n  return $total;\n}\necho sum_squares([1,2,3])\
    \ . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7])\
    \ . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1])\
    \ . \"\\n\";\n ?>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map('ceil', $lst);\n  $sum = 0;\n  foreach ($lst as $value) {\n\
    \    $sum += pow($value, 2);\n  }\n  return $sum;\n}\nprint_r(sum_squares([1,4,9]));\n\
    echo \"\\n\";\nprint_r(sum_squares([1.4,4.2,0]));\necho \"\\n\";\nprint_r(sum_squares([-2.4,1,1]));\n\
    echo \"\\n\";\nprint_r(sum_squares([1,3,5,7]));\necho \"\\n\";\nprint_r(sum_squares([1,2,3]));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "98\n29\n6\n84\n14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6jm2673.php:34\n\
    Stack trace:\n#0 /tmp/tmpd6jm2673.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd6jm2673.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \n}\n$arr = [1,2,3];\n$sum_sqrs = 0;\nfor ($i=0; $i < count($arr); $i++) {\n \
    \ $sum_sqrs += ceil($arr[$i]) ** 2;\n}\necho $sum_sqrs;\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2iie8vu6.php:25\n\
    Stack trace:\n#0 /tmp/tmp2iie8vu6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2iie8vu6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $arr = [];\n  foreach ($lst as $key => $value) {\n    $arr[] = ceil($value)\
    \ * ceil($value);\n  }\n  $res = array_sum($arr);\n  return $res;\n}\n$lst = [1,2,3];\n\
    echo sum_squares($lst);\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzfn50304.php:27\n\
    Stack trace:\n#0 /tmp/tmpzfn50304.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzfn50304.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $n => $v) {\n    $lst[$n] = ceil($v);\n  }\n  return array_sum(array_map(function($v)\
    \ { return $v ** 2; }, $lst));\n}\n$lst = [1,2,3];\necho sum_squares($lst);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ih79iy4.php:24\n\
    Stack trace:\n#0 /tmp/tmp1ih79iy4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1ih79iy4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $item) {\n    $sum += (int)ceil($item) ** 2;\n\
    \  }\n  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($v) { return ceil($v) * ceil($v); }, $lst));\n\
    }\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\n\
    echo sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\"\
    ;\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrc_8wei.php:24\n\
    Stack trace:\n#0 /tmp/tmprrc_8wei.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprrc_8wei.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    //write your code here\n    $n = count($lst);\n    $lst[$n] = 0;\n    $square\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $int_lst = ceil($lst[$i]);\n\
    \        $square += pow($int_lst, 2);\n    }\n    return $square;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvn75t2ft.php:28\n\
    Stack trace:\n#0 /tmp/tmpvn75t2ft.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvn75t2ft.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $arr= [];\n    for ($i=0; $i < count($lst); $i++) {\n        $arr[$i] = ceil($lst[$i]);\n\
    \    }\n    $sum = 0;\n    for ($i=0; $i < count($arr); $i++) {\n        $sum\
    \ += $arr[$i]*$arr[$i];\n    }\n    return $sum;\n}\necho sum_squares([1,2,3])\
    \ . '<br>';\necho sum_squares([1,4,9]) . '<br>';\necho sum_squares([1,3,5,7])\
    \ . '<br>';\necho sum_squares([1.4,4.2,0]) . '<br>';\necho sum_squares([-2.4,1,1])\
    \ . '<br>';\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp6x3qa2k3.php:32\nStack trace:\n#0 /tmp/tmp6x3qa2k3.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6x3qa2k3.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $squareRoot = 0;\n  $count = 0;\n  $newArray = [];\n  $newArray2 = [];\n  $sum\
    \ = 0;\n  foreach ($lst as $key => $value) {\n    $squareRoot = ceil($value);\n\
    \    $newArray[] = $squareRoot;\n  }\n  foreach ($newArray as $key => $value)\
    \ {\n    $count = $value * $value;\n    $newArray2[] = $count;\n  }\n  foreach\
    \ ($newArray2 as $key => $value) {\n    $sum += $value;\n  }\n  return $sum;\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2l8abr7y.php:35\n\
    Stack trace:\n#0 /tmp/tmp2l8abr7y.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp2l8abr7y.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += (int)ceil($lst[$i])\
    \ ** 2;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $array_squared = array_map('ceil', $lst);\n  $squared = array_map(function($int)\
    \ {\n    return $int*$int;\n  }, $array_squared);\n  return array_sum($squared);\n\
    }\necho sum_squares([1,2,3]).PHP_EOL;\necho sum_squares([1,4,9]).PHP_EOL;\necho\
    \ sum_squares([1,3,5,7]).PHP_EOL;\necho sum_squares([1.4,4.2,0]).PHP_EOL;\necho\
    \ sum_squares([-2.4,1,1]).PHP_EOL;\n ?>\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Write your code here\n  // return the sum of squared numbers in the given\
    \ list\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfmsxnll.php:20\n\
    Stack trace:\n#0 /tmp/tmpdfmsxnll.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdfmsxnll.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $v) {\n    $sum += ceil($v) * ceil($v);\n  }\n\
    \  return $sum;\n}\n\n$test = [1,2,3];\n$res = sum_squares($test);\necho \"$res\\\
    n\";\n\n$test = [1,4,9];\n$res = sum_squares($test);\necho \"$res\\n\";\n\n$test\
    \ = [1,3,5,7];\n$res = sum_squares($test);\necho \"$res\\n\";\n\n$test = [1.4,4.2,0];\n\
    $res = sum_squares($test);\necho \"$res\\n\";\n\n$test = [-2.4,1,1];\n$res = sum_squares($test);\n\
    echo \"$res\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphj7z8sx0.php:43\n\
    Stack trace:\n#0 /tmp/tmphj7z8sx0.php(57): test()\n#1 {main}\n  thrown in /tmp/tmphj7z8sx0.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $number) {\n    $number = (int) ceil($number);\n\
    \    $result += $number * $number;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nq0mhu0.php:24\n\
    Stack trace:\n#0 /tmp/tmp7nq0mhu0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7nq0mhu0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $result += pow(ceil($lst[$i]),\
    \ 2);\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqa5z80vr.php:23\n\
    Stack trace:\n#0 /tmp/tmpqa5z80vr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqa5z80vr.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // create a empty array\n  $arr = [];\n  // create the for loop\n  for ($i\
    \ = 0; $i < count($lst); $i++) {\n    // Ceiling + Squared\n    $arr[] = ceil($lst[$i])\
    \ ** 2;\n  }\n  // return the sum\n  return array_sum($arr);\n}\necho sum_squares([1,\
    \ 4, 9]);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "98\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zldac_j.php:28\n\
    Stack trace:\n#0 /tmp/tmp0zldac_j.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0zldac_j.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $arr = [];\n  foreach ($lst as $value) {\n    array_push($arr, ceil($value)\
    \ ** 2);\n  }\n  return array_sum($arr);\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyblz1b0n.php:23\n\
    Stack trace:\n#0 /tmp/tmpyblz1b0n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyblz1b0n.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $key => $value) {\n        $lst[$key] = ceil($value);\n\
    \    }\n    return array_sum(array_map(function($number) {\n        return $number\
    \ * $number;\n    }, $lst));\n}\n\necho sum_squares([1, 2, 3]);\necho \"<br>\"\
    ;\necho sum_squares([1, 4, 9]);\necho \"<br>\";\necho sum_squares([1, 3, 5, 7]);\n\
    echo \"<br>\";\necho sum_squares([1.4, 4.2, 0]);\necho \"<br>\";\necho sum_squares([-2.4,\
    \ 1, 1]);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpslnf2o_q.php:34\nStack trace:\n#0 /tmp/tmpslnf2o_q.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpslnf2o_q.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // your code here\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0_r_4sa.php:19\n\
    Stack trace:\n#0 /tmp/tmph0_r_4sa.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph0_r_4sa.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $num) {\n    $num = ceil($num);\n    $sum[] = $num * $num;\n\
    \  }\n  $final = array_sum($sum);\n  return $final;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8i9zofg.php:25\n\
    Stack trace:\n#0 /tmp/tmpf8i9zofg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf8i9zofg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $v) {\n    $result += ceil($v) ** 2;\n  }\n\
    \  return $result;\n}\n\necho sum_squares([1,2,3]);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppde04mfe.php:25\n\
    Stack trace:\n#0 /tmp/tmppde04mfe.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppde04mfe.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $output = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $output += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n  }\n  return $output;\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqjwdax8.php:23\n\
    Stack trace:\n#0 /tmp/tmpkqjwdax8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkqjwdax8.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += pow(ceil($lst[$i]),\
    \ 2);\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7a_c93jp.php:23\n\
    Stack trace:\n#0 /tmp/tmp7a_c93jp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7a_c93jp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    $sum = 0;\n    foreach ($lst as $number) {\n\
    \        $sum += ceil($number) * ceil($number);\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqk5b_2u4.php:25\n\
    Stack trace:\n#0 /tmp/tmpqk5b_2u4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqk5b_2u4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $key => $value) {\n    $result += ceil($value)\
    \ ** 2;\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6q18v1k.php:23\n\
    Stack trace:\n#0 /tmp/tmpw6q18v1k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpw6q18v1k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \t$newArr = [];\n\tforeach ($lst as $num) {\n\t\t$newArr[] = ceil($num);\n\t}\n\
    \treturn array_sum(array_map(function($x) {\n\t\treturn $x * $x;\n\t}, $newArr));\n\
    }\n\necho sum_squares([1, 2, 3]) . \"<br>\";\necho sum_squares([1, 4, 9]) . \"\
    <br>\";\necho sum_squares([1, 3, 5, 7]) . \"<br>\";\necho sum_squares([1.4, 4.2,\
    \ 0]) . \"<br>\";\necho sum_squares([-2.4, 1, 1]) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpt7ef6e53.php:31\nStack trace:\n#0 /tmp/tmpt7ef6e53.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpt7ef6e53.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $value = ceil($lst[$i]);\n\
    \    $result += $value * $value;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm34y7mar.php:25\n\
    Stack trace:\n#0 /tmp/tmpm34y7mar.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm34y7mar.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value)*ceil($value);\n\
    \  }\n  return $result;\n}\n\necho sum_squares([1,2,3]).\"\\n\";\necho sum_squares([1,4,9]).\"\
    \\n\";\necho sum_squares([1,3,5,7]).\"\\n\";\necho sum_squares([1.4,4.2,0]).\"\
    \\n\";\necho sum_squares([-2.4,1,1]).\"\\n\";\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2890myzq.php:29\n\
    Stack trace:\n#0 /tmp/tmp2890myzq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2890myzq.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $val) {\n    $result += pow(ceil($val), 2);\n\
    \  }\n  return $result;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpt0k2sqli.php:32\nStack trace:\n#0 /tmp/tmpt0k2sqli.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpt0k2sqli.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = [];\n  for ($i = 0; $i < count($lst); $i++) {\n    $result[$i] =\
    \ ceil($lst[$i]);\n  }\n  $result = array_map(function($value) {\n    return $value\
    \ * $value;\n  }, $result);\n  return array_sum($result);\n}\necho sum_squares([1,\
    \ 2, 3]);\necho sum_squares([1, 4, 9]);\necho sum_squares([1, 3, 5, 7]);\necho\
    \ sum_squares([1.4, 4.2, 0]);\necho sum_squares([-2.4, 1, 1]);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpximdbodl.php:31\n\
    Stack trace:\n#0 /tmp/tmpximdbodl.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpximdbodl.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $arr = [];\n    foreach ($lst as $item) {\n        $arr[] = ceil($item) **\
    \ 2;\n    }\n    return array_sum($arr);\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr74tjhrb.php:23\n\
    Stack trace:\n#0 /tmp/tmpr74tjhrb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpr74tjhrb.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $list = array_map('ceil', $lst);\n    $powerOf2 = [];\n    for ($i = 0; $i\
    \ < count($list); $i++) {\n        $powerOf2[] = pow($list[$i], 2);\n    }\n \
    \   $sum = array_sum($powerOf2);\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpqy6qwz.php:25\n\
    Stack trace:\n#0 /tmp/tmpmpqy6qwz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmpqy6qwz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $squared_ints = array_map(function($x) {\n        return (int) ceil($x);\n\
    \    }, $lst);\n    return array_sum(array_map(function($x) {\n        return\
    \ $x ** 2;\n    }, $squared_ints));\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $value) {\n        $value = ceil($value);\n\
    \        $sum += pow($value, 2);\n    }\n    return $sum;\n}\necho sum_squares([1,2,3]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ya2sov5.php:25\n\
    Stack trace:\n#0 /tmp/tmp0ya2sov5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0ya2sov5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $x = [];\n  foreach ($lst as $key => $value) {\n    $x[] = ceil($value)**2;\n\
    \  }\n  return array_sum($x);\n}\n\necho sum_squares([1,2,3]).PHP_EOL;\necho sum_squares([1,4,9]).PHP_EOL;\n\
    echo sum_squares([1,3,5,7]).PHP_EOL;\necho sum_squares([1.4,4.2,0]).PHP_EOL;\n\
    echo sum_squares([-2.4,1,1]).PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6hy66hd.php:29\n\
    Stack trace:\n#0 /tmp/tmpp6hy66hd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpp6hy66hd.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $temp = 0;\n  foreach ($lst as $elem) {\n    $elem = ceil($elem);\n    $temp\
    \ += $elem ** 2;\n  }\n  return $temp;\n}\n\necho sum_squares([1,2,3]);\necho\
    \ \"<br>\";\necho sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\n\
    echo \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmprz9vll19.php:34\nStack trace:\n#0 /tmp/tmprz9vll19.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmprz9vll19.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $count = count($lst);\n  $sum_squares = 0;\n  for ($i = 0; $i < $count; $i++)\
    \ {\n    $sum_squares += ceil($lst[$i]) ** 2;\n  }\n  return $sum_squares;\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nx4u_ij.php:25\n\
    Stack trace:\n#0 /tmp/tmp5nx4u_ij.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5nx4u_ij.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return array_sum(array_map(function($v) {\n        return ceil($v) ** 2;\n\
    \    }, $lst));\n}\necho sum_squares([1,2,3]); // 14\necho \"<br>\";\necho sum_squares([1,4,9]);\
    \ // 98\necho \"<br>\";\necho sum_squares([1,3,5,7]); // 84\necho \"<br>\";\n\
    echo sum_squares([1.4,4.2,0]); // 29\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\
    \ // 6\necho \"<br>\";\necho sum_squares([-4,4,-4]); // 32\necho \"<br>\";\necho\
    \ sum_squares([1.1, 2.2, 3.3]); // 35\necho \"<br>\";\necho sum_squares([7,8,9]);\
    \ // 126\necho \"<br>\";\necho sum_squares([10,15,3]); // 272\necho \"<br>\";\n\
    echo sum_squares([-1,2,3]); // 17\necho \"<br>\";\necho sum_squares([-2,-3,-4]);\
    \ // 29\necho \"<br>\";\necho sum_squares([-3,-3,-3]); // 27\necho \"<br>\";\n\
    echo sum_squares([0,0,0]); // 0\necho \"<br>\";\necho sum_squares([1.1, 1.1, 1.1]);\
    \ // 5\necho \"<br>\";\necho sum_squares([1,2,2]); // 10\necho \"<br>\";\necho\
    \ sum_squares([0.5,1,1.5]); // 5\necho \"<br>\";\necho sum_squares([-3,-2,-1]);\
    \ // 11\necho \"<br>\";\necho sum_squares([-2,-2,-2]); // 12\necho \"<br>\";\n\
    echo sum_squares([-3,-3,-3]); // 27\necho \"<br>\";\necho sum_squares([-2,-2,-2,-2]);\
    \ // 16\necho \"<br>\";\necho sum_squares([-1,-1,-1,-1]); // 4\necho \"<\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzqy380ju.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // your code\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1y_seyh9.php:19\n\
    Stack trace:\n#0 /tmp/tmp1y_seyh9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1y_seyh9.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $value) {\n        $sum += ceil($value) *\
    \ ceil($value);\n    }\n    return $sum;\n}\n$lst = [1, 2, 3];\necho 'Input: $lst\
    \ = [1, 2, 3]';\necho '<br>Output: ' . sum_squares($lst);\n\necho '<br><br>';\n\
    \n$lst = [1, 4, 9];\necho 'Input: $lst = [1, 4, 9]';\necho '<br>Output: ' . sum_squares($lst);\n\
    \necho '<br><br>';\n\n$lst = [1, 3, 5, 7];\necho 'Input: $lst = [1, 3, 5, 7]';\n\
    echo '<br>Output: ' . sum_squares($lst);\n\necho '<br><br>';\n\n$lst = [1.4, 4.2,\
    \ 0];\necho 'Input: $lst = [1.4, 4.2, 0]';\necho '<br>Output: ' . sum_squares($lst);\n\
    \necho '<br><br>';\n\n$lst = [-2.4, 1, 1];\necho 'Input: $lst = [-2.4, 1, 1]';\n\
    echo '<br>Output: ' . sum_squares($lst);\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Input: $lst = [1, 2, 3]<br>Output: 14<br><br>Input: $lst = [1, 4, 9]<br>Output:\
    \ 98<br><br>Input: $lst = [1, 3, 5, 7]<br>Output: 84<br><br>Input: $lst = [1.4,\
    \ 4.2, 0]<br>Output: 29<br><br>Input: $lst = [-2.4, 1, 1]<br>Output: 6\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmppljq8rva.php:50\nStack trace:\n\
    #0 /tmp/tmppljq8rva.php(64): test()\n#1 {main}\n  thrown in /tmp/tmppljq8rva.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst2 = [];\n  for ($i=0; $i < count($lst); $i++) {\n    $lst2[] = ceil($lst[$i])\
    \ ** 2;\n  }\n  return array_sum($lst2);\n}\n\necho sum_squares([1,2,3]) . '<br>';\n\
    echo sum_squares([1,4,9]) . '<br>';\necho sum_squares([1,3,5,7]) . '<br>';\necho\
    \ sum_squares([1.4,4.2,0]) . '<br>';\necho sum_squares([-2.4,1,1]) . '<br>';\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp5579uizn.php:29\nStack trace:\n#0 /tmp/tmp5579uizn.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp5579uizn.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $returnValue = 0;\n  foreach ($lst as $key => $value) {\n    $returnValue +=\
    \ ceil($value) ** 2;\n  }\n  return $returnValue;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdy101e0l.php:24\n\
    Stack trace:\n#0 /tmp/tmpdy101e0l.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdy101e0l.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $key => $value) {\n        $lst[$key] = ceil($value);\n\
    \    }\n    foreach ($lst as $key => $value) {\n        $lst[$key] = $value **\
    \ 2;\n    }\n    $result = array_sum($lst);\n    return $result;\n}\necho sum_squares([1,\
    \ 2, 3]) . \"<br>\";\necho sum_squares([1, 4, 9]) . \"<br>\";\necho sum_squares([1,\
    \ 3, 5, 7]) . \"<br>\";\necho sum_squares([1.4, 4.2, 0]) . \"<br>\";\necho sum_squares([-2.4,\
    \ 1, 1]) . \"<br>\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpk3qg92ej.php:31\nStack trace:\n#0 /tmp/tmpk3qg92ej.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpk3qg92ej.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytjxp5qm.php:24\n\
    Stack trace:\n#0 /tmp/tmpytjxp5qm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpytjxp5qm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $key => $value) {\n    $lst[$key] = ceil($value);\n  }\n \
    \ return array_sum(array_map(function($x) {\n    return $x ** 2;\n  }, $lst));\n\
    }\nprint_r(sum_squares([1, 2, 3]));\nprint_r(sum_squares([1, 4, 9]));\nprint_r(sum_squares([1,\
    \ 3, 5, 7]));\nprint_r(sum_squares([1.4, 4.2, 0]));\nprint_r(sum_squares([-2.4,\
    \ 1, 1]));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vuy6i12.php:29\n\
    Stack trace:\n#0 /tmp/tmp0vuy6i12.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0vuy6i12.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $arr = array_map('ceil', $lst);\n  $sum = 0;\n  foreach ($arr as $item) {\n\
    \    $sum += $item**2;\n  }\n  return $sum;\n}\necho sum_squares([1,3,5,7]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "84\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xews98t.php:25\n\
    Stack trace:\n#0 /tmp/tmp2xews98t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2xews98t.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $lst = array_map('ceil', $lst);\n    $result = 0;\n    foreach ($lst as $elem)\
    \ {\n        $result += $elem * $elem;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefah7xm_.php:25\n\
    Stack trace:\n#0 /tmp/tmpefah7xm_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpefah7xm_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum=0;\n    foreach($lst as $val){\n        $sum+=ceil($val)*ceil($val);\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbft87i8z.php:24\n\
    Stack trace:\n#0 /tmp/tmpbft87i8z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbft87i8z.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = [];\n  foreach ($lst as $value) {\n    $value = ceil($value);\n \
    \   $result[] = $value * $value;\n  }\n  return array_sum($result);\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb0plhjk9.php:24\n\
    Stack trace:\n#0 /tmp/tmpb0plhjk9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb0plhjk9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $key => $val) {\n    $sum += ceil($val) * ceil($val);\n\
    \  }\n  return $sum;\n}\n\nprint_r(sum_squares([1,2,3]));\nprint_r(sum_squares([1,4,9]));\n\
    print_r(sum_squares([1,3,5,7]));\nprint_r(sum_squares([1.4,4.2,0]));\nprint_r(sum_squares([-2.4,1,1]));\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydnak8p9.php:30\n\
    Stack trace:\n#0 /tmp/tmpydnak8p9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpydnak8p9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($num)\
    \ { return $num*$num; }, $lst));\n}\necho sum_squares([1,2,3]); // 14\necho sum_squares([1,4,9]);\
    \ // 98\necho sum_squares([1,3,5,7]); // 84\necho sum_squares([1.4,4.2,0]); //\
    \ 29\necho sum_squares([-2.4,1,1]); // 6\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwsutwqrf.php:25\n\
    Stack trace:\n#0 /tmp/tmpwsutwqrf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwsutwqrf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    $squared_numbers = array_map(function($a){return\
    \ ceil($a) * ceil($a);}, $lst);\n    return array_sum($squared_numbers);\n}\n\n\
    echo sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\n\
    echo sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppk4z_iz0.php:27\n\
    Stack trace:\n#0 /tmp/tmppk4z_iz0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppk4z_iz0.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // your code here\n  $arr = [];\n  foreach ($lst as $key => $value) {\n   \
    \ $arr[] = pow(ceil($value), 2);\n  }\n  return array_sum($arr);\n}\n$input_lst\
    \ = [1,2,3];\nprint sum_squares($input_lst);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmp_fz9xe.php:26\n\
    Stack trace:\n#0 /tmp/tmpmp_fz9xe.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmp_fz9xe.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdi5on29.php:20\n\
    Stack trace:\n#0 /tmp/tmpsdi5on29.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsdi5on29.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0;\n    foreach ($lst as $val) {\n        $result += ceil($val)\
    \ ** 2;\n    }\n    return $result;\n}\n\nprint_r(sum_squares([1,2,3])); // 14\n\
    print_r(sum_squares([1,4,9])); // 98\nprint_r(sum_squares([1,3,5,7])); // 84\n\
    print_r(sum_squares([1.4,4.2,0])); // 29\nprint_r(sum_squares([-2.4,1,1])); //\
    \ 6\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8z6g2az2.php:29\n\
    Stack trace:\n#0 /tmp/tmp8z6g2az2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8z6g2az2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $value) {\n        $sum += pow(ceil($value),\
    \ 2);\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsr9hl36c.php:23\n\
    Stack trace:\n#0 /tmp/tmpsr9hl36c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsr9hl36c.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($n) { return ceil($n) ** 2; }, $lst));\n\
    }\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\n\
    echo sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\"\
    ;\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeziqps6.php:24\n\
    Stack trace:\n#0 /tmp/tmpaeziqps6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpaeziqps6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return (int) array_sum(array_map(function($a) {\n    return ceil($a) * ceil($a);\n\
    \  }, $lst));\n}\n\necho(sum_squares([1,2,3]) . \"\\n\");\necho(sum_squares([1,4,9])\
    \ . \"\\n\");\necho(sum_squares([1,3,5,7]) . \"\\n\");\necho(sum_squares([1.4,4.2,0])\
    \ . \"\\n\");\necho(sum_squares([-2.4,1,1]) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $ceil = array_map('ceil', $lst);\n  $ans = 0;\n  foreach ($ceil as $v) {\n\
    \    $ans += $v * $v;\n  }\n  return $ans;\n}\necho sum_squares([1,2,3]);\necho\
    \ \"\\n\";\necho sum_squares([1,4,9]);\necho \"\\n\";\necho sum_squares([1,3,5,7]);\n\
    echo \"\\n\";\necho sum_squares([1.4,4.2,0]);\necho \"\\n\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"\\n\";\n ?>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($v) { return ceil($v) ** 2; }, $lst));\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbs58na0t.php:20\n\
    Stack trace:\n#0 /tmp/tmpbs58na0t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbs58na0t.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n  }\n  return $sum;\n}\n\necho sum_squares([-2.4,1,1]) .\
    \ \"<br>\";\necho sum_squares([1.4,4.2,0]) . \"<br>\";\necho sum_squares([1,3,5,7])\
    \ . \"<br>\";\necho sum_squares([1,4,9]) . \"<br>\";\necho sum_squares([1,2,3])\
    \ . \"<br>\";\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6<br>29<br>84<br>98<br>14<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpazsinmz3.php:30\nStack trace:\n#0 /tmp/tmpazsinmz3.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpazsinmz3.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $output = 0;\n  foreach ($lst as $number) {\n    $number = ceil($number);\n\
    \    $output += $number * $number;\n  }\n  return $output;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebtuljl8.php:24\n\
    Stack trace:\n#0 /tmp/tmpebtuljl8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpebtuljl8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return array_sum(array_map('intval', array_map('ceil', $lst)));\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpse6seay8.php:20\n\
    Stack trace:\n#0 /tmp/tmpse6seay8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpse6seay8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $number) {\n    $number = ceil($number);\n\
    \    $result += $number * $number;\n  }\n  return $result;\n}\n$lst = [1,2,3];\n\
    print_r(sum_squares($lst));\necho \"\\n\";\n\n$lst = [1,4,9];\nprint_r(sum_squares($lst));\n\
    echo \"\\n\";\n\n$lst = [1,3,5,7];\nprint_r(sum_squares($lst));\necho \"\\n\"\
    ;\n\n$lst = [1.4,4.2,0];\nprint_r(sum_squares($lst));\necho \"\\n\";\n\n$lst =\
    \ [-2.4,1,1];\nprint_r(sum_squares($lst));\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihpi14u5.php:44\n\
    Stack trace:\n#0 /tmp/tmpihpi14u5.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpihpi14u5.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $array = array_map(function($val){\n        return ceil($val);\n    }, $lst);\n\
    \    return array_sum(array_map(function($val){\n        return $val * $val;\n\
    \    }, $array));\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90k5j2e7.php:24\n\
    Stack trace:\n#0 /tmp/tmp90k5j2e7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp90k5j2e7.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n  }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho\
    \ sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\n\
    echo sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0znwr8ru.php:28\n\
    Stack trace:\n#0 /tmp/tmp0znwr8ru.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0znwr8ru.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    //Add code here\n    $array = [];\n    foreach ($lst as $l) {\n        $l\
    \ = ceil($l);\n        $array[] = $l * $l;\n    }\n    return array_sum($array);\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdfeq6_l.php:25\n\
    Stack trace:\n#0 /tmp/tmpbdfeq6_l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbdfeq6_l.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $arr = array_map(function($e){\n        return ceil($e);\n    }, $lst);\n\
    \    $result = array_map(function($e){\n        return $e*$e;\n    }, $arr);\n\
    \    return array_sum($result);\n}\necho sum_squares([1,2,3]) . \"<br>\";\necho\
    \ sum_squares([1,4,9]) . \"<br>\";\necho sum_squares([1,3,5,7]) . \"<br>\";\n\
    echo sum_squares([1.4,4.2,0]) . \"<br>\";\necho sum_squares([-2.4,1,1]) . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjyg__zp4.php:30\nStack trace:\n#0 /tmp/tmpjyg__zp4.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjyg__zp4.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += round($lst[$i]);\n\
    \  }\n  return $sum * $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\n\
    echo sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\necho\
    \ \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "36<br>196<br>256<br>25<br>0<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnjjr7lop.php:34\nStack trace:\n#0 /tmp/tmpnjjr7lop.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnjjr7lop.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0;\n    $length = count($lst);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result += intval(ceil($lst[$i]));\n    }\n    return $result\
    \ ** 2;\n}\n\necho sum_squares([1, 2, 3]);\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "36\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2a5rayi2.php:26\n\
    Stack trace:\n#0 /tmp/tmp2a5rayi2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2a5rayi2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $count = count($lst);\n  $result = 0;\n  for ($i = 0; $i < $count; $i++) {\n\
    \    $result += ceil($lst[$i]) ** 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc4wvbq3.php:25\n\
    Stack trace:\n#0 /tmp/tmpvc4wvbq3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvc4wvbq3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Write your code here\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9q2kjur6.php:24\n\
    Stack trace:\n#0 /tmp/tmp9q2kjur6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9q2kjur6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $numbers = array_map('ceil', $lst);\n  $sum = 0;\n  foreach ($numbers as $number)\
    \ {\n    $sum += $number ** 2;\n  }\n  return $sum;\n}\n\nprint sum_squares([1,2,3])\
    \ . \"\\n\";\nprint sum_squares([1,4,9]) . \"\\n\";\nprint sum_squares([1,3,5,7])\
    \ . \"\\n\";\nprint sum_squares([1.4,4.2,0]) . \"\\n\";\nprint sum_squares([-2.4,1,1])\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ya8hqq0.php:30\n\
    Stack trace:\n#0 /tmp/tmp9ya8hqq0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9ya8hqq0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $arr = array_map('ceil', $lst);\n  $count = count($arr);\n  $result = 0;\n\
    \  for ($i = 0; $i < $count; $i++) {\n    $result += $arr[$i] * $arr[$i];\n  }\n\
    \  return $result;\n}\necho sum_squares([1, 2, 3]); // 14\necho sum_squares([1,\
    \ 4, 9]); // 98\necho sum_squares([1, 3, 5, 7]); // 84\necho sum_squares([1.4,\
    \ 4.2, 0]); // 29\necho sum_squares([-2.4, 1, 1]); // 6\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrrk4jqj.php:30\n\
    Stack trace:\n#0 /tmp/tmpnrrk4jqj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrrk4jqj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmb531e5.php:23\n\
    Stack trace:\n#0 /tmp/tmpxmb531e5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxmb531e5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $value) {\n        $sum += ceil($value) **\
    \ 2;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzarsdyg_.php:23\n\
    Stack trace:\n#0 /tmp/tmpzarsdyg_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzarsdyg_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $nums = array_map('ceil', $lst);\n  foreach ($nums as $num) {\n    $squares[]\
    \ = $num * $num;\n  }\n  $squares = array_sum($squares);\n  return $squares;\n\
    }\necho sum_squares([1,2,3]);\n ?>\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $squared = array_map(function($number) {\n    return ceil($number) ** 2;\n\
    \  }, $lst);\n  return array_sum($squared);\n}\necho sum_squares([1,2,3]);\necho\
    \ sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\n\
    echo sum_squares([-2.4,1,1]);\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmevrefz6.php:28\n\
    Stack trace:\n#0 /tmp/tmpmevrefz6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmevrefz6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = [];\n    foreach ($lst as $item) {\n        $result[] = ceil($item);\n\
    \    }\n    return array_sum(array_map(function ($value) {\n        return $value\
    \ * $value;\n    }, $result));\n}\necho sum_squares([1,2,3]) . PHP_EOL;\necho\
    \ sum_squares([1,4,9]) . PHP_EOL;\necho sum_squares([1,3,5,7]) . PHP_EOL;\necho\
    \ sum_squares([1.4,4.2,0]) . PHP_EOL;\necho sum_squares([-2.4,1,1]) . PHP_EOL;\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9ne_apb.php:30\n\
    Stack trace:\n#0 /tmp/tmpg9ne_apb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpg9ne_apb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map('ceil', $lst);\n  $total = 0;\n  foreach ($lst as $val) {\n\
    \    $total += $val * $val;\n  }\n  return $total;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxew2qyo5.php:25\n\
    Stack trace:\n#0 /tmp/tmpxew2qyo5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxew2qyo5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $newList = [];\n  foreach ($lst as $number) {\n    $newList[] = ceil($number);\n\
    \  }\n  $result = 0;\n  foreach ($newList as $number) {\n    $result += $number\
    \ * $number;\n  }\n  return $result;\n}\necho sum_squares([1,2,3]) . \"<br>\"\
    ;\necho sum_squares([1,4,9]) . \"<br>\";\necho sum_squares([1,3,5,7]) . \"<br>\"\
    ;\necho sum_squares([1.4,4.2,0]) . \"<br>\";\necho sum_squares([-2.4,1,1]) . \"\
    <br>\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplqd2wmdg.php:32\nStack trace:\n#0 /tmp/tmplqd2wmdg.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmplqd2wmdg.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $a = 0;\n  foreach ($lst as $v) {\n    $a += pow(round($v), 2);\n  }\n  return\
    \ $a;\n}\n\necho sum_squares([1,2,3]);\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdqhq0lf_.php:25\n\
    Stack trace:\n#0 /tmp/tmpdqhq0lf_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdqhq0lf_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // your code here\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_wl5gyr.php:19\n\
    Stack trace:\n#0 /tmp/tmpn_wl5gyr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpn_wl5gyr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n\
    \  }\n  return $sum;\n}\n\n$lst = [1,2,3];\necho \"The sum of \" . implode(\"\
    \ + \", $lst) . \" is: \" . sum_squares($lst) . \"<br />\";\n$lst = [1,4,9];\n\
    echo \"The sum of \" . implode(\" + \", $lst) . \" is: \" . sum_squares($lst)\
    \ . \"<br />\";\n$lst = [1,3,5,7];\necho \"The sum of \" . implode(\" + \", $lst)\
    \ . \" is: \" . sum_squares($lst) . \"<br />\";\n$lst = [1.4,4.2,0];\necho \"\
    The sum of \" . implode(\" + \", $lst) . \" is: \" . sum_squares($lst) . \"<br\
    \ />\";\n$lst = [-2.4,1,1];\necho \"The sum of \" . implode(\" + \", $lst) . \"\
    \ is: \" . sum_squares($lst) . \"<br />\";\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The sum of 1 + 2 + 3 is: 14<br />The sum of 1 + 4 + 9 is: 98<br />The sum\
    \ of 1 + 3 + 5 + 7 is: 84<br />The sum of 1.4 + 4.2 + 0 is: 29<br />The sum of\
    \ -2.4 + 1 + 1 is: 6<br />\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizp2jma5.php:34\n\
    Stack trace:\n#0 /tmp/tmpizp2jma5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpizp2jma5.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $key => $value) {\n    $lst[$key] = ceil($value);\n  }\n \
    \ return array_sum(array_map(function($n) { return $n * $n; }, $lst));\n}\n\n\
    echo(sum_squares([1,2,3]));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0upx23e8.php:24\n\
    Stack trace:\n#0 /tmp/tmp0upx23e8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0upx23e8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $s = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $s += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n    }\n    return $s;\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8gjseoix.php:23\n\
    Stack trace:\n#0 /tmp/tmp8gjseoix.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8gjseoix.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3hcasxnx.php:23\n\
    Stack trace:\n#0 /tmp/tmp3hcasxnx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3hcasxnx.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $key => $value) {\n    $result += ceil($value)\
    \ * ceil($value);\n  }\n  return $result;\n}\necho sum_squares([1,2,3]);\necho\
    \ \"\\n\";\necho sum_squares([1,4,9]);\necho \"\\n\";\necho sum_squares([1,3,5,7]);\n\
    echo \"\\n\";\necho sum_squares([1.4,4.2,0]);\necho \"\\n\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3uzii9m.php:33\n\
    Stack trace:\n#0 /tmp/tmpl3uzii9m.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpl3uzii9m.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \t$lst = array_map('ceil', $lst);\n\treturn array_sum(array_map(function($a) {\
    \ return $a * $a; }, $lst));\n}\n$lst = [1,2,3];\necho sum_squares($lst);\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbmx_mpm.php:22\n\
    Stack trace:\n#0 /tmp/tmpjbmx_mpm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjbmx_mpm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $num = 0;\n  foreach ($lst as $square) {\n    $num += ceil($square);\n  }\n\
    \  return $num * $num;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "36\n196\n256\n49\n0\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpziob47s8.php:34\nStack trace:\n#0 /tmp/tmpziob47s8.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpziob47s8.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $key => $num) {\n    $lst[$key] = ceil($num);\n  }\n  return\
    \ array_sum(array_map(function($num) { return $num * $num; }, $lst));\n}\necho\
    \ \"test #1: \". (sum_squares([1,2,3]) == 14 ? \"pass\\n\" : \"fail\\n\");\necho\
    \ \"test #2: \". (sum_squares([1,4,9]) == 98 ? \"pass\\n\" : \"fail\\n\");\necho\
    \ \"test #3: \". (sum_squares([1,3,5,7]) == 84 ? \"pass\\n\" : \"fail\\n\");\n\
    echo \"test #4: \". (sum_squares([1.4,4.2,0]) == 29 ? \"pass\\n\" : \"fail\\n\"\
    );\necho \"test #5: \". (sum_squares([-2.4,1,1]) == 6 ? \"pass\\n\" : \"fail\\\
    n\");\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "test #1: pass\ntest #2: pass\ntest #3: pass\ntest #4: pass\ntest #5: pass\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp312xvmll.php:27\nStack\
    \ trace:\n#0 /tmp/tmp312xvmll.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp312xvmll.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $array = [];\n    foreach ($lst as $key => $value) {\n        $array[] =\
    \ ceil($value) ** 2;\n    }\n    return array_sum($array);\n}\n\necho sum_squares([1,\
    \ 2, 3]) . \"\\n\";\necho sum_squares([1, 4, 9]) . \"\\n\";\necho sum_squares([1,\
    \ 3, 5, 7]) . \"\\n\";\necho sum_squares([1.4, 4.2, 0]) . \"\\n\";\necho sum_squares([-2.4,\
    \ 1, 1]) . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx04u2r2.php:29\n\
    Stack trace:\n#0 /tmp/tmptx04u2r2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptx04u2r2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $numbers = array_map(function($number) {\n        return ceil($number);\n\
    \    }, $lst);\n    $numbers = array_map(function($number) {\n        return $number\
    \ ** 2;\n    }, $numbers);\n    return array_sum($numbers);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3twb53u.php:25\n\
    Stack trace:\n#0 /tmp/tmpq3twb53u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq3twb53u.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $lst = array_map(function($n) {\n        return ceil($n);\n    }, $lst);\n\
    \    return array_sum(array_map(function($n) {\n        return $n * $n;\n    },\
    \ $lst));\n}\necho \"Test 1\\n\";\necho sum_squares([1,2,3]) == 14;\necho \"\\\
    nTest 2\\n\";\necho sum_squares([1,4,9]) == 98;\necho \"\\nTest 3\\n\";\necho\
    \ sum_squares([1,3,5,7]) == 84;\necho \"\\nTest 4\\n\";\necho sum_squares([1.4,4.2,0])\
    \ == 29;\necho \"\\nTest 5\\n\";\necho sum_squares([-2.4,1,1]) == 6;\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Test 1\n1\nTest 2\n1\nTest 3\n1\nTest 4\n1\nTest 5\n1\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpj98fh43c.php:34\nStack trace:\n#0 /tmp/tmpj98fh43c.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpj98fh43c.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3jqiz0i.php:24\n\
    Stack trace:\n#0 /tmp/tmpz3jqiz0i.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz3jqiz0i.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_map(function($n) {\n    return ceil($n);\n  }, $lst);\n  $sum\
    \ = 0;\n  foreach ($lst as $n) {\n    $sum += $n * $n;\n  }\n  return $sum;\n\
    }\n\necho sum_squares([1, 2, 3]);\necho \"<br>\";\necho sum_squares([1, 4, 9]);\n\
    echo \"<br>\";\necho sum_squares([1, 3, 5, 7]);\necho \"<br>\";\necho sum_squares([1.4,\
    \ 4.2, 0]);\necho \"<br>\";\necho sum_squares([-2.4, 1, 1]);\necho \"<br>\";\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14<br>98<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpkx8hg8zl.php:38\nStack trace:\n#0 /tmp/tmpkx8hg8zl.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkx8hg8zl.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0;\n    foreach ($lst as $item) {\n        $result += ceil($item)\
    \ * ceil($item);\n    }\n    return $result;\n}\n\n$lst = [1,2,3];\necho sum_squares($lst);\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod9f0y9k.php:27\n\
    Stack trace:\n#0 /tmp/tmpod9f0y9k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpod9f0y9k.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($x) { return ceil($x) ** 2; }, $lst));\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwc7gzi8i.php:20\n\
    Stack trace:\n#0 /tmp/tmpwc7gzi8i.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwc7gzi8i.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $intValue = ceil($value);\n  \
    \  $sum += $intValue*$intValue;\n  }\n  return $sum;\n}\necho sum_squares([1,2,3])\
    \ . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7])\
    \ . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1])\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97b468_7.php:29\n\
    Stack trace:\n#0 /tmp/tmp97b468_7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp97b468_7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwoezqmnc.php:19\n\
    Stack trace:\n#0 /tmp/tmpwoezqmnc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwoezqmnc.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $result += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $result;\n}\n\necho sum_squares([1, 2, 3]);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6okjueu.php:25\n\
    Stack trace:\n#0 /tmp/tmpf6okjueu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf6okjueu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $newArray = [];\n    foreach ($lst as $num) {\n        $num = ceil($num);\n\
    \        $num *= $num;\n        array_push($newArray, $num);\n    }\n    return\
    \ array_sum($newArray);\n}\nprint_r(sum_squares([1,2,3]) . \"\\n\");\nprint_r(sum_squares([1,4,9])\
    \ . \"\\n\");\nprint_r(sum_squares([1,3,5,7]) . \"\\n\");\nprint_r(sum_squares([1.4,4.2,0])\
    \ . \"\\n\");\nprint_r(sum_squares([-2.4,1,1]) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccdryexn.php:30\n\
    Stack trace:\n#0 /tmp/tmpccdryexn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpccdryexn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $val = ceil($lst[$i]);\n\
    \        $sum += $val * $val;\n    }\n    return $sum;\n}\n$lst = [1,2,3];\necho\
    \ sum_squares($lst) . \"\\n\";\n$lst = [1,4,9];\necho sum_squares($lst) . \"\\\
    n\";\n$lst = [1,3,5,7];\necho sum_squares($lst) . \"\\n\";\n$lst = [1.4,4.2,0];\n\
    echo sum_squares($lst) . \"\\n\";\n$lst = [-2.4,1,1];\necho sum_squares($lst)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdcztor1.php:34\n\
    Stack trace:\n#0 /tmp/tmpsdcztor1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpsdcztor1.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $squared = array_map(function($n) {\n    return pow(ceil($n), 2);\n  }, $lst);\n\
    \  return array_sum($squared);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxd4fkw_.php:22\n\
    Stack trace:\n#0 /tmp/tmpfxd4fkw_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfxd4fkw_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = [];\n  foreach ($lst as $value) {\n    $result[] = ceil($value) **\
    \ 2;\n  }\n  return array_sum($result);\n}\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjprf242.php:23\n\
    Stack trace:\n#0 /tmp/tmpwjprf242.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwjprf242.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nprint sum_squares([1, 2, 3]);\nprint sum_squares([1,\
    \ 4, 9]);\nprint sum_squares([1, 3, 5, 7]);\nprint sum_squares([1.4, 4.2, 0]);\n\
    print sum_squares([-2.4, 1, 1]);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884296\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcifym35l.php:29\n\
    Stack trace:\n#0 /tmp/tmpcifym35l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcifym35l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return array_sum(array_map(function($value) { return pow(ceil($value), 2);\
    \ }, $lst));\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgd5jtrr.php:19\n\
    Stack trace:\n#0 /tmp/tmphgd5jtrr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphgd5jtrr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $new_arr = [];\n  foreach ($lst as $item) {\n    array_push($new_arr, ceil($item));\n\
    \  }\n  return array_sum(array_map('reduce', $new_arr));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_map() expects parameter 1 to be a valid callback, function\
    \ 'reduce' not found or invalid function name in /tmp/tmprokpoju1.php on line\
    \ 16\n\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmprokpoju1.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprokpoju1.php:23\n\
    Stack trace:\n#0 /tmp/tmprokpoju1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprokpoju1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += pow(ceil($number), 2);\n\
    \  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxwbu9zm.php:23\n\
    Stack trace:\n#0 /tmp/tmpzxwbu9zm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzxwbu9zm.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $arr = array_map(function($a){\n        return ceil($a) * ceil($a);\n   \
    \ }, $lst);\n    return array_sum($arr);\n}\necho sum_squares([1,4,9]) . \"<br>\"\
    ;\necho sum_squares([1,2,3]) . \"<br>\";\necho sum_squares([1,3,5,7]) . \"<br>\"\
    ;\necho sum_squares([1.4,4.2,0]) . \"<br>\";\necho sum_squares([-2.4,1,1]) . \"\
    <br>\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "98<br>14<br>84<br>29<br>6<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplx1_258s.php:27\nStack trace:\n#0 /tmp/tmplx1_258s.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmplx1_258s.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $arr = [];\n    foreach ($lst as $num) {\n        $arr[] = ceil($num) * ceil($num);\n\
    \    }\n    return array_sum($arr);\n}\necho \"For lst = [1,2,3] the output should\
    \ be 14: \" . sum_squares([1,2,3]) . PHP_EOL;\necho \"For lst = [1,4,9] the output\
    \ should be 98: \" . sum_squares([1,4,9]) . PHP_EOL;\necho \"For lst = [1,3,5,7]\
    \ the output should be 84: \" . sum_squares([1,3,5,7]) . PHP_EOL;\necho \"For\
    \ lst = [1.4,4.2,0] the output should be 29: \" . sum_squares([1.4,4.2,0]) . PHP_EOL;\n\
    echo \"For lst = [-2.4,1,1] the output should be 6: \" . sum_squares([-2.4,1,1])\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "For lst = [1,2,3] the output should be 14: 14\nFor lst = [1,4,9] the output\
    \ should be 98: 98\nFor lst = [1,3,5,7] the output should be 84: 84\nFor lst =\
    \ [1.4,4.2,0] the output should be 29: 29\nFor lst = [-2.4,1,1] the output should\
    \ be 6: 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_845kaw.php:28\n\
    Stack trace:\n#0 /tmp/tmpx_845kaw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx_845kaw.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_62_derivative
language: php
results:
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $derivative = [];\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n \
    \   }\n    return $derivative;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    $length\
    \ = count($xs);\n    for ($i = 1; $i < $length; $i++) {\n        $result[] = $i\
    \ * $xs[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // Insert your code here.\n\
    \    // You can also edit the code above to modify the test cases.\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph491t987.php:19\n\
    Stack trace:\n#0 /tmp/tmph491t987.php(26): test()\n#1 {main}\n  thrown in /tmp/tmph491t987.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $xs = array_slice($xs, 1);\n\
    \    $out = [];\n    $i = 0;\n    while ($i < count($xs)) {\n        $out[] =\
    \ $xs[$i] * ($i + 1);\n        $i++;\n    }\n    return $out;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if (empty($xs)) {\n    return\
    \ [];\n  }\n  if (count($xs) == 1) {\n    return [0];\n  }\n  $result = [];\n\
    \  for ($i = 1; $i < count($xs); $i++) {\n    $result[] = $i * $xs[$i];\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72l4mnoz.php:32\n\
    Stack trace:\n#0 /tmp/tmp72l4mnoz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp72l4mnoz.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $dx = [];\n  for ($i = 1; $i\
    \ < count($xs); $i++) {\n    $dx[] = $i * $xs[$i];\n  }\n  return $dx;\n}\n\n\
    $derivative = array(\n    array(1, 0, 0, 0, 0),\n    array(0, 1, 0, 0, 0),\n \
    \   array(0, 0, 2, 0, 0),\n    array(0, 0, 0, 3, 0),\n    array(0, 0, 0, 0, 4),\n\
    );\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $xs_count = count($xs);\n\
    \    if ($xs_count < 2) {\n        return $xs;\n    }\n    $ret = [];\n    for\
    \ ($i = 1; $i < $xs_count; $i++) {\n        $ret[] = $i * $xs[$i];\n    }\n  \
    \  return $ret;\n}\n\n/**\n * @param $xs\n * @param $degree\n * @return array\n\
    \ */\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprohpsdsh.php:35\n\
    Stack trace:\n#0 /tmp/tmprohpsdsh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprohpsdsh.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    if\
    \ ($len == 1) {\n        return array(0);\n    }\n    $ys = array();\n    for\
    \ ($i = 1; $i < $len; $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6y4e12l.php:30\n\
    Stack trace:\n#0 /tmp/tmpk6y4e12l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk6y4e12l.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $rs = [];\n    foreach($xs\
    \ as $i => $x) {\n        if ($i === 0) {\n            continue;\n        }\n\
    \        $rs[] = $i * $x;\n    }\n    return $rs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = [];\n  $d = 0;\n  for\
    \ ($i = 1; $i < count($xs); $i++) {\n    $ys[$d] = $i * $xs[$i];\n    $d++;\n\
    \  }\n  return $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (empty($xs)) {\n     \
    \   return [];\n    }\n\n    if (sizeof($xs) == 1) {\n        return [0];\n  \
    \  }\n\n    $result = [];\n    for ($i = 1; $i < sizeof($xs); $i++) {\n      \
    \  $result[] = $i * $xs[$i];\n    }\n\n    return $result;\n}\n\nvar_dump(derivative([3,\
    \ 1, 2, 4, 5]));\nvar_dump(derivative([1, 2, 3]));\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(4)\n  [2]=>\n  int(12)\n\
    \  [3]=>\n  int(20)\n}\narray(2) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(6)\n}\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp5iei13t9.php:37\nStack\
    \ trace:\n#0 /tmp/tmp5iei13t9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5iei13t9.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (!$xs) {\n        return\
    \ [];\n    }\n    $len = count($xs);\n    if ($len == 1) {\n        return [0];\n\
    \    }\n    $ans = [];\n    for ($i = 1; $i < $len; $i++) {\n        $ans[] =\
    \ $i * $xs[$i];\n    }\n    return $ans;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wmu4r41.php:33\n\
    Stack trace:\n#0 /tmp/tmp6wmu4r41.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6wmu4r41.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $degree = count($xs) - 1;\n\
    \    if ($degree <= 0) {\n        return [0];\n    }\n    $ret = [];\n    for\
    \ ($i = 1; $i <= $degree; $i++) {\n        $ret[] = $i * $xs[$i];\n    }\n   \
    \ return $ret;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk36lwv5h.php:30\n\
    Stack trace:\n#0 /tmp/tmpk36lwv5h.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk36lwv5h.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) < 2) return\
    \ [];\n    $xs1 = [];\n    $n = count($xs);\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $xs1[] = $i * $xs[$i];\n    }\n    return $xs1;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) == 0) {\n\
    \        return [];\n    }\n    $ys = [];\n    for ($i = 1; $i < count($xs); $i++)\
    \ {\n        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\n$xs = [3, 1,\
    \ 2, 4, 5];\nprint_r(derivative($xs));\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 12\n    [3] => 20\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // TODO: implement derivative\n\
    \    $s = count($xs);\n    for ($i = 0; $i < $s - 1; $i++){\n        $xs[$i] =\
    \ $xs[$i + 1] * ($i + 1);\n    }\n    array_pop($xs);\n    return $xs;\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    foreach ($xs\
    \ as $i => $x) {\n        if ($i == 0) {\n            continue;\n        }\n\n\
    \        $ys[] = $i * $x;\n    }\n\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $derivative = [];\n  $i = 0;\n\
    \  while($i < count($xs) - 1) {\n    $derivative[] = $xs[$i + 1] * ($i + 1);\n\
    \    $i++;\n  }\n  return $derivative;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $ys\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $result = [];\n  $n = count($xs);\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $result[] = $i * $xs[$i];\n  }\n  return\
    \ $result;\n}\n\n$xs = [3, 1, 2, 4, 5];\n$result = derivative($xs);\nassert(count($result)\
    \ == count($xs) - 1);\nfor ($i = 0; $i < count($result); $i++) {\n  assert($result[$i]\
    \ == ($i + 1) * $xs[$i + 1]);\n}\n\n$xs = [1, 2, 3];\n$result = derivative($xs);\n\
    assert(count($result) == count($xs) - 1);\nfor ($i = 0; $i < count($result); $i++)\
    \ {\n  assert($result[$i] == ($i + 1) * $xs[$i + 1]);\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) < 2) {\n \
    \       return [0];\n    }\n    $result = [];\n    for ($i = 1; $i < count($xs);\
    \ $i++) {\n        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\n\
    print_r(derivative([3, 1, 2, 4, 5]));\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 12\n    [3] => 20\n)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpre5all91.php:31\nStack\
    \ trace:\n#0 /tmp/tmpre5all91.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpre5all91.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $derivative = [];\n    if(count($xs)\
    \ === 0) {\n        return $derivative;\n    }\n    if(count($xs) === 1) {\n \
    \       $derivative[0] = 0;\n        return $derivative;\n    }\n    for($i =\
    \ 1; $i < count($xs); $i++) {\n        $derivative[$i - 1] = $i * $xs[$i];\n \
    \   }\n    return $derivative;\n}\n\n$fptr = fopen(getenv(\"OUTPUT_PATH\"), \"\
    w\");\n\n$stdin = fopen(\"php://stdin\", \"r\");\n\nfscanf($stdin, \"%d\\n\",\
    \ $xs_count);\n\nfscanf($stdin, \"%[^\\n]\", $xs_temp);\n\n$xs = array_map('intval',\
    \ preg_split('/ /', $xs_temp, -1, PREG_SPLIT_NO_EMPTY));\n\n$result = derivative($xs);\n\
    \nfwrite($fptr, implode(\" \", $result) . \"\\n\");\n\nfclose($stdin);\nfclose($fptr);\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: fopen(): Filename cannot be empty in /tmp/tmpv6viloy9.php on\
    \ line 24\n\nWarning: fwrite() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpv6viloy9.php on line 36\n\nWarning: fclose() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpv6viloy9.php on line 39\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpv6viloy9.php:49\nStack trace:\n\
    #0 /tmp/tmpv6viloy9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpv6viloy9.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    $n = count($xs);\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n   \
    \ return $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $ys\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    $power\
    \ = count($xs) - 1;\n    for ($i = 0; $i < count($xs) - 1; $i++) {\n        $result[]\
    \ = $xs[$i] * $power;\n        $power--;\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvecf63d.php:23\n\
    Stack trace:\n#0 /tmp/tmpxvecf63d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxvecf63d.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    $n = count($xs);\n\
    \    if ($n > 1) {\n        $m = $n - 1;\n        for ($i = 0; $i < $m; $i++)\
    \ {\n            $result[] = $xs[$i] * $m;\n            $m--;\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp31c9qjrn.php:27\n\
    Stack trace:\n#0 /tmp/tmp31c9qjrn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp31c9qjrn.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // TODO\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppx6lj0ah.php:18\n\
    Stack trace:\n#0 /tmp/tmppx6lj0ah.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppx6lj0ah.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // your code...\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n0fwuvc.php:18\n\
    Stack trace:\n#0 /tmp/tmp9n0fwuvc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9n0fwuvc.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $result = [];\n  foreach ($xs\
    \ as $i => $x) {\n    if ($i === 0) {\n      continue;\n    } else {\n      $result[]\
    \ = $i * $x;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    if\
    \ ($len <= 1) {\n        return [];\n    }\n    $derivative = [];\n    for ($i\
    \ = 1; $i < $len; $i++) {\n        $derivative[] = $i * $xs[$i];\n    }\n    return\
    \ $derivative;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ds = [];\n  for ($i = 1; $i\
    \ < count($xs); $i++) {\n    $ds[] = $i * $xs[$i];\n  }\n  return $ds;\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $res = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $res[] = $i * $xs[$i];\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = [];\n  for ($i = 1; $i\
    \ < count($xs); $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $res = [];\n    $i = 1;\n\
    \    foreach ($xs as $x) {\n        if ($i < count($xs)) {\n            $res[]\
    \ = $i * $x;\n        }\n        $i++;\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh2c6w12.php:26\n\
    Stack trace:\n#0 /tmp/tmpyh2c6w12.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyh2c6w12.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $coefficients = [];\n   \
    \ for ($i = 1; $i < count($xs); $i++) {\n        $coefficients[] = $i * $xs[$i];\n\
    \    }\n    return $coefficients;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // your code\n    if (count($xs)\
    \ <= 1) {\n        return [0];\n    }\n    $derivative = [];\n    for ($i = 1;\
    \ $i < count($xs); $i++) {\n        $derivative[] = $xs[$i] * $i;\n    }\n   \
    \ return $derivative;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvilu0qmc.php:30\n\
    Stack trace:\n#0 /tmp/tmpvilu0qmc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvilu0qmc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    $n = count($xs);\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n   \
    \ return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) <= 1) {\n\
    \        return [0];\n    }\n    $result = [];\n    for ($i = 1; $i < count($xs);\
    \ $i++) {\n        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3syxaxr0.php:29\n\
    Stack trace:\n#0 /tmp/tmp3syxaxr0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3syxaxr0.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (empty($xs)) {\n     \
    \   return [];\n    }\n\n    $result = [];\n    $power = 1;\n    for ($i = 0;\
    \ $i < count($xs) - 1; $i++) {\n        $result[] = $xs[$i + 1] * $power;\n  \
    \      $power++;\n    }\n\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $len = count($xs);\n  if ($len\
    \ <= 1) return [];\n  $ys = [];\n  for ($i = 1; $i < $len; $i++) {\n    $ys[]\
    \ = $i * $xs[$i];\n  }\n  return $ys;\n}\n\nfunction candidate(...$args) {\n \
    \   return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) <= 1) {\n\
    \        return [];\n    }\n    $result = [];\n    $i = 0;\n    while ($i < count($xs)\
    \ - 1) {\n        $result[] = $xs[$i] * ($i + 1);\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nprint_r(derivative([1, 2, 3]));\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpz5n81gel.php:28\nStack trace:\n#0 /tmp/tmpz5n81gel.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz5n81gel.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $n = count($xs);\n  $ys = [];\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $xs[$i] * $i;\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $num = count($xs);\n    $new\
    \ = [];\n    for ($i = 1; $i < $num; $i++) {\n        $new[] = $xs[$i] * $i;\n\
    \    }\n    return $new;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = [];\n  $i = 1;\n  foreach\
    \ ($xs as $x) {\n    if ($i > 1) {\n      $ys[] = $i * $x;\n    }\n    $i += 1;\n\
    \  }\n  return $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmou1yr9.php:25\n\
    Stack trace:\n#0 /tmp/tmpwmou1yr9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwmou1yr9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = array();\n  $n = count($xs);\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $n = count($xs);\n  if ($n\
    \ == 1) {\n    return array(0);\n  }\n  $xs_ = array();\n  for ($i = 1; $i < $n;\
    \ $i++) {\n    $xs_[] = $i * $xs[$i];\n  }\n  return $xs_;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_k15x83.php:30\n\
    Stack trace:\n#0 /tmp/tmpf_k15x83.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpf_k15x83.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if(count($xs) == 0) return\
    \ $xs;\n  $acc = [];\n  for($i = 0; $i < count($xs); $i++) {\n    if($i == 0)\
    \ continue;\n    $acc[] = $i * $xs[$i];\n  }\n  return $acc;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $length = count($xs);\n \
    \   if ($length < 2) {\n        return $xs;\n    }\n\n    $new_xs = [];\n    for\
    \ ($i = 1; $i < $length; $i++) {\n        $new_xs[] = $xs[$i] * $i;\n    }\n \
    \   return $new_xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37xjuywf.php:31\n\
    Stack trace:\n#0 /tmp/tmp37xjuywf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp37xjuywf.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if (count($xs) == 0) return\
    \ [];\n  $ds = [];\n  for ($i = 1; $i < count($xs); $i++) {\n    $ds[] = $i *\
    \ $xs[$i];\n  }\n  return $ds;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $newxs = [];\n    $i = 1;\n\
    \    foreach ($xs as $x) {\n        if ($i != 1) {\n            $newxs[] = $x\
    \ * $i;\n        }\n        $i++;\n    }\n    return $newxs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6_ipaq7.php:26\n\
    Stack trace:\n#0 /tmp/tmpg6_ipaq7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg6_ipaq7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $s = [];\n    for ($i = 1;\
    \ $i < count($xs); $i++) {\n        $s[] = $i * $xs[$i];\n    }\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // your code here\n    $ys\
    \ = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $xs[$i]\
    \ * $i;\n    }\n    return $ys;\n}\n\n$xs = [3, 1, 2, 4, 5];\nprint_r(derivative($xs));\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 12\n    [3] => 20\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $rs = [];\n    foreach ($xs\
    \ as $i => $v) {\n        if ($i == 0) continue;\n        $rs[] = $i * $v;\n \
    \   }\n    return $rs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if (count($xs) === 0) return\
    \ [];\n  return array_slice(array_map(function($x, $i) {\n    return $i * $x;\n\
    \  }, $xs, array_keys($xs)), 1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $new_xs = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $new_xs[] = $i * $xs[$i];\n    }\n  \
    \  return $new_xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (empty($xs)) {\n     \
    \   return [];\n    }\n\n    $len = count($xs);\n    $der = [];\n    for ($i =\
    \ 1; $i < $len; $i++) {\n        $der[] = $i * $xs[$i];\n    }\n\n    return $der;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) == 0) {\n\
    \        return [];\n    }\n    $n = count($xs);\n    $xs[0] = 0;\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        $xs[$i - 1] = $i * $xs[$i];\n    }\n    array_pop($xs);\n\
    \    return $xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $size = count($xs);\n  if ($size\
    \ == 1) return [0];\n  $dxs = [];\n  for ($i = 1; $i < $size; $i++) {\n    $dxs[]\
    \ = $i * $xs[$i];\n  }\n  return $dxs;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo68nor_.php:28\n\
    Stack trace:\n#0 /tmp/tmpbo68nor_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbo68nor_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\n$xs = [1, 2, 3];\n$result = derivative($xs);\nassert(count($result)\
    \ == 2);\nassert($result[0] == 2);\nassert($result[1] == 6);\n\n$xs = [3, 1, 2,\
    \ 4, 5];\n$result = derivative($xs);\nassert(count($result) == 4);\nassert($result[0]\
    \ == 1);\nassert($result[1] == 4);\nassert($result[2] == 12);\nassert($result[3]\
    \ == 20);\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ret = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ret[] = $i * $xs[$i];\n    }\n    return\
    \ $ret;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $dx = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $dx[] = $i * $xs[$i];\n    }\n    return\
    \ $dx;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // Assume $xs = [1, 2, 3]\n\
    \    // Step 1:\n    // $xs = [0, 1, 2, 3]\n    $xs[] = 0;\n    // Step 2:\n \
    \   // $xs = [1, 2, 3, 0]\n    array_unshift($xs, 0);\n    // Step 3:\n    //\
    \ $xs = [0, 1, 2, 3, 0]\n    $ans = [];\n    for ($i = 1; $i < count($xs); $i++)\
    \ {\n        // $xs[i] = 2;\n        // $i = 2;\n        // $ans[i - 1] = $xs[i]\
    \ * $i;\n        // $ans[1] = 2 * 2;\n        $ans[] = $xs[$i] * $i;\n    }\n\
    \    return $ans;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_609sun.php:35\n\
    Stack trace:\n#0 /tmp/tmpi_609sun.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpi_609sun.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $derivative = [];\n  for ($i\
    \ = 1; $i < count($xs); $i++) {\n    $derivative[] = $i * $xs[$i];\n  }\n  return\
    \ $derivative;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = array();\n  for ($i =\
    \ 1; $i < count($xs); $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = [];\n  for ($i = 1; $i\
    \ < count($xs); $i++) {\n    $y = $xs[$i] * $i;\n    array_push($ys, $y);\n  }\n\
    \  return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ret = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ret[] = $i * $xs[$i];\n    }\n    return\
    \ $ret;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if (empty($xs)) {\n    return\
    \ [];\n  }\n  $derivative = [];\n  for ($i = 1; $i < count($xs); $i++) {\n   \
    \ $derivative[] = $i * $xs[$i];\n  }\n  return $derivative;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $size = count($xs);\n   \
    \ if ($size <= 1) return [0];\n    $ys = array_fill(0, $size - 1, 0);\n    for\
    \ ($i = 1; $i < $size; $i++) {\n        $ys[$i - 1] = $xs[$i] * $i;\n    }\n \
    \   return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ce78crm.php:28\n\
    Stack trace:\n#0 /tmp/tmp1ce78crm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1ce78crm.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $temp = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $temp[] = $i * $xs[$i];\n    }\n    return\
    \ $temp;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = [];\n  $n = count($xs);\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    $index\
    \ = 0;\n    $exponent = 1;\n    foreach ($xs as $x) {\n        if ($index ===\
    \ 0) {\n            $index++;\n            continue;\n        }\n        array_push($result,\
    \ $x * $exponent);\n        $index++;\n        $exponent++;\n    }\n    return\
    \ $result;\n}\n$f = [1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,\
    \ 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,\
    \ 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,\
    \ 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,\
    \ 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,\
    \ 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,\
    \ 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,\
    \ 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,\
    \ 4, 1, 4, 1, 4, 1, 4, 1\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjbnywmnu.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    for ($i = 0; $i < count($xs)\
    \ - 1; $i++) {\n        $xs[$i] = $xs[$i + 1] * ($i + 1);\n    }\n    array_pop($xs);\n\
    \    return $xs;\n}\n\nclass DerivativeTest extends PHPUnit_Framework_TestCase\
    \ {\n    public function test() {\n        $this->assertEquals([1, 4, 12, 20],\
    \ derivative([3, 1, 2, 4, 5]));\n        $this->assertEquals([2, 6], derivative([1,\
    \ 2, 3]));\n    }\n}\n\n$t = new DerivativeTest();\n$t->test();\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'PHPUnit_Framework_TestCase' not found\
    \ in /tmp/tmpmwmj937b.php:17\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpmwmj937b.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  // FILL THIS IN\n  $n = count($xs);\n\
    \  $newX = [];\n  for ($i = 1; $i < $n; $i++) {\n    $newX[] = $xs[$i] * $i;\n\
    \  }\n  return $newX;\n}\n\n$input1 = [3, 1, 2, 4, 5];\n$input2 = [1, 2, 3];\n\
    print_r(derivative($input1));\nprint_r(derivative($input2));\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 12\n    [3] => 20\n)\n\
    Array\n(\n    [0] => 2\n    [1] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $derivative = [];\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n \
    \   }\n    return $derivative;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = array();\n  $num_xs =\
    \ count($xs);\n  for ($i = 1; $i < $num_xs; $i++) {\n    $ys[] = $i * $xs[$i];\n\
    \  }\n  return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $res = [];\n  for ($i = 1;\
    \ $i < count($xs); $i++) {\n    $res[] = $i * $xs[$i];\n  }\n  return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $new_xs = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $new_xs[] = $i * $xs[$i];\n    }\n  \
    \  return $new_xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) < 2) {\n \
    \       return array(0);\n    }\n    $result = array();\n    for ($i = 1; $i <\
    \ count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkzp2vrp.php:28\n\
    Stack trace:\n#0 /tmp/tmptkzp2vrp.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptkzp2vrp.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $coefs = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $coefs[] = $i * $xs[$i];\n    }\n   \
    \ return $coefs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $new_xs = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $new_xs[] = $i * $xs[$i];\n    }\n  \
    \  return $new_xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $result = [];\n  $n = count($xs);\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $result[] = $i * $xs[$i];\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $newXs = [];\n  $len = count($xs);\n\
    \  for ($i = 1; $i < $len; $i++) {\n    $newXs[] = $xs[$i] * $i;\n  }\n  return\
    \ $newXs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $length = count($xs);\n \
    \   if ($length < 2) return array();\n    $ys = array();\n    for ($i = 1; $i\
    \ < $length; $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    if\
    \ ($len == 1) {\n        return array(0);\n    }\n    $ys = array();\n    for\
    \ ($i = 1; $i < $len; $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyizuz94a.php:30\n\
    Stack trace:\n#0 /tmp/tmpyizuz94a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyizuz94a.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $result\
    \ = [];\n    for ($i = 1; $i < $len; $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\nclass Solution {\n\n    /**\n     * @param Integer[]\
    \ $xs\n     * @return Integer[]\n     */\n    function derive($xs) {\n       \
    \ return derivative($xs);\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $rs\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $rs[] = $i * $xs[$i];\n  \
    \  }\n    return $rs;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $der = [];\n  for ($i = 1;\
    \ $i < count($xs); $i++) {\n    $der[] = $i * $xs[$i];\n  }\n  return $der;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $n = count($xs);\n  $ys = [];\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $xs[$i] * $i;\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if (count($xs) == 0) {\n  \
    \  return array();\n  }\n  $n = count($xs);\n  $deriv = array();\n  for ($i =\
    \ 1; $i < $n; $i++) {\n    $deriv[] = $i * $xs[$i];\n  }\n  return $deriv;\n}\n\
    \nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    $n = count($xs);\n\
    \    if ($n <= 1) {\n        return $result;\n    }\n    for ($i = 1; $i < $n;\
    \ $i++) {\n        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n\n\
    echo '<pre>' . derivative([3, 1, 2, 4, 5]) . '</pre>';\necho '<pre>' . derivative([1,\
    \ 2, 3]) . '</pre>';\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: <pre>Array</pre><pre>Array</pre>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    $n = count($xs);\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n   \
    \ return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $xs_p\
    \ = array();\n    for ($i = 1; $i < $n; $i++) {\n        $xs_p[] = $i * $xs[$i];\n\
    \    }\n    return $xs_p;\n}\n\nassert([1, 4, 12, 20] == derivative([3, 1, 2,\
    \ 4, 5]));\nassert([2, 6] == derivative([1, 2, 3]));\nassert([5, 0, 0, 0, 0] ==\
    \ derivative([25, 0, 0, 0, 0]));\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert([5, 0, 0, 0, 0] == derivative([25, 0, 0, 0,\
    \ 0])) failed in /tmp/tmpasj5o7tn.php on line 20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    $n = count($xs);\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $result[] = $i * $xs[$i];\n    }\n\
    \    return $result;\n}\n\n$xs = [3, 1, 2, 4, 5];\nvar_dump(derivative($xs));\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(4)\n  [2]=>\n  int(12)\n\
    \  [3]=>\n  int(20)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $prev = $xs[0];\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $tmp = $xs[$i];\n        $xs[$i]\
    \ = $i * $prev;\n        $prev = $tmp;\n    }\n    unset($xs[0]);\n    return\
    \ $xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2yktvz5.php:25\n\
    Stack trace:\n#0 /tmp/tmpq2yktvz5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpq2yktvz5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // your code here\n    $len\
    \ = count($xs);\n    if($len == 1) {\n        return [0];\n    }\n    for($i =\
    \ 0; $i < $len; $i++) {\n        $xs[$i] = $xs[$i] * $i;\n    }\n    array_shift($xs);\n\
    \    return $xs;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszwix5hp.php:30\n\
    Stack trace:\n#0 /tmp/tmpszwix5hp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpszwix5hp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = [];\n  $n = count($xs);\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n\
    }\n\nvar_dump(derivative([3, 1, 2, 4, 5]));\nvar_dump(derivative([1, 2, 3]));\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(4)\n  [2]=>\n  int(12)\n\
    \  [3]=>\n  int(20)\n}\narray(2) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(6)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if (count($xs) < 2) {\n   \
    \ return array(0);\n  }\n  $dxs = array();\n  for ($i = 1; $i < count($xs); $i++)\
    \ {\n    $dxs[] = $i * $xs[$i];\n  }\n  return $dxs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0k069sfw.php:29\n\
    Stack trace:\n#0 /tmp/tmp0k069sfw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0k069sfw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $len--;\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $xs[$i] = $xs[$i + 1] * ($i + 1);\n\
    \    }\n    unset($xs[$len]);\n    return $xs;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $result\
    \ = [];\n    for ($i = 1; $i < $len; $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\nassert_options(ASSERT_BAIL, 1);\nassert(derivative([3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20]);\nassert(derivative([1, 2, 3]) == [2, 6]);\n\
    echo \"OK\";\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: OK
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\necho implode(', ', derivative([3, 1, 2, 4, 5]));\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1, 4, 12, 20
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $n = count($xs);\n  $ys = [];\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $result\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    if\
    \ ($len == 1) {\n        return [0];\n    }\n    $ret = [];\n    for ($i = 1;\
    \ $i < $len; $i++) {\n        $ret[] = $i * $xs[$i];\n    }\n    return $ret;\n\
    }\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6_hui24.php:29\n\
    Stack trace:\n#0 /tmp/tmpr6_hui24.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpr6_hui24.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if (count($xs) < 2) return\
    \ array();\n  $ys = array();\n  for ($i = 1; $i < count($xs); $i++) {\n    $ys[]\
    \ = $i * $xs[$i];\n  }\n  return $ys;\n}\n\nfunction candidate(...$args) {\n \
    \   return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $result = [];\n  for ($i =\
    \ 1; $i < count($xs); $i++) {\n    $result[] = $i * $xs[$i];\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $derivative = [];\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n \
    \   }\n    return $derivative;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $l = count($xs);\n    $ys\
    \ = [];\n    for ($i = 1; $i < $l; $i++) {\n        $ys[] = $xs[$i] * $i;\n  \
    \  }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $ys\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = [];\n  $n = count($xs);\n\
    \  if ($n <= 1) {\n    return $ys;\n  }\n  for ($i = 1; $i < $n; $i++) {\n   \
    \ $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n}\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    $count = count($xs);\n\
    \    if ($count == 0) return [];\n    $power = 0;\n    for ($i = 1; $i < $count;\
    \ $i++) {\n        $y = $xs[$i] * $power;\n        $power++;\n        $ys[] =\
    \ $y;\n    }\n    return $ys;\n}\n\n$xs = [3, 1, 2, 4, 5];\nvar_dump(derivative($xs));\n\
    $xs = [1, 2, 3];\nvar_dump(derivative($xs));\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(4) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(2)\n  [2]=>\n  int(8)\n \
    \ [3]=>\n  int(15)\n}\narray(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(3)\n}\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpjlqcr_rj.php:31\nStack\
    \ trace:\n#0 /tmp/tmpjlqcr_rj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjlqcr_rj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\n$xs = [1, 2, 3];\n$result = derivative($xs);\nassert($result\
    \ == [2, 6]);\n\n$xs = [3, 1, 2, 4, 5];\n$result = derivative($xs);\nassert($result\
    \ == [1, 4, 12, 20]);\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  return array_slice(array_map(function($index,\
    \ $x) {\n    return $index * $x;\n  }, array_keys($xs), $xs), 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (empty($xs)) {\n     \
    \   return $xs;\n    }\n    $ys = [];\n    for ($i = 1; $i < count($xs); $i++)\
    \ {\n        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $deriv = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $deriv[] = $i * $xs[$i];\n    }\n   \
    \ return $deriv;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // TODO.\n    return;\n}\n\
    \nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqwpl09l.php:19\n\
    Stack trace:\n#0 /tmp/tmpsqwpl09l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsqwpl09l.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = [];\n  for ($i = 1; $i\
    \ < count($xs); $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $result = [];\n  for ($i =\
    \ 1; $i < count($xs); $i++) {\n    $result[] = $i * $xs[$i];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    if\
    \ ($n < 2) return array();\n    $ds = array();\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        $ds[] = $i * $xs[$i];\n    }\n    return $ds;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) == 0) {\n\
    \        return [];\n    }\n\n    $new_xs = [];\n    for ($i = 1; $i < count($xs);\
    \ $i++) {\n        $new_xs[] = $i * $xs[$i];\n    }\n    return $new_xs;\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $len = count($xs);\n  $res\
    \ = [];\n  if ($len > 1) {\n    for ($i = 1; $i < $len; $i++) {\n      $res[]\
    \ = $i * $xs[$i];\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    if\
    \ ($n === 0) return [];\n    $output = [];\n    for ($i = 1; $i < $n; $i++) {\n\
    \        $output[] = $i * $xs[$i];\n    }\n    return $output;\n}\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) === 0) {\n\
    \        return [];\n    }\n    array_shift($xs);\n    $ys = [];\n    $n = count($xs);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $ys[] = $xs[$i] * ($i + 1);\n    }\n\
    \    return $ys;\n}\n\necho json_encode(derivative([3, 1, 2, 4, 5]));\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '[1,4,12,20]'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $result\
    \ = [];\n    for ($i = 1; $i < $len; $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  // Returns [xs[i] * i for i\
    \ in range(1, len(xs))]\n  // >>> derivative([1, 2, 3])\n  // [2, 6]\n  return\
    \ array_map(function($x, $index) {\n    return $x * $index;\n  }, array_slice($xs,\
    \ 1), array_keys(array_slice($xs, 1)));\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2tr_hzz.php:23\n\
    Stack trace:\n#0 /tmp/tmp_2tr_hzz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_2tr_hzz.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  // YOUR CODE GOES HERE\n}\n\
    \nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgui0xd_u.php:18\n\
    Stack trace:\n#0 /tmp/tmpgui0xd_u.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgui0xd_u.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $res = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $res[] = $i * $xs[$i];\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $result = [];\n  for ($i =\
    \ 1; $i < count($xs); $i++) {\n    $result[] = $i * $xs[$i];\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ret = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ret[] = $i * $xs[$i];\n    }\n    return\
    \ $ret;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  if (count($xs) <= 1) {\n  \
    \  return [0];\n  }\n  return array_slice(array_map(function($i, $x) {\n    return\
    \ $i * $x;\n  }, range(1, count($xs)), $xs), 1);\n}\n\n$xs = [3, 1, 2, 4, 5];\n\
    var_dump(derivative($xs));\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(6)\n  [2]=>\n  int(16)\n\
    \  [3]=>\n  int(25)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zzvg0bo.php:25\n\
    Stack trace:\n#0 /tmp/tmp3zzvg0bo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3zzvg0bo.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $deriv\
    \ = [];\n    for ($i = 1; $i < $len; $i++) {\n        $deriv[] = $i * $xs[$i];\n\
    \    }\n    return $deriv;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $xs[0] = 0;\n    for ($i\
    \ = 0; $i < count($xs); $i++) {\n        $xs[$i] *= $i;\n    }\n    array_shift($xs);\n\
    \    return $xs;\n}\n\n$fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n$__fp\
    \ = fopen(\"php://stdin\", \"r\");\n\nfscanf($__fp, \"%d\\n\", $n);\n\nfscanf($__fp,\
    \ \"%[^\\n]\", $xs_temp);\n\n$xs = array_map('intval', preg_split('/ /', $xs_temp,\
    \ -1, PREG_SPLIT_NO_EMPTY));\n\n$result = derivative($xs);\n\nfwrite($fptr, implode(\"\
    \ \", $result) . \"\\n\");\n\nfclose($__fp);\nfclose($fptr);\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: fopen(): Filename cannot be empty in /tmp/tmpxjlaakvx.php on\
    \ line 18\n\nWarning: fwrite() expects parameter 1 to be resource, bool given\
    \ in /tmp/tmpxjlaakvx.php on line 30\n\nWarning: fclose() expects parameter 1\
    \ to be resource, bool given in /tmp/tmpxjlaakvx.php on line 33\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $dxs\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $dxs[] = $i * $xs[$i];\n \
    \   }\n    return $dxs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $derivative = [];\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n \
    \   }\n    return $derivative;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $deriv = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $deriv[] = $i * $xs[$i];\n    }\n   \
    \ return $deriv;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  // TODO: implement.\n}\n\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpri46jl42.php:18\n\
    Stack trace:\n#0 /tmp/tmpri46jl42.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpri46jl42.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  // TODO\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1v9r984l.php:18\n\
    Stack trace:\n#0 /tmp/tmp1v9r984l.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1v9r984l.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  // the derivative of the constant\
    \ function is 0\n  if (count($xs) <= 1) return [0];\n  // the derivative of x\
    \ is 1\n  if (count($xs) == 2) return [1];\n  // general case: take the derivative\
    \ of each term, and then multiply\n  // by the proper power of x\n  $ret = [];\n\
    \  $power = 1;\n  for ($i = 1; $i < count($xs); $i++) {\n    $ret[] = $xs[$i]\
    \ * $power;\n    $power++;\n  }\n  return $ret;\n}\n\n$xs = [3, 1, 2, 4, 5];\n\
    $xs = [1, 2, 3];\n\n$ret = derivative($xs);\n\necho \"Input:  \";\necho implode(',\
    \ ', $xs) . \"\\n\";\necho \"Output: \";\necho implode(', ', $ret) . \"\\n\";\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Input:  1, 2, 3\nOutput: 2, 6\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpqgstrwf7.php:43\nStack trace:\n#0 /tmp/tmpqgstrwf7.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqgstrwf7.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    if\
    \ ($n == 1) {\n        return array(0);\n    }\n    for ($i = 0; $i < $n - 1;\
    \ $i++) {\n        $xs[$i] = $xs[$i] * ($n - $i - 1);\n    }\n    return array_slice($xs,\
    \ 0, $n - 1);\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt96nu_nw.php:24\n\
    Stack trace:\n#0 /tmp/tmpt96nu_nw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpt96nu_nw.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $r\
    \ = [];\n    for ($i = 1; $i < $len; $i++) {\n        $r[] = $i * $xs[$i];\n \
    \   }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $rs\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $rs[] = $i * $xs[$i];\n  \
    \  }\n    return $rs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $nums\
    \ = [];\n    for ($i = 1; $i < $len; $i++) {\n        $nums[] = $i * $xs[$i];\n\
    \    }\n    return $nums;\n}\n\nassert([1, 4, 12, 20] == derivative([3, 1, 2,\
    \ 4, 5]));\nassert([2, 6] == derivative([1, 2, 3]));\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $new_xs = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $new_xs[] = $i * $xs[$i];\n    }\n  \
    \  return $new_xs;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $ys\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $ys\
    \ = [];\n    $ys[] = $xs[0];\n    for ($i = 1; $i < $n; $i++) {\n        $ys[]\
    \ = $xs[$i] * $i;\n    }\n    return $ys;\n}\n\n/**\n * @param $x\n * @param $xs\n\
    \ * @return int\n */\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjw6g8jyg.php:29\n\
    Stack trace:\n#0 /tmp/tmpjw6g8jyg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjw6g8jyg.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    for ($i = 0; $i < count($xs)\
    \ - 1; $i++) {\n        $xs[$i] = $xs[$i + 1] * ($i + 1);\n    }\n    array_pop($xs);\n\
    \    return $xs;\n}\n\n$xs = [3, 1, 2, 4, 5];\n\nprint_r(derivative($xs));\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 12\n    [3] => 20\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = array();\n  for ($i =\
    \ 1; $i < count($xs); $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $derivative\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $derivative[] = $i * $xs[$i];\n\
    \    }\n    return $derivative;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    $n = count($xs);\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $result[] = $i * $xs[$i];\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // Coefficients of polynomial\
    \ of degree n has n + 1 elements.\n    $degree = count($xs) - 1;\n    $ys = [];\n\
    \    // Initial value is the last element of xs.\n    $y = $xs[$degree];\n   \
    \ $ys[] = $y;\n    // Remaining elements of ys are obtained by multiplying coefficients\n\
    \    // of xs with k and adding result to previous value.\n    for ($k = $degree\
    \ - 1; $k >= 0; $k--) {\n        $y += $xs[$k] * ($degree - $k);\n        $ys[]\
    \ = $y;\n    }\n    return array_reverse($ys);\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_q9jih4_.php:30\n\
    Stack trace:\n#0 /tmp/tmp_q9jih4_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_q9jih4_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    $degree =\
    \ count($xs) - 1;\n    for ($i = 0; $i < $degree; $i++) {\n        $ys[] = ($i\
    \ + 1) * $xs[$i + 1];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $ds\
    \ = [];\n    for ($i = 1; $i < $len; $i++) {\n        $ds[] = $i * $xs[$i];\n\
    \    }\n    return $ds;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $xs = array_values($xs);\n\
    \    $res = [];\n    $len = count($xs);\n    for ($i = 1; $i < $len; $i++) {\n\
    \        $res[] = $xs[$i] * $i;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $len = count($xs);\n    $result\
    \ = [];\n    for ($i = 1; $i < $len; $i++) {\n        $result[] = $i * $xs[$i];\n\
    \    }\n    return $result;\n}\n$xs = [3, 1, 2, 4, 5];\nvar_dump(derivative($xs));\n\
    function candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(4)\n  [2]=>\n  int(12)\n\
    \  [3]=>\n  int(20)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $last = count($xs) - 1;\n\
    \    $n = $last - 1;\n    $result = [];\n    for ($i = 0; $i < $last; $i++) {\n\
    \        $result[] = $xs[$i] * $n;\n        $n--;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gnsw9lz.php:25\n\
    Stack trace:\n#0 /tmp/tmp4gnsw9lz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4gnsw9lz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $ys = array();\n  $n = count($xs);\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ys = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return\
    \ $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    $exp =\
    \ 1;\n    for ($i = 0; $i < count($xs) - 1; $i++) {\n        array_push($result,\
    \ $exp * $xs[$i + 1]);\n        $exp++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(2,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2,\
    \ 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  // Calculate n - 1\n  $n =\
    \ count($xs) - 1;\n  // Range from 1 to n\n  $output = range(1, $n);\n  // Multiply\
    \ each element by its power\n  for ($i = 0; $i < $n; $i++) {\n    $output[$i]\
    \ *= $xs[$i+1] * ($i+1);\n  }\n  return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1yg24n0.php:26\n\
    Stack trace:\n#0 /tmp/tmpx1yg24n0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx1yg24n0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    foreach($xs\
    \ as $k => $v) {\n        if($k > 0) {\n            $result[] = $k * $v;\n   \
    \     }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $tmp = array();\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $tmp[] = $i * $xs[$i];\n    }\n \
    \   return $tmp;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $n = count($xs);\n  $ys = [];\n\
    \  for ($i = 1; $i < $n; $i++) {\n    $ys[] = $i * $xs[$i];\n  }\n  return $ys;\n\
    }\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12,\
    \ 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $ys\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $res = [];\n    for ($i =\
    \ 1; $i < count($xs); $i++) {\n        $res[] = $i * $xs[$i];\n    }\n    return\
    \ $res;\n}\n$a = [];\n$b = [];\n$ans = [];\n\n$a = [5, 12, 14, 3, 15, 4, 5, 1,\
    \ 16, 9, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 6, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\
    \ 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,\
    \ 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,\
    \ 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105,\
    \ 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,\
    \ 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,\
    \ 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153,\
    \ 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,\
    \ 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185,\
    \ 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,\
    \ 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\
    \ 218, 219, 220, 221, 222,\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpalrv5vud.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $derivative = [];\n  for ($i\
    \ = 1; $i < count($xs); $i++) {\n    $derivative[] = $i * $xs[$i];\n  }\n  return\
    \ $derivative;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $n = count($xs);\n    $ys\
    \ = [];\n    for ($i = 1; $i < $n; $i++) {\n        $ys[] = $i * $xs[$i];\n  \
    \  }\n    return $ys;\n}\n$input = [3, 1, 2, 4, 5];\n$output = derivative($input);\n\
    echo json_encode($output);\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '[1,4,12,20]'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $res = [];\n    $n = count($xs);\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $res[] = $i * $xs[$i];\n    }\n  \
    \  return $res;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $length = count($xs);\n  if\
    \ ($length < 2) {\n    return array();\n  }\n  $derivative = array();\n  for ($i\
    \ = 1; $i < $length; $i++) {\n    $derivative[] = $i * $xs[$i];\n  }\n  return\
    \ $derivative;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // using '&' will pass the\
    \ variable by reference to the function\n    // so that the variable itself is\
    \ changed after the function call\n    // not just the local variable in the function\
    \ call\n    array_pop(&$xs); // = array_slice($xs, 0, count($xs) - 1);\n    for\
    \ ($i = 0; $i < count($xs); $i++) {\n        $xs[$i] *= $i + 1;\n    }\n    return\
    \ $xs;\n}\n\n/*\n * Tests below\n */\n\n$cases = array(\n    array(3, 1, 2, 4,\
    \ 5),\n    array(1, 2, 3)\n);\n\nforeach ($cases as $case) {\n    $result = derivative($case);\n\
    \    var_dump($result);\n}\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp23y82hyq.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n  $res = [];\n  $power = 1;\n\
    \  for ($i = 1; $i < count($xs); $i++) {\n    $res[] = $xs[$i] * $power;\n   \
    \ $power++;\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $derivative = [];\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n \
    \   }\n    return $derivative;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $derivative = [];\n    for\
    \ ($i = 1; $i < count($xs); $i++) {\n        $derivative[] = $i * $xs[$i];\n \
    \   }\n    return $derivative;\n}\n\nfunction candidate(...$args) {\n    return\
    \ derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    // write your code here\n\
    \    // hint: use array_shift() to get the first element and array_pop() to get\
    \ the last element\n    // do not use $xs[0] and $xs[array_count($xs) - 1]\n \
    \   $count = array_count($xs);\n    $i = 0;\n    $derivative = [];\n    while\
    \ ($i < $count - 1) {\n        array_push($derivative, $xs[$i + 1] * ($i + 1));\n\
    \        $i = $i + 1;\n    }\n    return $derivative;\n}\n\nfunction candidate(...$args)\
    \ {\n    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_count()\
    \ in /tmp/tmpoispkvjg.php:13\nStack trace:\n#0 /tmp/tmpoispkvjg.php(24): derivative(Array)\n\
    #1 /tmp/tmpoispkvjg.php(28): candidate(Array)\n#2 /tmp/tmpoispkvjg.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpoispkvjg.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $result = [];\n    for ($i\
    \ = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    if (count($xs) < 2) return\
    \ [];\n    $ys = [];\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[]\
    \ = $i * $xs[$i];\n    }\n    return $ys;\n}\n\nfunction candidate(...$args) {\n\
    \    return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $ret = [];\n    $l = count($xs);\n\
    \    for ($i = 1; $i < $l; $i++) {\n        $ret[] = $i * $xs[$i];\n    }\n  \
    \  return $ret;\n}\n\nfunction candidate(...$args) {\n    return derivative(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== array(1,\
    \ 4, 12, 20)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3)) !== array(2, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1)) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1]\
    \ * x + xs[2] * x^2 + ....\n// Return derivative of this polynomial in the same\
    \ form.\n// >>> derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1,\
    \ 2, 3])\n// [2, 6]\nfunction derivative($xs) {\n    $xcount = count($xs);\n \
    \   $dxs = [];\n    for ($i = 1; $i < $xcount; $i++) {\n        $dxs[] = $i *\
    \ $xs[$i];\n    }\n    return $dxs;\n}\n\nfunction candidate(...$args) {\n   \
    \ return derivative(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 0, 4))\
    \ !== array(2, 2, 0, 16)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

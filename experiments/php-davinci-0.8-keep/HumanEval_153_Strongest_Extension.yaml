name: HumanEval_153_Strongest_Extension
language: php
prompt: "<?php\n// You will be given the name of a class (a string) and a list of\
  \ extensions.\n// The extensions are to be used to load additional classes to the\
  \ class. The\n// strength of the extension is as follows: Let CAP be the number\
  \ of the uppercase\n// letters in the extension's name, and let SM be the number\
  \ of lowercase letters \n// in the extension's name, the strength is given by the\
  \ fraction CAP - SM. \n// You should find the strongest extension and return a string\
  \ in this \n// format: ClassName.StrongestExtensionName.\n// If there are two or\
  \ more extensions with the same strength, you should\n// choose the one that comes\
  \ first in the list.\n// For example, if you are given \"Slices\" as the class and\
  \ a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you\
  \ should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest\
  \ extension \n// (its strength is -1).\n// Example:\n// for Strongest_Extension('my_class',\
  \ ['AA', 'Be', 'CC']) == 'my_class.AA'\nfunction Strongest_Extension($class_name,\
  \ $extensions) {\n"
tests: "function candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\"\
  , \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
  , \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"\
  zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\"\
  , \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\"\
  )) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !==\
  \ \"YameRore.okIWILL123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  finNNalLLly\", array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"\
  Bb\", \"91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(\"Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $strongest = array(\n        'extension' => NULL,\n        'strength'\
    \ => 0\n    );\n    foreach ($extensions as $key => $extension) {\n        $strength\
    \ = 0;\n        $caps = 0;\n        $smalls = 0;\n        $length = strlen($extension);\n\
    \        for ($i = 0; $i < $length; $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $caps++;\n            } else {\n                $smalls++;\n\
    \            }\n        }\n        $strength = $caps - $smalls;\n        if ($strongest['strength']\
    \ < $strength) {\n            $strongest['extension'] = $extension;\n        \
    \    $strongest['strength'] = $strength;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest['extension'];\n}", "    $strength = -100;\n    $strongest_extension\
    \ = '';\n    foreach ($extensions as $key => $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strength) {\n            $strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n$class_name\
    \ = 'my_class';\n$extensions = ['AA', 'Be', 'CC'];\nprint_r(Strongest_Extension($class_name,\
    \ $extensions));", "    $ext_strength = [];\n    foreach ($extensions as $extension)\
    \ {\n        $ext_strength[$extension] = substr_count(strtoupper($extension),\
    \ 'A') - substr_count(strtolower($extension), 'a');\n    }\n    asort($ext_strength);\n\
    \    $keys = array_keys($ext_strength);\n    return \"{$class_name}.{$keys[0]}\"\
    ;\n}\n", "  $strongest = -INF;\n  $strongest_extension = '';\n  foreach ($extensions\
    \ as $extension) {\n    $cap = preg_match_all('/[A-Z]/', $extension);\n    $sm\
    \ = preg_match_all('/[a-z]/', $extension);\n    $strength = $cap - $sm;\n    if\
    \ ($strength > $strongest) {\n      $strongest = $strength;\n      $strongest_extension\
    \ = $extension;\n    }\n  }\n  return $class_name . '.' . $strongest_extension;\n\
    }\n", "\t$strongest_strength = 0;\n\t$strongest_extension = \"\";\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$strength = extension_strength($extension);\n\t\tif ($strength\
    \ > $strongest_strength) {\n\t\t\t$strongest_strength = $strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name.\".\".$strongest_extension;\n\
    }", "  $strongest_extension = '';\n  $extension_strength = 0;\n  foreach ($extensions\
    \ as $extension) {\n    $extension_strength_new = 0;\n    for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n      if (ctype_upper($extension[$i])) {\n        $extension_strength_new++;\n\
    \      } else {\n        $extension_strength_new--;\n      }\n    }\n    if ($extension_strength_new\
    \ > $extension_strength) {\n      $extension_strength = $extension_strength_new;\n\
    \      $strongest_extension = $extension;\n    }\n  }\n  return $class_name .\
    \ '.' . $strongest_extension;\n}\n", "  $alph = array('A' => 1, 'B' => 2, 'C'\
    \ => 3, 'D' => 4, 'E' => 5, 'F' => 6, 'G' => 7, 'H' => 8, 'I' => 9, 'J' => 10,\
    \ 'K' => 11, 'L' => 12, 'M' => 13, 'N' => 14, 'O' => 15, 'P' => 16, 'Q' => 17,\
    \ 'R' => 18, 'S' => 19, 'T' => 20, 'U' => 21, 'V' => 22, 'W' => 23, 'X' => 24,\
    \ 'Y' => 25, 'Z' => 26);\n  $arr_extensions = array();\n  foreach ($extensions\
    \ as $extension) {\n    $upper = 0;\n    $lower = 0;\n    $arr_value = str_split($extension);\n\
    \    foreach ($arr_value as $value) {\n      if (is_numeric($value)) {\n     \
    \   continue;\n      }\n      if (in_array($value, array_keys($alph))) {\n   \
    \     $upper += $alph[$value];\n      } else {\n        $lower += $alph[strtoupper($value)];\n\
    \      }\n    }\n    $ext = $upper - $lower;\n    $arr_extensions[] = $ext;\n\
    \  }\n  $strong = array_search(max($arr_extensions), $arr_extensions);\n  return\
    \ $class_name . '.' . $extensions[$strong];\n}", "    $best = [\n        'strength'\
    \ => 0,\n        'extension' => null\n    ];\n    foreach ($extensions as $extension)\
    \ {\n        $strength = 0;\n        for ($i = 0; $i < strlen($extension); $i++)\
    \ {\n            if (ctype_upper($extension[$i])) {\n                $strength++;\n\
    \            } else {\n                $strength--;\n            }\n        }\n\
    \        if ($strength > $best['strength']) {\n            $best['strength'] =\
    \ $strength;\n            $best['extension'] = $extension;\n        }\n    }\n\
    \    return $class_name . '.' . $best['extension'];\n}", "    $strength_arr =\
    \ [];\n    $ext_arr = [];\n    foreach ($extensions as $ext) {\n        $strength\
    \ = strlen(preg_replace('/[^A-Z]/', '', $ext)) - strlen(preg_replace('/[^a-z]/',\
    \ '', $ext));\n        $strength_arr[] = $strength;\n        $ext_arr[] = $ext;\n\
    \    }\n    if (count(array_unique($strength_arr)) == 1) {\n        return $class_name\
    \ . '.' . $ext_arr[0];\n    }\n    $max_strength = max($strength_arr);\n    $index\
    \ = array_search($max_strength, $strength_arr);\n    return $class_name . '.'\
    \ . $ext_arr[$index];\n}", "\t$max = 0;\n\t$chosen = '';\n\tforeach ($extensions\
    \ as $extension) {\n\t\t$capl = 0;\n\t\t$sm = 0;\n\t\tfor ($i = 0; $i < strlen($extension);\
    \ $i++) {\n\t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$capl++;\n\t\t\t\
    } else {\n\t\t\t\t$sm++;\n\t\t\t}\n\t\t}\n\t\t$strength = $capl - $sm;\n\t\tif\
    \ ($strength > $max) {\n\t\t\t$max = $strength;\n\t\t\t$chosen = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $chosen;\n}\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);", "    // $extension_and_strength = array();\n    // $strongest_extension\
    \ = \"\";\n    // $strongest_strength = 0;\n    // foreach ($extensions as $extension)\
    \ {\n    //     $upper_case_letters = preg_match_all('/[A-Z]/', $extension);\n\
    \    //     $lower_case_letters = preg_match_all('/[a-z]/', $extension);\n   \
    \ //     $strength = $upper_case_letters - $lower_case_letters;\n    //     if\
    \ ($strength > $strongest_strength) {\n    //         $strongest_strength = $strength;\n\
    \    //         $strongest_extension = $extension;\n    //     }\n    // }\n \
    \   // return \"$class_name.$strongest_extension\";\n    return \"$class_name.\"\
    \ . array_reduce($extensions, function($a, $b) {\n        $uc = preg_match_all('/[A-Z]/',\
    \ $a);\n        $lw = preg_match_all('/[a-z]/', $a);\n        $strength_of_a =\
    \ $uc - $lw;\n        $uc = preg_match_all('/[A-Z]/', $b);\n        $lw = preg_match_all('/[a-z]/',\
    \ $b);\n        $strength_of_b = $uc - $lw;\n        return $strength_of_a > $strength_of_b\
    \ ? $a : $b;\n    });\n}\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);\n\
    echo Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']);\n\
    echo Strongest_Extension('my_class', ['AA', 'Be', 'CC', 'Z']);\necho Strongest_Extension('String',\
    \ ['numBeR', 'AAA', 'AS', 'card']);", "    $maxStrength = 0;\n    $maxExtension\
    \ = $extensions[0];\n    foreach ($extensions as $extension) {\n        $aCount\
    \ = 0;\n        $aSum = 0;\n        for ($i = 0; $i < strlen($extension); $i++)\
    \ {\n            if (ctype_upper($extension[$i])) $aCount++;\n            else\
    \ $aSum++;\n        }\n        $strength = $aCount - $aSum;\n        if ($strength\
    \ > $maxStrength) {\n            $maxStrength = $strength;\n            $maxExtension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $maxExtension;\n\
    }", "    $strength = -10;\n    $index = 0;\n    foreach ($extensions as $key =>\
    \ $extension) {\n        $up_count = preg_match_all('/[A-Z]/', $extension);\n\
    \        $down_count = preg_match_all('/[a-z]/', $extension);\n        $current_strength\
    \ = $up_count - $down_count;\n        if ($current_strength > $strength) {\n \
    \           $strength = $current_strength;\n            $index = $key;\n     \
    \   }\n    }\n    return \"$class_name.$extensions[$index]\";\n}\n\necho Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']);", "    $matches = [];\n    $strongest_extension\
    \ = [];\n    foreach ($extensions as $key => $value) {\n        $count_caps =\
    \ preg_match_all('/[A-Z]/', $value);\n        $count_smalls = preg_match_all('/[a-z]/',\
    \ $value);\n        $matches[$key] = $count_caps - $count_smalls;\n    }\n   \
    \ $max = max($matches);\n    $extensions_keys = array_keys($matches, $max);\n\
    \    return $class_name . '.' . $extensions[$extensions_keys[0]];\n}\n$class_name\
    \ = 'my_class';\n$extensions = ['SErviNGSliCes', 'Cheese', 'StuFfed'];\n$matches\
    \ = [];\n$strongest_extension = [];\nforeach ($extensions as $key => $value) {\n\
    \    $count_caps = preg_match_all('/[A-Z]/', $value);\n    $count_smalls = preg_match_all('/[a-z]/',\
    \ $value);\n    $matches[$key] = $count_caps - $count_smalls;\n}\n$max = max($matches);\n\
    $extensions_keys = array_keys($matches, $max);\necho Strongest_Extension($class_name,\
    \ $extensions);", "    $strongest_extension = $extensions[0];\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $key => $extension) {\n        $capital_letters\
    \ = 0;\n        $small_letters = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ord($extension[$i]) > 64 && ord($extension[$i]) < 91)\
    \ {\n                $capital_letters++;\n            } else if (ord($extension[$i])\
    \ > 96 && ord($extension[$i]) < 123) {\n                $small_letters++;\n  \
    \          }\n        }\n        $strength = $capital_letters - $small_letters;\n\
    \        if ($strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return $class_name . '.' . $strongest_extension;\n}\n", "    $strongest_extension\
    \ = $extensions[0];\n    $strongest_strength = ($strongest_extension == strtoupper($strongest_extension))\
    \ ? 0 : 1;\n    foreach ($extensions as $extension) {\n        $strength = $class_name\
    \ == strtoupper($class_name) ? 0 : 1;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) $strength++;\n       \
    \     else $strength--;\n        }\n        if ($strength > $strongest_strength)\
    \ {\n            $strongest_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }", "    $strongest_extension = null;\n    $strongest_value = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension);\n\
    \        $sm = preg_match_all('/[a-z]/', $extension);\n        $current_value\
    \ = $cap - $sm;\n        if ($current_value > $strongest_value) {\n          \
    \  $strongest_value = $current_value;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name.'.'.$strongest_extension;\n}\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);", "    $strength = 0;\n    $extension = '';\n    foreach\
    \ ($extensions as $key => $value) {\n        $ext = 0;\n        $cap = 0;\n  \
    \      $sm = 0;\n        for ($i = 0; $i < strlen($value); $i++) {\n         \
    \   if (ord($value[$i]) < 91 && ord($value[$i]) > 64) {\n                $cap++;\n\
    \            } else {\n                $sm++;\n            }\n        }\n    \
    \    $ext = $cap - $sm;\n        if ($ext > $strength) {\n            $strength\
    \ = $ext;\n            $extension = $value;\n        }\n    }\n    return $class_name\
    \ . '.' . $extension;\n}\nprint_r(Strongest_Extension('my_class', ['AA', 'Be',\
    \ 'CC']));\n", "    $ext = '';\n    $max = [0, -1];\n    foreach ($extensions\
    \ as $str) {\n        $cap = preg_match_all('/[A-Z]/', $str);\n        $sm = preg_match_all('/[a-z]/',\
    \ $str);\n        $power = $cap - $sm;\n        if ($power >= $max[0]) {\n   \
    \         $max = [$power, $str];\n        }\n    }\n    return $class_name . '.'\
    \ . $max[1];\n}\n\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);",
  "    $best_extension = \"\";\n    $best_strength = 0;\n    foreach ($extensions\
    \ as $extension) {\n        $extension_strength = count_chars($extension, 3) -\
    \ count_chars($extension, 2);\n        if ($extension_strength > $best_strength)\
    \ {\n            $best_strength = $extension_strength;\n            $best_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $best_extension;\n\
    }\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    $strength\
    \ = 0;\n    $index = 0;\n    $i = 0;\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $cap = preg_match_all('/[A-Z]/', $extensions[$i], $matches);\n\
    \        $sm = preg_match_all('/[a-z]/', $extensions[$i], $matches);\n       \
    \ $str = $cap - $sm;\n        if ($str > $strength) {\n            $strength =\
    \ $str;\n            $index = $i;\n        }\n    }\n    return $class_name .\
    \ '.' . $extensions[$index];\n}\necho Strongest_Extension('my_class', ['AA', 'Be',\
    \ 'CC']);", "    $exts = array_map(function($s) {\n        $cap_num = strlen(preg_replace('/[^A-Z]/',\
    \ '', $s));\n        $sm_num = strlen(preg_replace('/[^a-z]/', '', $s));\n   \
    \     return array(\n            'name' => $s,\n            'strength' => $cap_num\
    \ - $sm_num\n        );\n    }, $extensions);\n    usort($exts, function($a, $b)\
    \ {\n        return $a['strength'] < $b['strength'];\n    });\n    return $class_name\
    \ . '.' . $exts[0]['name'];\n}\necho Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']);", "    $extensions = array_map(function($ext) {\n   \
    \   return ['ext' => $ext, 'diff' => substr_count($ext, strtoupper($ext)) - substr_count($ext,\
    \ strtolower($ext))];\n    }, $extensions);\n    $strongest = array_reduce($extensions,\
    \ function($acc, $x) {\n      return $x['diff'] > $acc['diff'] ? $x : $acc;\n\
    \    }, ['ext' => '', 'diff' => 0]);\n    return $class_name . '.' . $strongest['ext'];\n\
    }\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    $class_name\
    \ .= '.';\n    $ratio = array();\n    $count = 0;\n    foreach ($extensions as\
    \ $extension) {\n        $uc_num = preg_match_all('/[A-Z]/', $extension);\n  \
    \      $lc_num = preg_match_all('/[a-z]/', $extension);\n        $ratio[$count]\
    \ = $uc_num / $lc_num;\n        $count++;\n    }\n    $max_ratio = max($ratio);\n\
    \    $key = array_search($max_ratio, $ratio);\n    return $class_name . $extensions[$key];\n\
    }\nprint_r(Strongest_Extension('my_class', ['AA', 'Be', 'CC']));", "    $result\
    \ = \"\";\n    $max_diff = -100;\n    for ($i = 0; $i < count($extensions); $i++)\
    \ {\n        $cap = preg_match_all('/[A-Z]/', $extensions[$i], $match_cap);\n\
    \        $sm = preg_match_all('/[a-z]/', $extensions[$i], $match_sm);\n      \
    \  $diff = $cap - $sm;\n        if ($diff > $max_diff) {\n            $max_diff\
    \ = $diff;\n            $result = $extensions[$i];\n        }\n    }\n    return\
    \ $class_name . \".\" . $result;\n}\n", "    $strength = [];\n    $count = 0;\n\
    \    foreach ($extensions as $value) {\n        $count += count_capital_letters($value);\n\
    \        $count -= count_small_letters($value);\n        $strength[] = $count;\n\
    \        $count = 0;\n    }\n    $max = max($strength);\n    $key = array_search($max,\
    \ $strength);\n    return $class_name . '.' . $extensions[$key];\n}", "    if\
    \ (count($extensions) == 0) {\n        return \"$class_name\";\n    }\n    $highest_strength\
    \ = 0;\n    $strongest_extension = '';\n    foreach ($extensions as $extension)\
    \ {\n        $upper_case_count = 0;\n        $lower_case_count = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $upper_case_count++;\n            } else if (ctype_lower($extension[$i]))\
    \ {\n                $lower_case_count++;\n            }\n        }\n        $strength\
    \ = $upper_case_count - $lower_case_count;\n        if ($strength > $highest_strength)\
    \ {\n            $highest_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return \"$class_name.$strongest_extension\"\
    ;\n}\n", "\t$count = 0;\n\t$result = '';\n\tforeach ($extensions as $key => $value)\
    \ {\n\t\t$strength = (int) preg_match_all('/[A-Z]/', $value, $matches) - (int)\
    \ preg_match_all('/[a-z]/', $value, $matches);\n\t\tif ($strength > $count) {\n\
    \t\t\t$count = $strength;\n\t\t\t$result = $class_name . '.' . $value;\n\t\t}\n\
    \t}\n\treturn $result;\n}\n\nprint_r(Strongest_Extension('my_class', ['AA', 'Be',\
    \ 'CC']));\n", "  foreach ($extensions as $extension) {\n    $c1 = $extension;\n\
    \    $c2 = preg_replace('/[^A-Z]/', '', $c1);\n    $a[] = array('name' => $c1,\
    \ 'CAP' => strlen($c2), 'SM' => preg_match_all('/[a-z]/', $c1, $matches), 'strong'\
    \ => strlen($c2) - preg_match_all('/[a-z]/', $c1, $matches));\n  }\n  $max = max(array_column($a,\
    \ 'strong'));\n  foreach ($a as $extension) {\n    if ($extension['strong'] ==\
    \ $max) {\n      $b[] = $extension['name'];\n    }\n  }\n  return $class_name\
    \ . '.' . reset($b);\n}\nprint_r(Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']));", "    $strength = -100;\n    $result = '';\n    foreach\
    \ ($extensions as $extension) {\n        $strength_cur = getStrength($extension);\n\
    \        if ($strength_cur > $strength) {\n            $strength = $strength_cur;\n\
    \            $result = $extension;\n        }\n    }\n    return $class_name .\
    \ '.' . $result;\n}", "    $extensions_with_strengths = [];\n    $strongest_extension\
    \ = \"\";\n    $strongest_strength = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $c = preg_match_all('/[A-Z]/', $extension, $matches, PREG_SET_ORDER,\
    \ 0);\n        $s = preg_match_all('/[a-z]/', $extension, $matches, PREG_SET_ORDER,\
    \ 0);\n        $strength = $c - $s;\n        if ($strength > $strongest_strength)\
    \ {\n            $strongest_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\nprint_r(Strongest_Extension('my_class', ['AA', 'Be', 'CC']));\n", "\t$strength\
    \ = null;\n\t$result = $class_name;\n\tforeach ($extensions as $extension) {\n\
    \t\t$temp = str_split($extension);\n\t\t$cap = 0;\n\t\t$sm = 0;\n\t\tforeach ($temp\
    \ as $char) {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$cap++;\n\t\t\t} else\
    \ {\n\t\t\t\t$sm++;\n\t\t\t}\n\t\t}\n\t\t$diff = $cap - $sm;\n\t\tif ($diff >\
    \ $strength) {\n\t\t\t$strength = $diff;\n\t\t\t$result = $class_name . '.' .\
    \ $extension;\n\t\t}\n\t}\n\treturn $result;\n}", "    $strength = [];\n    $count\
    \ = count($extensions);\n    for ($i = 0; $i < $count; $i++) {\n        $strength[$i]\
    \ = $extensions[$i];\n        for ($j = 0; $j < strlen($extensions[$i]); $j++)\
    \ {\n            if (strtoupper($extensions[$i][$j]) == $extensions[$i][$j]) {\n\
    \                $strength[$i]--;\n            } else {\n                $strength[$i]++;\n\
    \            }\n        }\n    }\n    $max_strength = max($strength);\n    $max_index\
    \ = array_search($max_strength, $strength);\n    return $class_name . '.' . $extensions[$max_index];\n\
    }\nprint_r(Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']));",
  "    $strength = 0;\n    $winner = null;\n    foreach ($extensions as $extension)\
    \ {\n        $score = $extension_score = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            $extension_score += (ctype_upper($extension[$i])) ? 1 :\
    \ -1;\n        }\n        if ($extension_score > $score) {\n            $winner\
    \ = $extension;\n            $score = $extension_score;\n        }\n    }\n  \
    \  return $class_name . '.' . $winner;\n}", "    $extension_name = '';\n    $strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = Get_Extension_Strength($extension);\n        if ($extension_strength > $strength)\
    \ {\n            $strength = $extension_strength;\n            $extension_name\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $extension_name;\n\
    }", "  $strongest = 0;\n  $strongest_extension = null;\n  foreach ($extensions\
    \ as $extension) {\n    $CAP = 0;\n    $SM = 0;\n    for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n      if (ctype_upper($extension[$i])) {\n        $CAP++;\n      }\
    \ else {\n        $SM++;\n      }\n    }\n    $strength = $CAP - $SM;\n    if\
    \ ($strength >= $strongest) {\n      $strongest = $strength;\n      $strongest_extension\
    \ = $extension;\n    }\n  }\n  return $class_name.'.'.$strongest_extension;\n\
    }\n\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    foreach\
    \ ($extensions as $key => $extension) {\n        $extensions[$key] = [\n     \
    \       'extension' => $extension,\n            'strength' => strength($extension)\n\
    \        ];\n    }\n    $strongest_extension = array_reduce($extensions, function($a,\
    \ $b) {\n        return $a['strength'] > $b['strength'] ? $a : $b;\n    });\n\
    \    return $class_name . '.' . $strongest_extension['extension'];\n}\n", "  \
    \  $array_strength = [];\n    foreach ($extensions as $extension) {\n        $array_strength[]\
    \ = [\n            'name' => $extension,\n            'strength' => substr_count(strtoupper($extension),\
    \ 'A-Z') - substr_count(strtolower($extension), 'a-z')\n        ];\n    }\n  \
    \  usort($array_strength, function($a, $b) {\n        return $a['strength'] >\
    \ $b['strength'];\n    });\n    return $class_name.'.'.$array_strength[0]['name'];\n\
    }", "  $extensions_count = count($extensions);\n  $result = [];\n  for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n    $characters = str_split($extensions[$i]);\n\
    \    $lowercase_count = 0;\n    $uppercase_count = 0;\n    $characters_count =\
    \ count($characters);\n    for ($j = 0; $j < $characters_count; $j++) {\n    \
    \  if (ctype_lower($characters[$j])) {\n        $lowercase_count++;\n      } else\
    \ {\n        $uppercase_count++;\n      }\n    }\n    $result[$i] = abs($uppercase_count\
    \ - $lowercase_count);\n  }\n  $max_strength = array_keys($result, max($result))[0];\n\
    \  return \"$class_name.$extensions[$max_strength]\";\n}\nprint_r(Strongest_Extension('pizza',\
    \ ['Cheese', 'pizzaTOpPings', 'onIOn', 'pePPEr']));", "    $strongest = ['', 0];\n\
    \    foreach ($extensions as $extension) {\n        $cap = 0;\n        $sm = 0;\n\
    \        for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ $cap++;\n            elseif (ctype_lower($extension[$i])) $sm++;\n        }\n\
    \        $strength = $cap - $sm;\n        if ($strength > $strongest[1]) {\n \
    \           $strongest[0] = $extension;\n            $strongest[1] = $strength;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest[0];\n}\necho(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']));", "    $best_extension = $extensions[0];\n    $best_strength\
    \ = -1;\n    for ($i = 0; $i < count($extensions); $i++) {\n        $strength\
    \ = 0;\n        for ($j = 0; $j < strlen($extensions[$i]); $j++) {\n         \
    \   if (ctype_upper($extensions[$i][$j])) {\n                $strength += 1;\n\
    \            } else if (ctype_lower($extensions[$i][$j])) {\n                $strength\
    \ -= 1;\n            }\n        }\n        if ($strength > $best_strength) {\n\
    \            $best_strength = $strength;\n            $best_extension = $extensions[$i];\n\
    \        }\n    }\n    return $class_name . '.' . $best_extension;\n}\n", "  \
    \  $exts = array_map(function($e) {\n        $count_up = preg_match_all('/[A-Z]/',\
    \ $e);\n        $count_down = preg_match_all('/[a-z]/', $e);\n        return abs($count_up\
    \ - $count_down);\n    }, $extensions);\n    $max = max($exts);\n    $index =\
    \ array_search($max, $exts);\n    return \"{$class_name}.{$extensions[$index]}\"\
    ;\n}\n", "    $strength = -1;\n    $strongest = \"\";\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $extension = $extensions[$i];\n        $c = preg_match_all('/[A-Z]/',\
    \ $extension, $matches);\n        $s = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        $strength = max($strength, $c - $s);\n        if ($strength == $c - $s)\
    \ {\n            $strongest = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest;\n}\n", "    $cap = $sm = 0;\n    $result = '';\n    for\
    \ ($i = 0; $i < count($extensions); $i++) {\n        $cap = 0;\n        $sm =\
    \ 0;\n        for ($j = 0; $j < strlen($extensions[$i]); $j++) {\n           \
    \ if (ord($extensions[$i][$j]) > 64 && ord($extensions[$i][$j]) < 91) {\n    \
    \            $cap++;\n            } else if (ord($extensions[$i][$j]) > 96 &&\
    \ ord($extensions[$i][$j]) < 123) {\n                $sm++;\n            }\n \
    \       }\n        if ($cap - $sm > $cap2 - $sm2) {\n            $cap2 = $cap;\n\
    \            $sm2 = $sm;\n            $result = $extensions[$i];\n        }\n\
    \    }\n    return $class_name . '.' . $result;\n}\n$class_name = 'my_class';\n\
    $extensions = ['AA', 'Be', 'CC'];\nprint_r(Strongest_Extension($class_name, $extensions));",
  "  $s = [];\n  foreach ($extensions as $extension) {\n    $s[] = [$extension, count(preg_split('//u',\
    \ $extension, -1, PREG_SPLIT_NO_EMPTY)) - count(preg_split('//u', strtolower($extension),\
    \ -1, PREG_SPLIT_NO_EMPTY))];\n  }\n  usort($s, function($a, $b) { return $a[1]\
    \ === $b[1] ? ($a[0] > $b[0] ? 1 : -1) : ($a[1] < $b[1] ? 1 : -1); });\n  return\
    \ $class_name . '.' . $s[0][0];\n}\n", "\t$highest_strength = -1000;\n\t$strongest_extension\
    \ = '';\n\t$class_extension = '';\n\tforeach ($extensions as $extension) {\n\t\
    \t$strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif\
    \ (strtoupper($extension[$i]) == $extension[$i]) {\n\t\t\t\t$strength++;\n\t\t\
    \t} else {\n\t\t\t\t$strength--;\n\t\t\t}\n\t\t}\n\t\tif ($strength > $highest_strength)\
    \ {\n\t\t\t$highest_strength = $strength;\n\t\t\t$strongest_extension = $extension;\n\
    \t\t}\n\t}\n\treturn $class_name . '.' . $strongest_extension;\n}", "  $ext_strength\
    \ = [];\n  foreach ($extensions as $ext) {\n    $cap = preg_match_all('/[A-Z]/',\
    \ $ext);\n    $sm = preg_match_all('/[a-z]/', $ext);\n    $ext_strength[$ext]\
    \ = $cap - $sm;\n  }\n  return $class_name . '.' . array_search(max($ext_strength),\
    \ $ext_strength);\n}\n\nprint_r(Strongest_Extension('my_class', ['AA', 'Be', 'CC']));",
  "    $strongest = 0;\n    $result = $class_name;\n    foreach ($extensions as $i\
    \ => $extension) {\n        $upper = 0;\n        $lower = 0;\n        for ($j\
    \ = 0; $j < strlen($extension); $j++) {\n            if (ctype_upper($extension[$j]))\
    \ {\n                $upper++;\n            } else {\n                $lower++;\n\
    \            }\n        }\n        $strength = $upper - $lower;\n        if ($strength\
    \ > $strongest) {\n            $strongest = $strength;\n            $result =\
    \ $class_name . '.' . $extension;\n        }\n    }\n    return $result;\n}",
  "    $class_name .= '.';\n    // Lets build regex to capture the strength and the\
    \ extension name\n    $regex = '/' . $class_name . '([a-zA-Z]*)(?:\\.([a-zA-Z]*))?$/';\n\
    \    // Find the strongest extension\n    $temp = [$class_name, 0];\n    foreach\
    \ ($extensions as $extension) {\n        // Matches the extension name and the\
    \ strength\n        if (preg_match($regex, $extension, $matches)) {\n        \
    \    $cap = strlen($matches[1]);\n            $sm = strlen($matches[2]);\n   \
    \         $strength = $cap - $sm;\n            if ($strength > $temp[1]) {\n \
    \               $temp = [$extension, $strength];\n            }\n        }\n \
    \   }\n    return $temp[0];\n}", "    $strength = -1;\n    $strongest_extension\
    \ = '';\n    foreach ($extensions as $extension) {\n        $uppercase_letters\
    \ = preg_match_all('/[A-Z]/', $extension);\n        $lowercase_letters = preg_match_all('/[a-z]/',\
    \ $extension);\n        $strength_of_extension = $uppercase_letters - $lowercase_letters;\n\
    \        if ($strength_of_extension > $strength) {\n            $strength = $strength_of_extension;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ \"$class_name.$strongest_extension\";\n}\n\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);\necho \"<br>\";\necho Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']);", "    $newArray = [];\n    foreach ($extensions as $key\
    \ => $value) {\n        $newArray[$key] = (substr_count($value, range('A', 'Z'))\
    \ - substr_count($value, range('a', 'z')));\n    }\n    arsort($newArray);\n \
    \   $theKey = array_search(max($newArray), $newArray);\n    return $class_name\
    \ . '.' . $extensions[$theKey];\n}\necho Strongest_Extension('my_class', ['AA',\
    \ 'Be', 'CC']);", "\t\n}", "  $strength = 0;\n  $ext = '';\n  foreach ($extensions\
    \ as $val) {\n    $upper = preg_match_all('/[A-Z]/', $val, $match);\n    $lower\
    \ = preg_match_all('/[a-z]/', $val, $match);\n    $stren = $upper - $lower;\n\
    \    if ($stren > $strength) {\n      $strength = $stren;\n      $ext = $val;\n\
    \    }\n  }\n  return $class_name . '.' . $ext;\n}\n\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);", "    $ext = '';\n    $strongest = 0;\n    foreach ($extensions\
    \ as $extension) {\n        $upper = preg_match_all('/[A-Z]/', $extension, $out);\n\
    \        $lower = preg_match_all('/[a-z]/', $extension, $out);\n        $strength\
    \ = $upper - $lower;\n        if ($strength > $strongest) {\n            $strongest\
    \ = $strength;\n            $ext = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $ext;\n}\n\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);",
  "    // \u041C\u043E\u0436\u043D\u043E \u043F\u0440\u0438\u0434\u0443\u043C\u0430\
    \u0442\u044C \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0440\u0435\
    \u0448\u0435\u043D\u0438\u0439. \u042F \u0432\u044B\u0431\u0440\u0430\u043B \u0432\
    \u0430\u0440\u0438\u0430\u043D\u0442 \u0441 \u0440\u0435\u0433\u0443\u043B\u044F\
    \u0440\u043D\u044B\u043C\u0438 \u0432\u044B\u0440\u0430\u0436\u0435\u043D\u0438\
    \u044F\u043C\u0438.\n    // \u041F\u0440\u043E\u0441\u0442\u043E \u0432\u0435\u0434\
    \u044C \u043F\u043E\u0434\u0441\u0447\u0438\u0442\u0430\u0442\u044C \u0447\u0438\
    \u0441\u043B\u043E \u0431\u043E\u043B\u044C\u0448\u0438\u0445 \u0438 \u043C\u0430\
    \u043B\u0435\u043D\u044C\u043A\u0438\u0445 \u0431\u0443\u043A\u0432. \u0422\u0430\
    \u043A \u0432\u0441\u0435 \u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\
    \u043E\n    // \u043F\u0440\u043E\u0441\u0442\u043E. \u0422\u043E\u043B\u044C\u043A\
    \u043E \u0438\u043C\u044F \u043A\u043B\u0430\u0441\u0441\u0430 \u043D\u0430\u0434\
    \u043E \u0438\u0437\u043C\u0435\u043D\u0438\u0442\u044C: \u043E\u043D\u043E \u0434\
    \u043E\u043B\u0436\u043D\u043E \u043D\u0430\u0447\u0438\u043D\u0430\u0442\u044C\
    \u0441\u044F \u0441 \u0431\u043E\u043B\u044C\u0448\u043E\u0439\n    // \u0431\u0443\
    \u043A\u0432\u044B. \u041D\u043E \u043C\u044B \u0432\u0440\u043E\u0434\u0435 \u0431\
    \u044B \u0432\u044B\u0448\u0435 \u0441 \u043D\u0438\u043C \u043D\u0435 \u043F\u0440\
    \u043E\u0448\u043B\u0438\u0441\u044C \u043F\u043E \u0443\u0441\u043B\u043E\u0432\
    \u0438\u044E \u0437\u0430\u0434\u0430\u0447\u0438.\n    $names = [];\n    $class_name\
    \ = ucfirst($class_name); // \u0418\u043C\u044F \u043A\u043B\u0430\u0441\u0441\
    \u0430 \u0434\u043E\u043B\u0436\u043D\u043E \u043D\u0430\u0447\u0438\u043D\u0430\
    \u0442\u044C\u0441\u044F \u0441 \u0431\u043E\u043B\u044C\u0448\u043E\u0439 \u0431\
    \u0443\u043A\u0432\u044B.\n    foreach ($extensions as $ext) {\n        $names[]\
    \ = $class_name.'.'.$ext;\n    }\n    $count = count($names);\n    for ($i = 0;\
    \ $i < $count; $i++) {\n        $string = $names[$i];\n        $strength = preg_match_all('/[A-Z]/',\
    \ $string) - preg_match_all('/[a-z]/', $string);\n        $strengths[] = $strength",
  "    $class_name = preg_replace('/[^A-Za-z]/', '', $class_name);\n    $max = -1;\n\
    \    $max_extension = '';\n    foreach ($extensions as $key => $extension) {\n\
    \        $extension = preg_replace('/[^A-Za-z]/', '', $extension);\n        $extension_length\
    \ = strlen($extension);\n        $uppercase_letters = preg_match_all('/[A-Z]/',\
    \ $extension);\n        $lowercase_letters = preg_match_all('/[a-z]/', $extension);\n\
    \        $extension_strength = ($uppercase_letters / $extension_length) - ($lowercase_letters\
    \ / $extension_length);\n        if ($extension_strength > $max) {\n         \
    \   $max = $extension_strength;\n            $max_extension = $extension;\n  \
    \      }\n    }\n    return $class_name . '.' . $max_extension;\n}\n\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);\necho \"\\n\";\necho Strongest_Extension('my_class', ['AA',\
    \ 'Be', 'DD', 'CC']);\necho \"\\n\";\necho Strongest_Extension('my_class', ['AA',\
    \ 'Be', 'DD', 'CC', 'EE']);\necho \"\\n\";\necho Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']);\necho \"\\n\";\necho Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'SliceBe']);\necho \"\\n\";\necho Strongest_Extension('my_class',\
    \ ['AA', 'BB', 'CC', 'DD', 'EE', 'FF', 'GG', 'HH', 'II', 'JJ', 'KK', 'LL', 'MM',\
    \ 'NN', 'OO', 'PP', 'QQ', 'RR', 'SS', 'TT', 'UU', 'VV', 'WW", "    // we have\
    \ to have a class name and at least one extension\n    if (is_string($class_name)\
    \ && is_array($extensions) && count($extensions) >= 1) {\n        // the extension\
    \ strength is the ratio of uppercase and lowercase letters\n        $strength\
    \ = function($str) {\n            $upper = 0;\n            $lower = 0;\n     \
    \       // count upper and lower\n            for ($i = 0; $i < strlen($str);\
    \ $i++) {\n                if (ctype_upper($str[$i])) {\n                    $upper++;\n\
    \                } else {\n                    $lower++;\n                }\n\
    \            }\n            // return the strength as a fraction\n           \
    \ return $upper / $lower;\n        };\n        // set initial values\n       \
    \ $max_strength = $strength($extensions[0]);\n        $max_strength_extension\
    \ = $extensions[0];\n        // iterate over extensions\n        for ($i = 1;\
    \ $i < count($extensions); $i++) {\n            // check strength\n          \
    \  $curr_strength = $strength($extensions[$i]);\n            // compare strength\n\
    \            if ($curr_strength > $max_strength) {\n                $max_strength\
    \ = $curr_strength;\n                $max_strength_extension = $extensions[$i];\n\
    \            }\n        }\n        // return class name with strongest extension\n\
    \        return $class_name . '.' . $max_strength_extension;\n    }\n    // if\
    \ no class name or no extensions\n    return false;\n}", "    $str = \"\";\n \
    \   $str_max = 0;\n    foreach ($extensions as $value) {\n        $str_calc =\
    \ (substr_count($value, range('A', 'Z')) - substr_count($value, range('a', 'z')));\n\
    \        if ($str_calc > $str_max) {\n            $str_max = $str_calc;\n    \
    \        $str = $value;\n        }\n    }\n    return $class_name . \".\" . $str;\n\
    }", "    $max = 0;\n    $res = '';\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $cap = 0;\n        $sm = 0;\n        for ($j = 0; $j < strlen($extensions[$i]);\
    \ $j++) {\n            if (ctype_upper($extensions[$i][$j])) {\n             \
    \   $cap++;\n            } elseif (ctype_lower($extensions[$i][$j])) {\n     \
    \           $sm++;\n            }\n        }\n        if ($cap - $sm > $max) {\n\
    \            $max = $cap - $sm;\n            $res = $extensions[$i];\n       \
    \ }\n    }\n    return $class_name . '.' . $res;\n}\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);", "    $strength_arr = [];\n    foreach ($extensions as\
    \ $extension) {\n        $strength = strlen(preg_replace('/[a-z]/', '', $extension))\
    \ - strlen(preg_replace('/[A-Z]/', '', $extension));\n        $strength_arr[$extension]\
    \ = $strength;\n    }\n    arsort($strength_arr);\n    $extension = reset($strength_arr);\n\
    \    return $class_name . '.' . $extension;\n}\n\necho Strongest_Extension('my_class',\
    \ ['Aa', 'Be', 'CC']);\n", "  $ext_count = 0;\n  $strongest_ext = '';\n  $strongest_strength\
    \ = 0;\n  $strength = 0;\n  $UPPER = 0;\n  $LOWER = 0;\n  for ($i = 0; $i < count($extensions);\
    \ $i++) {\n    for ($j = 0; $j < strlen($extensions[$i]); $j++) {\n      if (ctype_upper($extensions[$i][$j]))\
    \ {\n        $UPPER++;\n      } else {\n        $LOWER++;\n      }\n    }\n  \
    \  $strength = $UPPER - $LOWER;\n    if ($strength >= $strongest_strength) {\n\
    \      $strongest_strength = $strength;\n      $strongest_ext = $extensions[$i];\n\
    \    }\n    $UPPER = 0;\n    $LOWER = 0;\n  }\n  return $class_name . '.' . $strongest_ext;\n\
    }\n\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "  $score = [];\n\
    \  foreach ($extensions as $key => $value) {\n    $value = str_split($value);\n\
    \    $count_cap = 0;\n    $count_sm = 0;\n    foreach ($value as $key2 => $value2)\
    \ {\n      if (ctype_upper($value2)) {\n        $count_cap++;\n      } else {\n\
    \        $count_sm++;\n      }\n    }\n    $score[$key] = $count_cap - $count_sm;\n\
    \  }\n  $max = array_keys($score, max($score));\n  $index = $max[0];\n  return\
    \ $class_name . '.' . $extensions[$index];\n}\nprint_r(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']));", "    $ext_strengths = [];\n    foreach ($extensions\
    \ as $ext) {\n        $ext_strengths[$ext] = get_ext_strength($ext);\n    }\n\
    \    // Sorting an array by its values\n    // https://www.php.net/manual/en/function.asort.php\n\
    \    asort($ext_strengths);\n    $class_ext = $class_name . '.' . array_key_first($ext_strengths);\n\
    \    return $class_ext;\n}\n", "    // get the strength of each extension\n  \
    \  $ext_strengths = array_map(function($ext) {\n        $cap_count = strlen(preg_replace('/[^A-Z]/',\
    \ '', $ext));\n        $small_count = strlen(preg_replace('/[^a-z]/', '', $ext));\n\
    \        return $cap_count - $small_count;\n    }, $extensions);\n    // find\
    \ the index of the strongest extension\n    $strongest_idx = array_search(max($ext_strengths),\
    \ $ext_strengths);\n    // return \"ClassName.StrongestExtensionName\"\n    return\
    \ \"$class_name.$extensions[$strongest_idx]\";\n}\n", "    $strengths = [];\n\
    \    foreach ($extensions as $key => $extension) {\n        $strengths[$key] =\
    \ count(preg_grep('/[A-Z]/', str_split($extension))) - count(preg_grep('/[a-z]/',\
    \ str_split($extension)));\n    }\n    $max_strength = max($strengths);\n    $strongest_extension\
    \ = array_search($max_strength, $strengths);\n    return $class_name.'.'.$extensions[$strongest_extension];\n\
    }\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    $strongest\
    \ = [0, \"\"];\n    foreach ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extension);\n        $sm = preg_match_all('/[a-z]/', $extension);\n       \
    \ $strength = $cap - $sm;\n        if ($strength > $strongest[0]) {\n        \
    \    $strongest = [$strength, $extension];\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest[1];\n}\n", "    $extStrength = [];\n    $ext = [];\n  \
    \  foreach ($extensions as $extension) {\n        $ext[] = $extension;\n     \
    \   $extStrength[] = strength($extension);\n    }\n    $max = max($extStrength);\n\
    \    $index = array_search($max, $extStrength);\n    return $class_name . '.'\
    \ . $ext[$index];\n}\n", "    // define strength as CAP - SM\n    // where CAP\
    \ is the number of capital letters in extension\n    // and SM is the number of\
    \ lowercase letters in extension\n    $strength = $extensions[0];\n    $ext =\
    \ $extensions[0];\n    for ($i = 1; $i < count($extensions); $i++) {\n       \
    \ $CAP = preg_match_all('/[A-Z]/', $extensions[$i], $matches);\n        $SM =\
    \ preg_match_all('/[a-z]/', $extensions[$i], $matches);\n        if ($CAP - $SM\
    \ > $strength) {\n            $strength = $CAP - $SM;\n            $ext = $extensions[$i];\n\
    \        }\n    }\n    return $class_name.'.'.$ext;\n}", "  $strength = -1;\n\
    \  $class = '';\n  foreach ($extensions as $extension) {\n    $count = strlen(preg_replace('/[^A-Z]/',\
    \ '', $extension));\n    $count_small = strlen(preg_replace('/[^a-z]/', '', $extension));\n\
    \    $str = $count - $count_small;\n    if ($str > $strength) {\n      $strength\
    \ = $str;\n      $class = $extension;\n    }\n  }\n  return \"$class_name.$class\"\
    ;\n}\n\necho Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']);",
  "    if(empty($extensions)) return $class_name . '.' . $extensions[0];\n    $strength\
    \ = array_map(function($e) {\n        return substr_count(strtoupper($e), 'A-Z')\
    \ - substr_count(strtolower($e), 'a-z');\n    }, $extensions);\n    $max = max($strength);\n\
    \    $index = array_search($max, $strength);\n    return $class_name . '.' . $extensions[$index];\n\
    }\n", "    $strengths = [];\n    foreach ($extensions as $extension) {\n     \
    \   $strengths[] = array(\n            'name' => $extension,\n            'strength'\
    \ => preg_match_all('/[A-Z]/', $extension) - preg_match_all('/[a-z]/', $extension)\n\
    \        );\n    }\n    // Sort by strength, descending\n    usort($strengths,\
    \ function($a, $b) {\n        return $b['strength'] - $a['strength'];\n    });\n\
    \    // Get the name of the strongest\n    $strongest = $strengths[0]['name'];\n\
    \    return $class_name . '.' . $strongest;\n}\necho Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']);", "  $extension_strengths = [];\n \
    \ foreach ($extensions as $extension) {\n    $extension_strengths[$extension]\
    \ = num_uppercase($extension) - num_lowercase($extension);\n  }\n  return $class_name\
    \ . '.' . array_search(max($extension_strengths), $extension_strengths);\n}",
  "   $highest_strength = 0;\n   $strongest_extension = '';\n   foreach ($extensions\
    \ as $extension) {\n      $caps = preg_match_all('/[A-Z]/', $extension);\n   \
    \   $small = preg_match_all('/[a-z]/', $extension);\n      $strength = $caps -\
    \ $small;\n      if ($strength > $highest_strength) {\n         $highest_strength\
    \ = $strength;\n         $strongest_extension = $extension;\n      }\n   }\n \
    \  $class_name .= '.' . $strongest_extension;\n   return $class_name;\n}\necho\
    \ Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']);\necho\
    \ \"\\n\";", "    $st_ext = '';\n    $max_strength = 0;\n    $strength = 0;\n\
    \    $cap = 0;\n    $sm = 0;\n    foreach ($extensions as $ext) {\n        for\
    \ ($i = 0; $i < strlen($ext); $i++) {\n            if (ord($ext[$i]) >= 65 &&\
    \ ord($ext[$i]) <= 90) $cap++;\n            if (ord($ext[$i]) >= 97 && ord($ext[$i])\
    \ <= 122) $sm++;\n        }\n        $strength = $cap - $sm;\n        if ($strength\
    \ > $max_strength) {\n            $max_strength = $strength;\n            $st_ext\
    \ = $ext;\n        }\n        $cap = 0;\n        $sm = 0;\n    }\n    return \"\
    $class_name.$st_ext\";\n}", "    $max_strength = 0;\n    $max_strength_extension\
    \ = '';\n    foreach ($extensions as $extension) {\n        $upper_case_letters\
    \ = preg_match_all('/[A-Z]/', $extension);\n        $lower_case_letters = preg_match_all('/[a-z]/',\
    \ $extension);\n        $strength = $upper_case_letters - $lower_case_letters;\n\
    \        if ($strength > $max_strength) {\n            $max_strength = $strength;\n\
    \            $max_strength_extension = $extension;\n        }\n    }\n    return\
    \ $class_name . '.' . $max_strength_extension;\n}\n\necho 'Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]) is ';\necho Strongest_Extension(\"\
    Slices\", [\"SErviNGSliCes\", \"Cheese\", \"StuFfed\"]) . \"<br>\";\necho 'Strongest_Extension(\"\
    my_class\", [\"AA\", \"Be\", \"CC\"]) is ';\necho Strongest_Extension(\"my_class\"\
    , [\"AA\", \"Be\", \"CC\"]) . \"<br>\";\n", "  $best_extension = '';\n  $best_extension_strength\
    \ = 0;\n  foreach ($extensions as $extension) {\n    $extension_strength = strlen(preg_replace('/[^A-Z]/',\
    \ '', $extension)) - strlen(preg_replace('/[^a-z]/', '', $extension));\n    if\
    \ ($extension_strength > $best_extension_strength) {\n      $best_extension =\
    \ $extension;\n      $best_extension_strength = $extension_strength;\n    }\n\
    \  }\n  return $class_name . '.' . $best_extension;\n}\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) . '<br>';\necho Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']) . '<br>';\necho Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed', 'slices']) . '<br>';", "  \n}\n", "    $strongest_extension\
    \ = $extensions[0];\n    $highest_strength = 0;\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $extension = $extensions[$i];\n        $capital_letters = preg_match_all('/[A-Z]/',\
    \ $extension);\n        $small_letters = preg_match_all('/[a-z]/', $extension);\n\
    \        $strength = $capital_letters - $small_letters;\n        if ($strength\
    \ > $highest_strength) {\n            $highest_strength = $strength;\n       \
    \     $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\necho '<pre>';\nvar_dump(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC'])); // 'my_class.AA'\nvar_dump(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CCC'])); // 'my_class.CCC'\nvar_dump(Strongest_Extension('my_class',\
    \ ['AA', 'BB', 'CC'])); // 'my_class.AA'\nvar_dump(Strongest_Extension('my_class',\
    \ ['AA', 'BB', 'CC'])); // 'my_class.AA'\nvar_dump(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed'])); // 'Slices.SErviNGSliCes'\nvar_dump(Strongest_Extension('Nail',\
    \ ['FoiledNails', 'BlueNails', 'FakeNails'])); // 'Nail.FoiledNails'\nvar_dump(Strongest_Extension('House',\
    \ ['House', 'TinyHouse', 'TinyTinyHouse'])); // 'House.House'\nvar_dump(Strongest_Extension('House',\
    \ ['TinyHouse', 'TinyTinyHouse', 'House'])); // 'House.House'\nvar_dump(Strongest_Extension('House',\
    \ ['Tiny", "    $strength = 0;\n    $index_strongest = 0;\n    for ($i = 0; $i\
    \ < count($extensions); $i++) {\n        $extension_strength = CAP($extensions[$i])\
    \ - SM($extensions[$i]);\n        if ($extension_strength > $strength) {\n   \
    \         $strength = $extension_strength;\n            $index_strongest = $i;\n\
    \        }\n    }\n    return $class_name . '.' . $extensions[$index_strongest];\n\
    }\n", "    $max = 0;\n    $ext_name = \"\";\n    foreach ($extensions as $ext)\
    \ {\n        $upper = count_upper($ext);\n        $lower = count_lower($ext);\n\
    \        $str = $upper - $lower;\n        if ($str > $max) {\n            $max\
    \ = $str;\n            $ext_name = $ext;\n        }\n    }\n    return $class_name\
    \ . \".\" . $ext_name;\n}\n", "  $strength = 0;\n  $strongest_extension = \"\"\
    ;\n  for ($i = 0; $i < count($extensions); $i++) {\n    $cap = preg_match_all('/[A-Z]/',\
    \ $extensions[$i], $matches);\n    $sm = preg_match_all('/[a-z]/', $extensions[$i],\
    \ $matches);\n    $result = ($cap / $sm) - $sm;\n    if ($result > $strength)\
    \ {\n      $strength = $result;\n      $strongest_extension = $extensions[$i];\n\
    \    }\n  }\n  return \"$class_name.$strongest_extension\";\n}\nprint_r(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']));", "    if (count($extensions) == 0) {\n        return\
    \ $class_name;\n    }\n    $strength = 0;\n    $extension = $extensions[0];\n\
    \    for ($i = 0; $i < count($extensions); $i++) {\n        $num = strlen(preg_replace('/[^A-Z]/',\
    \ '', $extensions[$i]));\n        $den = strlen(preg_replace('/[^a-z]/', '', $extensions[$i]));\n\
    \        if (($num - $den) > $strength) {\n            $strength = $num - $den;\n\
    \            $extension = $extensions[$i];\n        }\n    }\n    return $class_name\
    \ . '.' . $extension;\n}\necho \"<pre>\";\nprint_r(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\necho \"</pre>\";", "  $strongest_extension\
    \ = '';\n  $extension_strength = 0;\n  foreach ($extensions as $extension) {\n\
    \    $extension_array = str_split($extension);\n    $extension_sm = 0;\n    $extension_cap\
    \ = 0;\n    foreach ($extension_array as $letter) {\n      if (ctype_lower($letter))\
    \ {\n        $extension_sm++;\n      } else {\n        $extension_cap++;\n   \
    \   }\n    }\n    $strength = $extension_cap - $extension_sm;\n    if ($strength\
    \ >= $extension_strength) {\n      $extension_strength = $strength;\n      $strongest_extension\
    \ = $extension;\n    }\n  }\n  return $class_name . '.' . $strongest_extension;\n\
    }", "    $strength = [];\n    foreach ($extensions as $key => $value) {\n    \
    \    $strength[$key] = ((substr_count($value, 'A')+substr_count($value, 'B')+substr_count($value,\
    \ 'C')+substr_count($value, 'D')+substr_count($value, 'E')+substr_count($value,\
    \ 'F')+substr_count($value, 'G')+substr_count($value, 'H')+substr_count($value,\
    \ 'I')+substr_count($value, 'J')+substr_count($value, 'K')+substr_count($value,\
    \ 'L')+substr_count($value, 'M')+substr_count($value, 'N')+substr_count($value,\
    \ 'O')+substr_count($value, 'P')+substr_count($value, 'Q')+substr_count($value,\
    \ 'R')+substr_count($value, 'S')+substr_count($value, 'T')+substr_count($value,\
    \ 'U')+substr_count($value, 'V')+substr_count($value, 'W')+substr_count($value,\
    \ 'X')+substr_count($value, 'Y')+substr_count($value, 'Z'))-(substr_count($value,\
    \ 'a')+substr_count($value, 'b')+substr_count($value, 'c')+substr_count($value,\
    \ 'd')+substr_count($value, 'e')+substr_count($value, 'f')+substr_count($value,\
    \ 'g')+substr_count($value, 'h')+substr_count($value, 'i')+substr_count($value,\
    \ 'j')+substr_count($value, 'k')+substr_count($value, 'l')+substr_count($value,\
    \ 'm')+substr_count($value, 'n')+substr_count($value, 'o')+substr_count($value,\
    \ 'p')+substr_count($value, 'q')+substr_count($value,", "    // Your code goes\
    \ here!\n    $strongest = 0;\n    $result = \"\";\n    foreach ($extensions as\
    \ $ext) {\n        $caps = preg_match_all('/[A-Z]/', $ext);\n        $smalls =\
    \ preg_match_all('/[a-z]/', $ext);\n        $strength = $caps - $smalls;\n   \
    \     if ($strength > $strongest) {\n            $strongest = $strength;\n   \
    \         $result = $ext;\n        }\n    }\n    return $class_name . \".\" .\
    \ $result;\n}", "    $previous = 0;\n    $strongest = '';\n    foreach ($extensions\
    \ as $extension) {\n        // count uppercase letters\n        $upper_case =\
    \ 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $upper_case++;\n            }\n        }\n        // count\
    \ lowercase letters\n        $lower_case = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_lower($extension[$i])) {\n                $lower_case++;\n\
    \            }\n        }\n        // find the strongest\n        if ($upper_case\
    \ - $lower_case > $previous) {\n            $previous = $upper_case - $lower_case;\n\
    \            $strongest = $extension;\n        }\n    }\n    return \"$class_name.$strongest\"\
    ;\n}\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    $strongest_extension\
    \ = '';\n    $strongest_extension_power = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $extension_power = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_lower($extension[$i])) {\n                $extension_power--;\n\
    \            } else {\n                $extension_power++;\n            }\n  \
    \      }\n        if ($extension_power > $strongest_extension_power) {\n     \
    \       $strongest_extension_power = $extension_power;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest_extension;\n\
    }\n", "    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $caps = 0;\n        $smalls = 0;\n        for ($j = 0; $j <\
    \ strlen($extensions[$i]); $j++) {\n            if (ctype_upper($extensions[$i][$j]))\
    \ $caps++;\n            else if (ctype_lower($extensions[$i][$j])) $smalls++;\n\
    \        }\n        $extension_strength = $caps - $smalls;\n        if ($extension_strength\
    \ > $max) {\n            $max = $extension_strength;\n            $max_index =\
    \ $i;\n        }\n    }\n    return $class_name . '.' . $extensions[$max_index];\n\
    }", "    $max = 0;\n    $max_name = '';\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $small = 0;\n        $cap = 0;\n        for ($j = 0; $j < strlen($extensions[$i]);\
    \ $j++) {\n            if (ctype_upper($extensions[$i][$j])) {\n             \
    \   $cap++;\n            } else {\n                $small++;\n            }\n\
    \        }\n        if ($cap - $small > $max) {\n            $max = $cap - $small;\n\
    \            $max_name = $extensions[$i];\n        }\n    }\n    return $class_name.'.'.$max_name;\n\
    }\n\n$class_name = 'my_class';\n$extensions = ['AA', 'Be', 'CC'];\nprint_r(Strongest_Extension($class_name,\
    \ $extensions));", "    $list = [];\n    foreach ($extensions as $extension) {\n\
    \        $list[$extension] = count(array_filter(str_split($extension), function($letter)\
    \ {\n            return ctype_upper($letter);\n        })) - count(array_filter(str_split($extension),\
    \ function($letter) {\n            return ctype_lower($letter);\n        }));\n\
    \    }\n    asort($list);\n    $key = array_keys($list)[0];\n    return $class_name\
    \ . '.' . $key;\n}\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);",
  "    $class_name = ucfirst($class_name);\n    $strClassName = \"{$class_name}.\"\
    ;\n    $strExtension = \"\";\n    $strPreExtension = \"\";\n    $iStrength = 0;\n\
    \    $iPreStrength = 0;\n    foreach ($extensions as $extension) {\n        $iStrength\
    \ = ucwords($extension) - strtolower($extension);\n        if ($iStrength > $iPreStrength)\
    \ {\n            $strPreExtension = $strExtension;\n            $strExtension\
    \ = $extension;\n            $iPreStrength = $iStrength;\n        }\n    }\n \
    \   return $strClassName . $strExtension;\n}\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);", "\t$class_name = $class_name . '.';\n\t$max = -1000;\n\
    \t$pos = -1;\n\tfor ($i = 0; $i < count($extensions); $i++) {\n\t\t$ext = $extensions[$i];\n\
    \t\t$cap = 0;\n\t\t$sm = 0;\n\t\tfor ($j = 0; $j < strlen($ext); $j++) {\n\t\t\
    \tif (ord($ext[$j]) >= ord('A') && ord($ext[$j]) <= ord('Z')) {\n\t\t\t\t$cap++;\n\
    \t\t\t} else if (ord($ext[$j]) >= ord('a') && ord($ext[$j]) <= ord('z')) {\n\t\
    \t\t\t$sm++;\n\t\t\t}\n\t\t}\n\t\tif ($cap - $sm > $max) {\n\t\t\t$max = $cap\
    \ - $sm;\n\t\t\t$pos = $i;\n\t\t}\n\t}\n\treturn $class_name . $extensions[$pos];\n\
    }\n\necho \"Strongest_Extension('my_class', ['AA', 'Be', 'CC']) = '\" . Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) . \"'\\n\";\necho \"Strongest_Extension('my_class', ['a',\
    \ 'bb', 'ccc']) = '\" . Strongest_Extension('my_class', ['a', 'bb', 'ccc']) .\
    \ \"'\\n\";\necho \"Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese',\
    \ 'StuFfed']) = '\" . Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese',\
    \ 'StuFfed']) . \"'\\n\";", "  $CAP = 0;\n  $SM = 0;\n  $strongest_extension =\
    \ $extensions[0];\n  for ($i = 0; $i < count($extensions); $i++) {\n    $SM =\
    \ 0;\n    $CAP = 0;\n    for ($j = 0; $j < strlen($extensions[$i]); $j++) {\n\
    \      if (ctype_upper($extensions[$i][$j])) {\n        $CAP++;\n      } else\
    \ {\n        $SM++;\n      }\n    }\n    if ($CAP - $SM > 0) {\n      $strongest_extension\
    \ = $extensions[$i];\n    }\n  }\n  return $class_name . '.' . $strongest_extension;\n\
    }\nprint_r(Strongest_Extension('my_class', ['AA', 'Be', 'CC']));", "  //$ext_counter\
    \ = count($extensions);\n  //$strength_list = [];\n  $strongest_ext = \"\";\n\
    \  $strength = 0;\n  for ($i=0; $i < count($extensions); $i++) { \n    $ext_counter\
    \ = 0;\n    $ext = $extensions[$i];\n    for ($j=0; $j < strlen($ext); $j++) {\
    \ \n      if (ctype_upper($ext[$j])) {\n        $ext_counter++;\n      }\n   \
    \ }\n    $current_strength = $ext_counter - (strlen($ext) - $ext_counter);\n \
    \   if ($current_strength > $strength) {\n      $strength = $current_strength;\n\
    \      $strongest_ext = $ext;\n    }\n  }\n  return $class_name . \".\" . $strongest_ext;\n\
    }", "    $strongest = '';\n    $cap = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $scap = preg_match_all('/[A-Z]/', $extension);\n        $ssm = preg_match_all('/[a-z]/',\
    \ $extension);\n        $s = $scap - $ssm;\n        if ($s > $cap) {\n       \
    \     $cap = $s;\n            $strongest = $extension;\n        }\n    }\n   \
    \ return $class_name . '.' . $strongest;\n}\nprint_r(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']));", "    $ext_strength = [];\n    $ext_strength2 = [];\n\
    \    $final_array = [];\n    foreach ($extensions as $key => $value) {\n     \
    \   $count1 = substr_count($value, \"a\");\n        $count2 = substr_count($value,\
    \ \"e\");\n        $count3 = substr_count($value, \"i\");\n        $count4 = substr_count($value,\
    \ \"o\");\n        $count5 = substr_count($value, \"u\");\n        $count6 = substr_count($value,\
    \ \"A\");\n        $count7 = substr_count($value, \"B\");\n        $count8 = substr_count($value,\
    \ \"C\");\n        $count9 = substr_count($value, \"D\");\n        $count10 =\
    \ substr_count($value, \"E\");\n        $count11 = substr_count($value, \"F\"\
    );\n        $count12 = substr_count($value, \"G\");\n        $count13 = substr_count($value,\
    \ \"H\");\n        $count14 = substr_count($value, \"I\");\n        $count15 =\
    \ substr_count($value, \"J\");\n        $count16 = substr_count($value, \"K\"\
    );\n        $count17 = substr_count($value, \"L\");\n        $count18 = substr_count($value,\
    \ \"M\");\n        $count19 = substr_count($value, \"N\");\n        $count20 =\
    \ substr_count($value, \"O\");\n        $count21 = substr_count($value, \"P\"\
    );\n        $count22 = substr_count($value, \"Q\");\n        $count23 = substr_count($value,\
    \ \"R\");\n        $count24 = substr_count($value, \"S\");\n        $count25 =\
    \ substr_count($value, \"T\");\n        $count26 = substr_count($value, \"U\"\
    );\n        $count27 = substr_count($value, \"V\");\n        $count28 = substr_count($value,\
    \ \"W\");\n        $count29 = substr_count($value, \"X\");\n        $count30 =\
    \ substr_count($value, \"Y\");\n        $count31 = substr_count($value, \"Z\"\
    );\n        $total_count =", "    $low = $cap = 0;\n    $lowest = $lowest_pos\
    \ = -10;\n    $highest = -1;\n    $count = -1;\n    foreach ($extensions as $ext)\
    \ {\n        $count++;\n        for ($i = 0; $i < strlen($ext); $i++) {\n    \
    \        if (ctype_lower($ext[$i])) {\n                $low++;\n            }\
    \ else {\n                $cap++;\n            }\n        }\n        $strength\
    \ = $cap - $low;\n        if ($strength > $highest) {\n            $highest =\
    \ $strength;\n            $highest_pos = $count;\n        }\n        if ($strength\
    \ < $lowest) {\n            $lowest = $strength;\n            $lowest_pos = $count;\n\
    \        }\n        $low = $cap = 0;\n    }\n    return $class_name . '.' . $extensions[$highest_pos];\n\
    }\n", "  $class_extensions = [];\n  foreach ($extensions as $extension) {\n  \
    \  $uc_cnt = 0;\n    $lc_cnt = 0;\n    $strength = 0;\n    for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n      if (ctype_upper($extension[$i])) {\n        $uc_cnt++;\n    \
    \  } else {\n        $lc_cnt++;\n      }\n    }\n    $strength = ($uc_cnt - $lc_cnt);\n\
    \    $class_extensions[$extension] = $strength;\n  }\n  arsort($class_extensions);\n\
    \  foreach ($class_extensions as $extension => $strength) {\n    return $class_name.'.'.$extension;\n\
    \  }\n}", "    $max = 0;\n    $max_extension = '';\n    foreach ($extensions as\
    \ $extension) {\n        $a = 0;\n        $b = 0;\n        $strength = 0;\n  \
    \      $strlen = strlen($extension);\n        for ($i = 0; $i < $strlen; $i++)\
    \ {\n            if (ctype_upper($extension[$i])) {\n                $a++;\n \
    \           } else {\n                $b++;\n            }\n        }\n      \
    \  $strength = $a - $b;\n        if ($strength > $max) {\n            $max = $strength;\n\
    \            $max_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $max_extension;\n}\nprint_r(Strongest_Extension('my_class', ['AA', 'Be',\
    \ 'CC']));", "  //get length of array:\n  $len = count($extensions);\n  $strongest_extension\
    \ = null;\n  $strongest_strength = 0;\n  for ($i = 0; $i < $len; $i++) {\n   \
    \ $extension = $extensions[$i];\n    $strength = strlen(preg_replace('/[^A-Z]/',\
    \ '', $extension)) - strlen(preg_replace('/[^a-z]/', '', $extension));\n    if\
    \ ($strength > $strongest_strength) {\n      $strongest_strength = $strength;\n\
    \      $strongest_extension = $extension;\n    }\n  }\n  return $class_name .\
    \ '.' . $strongest_extension;\n}\necho Strongest_Extension('my_class', ['AA',\
    \ 'Be', 'CC']);", "    $min_ind = 0;\n    $min_strength = -1;\n    foreach ($extensions\
    \ as $ind => $ext) {\n        $strength = 0;\n        for ($i = 0; $i < strlen($ext);\
    \ $i++) {\n            if (ctype_upper($ext[$i])) $strength++;\n            else\
    \ $strength--;\n        }\n        if ($strength > $min_strength) {\n        \
    \    $min_strength = $strength;\n            $min_ind = $ind;\n        }\n   \
    \ }\n    return $class_name.'.'.$extensions[$min_ind];\n}\n\nprint_r(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']));\n", "  $max = 0;\n  $maxExt = '';\n  foreach ($extensions\
    \ as $ext) {\n    $cap = 0;\n    $sm = 0;\n    $len = strlen($ext);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n      if (ctype_upper($ext[$i])) $cap++;\n      else\
    \ $sm++;\n    }\n    $strength = ($cap - $sm);\n    if ($strength > $max) {\n\
    \      $max = $strength;\n      $maxExt = $ext;\n    }\n  }\n  return \"$class_name.$maxExt\"\
    ;\n}\necho Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']);",
  "  $class_name .= '.';\n  $extra_letters = array();\n  foreach ($extensions as $key\
    \ => $value) {\n    $ext = str_split($value);\n    foreach ($ext as $a) {\n  \
    \    if (ord($a) >= 97 && ord($a) <= 122) {\n        $extra_letters[$key] += 1;\n\
    \      }\n    }\n  }\n  foreach ($extensions as $key => $value) {\n    $extra_letters[$key]\
    \ = (strlen($value) - $extra_letters[$key]) - $extra_letters[$key];\n  }\n  $max\
    \ = $extra_letters[0];\n  $result = $extensions[0];\n  for ($i = 1; $i < count($extra_letters);\
    \ $i++) {\n    if ($extra_letters[$i] > $max) {\n      $max = $extra_letters[$i];\n\
    \      $result = $extensions[$i];\n    }\n  }\n  return $class_name . $result;\n\
    }", "    $strongest = ['strength' => 0, 'strongest' => ''];\n    foreach ($extensions\
    \ as $extension) {\n        $cap = $sm = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $cap++;\n\
    \            } else {\n                $sm++;\n            }\n        }\n    \
    \    $strength = $cap - $sm;\n        if ($strength > $strongest['strength'])\
    \ {\n            $strongest['strength'] = $strength;\n            $strongest['strongest']\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest['strongest'];\n\
    }", "    foreach ($extensions as $key => $item) {\n        $ext_name = $item;\n\
    \        $cap = preg_match_all('/[A-Z]/', $ext_name);\n        $sm = preg_match_all('/[a-z]/',\
    \ $ext_name);\n        $extensions[$key] = [$cap, $sm, $ext_name];\n    }\n  \
    \  $max = ['', '', '', ''];\n    foreach ($extensions as $item) {\n        if\
    \ ($item[0] - $item[1] > $max[0] - $max[1]) {\n            $max = $item;\n   \
    \     }\n    }\n    return $class_name . '.' . $max[2];\n}", "    $strongest_extension\
    \ = '';\n    $strongest_strength = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = count(preg_split('#[^A-Z]#', $extension))\n\
    \                            - count(preg_split('#[^a-z]#', $extension));\n  \
    \      if ($extension_strength > $strongest_strength) {\n            $strongest_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}", "  $chars\
    \ = array_fill_keys(range('a', 'z'), 0);\n  $max_strength = 0;\n  $max_strength_i\
    \ = 0;\n  for ($i = 0; $i < count($extensions); $i++) {\n    $uppercase = preg_match_all('/[A-Z]/',\
    \ $extensions[$i], $match);\n    $lowercase = preg_match_all('/[a-z]/', $extensions[$i],\
    \ $match);\n    $strength = $uppercase - $lowercase;\n    if ($strength > $max_strength)\
    \ {\n      $max_strength = $strength;\n      $max_strength_i = $i;\n    }\n  }\n\
    \  $extension = $extensions[$max_strength_i];\n  return \"$class_name.$extension\"\
    ;\n}\n\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    $extensions\
    \ = array_map('strtolower', $extensions);\n    $class_name = strtolower($class_name);\n\
    \    $class_length = strlen($class_name);\n    $class_strength = 0;\n    $class_winner\
    \ = '';\n    foreach ($extensions as $extension) {\n        $length = strlen($extension);\n\
    \        $sum = 0;\n        $diff = 0;\n        $upper = 0;\n        $lower =\
    \ 0;\n        for ($i = 0; $i < $length; $i++) {\n            if ($extension[$i]\
    \ >= 'A' && $extension[$i] <= 'Z') {\n                $upper++;\n            }\
    \ else {\n                $lower++;\n            }\n        }\n        $diff =\
    \ $upper - $lower;\n        if ($diff > $class_strength) {\n            $class_strength\
    \ = $diff;\n            $class_winner = $extension;\n        }\n    }\n    return\
    \ $class_name . '.' . $class_winner;\n}\n\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);", "    // get CAP, SM and strength and sort by strength\
    \ descending\n    $r = array_map(function($ext) {\n        $cap = strlen(preg_replace('/[^A-Z]/',\
    \ '', $ext));\n        $sm = strlen(preg_replace('/[^a-z]/', '', $ext));\n   \
    \     return [$ext, $cap, $sm, $cap - $sm];\n    }, $extensions);\n    usort($r,\
    \ function($a, $b) {\n        return $b[3] - $a[3];\n    });\n    // get the strongest\
    \ (as long as the strength is the same, the first in the list wins)\n    $strongest\
    \ = $r[0];\n    for ($i = 1; $i < count($r); $i++) {\n        if ($r[$i][3] <\
    \ $strongest[3]) {\n            break;\n        }\n    }\n    // return the result\n\
    \    return $class_name . '.' . $strongest[0];\n}\n", "    $class_name = str_split($class_name);\n\
    \    $a = 0;\n    $b = 0;\n    foreach ($class_name as $key => $value) {\n   \
    \     if (ctype_upper($value)) {\n            $a += 1;\n        } else {\n   \
    \         $b += 1;\n        }\n    }\n    $class_strength = $a - $b;\n    $class_strength\
    \ = abs($class_strength);\n    $strongest_extension = [];\n    foreach ($extensions\
    \ as $key => $value) {\n        $extension = str_split($value);\n        $c =\
    \ 0;\n        $d = 0;\n        foreach ($extension as $key => $value) {\n    \
    \        if (ctype_upper($value)) {\n                $c += 1;\n            } else\
    \ {\n                $d += 1;\n            }\n        }\n        $extension_strength\
    \ = $c - $d;\n        $extension_strength = abs($extension_strength);\n      \
    \  if ($extension_strength > $class_strength) {\n            $class_strength =\
    \ $extension_strength;\n            $strongest_extension = $value;\n        }\n\
    \    }\n    $string = \"{$class_name}.{$strongest_extension}\";\n    return $string;\n\
    }", "    $strongest_ext = '';\n    $max_strength = 0;\n    foreach ($extensions\
    \ as $ext) {\n        $strength = extension_strength($ext);\n        if ($strength\
    \ > $max_strength) {\n            $max_strength = $strength;\n            $strongest_ext\
    \ = $ext;\n        }\n    }\n    return $class_name . '.' . $strongest_ext;\n\
    }\n", "    $strongest_extension = $extensions[0];\n    $strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $CAP = preg_match_all('/[A-Z]/', $extension);\n\
    \        $SM = preg_match_all('/[a-z]/', $extension);\n        $current_strength\
    \ = $CAP - $SM;\n        if ($current_strength > $strength) {\n            $strength\
    \ = $current_strength;\n            $strongest_extension = $extension;\n     \
    \   }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n", "  \
    \  $max_val = 0;\n    $max_ext = '';\n    foreach ($extensions as $ext) {\n  \
    \      $cap_cnt = preg_match_all('/[A-Z]/', $ext);\n        $sm_cnt = preg_match_all('/[a-z]/',\
    \ $ext);\n        $val = $cap_cnt - $sm_cnt;\n        if ($val > $max_val) {\n\
    \            $max_val = $val;\n            $max_ext = $ext;\n        }\n    }\n\
    \    return $class_name . '.' . $max_ext;\n}\n", "    $max_strength = PHP_INT_MIN;\n\
    \    $max_extension = \"\";\n    foreach ($extensions as $extension) {\n     \
    \   $cnt = strlen(preg_replace('/[^A-Z]/', '', $extension));\n        $sml = strlen(preg_replace('/[^a-z]/',\
    \ '', $extension));\n        $extension_strength = $cnt - $sml;\n        if ($extension_strength\
    \ > $max_strength) {\n            $max_strength = $extension_strength;\n     \
    \       $max_extension = $extension;\n        }\n    }\n    return \"$class_name.$max_extension\"\
    ;\n}\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    $class_name\
    \ = ucfirst($class_name);\n    $class_name_length = strlen($class_name);\n   \
    \ $class_name_lowercase_chars = 0;\n    $class_name_uppercase_chars = 0;\n   \
    \ for ($index = 0; $index < $class_name_length; $index++) {\n        if (ctype_lower($class_name[$index]))\
    \ {\n            $class_name_lowercase_chars++;\n        } else {\n          \
    \  $class_name_uppercase_chars++;\n        }\n    }\n    $class_name_strength\
    \ = $class_name_uppercase_chars - $class_name_lowercase_chars;\n    $strongest_extension_index\
    \ = 0;\n    $strongest_extension_name = $extensions[0];\n    $strongest_extension_strength\
    \ = 0;\n    $extensions_count = count($extensions);\n    for ($index = 0; $index\
    \ < $extensions_count; $index++) {\n        $extension_name = $extensions[$index];\n\
    \        $extension_name_length = strlen($extension_name);\n        $extension_name_lowercase_chars\
    \ = 0;\n        $extension_name_uppercase_chars = 0;\n        for ($index2 = 0;\
    \ $index2 < $extension_name_length; $index2++) {\n            if (ctype_lower($extension_name[$index2]))\
    \ {\n                $extension_name_lowercase_chars++;\n            } else {\n\
    \                $extension_name_uppercase_chars++;\n            }\n        }\n\
    \        $extension_name_strength = $extension_name_uppercase_chars - $extension_name_lowercase_chars;\n\
    \        if ($extension_name_strength > $strongest_extension_strength) {\n   \
    \         $strongest_extension_strength = $extension_name_strength;\n        \
    \    $strongest_extension_name = $extension_name;\n            $strongest_extension_index\
    \ = $index;\n        }\n   ", "  $class_name = trim($class_name);\n  $uppercase\
    \ = $lowercase = $ext_strength = $strongest_ext = '';\n  foreach ($extensions\
    \ as $extension) {\n    $uppercase = preg_match_all('/[A-Z]/', $extension, $uppercase_count);\n\
    \    $lowercase = preg_match_all('/[a-z]/', $extension, $lowercase_count);\n \
    \   $ext_strength = (($uppercase - $lowercase)/max($uppercase, $lowercase));\n\
    \    if ($ext_strength > $strongest_ext) {\n      $strongest_ext = $extension;\n\
    \    }\n  }\n  return $class_name.'.'.$strongest_ext;\n}\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);", "    $data = [];\n    foreach ($extensions as $extension)\
    \ {\n        $caps = preg_match_all('/[A-Z]/', $extension);\n        $smalls =\
    \ preg_match_all('/[a-z]/', $extension);\n        $data[$extension] = $caps -\
    \ $smalls;\n    }\n    $strongest = array_keys($data, max($data))[0];\n    return\
    \ $class_name . '.' . $strongest;\n}\n\nprint_r(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']));", "    $class_name = strtolower($class_name);\n    $max_strength\
    \ = 0;\n    $max_strength_index = -1;\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $extension = strtolower($extensions[$i]);\n        $strength\
    \ = preg_match_all('/[A-Z]/', $extension, $match) - \n                    preg_match_all('/[a-z]/',\
    \ $extension, $match);\n        if ($strength > $max_strength) {\n           \
    \ $max_strength = $strength;\n            $max_strength_index = $i;\n        }\n\
    \    }\n    return $class_name.'.'.$extensions[$max_strength_index];\n}\n", " \
    \   $strongest = 0;\n    $res = \"\";\n    foreach ($extensions as $ext) {\n \
    \       $upper = 0;\n        $lower = 0;\n        for ($i = 0; $i < strlen($ext);\
    \ $i++) {\n            if (ctype_upper($ext[$i])) {\n                $upper++;\n\
    \            } else {\n                $lower++;\n            }\n        }\n \
    \       $strength = $upper - $lower;\n        if ($strength > $strongest) {\n\
    \            $strongest = $strength;\n            $res = $ext;\n        }\n  \
    \  }\n    return $class_name . \".\" . $res;\n}\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']) . \"\\n\";", "    $str = [];\n    foreach ($extensions as\
    \ $extension) {\n        $str[$extension] = preg_match_all('/[A-Z]/', $extension)\
    \ - preg_match_all('/[a-z]/', $extension);\n    }\n    $max = max($str);\n   \
    \ $key = array_search($max, $str);\n    return \"$class_name.$key\";\n}\n$a =\
    \ Strongest_Extension('my_class', ['AA', 'Be', 'CC']);\nprint_r($a);", "    $strength\
    \ = -1;\n    $strongest = \"\";\n    foreach ($extensions as $extension) {\n \
    \       $sm = strlen(preg_replace('/[^a-z]/', '', $extension));\n        $cap\
    \ = strlen(preg_replace('/[^A-Z]/', '', $extension));\n        $st = $cap - $sm;\n\
    \        if ($st > $strength) {\n            $strength = $st;\n            $strongest\
    \ = $extension;\n        }\n    }\n    return \"$class_name.$strongest\";\n}\n\
    echo Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    $n = count($extensions);\n\
    \    $differences = [];\n    for ($i = 0; $i < $n; $i++) {\n        $differences[$i]\
    \ = count(array_intersect(range('A', 'Z'), str_split($extensions[$i]))) - count(array_intersect(range('a',\
    \ 'z'), str_split($extensions[$i])));\n    }\n    $max_diff = max($differences);\n\
    \    return $class_name . '.' . $extensions[array_search($max_diff, $differences)];\n\
    }", "    $current_strongest = 0;\n    $current_strongest_index = null;\n    foreach\
    \ ($extensions as $index => $extension) {\n        $strength = (substr_count($extension,\
    \ strtoupper($extension)) - substr_count($extension, strtolower($extension)));\n\
    \        if ($strength > $current_strongest) {\n            $current_strongest\
    \ = $strength;\n            $current_strongest_index = $index;\n        }\n  \
    \  }\n    return \"$class_name.$extensions[$current_strongest_index]\";\n}\nprint_r(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));", "    $class_name = ucfirst($class_name);\n\
    \    // getting strength of each extension\n    $strength = array_map(function($extension)\
    \ {\n      $strength = substr_count(strtoupper($extension), 'A') - substr_count(strtolower($extension),\
    \ 'a');\n      return $strength;\n    }, $extensions);\n    // getting the max\
    \ value of the strength array\n    $max = max($strength);\n    // getting the\
    \ index of the max value\n    $i = array_search($max, $strength);\n    // returning\
    \ the results\n    return \"$class_name.$extensions[$i]\";\n}\n\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);", "    $numbers = [];\n    $alpha = range('A', 'Z');\n\
    \    $result = '';\n    $strongest = [0, ''];\n    foreach ($extensions as $value)\
    \ {\n        $number = 0;\n        $extension = str_split($value);\n        foreach\
    \ ($extension as $char) {\n            if (in_array($char, $alpha)) {\n      \
    \          $number++;\n            } else {\n                $number--;\n    \
    \        }\n        }\n        $numbers[] = $number;\n    }\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        if ($numbers[$i] > $strongest[0]) {\n\
    \            $strongest[0] = $numbers[$i];\n            $strongest[1] = $extensions[$i];\n\
    \        }\n    }\n    $result = $class_name . '.' . $strongest[1];\n    return\
    \ $result;\n}\n\n$ext = Strongest_Extension('my_class', ['AA', 'Be', 'CC']);\n\
    echo $ext;", "\t$class_name = ucfirst($class_name);\n\t$strength = 0;\n\t$strongest_extension\
    \ = '';\n\tforeach ($extensions as $extension) {\n\t\t$extension = strtolower($extension);\n\
    \t\t$string_strength = 0;\n\t\tfor ($i = 0; $i < strlen($extension); $i++) {\n\
    \t\t\tif (ctype_upper($extension[$i])) {\n\t\t\t\t$string_strength++;\n\t\t\t\
    } else {\n\t\t\t\t$string_strength--;\n\t\t\t}\n\t\t}\n\t\tif ($string_strength\
    \ > $strength) {\n\t\t\t$strength = $string_strength;\n\t\t\t$strongest_extension\
    \ = $extension;\n\t\t}\n\t}\n\treturn $class_name . '.' . ucfirst($strongest_extension);\n\
    }\n", "  $tmp = array();\n  foreach ($extensions as $extension) {\n    $extension\
    \ = strtolower($extension);\n    $strength = 0;\n    for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n      if (ctype_upper($extension[$i])) $strength++;\n      elseif (ctype_lower($extension[$i]))\
    \ $strength--;\n    }\n    $tmp[$extension] = $strength;\n  }\n  arsort($tmp);\n\
    \  foreach ($tmp as $key => $value) {\n    return $class_name.'.'.ucfirst($key);\n\
    \  }\n}\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);", "    $strongest_extension\
    \ = '';\n    $strongest_strength = 0;\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = 0;\n        $extension_name = str_split($extension);\n\
    \        foreach ($extension_name as $letter) {\n            if (ctype_upper($letter))\
    \ {\n                $extension_strength++;\n            } else {\n          \
    \      $extension_strength--;\n            }\n        }\n        if ($extension_strength\
    \ > $strongest_strength) {\n            $strongest_strength = $extension_strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ $class_name . '.' . $strongest_extension;\n}", "    $final_ext = $extensions[0];\n\
    \    $strongest = -1000;\n    foreach ($extensions as $ext) {\n        $cap =\
    \ strlen(preg_replace('/[^A-Z]/', '', $ext));\n        $sm = strlen(preg_replace('/[^a-z]/',\
    \ '', $ext));\n        $result = $cap - $sm;\n        if ($result > $strongest)\
    \ {\n            $strongest = $result;\n            $final_ext = $ext;\n     \
    \   }\n    }\n    return $class_name . '.' . $final_ext;\n}\n", "  //code\n  $extensions\
    \ = array_map('strtolower', $extensions);\n  $strengths = [];\n  $strongest =\
    \ '';\n  $strength = 0;\n  foreach($extensions as $extension) {\n    $caps = 0;\n\
    \    $smls = 0;\n    for($i = 0; $i < strlen($extension); $i++) {\n      if(ctype_upper($extension[$i]))\
    \ {\n        $caps++;\n      } else {\n        $smls++;\n      }\n    }\n    $strengths[$extension]\
    \ = $caps - $smls;\n  }\n  arsort($strengths);\n  foreach($strengths as $extension\
    \ => $value) {\n    $strongest = $extension;\n    $strength = $value;\n    break;\n\
    \  }\n  return $class_name . '.' . $strongest;\n}", "  $max = 0;\n  $strength\
    \ = 0;\n  $pos = -1;\n  for ($i = 0; $i < count($extensions); $i++) {\n    $extension\
    \ = $extensions[$i];\n    $uppers = preg_match_all('/[A-Z]/', $extension);\n \
    \   $lowers = preg_match_all('/[a-z]/', $extension);\n    $strength = $uppers\
    \ - $lowers;\n    if ($strength > $max) {\n      $max = $strength;\n      $pos\
    \ = $i;\n    }\n  }\n  return \"$class_name.\" . $extensions[$pos];\n}", "   \
    \ $strongest_extension = 0;\n    $strongest_extension_name = '';\n    foreach\
    \ ($extensions as $extension) {\n        $strength = strength($extension);\n \
    \       if ($strength > $strongest_extension) {\n            $strongest_extension\
    \ = $strength;\n            $strongest_extension_name = $extension;\n        }\n\
    \    }\n    return $class_name . '.' . $strongest_extension_name;\n}\n", "  $result_extension\
    \ = \"\";\n  $strongest_extension = ['strength' => 0, 'name' => \"\"];\n  foreach\
    \ ($extensions as $extension) {\n    $upper_count = preg_match_all('/[A-Z]/',\
    \ $extension);\n    $lower_count = preg_match_all('/[a-z]/', $extension);\n  \
    \  $extension_strength = $upper_count - $lower_count;\n    if ($extension_strength\
    \ > $strongest_extension['strength']) {\n      $strongest_extension['strength']\
    \ = $extension_strength;\n      $strongest_extension['name'] = $extension;\n \
    \   }\n  }\n  $result_extension = $class_name.\".\".$strongest_extension['name'];\n\
    \  return $result_extension;\n}", "    $ext_count = [];\n    foreach ($extensions\
    \ as $ext) {\n        $ext_count[$ext] = (strlen(preg_replace('/[a-z]/', '', $ext))\
    \ - strlen(preg_replace('/[A-Z]/', '', $ext)));\n    }\n    $sorted_by_ext_count\
    \ = arsort($ext_count);\n    return $class_name . '.' . array_keys($ext_count)[0];\n\
    }\n", "\t$strongest_extension = 0;\n\t$strength = 0;\n\t$strongest_name = '';\n\
    \tforeach ($extensions as $extension) {\n\t\t$sm = 0;\n\t\t$cap = 0;\n\t\tfor\
    \ ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif (ctype_upper($extension[$i]))\
    \ {\n\t\t\t\t$cap++;\n\t\t\t} else {\n\t\t\t\t$sm++;\n\t\t\t}\n\t\t}\n\t\tif ($cap\
    \ - $sm > $strength) {\n\t\t\t$strength = $cap - $sm;\n\t\t\t$strongest_name =\
    \ $extension;\n\t\t}\n\t}\n\t$strongest_extension = $class_name.'.'.$strongest_name;\n\
    \treturn $strongest_extension;\n}\nprint_r(Strongest_Extension('my_class', ['AA',\
    \ 'Be', 'CC'])); // my_class.AA\nprint_r(Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed'])); // Slices.SErviNGSliCes\nprint_r(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'AA'])); // Slices.SErviNGSliCes\nprint_r(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed', 'AA', 'NACHO'])); // Slices.NACHO", " \
    \ $strengths = [];\n  $extensions_count = count($extensions);\n  for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n    $current_extension = $extensions[$i];\n\
    \    $uppercase_count = preg_match_all('/[A-Z]/', $current_extension);\n    $lowercase_count\
    \ = preg_match_all('/[a-z]/', $current_extension);\n    $strengths[$i] = $uppercase_count\
    \ - $lowercase_count;\n  }\n  $strongest_extension_index = array_search(max($strengths),\
    \ $strengths);\n  return $class_name . '.' . $extensions[$strongest_extension_index];\n\
    }", "  //$extensions = str_split($extensions);\n  $arr = [];\n  foreach ($extensions\
    \ as $extension) {\n    $cap = preg_match_all('/[A-Z]/', $extension);\n    $sm\
    \ = preg_match_all('/[a-z]/', $extension);\n    $arr[$extension] = $cap - $sm;\n\
    \  }\n  asort($arr);\n  $arr = array_reverse($arr);\n  $new = array_keys($arr);\n\
    \  $class_name .= '.' . $new[0];\n  return $class_name;\n}\n", "    $keys = array_map(function($word)\
    \ {\n        return count(preg_grep('/[A-Z]/', str_split($word))) - count(preg_grep('/[a-z]/',\
    \ str_split($word)));\n    }, $extensions);\n    $max_value = max($keys);\n  \
    \  $max_key = array_search($max_value, $keys);\n    return $class_name . '.' .\
    \ $extensions[$max_key];\n}", "  $strength = 0;\n  $strongest = '';\n  foreach\
    \ ($extensions as $extension) {\n    $strength_new = strength($extension);\n \
    \   if ($strength_new > $strength) {\n      $strength = $strength_new;\n     \
    \ $strongest = $extension;\n    }\n  }\n  return $class_name . '.' . $strongest;\n\
    }\n", "    $strongest = 0;\n    $chosen = '';\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $caps = count_caps($extensions[$i]);\n        $smalls = count_smalls($extensions[$i]);\n\
    \        $subtract = $caps - $smalls;\n        if ($subtract > $strongest) {\n\
    \            $strongest = $subtract;\n            $chosen = $extensions[$i];\n\
    \        }\n    }\n    return $class_name . '.' . $chosen;\n}", "    $strongest\
    \ = 0;\n    $strongest_extension = $extensions[0];\n    foreach ($extensions as\
    \ $extension) {\n        $lc = 0;\n        $uc = 0;\n        for ($i = 0; $i <\
    \ strlen($extension); $i++) {\n            if (ctype_upper($extension[$i])) {\n\
    \                $uc++;\n            } else {\n                $lc++;\n      \
    \      }\n        }\n        $strength = $uc - $lc;\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return \"$class_name.$strongest_extension\";\n}", "  $max\
    \ = 0;\n  $strongest_extension = \"\";\n  for ($i = 0; $i < count($extensions);\
    \ $i++) {\n    $c_count = preg_match_all('/[A-Z]/', $extensions[$i]);\n    $s_count\
    \ = preg_match_all('/[a-z]/', $extensions[$i]);\n    $strength = $c_count - $s_count;\n\
    \    if ($strength > $max) {\n      $max = $strength;\n      $strongest_extension\
    \ = $extensions[$i];\n    }\n  }\n  return $class_name . \".\" . $strongest_extension;\n\
    }", "    $max = -1;\n    $result = '';\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $strength = preg_match_all('/[A-Z]/', $extensions[$i]) - preg_match_all('/[a-z]/',\
    \ $extensions[$i]);\n        if ($strength > $max) {\n            $max = $strength;\n\
    \            $result = $extensions[$i];\n        }\n    }\n    return $class_name\
    \ . '.' . $result;\n}\nprint_r(Strongest_Extension('my_class', ['AA', 'Be', 'CC']));",
  "    if (empty($extensions)) return $class_name;\n    $max_strength = -1;\n    $max_extension\
    \ = $extensions[0];\n    foreach ($extensions as $extension) {\n        $CAP =\
    \ strlen(preg_replace('/[^A-Z]/', '', $extension));\n        $SM = strlen(preg_replace('/[^a-z]/',\
    \ '', $extension));\n        $strength = $CAP - $SM;\n        if ($strength >\
    \ $max_strength) {\n            $max_strength = $strength;\n            $max_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $max_extension;\n\
    }", "  \n}", "  $strongest_extension = [];\n  $strongest_strength = 0;\n  foreach\
    \ ($extensions as $extension) {\n    $CAP = 0;\n    $SM = 0;\n    $strength =\
    \ 0;\n    for ($i = 0; $i < strlen($extension); $i++) {\n      if (ctype_upper($extension[$i]))\
    \ $CAP++;\n      else $SM++;\n    }\n    $strength = $CAP - $SM;\n    if ($strength\
    \ > $strongest_strength) {\n      $strongest_strength = $strength;\n      $strongest_extension\
    \ = [$extension];\n    } elseif ($strength == $strongest_strength) {\n      array_push($strongest_extension,\
    \ $extension);\n    }\n  }\n  if ($strongest_strength == 0) return $class_name;\n\
    \  return $class_name.'.'.$strongest_extension[0];\n}", "    $len = count($extensions);\n\
    \    $strongest = null;\n    $strongest_strength = 0;\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        $strength = 0;\n        $ext = $extensions[$i];\n        $e_len\
    \ = strlen($ext);\n        for ($j = 0; $j < $e_len; $j++) {\n            $c =\
    \ substr($ext, $j, 1);\n            if (ctype_upper($c)) {\n                $strength\
    \ += 1;\n            } else {\n                $strength -= 1;\n            }\n\
    \        }\n        if ($strength > $strongest_strength) {\n            $strongest_strength\
    \ = $strength;\n            $strongest = $ext;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest;\n}\n", "\t$extensions = array_values($extensions);\n\t$strongest\
    \ = 0;\n\t$max_val = 0;\n\tforeach ($extensions as $key => $extension) {\n\t\t\
    $small = preg_match_all('/[a-z]/', $extension);\n\t\t$big = preg_match_all('/[A-Z]/',\
    \ $extension);\n\t\t$value = $big - $small;\n\t\tif ($value > $max_val) {\n\t\t\
    \t$max_val = $value;\n\t\t\t$strongest = $key;\n\t\t}\n\t}\n\treturn $class_name\
    \ . '.' . $extensions[$strongest];\n}", "    $max_ext = null;\n    $max_ext_val\
    \ = 0;\n    foreach ($extensions as $key => $ext) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $ext);\n        $sm = preg_match_all('/[a-z]/', $ext);\n        $val = $cap\
    \ - $sm;\n        if ($val > $max_ext_val) {\n            $max_ext_val = $val;\n\
    \            $max_ext = $ext;\n        }\n    }\n    return $class_name . '.'\
    \ . $max_ext;\n}\n", "    $counter_upper = [];\n    $counter_lower = [];\n   \
    \ $result = [];\n    for ($i = 0; $i < count($extensions); $i++) {\n        $counter_upper[$i]\
    \ = 0;\n        $counter_lower[$i] = 0;\n        for ($j = 0; $j < strlen($extensions[$i]);\
    \ $j++) {\n            if (ctype_upper($extensions[$i][$j])) {\n             \
    \   $counter_upper[$i]++;\n            } else {\n                $counter_lower[$i]++;\n\
    \            }\n        }\n        $result[$i] = $counter_upper[$i] - $counter_lower[$i];\n\
    \    }\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < count($result);\
    \ $i++) {\n        if ($result[$i] > $max) {\n            $max = $result[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return $class_name . '.'\
    \ . $extensions[$max_index];\n}\n\necho Strongest_Extension('my_class', ['AA',\
    \ 'Be', 'CC']);", "    $max_CAP = 0;\n    $max_SM = 0;\n    $ext_index = -1;\n\
    \    foreach ($extensions as $index => $extension) {\n        $CAP = 0;\n    \
    \    $SM = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n       \
    \     if (ctype_upper($extension[$i])) $CAP++;\n            else $SM++;\n    \
    \    }\n        if (($CAP - $SM) > ($max_CAP - $max_SM)) {\n            $max_CAP\
    \ = $CAP;\n            $max_SM = $SM;\n            $ext_index = $index;\n    \
    \    }\n    }\n    return $class_name . '.' . $extensions[$ext_index];\n}\n",
  "  // creating array of CAP and SM values\n  $result = [];\n  foreach ($extensions\
    \ as $key => $extension) {\n    $extension = str_split($extension);\n    $strength\
    \ = array_reduce($extension, function($sum, $val) {\n      if (ctype_upper($val))\
    \ $sum++;\n      if (ctype_lower($val)) $sum--;\n      return $sum;\n    }, 0);\n\
    \    $result[$extension] = $strength;\n  }\n  // finding the strongest extension\
    \ and returning string\n  $strongest = array_keys($result, max($result))[0];\n\
    \  return $class_name . '.' . implode('', $strongest);\n}\n", "  $strongest =\
    \ array(\n    'strength' => 0,\n    'extension' => ''\n  );\n  foreach ($extensions\
    \ as $extension) {\n    $strength = (substr_count($extension, strtoupper($extension))\
    \ -\n    substr_count($extension, strtolower($extension)));\n    if ($strength\
    \ > $strongest['strength']) {\n      $strongest['strength'] = $strength;\n   \
    \   $strongest['extension'] = $extension;\n    }\n  }\n  return $class_name .\
    \ '.' . $strongest['extension'];\n}\necho Strongest_Extension('my_class', ['AA',\
    \ 'Be', 'CC']);", "    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = cal_extension_strength($extension);\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name.\"\
    .\".$strongest_extension;\n}", "    $class_name = strtolower($class_name);\n \
    \   $extensions = array_map('strtolower', $extensions);\n    $strength = [0, 0];\n\
    \    $output = \"\";\n    foreach ($extensions as $key => $extension) {\n    \
    \    preg_match_all('/[A-Z]/', $extension, $cap);\n        preg_match_all('/[a-z]/',\
    \ $extension, $sm);\n        $cap = count($cap[0]);\n        $sm = count($sm[0]);\n\
    \        $strength = [$cap - $sm, $key];\n        if ($cap - $sm > $strength[0])\
    \ {\n            $strength = [$cap - $sm, $key];\n        }\n    }\n    return\
    \ $class_name . \".\" . $extensions[$strength[1]];\n}\n\necho Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']);", "    $strength = -1000;\n    $strongest_extension\
    \ = '';\n    foreach ($extensions as $extension) {\n        $CAP = 0;\n      \
    \  $SM = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n         \
    \   if ($extension[$i] == strtoupper($extension[$i])) {\n                $CAP++;\n\
    \            } else {\n                $SM++;\n            }\n        }\n    \
    \    if ($CAP - $SM > $strength) {\n            $strength = $CAP - $SM;\n    \
    \        $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n\n$ans = Strongest_Extension('my_class', ['AA',\
    \ 'Be', 'CC']);\necho $ans;", "  $result = $class_name;\n  $max_strength = -1;\n\
    \  $max_index = -1;\n  for ($i = 0; $i < count($extensions); $i++) {\n    $strength\
    \ = num_upper($extensions[$i]) - num_lower($extensions[$i]);\n    if ($strength\
    \ > $max_strength) {\n      $max_strength = $strength;\n      $max_index = $i;\n\
    \    }\n  }\n  if ($max_index >= 0) {\n    $result .= '.' . $extensions[$max_index];\n\
    \  }\n  return $result;\n}", "    $strength = 0;\n    $strongest = '';\n    foreach\
    \ ($extensions as $extension) {\n        $small_letters = strtolower($extension);\n\
    \        $uppercase_letters = strtoupper($extension);\n        $CAP = strlen($extension)\
    \ - strlen($small_letters);\n        $SM = strlen($extension) - strlen($uppercase_letters);\n\
    \        $strength_extension = $CAP - $SM;\n        if ($strength_extension >=\
    \ $strength) {\n            $strength = $strength_extension;\n            $strongest\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $strongest;\n\
    }", "  $class_name = ucfirst($class_name);\n  $result = array();\n  $i = 0;\n\
    \  foreach ($extensions as $extension) {\n    $result[$i]['name'] = $extension;\n\
    \    $result[$i]['score'] = score($extension);\n    $i++;\n  }\n  usort($result,\
    \ 'sort_scores');\n  return $class_name . '.' . $result[0]['name'];\n}", "   \
    \ $strongest = array(\n        'strength' => -100,\n        'name' => '',\n  \
    \  );\n    foreach ($extensions as $extension) {\n        $strength = 0;\n   \
    \     for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest['strength']) {\n\
    \            $strongest['strength'] = $strength;\n            $strongest['name']\
    \ = $extension;\n        }\n    }\n    return \"$class_name.\" . $strongest['name'];\n\
    }\n", "    $strength = 0;\n    $maxStrength = 0;\n    $upperCase = 0;\n    $lowerCase\
    \ = 0;\n    $strongest = \"\";\n    for ($i = 0; $i < count($extensions); $i++)\
    \ {\n        $upperCase = preg_match_all('/[A-Z]/', $extensions[$i], $matches);\n\
    \        $lowerCase = preg_match_all('/[a-z]/', $extensions[$i], $matches);\n\
    \        $strength = $upperCase - $lowerCase;\n        if ($strength > $maxStrength)\
    \ {\n            $maxStrength = $strength;\n            $strongest = $extensions[$i];\n\
    \        }\n    }\n    return \"$class_name.$strongest\";\n}\n$class_name = \"\
    my_class\";\n$extensions = [\"AA\", \"Be\", \"CC\"];\necho Strongest_Extension($class_name,\
    \ $extensions);", "    $class_name_arr = str_split($class_name);\n    $cap = $sm\
    \ = 0;\n    foreach ($class_name_arr as $char) {\n        $char = strtolower($char);\n\
    \        if($char >= 'a' && $char <= 'z') {\n            $sm++;\n        } else\
    \ {\n            $cap++;\n        }\n    }\n    // echo \"Cap = $cap and sm =\
    \ $sm <br>\";\n    $str = array();\n    foreach ($extensions as $extension) {\n\
    \        $arr = str_split($extension);\n        $cap_ext = $sm_ext = 0;\n    \
    \    foreach ($arr as $char) {\n            $char = strtolower($char);\n     \
    \       if($char >= 'a' && $char <= 'z') {\n                $sm_ext++;\n     \
    \       } else {\n                $cap_ext++;\n            }\n        }\n    \
    \    // echo \"Extension : $extension cap = $cap_ext and sm = $sm_ext\";\n   \
    \     // echo \"<br>\";\n        array_push($str, ($cap_ext - $sm_ext));\n   \
    \ }\n    $index = array_search(max($str), $str);\n    return $class_name . '.'\
    \ . $extensions[$index];\n}\n$class_name = 'my_class';\n$extensions = ['AA', 'Be',\
    \ 'CC'];\necho Strongest_Extension($class_name, $extensions);", "    $strongest\
    \ = -2;\n    $strongest_name = $extensions[0];\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $current_strength = 0;\n        for ($j = 0; $j < strlen($extensions[$i]);\
    \ $j++) {\n            if (ctype_upper($extensions[$i][$j])) {\n             \
    \   $current_strength++;\n            } else {\n                $current_strength--;\n\
    \            }\n        }\n        if ($current_strength > $strongest) {\n   \
    \         $strongest = $current_strength;\n            $strongest_name = $extensions[$i];\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_name;\n}\n", "  $extensions_count\
    \ = count($extensions);\n  $strongest_extension = '';\n  $strongest_extension_idx\
    \ = -1;\n  $strongest_extension_strength = -1000;\n  for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n    $current_extension = $extensions[$i];\n    $current_extension_strength\
    \ = 0;\n    $current_extension_count = strlen($current_extension);\n    for ($j\
    \ = 0; $j < $current_extension_count; $j++) {\n      $current_char = $current_extension[$j];\n\
    \      if (ctype_lower($current_char)) {\n        $current_extension_strength--;\n\
    \      } else {\n        $current_extension_strength++;\n      }\n    }\n    if\
    \ ($current_extension_strength > $strongest_extension_strength) {\n      $strongest_extension_strength\
    \ = $current_extension_strength;\n      $strongest_extension_idx = $i;\n    }\n\
    \  }\n  $strongest_extension = $extensions[$strongest_extension_idx];\n  return\
    \ $class_name . '.' . $strongest_extension;\n}\n", "    $count = [0];\n    foreach\
    \ ($extensions as $key => $extension) {\n        $count[$key] = preg_match_all('/[A-Z]/',\
    \ $extension) - preg_match_all('/[a-z]/', $extension);\n    }\n    $count = array_keys($count,\
    \ max($count));\n    return $class_name . '.' . $extensions[$count[0]];\n}\necho\
    \ Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']);", " \
    \   \n}", "    $max_extension = \"\";\n    $max_strength = 0;\n    foreach ($extensions\
    \ as $extension) {\n        $strength = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $strength++;\n\
    \            } else {\n                $strength--;\n            }\n        }\n\
    \        if ($strength > $max_strength) {\n            $max_strength = $strength;\n\
    \            $max_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $max_extension;\n}\n", "    $count_max = 0;\n    $max_extension =\
    \ \"\";\n    foreach ($extensions as $key => $extension) {\n        $count_cap\
    \ = 0;\n        $count_sm = 0;\n        $cnt = 0;\n        while ($cnt < strlen($extension))\
    \ {\n            if (ctype_upper($extension[$cnt])) {\n                $count_cap++;\n\
    \            } else {\n                $count_sm++;\n            }\n         \
    \   $cnt++;\n        }\n        if (($count_cap - $count_sm) > $count_max) {\n\
    \            $count_max = $count_cap - $count_sm;\n            $max_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $max_extension;\n\
    }", "    $ext = ['strength' => -100, 'name' => null];\n    foreach ($extensions\
    \ as $extension) {\n        $strength = preg_match_all('/[A-Z]/', $extension)\
    \ - preg_match_all('/[a-z]/', $extension);\n        if ($strength > $ext['strength'])\
    \ {\n            $ext['strength'] = $strength;\n            $ext['name'] = $extension;\n\
    \        }\n    }\n    return \"$class_name.$ext[name]\";\n}", "    $str_extension\
    \ = '';\n    $str_power = 0;\n    $temp_extension = '';\n    $temp_power = 0;\n\
    \    foreach ($extensions as $extension) {\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_upper($extension[$i])) {\n                $temp_power\
    \ += (ord($extension[$i]) - 64);\n            } elseif (ctype_lower($extension[$i]))\
    \ {\n                $temp_power -= (ord($extension[$i]) - 96);\n            }\n\
    \        }\n        if ($temp_power >= $str_power) {\n            $str_power =\
    \ $temp_power;\n            $str_extension = $extension;\n        }\n        $temp_power\
    \ = 0;\n    }\n    return $class_name . '.' . $str_extension;\n}", "  $ext_strength\
    \ = [];\n  $ext_count = count($extensions);\n  for ($i = 0; $i < $ext_count; $i++)\
    \ {\n    $ext_strength[$i] = [\n      'ext' => $extensions[$i],\n      'strength'\
    \ => 0,\n    ];\n    $ext_len = strlen($extensions[$i]);\n    for ($j = 0; $j\
    \ < $ext_len; $j++) {\n      if (ctype_upper($extensions[$i][$j])) {\n       \
    \ $ext_strength[$i]['strength'] += 1;\n      } else {\n        $ext_strength[$i]['strength']\
    \ -= 1;\n      }\n    }\n  }\n  $ext_strength = array_sort($ext_strength, 'strength',\
    \ SORT_DESC);\n  return $class_name . '.' . $ext_strength[0]['ext'];\n}\n", " \
    \   $maxStrength = 0;\n    $strongestExtension = '';\n    foreach ($extensions\
    \ as $extension) {\n        $extensionStrength = Strongest_Extension_Strength($extension);\n\
    \        if ($extensionStrength > $maxStrength) {\n            $maxStrength =\
    \ $extensionStrength;\n            $strongestExtension = $extension;\n       \
    \ }\n    }\n    return $class_name . '.' . $strongestExtension;\n}\n", "    $extension_name\
    \ = '';\n    $extension_strength = -1;\n    foreach ($extensions as $extension)\
    \ {\n        $strength = calcStrength($extension);\n        if ($strength > $extension_strength)\
    \ {\n            $extension_strength = $strength;\n            $extension_name\
    \ = $extension;\n        }\n    }\n    return \"{$class_name}.{$extension_name}\"\
    ;\n}\n", "    $strength = 0;\n    $strength_extension = $extensions[0];\n    for\
    \ ($i = 0; $i < count($extensions); $i++) {\n        $cap = preg_match_all('/[A-Z]/',\
    \ $extensions[$i], $cap_matches);\n        $sm = preg_match_all('/[a-z]/', $extensions[$i],\
    \ $sm_matches);\n        $diff = $cap - $sm;\n        if ($diff > $strength) {\n\
    \            $strength = $diff;\n            $strength_extension = $extensions[$i];\n\
    \        }\n    }\n    return $class_name . '.' . $strength_extension;\n}\n\n\
    echo Strongest_Extension('my_class', ['AA', 'Be', 'CC']);\necho \"\\n\";\necho\
    \ Strongest_Extension('Slices', ['SErviNGSliCes', 'Cheese', 'StuFfed']);", " \
    \   $strength = -1;\n    $strongest = \"\";\n    foreach ($extensions as $extension)\
    \ {\n        $upper_count = preg_match_all('/[A-Z]/', $extension);\n        $lower_count\
    \ = preg_match_all('/[a-z]/', $extension);\n        $str = $upper_count - $lower_count;\n\
    \        if ($str > $strength) {\n            $strength = $str;\n            $strongest\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest;\n\
    }\n", "  $class_name_strength = strlen($class_name);\n  $class_name_strength_arr\
    \ = count_chars($class_name, 1);\n  $class_name_strength_lower = $class_name_strength_arr[97];\n\
    \  $class_name_strength_upper = $class_name_strength_arr[65];\n  $strongest_extension\
    \ = $extensions[0];\n  $strongest_extension_strength = strlen($extensions[0]);\n\
    \  $strongest_extension_strength_arr = count_chars($extensions[0], 1);\n  $strongest_extension_strength_lower\
    \ = $strongest_extension_strength_arr[97];\n  $strongest_extension_strength_upper\
    \ = $strongest_extension_strength_arr[65];\n  $strongest_extension_fraction =\
    \ $strongest_extension_strength_upper - $strongest_extension_strength_lower;\n\
    \  $strongest_extension_name = $class_name . '.' . $strongest_extension;\n  for\
    \ ($i = 1; $i < count($extensions); $i++) {\n    $current_extension_strength =\
    \ strlen($extensions[$i]);\n    $current_extension_strength_arr = count_chars($extensions[$i],\
    \ 1);\n    $current_extension_strength_lower = $current_extension_strength_arr[97];\n\
    \    $current_extension_strength_upper = $current_extension_strength_arr[65];\n\
    \    $current_extension_fraction = $current_extension_strength_upper - $current_extension_strength_lower;\n\
    \    if ($current_extension_fraction > $strongest_extension_fraction) {\n    \
    \  $strongest_extension = $extensions[$i];\n      $strongest_extension_fraction\
    \ = $current_extension_fraction;\n      $strongest_extension_name = $class_name\
    \ . '.' . $strongest_extension;\n    }\n  }\n  return $strongest_extension_name;\n\
    }\n", "    $strongest_extension = \"\";\n    $strongest_extension_strength = 0;\n\
    \    foreach ($extensions as $extension) {\n        $cap = $sm = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ $cap++;\n            else $sm++;\n        }\n        $strength = $cap - $sm;\n\
    \        if ($strength > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return $class_name . \".\" . $strongest_extension;\n}", "  return $class_name\
    \ . '.' . max_extension($extensions);\n}", "\t$strength = null;\n\t$ext = null;\n\
    \tforeach ($extensions as $extension) {\n\t\t$extension_strength = 0;\n\t\tfor\
    \ ($i = 0; $i < strlen($extension); $i++) {\n\t\t\tif ($extension[$i] == strtoupper($extension[$i]))\
    \ {\n\t\t\t\t$extension_strength += 1;\n\t\t\t} else {\n\t\t\t\t$extension_strength\
    \ -= 1;\n\t\t\t}\n\t\t}\n\t\tif ($extension_strength > $strength) {\n\t\t\t$strength\
    \ = $extension_strength;\n\t\t\t$ext = $extension;\n\t\t}\n\t}\n\treturn $class_name\
    \ . '.' . $ext;\n}", "    $strength = 0;\n    $strongest = \"\";\n    for ($i\
    \ = 0; $i < count($extensions); $i++) {\n        $strength_temp = calculate_strength($extensions[$i]);\n\
    \        if ($strength_temp > $strength) {\n            $strength = $strength_temp;\n\
    \            $strongest = $extensions[$i];\n        }\n    }\n    $class_name\
    \ .= \".\" . $strongest;\n    return $class_name;\n}", "    $extensions_strength\
    \ = [];\n    $strongest_extension = '';\n    $strongest_strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $cap = 0;\n        $sm = 0;\n       \
    \ for ($i = 0; $i < strlen($extension); $i++) {\n            if ($extension[$i]\
    \ == strtoupper($extension[$i])) {\n                $cap++;\n            } else\
    \ {\n                $sm++;\n            }\n        }\n        $strength = $cap\
    \ - $sm;\n        if ($strength > $strongest_strength) {\n            $strongest_strength\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return $class_name . '.' . $strongest_extension;\n}\n\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);\necho '<br>';\necho Strongest_Extension('Slices', ['SErviNGSliCes',\
    \ 'Cheese', 'StuFfed']);\necho '<br>';\necho Strongest_Extension('MyClass', ['eXtensiOn',\
    \ 'MyClass', 'MyClass2']);\necho '<br>';\necho Strongest_Extension('MyClass',\
    \ ['extension', 'myclass', 'myclass2']);\necho '<br>';\necho Strongest_Extension('myclass',\
    \ ['eXtensiOn', 'myclass', 'myclass2']);\necho '<br>';\necho Strongest_Extension('MyClass',\
    \ ['eXtensiOn', 'myclass', 'myclass2']);\necho '<br>';\necho Strongest_Extension('MyClass',\
    \ ['eXtensiOn', 'myclass', 'myclass2']);\necho '<br>';\necho Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']);\necho '<br>';\necho Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'Stu", "  $strongest_extension = '';\n  $strongest_strength\
    \ = 0;\n  foreach ($extensions as $extension) {\n    $cap = count_uppercase($extension);\n\
    \    $sm = count_lowercase($extension);\n    $strength = $cap - $sm;\n    if ($strength\
    \ > $strongest_strength) {\n      $strongest_strength = $strength;\n      $strongest_extension\
    \ = $extension;\n    }\n  }\n  return $class_name . '.' . $strongest_extension;\n\
    }\n", "    $count = 0;\n    $cap = 0;\n    $sm = 0;\n    $extension = \"\";\n\
    \    foreach ($extensions as $value) {\n        for ($i = 0; $i < strlen($value);\
    \ $i++) {\n            if (ctype_upper($value[$i])) {\n                $cap++;\n\
    \            } else {\n                $sm++;\n            }\n        }\n    \
    \    if ($cap - $sm > $count) {\n            $count = $cap - $sm;\n          \
    \  $extension = $value;\n        }\n        $cap = 0;\n        $sm = 0;\n    }\n\
    \    return $class_name . \".\" . $extension;\n}\n\necho Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']);\n", "    $strongest = [$extensions[0], 0];\n    foreach\
    \ ($extensions as $extension) {\n        $capital_count = 0;\n        $small_count\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ord($extension[$i]) >= 65 && ord($extension[$i]) <= 90) {\n               \
    \ $capital_count++;\n            } else {\n                $small_count++;\n \
    \           }\n        }\n        $strength = $capital_count - $small_count;\n\
    \        if ($strength > $strongest[1]) {\n            $strongest = [$extension,\
    \ $strength];\n        }\n    }\n    return $class_name . '.' . $strongest[0];\n\
    }", "  $strength_extensions = [];\n  foreach ($extensions as $key => $value) {\n\
    \    $strength_extensions[$key] = $value;\n    $strength_extensions[$key] = strength_of_extensions($strength_extensions[$key]);\n\
    \  }\n  asort($strength_extensions);\n  $strongest_extension = end($strength_extensions);\n\
    \  $key_strongest_extension = key($strength_extensions);\n  return $class_name.'.'.$extensions[$key_strongest_extension];\n\
    }\n", "  $ext_strengths = [];\n  foreach ($extensions as $ext) {\n    $cap = preg_match_all('/[A-Z]/',\
    \ $ext);\n    $sm = preg_match_all('/[a-z]/', $ext);\n    $ext_strengths[$ext]\
    \ = $cap - $sm;\n  }\n  print_r($ext_strengths);\n  echo \"<br>\";\n  $max_strength\
    \ = max($ext_strengths);\n  print_r($max_strength);\n  echo \"<br>\";\n  $strongest_ext\
    \ = array_search($max_strength, $ext_strengths);\n  echo \"<br>\";\n  return $class_name\
    \ . \".\" . $strongest_ext;\n}\necho Strongest_Extension('my_class', ['AA', 'Be',\
    \ 'CC']);", "    $strongest_extension = \"\";\n    $strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension);\n\
    \        $sm = preg_match_all('/[a-z]/', $extension);\n        $extension_strength\
    \ = $cap - $sm;\n        if ($extension_strength > $strength) {\n            $strongest_extension\
    \ = $extension;\n            $strength = $extension_strength;\n        }\n   \
    \ }\n    return $class_name . \".\" . $strongest_extension;\n}\nprint_r(Strongest_Extension('Slices',\
    \ ['SErviNGSliCes', 'Cheese', 'StuFfed']));\n", "    $best_ratio = 0;\n    $best_extension\
    \ = '';\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $cap_count = 0;\n        $sm_count = 0;\n   \
    \     for ($i = 0; $i < $extension_length; $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $cap_count++;\n            } else {\n                $sm_count++;\n\
    \            }\n        }\n        $ratio = $cap_count - $sm_count;\n        if\
    \ ($ratio > $best_ratio) {\n            $best_ratio = $ratio;\n            $best_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . '.' . $best_extension;\n\
    }", "    \n    $strongest = [\n        'class' => $class_name,\n        'extension'\
    \ => '',\n        'strength' => 0\n    ];\n    \n    foreach ($extensions as $extension)\
    \ {\n        $strength = 0;\n        $cap = preg_match_all('/[A-Z]/', $extension,\
    \ $matches);\n        $sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        $strength = $cap - $sm;\n        if ($strength > $strongest['strength'])\
    \ {\n            $strongest['extension'] = $extension;\n            $strongest['strength']\
    \ = $strength;\n        }\n    }\n    \n    return $strongest['class'] . '.' .\
    \ $strongest['extension'];\n}\n", "    $array = array();\n    $counter = 0;\n\
    \    $CapLetter = '';\n    $smallLetter = '';\n    $result = '';\n    for ($i\
    \ = 0; $i < count($extensions); $i++) {\n        for ($j = 0; $j < strlen($extensions[$i]);\
    \ $j++) {\n            if (ctype_upper($extensions[$i][$j])) {\n             \
    \   $counter++;\n            }\n        }\n        $CapLetter = $counter;\n  \
    \      $counter = 0;\n        for ($j = 0; $j < strlen($extensions[$i]); $j++)\
    \ {\n            if (ctype_lower($extensions[$i][$j])) {\n                $counter++;\n\
    \            }\n        }\n        $smallLetter = $counter;\n        $counter\
    \ = 0;\n        $array[$i] = ($CapLetter - $smallLetter);\n    }\n    $max = max($array);\n\
    \    $key = array_search($max, $array);\n    $result = $class_name . '.' . $extensions[$key];\n\
    \    return $result;\n}\necho Strongest_Extension('my_class', ['AA', 'Be', 'CC']);",
  "    $highest = 0;\n    $best = $extensions[0];\n    for ($i = 0; $i < count($extensions);\
    \ $i++) {\n        $num_upper = 0;\n        $num_lower = 0;\n        for ($j =\
    \ 0; $j < strlen($extensions[$i]); $j++) {\n            if (ord($extensions[$i][$j])\
    \ >= 65 && ord($extensions[$i][$j]) <= 90) {\n                $num_upper++;\n\
    \            } else {\n                $num_lower++;\n            }\n        }\n\
    \        $current = $num_upper - $num_lower;\n        if ($current > $highest)\
    \ {\n            $highest = $current;\n            $best = $extensions[$i];\n\
    \        }\n    }\n    return $class_name . \".\" . $best;\n}\n", "  $str_extensions\
    \ = [];\n  $strongest_extension = [];\n  foreach ($extensions as $extension) {\n\
    \    $cap_letters = preg_match_all('/[A-Z]/', $extension);\n    $sm_letters =\
    \ preg_match_all('/[a-z]/', $extension);\n    $strength = $cap_letters - $sm_letters;\n\
    \    $str_extensions[$extension] = $strength;\n  }\n  $strongest_extension[] =\
    \ max($str_extensions);\n  $res = array_keys($strongest_extension);\n  $result\
    \ = implode(\".\", $res);\n  return $class_name . \".\" . $result;\n}\nprint_r(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']));", "    $strongest = ['strength' => -100, 'name' => ''];\n\
    \    foreach ($extensions as $extension) {\n        $upper = count_chars($extension,\
    \ 3);\n        $lower = count_chars($extension, 2);\n        $strength = $upper\
    \ - $lower;\n        if ($strength > $strongest['strength']) {\n            $strongest['strength']\
    \ = $strength;\n            $strongest['name'] = $extension;\n        }\n    }\n\
    \    return $class_name.'.'.$strongest['name'];\n}", "    $strength = [];\n  \
    \  foreach ($extensions as $key => $extension) {\n        $strength[$key] = (count_upper($extension)\
    \ - count_lower($extension));\n    }\n    $max_value = max($strength);\n    $key\
    \ = array_search($max_value, $strength);\n    return \"$class_name.$extensions[$key]\"\
    ;\n}", "  $extension_strength = [];\n  $extension_strength_value = [];\n  foreach\
    \ ($extensions as $extension) {\n    $CAP = preg_match_all('/[A-Z]/', $extension);\n\
    \    $SM = preg_match_all('/[a-z]/', $extension);\n    $extension_strength[$extension]\
    \ = $CAP - $SM;\n    $extension_strength_value[] = $CAP - $SM;\n  }\n  array_multisort($extension_strength_value,\
    \ SORT_DESC, $extension_strength);\n  return \"$class_name.\" . key($extension_strength);\n\
    }", "\t$class_name .= '.';\n\t$max_strength = -INF;\n\t$strongest_extension =\
    \ '';\n\tforeach ($extensions as $extension) {\n\t\t$cap = preg_match_all('/[A-Z]/',\
    \ $extension);\n\t\t$sm = preg_match_all('/[a-z]/', $extension);\n\t\t$strength\
    \ = $cap - $sm;\n\t\tif ($strength > $max_strength) {\n\t\t\t$max_strength = $strength;\n\
    \t\t\t$strongest_extension = $extension;\n\t\t}\n\t}\n\treturn $class_name . $strongest_extension;\n\
    }\n", "    $st = [];\n    $rev = [];\n    foreach ($extensions as $ext) {\n  \
    \      $st[$ext] = extensionStrength($ext);\n        $rev[$ext] = strrev($ext);\n\
    \    }\n    arsort($st);\n    asort($rev);\n    $str_val = key($st);\n    $str_rev\
    \ = key($rev);\n    if (strcmp($str_val, $str_rev) === 0) {\n        return \"\
    {$class_name}.{$str_val}\";\n    }\n    else {\n        return \"{$class_name}.{$str_rev}\"\
    ;\n    }\n}", "    $extensions_list = [];\n    foreach ($extensions as $extension)\
    \ {\n        $extensions_list[$extension] = 0;\n        for ($i = 0; $i < strlen($extension);\
    \ $i++) {\n            if (ctype_lower($extension[$i])) {\n                $extensions_list[$extension]\
    \ -= 1;\n            } else {\n                $extensions_list[$extension] +=\
    \ 1;\n            }\n        }\n    }\n    $max_value = max($extensions_list);\n\
    \    $max_extension = '';\n    foreach ($extensions_list as $extension => $value)\
    \ {\n        if ($value == $max_value) {\n            $max_extension = $extension;\n\
    \            break;\n        }\n    }\n    return $class_name . '.' . $max_extension;\n\
    }", "    $class_name = strtolower($class_name);\n    $count_caps = array_map(function($str)\
    \ {\n        return preg_match_all('/[A-Z]/', $str);\n    }, $extensions);\n \
    \   $count_smalls = array_map(function($str) {\n        return preg_match_all('/[a-z]/',\
    \ $str);\n    }, $extensions);\n    $scores = array_map(function($caps, $smalls)\
    \ {\n        return $caps - $smalls;\n    }, $count_caps, $count_smalls);\n  \
    \  $strongest_extension = array_search(max($scores), $scores);\n    return strtoupper($class_name)\
    \ . '.' . strtoupper($extensions[$strongest_extension]);\n}\nprint_r(Strongest_Extension('my_class',\
    \ ['AA', 'Be', 'CC']));", "    $max_strength = 0;\n    $max_ext = \"\";\n    foreach\
    \ ($extensions as $ext) {\n        $strength = 0;\n        $length = strlen($ext);\n\
    \        for ($i = 0; $i < $length; $i++) {\n            if (ctype_upper($ext[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $max_strength) {\n        \
    \    $max_strength = $strength;\n            $max_ext = $ext;\n        }\n   \
    \ }\n    return $class_name.\".\".$max_ext;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

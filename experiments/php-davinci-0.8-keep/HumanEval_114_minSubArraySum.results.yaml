name: HumanEval_114_minSubArraySum
language: php
results:
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $currentSum = 0;\n    $minimumSum = INF;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        $minimumSum = min($minimumSum,\
    \ $currentSum);\n        if ($currentSum > 0) {\n            $currentSum = 0;\n\
    \        }\n    }\n    return $minimumSum;\n}\n\nvar_dump(minSubArraySum([2, 3,\
    \ 4, 1, 2, 4]));\nvar_dump(minSubArraySum([-1, -2, -3]));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\nint(-6)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $result = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $result = min($result, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $arr = [];\n    $temp = [];\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        for ($j = $i; $j < count($nums); $j++) {\n            array_push($temp,\
    \ $nums[$j]);\n            $arr[implode(\"\", $temp)] = array_sum($temp);\n  \
    \      }\n        $temp = [];\n    }\n    return min($arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $current = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $current += $nums[$i];\n        $min = min($min, $current);\n\
    \        if ($current > 0) {\n            $current = 0;\n        }\n    }\n  \
    \  return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = null;\n    $numsCount = count($nums);\n    for ($i = 0; $i\
    \ < $numsCount; $i++) {\n        $currentSum = 0;\n        for ($j = $i; $j <\
    \ $numsCount; $j++) {\n            $currentSum += $nums[$j];\n            if (is_null($minSum)\
    \ || $currentSum < $minSum) {\n                $minSum = $currentSum;\n      \
    \      }\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = INF;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n     \
    \   if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8z7em7bx.php:25\n\
    Stack trace:\n#0 /tmp/tmp8z7em7bx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8z7em7bx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $total = $nums[0];\n    $min = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $total += $nums[$i];\n        if ($total < $min) {\n      \
    \      $min = $total;\n        }\n    }\n    return $min;\n}\nminSubArraySum([2,\
    \ 3, 4, 1, 2, 4]);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0hixbfr.php:24\n\
    Stack trace:\n#0 /tmp/tmpu0hixbfr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu0hixbfr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$min = INF;\n\t$sum = 0;\n\t$size = count($nums);\n\tfor ($i = 0; $i <\
    \ $size; $i++) {\n\t\t$sum += $nums[$i];\n\t\tif ($sum < $min) $min = $sum;\n\t\
    \tif ($sum > 0) $sum = 0;\n\t}\n\treturn $min;\n}\necho minSubArraySum([2, 3,\
    \ 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) == 0) {\n        return 0;\n    }\n    $minSum = 0;\n\
    \    $numsSum = 0;\n    $curSum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $numsSum += $nums[$i];\n        $curSum += $nums[$i];\n        if\
    \ ($curSum > 0) {\n            $curSum = 0;\n        }\n        if ($curSum <\
    \ $minSum) {\n            $minSum = $curSum;\n        }\n    }\n    return $minSum\
    \ < 0 ? $minSum : 0;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\n\
    echo minSubArraySum([-1, -2, -3]) . \"\\n\";\necho minSubArraySum([-2, -3, -4,\
    \ -1, -2, -4]) . \"\\n\";\necho minSubArraySum([-1, -3, -3, -3, -3, -2]) . \"\\\
    n\";\necho minSubArraySum([-2, -3, -4, -1, -2, -4, -5]) . \"\\n\";\necho minSubArraySum([-2,\
    \ -3, -4, -1, -2, -4, -5, -6]) . \"\\n\";\necho minSubArraySum([-3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -2]) . \"\\n\";\necho minSubArraySum([-1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk29v6w8n.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) === 0) {\n        return 0;\n    }\n    $min = $nums[0];\n\
    \    $current = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n     \
    \   $current = min($current + $nums[$i], $nums[$i]);\n        $min = min($min,\
    \ $current);\n    }\n    return $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2,\
    \ 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $best = null;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum = 0;\n\
    \    for ($j = $i; $j < count($nums); $j++) {\n      $sum += $nums[$j];\n    \
    \  if ($best === null || $sum < $best) {\n        $best = $sum;\n      }\n   \
    \ }\n  }\n  return $best;\n}\n\nif (minSubArraySum([2, 3, 4, 1, 2, 4]) !== 1)\
    \ {\n  throw new Exception('failed');\n}\nif (minSubArraySum([-1, -2, -3]) !==\
    \ -6) {\n  throw new Exception('failed');\n}\necho \"Success!\";\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Success!
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $curr_sum = $nums[0];\n    $min_sum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $curr_sum = max($nums[$i], $curr_sum + $nums[$i]);\n\
    \        $min_sum = min($min_sum, $curr_sum);\n    }\n    return $min_sum;\n}\n\
    echo minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2,\
    \ -3]) . \"\\n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqic1wxq.php:23\n\
    Stack trace:\n#0 /tmp/tmpvqic1wxq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvqic1wxq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $n = count($nums);\n    $min_so_far = 0;\n    $min_ending_here = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $min_ending_here = min($nums[$i],\
    \ $min_ending_here + $nums[$i]);\n        $min_so_far = min($min_so_far, $min_ending_here);\n\
    \    }\n    return $min_so_far;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\n\
    echo PHP_EOL;\necho minSubArraySum([-1, -2, -3]);\necho PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q6g1r3t.php:27\n\
    Stack trace:\n#0 /tmp/tmp1q6g1r3t.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1q6g1r3t.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = $nums[0];\n    $minSum = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum = min($nums[$i], $sum + $nums[$i]);\n        $minSum =\
    \ min($minSum, $sum);\n    }\n    return $minSum;\n}\n\nprint_r(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n        if ($currentSum >\
    \ 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\n$test = [2, 3, 4, 1, 2, 4];\n$test2 = [-1, -2, -3];\n\nvar_dump(minSubArraySum($test));\n\
    var_dump(minSubArraySum($test2));\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\nint(-6)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $minSum = null;\n    $count = 0;\n    $last = count($nums) - 1;\n\
    \    while ($count <= $last) {\n        if ($min === null) {\n            $min\
    \ = $nums[$count];\n        }\n        if ($nums[$count] < $min) {\n         \
    \   $min = $nums[$count];\n        }\n        $minSum += $nums[$count];\n    \
    \    if ($minSum < 0) {\n            $minSum = $min;\n        }\n        $count++;\n\
    \    }\n    return $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwu14k2z3.php:33\n\
    Stack trace:\n#0 /tmp/tmpwu14k2z3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpwu14k2z3.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\tif (!$nums) {\n\t\treturn 0;\n\t}\n\t\n\t$start = 0;\n\t$end = 0;\n\t$sum\
    \ = 0;\n\t$result = INF;\n\t\n\twhile ($end < count($nums)) {\n\t\t$sum += $nums[$end];\n\
    \t\t\n\t\twhile ($sum >= 0) {\n\t\t\t$result = min($result, $sum);\n\t\t\t$sum\
    \ -= $nums[$start];\n\t\t\t$start++;\n\t\t}\n\t\t\n\t\t$end++;\n\t}\n\t\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (empty($nums)) return 0;\n    $sum = $min = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min\
    \ = min($min, $sum);\n        $sum = max($sum, 0);\n    }\n    return $min;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28tga9jz.php:22\n\
    Stack trace:\n#0 /tmp/tmp28tga9jz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp28tga9jz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minimum = INF;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $minimum = min($minimum, $sum);\n   \
    \     if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $minimum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = max($nums[$i], $currentSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8uy3oui.php:21\n\
    Stack trace:\n#0 /tmp/tmpa8uy3oui.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa8uy3oui.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = PHP_INT_MAX;\n    $min = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $min += $nums[$i];\n        if ($min < $sum) {\n          \
    \  $sum = $min;\n        }\n        if ($min > 0) {\n            $min = 0;\n \
    \       }\n    }\n    return $sum;\n}\n\n$output_dir = \"../output/\";\nif(isset($argv[1]))\
    \ {\n    $output_dir = $argv[1];\n}\n$output_file = $output_dir . \"q3.txt\";\n\
    file_put_contents($output_file, print_r(minSubArraySum([2, 3, 4, 1, 2, 4]), true));\n\
    \nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: file_put_contents(../output/q3.txt): failed to open stream:\
    \ No such file or directory in /tmp/tmpqo9ob_uh.php on line 27\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = null;\n    for ($i = 0; $i < count($nums); $i++) {\n        for\
    \ ($j = $i; $j < count($nums); $j++) {\n            $s = array_sum(array_slice($nums,\
    \ $i, $j + 1 - $i));\n            if ($min === null || $s < $min) {\n        \
    \        $min = $s;\n            }\n        }\n    }\n    return $min;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $n = count($nums);\n    $minSum = PHP_INT_MAX;\n    $partialSum = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $partialSum += $nums[$i];\n      \
    \  $minSum = min($minSum, $partialSum);\n        if ($partialSum > 0) {\n    \
    \        $partialSum = 0;\n        }\n    }\n    return $minSum;\n}\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $currSum = 0;\n    $start = 0;\n    $end\
    \ = 0;\n    while ($end < count($nums)) {\n        $currSum += $nums[$end];\n\
    \        while ($currSum >= $minSum) {\n            $minSum = min($minSum, $currSum);\n\
    \            $currSum -= $nums[$start];\n            $start++;\n        }\n  \
    \      $end++;\n    }\n    return $minSum;\n}\n\n$testCases = [[2, 3, 4, 1, 2,\
    \ 4], [-1, -2, -3]];\nforeach ($testCases as $test) {\n    echo minSubArraySum($test)\
    \ . PHP_EOL;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "9223372036854775807\n9223372036854775807\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpe8dov4j5.php:33\nStack trace:\n#0 /tmp/tmpe8dov4j5.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpe8dov4j5.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $currentSum = $minSum = PHP_INT_MAX;\n    $start = $end = 0;\n    $numsLen\
    \ = count($nums);\n    while ($end < $numsLen) {\n        $currentSum += $nums[$end];\n\
    \        while ($currentSum > 0) {\n            $minSum = min($minSum, $currentSum);\n\
    \            $currentSum -= $nums[$start];\n            $start++;\n        }\n\
    \        $end++;\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (sizeof($nums) === 0) {\n        return 0;\n    }\n    $minSum = PHP_INT_MAX;\n\
    \    $currentSum = 0;\n    for ($i = 0; $i < sizeof($nums); $i++) {\n        $currentSum\
    \ += $nums[$i];\n        if ($currentSum < $minSum) {\n            $minSum = $currentSum;\n\
    \        }\n        if ($currentSum > 0) {\n            $currentSum = 0;\n   \
    \     }\n    }\n    return $minSum;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2,\
    \ 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (empty($nums)) return 0;\n    $min = $nums[0];\n    $sum = $nums[0];\n\
    \    for ($i = 1; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n   \
    \     if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\necho(minSubArraySum([-1, -2, -3]));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50r1b9ze.php:36\n\
    Stack trace:\n#0 /tmp/tmp50r1b9ze.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp50r1b9ze.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $minSum = PHP_INT_MAX;\n  $currentSum = 0;\n  $start = 0;\n  $end = 0;\n\
    \  while ($end < count($nums)) {\n    $currentSum += $nums[$end];\n    if ($currentSum\
    \ < $minSum) {\n      $minSum = $currentSum;\n    }\n    if ($currentSum > 0)\
    \ {\n      $currentSum = 0;\n      $start = $end + 1;\n    }\n    $end++;\n  }\n\
    \  return $minSum;\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\necho \"\
    \\n\";\nprint_r(minSubArraySum([-1, -2, -3]));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $currSum = $nums[0];\n    $minSum = PHP_INT_MAX;\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currSum = min($currSum + $nums[$i], $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuh6mb6_6.php:26\n\
    Stack trace:\n#0 /tmp/tmpuh6mb6_6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuh6mb6_6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) < 1) {\n        return 0;\n    }\n    $localMin = $globalMin\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $localMin\
    \ = min($nums[$i], $localMin + $nums[$i]);\n        $globalMin = min($localMin,\
    \ $globalMin);\n    }\n    return $globalMin;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $sum = 0;\n  $min = $nums[0];\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $sum += $nums[$i];\n    if ($sum < $min) {\n      $min = $sum;\n    }\n\
    \    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $current = $nums[0];\n    $overall = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $current = max($nums[$i], $current + $nums[$i]);\n\
    \        $overall = max($current, $overall);\n    }\n    return $overall;\n}\n\
    echo minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2,\
    \ -3]) . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n-1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf3cu80m1.php:23\n\
    Stack trace:\n#0 /tmp/tmpf3cu80m1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf3cu80m1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n        if ($currentSum >\
    \ 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\necho \"Testing minSubArraySum([2, 3, 4, 1, 2, 4]): \";\necho (minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) == 1) ? 'PASS' : 'FAIL';\necho \"\\n\";\necho \"Testing minSubArraySum([-1,\
    \ -2, -3]): \";\necho (minSubArraySum([-1, -2, -3]) == -6) ? 'PASS' : 'FAIL';\n\
    echo \"\\n\";\necho \"Testing minSubArraySum([-1, -2, -3, -4]): \";\necho (minSubArraySum([-1,\
    \ -2, -3, -4]) == -10) ? 'PASS' : 'FAIL';\necho \"\\n\";\necho \"Testing minSubArraySum([-1,\
    \ -2, -3, -4, -5]): \";\necho (minSubArraySum([-1, -2, -3, -4, -5]) == -15) ?\
    \ 'PASS' : 'FAIL';\necho \"\\n\";\necho \"Testing minSubArraySum([0, 1, 2, 3,\
    \ 4, 5]): \";\necho (minSubArraySum([0, 1, 2, 3, 4, 5]) == 0) ? 'PASS' : 'FAIL';\n\
    echo \"\\n\";\necho \"Testing minSubArraySum([-1, 1, -2, 2, -3, 3, -4, 4, -5,\
    \ 5]): \";\necho (minSubArraySum([-1, 1, -2, 2, -3, 3, -4, 4, -5, 5]) == -15)\
    \ ? 'PASS' : 'FAIL';\necho \"\\n\";\necho \"Testing\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe9fwuxtk.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $n = count($nums);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $sum = 0;\n        for ($j = $i; $j < $n; $j++) {\n            $sum\
    \ += $nums[$j];\n            if ($sum < $min) {\n                $min = $sum;\n\
    \            }\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL; // 1\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\
    \ // -6\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = 0;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0by2_db7.php:24\n\
    Stack trace:\n#0 /tmp/tmp0by2_db7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0by2_db7.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $min = $nums[0];\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . \"\\n\"; // 1\necho minSubArraySum([-1, -2, -3]) . \"\\n\"; // -6\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = 0;\n    $runningSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $runningSum += $nums[$i];\n        if ($runningSum < $minSum)\
    \ {\n            $minSum = $runningSum;\n        }\n    }\n    return $minSum;\n\
    }\nprint(minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL);\nprint(minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwy31sph4.php:25\n\
    Stack trace:\n#0 /tmp/tmpwy31sph4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwy31sph4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = $nums[0];\n  $max = $nums[0];\n  $sum = $nums[0];\n  for ($i = 1;\
    \ $i < count($nums); $i++) {\n    $sum += $nums[$i];\n    if ($sum < $min) {\n\
    \      $min = $sum;\n    }\n    if ($sum > $max) {\n      $max = $sum;\n    }\n\
    \  }\n  return $min < 0 ? $min : 0;\n}\n\necho minSubArraySum([-1, -2, -3]) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6owdmjf4.php:29\n\
    Stack trace:\n#0 /tmp/tmp6owdmjf4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6owdmjf4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = null;\n  $result = null;\n  $i = 0;\n  while ($i < count($nums))\
    \ {\n    $j = $i;\n    $result = 0;\n    while ($j < count($nums)) {\n      $result\
    \ += $nums[$j];\n      if (is_null($min) || $result < $min) {\n        $min =\
    \ $result;\n      }\n      $j++;\n    }\n    $i++;\n  }\n  return $min;\n}\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $minSum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $sum = 0;\n\
    \    for ($j = $i; $j < count($nums); $j++) {\n      $sum += $nums[$j];\n    \
    \  if ($minSum == 0 || $sum < $minSum) {\n        $minSum = $sum;\n      }\n \
    \   }\n  }\n  return $minSum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxibu9uzh.php:30\n\
    Stack trace:\n#0 /tmp/tmpxibu9uzh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxibu9uzh.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 4, 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;\n\n$nums = [-1, -2, -3];\n\
    echo minSubArraySum($nums) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "9223372036854775807\n9223372036854775807\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpkd0wn1xt.php:32\nStack trace:\n#0 /tmp/tmpkd0wn1xt.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkd0wn1xt.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = PHP_INT_MAX;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        if ($sum\
    \ < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum > 0)\
    \ {\n            $sum = 0;\n            $start = $end + 1;\n        }\n      \
    \  $end++;\n    }\n    return $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2,\
    \ 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min_sum = 0;\n    foreach ($nums as $num) {\n        $min_sum += $num;\n\
    \    }\n    $curr_sum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n    \
    \    $curr_sum += $nums[$i];\n        for ($j = $i + 1; $j < count($nums); $j++)\
    \ {\n            $curr_sum += $nums[$j];\n            if ($curr_sum < $min_sum)\
    \ {\n                $min_sum = $curr_sum;\n            }\n        }\n       \
    \ $curr_sum = 0;\n    }\n    return $min_sum;\n}\necho minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\necho minSubArraySum([1,\
    \ 1, -1, -1, 1, -1, 1, 1, 1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0adnmtvs.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  if (count($nums) === 0) return null;\n  $result = $nums[0];\n  $tempSum\
    \ = $nums[0];\n  for ($i = 1; $i < count($nums); $i++) {\n    $tempSum = min($tempSum\
    \ + $nums[$i], $nums[$i]);\n    $result = min($result, $tempSum);\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $minSum = null;\n  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n\
    \    for ($j = $i; $j < count($nums); $j++) {\n      $sum += $nums[$j];\n    \
    \  if ($minSum === null || $sum < $minSum) {\n        $minSum = $sum;\n      }\n\
    \    }\n    $sum = 0;\n  }\n  return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $cur_sum = 0;\n    $min_sum = PHP_INT_MAX;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $cur_sum += $nums[$i];\n        if ($cur_sum < $min_sum) {\n\
    \            $min_sum = $cur_sum;\n        }\n        if ($cur_sum > 0) {\n  \
    \          $cur_sum = 0;\n        }\n    }\n    return $min_sum;\n}\n\n$nums =\
    \ [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;\n\n$nums = [-1, -2,\
    \ -3];\necho minSubArraySum($nums) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  if (count($nums) == 0) return 0;\n  $currentSum = $minSum = $nums[0];\n\
    \  for ($i = 1; $i < count($nums); $i++) {\n    $currentSum = min($currentSum\
    \ + $nums[$i], $nums[$i]);\n    $minSum = min($minSum, $currentSum);\n  }\n  return\
    \ $minSum;\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL);\nprint_r(minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $currSum = $nums[0];\n    $minSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\necho\
    \ minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2,\
    \ -3]) . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSubArraySum = PHP_INT_MAX;\n    $totalSum = 0;\n    $len = count($nums);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $totalSum += $nums[$i];\n      \
    \  if ($totalSum < $minSubArraySum) {\n            $minSubArraySum = $totalSum;\n\
    \        }\n        if ($totalSum > 0) {\n            $totalSum = 0;\n       \
    \ }\n    }\n    return $minSubArraySum;\n}\necho minSubArraySum([2, 3, 4, 1, 2,\
    \ 4]);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = $nums[0];\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        if ($sum > 0) {\n            $sum = $nums[$i];\n        } else\
    \ {\n            $sum += $nums[$i];\n        }\n        $minSum = min($minSum,\
    \ $sum);\n    }\n    return $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = $nums[0];\n  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $sum += $nums[$i];\n    if ($sum < $min) {\n      $min = $sum;\n    }\n\
    \    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $l = count($nums);\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for\
    \ ($i = 0; $i < $l; $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum)\
    \ {\n            $minSum = $sum;\n        }\n        if ($sum > 0) {\n       \
    \     $sum = 0;\n        }\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (empty($nums)) return 0;\n    $min_sum = PHP_INT_MAX;\n    $curr_sum\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $curr_sum += $nums[$i];\n\
    \        $min_sum = min($min_sum, $curr_sum);\n        if ($curr_sum > 0) $curr_sum\
    \ = 0;\n    }\n    return $min_sum;\n}\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums)\
    \ . PHP_EOL;\n$nums = [-1, -2, -3];\necho minSubArraySum($nums) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = $nums[0];\n    $min = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum = $sum + $nums[$i];\n        if ($sum < $min) {\n    \
    \        $min = $sum;\n        }\n        if ($sum < 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $min;\n}\necho minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) . PHP_EOL; // 1\necho minSubArraySum([-1, -2, -3]) . PHP_EOL; // -6\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckz3fvsk.php:28\n\
    Stack trace:\n#0 /tmp/tmpckz3fvsk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpckz3fvsk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) === 0) {\n        return 0;\n    }\n    $minSubArraySum\
    \ = PHP_INT_MAX;\n    $accumulator = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $accumulator += $nums[$i];\n        $minSubArraySum = min($minSubArraySum,\
    \ $accumulator);\n        if ($accumulator > 0) {\n            $accumulator =\
    \ 0;\n        }\n    }\n    return $minSubArraySum;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $min = INF;\n    $n = count($nums);\n    $start = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $sum += $nums[$i];\n        while\
    \ ($sum >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "INF\nINF\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7bntu2x.php:30\n\
    Stack trace:\n#0 /tmp/tmpt7bntu2x.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpt7bntu2x.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = INF;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n        if ($sum\
    \ < 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\necho(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . \"\\n\");\necho(minSubArraySum([-1, -2, -3]) . \"\\n\");\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3iredo0y.php:26\n\
    Stack trace:\n#0 /tmp/tmp3iredo0y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3iredo0y.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $len = count($nums);\n  $min = PHP_INT_MAX;\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $len; $i++) {\n    $sum += $nums[$i];\n    if ($sum < $min) {\n      $min\
    \ = $sum;\n    }\n    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min;\n\
    }\n\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums) . PHP_EOL;\n$nums\
    \ = [-1, -2, -3];\necho minSubArraySum($nums) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$totalSum = 0;\n\t$minSum = PHP_INT_MAX;\n\tfor ($i = 0; $i < count($nums);\
    \ $i++) {\n\t\t$totalSum += $nums[$i];\n\t\t$minSum = min($minSum, $totalSum);\n\
    \t\tif ($totalSum > 0) {\n\t\t\t$totalSum = 0;\n\t\t}\n\t}\n\treturn $minSum;\n\
    }\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL; // 1\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL; // -6\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (!$nums) {\n        return 0;\n    }\n    $minSum = PHP_INT_MAX;\n\
    \    $currSum = 0;\n    foreach ($nums as $num) {\n        $currSum += $num;\n\
    \        $minSum = min($minSum, $currSum);\n        $currSum = max($currSum, 0);\n\
    \    }\n    return $minSum;\n}\n\n$result = minSubArraySum([-1, -2, -3]);\necho\
    \ 'Should be -6: ' . $result . PHP_EOL;\n$result = minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]);\necho 'Should be 1: ' . $result . PHP_EOL;\n$result = minSubArraySum([0,\
    \ 1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj53ir0hb.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = 0;\n    $currSum = 0;\n    foreach ($nums as $num) {\n    \
    \    $currSum += $num;\n        if ($currSum < $minSum) {\n            $minSum\
    \ = $currSum;\n        }\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5h5cqh6.php:23\n\
    Stack trace:\n#0 /tmp/tmpq5h5cqh6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq5h5cqh6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $minSum = INF;\n  $runningSum = 0;\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $runningSum += $nums[$i];\n    $minSum = min($minSum, $runningSum);\n\
    \    if ($runningSum > 0) {\n      $runningSum = 0;\n    }\n  }\n  return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$min = PHP_INT_MAX;\n\t$sum = 0;\n\tfor ($i = 0; $i < count($nums); $i++)\
    \ {\n\t\t$sum += $nums[$i];\n\t\t$min = min($min, $sum);\n\t\tif ($sum < 0) {\n\
    \t\t\t$sum = 0;\n\t\t}\n\t}\n\treturn $min;\n}\n\n$nums = [2, 3, 4, 1, 2, 4];\n\
    $minSubArraySum = minSubArraySum($nums);\necho($minSubArraySum . \"\\n\");\n$nums\
    \ = [-1, -2, -3];\n$minSubArraySum = minSubArraySum($nums);\necho($minSubArraySum\
    \ . \"\\n\");\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjhrozn6.php:31\n\
    Stack trace:\n#0 /tmp/tmpdjhrozn6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdjhrozn6.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $length = count($nums);\n    $globalSum = PHP_INT_MAX;\n    $localSum\
    \ = 0;\n    for ($i = 0; $i < $length; $i++) {\n        $localSum += $nums[$i];\n\
    \        if ($localSum < $globalSum) {\n            $globalSum = $localSum;\n\
    \        }\n        if ($localSum > 0) {\n            $localSum = 0;\n       \
    \ }\n    }\n    return $globalSum;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) === 0) {\n        return 0;\n    }\n    $minSum = PHP_INT_MAX;\n\
    \    $currSum = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $currSum\
    \ += $nums[$i];\n        $minSum = min($minSum, $currSum);\n        if ($currSum\
    \ > 0) {\n            $currSum = 0;\n        }\n    }\n    return $minSum;\n}\n\
    echo minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2,\
    \ -3]) . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if(count($nums) < 1) return null;\n    if(count($nums) == 1) return $nums[0];\n\
    \    $minSum = null;\n    for($i = 0; $i < count($nums); $i++) {\n        $sum\
    \ = 0;\n        for($j = $i; $j < count($nums); $j++) {\n            $sum += $nums[$j];\n\
    \            if($minSum === null || $sum < $minSum) {\n                $minSum\
    \ = $sum;\n            }\n        }\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $currentSum = 0;\n    $start = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n       \
    \ while ($currentSum >= $min) {\n            $min = $currentSum;\n           \
    \ $currentSum -= $nums[$start];\n            $start++;\n        }\n    }\n   \
    \ return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzcua68w.php:28\n\
    Stack trace:\n#0 /tmp/tmpuzcua68w.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpuzcua68w.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $n = count($nums);\n  $minSum = $nums[0];\n  $currSum = $nums[0];\n  for\
    \ ($i = 1; $i < $n; $i++) {\n    $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \    $minSum = min($minSum, $currSum);\n  }\n  return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  if (count($nums) === 0) return null;\n  $currentMinimum = PHP_INT_MAX;\n\
    \  $currentSum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n    $currentSum\
    \ += $nums[$i];\n    $currentMinimum = min($currentMinimum, $currentSum);\n  \
    \  if ($currentSum < 0) $currentSum = 0;\n  }\n  return $currentMinimum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqh2bsg0.php:24\n\
    Stack trace:\n#0 /tmp/tmpzqh2bsg0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzqh2bsg0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $low = 0;\n    $high = 0;\n    $min = $nums[0];\n    $currentSum = $nums[0];\n\
    \    while ($high < count($nums)) {\n        if ($currentSum < $min) {\n     \
    \       $min = $currentSum;\n        }\n        if ($currentSum < 0) {\n     \
    \       $currentSum = 0;\n            $low = $high + 1;\n        }\n        $high++;\n\
    \        if ($high < count($nums)) {\n            $currentSum += $nums[$high];\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81qd1_zq.php:33\n\
    Stack trace:\n#0 /tmp/tmp81qd1_zq.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp81qd1_zq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $len = count($nums);\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $nums[$i];\n        if ($sum <\
    \ $min) {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n    \
    \        $sum = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (empty($nums)) {\n        return 0;\n    }\n    $n = count($nums);\n\
    \    $minSum = PHP_INT_MAX;\n    $runningSum = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $runningSum += $nums[$i];\n        $minSum = min($minSum, $runningSum);\n\
    \        if ($runningSum > 0) {\n            $runningSum = 0;\n        }\n   \
    \ }\n    return $minSum;\n}\n\n$nums = [1, 2, 3, -4, 5, 6, 7, -8, 1, 2, 4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '-8'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = INF;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n        if ($sum\
    \ < 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7qr26r9.php:25\n\
    Stack trace:\n#0 /tmp/tmpz7qr26r9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz7qr26r9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (empty($nums)) return null;\n    $sum = $nums[0];\n    $currSum =\
    \ $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $currSum = min($currSum\
    \ + $nums[$i], $nums[$i]);\n        $sum = min($sum, $currSum);\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $current_min = $nums[0];\n    $global_min = $nums[0];\n    for ($i =\
    \ 1; $i < count($nums); $i++) {\n        $current_min = min($nums[$i], $current_min\
    \ + $nums[$i]);\n        $global_min = min($current_min, $global_min);\n    }\n\
    \    return $global_min;\n}\n\n$nums = [2, 3, 4, 1, 2, 4];\n\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $current_sum = $nums[0];\n    $min_sum = $nums[0];\n    for ($i = 1;\
    \ $i < count($nums); $i++) {\n        $current_sum = max($nums[$i], $current_sum\
    \ + $nums[$i]);\n        $min_sum = min($min_sum, $current_sum);\n    }\n    return\
    \ $min_sum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\necho \"\\n\";\necho\
    \ minSubArraySum([-1, -2, -3]);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtz_f53b.php:24\n\
    Stack trace:\n#0 /tmp/tmpdtz_f53b.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdtz_f53b.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $n = count($nums);\n  $minSum = PHP_INT_MAX;\n  $currSum = 0;\n  for ($i\
    \ = 0; $i < $n; $i++) {\n    $currSum += $nums[$i];\n    if ($currSum < $minSum)\
    \ {\n      $minSum = $currSum;\n    }\n    if ($currSum > 0) {\n      $currSum\
    \ = 0;\n    }\n  }\n  return $minSum;\n}\n\nfunction candidate(...$args) {\n \
    \   return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$minSum = INF;\n\t$sum = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\
    \t\t$sum += $nums[$i];\n\t\t$minSum = min($minSum, $sum);\n\t\tif ($sum < 0) $sum\
    \ = 0;\n\t}\n\treturn $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohi948o4.php:24\n\
    Stack trace:\n#0 /tmp/tmpohi948o4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpohi948o4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = INF;\n  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n \
    \   $sum += $nums[$i];\n    $min = min($min, $sum);\n    if ($sum > 0) {\n   \
    \   $sum = 0;\n    }\n  }\n  return $min;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$min = PHP_INT_MAX;\n\t$sum = 0;\n\t$size = count($nums);\n\tfor ($i =\
    \ 0; $i < $size; $i++) {\n\t\t$sum += $nums[$i];\n\t\tif ($sum < $min) {\n\t\t\
    \t$min = $sum;\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$sum = 0;\n\t\t}\n\t}\n\treturn\
    \ $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $minSum = PHP_INT_MAX;\n  $sum = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $sum += $nums[$i];\n    $minSum = min($minSum, $sum);\n    if ($sum\
    \ > 0) {\n      $sum = 0;\n    }\n  }\n  return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) == 0) {\n        return 0;\n    }\n    $start = 0;\n\
    \    $end = 0;\n    $sum = $nums[0];\n    $minSum = $sum;\n    while (true) {\n\
    \        if ($end + 1 < count($nums)) {\n            $end++;\n            $sum\
    \ += $nums[$end];\n        } else {\n            break;\n        }\n        if\
    \ ($sum < $minSum) {\n            $minSum = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $start++;\n            $sum -= $nums[$start - 1];\n    \
    \    }\n    }\n    return $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20rvtnr9.php:39\n\
    Stack trace:\n#0 /tmp/tmp20rvtnr9.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp20rvtnr9.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $currentMin = 0;\n    $currentSum = 0;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum\
    \ < $currentMin) {\n            $currentMin = $currentSum;\n        }\n      \
    \  if ($i === 0 || $currentMin < $min) {\n            $min = $currentMin;\n  \
    \      }\n    }\n    return $min;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrd1h2n_.php:26\n\
    Stack trace:\n#0 /tmp/tmpzrd1h2n_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzrd1h2n_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp649m920j.php:15\n\
    Stack trace:\n#0 /tmp/tmp649m920j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp649m920j.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = PHP_INT_MAX;\n  $sum = 0;\n  $left = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $sum += $nums[$i];\n    $min = min($min, $sum - $left);\n    $left\
    \ = min($left, $sum);\n  }\n  return $min;\n}\necho minSubArraySum([-1, -2, -3])\
    \ . PHP_EOL;\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "-3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzbknpnb6.php:25\n\
    Stack trace:\n#0 /tmp/tmpzbknpnb6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzbknpnb6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) $sum = 0;\n    }\n    return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $left = 0;\n    $minSum = $nums[0];\n    $currentSum = 0;\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $currentSum += $nums[$i];\n       \
    \ $minSum = min($minSum, $currentSum);\n        while ($currentSum > $minSum)\
    \ {\n            $currentSum -= $nums[$left];\n            $left++;\n        }\n\
    \    }\n    return $minSum;\n}\n\n$output_dir = \"output/\";\nif(!is_dir($output_dir)){\n\
    \    mkdir($output_dir);\n}\n$output_file = $output_dir . \"minSubArraySum.txt\"\
    ;\n$input_file = \"input.txt\";\n\n$in_file = fopen($input_file, \"r\");\n$out_file\
    \ = fopen($output_file, \"w\");\n\nif ($in_file && $out_file) {\n    while (($line\
    \ = fgets($in_file)) !== false) {\n        $line = trim($line);\n        $line\
    \ = explode(\" \", $line);\n        foreach ($line as $key => $value) {\n    \
    \        $line[$key] = (int)$value;\n        }\n        $result = minSubArraySum($line);\n\
    \        fwrite($out_file, $result . \"\\n\");\n    }\n    fclose($in_file);\n\
    \    fclose($out_file);\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "b'\\nWarning: fopen(input.txt): failed to open stream: No such file or\
    \ directory in /tmp/tmpcsne9q03.php on line 29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        if ($sum < 0) {\n            $sum = $nums[$i];\n        } else\
    \ {\n            $sum += $nums[$i];\n        }\n        $min = min($min, $sum);\n\
    \    }\n    return $min;\n}\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_m3jfdm.php:27\n\
    Stack trace:\n#0 /tmp/tmph_m3jfdm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmph_m3jfdm.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5c8f0f1.php:24\n\
    Stack trace:\n#0 /tmp/tmpl5c8f0f1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpl5c8f0f1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = $nums[0];\n  $running = $nums[0];\n  for ($i = 1; $i < count($nums);\
    \ $i++) {\n    $running = max(0, $running + $nums[$i]);\n    $min = min($min,\
    \ $running);\n  }\n  return $min;\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2,\
    \ 4]));\nprint_r(minSubArraySum([-1, -2, -3]));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvwl6tud.php:24\n\
    Stack trace:\n#0 /tmp/tmpyvwl6tud.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpyvwl6tud.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $minSum = PHP_INT_MAX;\n  $sum = 0;\n  $start = 0;\n  for ($i = 0; $i <\
    \ count($nums); $i++) {\n    $sum += $nums[$i];\n    if ($sum < $minSum) {\n \
    \     $minSum = $sum;\n    }\n    if ($sum > 0) {\n      $sum = 0;\n      $start\
    \ = $i + 1;\n    }\n  }\n  return $minSum;\n}\n\nvar_dump(minSubArraySum([2, 3,\
    \ 4, 1, 2, 4])); // 1\nvar_dump(minSubArraySum([-1, -2, -3])); // -6\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\nint(-6)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n\
    \        $sum = max($nums[$i], $sum + $nums[$i]);\n        $min = min($min, $sum);\n\
    \    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\n\
    echo minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gj42y5j.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gj42y5j.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_gj42y5j.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$min = 0;\n\t$subs = [];\n\tforeach ($nums as $num) {\n\t\tforeach ($nums\
    \ as $k => $v) {\n\t\t\t$subs[] = array_sum(array_slice($nums, $k, $num));\n\t\
    \t}\n\t}\n\t$subs = array_filter($subs, function($v) {\n\t\treturn $v >= 0;\n\t\
    });\n\treturn empty($subs) ? -1 : min($subs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps83eq3nc.php:27\n\
    Stack trace:\n#0 /tmp/tmps83eq3nc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmps83eq3nc.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm2benqh.php:16\n\
    Stack trace:\n#0 /tmp/tmpzm2benqh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzm2benqh.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) == 0) return 0;\n    $minSum = $nums[0];\n    $currentSum\
    \ = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $currentSum\
    \ = min($currentSum + $nums[$i], $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n\
    \    }\n    return $minSum;\n}\n\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) === 0) {\n        return 0;\n    }\n    $min = $nums[0];\n\
    \    $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n      \
    \  }\n    }\n    return $min;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9tdr76ib.php:26\n\
    Stack trace:\n#0 /tmp/tmp9tdr76ib.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9tdr76ib.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if(count($nums) == 0) {\n        return 0;\n    }\n    $min_sum = PHP_INT_MAX;\n\
    \    $curr_sum = 0;\n    for($i = 0; $i < count($nums); $i++) {\n        $curr_sum\
    \ += $nums[$i];\n        if($curr_sum < $min_sum) {\n            $min_sum = $curr_sum;\n\
    \        }\n        if($curr_sum > 0) {\n            $curr_sum = 0;\n        }\n\
    \    }\n    return $min_sum;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $curr = 0;\n    $arrLength = count($nums);\n\
    \    for ($i = 0; $i < $arrLength; $i++) {\n        $curr += $nums[$i];\n    \
    \    if ($curr < $min) {\n            $min = $curr;\n        }\n        if ($curr\
    \ > 0) {\n            $curr = 0;\n        }\n    }\n    return $min;\n}\n\nprint_r(minSubArraySum([-1,\
    \ -2, -3]));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '-6'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) < 1) {\n        return 0;\n    }\n    $start = 0;\n\
    \    $sum = 0;\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        while ($sum >= $minSum) {\n   \
    \         $minSum = min($minSum, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpardaxxpv.php:30\n\
    Stack trace:\n#0 /tmp/tmpardaxxpv.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpardaxxpv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $res = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        if ($sum > 0) {\n            $sum = $nums[$i];\n        } else\
    \ {\n            $sum += $nums[$i];\n        }\n        $res = min($res, $sum);\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min_sum = PHP_INT_MAX;\n  $sum = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $sum += $nums[$i];\n    if ($sum < $min_sum) {\n      $min_sum\
    \ = $sum;\n    }\n    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min_sum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $max = PHP_INT_MAX;\n    $len = count($nums);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $nums[$i];\n        if ($sum <\
    \ $max) {\n            $max = $sum;\n        }\n        if ($sum > 0) {\n    \
    \        $sum = 0;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $j = 0;\n    for ($i = 0; $i\
    \ < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum >=\
    \ $min) {\n            $min = $sum;\n            $sum -= $nums[$j];\n        \
    \    $j++;\n        }\n    }\n    return $min;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ragpz0h.php:26\n\
    Stack trace:\n#0 /tmp/tmp5ragpz0h.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5ragpz0h.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = $nums[0];\n  $sub = $nums[0];\n  for ($i = 1; $i < count($nums);\
    \ $i++) {\n    $sub = $sub > 0 ? $nums[$i] : $sub + $nums[$i];\n    $min = $min\
    \ > $sub ? $sub : $min;\n  }\n  return $min;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $sum = $min = PHP_INT_MAX;\n  $start = $end = 0;\n  $len = count($nums);\n\
    \  while ($end < $len) {\n    $sum += $nums[$end];\n    $end++;\n    while ($sum\
    \ >= 0) {\n      $min = min($min, $sum);\n      $sum -= $nums[$start];\n     \
    \ $start++;\n    }\n  }\n  return $min;\n}\n\n$cases = [\n  [2, 3, 4, 1, 2, 4],\n\
    \  [-1, -2, -3],\n  [1, 1, 1, 1, 1],\n  [1, 1, -3, 1, 1],\n  [2, -3, 4, -1, 2,\
    \ 4],\n  [2, -3, 4, -1, 2, 4, -1],\n  [2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2,\
    \ 4, -1],\n  [2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2,\
    \ 4, -1],\n  [2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2, 4, -1, 2, -3, 4, -1, 2,\
    \ 4, -1, 2, -3, 4, -1, 2, 4, -1],\n  [1, 1, 1, 1, 1, -1000, 1, 1, 1, 1, 1],\n\
    \  [2, 3, -4, 1, 2, 4],\n  [2, 3, -4, -2, 3, 4],\n  [2, 3, -4, -2, 3, 4, -1],\n\
    \  [2, 3, -4, -2, 3, 4, -1, 2, 3, -4, -2, 3, 4, -1],\n  [2, 3, -4, -2, 3, 4, -1,\
    \ 2, 3, -\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc4e9kooj.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $runningSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $runningSum = max($nums[$i], $runningSum +\
    \ $nums[$i]);\n        $minSum = min($minSum, $runningSum);\n    }\n    return\
    \ $minSum;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfptlq_o9.php:21\n\
    Stack trace:\n#0 /tmp/tmpfptlq_o9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfptlq_o9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min_sum = $total = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n\
    \        $total += $nums[$i];\n        if ($total < $min_sum) {\n            $min_sum\
    \ = $total;\n        }\n    }\n    return $min_sum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0x0g5dj.php:22\n\
    Stack trace:\n#0 /tmp/tmpu0x0g5dj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu0x0g5dj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  if (count($nums) === 0) return false;\n  $min = $nums[0];\n  $sum = $nums[0];\n\
    \  for ($i = 1; $i < count($nums); $i++) {\n    $sum += $nums[$i];\n    if ($sum\
    \ < $min) $min = $sum;\n    if ($sum > 0) $sum = 0;\n  }\n  return $min;\n}\n\n\
    print_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\nprint_r(minSubArraySum([-1, -2,\
    \ -3]));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9fmii_3.php:32\n\
    Stack trace:\n#0 /tmp/tmpm9fmii_3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpm9fmii_3.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (sizeof($nums) == 0) return 0;\n    if (sizeof($nums) == 1) return\
    \ $nums[0];\n    if (sizeof($nums) == 2) return min($nums[0], $nums[1]);\n   \
    \ $length = sizeof($nums);\n    $minSum = $nums[0];\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $sum = 0;\n        for ($j = $i; $j < $length; $j++) {\n  \
    \          $sum += $nums[$j];\n            if ($sum < $minSum) {\n           \
    \     $minSum = $sum;\n            }\n        }\n    }\n    return $minSum;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $currentSum = 0;\n  $minSum = PHP_INT_MAX;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $currentSum += $nums[$i];\n    if ($currentSum < $minSum) {\n \
    \     $minSum = $currentSum;\n    }\n    if ($currentSum > 0) {\n      $currentSum\
    \ = 0;\n    }\n  }\n  return $minSum;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2,\
    \ 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    $st = 0;\n\n    for\
    \ ($end = 0; $end < count($nums); $end++) {\n        $currentSum += $nums[$end];\n\
    \        while ($currentSum >= $minSum) {\n            $minSum = min($minSum,\
    \ $currentSum);\n            $currentSum -= $nums[$st];\n            $st++;\n\
    \        }\n    }\n\n    return $minSum;\n}\n\nvar_dump(minSubArraySum([2, 3,\
    \ 4, 1, 2, 4]) == 1);\nvar_dump(minSubArraySum([-1, -2, -3]) == -6);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(false)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmptv59kl05.php:31\nStack trace:\n#0 /tmp/tmptv59kl05.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmptv59kl05.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = $nums[0];\n  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $sum += $nums[$i];\n    if ($sum < $min) {\n      $min = $sum;\n    }\n\
    \    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $temp = 0;\n    $i = 0;\n    $j = 0;\n    while\
    \ ($j < count($nums)) {\n        $temp += $nums[$j];\n        if ($temp < $min)\
    \ {\n            $min = $temp;\n        }\n        if ($temp < 0) {\n        \
    \    $temp = 0;\n            $i = $j + 1;\n        }\n        $j++;\n    }\n \
    \   return $min;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppot0_tb3.php:30\n\
    Stack trace:\n#0 /tmp/tmppot0_tb3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppot0_tb3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min_sum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min_sum) {\n      \
    \      $min_sum = $sum;\n        }\n        if ($sum > 0) {\n            $sum\
    \ = 0;\n        }\n    }\n    return $min_sum;\n}\n\n/**\n * @runTestsInSeparateProcesses\n\
    \ */\nclass MinSubArraySumTest extends TestCase\n{\n    public function testExamples()\n\
    \    {\n        $this->assertEquals(1, minSubArraySum([2, 3, 4, 1, 2, 4]));\n\
    \        $this->assertEquals(-6, minSubArraySum([-1, -2, -3]));\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'TestCase' not found in /tmp/tmpehr86r8f.php:25\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmpehr86r8f.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (!$nums) {\n        return 0;\n    }\n    $result = $nums[0];\n  \
    \  $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum\
    \ = max($nums[$i], $sum + $nums[$i]);\n        $result = min($result, $sum);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1xeg2f3.php:25\n\
    Stack trace:\n#0 /tmp/tmpz1xeg2f3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz1xeg2f3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($currentSum + $nums[$i],\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $len = count($nums);\n    if ($len == 0) return 0;\n    $min = $nums[0];\n\
    \    $sum = $nums[0];\n    for ($i = 1; $i < $len; $i++) {\n        $sum += $nums[$i];\n\
    \        if ($sum < $min) $min = $sum;\n        if ($sum > 0) $sum = 0;\n    }\n\
    \    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp523xqfs_.php:31\n\
    Stack trace:\n#0 /tmp/tmp523xqfs_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp523xqfs_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $subArraySum = 0;\n    $subArray = [];\n    $min = PHP_INT_MAX;\n   \
    \ for ($i = 0; $i < count($nums); $i++) {\n        $subArraySum += $nums[$i];\n\
    \        $subArray[] = $nums[$i];\n        if ($subArraySum >= $min) {\n     \
    \       $subArraySum -= array_shift($subArray);\n        }\n        $min = min($min,\
    \ $subArraySum);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprs3h1btg.php:29\n\
    Stack trace:\n#0 /tmp/tmprs3h1btg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprs3h1btg.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $startIndex = 0;\n    $endIndex = 0;\n    $currentSum = 0;\n    $minSum\
    \ = 0;\n    $currentLength = 0;\n    $minLength = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        if ($currentSum + $nums[$i] > 0) {\n            $currentSum\
    \ += $nums[$i];\n            $currentLength++;\n        } else {\n           \
    \ $currentSum = 0;\n            $currentLength = 0;\n            $startIndex =\
    \ $i + 1;\n        }\n        if ($currentSum < $minSum || $minSum == 0) {\n \
    \           $minSum = $currentSum;\n            $minLength = $currentLength;\n\
    \            $endIndex = $i;\n        }\n    }\n    return array_slice($nums,\
    \ $startIndex, $minLength);\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\n\
    print_r(minSubArraySum([-1, -2, -3]));\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpkoahg08d.php:39\nStack trace:\n#0 /tmp/tmpkoahg08d.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkoahg08d.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $currentSum = 0;\n    $minSum = PHP_INT_MAX;\n    $start = 0;\n    $i\
    \ = 0;\n    while ($i < count($nums)) {\n        $currentSum += $nums[$i];\n \
    \       while ($currentSum >= $minSum) {\n            $minSum = min($minSum, $currentSum);\n\
    \            $currentSum -= $nums[$start];\n            $start++;\n        }\n\
    \        $i++;\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdursnkj.php:29\n\
    Stack trace:\n#0 /tmp/tmpfdursnkj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfdursnkj.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    $length = count($nums);\n\
    \    for ($i = 1; $i < $length; $i++) {\n        $currSum = max($nums[$i], $currSum\
    \ + $nums[$i]);\n        $minSum = min($minSum, $currSum);\n    }\n    return\
    \ $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0ir52z_.php:23\n\
    Stack trace:\n#0 /tmp/tmpz0ir52z_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz0ir52z_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = array_sum($nums);\n    $sum_min = $sum;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $sum = 0;\n        for ($j = $i; $j < count($nums);\
    \ $j++) {\n            $sum += $nums[$j];\n            if ($sum < $sum_min) {\n\
    \                $sum_min = $sum;\n            }\n        }\n    }\n    return\
    \ $sum_min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = $nums[0];\n  $tempSum = 0;\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $tempSum += $nums[$i];\n    if ($tempSum < $min) {\n      $min = $tempSum;\n\
    \    }\n  }\n  return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8q_h5kf.php:24\n\
    Stack trace:\n#0 /tmp/tmpc8q_h5kf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc8q_h5kf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $sum = array_sum($nums);\n  $min = $sum;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $currentSum = 0;\n    for ($j = $i; $j < count($nums); $j++) {\n\
    \      $currentSum += $nums[$j];\n      if ($currentSum < $min) {\n        $min\
    \ = $currentSum;\n      }\n    }\n  }\n  return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n}\n\n$res = minSubArraySum([2, 3, 4, 1, 2, 4]);\nprint_r($res);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j_y6i9x.php:17\n\
    Stack trace:\n#0 /tmp/tmp1j_y6i9x.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1j_y6i9x.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$start = 0;\n\t$end = 0;\n\t$sum = $nums[0];\n\t$minSum = $sum;\n\t$len\
    \ = count($nums);\n\twhile ($end < $len) {\n\t\tif ($sum < 0) {\n\t\t\t$start\
    \ = $end;\n\t\t\t$sum = 0;\n\t\t}\n\t\t$sum += $nums[$end];\n\t\t$minSum = min($minSum,\
    \ $sum);\n\t\t$end++;\n\t}\n\treturn $minSum;\n}\n\necho minSubArraySum([2, 3,\
    \ 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbtzu00s.php:32\n\
    Stack trace:\n#0 /tmp/tmplbtzu00s.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplbtzu00s.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = null;\n    $current = 0;\n    $numsCount = count($nums);\n   \
    \ for ($i = 0; $i < $numsCount; $i++) {\n        $current += $nums[$i];\n    \
    \    if ($min === null || $current < $min) {\n            $min = $current;\n \
    \       }\n        if ($current > 0) {\n            $current = 0;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $total = 0;\n    $min = $nums[0];\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $total += $nums[$i];\n        if ($total < $min) {\n      \
    \      $min = $total;\n        }\n        if ($total > 0) {\n            $total\
    \ = 0;\n        }\n    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = PHP_INT_MAX;\n  $sum = 0;\n  $start = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $sum += $nums[$i];\n    while ($sum >= $min) {\n      $min = min($min,\
    \ $sum);\n      $sum -= $nums[$start];\n      $start++;\n    }\n  }\n  return\
    \ $min;\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\nprint_r(minSubArraySum([-1,\
    \ -2, -3]));\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "92233720368547758079223372036854775807\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpuufvhnxw.php:29\nStack trace:\n#0 /tmp/tmpuufvhnxw.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuufvhnxw.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $currSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currSum += $nums[$i];\n        $min = min($min, $currSum);\n\
    \        if ($currSum > 0) {\n            $currSum = 0;\n        }\n    }\n  \
    \  return $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = null;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n    while\
    \ ($end < count($nums)) {\n        $sum += $nums[$end];\n        if ($min ===\
    \ null || $sum < $min) {\n            $min = $sum;\n        }\n        if ($sum\
    \ > 0) {\n            $sum = 0;\n            $start = $end + 1;\n        }\n \
    \       $end++;\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        while\
    \ ($sum > 0) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n        $end++;\n    }\n \
    \   return $minSum;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprpn6kz8v.php:29\n\
    Stack trace:\n#0 /tmp/tmprpn6kz8v.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprpn6kz8v.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sorted = sort($nums);\n    return min($nums);\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoppk8yjh.php:18\n\
    Stack trace:\n#0 /tmp/tmpoppk8yjh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoppk8yjh.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $sum = PHP_INT_MAX;\n  $currSum = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $currSum += $nums[$i];\n    if ($currSum < $sum) {\n      $sum\
    \ = $currSum;\n    }\n    if ($currSum > 0) {\n      $currSum = 0;\n    }\n  }\n\
    \  return $sum;\n}\n$nums = [2, 3, 4, 1, 2, 4];\nvar_dump(minSubArraySum($nums));\n\
    $nums = [-1, -2, -3];\nvar_dump(minSubArraySum($nums));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\nint(-6)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = array_sum($nums);\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $smallest = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($smallest > $sum) {\n     \
    \       $smallest = $sum;\n        }\n        if ($sum < 0) {\n            $sum\
    \ = 0;\n        }\n    }\n    return $smallest;\n}\necho minSubArraySum([2, 3,\
    \ 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n-3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgum1feyk.php:28\n\
    Stack trace:\n#0 /tmp/tmpgum1feyk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgum1feyk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = PHP_INT_MAX;\n  $currentMin = 0;\n  foreach ($nums as $num) {\n\
    \    $currentMin += $num;\n    $min = min($min, $currentMin);\n    $currentMin\
    \ = max(0, $currentMin);\n  }\n  return $min;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcw7lgh8c.php:22\n\
    Stack trace:\n#0 /tmp/tmpcw7lgh8c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcw7lgh8c.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  if (empty($nums)) {\n    return 0;\n  }\n  $minSum = PHP_INT_MAX;\n  $currentSum\
    \ = 0;\n  foreach ($nums as $num) {\n    $currentSum += $num;\n    $minSum = min($minSum,\
    \ $currentSum);\n    $currentSum = max($currentSum, 0);\n  }\n  return $minSum;\n\
    }\n\nvar_dump(minSubArraySum([2, 3, 4, 1, 2, 4])); // 1\nvar_dump(minSubArraySum([-1,\
    \ -2, -3])); // -6\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(2)\nint(-3)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxds3h0pb.php:28\n\
    Stack trace:\n#0 /tmp/tmpxds3h0pb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxds3h0pb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $currentSum = 0;\n    $minSum = INF;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        $minSum = min($minSum, $currentSum);\n\
    \        if ($currentSum > 0) {\n            $currentSum = 0;\n        }\n   \
    \ }\n    return $minSum;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\
    \ // 1\necho minSubArraySum([-1, -2, -3]) . PHP_EOL; // -6\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  if (empty($nums)) {\n    return 0;\n  }\n  $res = $nums[0];\n  $sum = 0;\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    $sum += $nums[$i];\n    $res =\
    \ min($res, $sum);\n    if ($sum > 0) {\n      $sum = 0;\n    }\n  }\n  return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $p1 = 0;\n    $p2 = count($nums) - 1;\n    $min = PHP_INT_MAX;\n    while\
    \ ($p1 < $p2) {\n        $sum = $nums[$p1] + $nums[$p2];\n        if ($sum < $min)\
    \ {\n            $min = $sum;\n        }\n        $p1++;\n        $p2--;\n   \
    \ }\n    return $min;\n}\n$input = [2, 3, 4, 1, 2, 4];\nvar_dump(minSubArraySum($input));\n\
    echo PHP_EOL;\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(5)\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzeknsln3.php:30\n\
    Stack trace:\n#0 /tmp/tmpzeknsln3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpzeknsln3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums)\
    \ . PHP_EOL;\n$nums = [-1, -2, -3];\necho minSubArraySum($nums) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$minSum = PHP_INT_MAX;\n\t$currSum = 0;\n\t$start = 0;\n\tfor ($i = 0;\
    \ $i < count($nums); $i++) {\n\t\t$currSum += $nums[$i];\n\t\twhile ($currSum\
    \ >= $minSum) {\n\t\t\t$minSum = min($minSum, $currSum);\n\t\t\t$currSum -= $nums[$start];\n\
    \t\t\t$start++;\n\t\t}\n\t}\n\treturn $minSum;\n}\necho minSubArraySum([2, 3,\
    \ 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1, -2, -3]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "9223372036854775807\n9223372036854775807\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpe2ab601w.php:28\nStack trace:\n#0 /tmp/tmpe2ab601w.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpe2ab601w.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) === 0) {\n        return 0;\n    }\n    $windowSum =\
    \ 0;\n    $windowStart = 0;\n    $minSum = PHP_INT_MAX;\n    for ($windowEnd =\
    \ 0; $windowEnd < count($nums); $windowEnd++) {\n        $windowSum += $nums[$windowEnd];\n\
    \        while ($windowSum >= $minSum) {\n            $minSum = min($minSum, $windowSum);\n\
    \            $windowSum -= $nums[$windowStart];\n            $windowStart++;\n\
    \        }\n    }\n    return $minSum;\n}\n\n$nums = [2, 3, 4, 1, 2, 4];\n$result\
    \ = minSubArraySum($nums);\necho \"The minimum sum of any non-empty sub-array\
    \ of [2, 3, 4, 1, 2, 4] is \" . $result . \"\\n\";\n\n$nums = [-1, -2, -3];\n\
    $result = minSubArraySum($nums);\necho \"The minimum sum of any non-empty sub-array\
    \ of [-1, -2, -3] is \" . $result . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The minimum sum of any non-empty sub-array of [2, 3, 4, 1, 2, 4] is 9223372036854775807\n\
    The minimum sum of any non-empty sub-array of [-1, -2, -3] is 9223372036854775807\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpfrojwx.php:37\nStack\
    \ trace:\n#0 /tmp/tmptpfrojwx.php(51): test()\n#1 {main}\n  thrown in /tmp/tmptpfrojwx.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $n = count($nums);\n    for ($start = 0; $start\
    \ < $n; $start++) {\n        $sum = 0;\n        for ($end = $start; $end < $n;\
    \ $end++) {\n            $sum += $nums[$end];\n            $min = min($min, $sum);\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $n = count($nums);\n    $minSum = $nums[0];\n    $runningSum = $nums[0];\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $runningSum = min($runningSum + $nums[$i],\
    \ $nums[$i]);\n        $minSum = min($minSum, $runningSum);\n    }\n    return\
    \ $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (empty($nums)) {\n        return 0;\n    }\n    $sum = $nums[0];\n\
    \    $leftIndex = 0;\n    $rightIndex = 0;\n    while ($rightIndex < count($nums))\
    \ {\n        $sum += $nums[$rightIndex];\n        if ($sum < 0) {\n          \
    \  $leftIndex = $rightIndex + 1;\n            $sum = 0;\n        }\n        $rightIndex++;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4dfxh4t.php:30\n\
    Stack trace:\n#0 /tmp/tmpk4dfxh4t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpk4dfxh4t.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = $nums[0];\n    $min = $nums[0];\n    for ($i = 1; $i < count($nums);\
    \ $i++) {\n        $sum = $sum + $nums[$i];\n        if ($sum < $min) {\n    \
    \        $min = $sum;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j62l_mu.php:24\n\
    Stack trace:\n#0 /tmp/tmp1j62l_mu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1j62l_mu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $cur = 0;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > $cur) {\n            $cur = $sum;\n\
    \        }\n    }\n    return $cur - $min;\n}\necho minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) . \"\\n\"; // 1\necho minSubArraySum([-1, -2, -3]) . \"\\n\"; // -6\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikzbmx8m.php:28\n\
    Stack trace:\n#0 /tmp/tmpikzbmx8m.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpikzbmx8m.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($currentSum + $nums[$i],\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1,\
    \ -2, -3]) . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $result = null;\n    $numsLength = count($nums);\n    $arrayOfSubArrays\
    \ = generateArrayOfSubArrays($nums, $numsLength);\n    foreach ($arrayOfSubArrays\
    \ as $subArray) {\n        $sum = array_sum($subArray);\n        if ($result ==\
    \ null || $sum < $result) {\n            $result = $sum;\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function generateArrayOfSubArrays()\
    \ in /tmp/tmpjkl5swb_.php:10\nStack trace:\n#0 /tmp/tmpjkl5swb_.php(21): minSubArraySum(Array)\n\
    #1 /tmp/tmpjkl5swb_.php(25): candidate(Array)\n#2 /tmp/tmpjkl5swb_.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjkl5swb_.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) == 0) {\n        return 0;\n    }\n    $min = $nums[0];\n\
    \    $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        if ($sum < $min) {\n            $min = $sum;\n      \
    \  }\n    }\n    return $min;\n}\n\n$input = [2, 3, 4, 1, 2, 4];\n$output = minSubArraySum($input);\n\
    echo $output;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph17a8rct.php:30\n\
    Stack trace:\n#0 /tmp/tmph17a8rct.php(44): test()\n#1 {main}\n  thrown in /tmp/tmph17a8rct.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        while\
    \ ($sum > 0) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n        $end++;\n    }\n    return $min;\n\
    }\n\n$nums = [2, 3, 4, 1, 2, 4];\nvar_dump(minSubArraySum($nums));\n$nums = [-1,\
    \ -2, -3];\nvar_dump(minSubArraySum($nums));\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\nint(9223372036854775807)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpvfcdewcv.php:34\nStack trace:\n#0 /tmp/tmpvfcdewcv.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvfcdewcv.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4])\
    \ == 1 ? \"pass\\n\" : \"fail\\n\";\necho minSubArraySum([-1, -2, -3]) == -6 ?\
    \ \"pass\\n\" : \"fail\\n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "pass\npass\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $total = 0;\n    $min = null;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        for ($j = $i; $j < count($nums); $j++) {\n            $total += $nums[$j];\n\
    \            if ($min === null || $total < $min) {\n                $min = $total;\n\
    \            }\n        }\n        $total = 0;\n    }\n    return $min;\n}\necho(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . \"\\n\");\necho(minSubArraySum([-1, -2, -3]) . \"\\n\");\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $current_sum = $nums[0];\n    $min_sum = $nums[0];\n    for ($i = 1;\
    \ $i < count($nums); $i++) {\n        $current_sum = max($nums[$i], $current_sum\
    \ + $nums[$i]);\n        $min_sum = min($min_sum, $current_sum);\n    }\n    return\
    \ $min_sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkgze9i9w.php:22\n\
    Stack trace:\n#0 /tmp/tmpkgze9i9w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkgze9i9w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $prevSum = 0;\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num)\
    \ {\n        $prevSum = min($prevSum + $num, $num);\n        $minSum = min($minSum,\
    \ $prevSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $total = 0;\n  $min = PHP_INT_MAX;\n  for ($i = 0; $i < count($nums); $i++)\
    \ {\n    $total += $nums[$i];\n    $min = min($min, $total);\n    if ($total >\
    \ 0) {\n      $total = 0;\n    }\n  }\n  return $min;\n}\n\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]).\"\\n\";\necho minSubArraySum([-1, -2, -3]).\"\\n\";\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min = null;\n  $sum = 0;\n  for ($i = 0; $i < count($nums); $i++) {\n\
    \    $sum += $nums[$i];\n    if ($sum < $min || $min === null) {\n      $min =\
    \ $sum;\n    }\n    for ($j = $i + 1; $j < count($nums); $j++) {\n      $sum +=\
    \ $nums[$j];\n      if ($sum < $min) {\n        $min = $sum;\n      }\n    }\n\
    \    $sum = 0;\n  }\n  return $min;\n}\n\nminSubArraySum([2, 3, 4, 1, 2, 4]);\
    \ // 1\nminSubArraySum([-1, -2, -3]); // -6\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min_sum = PHP_INT_MAX;\n    $running_sum = 0;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $running_sum += $nums[$i];\n        if ($running_sum\
    \ < $min_sum) {\n            $min_sum = $running_sum;\n        }\n        if ($running_sum\
    \ > 0) {\n            $running_sum = 0;\n        }\n    }\n    return $min_sum;\n\
    }\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = INF;\n    $start = 0;\n    for ($i = 0; $i <\
    \ count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum >= $minSum)\
    \ {\n            $minSum = min($minSum, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9870qh5.php:27\n\
    Stack trace:\n#0 /tmp/tmpi9870qh5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi9870qh5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $last = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $last = $last + $nums[$i];\n        if ($last < $min) {\n \
    \           $min = $last;\n        }\n        if ($last > 0) {\n            $last\
    \ = 0;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $min = null;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($i > 0) {\n            $sum = min($sum,\
    \ $nums[$i]);\n        }\n        if ($min === null || $sum < $min) {\n      \
    \      $min = $sum;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (sizeof($nums) === 0) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    $minSum = INF;\n    for ($i = 0; $i < sizeof($nums); $i++) {\n        $sum\
    \ += $nums[$i];\n        $minSum = min($minSum, $sum);\n        if ($sum < 0)\
    \ {\n            $sum = 0;\n        }\n    }\n    return $minSum;\n}\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ih0kky_.php:27\n\
    Stack trace:\n#0 /tmp/tmp1ih0kky_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1ih0kky_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n        if ($sum > 0) {\n            $sum = 0;\n \
    \       }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$minSum = INF;\n\t$currentSum = 0;\n\t$minStartIndex = 0;\n\t$minEndIndex\
    \ = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\t$currentSum += $nums[$i];\n\
    \t\tif ($currentSum < $minSum) {\n\t\t\t$minSum = $currentSum;\n\t\t\t$minStartIndex\
    \ = $i;\n\t\t\t$minEndIndex = $i;\n\t\t}\n\t\tif ($currentSum > 0) {\n\t\t\t$currentSum\
    \ = 0;\n\t\t}\n\t}\n\treturn $minSum;\n}\n\nfunction candidate(...$args) {\n \
    \   return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $min_sum = PHP_INT_MAX;\n  $curr_sum = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    $curr_sum += $nums[$i];\n    if ($curr_sum < $min_sum) {\n    \
    \  $min_sum = $curr_sum;\n    }\n    if ($curr_sum > 0) {\n      $curr_sum = 0;\n\
    \    }\n  }\n  return $min_sum;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) .\
    \ PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $result = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $result = min($result, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $result;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\";\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = 0;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc7jtg2n.php:24\n\
    Stack trace:\n#0 /tmp/tmpzc7jtg2n.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzc7jtg2n.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $min = PHP_INT_MAX;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) $sum = 0;\n    }\n    return $min;\n}\nprint_r(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\necho PHP_EOL;\nprint_r(minSubArraySum([-1, -2, -3]));\necho\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $size = count($nums);\n    $sum = 0;\n    $min = INF;\n    for ($i =\
    \ 0; $i < $size; $i++) {\n        if ($sum < 0) {\n            $sum = $nums[$i];\n\
    \        } else {\n            $sum += $nums[$i];\n        }\n        $min = min($min,\
    \ $sum);\n    }\n    return $min;\n}\n\nprint_r(minSubArraySum([2, 3, 4, 1, 2,\
    \ 4]));\nprint_r(minSubArraySum([-1, -2, -3]));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2-3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6ogcszk.php:29\n\
    Stack trace:\n#0 /tmp/tmpn6ogcszk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn6ogcszk.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  $minSum = array_sum($nums);\n  $currentSum = 0;\n  for ($i = 0; $i < count($nums);\
    \ $i++) {\n    for ($j = $i; $j < count($nums); $j++) {\n      $currentSum +=\
    \ $nums[$j];\n      if ($currentSum < $minSum) {\n        $minSum = $currentSum;\n\
    \      }\n    }\n    $currentSum = 0;\n  }\n  return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n        if ($currentSum >\
    \ 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]) . \"\\n\"; // 1\necho minSubArraySum([-1,\
    \ -2, -3]) . \"\\n\"; // -6\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n  if (count($nums) === 0) return 0;\n  $minSum = $nums[0];\n  $currentSum\
    \ = $nums[0];\n  for ($i = 1; $i < count($nums); $i++) {\n    $currentSum = max($nums[$i],\
    \ $currentSum + $nums[$i]);\n    $minSum = min($minSum, $currentSum);\n  }\n \
    \ return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgj0279u.php:23\n\
    Stack trace:\n#0 /tmp/tmpmgj0279u.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmgj0279u.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $min = array_sum($nums);\n    $start = 0;\n    $end =\
    \ 0;\n    while($end < count($nums)) {\n        $sum += $nums[$end];\n       \
    \ if($sum < $min) {\n            $min = $sum;\n        }\n        if($sum > 0)\
    \ {\n            $sum = 0;\n            $start = $end + 1;\n        }\n      \
    \  $end++;\n    }\n    return $min;\n}\necho minSubArraySum([-1, -2, -3]);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '-6'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $current = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $current += $nums[$i];\n        $min = min($min, $current);\n\
    \        if ($current > 0) {\n            $current = 0;\n        }\n    }\n  \
    \  return $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = null;\n    $window = [];\n    $i = 0;\n    foreach ($nums as $num)\
    \ {\n        $window[] = $num;\n        if (count($window) > 1) {\n          \
    \  $window[$i] += $window[$i - 1];\n        }\n        if ($min === null || $window[$i]\
    \ < $min) {\n            $min = $window[$i];\n        }\n        $i++;\n    }\n\
    \    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zm67nkr.php:29\n\
    Stack trace:\n#0 /tmp/tmp8zm67nkr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8zm67nkr.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if(!$nums) {\n        return 0;\n    }\n    $min = $nums[0];\n    $result\
    \ = $nums[0];\n    for($i = 1; $i < count($nums); $i++) {\n        $min = min($min\
    \ + $nums[$i], $nums[$i]);\n        $result = min($result, $min);\n    }\n   \
    \ return $result;\n}\n\n$test = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($test);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $sum = 0;\n    $start = 0;\n    $end = 0;\n    $length = count($nums);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $sum += $nums[$i];\n        if\
    \ ($sum < $min) {\n            $min = $sum;\n            $start = $i;\n      \
    \      $end = $i;\n        }\n    }\n    for ($i = 0; $i < $length; $i++) {\n\
    \        for ($j = $i + 1; $j < $length; $j++) {\n            $sum = 0;\n    \
    \        for ($k = $i; $k <= $j; $k++) {\n                $sum += $nums[$k];\n\
    \            }\n            if ($sum < $min) {\n                $min = $sum;\n\
    \                $start = $i;\n                $end = $j;\n            }\n   \
    \     }\n    }\n    echo \"The min sum is $min, the range is ($start, $end)\\\
    n\";\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The min sum is 0, the range is (0, 0)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmprzm275el.php:41\nStack trace:\n#0 /tmp/tmprzm275el.php(55):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprzm275el.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSoFar = INF;\n    $minEndingHere = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $minEndingHere = min($minEndingHere + $nums[$i], $nums[$i]);\n\
    \        $minSoFar = min($minSoFar, $minEndingHere);\n    }\n    return $minSoFar;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = INF;\n    $left = 0;\n    $right = 0;\n    $sum = 0;\n    while\
    \ ($right < count($nums)) {\n        $sum += $nums[$right];\n        while ($sum\
    \ >= 0) {\n            $minSum = min($minSum, $sum);\n            $sum -= $nums[$left];\n\
    \            $left++;\n        }\n        $right++;\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = INF;\n    $curr = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $curr += $nums[$i];\n        $min = min($min, $curr);\n        if\
    \ ($curr > 0) {\n            $curr = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [2, 3, 4, 1, 2, 4];\necho \"minSubArraySum($nums) = \" . minSubArraySum($nums)\
    \ . PHP_EOL;\n\n$nums = [-1, -2, -3];\necho \"minSubArraySum($nums) = \" . minSubArraySum($nums)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "minSubArraySum(Array) = 1\nminSubArraySum(Array) = -6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $length = count($nums);\n    if($length == 0) {\n        return 0;\n\
    \    }\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for($i = 0; $i < $length;\
    \ $i++) {\n        $sum += $nums[$i];\n        if($sum < $min) {\n           \
    \ $min = $sum;\n        }\n        if($sum > 0) {\n            $sum = 0;\n   \
    \     }\n    }\n    return $min;\n}\n\n$nums = [-1, -2, -3];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '-6'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$min = INF;\n\t$runningSum = 0;\n\t$i = 0;\n\t$j = 0;\n\t$size = count($nums);\n\
    \twhile ($j < $size) {\n\t\t$runningSum += $nums[$j];\n\t\twhile ($runningSum\
    \ >= $min) {\n\t\t\t$min = $runningSum;\n\t\t\t$runningSum -= $nums[$i];\n\t\t\
    \t$i++;\n\t\t}\n\t\t$j++;\n\t}\n\treturn $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsyoh412x.php:30\n\
    Stack trace:\n#0 /tmp/tmpsyoh412x.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsyoh412x.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = null;\n    $sum = 0;\n    for ($i = 0; $i < count($nums); $i++)\
    \ {\n        $sum += $nums[$i];\n        if ($sum < $min || $min === null) {\n\
    \            $min = $sum;\n        }\n        for ($j = $i - 1; $j >= 0; $j--)\
    \ {\n            $sum -= $nums[$j];\n            if ($sum < $min) {\n        \
    \        $min = $sum;\n            }\n        }\n        $sum = 0;\n    }\n  \
    \  return $min;\n}\necho \"minSubArraySum([2, 3, 4, 1, 2, 4]) == 1 ---> \" . (minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) == 1 ? 'success' : 'fail') . \"\\n\";\necho \"minSubArraySum([-1,\
    \ -2, -3]) == -6 ---> \" . (minSubArraySum([-1, -2, -3]) == -6 ? 'success' : 'fail')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "minSubArraySum([2, 3, 4, 1, 2, 4]) == 1 ---> fail\nminSubArraySum([-1,\
    \ -2, -3]) == -6 ---> fail\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpk632uxz8.php:32\nStack trace:\n#0 /tmp/tmpk632uxz8.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpk632uxz8.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$min = INF;\n\t$sum = 0;\n\t$i = 0;\n\t$j = 0;\n\twhile ($j < count($nums))\
    \ {\n\t\t$sum += $nums[$j];\n\t\tif ($sum < $min) {\n\t\t\t$min = $sum;\n\t\t\
    }\n\t\tif ($sum >= 0) {\n\t\t\t$sum = 0;\n\t\t\t$i = $j + 1;\n\t\t}\n\t\t$j++;\n\
    \t}\n\treturn $min;\n}\n$nums = [2, 3, 4, 1, 2, 4];\necho minSubArraySum($nums)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    if (count($nums) === 0) {\n        return 0;\n    }\n    $current = 0;\n\
    \    $min = PHP_INT_MAX;\n    foreach ($nums as $n) {\n        $current += $n;\n\
    \        $min = min($min, $current);\n        $current = max($current, 0);\n \
    \   }\n    return $min;\n}\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\necho \"\\\
    n\";\necho minSubArraySum([-1, -2, -3]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ 0, 0]);\necho \"\\n\";\necho minSubArraySum([-3, 2, 3, -2, 3, -1]);\necho \"\
    \\n\";\necho minSubArraySum([0, 0, -1, 0]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ 0, 0, 0]);\necho \"\\n\";\necho minSubArraySum([-1, 0, 0, 0]);\necho \"\\n\"\
    ;\necho minSubArraySum([0, -1, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ 0, -1, 0]);\necho \"\\n\";\necho minSubArraySum([0, 0, 0, -1]);\necho \"\\n\"\
    ;\necho minSubArraySum([-1, 0, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ -1, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0, 0, -1, 0]);\necho \"\\n\"\
    ;\necho minSubArraySum([0, 0, 0, -1]);\necho \"\\n\";\necho minSubArraySum([-1,\
    \ 0, 0, 0]);\necho \"\\n\";\necho minSubArraySum([0, -1, 0, 0]);\necho \"\\n\"\
    ;\necho minSubArraySum([0, 0, -1, 0]);\necho \"\\n\";\necho minSubArraySum([0,\
    \ 0, 0, -1]);\necho \"\\n\";\necho minSubArraySum([-1, 0, 0, 0]);\necho \"\\n\"\
    ;\necho minSubArraySum([0, -1, 0, 0\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk5nqfgdk.php on line 59\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = $sum = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n\
    \        $sum = min($nums[$i], $sum + $nums[$i]);\n        $min = min($min, $sum);\n\
    \    }\n    return $min;\n}\nprint_r(minSubArraySum([2, 3, 4, 1, 2, 4]));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\necho minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n-6\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\tif (empty($nums)) return 0;\n\t$currentSum = $minSum = 0;\n\tfor ($i =\
    \ 0; $i < count($nums); $i++) {\n\t\t$currentSum += $nums[$i];\n\t\tif ($currentSum\
    \ < $minSum) {\n\t\t\t$minSum = $currentSum;\n\t\t}\n\t\tif ($currentSum > 0)\
    \ {\n\t\t\t$currentSum = 0;\n\t\t}\n\t}\n\treturn $minSum;\n}\n\nvar_dump(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]));\nvar_dump(minSubArraySum([-1, -2, -3]));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(0)\nint(-6)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamzwi10w.php:29\n\
    Stack trace:\n#0 /tmp/tmpamzwi10w.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpamzwi10w.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min = INF;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        while ($sum >= $min) {\n      \
    \      $min = min($min, $sum);\n            $sum -= $nums[$start];\n         \
    \   $start++;\n        }\n    }\n    return $min;\n}\necho minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "INF\nINF\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7ya_0x1.php:28\n\
    Stack trace:\n#0 /tmp/tmph7ya_0x1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph7ya_0x1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\t$sum = $nums[0];\n\t$start = 0;\n\t$min = INF;\n\tfor ($i = 1; $i < count($nums);\
    \ $i++) {\n\t\t$sum += $nums[$i];\n\t\tif ($sum < $min) {\n\t\t\t$min = $sum;\n\
    \t\t}\n\t\tif ($sum - $nums[$start] > $min) {\n\t\t\t$sum -= $nums[$start];\n\t\
    \t\t$start++;\n\t\t}\n\t}\n\treturn $min;\n}\n\necho minSubArraySum([2, 3, 4,\
    \ 1, 2, 4]) . PHP_EOL;\necho minSubArraySum([-1, -2, -3]) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "5\n-5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0do389t.php:31\n\
    Stack trace:\n#0 /tmp/tmpq0do389t.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpq0do389t.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n        if ($currentSum >\
    \ 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [-1, -2, -3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '-6'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n    $min_sum = $nums[0];\n    $current_sum = $nums[0];\n    for ($i = 1;\
    \ $i < count($nums); $i++) {\n        $current_sum = min($nums[$i], $current_sum\
    \ + $nums[$i]);\n        $min_sum = min($min_sum, $current_sum);\n    }\n    return\
    \ $min_sum;\n}\n\necho minSubArraySum([2, 3, 4, 1, 2, 4]);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\n// minSubArraySum([2, 3, 4, 1,\
    \ 2, 4]) == 1\n// minSubArraySum([-1, -2, -3]) == -6\nfunction minSubArraySum($nums)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_3vw97m.php:15\n\
    Stack trace:\n#0 /tmp/tmph_3vw97m.php(29): test()\n#1 {main}\n  thrown in /tmp/tmph_3vw97m.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception

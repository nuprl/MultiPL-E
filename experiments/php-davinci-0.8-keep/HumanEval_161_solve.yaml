name: HumanEval_161_solve
language: php
prompt: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
  \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If\
  \ the string contains no letters, reverse the string.\n// The function should return\
  \ the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"\
  ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nfunction solve($s) {\n"
tests: "function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"\
  #$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#ccc\"\
  ) !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $str = str_split($s);\n    $result = \"\";\n    foreach ($str as\
    \ $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    if (empty($result)) {\n\
    \        return strrev($s);\n    }\n    return $result;\n}\necho solve(\"1234\"\
    ) . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\n\
    echo solve(\"\") . \"\\n\";\necho solve(\"!@#$%^&*()_+\") . \"\\n\";", "    $r\
    \ = \"\";\n    $l = strlen($s);\n    $changed = false;\n    for ($i = 0; $i <\
    \ $l; $i++) {\n        if (ctype_alpha($s[$i])) {\n            $r .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n            $changed =\
    \ true;\n        } else {\n            $r .= $s[$i];\n        }\n    }\n    return\
    \ $changed ? $r : strrev($s);\n}\necho solve(\"1234\") . \"\\n\";\necho solve(\"\
    ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@z\") . \"\\\
    n\";\necho solve(\"aEiOu\") . \"\\n\";\necho solve(\"aB1cD\") . \"\\n\";\necho\
    \ solve(\"aBcD\") . \"\\n\";\necho solve(\"1234567890\") . \"\\n\";", "    if\
    \ (ctype_alpha($s)) {\n        return strtoupper($s);\n    } else {\n        $numbers\
    \ = '';\n        $letters = '';\n        for ($i = 0; $i < strlen($s); $i++) {\n\
    \            if (ctype_alpha($s[$i])) {\n                $letters .= $s[$i];\n\
    \            } else {\n                $numbers .= $s[$i];\n            }\n  \
    \      }\n        $letters = strtoupper($letters);\n        $numbers = strrev($numbers);\n\
    \        return $letters . $numbers;\n    }\n}", "    return preg_replace_callback('/[a-z]/i',\
    \ function($matches) {\n        return $matches[0] == strtoupper($matches[0])\
    \ ? strtolower($matches[0]) : strtoupper($matches[0]);\n    }, $s);\n}\n", " \
    \   $newStr = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $newStr .= ($s[$i] === strtoupper($s[$i])) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $newStr .= $s[$i];\n  \
    \      }\n    }\n    return $newStr;\n}\n", "    $result = '';\n    $len = strlen($s);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $result .= ctype_alpha($s[$i]) ?\
    \ ($s[$i] === strtoupper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i])) :\
    \ $s[$i];\n    }\n    return $result;\n}\necho solve(\"1234\") . PHP_EOL;\necho\
    \ solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;", "    $letters =\
    \ ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n    $res = '';\n  \
    \  $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            if ($s[$i] == strtoupper($s[$i])) {\n            \
    \    $res .= strtolower($s[$i]);\n            } else {\n                $res .=\
    \ strtoupper($s[$i]);\n            }\n        } else {\n            $res .= $s[$i];\n\
    \        }\n    }\n    return $res;\n}\necho solve(\"1234\");\necho \"<br>\";\n\
    echo solve(\"ab\");\necho \"<br>\";\necho solve(\"#a@C\");\n", "    if (!preg_match('/[a-zA-Z]/',\
    \ $s)) {\n        return strrev($s);\n    } else {\n        return preg_replace_callback('/[a-zA-Z]/',\
    \ function($m) {\n            return $m[0] === strtoupper($m[0]) ? strtolower($m[0])\
    \ : strtoupper($m[0]);\n        }, $s);\n    }\n}\n", "    $letters = range('a',\
    \ 'z');\n    $str = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (in_array($s[$i], $letters)) {\n            $str .= (ctype_upper($s[$i])) ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $str\
    \ .= $s[$i];\n        }\n    }\n    return $str;\n}\nprint_r(solve(\"1234\"));\n\
    print_r(solve(\"ab\"));\nprint_r(solve(\"#a@C\"));", "  $reversed = '';\n  for\
    \ ($i = 0; $i < strlen($s); $i++) {\n    if (is_numeric($s[$i])) {\n      $reversed\
    \ = $s[$i] . $reversed;\n    } else {\n      $reversed = strtoupper($s[$i]) ===\
    \ $s[$i] ? strtolower($s[$i]) . $reversed : strtoupper($s[$i]) . $reversed;\n\
    \    }\n  }\n  return strlen($reversed) > 0 ? $reversed : strrev($s);\n}\necho\
    \ solve(\"aB\") . \"\\n\";\necho solve(\"1234\") . \"\\n\";\necho solve(\"#a@C\"\
    ) . \"\\n\";", "    $arr = str_split($s);\n    $l = count($arr);\n    $res = '';\n\
    \    for ($i = 0; $i < $l; $i++) {\n        if (ctype_alpha($arr[$i])) {\n   \
    \         $res .= $arr[$i] === strtoupper($arr[$i]) ? strtolower($arr[$i]) : strtoupper($arr[$i]);\n\
    \        } else {\n            $res .= $arr[$i];\n        }\n    }\n    return\
    \ $res ? $res : strrev($s);\n}\n", "    $letters = [\n        'a' => 'A',\n  \
    \      'b' => 'B',\n        'c' => 'C',\n        'd' => 'D',\n        'e' => 'E',\n\
    \        'f' => 'F',\n        'g' => 'G',\n        'h' => 'H',\n        'i' =>\
    \ 'I',\n        'j' => 'J',\n        'k' => 'K',\n        'l' => 'L',\n      \
    \  'm' => 'M',\n        'n' => 'N',\n        'o' => 'O',\n        'p' => 'P',\n\
    \        'q' => 'Q',\n        'r' => 'R',\n        's' => 'S',\n        't' =>\
    \ 'T',\n        'u' => 'U',\n        'v' => 'V',\n        'w' => 'W',\n      \
    \  'x' => 'X',\n        'y' => 'Y',\n        'z' => 'Z',\n        'A' => 'a',\n\
    \        'B' => 'b',\n        'C' => 'c',\n        'D' => 'd',\n        'E' =>\
    \ 'e',\n        'F' => 'f',\n        'G' => 'g',\n        'H' => 'h',\n      \
    \  'I' => 'i',\n        'J' => 'j',\n        'K' => 'k',\n        'L' => 'l',\n\
    \        'M' => 'm',\n        'N' => 'n',\n        'O' => 'o',\n        'P' =>\
    \ 'p',\n        'Q' => 'q',\n        'R' => 'r',\n        'S' => 's',\n      \
    \  'T' => 't',\n        'U' => 'u',\n        'V' => 'v',\n        'W' => 'w',\n\
    \        'X' => 'x',\n        'Y' => 'y',\n        'Z' => 'z',\n    ];\n    $output\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (array_key_", " \
    \   if (empty($s)) {\n        return $s;\n    }\n    $result = \"\";\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i] >= 'a' && $s[$i] <= 'z')\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else if ($s[$i] >=\
    \ 'A' && $s[$i] <= 'Z') {\n            $result .= strtolower($s[$i]);\n      \
    \  } else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n\nvar_dump(solve(\"1234\"));\nvar_dump(solve(\"ab\"));\nvar_dump(solve(\"#a@C\"\
    ));", "    $no_letters = true;\n    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $no_letters = false;\n\
    \            $result .= $s[$i] == strtoupper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $no_letters ? strrev($s) : $result;\n}\n\necho solve(\"1234\") . \"\\n\";\n\
    echo solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";", "    if(!preg_match('/[a-zA-Z]/',\
    \ $s)){\n        return strrev($s);\n    }\n    $arr = [];\n    for($i = 0; $i\
    \ < strlen($s); $i++){\n        if(ctype_alpha($s[$i])){\n            $arr[] =\
    \ ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else\
    \ {\n            $arr[] = $s[$i];\n        }\n    }\n    return implode($arr);\n\
    }", "    if(preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s) ^ strtoupper($s)\
    \ ^ $s;\n    }\n    return strrev($s);\n}", "    // your code here\n    return\
    \ $s;\n}\n", "  $letters = str_split($s);\n  $new_string = \"\";\n  for ($i =\
    \ 0; $i < count($letters); $i++) {\n    if (ctype_alpha($letters[$i])) {\n   \
    \   if (ctype_upper($letters[$i])) {\n        $new_string .= strtolower($letters[$i]);\n\
    \      } else {\n        $new_string .= strtoupper($letters[$i]);\n      }\n \
    \   } else {\n      $new_string .= $letters[$i];\n    }\n  }\n  return $new_string;\n\
    }", "    $res = \"\";\n    if (strlen($s) == 0) return $res;\n    if (!preg_match(\"\
    /[a-zA-Z]/\", $s)) {\n        $s = strrev($s);\n        return $s;\n    }\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if (preg_match(\"/[a-zA-Z]/\"\
    , $s[$i])) {\n            if (ctype_lower($s[$i])) {\n                $res .=\
    \ strtoupper($s[$i]);\n            } else {\n                $res .= strtolower($s[$i]);\n\
    \            }\n        } else {\n            $res .= $s[$i];\n        }\n   \
    \ }\n    return $res;\n}", "    $len = strlen($s);\n    $ans = '';\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        if (ctype_alpha($s[$i])) {\n            $ans\
    \ .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n        }\
    \ else {\n            $ans .= $s[$i];\n        }\n    }\n    return $ans;\n}",
  "    $letters = str_split($s);\n    $arr = [];\n    $has_letter = false;\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $has_letter\
    \ = true;\n            if (ctype_upper($letter)) {\n                $arr[] = strtolower($letter);\n\
    \            } else {\n                $arr[] = strtoupper($letter);\n       \
    \     }\n        } else {\n            $arr[] = $letter;\n        }\n    }\n \
    \   if ($has_letter) {\n        return implode('', $arr);\n    } else {\n    \
    \    return strrev($s);\n    }\n}", "    $letters = preg_split('/[^a-zA-Z]/',\
    \ $s, -1, PREG_SPLIT_NO_EMPTY);\n    if (count($letters) < 1) {\n        return\
    \ strrev($s);\n    }\n    $reversed = \"\";\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $reversed .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $reversed\
    \ .= $s[$i];\n        }\n    }\n    return $reversed;\n}", "\t$result = '';\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\tif (ctype_alpha($s[$i])) {\n\t\t\t\
    $s[$i] = ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\t\t\
    }\n\t\t$result = $s[$i] . $result;\n\t}\n\treturn $result;\n}\n\necho solve(\"\
    ab\") . \"\\n\";\necho solve(\"1234\") . \"\\n\";\necho solve(\"#a@C\") . \"\\\
    n\";", "    $letters = range('a', 'z');\n    $letters2 = range('A', 'Z');\n  \
    \  $letters = array_merge($letters, $letters2);\n    $length = strlen($s);\n \
    \   $res = '';\n    for ($i = 0; $i < $length; $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            if (ctype_lower($s[$i])) {\n                $res .=\
    \ strtoupper($s[$i]);\n            } else {\n                $res .= strtolower($s[$i]);\n\
    \            }\n        } else {\n            $res .= $s[$i];\n        }\n   \
    \ }\n    return $res;\n}\n\necho solve(\"#a@C\") . \"<br>\";\necho solve(\"1234\"\
    ) . \"<br>\";\necho solve(\"ab\") . \"<br>\";\necho solve(\"aB\") . \"<br>\";\n\
    echo solve(\"#a@C\") . \"<br>\";\necho solve(\"aBcDeFg\") . \"<br>\";\necho solve(\"\
    #a@c\") . \"<br>\";\necho solve(\"aBcDeFg\") . \"<br>\";\necho solve(\"aBcDeFg\"\
    ) . \"<br>\";\necho solve(\"#a@c\") . \"<br>\";\necho solve(\"aBcDeFg\") . \"\
    <br>\";\necho solve(\"#a@c\") . \"<br>\";\necho solve(\"#a@c\") . \"<br>\";\n\
    echo solve(\"#a@c\") . \"<br>\";\necho solve(\"aBcDeFg\") . \"<br>\";\necho solve(\"\
    #a@c\") . \"<br>\";\necho solve(\"#a@c\") . \"<br>\";\necho solve(\"#a@c\") .\
    \ \"<br>\";\necho solve(\"aBcDeFg\") . \"<br>\";\necho solve(\"#a@c\") . \"<br>\"\
    ;\necho solve(\"#a@c\") . \"<br>\";\necho solve(\"#a@c\") . \"<br>\";\necho solve(\"\
    aBcDeFg\") . \"<br>\";\necho", "    $last_char = \"\";\n    $new_string = \"\"\
    ;\n    for ($i = 0; $i < strlen($s); $i++) {\n        $char = substr($s, $i, 1);\n\
    \        if (ctype_alpha($char)) {\n            if (ctype_upper($char)) {\n  \
    \              $new_string .= strtolower($char);\n            } else if (ctype_lower($char))\
    \ {\n                $new_string .= strtoupper($char);\n            }\n      \
    \  } else {\n            $new_string .= $char;\n        }\n    }\n    if (ctype_alpha($new_string))\
    \ {\n        return strrev($new_string);\n    } else {\n        return $new_string;\n\
    \    }\n}\n\necho solve(\"2341\") . \"\\n\"; // 4321\necho solve(\"ab\") . \"\\\
    n\"; // AB\necho solve(\"#a@C\") . \"\\n\"; // #A@c\necho solve(\"#C@a\") . \"\
    \\n\"; // #a@C\necho solve(\"1\") . \"\\n\"; // 1\necho solve(\"12\") . \"\\n\"\
    ; // 21\necho solve(\"121\") . \"\\n\"; // 121\necho solve(\"1234\") . \"\\n\"\
    ; // 4321\necho solve(\"#a@C1\") . \"\\n\"; // #A@c1\necho solve(\"abcd\") . \"\
    \\n\"; // DCBA\necho solve(\"123aB\") . \"\\n\"; // 321Ab\necho solve(\"abcd1\"\
    ) . \"\\n\"; // DCBA1\necho solve(\"0\") . \"\\n\"; // 0\necho solve(\"01\") .\
    \ \"\\n\"; // 10\necho solve(\"0123\") . \"\\n\"; // 3210\necho solve(\"0123a\"\
    ) . \"\\n\"; // 3210a\necho solve(\"1#a@C\") . \"\\n\"; // 1#A@c\necho solve(\"\
    1#C@a\") . \"\\n\"; // 1#a@C\necho solve(\"123#a@C\") . \"\\n\"; // 321#A@c\n\
    echo solve(\"abcd#a@C\") . \"\\n\"; // DCBA#A@c\necho solve(\"123aB#a@C", "  \
    \  $a=str_split($s);\n    $str=\"\";\n    foreach($a as $a){\n    if(!ctype_digit($a)){\n\
    \    $str.=strtoupper($a)==$a?strtolower($a):strtoupper($a);\n    }else{\n   \
    \ $str.=$a;\n    }\n    }\n    return strrev($str);\n}\n$s = '#a@C';\necho solve($s);",
  "    $letters = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ $letters .= $s[$i];\n    }\n    if ($letters == '') {\n        return strrev($s);\n\
    \    }\n    $res = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $res .= ctype_upper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $res .= $s[$i];\n     \
    \   }\n    }\n    return $res;\n}\n", "    $pos = 0;\n    $s = str_split($s);\n\
    \    foreach ($s as $key => $value) {\n        if(ctype_alpha($value)){\n    \
    \        $pos = $key;\n            break;\n        }\n    }\n    if ($pos == 0){\n\
    \        return strrev($s);\n    } else {\n        for ($i = $pos; $i < count($s);\
    \ $i++) {\n            if (ctype_upper($s[$i])){\n                $s[$i] = strtolower($s[$i]);\n\
    \            } else {\n                $s[$i] = strtoupper($s[$i]);\n        \
    \    }\n        }\n        return implode(\"\", $s);\n    }\n}\n", "    return\
    \ empty(preg_replace('/[^a-zA-Z]/', '', $s)) ? strrev($s) : strtolower($s) ^ strtoupper($s)\
    \ ^ $s;\n}\n", "    $reversed = \"\";\n    $letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters, $s[$i])\
    \ === false) {\n            $reversed .= $s[$i];\n        } else if (strtoupper($s[$i])\
    \ === $s[$i]) {\n            $reversed .= strtolower($s[$i]);\n        } else\
    \ {\n            $reversed .= strtoupper($s[$i]);\n        }\n    }\n    return\
    \ strrev($reversed);\n}", "    // ...\n    return \"\";\n}\n", "    $reverse =\
    \ \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ord($s[$i]) >\
    \ 64 && ord($s[$i]) < 91) {\n            $reverse .= chr(ord($s[$i]) + 32);\n\
    \        } else if (ord($s[$i]) > 96 && ord($s[$i]) < 123) {\n            $reverse\
    \ .= chr(ord($s[$i]) - 32);\n        } else {\n            $reverse .= $s[$i];\n\
    \        }\n    }\n    return $reverse;\n}\necho solve(\"1234\");", "    if (strlen($s)\
    \ < 1 || ctype_digit($s)) return strrev($s);\n    $result = \"\";\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == strtoupper($s[$i])) {\n\
    \            $result .= strtolower($s[$i]);\n        } else {\n            $result\
    \ .= strtoupper($s[$i]);\n        }\n    }\n    return $result;\n}\n\necho solve(\"\
    ab\") . \"\\n\";", "    if(strlen($s) == 0) return \"\";\n    $a = str_split($s);\n\
    \    $arr = [];\n    foreach($a as $k=>$v){\n        if(ctype_alpha($v)){\n  \
    \          $arr[] = $v;\n        }\n    }\n    if(count($arr) == 0) return strrev($s);\n\
    \    foreach($a as $k=>$v){\n        if(ctype_alpha($v)){\n            $a[$k]\
    \ = strtoupper($v) == $v ? strtolower($v) : strtoupper($v);\n        }\n    }\n\
    \    return implode(\"\", $a);\n}\n", "    $l = strlen($s);\n    $str = \"\";\n\
    \    $i = 0;\n    while ($i < $l) {\n        if (ord($s[$i]) >= 65 && ord($s[$i])\
    \ <= 90) {\n            $str .= chr(ord($s[$i]) + 32);\n        } else if (ord($s[$i])\
    \ >= 97 && ord($s[$i]) <= 122) {\n            $str .= chr(ord($s[$i]) - 32);\n\
    \        } else {\n            $str .= $s[$i];\n        }\n        $i++;\n   \
    \ }\n    return $str;\n}\n$s = \"1234\";\necho(solve($s));", "    if(ctype_alpha($s))\
    \ {\n        return strtoupper($s);\n    }\n    else {\n        return strtolower($s);\n\
    \    }\n}\n", "  if(ctype_alpha($s)){\n    return strtoupper($s);\n  }\n  $rev\
    \ = strrev($s);\n  $str = '';\n  for($i = 0; $i < strlen($rev); $i++){\n    if(ctype_alpha($rev[$i])){\n\
    \      if(ctype_upper($rev[$i])){\n        $str .= strtolower($rev[$i]);\n   \
    \   }else{\n        $str .= strtoupper($rev[$i]);\n      }\n    }else{\n     \
    \ $str .= $rev[$i];\n    }\n  }\n  return $str;\n}", "    $rev = '';\n    $arr\
    \ = str_split($s);\n    $isLetter = preg_match('/[a-zA-Z]/', $s);\n    if ($isLetter)\
    \ {\n        foreach ($arr as $c) {\n            if ($c === $c->strtoupper())\
    \ {\n                $rev .= $c->strtolower();\n            } else {\n       \
    \         $rev .= $c->strtoupper();\n            }\n        }\n    } else {\n\
    \        $rev = strrev($s);\n    }\n    return $rev;\n}\necho solve(\"1234\")\
    \ . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;",
  "    $arr = str_split($s);\n    foreach ($arr as $key => $val) {\n        if (ctype_alpha($val))\
    \ {\n            $arr[$key] = ctype_upper($val) ? strtolower($val) : strtoupper($val);\n\
    \        }\n    }\n    return implode($arr);\n}\n", "  $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  $res = \"\";\n  $s = strtolower($s);\n  for ($i = 0; $i < strlen($s); $i++)\
    \ {\n    if (strpos($letters, $s[$i]) !== false) {\n      $res .= strtoupper($s[$i]);\n\
    \    } else {\n      $res .= $s[$i];\n    }\n  }\n  return $res;\n}\n", "  $r\
    \ = \"\";\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (ctype_alpha($s[$i]))\
    \ {\n      $r .= ($s[$i] == strtoupper($s[$i])) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \    } else {\n      $r .= $s[$i];\n    }\n  }\n  return ($r == \"\") ? strrev($s)\
    \ : $r;\n}\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho\
    \ solve(\"#a@C\") . \"\\n\";", "    $count = 0;\n    $s = str_split($s);\n   \
    \ foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $count++;\n\
    \        }\n    }\n    if ($count === 0) {\n        return strrev($s);\n    }\n\
    \    return implode(array_map(function($x) {\n        if (ctype_alpha($x)) {\n\
    \            return strtoupper($x) === $x ? strtolower($x) : strtoupper($x);\n\
    \        }\n        return $x;\n    }, $s));\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]) === $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result === '' ? strrev($s) : $result;\n\
    }", "    $letters = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $letters[] = $s[$i];\n        }\n    }\n\
    \    $letters = count($letters) > 0 ? array_reverse($letters) : str_split($s);\n\
    \    $j = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $s[$i] = $letters[$j];\n            $j++;\n        }\n    }\n\
    \    return $s;\n}\n", "  if(ctype_alpha($s)){\n    return strtoupper($s);\n \
    \ }\n  $result='';\n  $array = str_split($s);\n  foreach($array as $key => $val){\n\
    \    if(ctype_alpha($val)){\n      if(ctype_upper($val)){\n        $result .=\
    \ strtolower($val);\n      }\n      else{\n        $result .= strtoupper($val);\n\
    \      }\n    }\n    else{\n      $result .= $val;\n    }\n  }\n  return $result;\n\
    }\necho solve(\"#a@C\");\n", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (!ctype_alpha($s[$i])) {\n            $result .= $s[$i];\n\
    \        } else {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        }\n    }\n    if (ctype_alpha($result)) {\n \
    \       return strrev($result);\n    }\n    return $result;\n}\necho solve(\"\
    1234\") . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;",
  "    if (strlen($s) == 1) return $s;\n    $result = '';\n    $letters = false;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == strtoupper($s[$i])\
    \ || $s[$i] == strtolower($s[$i])) {\n            $letters = true;\n         \
    \   $result .= strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n\
    \        }\n    }\n    if ($letters) {\n        return strrev($result);\n    }\
    \ else {\n        return strrev($s);\n    }\n}\n\necho solve(\"1234\");\necho\
    \ solve(\"ab\");\necho solve(\"#a@C\");", "    $string = array_map('strtolower',\
    \ str_split($s));\n    $result = '';\n    foreach ($string as $letter) {\n   \
    \     if ($letter === strtoupper($letter)) {\n            $result .= strtolower($letter);\n\
    \        } else {\n            $result .= strtoupper($letter);\n        }\n  \
    \  }\n    return $result;\n}\nprint_r(solve(\"1234\"));\necho '<br>';\nprint_r(solve(\"\
    ab\"));\necho '<br>';\nprint_r(solve(\"#a@C\"));\necho '<br>';", "    $newString\
    \ = \"\";\n    $reverse = \"\";\n    $stringArray = str_split($s);\n    foreach\
    \ ($stringArray as $value) {\n        if (ctype_alpha($value)) {\n           \
    \ $newString .= $value;\n        }\n    }\n    if (empty($newString)) {\n    \
    \    return strrev($s);\n    }\n    $newString = strtolower($newString);\n   \
    \ $newStringArray = str_split($newString);\n    foreach ($newStringArray as $value)\
    \ {\n        if (ctype_upper($value)) {\n            $reverse .= strtolower($value);\n\
    \        } else {\n            $reverse .= strtoupper($value);\n        }\n  \
    \  }\n    $reverseArray = str_split($reverse);\n    $reverseString = \"\";\n \
    \   $counter = 0;\n    foreach ($stringArray as $value) {\n        if (ctype_alpha($value))\
    \ {\n            $reverseString .= $reverseArray[$counter];\n            $counter++;\n\
    \        } else {\n            $reverseString .= $value;\n        }\n    }\n \
    \   return $reverseString;\n}\n\necho solve(\"abcabcabc\");", "  $result = \"\"\
    ;\n  $hasLetters = false;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (ctype_alpha($s[$i]))\
    \ {\n      $hasLetters = true;\n      if (ctype_upper($s[$i])) {\n        $result\
    \ .= strtolower($s[$i]);\n      } else {\n        $result .= strtoupper($s[$i]);\n\
    \      }\n    } else {\n      $result .= $s[$i];\n    }\n  }\n  if (!$hasLetters)\
    \ {\n    return strrev($result);\n  }\n  return $result;\n}\n\necho solve(\"1234\"\
    ) . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\n\
    echo solve(\"[aBc]\") . \"\\n\";\necho solve(\"1a2b3c\") . \"\\n\";\necho solve(\"\
    \\\") . \"\\n\";\necho solve(\"\\\") . \"\\n\";", "  $s = str_split($s);\n  foreach\
    \ ($s as $char) {\n    if (ctype_alpha($char)) $r[] = ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n    else $r[] = $char;\n  }\n  return empty($r) ? strrev($s)\
    \ : implode($r);\n}\n", "    $letters = \"\";\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $letters .= $s[$i];\n\
    \        }\n    }\n    $reverse_letters = strrev($letters);\n    $s_array = str_split($s);\n\
    \    $letters_array = str_split($letters);\n    $reverse_letters_array = str_split($reverse_letters);\n\
    \    for ($i = 0; $i < count($s_array); $i++) {\n        if (in_array($s_array[$i],\
    \ $letters_array)) {\n            for ($j = 0; $j < count($letters_array); $j++)\
    \ {\n                if ($s_array[$i] == $letters_array[$j]) {\n             \
    \       $s_array[$i] = $reverse_letters_array[$j];\n                }\n      \
    \      }\n        }\n    }\n    return implode($s_array);\n}", "  $reversed =\
    \ array_reverse(str_split($s));\n  $result = '';\n  foreach ($reversed as $value)\
    \ {\n    if (ctype_alpha($value)) {\n      $result .= strtoupper($value) == $value\
    \ ? strtolower($value) : strtoupper($value);\n    } else {\n      $result .= $value;\n\
    \    }\n  }\n  return $result;\n}\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"\
    ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;", "    return !preg_match(\"\
    /[a-zA-Z]/\", $s) ? strrev($s) : strtolower($s) ^ strtoupper($s) ^ $s;\n}\necho\
    \ solve(\"ab\");", "    return !preg_match(\"/[a-zA-Z]/\", $s) ? strrev($s) :\
    \ \n    strtolower($s) ^ strtoupper($s) ^ $s;\n}\n", "    if(empty($s)) return\
    \ \"\";\n    $res = \"\";\n    $arr = str_split($s);\n    foreach($arr as $elem)\
    \ {\n        if(preg_match(\"/[a-zA-Z]/\", $elem)) {\n            $elem = ($elem\
    \ === strtoupper($elem)) ? strtolower($elem) : strtoupper($elem);\n        }\n\
    \        $res .= $elem;\n    }\n    return strrev($res);\n}\n", "    if (preg_match('/[a-z]/',\
    \ $s)) {\n        $a = str_split($s);\n        foreach ($a as $k => $v) {\n  \
    \          if (ctype_lower($v)) {\n                $a[$k] = strtoupper($v);\n\
    \            } elseif (ctype_upper($v)) {\n                $a[$k] = strtolower($v);\n\
    \            }\n        }\n        return implode('', $a);\n    } else {\n   \
    \     return strrev($s);\n    }\n}\necho solve(\"ab\") . PHP_EOL;\necho solve(\"\
    #a@C\") . PHP_EOL;\necho solve(\"1234\") . PHP_EOL;", "  $str = '';\n  if (!preg_match('/[a-zA-Z]/',\
    \ $s)) return strrev($s);\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (preg_match('/[a-zA-Z]/',\
    \ $s[$i])) {\n      $str .= preg_match('/[a-z]/', $s[$i]) ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n    } else {\n      $str .= $s[$i];\n    }\n  }\n  return\
    \ $str;\n}\n\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\n\
    echo solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"\
    \u041F\u0440\u0438\u0432\u0435\u0442 \u041C\u0438\u0440!\") . \"\\n\";\necho solve(\"\
    \u041F\u0440\u0438\u0432\u0435\u0442 \u043F\u0440\u0438\u0432\u0435\u0442\") .\
    \ \"\\n\";\necho solve(\"\u041F\u0440\u0438\u0432\u0435\u0442 \u041F\u0440\u0438\
    \u0432\u0435\u0442\") . \"\\n\";\necho solve(\"9\") . \"\\n\";\necho solve(\"\
    9#a@c\") . \"\\n\";\necho solve(\"\") . \"\\n\";\necho solve(\"9#a@c\") . \"\\\
    n\";\necho solve(\"#A@c\") . \"\\n\";\necho solve(\"A@c\") . \"\\n\";\necho solve(\"\
    @c\") . \"\\n\";\necho solve(\"c\") . \"\\n\";\necho solve(\"\") . \"\\n\";\n\
    echo solve(\"#a@C\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"\
    AB\") . \"\\n\";\necho solve(\"abc\") . \"\\n\";\necho solve(\"ABC\") . \"\\n\"\
    ;\necho solve(\"ABc\") . \"\\n\";\necho solve(\"aBC\") . \"\\n\";\necho solve(\"\
    4321\") . \"\\n\";\necho solve(\"43210\") . \"\\n\";\necho solve(\"1\") . \"\\\
    n\";\necho solve(\"12\") . \"\\n\";\necho solve(\"123\") . \"\\n\";\necho solve",
  "    $reverseString = \"\";\n    if(ctype_alpha($s)){\n        $stringArray = str_split($s);\n\
    \        foreach($stringArray as $char){\n            if(ctype_lower($char)){\n\
    \                $reverseString .= strtoupper($char);\n            }else{\n  \
    \              $reverseString .= strtolower($char);\n            }\n        }\n\
    \    }else{\n        $reverseString = strrev($s);\n    }\n    return $reverseString;\n\
    }", "  $s = str_split($s);\n  foreach ($s as $v) {\n    if (preg_match('/[a-z]/',\
    \ $v)) {\n      $result[] = strtoupper($v);\n    } elseif (preg_match('/[A-Z]/',\
    \ $v)) {\n      $result[] = strtolower($v);\n    } else {\n      $result[] = $v;\n\
    \    }\n  }\n  return is_string($s) ? strrev(implode($result)) : implode($result);\n\
    }\necho solve(\"aBcD#\");", "    if (strlen($s) == 0) {\n        return $s;\n\
    \    }\n    $letters = 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            if (ctype_upper($s[$i])) {\n             \
    \   $result .= strtolower($s[$i]);\n            } else {\n                $result\
    \ .= strtoupper($s[$i]);\n            }\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strrev($result);\n}", "  if (!preg_match('/[a-zA-Z]/',\
    \ $s))\n    return strrev($s);\n  $str = \"\";\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if (ctype_alpha($s[$i])) {\n      if (ctype_upper($s[$i]))\n  \
    \      $str .= strtolower($s[$i]);\n      else\n        $str .= strtoupper($s[$i]);\n\
    \    } else {\n      $str .= $s[$i];\n    }\n  }\n  return $str;\n}\n", "    $res\
    \ = '';\n    $re = '/[a-z]/';\n    if (preg_match($re, $s)) {\n        for ($i\
    \ = 0; $i < strlen($s); $i++) {\n            if (preg_match($re, $s[$i])) {\n\
    \                $res .= strtoupper($s[$i]);\n            } else {\n         \
    \       $res .= strtolower($s[$i]);\n            }\n        }\n    } else {\n\
    \        for ($i = strlen($s) - 1; $i >= 0; $i--) {\n            $res .= $s[$i];\n\
    \        }\n    }\n    return $res;\n}\n\necho solve(\"ab#@c\");", "  return empty(preg_replace('/[^a-z]/i',\
    \ '', $s)) ? strrev($s) : strtolower($s) ^ strtoupper($s) ^ $s;\n}\n", "    if(preg_match(\"\
    /[a-zA-Z]/\", $s)) {\n        return strtolower($s) ^ strtoupper($s) ^ $s;\n \
    \   } else {\n        return strrev($s);\n    }\n}\n", "    $result = '';\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if (preg_match('/[a-z]/', $s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } elseif (preg_match('/[A-Z]/',\
    \ $s[$i])) {\n            $result .= strtolower($s[$i]);\n        } else {\n \
    \           $result .= $s[$i];\n        }\n    }\n    if (preg_match('/[a-zA-Z]/',\
    \ $result)) {\n        return $result;\n    } else {\n        return strrev($result);\n\
    \    }\n}\n", "    $new_string = \"\";\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (preg_match(\"/[a-z]/\", $s[$i])) {\n            $new_string .=\
    \ strtoupper($s[$i]);\n        } else if (preg_match(\"/[A-Z]/\", $s[$i])) {\n\
    \            $new_string .= strtolower($s[$i]);\n        } else {\n          \
    \  $new_string .= $s[$i];\n        }\n    }\n    if (preg_match(\"/[a-zA-Z]/\"\
    , $new_string)) {\n        return $new_string;\n    } else {\n        return strrev($new_string);\n\
    \    }\n}", "    $result = \"\";\n    $letter = false;\n    $reversed = false;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $letter = true;\n            if (ctype_upper($s[$i])) {\n       \
    \         $result .= strtolower($s[$i]);\n            } else {\n             \
    \   $result .= strtoupper($s[$i]);\n            }\n        } else {\n        \
    \    $result .= $s[$i];\n        }\n    }\n    if ($letter) {\n        return\
    \ $result;\n    } else {\n        return strrev($s);\n    }\n}", "    if(ctype_alpha($s))\
    \ return strtoupper($s);\n    return strrev($s);\n}", "  //..\n}\n", "    return\
    \ !preg_match('/[a-z]/i', $s) ? strrev($s) : preg_replace_callback('/[a-z]/i',\
    \ function($char) {\n        return ctype_upper($char[0]) ? strtolower($char[0])\
    \ : strtoupper($char[0]);\n    }, $s);\n}\n", "    $num = preg_match('/[a-zA-Z]/',\
    \ $s);\n    if ($num) {\n        $arr = str_split($s);\n        $result = [];\n\
    \        foreach ($arr as $key => $value) {\n            if (ctype_alpha($value))\
    \ {\n                $result[] = strtoupper($value) == $value ? strtolower($value)\
    \ : strtoupper($value);\n            } else {\n                $result[] = $value;\n\
    \            }\n        }\n        return implode('', $result);\n    } else {\n\
    \        return strrev($s);\n    }\n}", "\t$len = strlen($s);\n\t$s = str_split($s);\n\
    \t$res = [];\n\t$noLetters = true;\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif\
    \ (preg_match('/^[a-z]$/i', $s[$i])) {\n\t\t\t$noLetters = false;\n\t\t\t$res[]\
    \ = strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \t\t} else {\n\t\t\t$res[] = $s[$i];\n\t\t}\n\t}\n\treturn $noLetters ? strrev(implode($res))\
    \ : implode($res);\n}\necho solve(\"#a@C\") . \"\\n\";", "    if (preg_match('/[a-z]/',\
    \ $s)) {\n        return strtolower($s);\n    } else if (preg_match('/[A-Z]/',\
    \ $s)) {\n        return strtoupper($s);\n    } else {\n        return strrev($s);\n\
    \    }\n}", "    $new_str = \"\";\n    if (strlen($s) == 0) {\n        return\
    \ \"\";\n    }\n    if (ctype_alpha($s)) {\n        return strtoupper($s);\n \
    \   }\n    if (preg_match(\"/[^a-zA-Z]/\", $s)) {\n        $arr = str_split($s);\n\
    \        return strrev($s);\n    }\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_upper($s[$i])) {\n            $new_str .= strtolower($s[$i]);\n\
    \        } else if (ctype_lower($s[$i])) {\n            $new_str .= strtoupper($s[$i]);\n\
    \        } else {\n            $new_str .= $s[$i];\n        }\n    }\n    return\
    \ $new_str;\n}", "    $res = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $res .= strtoupper($s[$i]) ^\
    \ strtolower($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else\
    \ {\n            $res .= $s[$i];\n        }\n    }\n    return $res == $s ? strrev($s)\
    \ : $res;\n}\n", "    $arr = str_split($s);\n    $out = [];\n    $num = 0;\n \
    \   for ($i = 0; $i < count($arr); $i++) {\n        if (is_numeric($arr[$i]))\
    \ {\n            $num = 1;\n        }\n    }\n    if ($num) {\n        for ($i\
    \ = count($arr) - 1; $i >= 0; $i--) {\n            array_push($out, $arr[$i]);\n\
    \        }\n    } else {\n        for ($i = 0; $i < count($arr); $i++) {\n   \
    \         if (ctype_upper($arr[$i])) {\n                array_push($out, strtolower($arr[$i]));\n\
    \            } else {\n                array_push($out, strtoupper($arr[$i]));\n\
    \            }\n        }\n    }\n    return implode($out);\n}\n", "  $arr = str_split($s);\n\
    \  $result = [];\n  foreach ($arr as $key => $value) {\n    if (ord($value) >=\
    \ 65 && ord($value) <= 90) {\n      $result[] = chr(ord($value) + 32);\n    }\
    \ else if (ord($value) >= 97 && ord($value) <= 122) {\n      $result[] = chr(ord($value)\
    \ - 32);\n    } else {\n      $result[] = $value;\n    }\n  }\n  return implode('',\
    \ $result);\n}", "  if (strlen($s) == 0) return '';\n  $s = str_split($s);\n \
    \ $result = '';\n  foreach ($s as $char) {\n    if (!preg_match('/[a-zA-Z]/',\
    \ $char)) {\n      $result .= $char;\n    } else {\n      $result .= ($char ==\
    \ strtoupper($char)) ? strtolower($char) : strtoupper($char);\n    }\n  }\n  return\
    \ strrev($result);\n}\n\nprint_r(solve('1234').PHP_EOL);\nprint_r(solve('aB').PHP_EOL);\n\
    print_r(solve('#a@C').PHP_EOL);", "    $res = \"\";\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if ($s[$i] >= 'a' && $s[$i] <= 'z') {\n            $res .=\
    \ strtoupper($s[$i]);\n        } else if ($s[$i] >= 'A' && $s[$i] <= 'Z') {\n\
    \            $res .= strtolower($s[$i]);\n        } else {\n            $res .=\
    \ $s[$i];\n        }\n    }\n    if ($res != \"\") {\n        return $res;\n \
    \   } else {\n        return strrev($s);\n    }\n}\necho solve(\"#a@C\");", " \
    \   if(preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s) ^ strtoupper($s)\
    \ ^ $s;\n    } else {\n        return strrev($s);\n    }\n}", "    if(preg_match('/[a-zA-Z]/',\
    \ $s)) {\n        return strtolower($s) ^ strtoupper($s) ^ $s;\n    }\n    return\
    \ strrev($s);\n}", "\t$letters = str_split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \t$newS = '';\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif (in_array($s[$i],\
    \ $letters)) {\n\t\t\tif (ctype_upper($s[$i])) {\n\t\t\t\t$newS .= strtolower($s[$i]);\n\
    \t\t\t} else {\n\t\t\t\t$newS .= strtoupper($s[$i]);\n\t\t\t}\n\t\t} else {\n\t\
    \t\t$newS .= $s[$i];\n\t\t}\n\t}\n\treturn $newS;\n}\necho solve(\"aBc\") . PHP_EOL;\n\
    echo solve(\"1234\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;", "    $len =\
    \ strlen($s);\n    $newStr = '';\n    for ($i = 0; $i < $len; $i++) {\n      \
    \  if (ctype_alpha($s[$i])) {\n            $newStr .= strtoupper($s[$i]) === $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $newStr\
    \ .= $s[$i];\n        }\n    }\n    return $newStr === '' ? strrev($s) : $newStr;\n\
    }\n", "    if (ctype_alpha($s)) {\n        return strtoupper($s);\n    }\n   \
    \ elseif (ctype_upper($s)) {\n        return strtolower($s);\n    }\n    else\
    \ {\n        return strrev($s);\n    }\n}\n", "    $re = preg_replace_callback('/[a-z]/i',\
    \ function($m) {\n        return strtoupper($m[0]) === $m[0] ? strtolower($m[0])\
    \ : strtoupper($m[0]);\n    }, $s);\n    return $re ? $re : strrev($s);\n}\n",
  "    $s = str_split($s);\n    $result = \"\";\n    for ($i = 0; $i < count($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i]))\
    \ {\n                $result .= strtolower($s[$i]);\n            } else {\n  \
    \              $result .= strtoupper($s[$i]);\n            }\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    return $result;\n}", " \
    \   $s = str_split($s);\n    $i = 0;\n    foreach ($s as $char) {\n        if\
    \ (preg_match('/[a-z]/i', $char)) {\n            $s[$i] = strtoupper($char) ===\
    \ $char ? strtolower($char) : strtoupper($char);\n        }\n        $i++;\n \
    \   }\n    return implode($s);\n}\necho solve(\"#a@C\");", "  $s = str_split($s);\n\
    \  $res = '';\n  $letters = array_filter($s, function($a) {\n    return ctype_alpha($a);\n\
    \  });\n  if(empty($letters)) {\n    return strrev($s);\n  }\n  foreach($s as\
    \ $c) {\n    if(ctype_alpha($c)) {\n      $res .= (ctype_upper($c)) ? strtolower($c)\
    \ : strtoupper($c);\n    } else {\n      $res .= $c;\n    }\n  }\n  return $res;\n\
    }\n\n$answer = solve(\"aBC\");\necho \"Your Answer is \" . $answer;", "    $str\
    \ = \"\";\n    $str2 = \"\";\n    $str1 = \"\";\n    $str = str_split($s);\n \
    \   for($i = 0; $i < count($str); $i++){\n        if(ord($str[$i]) >= 97 && ord($str[$i])\
    \ <= 122){\n            $str[$i] = strtoupper($str[$i]);\n        }else if(ord($str[$i])\
    \ >= 65 && ord($str[$i]) <= 90){\n            $str[$i] = strtolower($str[$i]);\n\
    \        }\n    }\n    for($i = count($str)-1; $i >= 0; $i--){\n        $str1\
    \ .= $str[$i];\n    }\n    return $str1;\n}", "    if(preg_match('/[a-zA-Z]/',\
    \ $s)){\n        return strtolower($s) ^ strtoupper($s) ^ $s;\n    }\n    return\
    \ strrev($s);\n}\n\n$s = \"1234\";\nprint_r(solve($s));\necho \"<br>\";\n$s =\
    \ \"ab\";\nprint_r(solve($s));\necho \"<br>\";\n$s = \"#a@C\";\nprint_r(solve($s));\n\
    echo \"<br>\";\n$s = \"a1b2\";\nprint_r(solve($s));", "    $letters = [];\n  \
    \  for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $letters[] = $s[$i];\n        }\n    }\n    $words = [];\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n    \
    \        $words[] = array_pop($letters);\n        } else {\n            $words[]\
    \ = $s[$i];\n        }\n    }\n    return implode('', $words);\n}\n$q = \"abcd\"\
    ; // 'dcba'\n$q = \"aBcD\"; // 'dCbA'\n$q = \"1a2b3c4d\"; // '1d2c3b4a'\n$q =\
    \ \"1234\"; // '4321'\n$q = \"ab\"; // 'AB'\n$q = \"#a@C\"; // '#A@c'\necho solve($q);",
  "    if (!preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strrev($s);\n    }\n\
    \    return strtr($s, \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    , \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\");\n}\n", "    $s =\
    \ str_split($s);\n    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $s[$i] = strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) :\
    \ strtoupper($s[$i]);\n        }\n    }\n    return implode('', $s);\n}\n\nprint_r(solve(\"\
    1234\"));", "  if(preg_match('/[a-zA-Z]/', $s)) {\n    return strtolower($s) ^\
    \ strtoupper($s) ^ $s;\n  } else {\n    return strrev($s);\n  }\n}\n\necho solve(\"\
    1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\\
    n\";", "    //..\n    $i = 0;\n    $size = strlen($s);\n    $new = '';\n    while\
    \ ($i < $size) {\n        if (preg_match('/[a-z]/', $s[$i])) {\n            $new\
    \ .= strtoupper($s[$i]);\n        } else if (preg_match('/[A-Z]/', $s[$i])) {\n\
    \            $new .= strtolower($s[$i]);\n        } else {\n            $new .=\
    \ $s[$i];\n        }\n        $i++;\n    }\n    if (empty($new)) return strrev($s);\n\
    \    return $new;\n}\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\
    \\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"\") . \"\\n\";", "    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $hasLetter =\
    \ false;\n    $newStr = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n     \
    \   if (strpos($letters, $s[$i]) !== false) {\n            $hasLetter = true;\n\
    \            if (strtolower($s[$i]) === $s[$i]) {\n                $newStr .=\
    \ strtoupper($s[$i]);\n            } else {\n                $newStr .= strtolower($s[$i]);\n\
    \            }\n        } else {\n            $newStr .= $s[$i];\n        }\n\
    \    }\n    if ($hasLetter) {\n        return $newStr;\n    } else {\n       \
    \ return strrev($s);\n    }\n}\n", "  return ctype_alpha($s) ? strtoupper($s)\
    \ : strtolower($s);\n}\n\necho solve(\"123c\");", "    return $s == \"\" || $s\
    \ == strtoupper($s) || $s == strtolower($s) ? strrev($s) : str_ireplace(array(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"), array(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"\
    G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"\
    R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"), $s);\n}", "    return\
    \ ctype_alpha($s) ? strtoupper($s) : strtolower($s);\n}\n", "    //coding and\
    \ coding..\n    \n    if(strlen($s) === 0){\n        return \"\";\n    }\n\n \
    \   $res = '';\n    for($i = 0; $i < strlen($s); $i++){\n        if(ctype_upper($s[$i])){\n\
    \            $res .= strtolower($s[$i]);\n        } else if(ctype_lower($s[$i])){\n\
    \            $res .= strtoupper($s[$i]);\n        } else {\n            $res .=\
    \ $s[$i];\n        }\n    }\n\n    return $res;\n}", "    if (preg_match('/[a-z]/',\
    \ $s)) {\n        return strtolower($s);\n    }\n    if (preg_match('/[A-Z]/',\
    \ $s)) {\n        return strtoupper($s);\n    }\n    return strrev($s);\n}\n",
  "  return empty(preg_grep('/[a-zA-Z]/', str_split($s))) ? strrev($s) : implode(array_map(function($v)\
    \ {\n    return ctype_alpha($v) ? ctype_upper($v) ? strtolower($v) : strtoupper($v)\
    \ : $v;\n  }, str_split($s)));\n}\n", "  if (str_replace(\" \", \"\", $s) == \"\
    \") {\n    return strrev($s);\n  } else {\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n      if ($s[$i] == strtoupper($s[$i])) {\n        $newStr[$i] = strtolower($s[$i]);\n\
    \      } else if ($s[$i] == strtolower($s[$i])) {\n        $newStr[$i] = strtoupper($s[$i]);\n\
    \      } else {\n        $newStr[$i] = $s[$i];\n      }\n    }\n    return implode($newStr);\n\
    \  }\n}\n", "    if (!preg_match('/[a-zA-Z]/', $s)) {\n        return strrev($s);\n\
    \    }\n    return implode('', array_map(function($c) {\n        if (preg_match('/[a-z]/',\
    \ $c)) {\n            return strtoupper($c);\n        }\n        if (preg_match('/[A-Z]/',\
    \ $c)) {\n            return strtolower($c);\n        }\n        return $c;\n\
    \    }, str_split($s)));\n}", "    if (ctype_alpha($s)) {\n        for ($i = 0;\
    \ $i < strlen($s); $i++) {\n            if (ctype_lower($s[$i])) {\n         \
    \       $s[$i] = strtoupper($s[$i]);\n            } else {\n                $s[$i]\
    \ = strtolower($s[$i]);\n            }\n        }\n    } else {\n        $s =\
    \ strrev($s);\n    }\n    return $s;\n}", "  //..\n}", "  $c = '';\n  for ($i\
    \ = 0; $i < strlen($s); $i++) {\n    if (ctype_alpha($s[$i])) {\n      $c .= (ctype_upper($s[$i]))\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n    } else {\n      $c .= $s[$i];\n\
    \    }\n  }\n  return ($c) ? $c : strrev($s);\n}\necho solve(\"1234\") . PHP_EOL;\n\
    echo solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\necho solve(\"\"\
    ) . PHP_EOL;", "  // Your code here\n  if (strlen($s)==0){\n    return \"\";\n\
    \  }\n  $s = str_split($s);\n  for ($i=0; $i < count($s); $i++) { \n    if (preg_match(\"\
    /[a-z]/\", $s[$i])){\n      $s[$i] = strtoupper($s[$i]);\n    }elseif (preg_match(\"\
    /[A-Z]/\", $s[$i])) {\n      $s[$i] = strtolower($s[$i]);\n    }\n  }\n  return\
    \ implode($s);\n}", "    return !preg_match('/[a-z]/i', $s) ? strrev($s) : strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n}\n", "    if(!preg_match(\"/[a-zA-Z]/\", $s)){\n  \
    \      return strrev($s);\n    }\n    $result = \"\";\n    for($i = 0; $i < strlen($s);\
    \ $i++){\n        if(ctype_alpha($s[$i])){\n            if(ctype_upper($s[$i])){\n\
    \                $result .= strtolower($s[$i]);\n            } else {\n      \
    \          $result .= strtoupper($s[$i]);\n            }\n        } else {\n \
    \           $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   if(!preg_match(\"/[a-zA-Z]/\", $s)){\n        return strrev($s);\n    }\n\
    \    $s = str_split($s);\n    $result = [];\n    foreach($s as $item){\n     \
    \   if(preg_match(\"/[a-zA-Z]/\", $item)){\n            $result[] = ctype_lower($item)\
    \ ? strtoupper($item) : strtolower($item);\n        }else{\n            $result[]\
    \ = $item;\n        }\n    }\n    return implode($result);\n}", "  $letters =\
    \ [];\n  $upper = strtoupper($s);\n  $lower = strtolower($s);\n  for ($i = 0;\
    \ $i < strlen($s); $i++) {\n    if ($s[$i] == $upper[$i]) {\n      $letters[]\
    \ = $lower[$i];\n    } else {\n      $letters[] = $upper[$i];\n    }\n  }\n  return\
    \ implode($letters);\n}\n\necho solve(\"1234\");", "    $ans = \"\";\n    $s =\
    \ str_split($s);\n    $n = count($s);\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i])) {\n   \
    \             $ans .= strtolower($s[$i]);\n            } else {\n            \
    \    $ans .= strtoupper($s[$i]);\n            }\n        } else {\n          \
    \  $ans .= $s[$i];\n        }\n    }\n    return $ans;\n}\necho solve(\"1234\"\
    ) . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";",
  "  $count = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (preg_match('/[a-zA-Z]/',\
    \ $s[$i])) {\n      $count++;\n    }\n  }\n  if ($count === 0) {\n    return strrev($s);\n\
    \  }\n  $result = '';\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (preg_match('/[a-z]/',\
    \ $s[$i])) {\n      $result .= strtoupper($s[$i]);\n    } elseif (preg_match('/[A-Z]/',\
    \ $s[$i])) {\n      $result .= strtolower($s[$i]);\n    } else {\n      $result\
    \ .= $s[$i];\n    }\n  }\n  return $result;\n}\n$s = \"ab\";\nprint_r(solve($s));",
  "    // $letters = range('a', 'z');\n    // array_push($letters, range('A', 'Z'));\n\
    \    // for ($i = 0; $i < strlen($s); $i++) {\n    //     for ($j = 0; $j < count($letters);\
    \ $j++) {\n    //         if ($s[$i] == $letters[$j]) {\n    //             $s[$i]\
    \ = strtoupper($s[$i]);\n    //         }\n    //     }\n    // }\n    // return\
    \ $s;\n    $s = str_split($s);\n    $letters = \"\";\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $letters .= $char;\n     \
    \   }\n    }\n    $letters = str_split($letters);\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_lower($letter)) {\n            $letter = strtoupper($letter);\n\
    \        } else {\n            $letter = strtolower($letter);\n        }\n   \
    \ }\n    return $letters;\n}\n\nvar_dump(solve(\"#a@C\"));\n", "    if (preg_match('/[a-z]/',\
    \ $s)) {\n        $s = strtolower($s);\n    } elseif (preg_match('/[A-Z]/', $s))\
    \ {\n        $s = strtoupper($s);\n    } else {\n        $s = strrev($s);\n  \
    \  }\n    return $s;\n}\n", "    if(!ctype_alpha($s)){\n        return strrev($s);\n\
    \    }\n    $a = [];\n    $len = strlen($s);\n    for($i = 0; $i < $len; $i++){\n\
    \        if(ctype_alpha($s[$i])){\n            $a[] = ($s[$i] == strtoupper($s[$i]))\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        }else{\n            $a[]\
    \ = $s[$i];\n        }\n    }\n    return implode(\"\", $a);\n}\necho solve(\"\
    abcd\");", "    $s = str_split($s);\n    $result = [];\n    foreach ($s as $key\
    \ => $value) {\n        if (is_numeric($value)) {\n            $result[] = $value;\n\
    \        } else {\n            $result[] = strtoupper($value) == $value ? strtolower($value)\
    \ : strtoupper($value);\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve(\"ab\");\necho solve(\"#a@C\");\necho solve(\"1234\");", "\t$letters\
    \ = range('a', 'z');\n\t$new_string = '';\n\tfor ($i = 0; $i < strlen($s); $i++)\
    \ {\n\t\tif (in_array($s[$i], $letters)) {\n\t\t\tif ($s[$i] == strtoupper($s[$i]))\
    \ {\n\t\t\t\t$new_string .= strtolower($s[$i]);\n\t\t\t} else {\n\t\t\t\t$new_string\
    \ .= strtoupper($s[$i]);\n\t\t\t}\n\t\t} else {\n\t\t\t$new_string .= $s[$i];\n\
    \t\t}\n\t}\n\treturn $new_string;\n}\n", "    $arr = str_split($s);\n    $res\
    \ = [];\n    $flag = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if(ctype_alpha($arr[$i]))\
    \ {\n            $flag = 1;\n            if (ctype_upper($arr[$i])) {\n      \
    \          $res[] = strtolower($arr[$i]);\n            } else {\n            \
    \    $res[] = strtoupper($arr[$i]);\n            }\n        } else {\n       \
    \     $res[] = $arr[$i];\n        }\n    }\n    if ($flag) {\n        return implode($res);\n\
    \    } else {\n        return strrev($s);\n    }\n}\necho solve(\"1234\");", " \
    \   $result = '';\n    $letters = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z');\n    $letters2 = array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I',\
    \ 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y',\
    \ 'Z');\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtoupper($s[$i]);\n        } else if\
    \ (in_array($s[$i], $letters2)) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\necho solve(\"1234\") . '<br>';\necho solve(\"ab\") . '<br>';\n\
    echo solve(\"#a@C\") . '<br>';", "    //coding and coding..\n    $array = str_split($s);\n\
    \    $n = strlen($s);\n    for($i = 0; $i < $n; $i++){\n        if(($array[$i]\
    \ >= 'a' && $array[$i] <= 'z') || ($array[$i] >= 'A' && $array[$i] <= 'Z')){\n\
    \            $array[$i] = strtoupper($array[$i]);\n        }\n    }\n    return\
    \ implode(\"\", $array);\n}\n", "    $isLetter = preg_match('/[a-zA-Z]/', $s);\n\
    \    if (!$isLetter) {\n        return strrev($s);\n    }\n    return implode('',\
    \ array_map(function($value) {\n        return ctype_alpha($value) ? strtolower($value)\
    \ === $value ? strtoupper($value) : strtolower($value) : $value;\n    }, str_split($s)));\n\
    }", "    $indexes = array();\n    $l = 0;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $indexes[$l] = $i;\n    \
    \        $l++;\n        }\n    }\n    if (count($indexes) == 0) {\n        return\
    \ strrev($s);\n    }\n    $c = 0;\n    $res = \"\";\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i]))\
    \ {\n                $res[$i] = strtolower($s[$i]);\n            } else {\n  \
    \              $res[$i] = strtoupper($s[$i]);\n            }\n            $c++;\n\
    \        } else {\n            $res[$i] = $s[$i];\n        }\n    }\n    return\
    \ $res;\n}\n", "    $c = str_split($s);\n    $n = [];\n    for ($i = 0; $i < count($c);\
    \ $i++) {\n        if (ord($c[$i]) > 64 && ord($c[$i]) < 91) {\n            $n[]\
    \ = chr(ord($c[$i]) + 32);\n        } else if (ord($c[$i]) > 96 && ord($c[$i])\
    \ < 123) {\n            $n[] = chr(ord($c[$i]) - 32);\n        } else {\n    \
    \        $n[] = $c[$i];\n        }\n    }\n    return implode($n);\n}\n\nprint_r(solve(\"\
    1234\"));\nprint_r(solve(\"ab\"));\nprint_r(solve(\"#a@C\"));", "  $s = str_split($s);\n\
    \  $result = [];\n  $foundLetter = false;\n  foreach ($s as $char) {\n    if (ctype_alpha($char))\
    \ {\n      $foundLetter = true;\n      $result[] = strtoupper($char) == $char\
    \ ? strtolower($char) : strtoupper($char);\n    } else {\n      $result[] = $char;\n\
    \    }\n  }\n  if (!$foundLetter) {\n    $result = array_reverse($result);\n \
    \ }\n  return implode('', $result);\n}\n\necho solve(\"1234\");\necho \"\\n\"\
    ;\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\");\necho \"\\n\";",
  "    if(empty($s)) return \"\";\n    return str_ireplace(array_keys(range('a', 'z')),\
    \ array_values(range('A', 'Z')), str_ireplace(array_keys(range('A', 'Z')), array_values(range('a',\
    \ 'z')), $s));\n}\necho solve(\"1234\");", "    if (!preg_match('/[a-zA-Z]/',\
    \ $s)) {\n        return strrev($s);\n    }\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $s[$i] = ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        }\n    }\n    return $s;\n\
    }\necho solve(\"#a@C\");", "    if(!ctype_alpha($s)){\n        return strrev($s);\n\
    \    }\n    $newString = \"\";\n    for($i = 0; $i < strlen($s); $i++){\n    \
    \    if(ctype_alpha($s[$i])){\n            if(ctype_upper($s[$i])){\n        \
    \        $newString .= strtolower($s[$i]);\n            }else{\n             \
    \   $newString .= strtoupper($s[$i]);\n            }\n        }else{\n       \
    \     $newString .= $s[$i];\n        }\n    }\n    return $newString;\n}", " \
    \   //..\n}", "    $letters = preg_split('/[^a-zA-Z]/', $s, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $res = array_map(function($x) {\n        return ctype_upper($x) ? strtolower($x)\
    \ : strtoupper($x);\n    }, $letters);\n    return empty($res) ? strrev($s) :\
    \ str_replace($letters, $res, $s);\n}\n$s = '1234';\necho solve($s) . PHP_EOL;",
  "    if(!preg_match('/[a-zA-Z]/', $s)) {\n        return strrev($s);\n    }\n  \
    \  return strtolower($s) == $s ? strtoupper($s) : strtolower($s);\n}", "    $letters\
    \ = str_split($s);\n    $newString = \"\";\n    $isLetters = false;\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $isLetters\
    \ = true;\n            if (ctype_upper($letter)) {\n                $newString\
    \ .= strtolower($letter);\n            } else {\n                $newString .=\
    \ strtoupper($letter);\n            }\n        } else {\n            $newString\
    \ .= $letter;\n        }\n    }\n    if ($isLetters) {\n        return $newString;\n\
    \    } else {\n        return strrev($s);\n    }\n}\n", "    $upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $lower = \"abcdefghijklmnopqrstuvwxyz\";\n    $result = \"\";\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($upper, $s[$i]) !== false)\
    \ {\n            $result .= strtolower($s[$i]);\n        } else if (strpos($lower,\
    \ $s[$i]) !== false) {\n            $result .= strtoupper($s[$i]);\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }", "    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $count++;\n        }\n    }\n    if ($count == 0) {\n       \
    \ return strrev($s);\n    }\n    $result = \"\";\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_upper($s[$i])) {\n            $result .= strtolower($s[$i]);\n\
    \        } else if (ctype_lower($s[$i])) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}", "\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif (is_numeric($s[$i]))\
    \ {\n\t\t\t$temp = $s[$i];\n\t\t\t$s[$i] = $s[strlen($s) - $i - 1];\n\t\t\t$s[strlen($s)\
    \ - $i - 1] = $temp;\n\t\t}\n\t}\n\treturn $s;\n}", "    if (empty($s)) {\n  \
    \      return $s;\n    }\n    $chars = str_split($s);\n    $new_chars = [];\n\
    \    foreach ($chars as $char) {\n        if (ctype_alpha($char)) {\n        \
    \    $new_chars[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $new_chars[] = $char;\n        }\n    }\n    return\
    \ implode('', $new_chars);\n}\n\necho solve('1234');\necho '<br>';\necho solve('ab');\n\
    echo '<br>';\necho solve('#a@C');\necho '<br>';\necho solve('aA9');\necho '<br>';\n\
    echo solve('aA987');\necho '<br>';\necho solve('aA123');\necho '<br>';\necho solve('123');\n\
    echo '<br>';\necho solve('aA0987');\necho '<br>';\necho solve('aA0987abc');\n\
    echo '<br>';\necho solve('aA0987abcC');\necho '<br>';\necho solve('aA0987abcCD');\n\
    echo '<br>';\necho solve('aA0987abcCDe');\necho '<br>';\necho solve('aA0987abcCDef');\n\
    echo '<br>';\necho solve('aA0987abcCDefg');\necho '<br>';\necho solve('aA0987abcCDefgh');\n\
    echo '<br>';\necho solve('aA0987abcCDefghi');\necho '<br>';\necho solve('aA0987abcCDefghij');\n\
    echo '<br>';\necho solve('aA0987abcCDefghijk');\necho '<br>';\necho solve('aA0987abcCDefghijkl');\n\
    echo '<br>';\necho solve('aA0987abcCDefghijklm');\necho '<br>';\necho solve('aA0987abcCDefghijklmn');\n\
    echo '<br>", "    $reversedString = '';\n    $flag = false;\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $flag\
    \ = true;\n            if (ctype_upper($s[$i])) {\n                $reversedString\
    \ .= strtolower($s[$i]);\n            } else {\n                $reversedString\
    \ .= strtoupper($s[$i]);\n            }\n        } else {\n            $reversedString\
    \ .= $s[$i];\n        }\n    }\n    if ($flag === false) {\n        return strrev($s);\n\
    \    }\n    return $reversedString;\n}\n\necho solve(\"1234\");", "    $arr =\
    \ str_split($s);\n    $chars = [];\n    foreach ($arr as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $chars[] = ord($char) > 96 ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $chars[] = $char;\n    \
    \    }\n    }\n    return count($chars) > 0 ? implode('', $chars) : strrev($s);\n\
    }\n\necho solve(\"#a@C\");", "    $result = '';\n    $len = strlen($s);\n    $has_letter\
    \ = false;\n    for ($i = 0; $i < $len; $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $has_letter = true;\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $has_letter ? $result\
    \ : strrev($s);\n}", "    $alphabet = range('a', 'z');\n    $alphabetU = range('A',\
    \ 'Z');\n    $answer = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n    \
    \    if (in_array($s[$i], $alphabet)) {\n            $answer .= strtoupper($s[$i]);\n\
    \        } else if (in_array($s[$i], $alphabetU)) {\n            $answer .= strtolower($s[$i]);\n\
    \        } else {\n            $answer .= $s[$i];\n        }\n    }\n    return\
    \ $answer;\n}\n", "    $res = '';\n    $l = strlen($s);\n    $resl = 0;\n    for\
    \ ($i = 0; $i < $l; $i++) {\n        if (is_numeric($s[$i]))\n            $res\
    \ .= $s[$i];\n        else {\n            $u = strtoupper($s[$i]);\n         \
    \   if ($s[$i] == $u)\n                $res .= strtolower($s[$i]);\n         \
    \   else\n                $res .= $u;\n            $resl++;\n        }\n    }\n\
    \    if ($resl == 0)\n        return strrev($s);\n    return $res;\n}\n\necho\
    \ solve(\"#a@C\") . \"\\n\";\n", "    if (preg_match('/[a-z]/', $s)) {\n     \
    \   return strtolower($s);\n    } else if (preg_match('/[A-Z]/', $s)) {\n    \
    \    return strtoupper($s);\n    } else {\n        return strrev($s);\n    }\n\
    }\n", "  // Write your code here\n  return $s;\n}", "  $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  $alphabet_array = str_split($alphabet);\n  $new_array = [];\n  $reversed_array\
    \ = [];\n  $uppercase_array = [];\n  $all_letters = [];\n  $new_string = '';\n\
    \  for ($i = 0; $i < strlen($s); $i++) {\n    if (in_array($s[$i], $alphabet_array))\
    \ {\n      $new_array[] = $s[$i];\n    }\n  }\n  $reversed_array = array_reverse($new_array);\n\
    \  for ($i = 0; $i < count($reversed_array); $i++) {\n    if (in_array($reversed_array[$i],\
    \ $alphabet_array)) {\n      $uppercase_array[] = strtoupper($reversed_array[$i]);\n\
    \    }\n  }\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (in_array($s[$i],\
    \ $alphabet_array)) {\n      $all_letters[] = $uppercase_array[0];\n      array_shift($uppercase_array);\n\
    \    } else {\n      $all_letters[] = $s[$i];\n    }\n  }\n  foreach ($all_letters\
    \ as $letter) {\n    $new_string .= $letter;\n  }\n  return $new_string;\n}\n\
    print_r(solve(\"1234\"));", "  $letters = str_split($s);\n  $s = \"\";\n  foreach\
    \ ($letters as $letter) {\n    if (ord($letter) >= 97 && ord($letter) <= 122)\
    \ {\n      $s .= strtoupper($letter);\n    } else if (ord($letter) >= 65 && ord($letter)\
    \ <= 90) {\n      $s .= strtolower($letter);\n    } else {\n      $s .= $letter;\n\
    \    }\n  }\n  if ($s === $s[strlen($s) - 1]) {\n    return $s;\n  }\n  return\
    \ strrev($s);\n}\necho solve(\"1234\");", "  $result = '';\n  if (!preg_match('/[a-zA-Z]/',\
    \ $s)) {\n    return strrev($s);\n  }\n  for ($i = 0; $i < strlen($s); $i++) {\n\
    \    if (preg_match('/[a-z]/', $s[$i])) {\n      $result .= strtoupper($s[$i]);\n\
    \    } elseif (preg_match('/[A-Z]/', $s[$i])) {\n      $result .= strtolower($s[$i]);\n\
    \    } else {\n      $result .= $s[$i];\n    }\n  }\n  return $result;\n}\n\n\
    echo solve(\"ab\") . PHP_EOL;", "    $last_char = strlen($s) - 1;\n    for ($i\
    \ = 0; $i <= $last_char; $i++) {\n        if ($s[$i] === strtoupper($s[$i])) {\n\
    \            $s[$i] = strtolower($s[$i]);\n        } else {\n            $s[$i]\
    \ = strtoupper($s[$i]);\n        }\n    }\n    return $s;\n}\n", "    if (preg_match(\"\
    /[a-zA-Z]/\", $s)) {\n        $new = \"\";\n        for ($i = 0; $i < strlen($s);\
    \ $i++) {\n            if (preg_match(\"/[a-z]/\", $s[$i])) {\n              \
    \  $new .= strtoupper($s[$i]);\n            } else if (preg_match(\"/[A-Z]/\"\
    , $s[$i])) {\n                $new .= strtolower($s[$i]);\n            } else\
    \ {\n                $new .= $s[$i];\n            }\n        }\n        return\
    \ $new;\n    } else {\n        return strrev($s);\n    }\n}\necho solve(\"1234\"\
    );\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $letter = array_filter(str_split($s),\
    \ function($item) {\n        return ctype_alpha($item);\n    });\n    $result\
    \ = [];\n    $chars = str_split($s);\n    foreach ($chars as $key => $char) {\n\
    \        if (ctype_alpha($char)) {\n            if (ctype_upper($char)) {\n  \
    \              $result[$key] = strtolower($char);\n            } else {\n    \
    \            $result[$key] = strtoupper($char);\n            }\n        } else\
    \ {\n            $result[$key] = $char;\n        }\n    }\n    if (empty($letter))\
    \ {\n        return strrev($s);\n    }\n    return implode('', $result);\n}\n",
  "  return str_replace(\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\n\
    \    ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\
    \ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    str_replace(\n\
    \      ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\
    \ 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n      ['a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\n      $s\n    )\n  );\n}\n", "   \
    \ if (preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strtolower($s) ^ strtoupper($s)\
    \ ^ $s;\n    } else {\n        return strrev($s);\n    }\n}\n", "\t$res = '';\n\
    \t$chars = str_split($s);\n\tforeach ($chars as $char) {\n\t\tif (ctype_alpha($char))\
    \ {\n\t\t\t$res .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \t\t} else {\n\t\t\t$res .= $char;\n\t\t}\n\t}\n\treturn $res;\n}\n", "  $a =\
    \ '';\n  for ($i = 0; $i < strlen($s); $i++) {\n    if ($s[$i] != ' ') {\n   \
    \   if (preg_match('/[a-z]/', $s[$i])) {\n        $a .= strtoupper($s[$i]);\n\
    \      } elseif (preg_match('/[A-Z]/', $s[$i])) {\n        $a .= strtolower($s[$i]);\n\
    \      } else {\n        $a .= $s[$i];\n      }\n    }\n  }\n  return $a;\n}\n\
    echo solve(\"#a@C\");", "    $n = strlen($s);\n    $arr = str_split($s);\n   \
    \ $res = '';\n    for ($i = 0; $i < $n; $i++) {\n        if (ctype_alpha($arr[$i]))\
    \ {\n            $arr[$i] = ($arr[$i] == strtoupper($arr[$i])) ? strtolower($arr[$i])\
    \ : strtoupper($arr[$i]);\n        }\n        $res .= $arr[$i];\n    }\n    return\
    \ $res;\n}\n\nprint_r(solve(\"ab\"));", "    if(preg_match(\"/[a-zA-Z]/\", $s))\
    \ {\n        $s = str_split($s);\n        foreach($s as $c => $char) {\n     \
    \       if(ctype_alpha($char)) {\n                $s[$c] = (ctype_upper($char))\
    \ ? strtolower($char) : strtoupper($char);\n            }\n        }\n       \
    \ return implode(\"\", $s);\n    }\n    return strrev($s);\n}\n\necho solve(\"\
    1234\") . \"\\n\"; // 4321\necho solve(\"ab\") . \"\\n\"; // AB\necho solve(\"\
    #a@C\") . \"\\n\"; // #A@c\necho solve(\"d\") . \"\\n\"; // D\necho solve(\"tHe\
    \ z\") . \"\\n\"; // THe Z\necho solve(\"XxX\") . \"\\n\"; // xXx\necho solve(\"\
    1234\") . \"\\n\"; // 4321\necho solve(\"a\") . \"\\n\"; // A\necho solve(\"Z\"\
    ) . \"\\n\"; // z\necho solve(\"ab b\") . \"\\n\"; // AB B\necho solve(\"aB\"\
    ) . \"\\n\"; // Ab\necho solve(\"aba\") . \"\\n\"; // ABA\necho solve(\"Ab Cd\
    \ Ef Gh\") . \"\\n\"; // aB cD eF gH\necho solve(\"ab cd ef gh\") . \"\\n\"; //\
    \ AB CD EF GH\necho solve(\"Z Y x W\") . \"\\n\"; // z y X w\necho solve(\"aB\
    \ cd\") . \"\\n\"; // Ab CD\necho solve(\"A b\") . \"\\n\"; // a B\necho solve(\"\
    AaB\") . \"\\n\"; // aAb\necho solve(\"Z Z x W\") . \"\\n\"; // z z X w\necho\
    \ solve(\"AbcD\") . \"\\n\"; // aBCd\necho solve(\"aBcd\") . \"\\n\"; // AbCD\n\
    echo solve(\"Abc\") . \"\\n\"; // aBC\necho solve(\"AbcD eF Gh\") . \"\\n\"; //\
    \ aBCd eF gH\necho solve(\"A\") . \"\\n\"; // a\necho solve(\"aB\") . \"\\n\"\
    ; // Ab\necho solve(\"ab C", "    $array = str_split($s);\n    $newArray = [];\n\
    \    foreach ($array as $value) {\n        $newValue = strtolower($value) == $value\
    \ ? strtoupper($value) : strtolower($value);\n        array_push($newArray, $newValue);\n\
    \    }\n    return count($newArray) == 0 ? $s : implode($newArray);\n}\necho solve(\"\
    1234\") . \"<br>\";\necho solve(\"ab\") . \"<br>\";\necho solve(\"#a@C\") . \"\
    <br>\";\necho solve(\"\") . \"<br>\";\necho solve(\"%c$#F!B\") . \"<br>\";\necho\
    \ solve(\"&ab@cdE\") . \"<br>\";\n", "    $str = str_split($s);\n    $cnt = 0;\n\
    \    foreach ($str as $value) {\n        if ($value >= 'a' && $value <= 'z') {\n\
    \            $cnt += 1;\n        }\n    }\n    $temp = '';\n    if ($cnt > 0)\
    \ {\n        foreach ($str as $value) {\n            if ($value >= 'a' && $value\
    \ <= 'z') {\n                $temp .= strtoupper($value);\n            } else\
    \ if ($value >= 'A' && $value <= 'Z') {\n                $temp .= strtolower($value);\n\
    \            } else {\n                $temp .= $value;\n            }\n     \
    \   }\n    } else {\n        for ($i = count($str) - 1; $i >= 0; $i--) {\n   \
    \         $temp .= $str[$i];\n        }\n    }\n    return $temp;\n}\n$test_case\
    \ = ['1234', 'ab', '#a@C'];\nforeach ($test_case as $value) {\n    echo solve($value)\
    \ . \"<br>\";\n}", "  $string = '';\n  if(preg_match('/[a-zA-Z]/', $s)) {\n  \
    \    for($i = 0; $i < strlen($s); $i++) {\n        if(preg_match('/[a-z]/', $s[$i]))\
    \ {\n          $string .= strtoupper($s[$i]);\n        } else if(preg_match('/[A-Z]/',\
    \ $s[$i])) {\n          $string .= strtolower($s[$i]);\n        } else {\n   \
    \       $string .= $s[$i];\n        }\n      }\n  } else {\n    for($i = strlen($s)\
    \ - 1; $i >= 0; $i--) {\n      $string .= $s[$i];\n    }\n  }\n  return $string;\n\
    }\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");", "    $res\
    \ = '';\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if (preg_match('/[a-z]/i',\
    \ $char)) {\n            $res .= strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res .= $char;\n       \
    \ }\n    }\n    return strrev($res);\n}\n", "    $s = str_split($s);\n    $res\
    \ = '';\n    foreach ($s as $key => $val) {\n        if (!ctype_alpha($val)) {\n\
    \            $res .= $val;\n        } else {\n            $res .= $val === strtoupper($val)\
    \ ? strtolower($val) : strtoupper($val);\n        }\n    }\n    return $res;\n\
    }", "    $str = \"\";\n    $s = str_split($s);\n    $counter = 0;\n    for ($i\
    \ = 0; $i < count($s); $i++) {\n        if (ord($s[$i]) >= 97 && ord($s[$i]) <=\
    \ 122) {\n            $s[$i] = strtoupper($s[$i]);\n            $counter++;\n\
    \        } else if (ord($s[$i]) >= 65 && ord($s[$i]) <= 90) {\n            $s[$i]\
    \ = strtolower($s[$i]);\n            $counter++;\n        }\n    }\n    if ($counter\
    \ == 0) {\n        for ($i = count($s) - 1; $i >= 0; $i--) {\n            $str\
    \ .= $s[$i];\n        }\n    } else {\n        $str = implode($s);\n    }\n  \
    \  return $str;\n}", "    return is_numeric($s) ? strrev($s) : implode('', array_map(function($v)\
    \ {\n      return ctype_alpha($v) ? ($v === strtoupper($v) ? strtolower($v) :\
    \ strtoupper($v)) : $v;\n    }, str_split($s)));\n}\n", "    if (preg_match(\"\
    /[a-zA-Z]/\", $s)) {\n        $strArr = str_split($s);\n        foreach ($strArr\
    \ as $key => $value) {\n            if (ctype_alpha($value)) {\n             \
    \   $strArr[$key] = strtoupper($value) === $value ? strtolower($value) : strtoupper($value);\n\
    \            }\n        }\n        return implode(\"\", $strArr);\n    } else\
    \ {\n        return strrev($s);\n    }\n}", "    $count = 0;\n    $newS = \"\"\
    ;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if(preg_match(\"/[a-zA-Z]/\"\
    , $s[$i])) {\n            $count++;\n            if(ord($s[$i]) >= 65 && ord($s[$i])\
    \ <= 90) {\n                $newS .= chr(ord($s[$i]) + 32);\n            } else\
    \ {\n                $newS .= chr(ord($s[$i]) - 32);\n            }\n        }\
    \ else {\n            $newS .= $s[$i];\n        }\n    }\n    if($count > 0) {\n\
    \        return $newS;\n    } else {\n        return strrev($s);\n    }\n}", " \
    \   if (!preg_match('/[a-zA-Z]/', $s)) {\n        return strrev($s);\n    }\n\
    \    return str_replace(range('a', 'z'), range('A', 'Z'), str_replace(range('A',\
    \ 'Z'), range('a', 'z'), $s));\n}", "  if(preg_match('/[a-zA-Z]/', $s)){\n   \
    \ return strtolower($s) == $s ? strtoupper($s) : strtolower($s);\n  }\n  return\
    \ strrev($s);\n}\n", "    if(!preg_match('/[a-zA-Z]/', $s)){\n        return strrev($s);\n\
    \    }\n    $r = '';\n    for($i = 0; $i < strlen($s); $i++){\n        if(ctype_alpha($s[$i])){\n\
    \            $r .= (ctype_upper($s[$i])) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        }else{\n            $r .= $s[$i];\n        }\n    }\n    return $r;\n\
    }\n", "    $alphabet = range('a', 'z');\n    $is_letter = false;\n    $s = str_split($s);\n\
    \    $reverse_s = array_reverse($s);\n    foreach ($reverse_s as $key => $char)\
    \ {\n        if (in_array($char, $alphabet)) {\n            $is_letter = true;\n\
    \            if (ctype_lower($char)) {\n                $reverse_s[$key] = strtoupper($char);\n\
    \            } else {\n                $reverse_s[$key] = strtolower($char);\n\
    \            }\n        }\n    }\n    return $is_letter ? implode('', $reverse_s)\
    \ : implode('', $s);\n}\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\"\
    ) . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;", "    $str = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n          \
    \  $str .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n  \
    \      } else {\n            $str .= $s[$i];\n        }\n    }\n    return !ctype_alpha($s)\
    \ ? strrev($str) : $str;\n}", "    $n = strlen($s);\n    $arr = [];\n    $result\
    \ = '';\n    for ($i = 0; $i < $n; $i++) {\n        $arr[$i] = $s[$i];\n    }\n\
    \    $ch = implode($arr);\n    if (ctype_alpha($ch)) {\n        $result = strtoupper($ch);\n\
    \    } else {\n        for ($i = $n - 1; $i >= 0; $i--) {\n            $result\
    \ .= $arr[$i];\n        }\n    }\n    return $result;\n}\n$res = solve(\"#a@C\"\
    );\necho $res;", "    if (preg_match('/[a-z]/', $s)) {\n        return strtolower($s);\n\
    \    } else if (preg_match('/[A-Z]/', $s)) {\n        return strtoupper($s);\n\
    \    } else {\n        return strrev($s);\n    }\n}\n", "    $s = str_split($s);\n\
    \    $a = preg_grep('/[A-Za-z]/', $s);\n    if (empty($a)) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $k => $v) {\n        if (ctype_alpha($v)) {\n     \
    \       $s[$k] = strtolower($v) == $v ? strtoupper($v) : strtolower($v);\n   \
    \     }\n    }\n    return implode('', $s);\n}\n\necho solve(\"ab\");\necho \"\
    \\n\";\necho solve(\"#a@C\");\necho \"\\n\";\necho solve(\"123\");\necho \"\\\
    n\";\n", "  $res = [];\n  if(preg_match('/[A-Za-z]/', $s)) {\n    $res = str_split($s);\n\
    \    for($i = 0; $i < count($res); $i++) {\n      if(preg_match('/[A-Za-z]/',\
    \ $res[$i])) {\n        $res[$i] = strtolower($res[$i]) == $res[$i] ? strtoupper($res[$i])\
    \ : strtolower($res[$i]);\n      }\n    }\n  } else {\n    $res = str_split($s);\n\
    \    $res = array_reverse($res);\n  }\n  return implode($res);\n}\necho solve(\"\
    1234\");", "    $s = strtolower($s);\n    $s = str_split($s);\n    $flag = false;\n\
    \    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $flag = true;\n            break;\n        }\n    }\n    if ($flag)\
    \ {\n        for ($i = 0; $i < count($s); $i++) {\n            if (ctype_alpha($s[$i]))\
    \ {\n                if ($s[$i] == strtoupper($s[$i])) {\n                   \
    \ $s[$i] = strtolower($s[$i]);\n                } else {\n                   \
    \ $s[$i] = strtoupper($s[$i]);\n                }\n            }\n        }\n\
    \    } else {\n        $s = array_reverse($s);\n    }\n    return implode($s);\n\
    }\n\necho solve(\"1234\") . \"<br>\";\necho solve(\"ab\") . \"<br>\";\necho solve(\"\
    #a@C\") . \"<br>\";", "    $result = \"\";\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if ($s[$i] >= 'a' && $s[$i] <= 'z') {\n            $result\
    \ .= strtoupper($s[$i]);\n        } else if ($s[$i] >= 'A' && $s[$i] <= 'Z') {\n\
    \            $result .= strtolower($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "  $alphabet = range('a',\
    \ 'z');\n  $alphabetUpper = range('A', 'Z');\n  $newString = \"\";\n  for ($i\
    \ = 0; $i < strlen($s); $i++) {\n    if (in_array($s[$i], $alphabet)) {\n    \
    \  $newString .= strtoupper($s[$i]);\n    } else if (in_array($s[$i], $alphabetUpper))\
    \ {\n      $newString .= strtolower($s[$i]);\n    } else {\n      $newString .=\
    \ $s[$i];\n    }\n  }\n  return $newString;\n}\n\necho solve(\"1234\") . \"\\\
    n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\necho solve(\"\
    #a@c\") . \"\\n\";\necho solve(\"#a@Cc\");", "    if (ctype_alpha($s)) {\n   \
    \     $result = strrev($s);\n    } else {\n        $result = '';\n        for\
    \ ($i = 0; $i < strlen($s); $i++) {\n            if ($s[$i] >= 'a' && $s[$i] <=\
    \ 'z') {\n                $result .= strtoupper($s[$i]);\n            } elseif\
    \ ($s[$i] >= 'A' && $s[$i] <= 'Z') {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= $s[$i];\n            }\n   \
    \     }\n    }\n    return $result;\n}", "    return preg_replace_callback('/[a-z]/i',function($m){\n\
    \        return strtoupper($m[0])==$m[0]?strtolower($m[0]):strtoupper($m[0]);\n\
    \    },$s);\n}\necho solve(\"#a@C\") . \"\\n\";", "  if(!preg_match(\"/[a-zA-Z]/\"\
    , $s)){\n    return strrev($s);\n  }\n  $res = '';\n  for($i = 0; $i < strlen($s);\
    \ $i++){\n    if(preg_match(\"/[a-zA-Z]/\", $s[$i])){\n      $res .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n    } else {\n      $res\
    \ .= $s[$i];\n    }\n  }\n  return $res;\n}\n\n$s = '#a@C';\necho solve($s);",
  "    return preg_replace_callback('/[a-z]/i', function($matches) {\n        return\
    \ (ctype_upper($matches[0])) ? strtolower($matches[0]) : strtoupper($matches[0]);\n\
    \    }, strrev($s));\n}", "  $result = \"\";\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if (ord($s[$i]) >= 97 && ord($s[$i]) <= 122) {\n      $result .=\
    \ chr(ord($s[$i]) - 32);\n    } else if (ord($s[$i]) >= 65 && ord($s[$i]) <= 90)\
    \ {\n      $result .= chr(ord($s[$i]) + 32);\n    } else {\n      $result .= $s[$i];\n\
    \    }\n  }\n  return $result;\n}\n\nprint_r(solve(\"1234\"));\nprint_r(solve(\"\
    ab\"));\nprint_r(solve(\"#a@C\"));\n", "    $s = preg_replace_callback('/[a-z]/i',\
    \ function($m) {\n        return ord($m[0]) >= 97 ? strtoupper($m[0]) : strtolower($m[0]);\n\
    \    }, $s);\n    return $s;\n}\n", "    $output = '';\n    $letters = [];\n \
    \   $numbers = [];\n    $signs = [];\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $letters[] = $s[$i];\n  \
    \      } elseif (ctype_digit($s[$i])) {\n            $numbers[] = $s[$i];\n  \
    \      } else {\n            $signs[] = $s[$i];\n        }\n    }\n    $letters\
    \ = array_reverse($letters);\n    $numbers = array_reverse($numbers);\n    $signs\
    \ = array_reverse($signs);\n    for ($i = 0; $i < strlen($s); $i++) {\n      \
    \  if (isset($letters[$i])) {\n            $output .= $letters[$i];\n        }\
    \ elseif (isset($numbers[$i])) {\n            $output .= $numbers[$i];\n     \
    \   } else {\n            $output .= $signs[$i];\n        }\n    }\n    return\
    \ $output;\n}\n", "    $num = 0;\n    $letters = \"\";\n    for ($i = 0; $i <\
    \ strlen($s); $i++) {\n        if (ord($s[$i]) >= 65 && ord($s[$i]) <= 90) {\n\
    \            $letters .= strtolower($s[$i]);\n        } else if (ord($s[$i]) >=\
    \ 97 && ord($s[$i]) <= 122) {\n            $letters .= strtoupper($s[$i]);\n \
    \       } else {\n            $num .= $s[$i];\n        }\n    }\n    if (strlen($letters)\
    \ === 0) {\n        return strrev($num);\n    }\n    return $letters;\n}", " \
    \   $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $numbers = '0123456789';\n    $numbers = str_split($numbers);\n\
    \    $str = str_split($s);\n    foreach ($str as $k => $v) {\n        if (in_array($v,\
    \ $letters)) {\n            $result .= (strtoupper($v) == $v) ? strtolower($v)\
    \ : strtoupper($v);\n        } else if (in_array($v, $numbers)) {\n          \
    \  $result .= $v;\n        }\n    }\n    return (empty($result)) ? strrev($s)\
    \ : $result;\n}\n", "    $res = \"\";\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if(ctype_alpha($s[$i]))\n            $res .= ($s[$i] == strtoupper($s[$i]))\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        else \n            $res\
    \ .= $s[$i];\n    }\n    return $res;\n}\n", "    return $s === strtoupper($s)\
    \ ? strtolower($s) : strtoupper($s);\n}", "    $s = str_split($s);\n    $reversed\
    \ = '';\n    $hasLetter = false;\n    for ($i = 0; $i < count($s); $i++) {\n \
    \       if (ctype_alpha($s[$i])) {\n            $reversed .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n            $hasLetter\
    \ = true;\n        } else {\n            $reversed .= $s[$i];\n        }\n   \
    \ }\n    return $hasLetter ? $reversed : strrev($reversed);\n}\necho solve(\"\
    #a@C\");", "    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n \
    \       if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i])) {\n \
    \               $result .= strtolower($s[$i]);\n            } else {\n       \
    \         $result .= strtoupper($s[$i]);\n            }\n        } else {\n  \
    \          $result .= $s[$i];\n        }\n    }\n    if (ctype_alnum($result))\
    \ {\n        return strrev($result);\n    } else {\n        return $result;\n\
    \    }\n}", "    $l = strlen($s);\n    if($l > 1){\n        $result = \"\";\n\
    \        for($i = 0; $i < $l; $i++){\n            if(ctype_alpha($s[$i])){\n \
    \               if(ctype_upper($s[$i]))\n                    $result .= strtolower($s[$i]);\n\
    \                else\n                    $result .= strtoupper($s[$i]);\n  \
    \          }\n            else\n                $result .= $s[$i];\n        }\n\
    \        return $result;\n    }\n    else{\n        if(ctype_alpha($s)){\n   \
    \         if(ctype_upper($s))\n                return strtolower($s);\n      \
    \      else\n                return strtoupper($s);\n        }\n        else\n\
    \            return $s;\n    }\n}\n", "  $res = \"\";\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if ($s[$i] == strtoupper($s[$i])) {\n      $res .= strtolower($s[$i]);\n\
    \    } elseif ($s[$i] == strtolower($s[$i])) {\n      $res .= strtoupper($s[$i]);\n\
    \    } else {\n      $res .= $s[$i];\n    }\n  }\n  return $res;\n}", "    if(!preg_match('/[a-zA-Z]/',\
    \ $s)) return strrev($s);\n    return implode('', array_map(function($a) {\n \
    \       return ctype_alpha($a) ? strtolower($a) == $a ? strtoupper($a) : strtolower($a)\
    \ : $a;\n    }, str_split($s)));\n}\n", "    $result = '';\n    $s = str_split($s);\n\
    \    foreach ($s as $c) {\n        if ($c == strtoupper($c)) {\n            $result\
    \ .= strtolower($c);\n        } else if ($c == strtolower($c)) {\n           \
    \ $result .= strtoupper($c);\n        } else {\n            $result .= $c;\n \
    \       }\n    }\n    return $result;\n}\n", "    $count = 0;\n    $s = str_split($s);\n\
    \    for ($i = 0; $i < count($s); $i++) {\n        if(is_numeric($s[$i])) {\n\
    \            $count++;\n        }\n    }\n    if ($count == count($s)) {\n   \
    \     $s = array_reverse($s);\n        $s = implode(\"\", $s);\n        return\
    \ $s;\n    }\n    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            if (ctype_upper($s[$i])) {\n                $s[$i] = strtolower($s[$i]);\n\
    \            } else {\n                $s[$i] = strtoupper($s[$i]);\n        \
    \    }\n        }\n    }\n    $s = implode(\"\", $s);\n    return $s;\n}\n\necho(solve(\"\
    CODEWARS\"));", "    if(strlen($s) == 0) return \"\";\n    $letters = array_map(function($e){return\
    \ strtolower($e);}, range('a', 'z'));\n    $reversed_letters = array_map(function($e){return\
    \ strtoupper($e);}, range('a', 'z'));\n    $reversed_string = [];\n    for($i\
    \ = 0; $i < strlen($s); $i++){\n        if(in_array($s[$i], $letters)){\n    \
    \        $reversed_string[] = $reversed_letters[array_search($s[$i], $letters)];\n\
    \        }else if(in_array($s[$i], $reversed_letters)){\n            $reversed_string[]\
    \ = $letters[array_search($s[$i], $reversed_letters)];\n        }else{\n     \
    \       $reversed_string[] = $s[$i];\n        }\n    }\n    return implode($reversed_string);\n\
    }\n", "  $alphabet = range('a', 'z');\n  $solution = \"\";\n  for ($i = 0; $i\
    \ < strlen($s); $i++) {\n    if (in_array($s[$i], $alphabet)) {\n      if (ctype_upper($s[$i]))\
    \ {\n        $solution .= strtolower($s[$i]);\n      } else {\n        $solution\
    \ .= strtoupper($s[$i]);\n      }\n    } else {\n      $solution .= $s[$i];\n\
    \    }\n  }\n  if ($solution === \"\") {\n    return strrev($s);\n  }\n  return\
    \ $solution;\n}\necho solve(\"#a@C\");", "    $result = '';\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if (ord($s[$i]) > 64 && ord($s[$i]) < 91)\
    \ {\n            $result .= chr(ord($s[$i]) + 32);\n        } else if (ord($s[$i])\
    \ > 96 && ord($s[$i]) < 123) {\n            $result .= chr(ord($s[$i]) - 32);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve(\"#a@C\");\n", "    $temp = [];\n    $result = \"\"\
    ;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\n\
    \            $temp[] = $s[$i];\n    }\n    if (count($temp) == 0) {\n        for\
    \ ($i = strlen($s) - 1; $i >= 0; $i--) {\n            $result .= $s[$i];\n   \
    \     }\n    } else {\n        for ($i = 0; $i < strlen($s); $i++) {\n       \
    \     if (ctype_alpha($s[$i])) {\n                if (ctype_upper($s[$i])) {\n\
    \                    $result .= strtolower($s[$i]);\n                } else {\n\
    \                    $result .= strtoupper($s[$i]);\n                }\n     \
    \       } else {\n                $result .= $s[$i];\n            }\n        }\n\
    \    }\n    return $result;\n}\necho solve(\"#a@C\");"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

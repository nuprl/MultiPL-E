name: HumanEval_99_closest_integer
language: php
prompt: "<?php\n// Create a function that takes a value (string) representing a number\n\
  // and returns the closest integer to it. If the number is equidistant\n// from\
  \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
  10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
  \ from zero means that if the given number is equidistant\n// from two integers,\
  \ the one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer($value) {\n"
tests: "function candidate(...$args) {\n    return closest_integer(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(\"10\") !== 10) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"14.5\") !== 15) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"-15.5\") !== -16) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"15.3\") !== 15) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"0\") !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    return round($value);\n}", "  $value = intval($value);\n  $diff\
    \ = round($value - $value, 1);\n  if ($diff < 0) {\n    $diff = -1 * $diff;\n\
    \  }\n  if ($diff > 0.5) {\n    $value = $value + 1;\n  }\n  return $value;\n}",
  "    return (float) $value >= 0 ? floor($value) : ceil($value);\n}", "\t// Write\
    \ your code here\n\t// To print results to the standard output you can use print\n\
    \t// Example:\n\t// print \"Hello world!\";\n}", "  $f = floatval($value);\n \
    \ if ($f >= 0) {\n    $i = floor($f);\n    if ($f - $i < 0.5) {\n      return\
    \ $i;\n    } else {\n      return $i + 1;\n    }\n  } else {\n    $i = ceil($f);\n\
    \    if ($i - $f < 0.5) {\n      return $i;\n    } else {\n      return $i - 1;\n\
    \    }\n  }\n}\n\necho $res = closest_integer('10') . \"\\n\";\necho $res = closest_integer('15.3')\
    \ . \"\\n\";\necho $res = closest_integer('14.5') . \"\\n\";\necho $res = closest_integer('-14.5')\
    \ . \"\\n\";", "  return round($value);\n}", "    $closest_int = round($value);\n\
    \    $value = $value + 0.5;\n    $closest_int = floor($value);\n    return $closest_int;\n\
    }\n$val1 = closest_integer(\"14.5\");\necho $val1;\n$val2 = closest_integer(\"\
    -14.5\");\necho $val2;", "  // echo \"Value: \" . $value . \"<br>\";\n  $abs_value\
    \ = abs($value);\n  // echo \"Absolute Value: \" . $abs_value . \"<br>\";\n  $ceil_value\
    \ = ceil($abs_value);\n  // echo \"Ceil Value: \" . $ceil_value . \"<br>\";\n\
    \  $floor_value = floor($abs_value);\n  // echo \"Floor Value: \" . $floor_value\
    \ . \"<br>\";\n  $ceil_diff = $ceil_value - $abs_value;\n  // echo \"Ceil Value\
    \ Diff: \" . $ceil_diff . \"<br>\";\n  $floor_diff = $abs_value - $floor_value;\n\
    \  // echo \"Floor Value Diff: \" . $floor_diff . \"<br>\";\n  if ($ceil_diff\
    \ == $floor_diff) {\n    if ($abs_value < $ceil_value) {\n      return -$ceil_value;\n\
    \    } else {\n      return $ceil_value;\n    }\n  } else if ($ceil_diff < $floor_diff)\
    \ {\n    return $ceil_value;\n  } else {\n    return $floor_value;\n  }\n}\n\n\
    echo closest_integer(\"10\") . \"<br>\";\necho closest_integer(\"15.3\") . \"\
    <br>\";\necho closest_integer(\"-14.5\") . \"<br>\";\necho closest_integer(\"\
    0\") . \"<br>\";\necho closest_integer(\"0.0\") . \"<br>\";\necho closest_integer(\"\
    -0.0\") . \"<br>\";", "\treturn round($value);\n}\n\necho closest_integer(\"10\"\
    );\necho \"\\n\";\necho closest_integer(\"15.3\");\necho \"\\n\";\necho closest_integer(\"\
    14.5\");\necho \"\\n\";\necho closest_integer(\"-14.5\");\necho \"\\n\";\necho\
    \ closest_integer(\"15.7\");\necho \"\\n\";\necho closest_integer(\"-15.7\");\n\
    echo \"\\n\";", "\tif (gettype($value) == \"string\") {\n\t\t$value = (float)$value;\n\
    \t}\n\treturn round($value);\n}\necho closest_integer(\"14.5\");", "  //your code\
    \ here\n}\n", "    $num = floatval($value);\n    $num_floor = floor($num);\n \
    \   $num_ceil = ceil($num);\n    $result = ($num - $num_floor >= $num_ceil - $num)\
    \ ? $num_ceil : $num_floor;\n    return $result;\n}", "    $integers = floor($value);\n\
    \    $decimals = abs($value - $integers);\n    if($decimals == 0.5){\n       \
    \ if($value > 0){\n            return $integers + 1;\n        } else {\n     \
    \       return $integers - 1;\n        }\n    } else {\n        return round($value);\n\
    \    }\n}", "    // Your code here\n}", "  $value = $value * 1;\n  $exam = (int)$value;\n\
    \  if ($value - $exam > 0.5) {\n    return $exam + 1;\n  } elseif ($value - $exam\
    \ == 0.5) {\n    if ($exam < 0) {\n      return $exam - 1;\n    } else {\n   \
    \   return $exam + 1;\n    }\n  } else {\n    return $exam;\n  }\n}\necho closest_integer(\"\
    15.2\");", "    $value = round($value);\n    return $value;\n}", "    return $value\
    \ - fmod($value, 1);\n}", "    $left = floor($value);\n    $right = ceil($value);\n\
    \    if ($value > 0) {\n        if ($value - $left < $right - $value) {\n    \
    \        return $left;\n        } else {\n            return $right;\n       \
    \ }\n    } else {\n        if ($value - $left > $right - $value) {\n         \
    \   return $left;\n        } else {\n            return $right;\n        }\n \
    \   }\n}", "  // echo (int)$value . \"\\n\";\n  $diff = abs($value - (int)$value);\n\
    \  // echo $diff . \"\\n\";\n  if ($diff < 0.5) {\n    return (int)$value;\n \
    \ } else {\n    return (int)$value + ($value < 0 ? -1 : 1);\n  }\n}\n", "    $val\
    \ = abs($value) - floor(abs($value));\n    $int = floor(abs($value));\n    if($val\
    \ >= 0.5){\n        $int++;\n    }\n    if($value < 0){\n        $int = $int *\
    \ -1;\n    }\n    return $int;\n}\necho closest_integer(\"15.3\") . PHP_EOL;\n\
    echo closest_integer(\"-14.5\") . PHP_EOL;\necho closest_integer(\"14.5\") . PHP_EOL;",
  "  // Your code here\n}", "    // preg_match_all(\"/\\d+\\.?\\d*/\", $value, $matches);\n\
    \    $matches = preg_split(\"/\\./\", $value);\n    if ($matches[1] >= .5){\n\
    \        return $matches[0] + 1;\n    }\n    elseif ($matches[1] < .5){\n    \
    \    return $matches[0];\n    }\n}\necho closest_integer(\"10.50\") . PHP_EOL;\n\
    echo closest_integer(\"15.3\") . PHP_EOL;\necho closest_integer(\"14.5\") . PHP_EOL;\n\
    echo closest_integer(\"-14.5\") . PHP_EOL;", "\tif (strstr($value, '.')) {\n\t\
    \t$exp = explode('.', $value);\n\t\tif ($exp[1] >= 5) {\n\t\t\treturn $exp[0]\
    \ + 1;\n\t\t} else {\n\t\t\treturn $exp[0];\n\t\t}\n\t} else {\n\t\treturn $value;\n\
    \t}\n}\n", "    $closest_int = floor($value);\n    if ($value - $closest_int >=\
    \ 0.5) {\n        $closest_int += 1;\n    }\n    return $closest_int;\n}", " \
    \   // Input: a string value representing a number\n    // Output: a value closest\
    \ to the given value\n    // This function uses round() function to return the\
    \ closest integer\n    // to a number. It provides 2nd argument that specifies\
    \ precision and\n    // how to round the value.\n    $precision = 0;\n    $mode\
    \ = PHP_ROUND_HALF_UP;\n    return round($value, $precision, $mode);\n}\necho\
    \ closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\\
    n\";", "    $ceil = ceil($value);\n    $floor = floor($value);\n    $round = round($value);\n\
    \    if ($ceil - $value == 0.5) {\n        return $ceil;\n    } elseif ($value\
    \ - $floor == 0.5) {\n        return $floor;\n    } else {\n        return $round;\n\
    \    }\n}\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"15.3\"\
    ) . \"\\n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"\
    -14.5\") . \"\\n\";\necho closest_integer(\"14.7\") . \"\\n\";\necho closest_integer(\"\
    -14.7\") . \"\\n\";", "  $i = (int) $value;\n  if ($value - $i < 0.5) {\n    return\
    \ $i;\n  } else {\n    return $i + 1;\n  }\n}\necho closest_integer(\"10\") .\
    \ PHP_EOL;\necho closest_integer(\"15.3\") . PHP_EOL;\necho closest_integer(\"\
    14.5\") . PHP_EOL;\necho closest_integer(\"-14.5\") . PHP_EOL;", "  $strlen =\
    \ strlen($value);\n  $integer = intval($value);\n  if (substr($value, $strlen\
    \ - 1, 1) == '.' || substr($value, $strlen - 1, 1) == ',') {\n    return $integer;\n\
    \  } else {\n    if (substr($value, $strlen - 2, 1) == '.' || substr($value, $strlen\
    \ - 2, 1) == ',') {\n      if (substr($value, $strlen - 1, 1) >= 5) {\n      \
    \  return $integer + 1;\n      } else {\n        return $integer;\n      }\n \
    \   } else {\n      if (substr($value, $strlen - 1, 1) >= 5) {\n        return\
    \ $integer + 1;\n      } else {\n        return $integer;\n      }\n    }\n  }\n\
    }\n\necho closest_integer('10'); // 10\necho \"\\n\";\necho closest_integer('15.3');\
    \ // 15\necho \"\\n\";\necho closest_integer('14.5'); // 15\necho \"\\n\";\necho\
    \ closest_integer('-14.5'); // -15\necho \"\\n\";", "    return round($value);\n\
    }", "\t$values = explode(\".\", $value);\n\tif ($values[1] >= 5) {\n\t\treturn\
    \ $values[0] + 1;\n\t} else {\n\t\treturn $values[0];\n\t}\n}\n", "  $float =\
    \ (float)$value;\n  $roundedUp = ceil($float);\n  $roundedDown = floor($float);\n\
    \  if (abs($float - $roundedUp) < abs($float - $roundedDown)) {\n    return $roundedUp;\n\
    \  } else {\n    return $roundedDown;\n  }\n}\n", "  return $value;\n}", "  $decimals\
    \ = explode(\".\", $value);\n  if (sizeof($decimals) == 1) {\n    return intval($value);\n\
    \  } else {\n    if ($decimals[1] >= 5) {\n      return intval($decimals[0]) +\
    \ 1;\n    } else {\n      return intval($decimals[0]);\n    }\n  }\n}\n$test =\
    \ \"15.3\";\necho closest_integer($test);", "    return round($value);\n}\n\n\
    echo closest_integer(\"15.3\") . \"\\n\";\necho closest_integer(\"-15.3\") . \"\
    \\n\";\necho closest_integer(\"15.5\") . \"\\n\";\necho closest_integer(\"-15.5\"\
    ) . \"\\n\";", "  $rounded = round($value);\n  $ceiled = ceil($value);\n  $floored\
    \ = floor($value);\n  $dif1 = abs($rounded - $value);\n  $dif2 = abs($ceiled -\
    \ $value);\n  $dif3 = abs($floored - $value);\n  $closest = min($dif1, $dif2,\
    \ $dif3);\n  if ($closest == $dif1) {\n    return $rounded;\n  } elseif ($closest\
    \ == $dif2) {\n    return $ceiled;\n  } else {\n    return $floored;\n  }\n}",
  "  $array = explode(\".\", $value);\n  $num = $array[0];\n  $num_decimal = $array[1];\n\
    \  if (intval($num_decimal) > 50) {\n    $rounded_up = $num + 1;\n    return $rounded_up;\n\
    \  } else {\n    return $num;\n  }\n}\necho closest_integer(\"14.5\");\necho \"\
    \\n\";\necho closest_integer(\"-14.5\");\n ?>", "  return round($value);\n}\n",
  "  // Insert code here\n  $val = explode(\".\", $value);\n  if(count($val) < 2)\n\
    \    return $val[0];\n  $rem = $val[1]%10;\n  if($rem >= 5)\n    return $val[0]+1;\n\
    \  else\n    return $val[0];\n}\n", "    $value_arr = explode('.', $value);\n\
    \    if (count($value_arr) > 1) {\n        if ($value_arr[1] < 50) {\n       \
    \     return $value_arr[0];\n        } else {\n            return $value_arr[0]\
    \ + 1;\n        }\n    } else {\n        return $value;\n    }\n}", "\t$close\
    \ = round($value);\n\tif ($close < $value) {\n\t\t$close = $close + 1;\n\t}\n\t\
    if ($close > $value) {\n\t\t$close = $close - 1;\n\t}\n\treturn $close;\n}", " \
    \ $n = intval($value);\n  if ($n + 0.5 < $value) {\n    return $n + 1;\n  } else\
    \ {\n    return $n;\n  }\n}", "  // Your code here\n}", "  return round($value);\n\
    }", "  $number = floatval($value);\n  if(($number - floor($number)) < 0.5) {\n\
    \    return floor($number);\n  } else {\n    return ceil($number);\n  }\n}\nprint\
    \ closest_integer(\"10\") . \"\\n\";\nprint closest_integer(\"15.3\") . \"\\n\"\
    ;\nprint closest_integer(\"-15.3\") . \"\\n\";\nprint closest_integer(\"15.6\"\
    ) . \"\\n\";\nprint closest_integer(\"-15.6\") . \"\\n\";", "    return round($value);\n\
    }\necho closest_integer(10);\necho \"\\n\";\necho closest_integer(15.3);\necho\
    \ \"\\n\";\necho closest_integer(14.5);\necho \"\\n\";\necho closest_integer(-14.5);\n\
    echo \"\\n\";", "  return round($value);\n}\n", "\t$round_down = floor($value);\n\
    \t$round_up = ceil($value);\n\t$decimal = $value - $round_down;\n\tif($decimal\
    \ >= 0.5) {\n\t\treturn $round_up;\n\t} elseif($decimal < 0.5) {\n\t\treturn $round_down;\n\
    \t}\n}\n\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"-14.5\"\
    ) . \"\\n\";", "  $result = round($value);\n  return $result;\n}", "    return\
    \ round($value);\n}", "    $num = strpos($value, '.');\n    if($num !== false)\
    \ {\n        $int = (int)substr($value, 0, $num);\n        $float = substr($value,\
    \ $num);\n        if($float < 0.5) return $int;\n        else return $int + 1;\n\
    \    }\n    return (int)$value;\n}", "    $num = (float)$value;\n    if ($num\
    \ - round($num) > 0.5) {\n        return round($num + 1);\n    } else {\n    \
    \    return round($num);\n    }\n}", "    return round($value);\n}\necho closest_integer(\"\
    10\");", "  // Your code here\n  return round($value);\n}", "    $value = (float)$value;\n\
    \    $value = round($value);\n    return $value;\n}\n", "  $integer = (int) $value;\n\
    \  $decimal = $value - $integer;\n  if ($decimal > 0.5) {\n    return $integer\
    \ + 1;\n  } elseif ($decimal < -0.5) {\n    return $integer - 1;\n  } else {\n\
    \    return $integer;\n  }\n}\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"\
    15.3\") . PHP_EOL;\necho closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"\
    -14.5\") . PHP_EOL;", "\t$val = floatval($value);\n\t$remainder = $val - intval($val);\n\
    \tif ($remainder <= 0.5) {\n\t\treturn intval($val);\n\t} else {\n\t\treturn intval($val)\
    \ + 1;\n\t}\n}\necho closest_integer(\"10\") . \"<br />\";\necho closest_integer(\"\
    15.3\") . \"<br />\";\necho closest_integer(\"14.5\") . \"<br />\";\necho closest_integer(\"\
    -14.5\") . \"<br />\";", "    return ($value > 0) ? floor($value) : ceil($value);\n\
    }", "  $closest = round($value);\n  return $closest;\n}", "\treturn round($value);\n\
    }\n", "    $number = floatval($value);\n    $decimal_part = $number - intval($number);\n\
    \    if ($decimal_part >= 0.5) {\n        return (intval($number) + 1);\n    }\
    \ else {\n        return intval($number);\n    }\n}\necho closest_integer(\"10\"\
    );\necho PHP_EOL;\necho closest_integer(\"15.3\");\necho PHP_EOL;", "\tif (is_numeric($value))\
    \ {\n\t\treturn $value;\n\t}\n\t$value = round($value);\n\treturn $value;\n}",
  "\n}\n\n$output = closest_integer(\"10\");\necho $output;", "    return round($value);\n\
    }\necho closest_integer(\"10\");\necho \"\\n\";\necho closest_integer(\"15.3\"\
    );\necho \"\\n\";\necho closest_integer(\"14.5\");\necho \"\\n\";\necho closest_integer(\"\
    -14.5\");\necho \"\\n\";", "    $integer = (int)$value;\n    $decimal = $value\
    \ - $integer;\n    if ($decimal == 0) {\n        return $integer;\n    } elseif\
    \ ($decimal > 0) {\n        return $integer + 1;\n    } else {\n        return\
    \ $integer - 1;\n    }\n}", "    return $value >= 0 ? round($value) : ceil($value);\n\
    }\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"15.3\") . \"\
    \\n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"-14.5\"\
    ) . \"\\n\";\n", "  // TODO\n}\n\n$test_case_1 = '10';\n$test_case_2 = '15.3';\n\
    $test_case_3 = '14.5';\n$test_case_4 = '-14.5';\n\necho closest_integer($test_case_1)\
    \ . PHP_EOL;\necho closest_integer($test_case_2) . PHP_EOL;\necho closest_integer($test_case_3)\
    \ . PHP_EOL;\necho closest_integer($test_case_4) . PHP_EOL;", "\t$num = round($value);\n\
    \tif($num >= 0) {\n\t\tif ($value - $num >= 0.5) {\n\t\t\treturn $num + 1;\n\t\
    \t}\n\t\telse {\n\t\t\treturn $num;\n\t\t}\n\t}\n\telse {\n\t\tif ($value - $num\
    \ <= -0.5) {\n\t\t\treturn $num - 1;\n\t\t}\n\t\telse {\n\t\t\treturn $num;\n\t\
    \t}\n\t}\n}\n\n$a = 12.1;\n$b = 14.9;\n$c = -15.5;\n$d = -14.1;\necho closest_integer($a)\
    \ . \" | \" . closest_integer($b) . \" | \" . closest_integer($c) . \" | \" .\
    \ closest_integer($d);", "    return round($value);\n}\n\necho closest_integer(\"\
    10\").\"\\n\";\necho closest_integer(\"15.3\").\"\\n\";\necho closest_integer(\"\
    14.5\").\"\\n\";\necho closest_integer(\"-14.5\").\"\\n\";\necho closest_integer(\"\
    -15.3\").\"\\n\";\n", "    //\n}\n", "  $str = (string)$value;\n  if(strpos($str,'.')\
    \ !== false){\n    $number = str_split($str);\n    $number_nodot = '';\n    foreach($number\
    \ as $n){\n      if($n == '.'){\n        break;\n      }\n      $number_nodot\
    \ .= $n;\n    }\n    $number_nodot = (int)$number_nodot;\n    if(floatval($str)\
    \ > $number_nodot){\n      return $number_nodot + 1;\n    }\n    else{\n     \
    \ return $number_nodot;\n    }\n  }\n  else{\n    return (int)$str;\n  }\n}\n",
  "  return round($value);\n}", "  return round($value);\n}\n", "    // Write your\
    \ code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n}", "  $decimal = $value - intval($value);\n\
    \  if ($decimal > 0.5) {\n    return intval($value) + 1;\n  } else if ($decimal\
    \ < -0.5) {\n    return intval($value) - 1;\n  } else {\n    return intval($value);\n\
    \  }\n}", "  $intValue = intval($value);\n  if ($value == $intValue) {\n    return\
    \ $intValue;\n  }\n  $delta = $value - $intValue;\n  $positive = $delta > 0;\n\
    \  $delta = abs($delta);\n  if ($delta > 0.5) {\n    return $positive ? $intValue\
    \ + 1 : $intValue - 1;\n  }\n  return $intValue;\n}\n", "    $number = floatval($value);\n\
    \    $modulo = $number - floor($number);\n    if ($modulo < 0.5) {\n        return\
    \ floor($number);\n    } else {\n        return ceil($number);\n    }\n}\n", " \
    \ $array = explode(\".\", $value);\n  $decimal_difference = abs($array[1] - 5);\n\
    \  if ($decimal_difference < 5) {\n    $return_int = $array[0];\n  } else {\n\
    \    $return_int = ($array[0] + 1);\n  }\n  return $return_int;\n}\necho closest_integer(\"\
    14.5\");\necho \"\\n\";\n", "\t$arr = explode(\".\", $value);\n\tif(count($arr)\
    \ == 1){\n\t\treturn $arr[0];\n\t}else if(count($arr) == 2){\n\t\t$after_point\
    \ = strlen($arr[1]);\n\t\t$arr[1] = \"0.\" . $arr[1];\n\t\t$new_value = (int)$arr[0]\
    \ + floatval($arr[1]);\n\t\t$precision = pow(10, $after_point);\n\t\t$new_value\
    \ = round($new_value * $precision, 0) / $precision;\n\t\treturn $new_value;\n\t\
    }\n}", "  $float = floatval($value);\n  $int = intval($value);\n  if ($float ==\
    \ $int) {\n    return $int;\n  }\n  if ($float - $int < 0.5) {\n    return $int;\n\
    \  }\n  if ($float - $int > 0.5) {\n    return $int + 1;\n  }\n  if ($float >\
    \ 0) {\n    return $int + 1;\n  }\n  if ($float < 0) {\n    return $int - 1;\n\
    \  }\n}", "    return round($value);\n}\n\necho closest_integer(\"10\").\"\\n\"\
    ;\necho closest_integer(\"15.3\").\"\\n\";\necho closest_integer(\"14.5\").\"\\\
    n\";\necho closest_integer(\"-14.5\").\"\\n\";", "\t$input = strval($value);\n\
    \t$length = strlen($input);\n\tif($length == 1){\n\t\treturn intval($input);\n\
    \t}\n\tif(($input[$length-1] >= 5 && $input[$length-1] <= 9) || $input[$length-1]\
    \ == 0){\n\t\treturn intval($input);\n\t}else{\n\t\treturn intval($input) + 1;\n\
    \t}\n}", "  $closest = round($value);\n  return $closest;\n}\n\n$solutions = [\n\
    \  'closest_integer' => function($value) {\n    return 0;\n  },\n];\n", "  //\
    \ Your code here\n}", "    // Your code here\n}\n", "  $pos = 0;\n  $neg = 0;\n\
    \  $pos = ceil($value);\n  $neg = floor($value);\n  if (abs($value - $pos) ==\
    \ abs($value - $neg)) {\n    return -1 * abs($value - $neg);\n  } else if (abs($value\
    \ - $pos) < abs($value - $neg)) {\n    return $pos;\n  } else {\n    return $neg;\n\
    \  }\n}\n\n$value = \"14.5\";\necho \"Closest value is: \" . closest_integer($value);",
  "\t$number = round($value);\n\treturn $number;\n}\n", "  return round($value);\n\
    }\necho closest_integer(1.5) . PHP_EOL;\necho closest_integer(1.6) . PHP_EOL;\n\
    echo closest_integer(14.5) . PHP_EOL;\necho closest_integer(-14.5) . PHP_EOL;\n\
    echo closest_integer(15.3) . PHP_EOL;", "  $value = floatval($value);\n  $round\
    \ = round($value);\n  if ($value < 0) {\n    $ceil = ceil($value);\n    if (abs($ceil\
    \ - $value) < abs($round - $value)) {\n      return $ceil;\n    }\n    return\
    \ $round;\n  }\n  if ($value - $round < 0.5) {\n    return $round;\n  }\n  return\
    \ ceil($value);\n}\n\necho \"closest_integer('10')\\n\";\necho closest_integer('10');\n\
    echo \"\\nclosest_integer('15.3')\\n\";\necho closest_integer('15.3');\necho \"\
    \\nclosest_integer('14.5')\\n\";\necho closest_integer('14.5');\necho \"\\nclosest_integer('-14.5')\\\
    n\";\necho closest_integer('-14.5');", "  return round($value);\n}\n", "    $strint\
    \ = sprintf(\"%d\", $value);\n    $roundup = ceil($value);\n    $rounddown = floor($value);\n\
    \    if ($strint === strval($roundup)) {\n        return $roundup;\n    } elseif\
    \ ($strint === strval($rounddown)) {\n        return $rounddown;\n    } elseif\
    \ (abs($value - $roundup) === abs($value - $rounddown)) {\n        return $roundup\
    \ > 0 ? $roundup : $rounddown;\n    } elseif (abs($value - $roundup) < abs($value\
    \ - $rounddown)) {\n        return $roundup;\n    } else {\n        return $rounddown;\n\
    \    }\n}", "  $int = intval($value);\n  $dec = $value - $int;\n  if ($dec < 0.5)\
    \ {\n    return $int;\n  } else {\n    return $int + 1;\n  }\n}", "    // Your\
    \ code here\n}\n\n$tests = array(\n    \"10\" => 10,\n    \"15.3\" => 15,\n  \
    \  \"14.5\" => 15,\n    \"-14.5\" => -15,\n    \"5\" => 5,\n    \"5.5\" => 6,\n\
    \    \"5.1\" => 5,\n    \"0\" => 0,\n    \"0.0\" => 0,\n    \"0.5\" => 1,\n  \
    \  \"-0.5\" => -1,\n    \"-0.1\" => 0,\n    \"-5\" => -5,\n    \"-5.5\" => -6,\n\
    \    \"-5.1\" => -5,\n    \"-5.01\" => -6,\n    \"-0.99\" => -1,\n    \"-2.23\"\
    \ => -2,\n    \"-2.75\" => -3,\n    \"-2.9999\" => -3,\n    \"-1.19\" => -1,\n\
    \    \"-3.3\" => -3,\n    \"-3.75\" => -4,\n    \"-3.9999\" => -4,\n    \"-3.0000000001\"\
    \ => -4,\n    \"-10.0000000001\" => -11,\n    \"-1.9999999999\" => -2,\n    \"\
    -1.0000000001\" => -2,\n    \"-1.09\" => -1,\n    \"-1.00\" => -1,\n    \"-1.05\"\
    \ => -1,\n    \"-1.9\" => -2,\n    \"-1.99\" => -2,\n    \"-1.999\" => -2,\n \
    \   \"-1.9999\" => -2,\n    \"-1.99999\" => -2,\n    \"-1.999999\" => -2,\n  \
    \  \"-1.9999999\" => -2,\n    \"-1.99999999\" => -2,\n    \"-1.999999999\" =>\
    \ -2,\n    \"-1.9999999999\" => -2,\n    \"-1.99999999999\" => -2,\n    \"-1.999999999999\"\
    \ => -2,\n    \"-1.9999999999999\" => -2,\n    \"-1.99999999999999\" =>", "  $new_value\
    \ = round($value);\n  return $new_value;\n}\n$value = -14.5;\n$new_value = closest_integer($value);\n\
    echo $new_value;", "    // TODO: Implement this function\n    $value = $value\
    \ + 0;\n    $decimal = $value - (int)$value;\n    if($decimal >= 0.5) {\n    \
    \    return (int)$value + 1;\n    } else {\n        return (int)$value;\n    }\n\
    }\n$test1 = closest_integer(\"10\");\n$test2 = closest_integer(\"15.3\");\n$test3\
    \ = closest_integer(\"14.5\");\n$test4 = closest_integer(\"-14.5\");\necho $test1\
    \ . \"\\n\";\necho $test2 . \"\\n\";\necho $test3 . \"\\n\";\necho $test4 . \"\
    \\n\";", "  $number = floatval($value);\n  if ($number >= 0) {\n    return ceil($number);\n\
    \  } else {\n    return floor($number);\n  }\n}\necho closest_integer(\"10\");\n\
    echo closest_integer(\"15.3\");\necho closest_integer(\"14.5\");\necho closest_integer(\"\
    -14.5\");", "  $number = (float)$value;\n  if($number >= 0) {\n    return ceil($number);\n\
    \  } else {\n    return floor($number);\n  }\n}\n\necho closest_integer(\"14.5\"\
    ) . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";", "  $numbers = explode(\"\
    .\", $value);\n  return empty($numbers[1]) ? $numbers[0] : ($numbers[1] <= 0 ?\
    \ floor($value) : ceil($value));\n}", "  $ceil = ceil($value);\n  $floor = floor($value);\n\
    \  if ($ceil - $value == 0.5) {\n    return $floor;\n  } elseif ($value - $floor\
    \ == 0.5) {\n    return $ceil;\n  } elseif ($ceil - $value < 0.5) {\n    return\
    \ $ceil;\n  } else {\n    return $floor;\n  }\n}\necho closest_integer(\"10\"\
    ) . \"\\n\";\necho closest_integer(\"15.3\") . \"\\n\";\necho closest_integer(\"\
    14.5\") . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";\necho closest_integer(\"\
    -15.2\") . \"\\n\";", "    $value = round($value);\n    return $value;\n}\n\n\
    print(closest_integer(\"10\"));", "    return round($value);\n}", "  $integer_value\
    \ = intval($value);\n  $decimal_part = $value - $integer_value;\n  if ($decimal_part\
    \ < 0.5) {\n    return $integer_value;\n  } else {\n    return $integer_value\
    \ + 1;\n  }\n}\n$test_cases = array(\n  array(\n    \"input\" => \"10\",\n   \
    \ \"expected\" => 10\n  ),\n  array(\n    \"input\" => \"15.3\",\n    \"expected\"\
    \ => 15\n  ),\n  array(\n    \"input\" => \"14.5\",\n    \"expected\" => 15\n\
    \  ),\n  array(\n    \"input\" => \"-14.5\",\n    \"expected\" => -15\n  ),\n\
    \  array(\n    \"input\" => \"-13.5\",\n    \"expected\" => -13\n  ),\n  array(\n\
    \    \"input\" => \"-100\",\n    \"expected\" => -100\n  ),\n  array(\n    \"\
    input\" => \"100\",\n    \"expected\" => 100\n  ),\n  array(\n    \"input\" =>\
    \ \"0\",\n    \"expected\" => 0\n  ),\n  array(\n    \"input\" => \"0.5\",\n \
    \   \"expected\" => 1\n  ),\n  array(\n    \"input\" => \"-0.5\",\n    \"expected\"\
    \ => 0\n  ),\n  array(\n    \"input\" => \"2.4\",\n    \"expected\" => 2\n  ),\n\
    \  array(\n    \"input\" => \"-2.4\",\n    \"expected\" => -2\n  ),\n  array(\n\
    \    \"input\" => \"3.4\",\n    \"expected\" => 3\n  ),\n  array(\n    \"input\"\
    \ => \"-3.4\",\n    \"expected\" => -3\n  ),\n  array(\n    \"input\" => \"4.5\"\
    ,\n    \"expected\" => 5\n  ),\n  array(\n    \"input\" => \"-4.5\",\n    \"expected\"\
    \ => -5\n  ),\n  array(\n    \"input\" => \"5.5\",\n    \"expected\" => 6\n  ),\n\
    \  array(\n    \"input\" => \"-", "  $truncated = floor($value);\n  $fraction\
    \ = $value - $truncated;\n  if ($fraction >= 0.5) {\n    return $truncated + 1;\n\
    \  } elseif ($fraction <= -0.5) {\n    return $truncated - 1;\n  } else {\n  \
    \  return $truncated;\n  }\n}\n\n$result = closest_integer(\"15.3\");\nprint_r($result);\n\
    echo \"\\n\";\n$result = closest_integer(\"-15.3\");\nprint_r($result);\necho\
    \ \"\\n\";\n$result = closest_integer(\"14.5\");\nprint_r($result);\necho \"\\\
    n\";\n$result = closest_integer(\"-14.5\");\nprint_r($result);\necho \"\\n\";\n\
    $result = closest_integer(\"10\");\nprint_r($result);\necho \"\\n\";\n$result\
    \ = closest_integer(\"9.9\");\nprint_r($result);\necho \"\\n\";\n$result = closest_integer(\"\
    10.1\");\nprint_r($result);\necho \"\\n\";\n$result = closest_integer(\"-10.1\"\
    );\nprint_r($result);\necho \"\\n\";\n$result = closest_integer(\"-9.9\");\nprint_r($result);\n\
    echo \"\\n\";\n$result = closest_integer(\"0\");\nprint_r($result);\necho \"\\\
    n\";\n$result = closest_integer(\"0.5\");\nprint_r($result);\necho \"\\n\";\n\
    $result = closest_integer(\"-0.5\");\nprint_r($result);\necho \"\\n\";", "   \
    \ return ceil($value);\n}\necho closest_integer(10);", "    $value = strval($value);\n\
    \    $decimalPoint = strpos($value, '.');\n    if ($decimalPoint === false) {\n\
    \        return $value;\n    }\n    $decimalPart = $value[$decimalPoint + 1];\n\
    \    $positive = false;\n    if ($value[0] == '-') {\n        $positive = true;\n\
    \    }\n    $newValue = substr($value, 0, $decimalPoint);\n    if ($decimalPart\
    \ >= 5) {\n        if ($positive) {\n            $newValue = $newValue - 1;\n\
    \        } else {\n            $newValue = $newValue + 1;\n        }\n    }\n\
    \    return intval($newValue);\n}\n", "  $fraction = $value - (int)$value;\n \
    \ $neg = $fraction < 0;\n  $fraction = abs($fraction);\n  if ($fraction == 0)\
    \ return (int)$value;\n  $half = 0.5;\n  $ceil = ceil($value);\n  $floor = floor($value);\n\
    \  if ($fraction == $half) {\n    if ($neg) return $floor;\n    return $ceil;\n\
    \  }\n  if ($fraction > $half) {\n    if ($neg) return $floor;\n    return $ceil;\n\
    \  }\n  if ($neg) return $ceil;\n  return $floor;\n}", "    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example:\n    // print \"Hello world!\";\n    $num = round($value);\n   \
    \ if(abs($value - $num) == 0.5) {\n        if($value > 0) {\n            return\
    \ ++$num;\n        } else {\n            return --$num;\n        }\n    } else\
    \ {\n        return $num;\n    }\n}", "    return round($value);\n}", "    $value\
    \ = (string)$value;\n    $num = 0;\n    for ($i = 0; $i < strlen($value); $i++)\
    \ {\n        if ($value[$i] == '.') {\n            $num = floatval($value);\n\
    \            if ($num < 0) {\n                $num = floor($num);\n          \
    \  } else {\n                $num = ceil($num);\n            }\n            break;\n\
    \        }\n    }\n    if ($num == 0) {\n        $num = intval($value);\n    }\n\
    \    return $num;\n}\n", "    $rounded = round($value);\n    $down = floor($value);\n\
    \    $up = ceil($value);\n    $diffDown = abs($down - $value);\n    $diffUp =\
    \ abs($up - $value);\n    $diffRounded = abs($rounded - $value);\n    if ($diffDown\
    \ <= $diffUp && $diffDown <= $diffRounded) {\n        return $down;\n    } elseif\
    \ ($diffUp <= $diffDown && $diffUp <= $diffRounded) {\n        return $up;\n \
    \   } else {\n        return $rounded;\n    }\n}\n\necho \"input 15.3, expect\
    \ 15 result: \" . closest_integer(\"15.3\") . \"\\n\";\necho \"input -14.5, expect\
    \ -15 result: \" . closest_integer(\"-14.5\") . \"\\n\";\necho \"input -15.3,\
    \ expect -15 result: \" . closest_integer(\"-15.3\") . \"\\n\";\necho \"input\
    \ -15.5, expect -16 result: \" . closest_integer(\"-15.5\") . \"\\n\";\necho \"\
    input 15.5, expect 16 result: \" . closest_integer(\"15.5\") . \"\\n\";\necho\
    \ \"input 14.5, expect 15 result: \" . closest_integer(\"14.5\") . \"\\n\";\n\
    echo \"input 14.1, expect 14 result: \" . closest_integer(\"14.1\") . \"\\n\"\
    ;\necho \"input 14.9, expect 15 result: \" . closest_integer(\"14.9\") . \"\\\
    n\";\necho \"input 15, expect 15 result: \" . closest_integer(\"15\") . \"\\n\"\
    ;\necho \"input 17, expect 17 result: \" . closest_integer(\"17\") . \"\\n\";\n\
    echo \"input -17, expect -17 result: \" . closest_integer(\"-17\") . \"\\n\";\n\
    echo \"input -15, expect -15 result: \" . closest_integer(\"-15\") . \"\\n\";\n\
    echo \"input -14.9, expect -15 result: \" . closest_integer(\"-14.9\") . \"\\\
    n\";\necho \"input -14.1, expect -14 result: \" . closest_integer(\"-14.1\") .\
    \ \"\\n\";\necho", "  // Enter code here\n}", "  return (int) $value;\n}\n\necho\
    \ closest_integer(\"15.3\");\necho \"<br>\";\necho closest_integer(\"15.5\");\n\
    echo \"<br>\";\necho closest_integer(\"10\");\necho \"<br>\";\necho closest_integer(\"\
    -10\");\necho \"<br>\";\necho closest_integer(\"-14.5\");\necho \"<br>\";\necho\
    \ closest_integer(\"14.5\");\necho \"<br>\";\necho closest_integer(\"12.0\");\n\
    echo \"<br>\";\necho closest_integer(\"-12.0\");", "  $int = (int)$value;\n  if\
    \ ($value >= 0) {\n    if ($value == (float)$int) {\n      return $int;\n    }\
    \ else {\n      return $int + 1;\n    }\n  } else {\n    if ($value == (float)$int)\
    \ {\n      return $int;\n    } else {\n      return $int - 1;\n    }\n  }\n}\n\
    echo closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"15.3\") . \"\\\
    n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"-14.5\"\
    ) . \"\\n\";", "    return ceil($value) - 1;\n}", "  $value = (int)$value;\n \
    \ return $value;\n}\n", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n}", "    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example:\n    // print \"Hello world!\"\
    ;\n    \n    \n    \t$arr = array();\n\t$arr = explode(\".\", $value);\n\t$int\
    \ = intval($arr[0]);\n\t$dec = ($arr[1])/10;\n\tif($dec >= 0.5){\n\t\t$int = $int\
    \ + 1;\n\t}\n\tprint $int;\n}\nclosest_integer(\"10\");", "  $value = (float)$value;\n\
    \  $val_arr = explode('.', $value);\n  if(count($val_arr) == 1) {\n    return\
    \ (int)$value;\n  } else {\n    $decimal = $val_arr[1];\n    $int = (int)$val_arr[0];\n\
    \    if($decimal > 50) {\n      $int += 1;\n    }\n    return $int;\n  }\n}\n\n\
    echo closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"15.3\") . PHP_EOL;\n\
    echo closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"-14.5\") . PHP_EOL;\n\
    echo closest_integer(\"-14.6\") . PHP_EOL;", "    return round($value);\n}\necho\
    \ closest_integer(\"10\").\"\\n\";\necho closest_integer(\"15.3\").\"\\n\";\n\
    echo closest_integer(\"14.5\").\"\\n\";\necho closest_integer(\"-14.5\").\"\\\
    n\";", "    $whole = round($value);\n    if ($whole >= 0) {\n        $pos = $whole;\n\
    \        $neg = $whole - 1;\n    } else {\n        $pos = $whole + 1;\n      \
    \  $neg = $whole;\n    }\n    $dist_pos = abs($value - $pos);\n    $dist_neg =\
    \ abs($value - $neg);\n    if ($dist_pos <= $dist_neg) {\n        return $pos;\n\
    \    } else {\n        return $neg;\n    }\n}\n$num = readline(\"Enter a number:\
    \ \");\n$num = str_replace(\"'\", \"\", $num);\n$num = str_replace(\"\\\"\", \"\
    \", $num);\n$num = str_replace(\"`\", \"\", $num);\n$num = str_replace(\"\\\\\"\
    , \"\", $num);\n$num = str_replace(\"$\", \"\", $num);\necho closest_integer($num);\n\
    echo \"\\n\";", "  return $value;\n}", "  $closestInteger = round($value);\n \
    \ if ($closestInteger < $value) {\n    $closestInteger += 1;\n  }\n  return $closestInteger;\n\
    }", "  return round($value);\n}\necho closest_integer(\"10\");\necho PHP_EOL;\n\
    echo closest_integer(\"15.3\");\necho PHP_EOL;\necho closest_integer(\"14.5\"\
    );\necho PHP_EOL;\necho closest_integer(\"-14.5\");\necho PHP_EOL;\necho PHP_EOL;",
  "\treturn (int) round($value);\n}\n\necho closest_integer(\"10\").\"\\n\";\necho\
    \ closest_integer(\"15.3\").\"\\n\";\necho closest_integer(\"-15.3\").\"\\n\"\
    ;\necho closest_integer(\"14.5\").\"\\n\";\necho closest_integer(\"-14.5\").\"\
    \\n\";", "  return ($value > 0) ? ceil($value) : floor($value);\n}", "  $n = (int)$value;\n\
    \  if ($value - $n > 0.5) {\n    return $n + 1;\n  } else {\n    return $n;\n\
    \  }\n}\necho closest_integer(\"10\").\"\\n\";\necho closest_integer(\"15.3\"\
    ).\"\\n\";\necho closest_integer(\"14.5\").\"\\n\";\necho closest_integer(\"-14.5\"\
    ).\"\\n\";\n ?>", "  // Your code here\n\t$closestInt = 0;\n\t$upperInt = ceil($value);\n\
    \t$lowerInt = floor($value);\n\tif ($upperInt - $value >= $value - $lowerInt)\
    \ {\n\t\t$closestInt = $lowerInt;\n\t} else {\n\t\t$closestInt = $upperInt;\n\t\
    }\n\treturn $closestInt;\n}\n\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"\
    15.3\") . \"\\n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"\
    -14.5\") . \"\\n\";\necho closest_integer(\"10.5\") . \"\\n\";\necho closest_integer(\"\
    -10.5\") . \"\\n\";\n", "    $number = (float)$value;\n    $floor = floor($number);\n\
    \    $ceil = ceil($number);\n    $diff_floor = abs($number - $floor);\n    $diff_ceil\
    \ = abs($number - $ceil);\n    if ($diff_floor < $diff_ceil) {\n        return\
    \ (int)$floor;\n    } else {\n        return (int)$ceil;\n    }\n}\n\n$inputs\
    \ = [\n    \"10\",\n    \"15.3\",\n    \"14.5\",\n    \"-14.5\",\n];\n\nforeach\
    \ ($inputs as $input) {\n    echo \"closest_integer($input) = \" . closest_integer($input)\
    \ . \"\\n\";\n}", "    $ceil = ceil($value);\n    $floor = floor($value);\n  \
    \  if ($value - $floor == 0.5) {\n        return ($value >= 0) ? $ceil : $floor;\n\
    \    }\n    else {\n        return (abs($value - $ceil) > abs($value - $floor))\
    \ ? $floor : $ceil;\n    }\n}\necho closest_integer(\"-14.5\");", "  $floored_value\
    \ = floor($value);\n  $ceiled_value = ceil($value);\n  if ( $value - $floored_value\
    \ > $ceiled_value - $value ) {\n    return $ceiled_value;\n  } else {\n    return\
    \ $floored_value;\n  }\n}\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"\
    15.3\") . \"\\n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"\
    -14.5\") . \"\\n\";", "\treturn round($value);\n}\necho closest_integer(\"-15.3\"\
    ) . \"\\n\";", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\n", "    return ($value - floor($value) >= 0.5) ? ceil($value) : floor($value);\n\
    }", "    $newValue = abs($value);\n    if($newValue > floor($newValue)) {\n  \
    \      $a = floor($newValue) + 1;\n        $b = floor($newValue);\n        $c\
    \ = $a - $newValue;\n        $d = $newValue - $b;\n        if($c > $d) {\n   \
    \         $value = $b;\n        } else {\n            $value = $a;\n        }\n\
    \    }\n    return $value;\n}", "    return round($value);\n}", "  // Use an array\
    \ to keep track of the distance from the value to each\n  // integer\n  $distance_to_integer\
    \ = array();\n  // Loop through all integers from -10 to 10 and calculate the\
    \ absolute\n  // distance from $value to each integer\n  for ($i = -10; $i <=\
    \ 10; $i++) {\n    $distance_to_integer[$i] = abs($value - $i);\n  }\n  // Find\
    \ the integer with the minimum distance from $value\n  $closest_integer = array_keys($distance_to_integer,\
    \ min($distance_to_integer))[0];\n  return $closest_integer;\n}\necho closest_integer(\"\
    14.5\") . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";\necho closest_integer(\"\
    14.51\") . \"\\n\";\necho closest_integer(\"-14.51\") . \"\\n\";", "    // your\
    \ code goes here\n    $roundDown = floor($value);\n    $roundUp = ceil($value);\n\
    \    $diff1 = abs($value - $roundDown);\n    $diff2 = abs($value - $roundUp);\n\
    \    if ($diff1 > $diff2) {\n        return $roundUp;\n    } else {\n        return\
    \ $roundDown;\n    }\n}", "    $round = round($value);\n    if($round - $value\
    \ == 0.5) {\n        if ($round > 0) {\n            return $round-1;\n       \
    \ } else {\n            return $round+1;\n        }\n    } else {\n        return\
    \ $round;\n    }\n}", "\t$number = floatval($value);\n\treturn floor($number +\
    \ 0.5);\n}\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"15.3\"\
    ) . \"\\n\";\necho closest_integer(\"15.6\") . \"\\n\";\necho closest_integer(\"\
    -15.6\") . \"\\n\";", "    return round($value);\n}", "    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example:\n    // print \"Hello world!\";\n}\n", "\treturn round($value);\n\
    }\necho closest_integer(10) . \"\\n\";\necho closest_integer(15.3) . \"\\n\";\n\
    echo closest_integer(14.5) . \"\\n\";\necho closest_integer(-14.5) . \"\\n\";",
  "  $value = round($value);\n  return $value;\n}\n$value = -14.5;\necho closest_integer($value)\
    \ . PHP_EOL;\n", "  // Split the number into an array on the decimal.\n  $value_array\
    \ = explode(\".\", $value);\n  // If the number is negative and the decimal is\
    \ .5 or more, round the\n  // number up to the next integer.\n  if ($value_array[0]\
    \ < 0 && $value_array[1] >= 5) {\n    return $value_array[0] + 1;\n  }\n  // If\
    \ the number is negative and the decimal is less than .5, round the\n  // number\
    \ down to the previous integer.\n  elseif ($value_array[0] < 0 && $value_array[1]\
    \ < 5) {\n    return $value_array[0];\n  }\n  // If the number is positive and\
    \ the decimal is .5 or more, round the\n  // number up to the next integer.\n\
    \  elseif ($value_array[0] > 0 && $value_array[1] >= 5) {\n    return $value_array[0]\
    \ + 1;\n  }\n  // If the number is positive and the decimal is less than .5, round\
    \ the\n  // number down to the previous integer.\n  elseif ($value_array[0] >\
    \ 0 && $value_array[1] < 5) {\n    return $value_array[0];\n  }\n  // If the number\
    \ has no decimal, then return the number.\n  else {\n    return $value_array[0];\n\
    \  }\n}", "    $number = explode(\".\", $value);\n    if($number[1] >= 5){\n \
    \       return ($number[0] + 1);\n    } else {\n        return $number[0];\n \
    \   }\n}", "    $result = number_format($value, 0, '.', '');\n    return (int)$result;\n\
    }\nprint closest_integer(\"10\");\nprint \"<br>\";\nprint closest_integer(\"15.3\"\
    );", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example:\n    // print \"Hello world!\";\n}\n", " \
    \ $round_up = ceil($value);\n  $round_down = floor($value);\n  if (abs($value\
    \ - $round_up) > abs($value - $round_down)) {\n    return $round_down;\n  } else\
    \ {\n    return $round_up;\n  }\n}", "  $value = ceil($value);\n  return $value;\n\
    }\n\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"15.3\") .\
    \ \"\\n\";\necho closest_integer(\"-15.3\") . \"\\n\";\necho closest_integer(\"\
    -15.6\") . \"\\n\";\n", "  // Your code here\n}", "    return round($value);\n\
    }", "  // Your code here\n  $value_flr = floor($value);\n  $value_clg = ceil($value);\n\
    \  if($value - $value_flr < $value_clg - $value) {\n    return $value_flr;\n \
    \ } else {\n    return $value_clg;\n  }\n}\n", "  return round($value);\n}", " \
    \ // Remove the negative sign from the value if one exists\n  $value = (substr($value,\
    \ 0, 1) == '-') ? substr($value, 1) : $value;\n  // Split the value string into\
    \ an array of character strings\n  $valueArray = str_split($value);\n  // The\
    \ first integer value you want to return will be the first integer\n  // before\
    \ the decimal point\n  $firstInt = $valueArray[0];\n  // The second integer value\
    \ you want to return will be the second integer\n  // before the decimal point,\
    \ or the first integer after the decimal point\n  $secondInt = isset($valueArray[1])\
    \ ? $valueArray[1] : $valueArray[0];\n  // Set the default return value to be\
    \ the first integer value\n  $returnValue = $firstInt;\n  // The value of the\
    \ number is equal to the product of the first integer\n  // value and 10 to the\
    \ power of the number of digits after the decimal\n  // point\n  $value = $firstInt\
    \ * pow(10, count($valueArray) - 1);\n  // If the second integer value is greater\
    \ than the first,\n  // return the first integer value, else return the second\
    \ integer value\n  if ($secondInt > $firstInt) {\n    $returnValue = $firstInt;\n\
    \  } else {\n    $returnValue = $secondInt;\n  }\n  // If the first value of the\
    \ value array is negative, return the negative\n  // of the value\n  if ($valueArray[0]\
    \ == '-') {\n    $returnValue = -$returnValue;\n  }\n  return $returnValue;\n\
    }\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"15.3\") . \"\
    \\n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"-14.5\"\
    ) . \"\\n\";", "\treturn round($value);\n}", "  $value=round($value);\n  return\
    \ $value;\n}\necho closest_integer(\"15.3\");\necho \"\\n\";", "  return round($value);\n\
    }\necho \"closest_integer('10') = \" . closest_integer('10') . \"\\n\";\necho\
    \ \"closest_integer('15.3') = \" . closest_integer('15.3') . \"\\n\";\necho \"\
    closest_integer('14.5') = \" . closest_integer('14.5') . \"\\n\";\necho \"closest_integer('-14.5')\
    \ = \" . closest_integer('-14.5') . \"\\n\";\necho \"closest_integer('-14.4')\
    \ = \" . closest_integer('-14.4') . \"\\n\";\necho \"closest_integer('14.4') =\
    \ \" . closest_integer('14.4') . \"\\n\";\necho \"closest_integer('-15.6') = \"\
    \ . closest_integer('-15.6') . \"\\n\";\necho \"closest_integer('15.6') = \" .\
    \ closest_integer('15.6') . \"\\n\";\necho \"closest_integer('15.5') = \" . closest_integer('15.5')\
    \ . \"\\n\";\necho \"closest_integer('-15.5') = \" . closest_integer('-15.5')\
    \ . \"\\n\";", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example:\n  // print \"Hello world!\";\n  $value\
    \ = $value * 100;\n  $value = round($value, 0, PHP_ROUND_HALF_DOWN);\n  $value\
    \ = $value / 100;\n  return $value;\n}", "  $value = $value[strlen($value) - 1]\
    \ >= 5 ? ceil($value) : floor($value);\n  return $value;\n}\n", "  $value = round($value);\n\
    \  return $value;\n}", "    $ceil_value = ceil($value);\n    $floor_value = floor($value);\n\
    \    $ceil_remainder = fmod($value, $ceil_value);\n    $floor_remainder = fmod($value,\
    \ $floor_value);\n    if ($ceil_remainder < $floor_remainder) {\n        return\
    \ $ceil_value;\n    } else {\n        return $floor_value;\n    }\n}\n", "   \
    \ return (int)round($value);\n}\n", "  $fl = floatval($value);\n  if ($fl > -1\
    \ && $fl < 1) {\n    return 0;\n  }\n  return ceil($fl);\n}", "  // Your code\
    \ here\n}", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\n", "\t$roundVal = round($value);\n\t$floorVal = floor($value);\n\t$ceilVal\
    \ = ceil($value);\n\tif ($roundVal == $floorVal || $roundVal == $ceilVal) {\n\t\
    \treturn $roundVal;\n\t} else {\n\t\tif ($value > 0) {\n\t\t\tif ($value - $floorVal\
    \ > $ceilVal - $value) {\n\t\t\t\treturn $ceilVal;\n\t\t\t} elseif ($value - $floorVal\
    \ < $ceilVal - $value) {\n\t\t\t\treturn $floorVal;\n\t\t\t}\n\t\t} else {\n\t\
    \t\tif ($value - $floorVal > $ceilVal - $value) {\n\t\t\t\treturn $floorVal;\n\
    \t\t\t} elseif ($value - $floorVal < $ceilVal - $value) {\n\t\t\t\treturn $ceilVal;\n\
    \t\t\t}\n\t\t}\n\t}\n}", "    return round($value);\n}\necho closest_integer(\"\
    14.5\") . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";", "    //\n}\n",
  "  return round($value);\n}\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"\
    15.3\") . PHP_EOL;", "  $temp = $value * 10;\n  if ($temp % 10 > 5) {\n    return\
    \ ceil($value);\n  } else {\n    return floor($value);\n  }\n}", "    $value=round($value);\n\
    \    return $value;\n}", "    $value = round($value);\n    return $value;\n}\n\
    echo closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"15.3\") . \"\\\
    n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"-14.5\"\
    ) . \"\\n\";", "  $value = (float)$value;\n  $int = (int)$value;\n  if ($value\
    \ >= 0) {\n    return ($value - $int) >= 0.5 ? $int + 1 : $int;\n  } else {\n\
    \    return ($value - $int) <= -0.5 ? $int - 1 : $int;\n  }\n}\n\n$a = closest_integer(\"\
    10\");\nprint_r($a);\n$a = closest_integer(\"15.3\");\nprint_r($a);\n$a = closest_integer(\"\
    14.5\");\nprint_r($a);\n$a = closest_integer(\"-14.5\");\nprint_r($a);\n$a = closest_integer(\"\
    -14.3\");\nprint_r($a);", "    $result = round($value);\n    if ($result < $value)\
    \ {\n        $result = round($value, 0, PHP_ROUND_HALF_UP);\n    }\n    return\
    \ $result;\n}", "    $value = round($value);\n    return $value;\n}\necho closest_integer(\"\
    10\") . \"\\n\";\necho closest_integer(\"15.3\") . \"\\n\";\necho closest_integer(\"\
    -14.5\") . \"\\n\";", "  // set a variable to equal the ceiling of the input\n\
    \  $ceiling = ceil($value);\n  // set a variable to equal the floor of the input\n\
    \  $floor = floor($value);\n  // define another variable to capture the difference\
    \ between the input\n  // and its floor\n  $diff1 = $value - $floor;\n  // define\
    \ another variable to capture the difference between the input\n  // and its ceiling\n\
    \  $diff2 = $ceiling - $value;\n  // compare the two differences, return the ceiling\
    \ if the first difference\n  // is greater than the second, otherwise return the\
    \ floor\n  if ($diff1 > $diff2) {\n    return $ceiling;\n  } else {\n    return\
    \ $floor;\n  }\n}", "  // solution\n  $isNegative = false;\n  if (strstr($value,\
    \ '-')) {\n    $isNegative = true;\n    $value = ltrim($value, '-');\n  }\n  $posInteger\
    \ = ceil($value);\n  $negInteger = floor($value);\n  $posDiff = $posInteger -\
    \ $value;\n  $negDiff = $value - $negInteger;\n  if ($isNegative) {\n    return\
    \ ($posDiff > $negDiff) ? $negInteger : $posInteger;\n  } else {\n    return ($posDiff\
    \ < $negDiff) ? $posInteger : $negInteger;\n  }\n}", "    $int = intval($value);\n\
    \    $div = intval($value);\n    return $div;\n}\nprint_r(closest_integer(\"10\"\
    ));", "\t$n = (float)$value;\n\tif ($n < 0) {\n\t\treturn ceil($n);\n\t}\n\telse\
    \ {\n\t\treturn floor($n);\n\t}\n}", "\t$ceil = ceil($value);\n\t$floor = floor($value);\n\
    \t$ceil_diff = $ceil - $value;\n\t$floor_diff = $value - $floor;\n\tif ($ceil_diff\
    \ < $floor_diff) {\n\t\treturn $ceil;\n\t} else {\n\t\treturn $floor;\n\t}\n}\n\
    \nprint_r(closest_integer(\"10\"));\nprint_r(closest_integer(\"15.3\"));\nprint_r(closest_integer(\"\
    14.5\"));\nprint_r(closest_integer(\"-14.5\"));", "    // TODO\n}\n", "    return\
    \ round($value);\n}", "    $ceiling = ceil($value);\n    $floor = floor($value);\n\
    \    if ($ceiling - $value < $value - $floor) {\n        return $ceiling;\n  \
    \  } else {\n        return $floor;\n    }\n}", "    $ret = intval($value);\n\
    \    if (abs($value - $ret) == 0.5) {\n        if ($value > 0) {\n           \
    \ $ret += 1;\n        } else {\n            $ret -= 1;\n        }\n    }\n   \
    \ return $ret;\n}\n\nprint_r(closest_integer(\"10\"));\nprint_r(closest_integer(\"\
    15.3\"));\nprint_r(closest_integer(\"14.5\"));\nprint_r(closest_integer(\"-14.5\"\
    ));", "\t$n = round($value);\n\tif (abs($value - $n) < 0.5) {\n\t\treturn $n;\n\
    \t} else {\n\t\tif ($value > 0) {\n\t\t\treturn $n + 1;\n\t\t} else {\n\t\t\t\
    return $n - 1;\n\t\t}\n\t}\n}\n\necho closest_integer('10');\necho \"\\n\";\n\
    echo closest_integer('15.3');\necho \"\\n\";\necho closest_integer('14.5');\n\
    echo \"\\n\";\necho closest_integer('-14.5');\necho \"\\n\";", "  $int = (int)\
    \ $value;\n  $fraction = $value - $int;\n  if ($fraction >= 0.5) {\n    return\
    \ $int + 1;\n  } elseif ($fraction <= -0.5) {\n    return $int - 1;\n  } else\
    \ {\n    return $int;\n  }\n}\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"\
    15.3\") . \"\\n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"\
    -14.5\") . \"\\n\";", "  return round($value);\n}", "  $closest = round($value);\n\
    \  $diff = abs($value - $closest);\n  $ceil = ceil($value);\n  $floor = floor($value);\n\
    \  $ceil_diff = abs($value - $ceil);\n  $floor_diff = abs($value - $floor);\n\
    \  if ($ceil_diff < $diff && $ceil_diff < $floor_diff) {\n    return $ceil;\n\
    \  } elseif ($floor_diff < $diff && $floor_diff < $ceil_diff) {\n    return $floor;\n\
    \  } else {\n    return $closest;\n  }\n}", "    $integer = round($value);\n \
    \   if ($value == $integer) {\n        return $integer;\n    } elseif ($value\
    \ > $integer) {\n        return $integer + 1;\n    } else {\n        return $integer\
    \ - 1;\n    }\n}", "  $round = round($value);\n  if ($round > $value) {\n    return\
    \ $round - 1;\n  } else {\n    return $round;\n  }\n}\n\necho closest_integer(\"\
    10\") . \"\\n\";\necho closest_integer(\"15.3\") . \"\\n\";", "  $num = (float)$value;\n\
    \  $floor = floor($num);\n  $ceil = ceil($num);\n  $frac = $num - $floor;\n  if\
    \ ($frac == 0.5) {\n    return $floor;\n  } elseif ($frac > 0.5) {\n    return\
    \ $ceil;\n  } else {\n    return $floor;\n  }\n}", "    return round($value);\n\
    }", "    // Split input string into array\n    $split_value = explode(\".\", $value);\n\
    \    // Check if array only has one element and return integer\n    if (count($split_value)\
    \ == 1) {\n        return intval($value);\n    }\n    // Check the last digit\
    \ of the second element of the array and return\n    // if rounded up or down\n\
    \    if (substr($split_value[1], -1) > 5) {\n        return intval($split_value[0])\
    \ + 1;\n    } else {\n        return intval($split_value[0]);\n    }\n}\necho\
    \ \"<pre>\";\necho \"closest_integer(\\\"10\\\")\\n\";\necho closest_integer(\"\
    10\");\necho \"\\nclosest_integer(\\\"15.3\\\")\\n\";\necho closest_integer(\"\
    15.3\");\necho \"\\nclosest_integer(\\\"15.7\\\")\\n\";\necho closest_integer(\"\
    15.7\");\necho \"\\nclosest_integer(\\\"-15.7\\\")\\n\";\necho closest_integer(\"\
    -15.7\");\necho \"\\nclosest_integer(\\\"-15.1\\\")\\n\";\necho closest_integer(\"\
    -15.1\");\necho \"</pre>\";", "    return round($value);\n}\necho \"closest_integer(10)\
    \ = \".closest_integer(10).\"\\n\";\necho \"closest_integer(15.3) = \".closest_integer(15.3).\"\
    \\n\";\necho \"closest_integer(14.5) = \".closest_integer(14.5).\"\\n\";\necho\
    \ \"closest_integer(-14.5) = \".closest_integer(-14.5).\"\\n\";", "  $decimals\
    \ = strlen(substr(strrchr($value, \".\"), 1));\n  $closest_int = round($value,\
    \ $decimals);\n  if ($closest_int - $value > 0.5) {\n    return $closest_int -\
    \ 1;\n  } else {\n    return $closest_int;\n  }\n}\n", "    return (int) $value;\n\
    }", "  $num = round($value);\n  if ($num - $value < 0.5) {\n    return $num;\n\
    \  } else {\n    return $num - 1;\n  }\n}", "    // Write your code here\n   \
    \ // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n}\n", "  $round = round($value);\n  if ($round\
    \ < $value) {\n    return $round + 1;\n  } else {\n    return $round;\n  }\n}",
  "  return intval(round($value));\n}\necho closest_integer(\"10\") . \"\\n\";\necho\
    \ closest_integer(\"15.3\") . \"\\n\";\necho closest_integer(\"14.5\") . \"\\\
    n\";\necho closest_integer(\"-14.5\") . \"\\n\";", "  $closest_value = round($value);\n\
    \  return $closest_value;\n}\n\necho closest_integer(\"10\");\necho \"\\n\";\n\
    echo closest_integer(\"15.3\");\necho \"\\n\";\necho closest_integer(\"14.5\"\
    );\necho \"\\n\";\necho closest_integer(\"-14.5\");\necho \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

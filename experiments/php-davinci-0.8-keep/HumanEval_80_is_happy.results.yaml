name: HumanEval_80_is_happy
language: php
results:
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $x = str_split($s);\n    $str = [];\n    foreach ($x as $key => $value) {\n\
    \        if($key>1){\n            if ($value!==$x[$key-1]&&$value!==$x[$key-2])\
    \ {\n                array_push($str, $value);\n            }\n        }\n   \
    \ }\n    if (count($str)==0) {\n        return false;\n    }\n    return true;\n\
    }\nvar_dump(is_happy('abcd'));\nvar_dump(is_happy('aabb'));\nvar_dump(is_happy('adb'));\n\
    var_dump(is_happy('xyy'));\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\nbool(true)\nbool(true)\nbool(false)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp5_efzh9c.php:39\nStack trace:\n#0 /tmp/tmp5_efzh9c.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5_efzh9c.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    // Your code here\n    return true;\n}\necho is_happy('aabb') . PHP_EOL;\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jri3p_7.php:22\n\
    Stack trace:\n#0 /tmp/tmp9jri3p_7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9jri3p_7.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_hr2ml2.php:22\n\
    Stack trace:\n#0 /tmp/tmpl_hr2ml2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpl_hr2ml2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = [];\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (array_key_exists($s[$i],\
    \ $arr)) {\n      return false;\n    } else {\n      $arr[$s[$i]] = $s[$i];\n\
    \    }\n  }\n  return true;\n}\necho is_happy('aabb') ? 'True' : 'False';\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "False\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpws488f88.php:29\n\
    Stack trace:\n#0 /tmp/tmpws488f88.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpws488f88.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return strlen($s) >= 3 && preg_match(\"/^([a-z])(?!\\1)([a-z])(?!\\1|\\2)[a-z]$/\"\
    , $s);\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphv_y6pxd.php:22\n\
    Stack trace:\n#0 /tmp/tmphv_y6pxd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphv_y6pxd.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return preg_match(\"/^(?!.*(.).*\\1\\1)[a-z]{3,}$/i\", $s);\n}\necho is_happy(\"\
    a\");\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qm03xfj.php:21\n\
    Stack trace:\n#0 /tmp/tmp4qm03xfj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4qm03xfj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahp44wg1.php:31\n\
    Stack trace:\n#0 /tmp/tmpahp44wg1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpahp44wg1.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) return false;\n  $temp = substr($s, 0, 3);\n  $temp = (string)array_unique($temp);\n\
    \  if (strlen($temp) != 3) return false;\n  for ($i = 1; $i < strlen($s) - 3;\
    \ $i++) {\n    $temp = (string)array_unique(substr($s, $i, 3));\n    if (strlen($temp)\
    \ != 3) return false;\n  }\n  return true;\n}\necho is_happy(\"a\"); // false\n\
    echo is_happy(\"aa\"); // false\necho is_happy(\"abcd\"); // true\necho is_happy(\"\
    aabb\"); // false\necho is_happy(\"adb\"); // true\necho is_happy(\"xyy\"); //\
    \ false\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_unique() expects parameter 1 to be array, string given\
    \ in /tmp/tmporfc7yor.php on line 15\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, string given in /tmp/tmporfc7yor.php on line 15\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, string given in /tmp/tmporfc7yor.php on line\
    \ 15\n\nWarning: array_unique() expects parameter 1 to be array, string given\
    \ in /tmp/tmporfc7yor.php on line 15\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, string given in /tmp/tmporfc7yor.php on line 15\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmporfc7yor.php:36\nStack trace:\n\
    #0 /tmp/tmporfc7yor.php(44): test()\n#1 {main}\n  thrown in /tmp/tmporfc7yor.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \tif (strlen($s) < 3) {\n\t\treturn false;\n\t}\n\tfor ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n\t\tif ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\
    echo is_happy(\"aa\");\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $length = strlen($s);\n  if ($length >= 3) {\n    for ($i = 2; $i < $length;\
    \ $i++) {\n      if ($s[$i] == $s[$i - 1] || $s[$i] == $s[$i - 2]) {\n       \
    \ return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $happy = false;\n  $count = strlen($s);\n  if($count > 2){\n    $happy = true;\n\
    \    for($i = 0; $i < $count - 2; $i++){\n      if($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]){\n        $happy = false;\n        break;\n      }\n    }\n \
    \ }\n  return $happy;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp503g_kj4.php:34\n\
    Stack trace:\n#0 /tmp/tmp503g_kj4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp503g_kj4.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = count($arr);\n    $k = 0;\n    for ($i\
    \ = 0; $i < $count - 2; $i++) {\n        if ($arr[$i] === $arr[$i + 1] && $arr[$i]\
    \ === $arr[$i + 2]) {\n            $k++;\n        }\n    }\n    if ($k !== 0)\
    \ {\n        return false;\n    } else {\n        return true;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwt1hwl2.php:33\n\
    Stack trace:\n#0 /tmp/tmpmwt1hwl2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmwt1hwl2.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    $res = false;\n    if ($len >= 3) {\n        for\
    \ ($i = 2; $i < $len; $i++) {\n            if ($s[$i] !== $s[$i - 1] && $s[$i]\
    \ !== $s[$i - 2] && $s[$i - 1] !== $s[$i - 2]) {\n                $res = true;\n\
    \            } else {\n                $res = false;\n                break;\n\
    \            }\n        }\n    }\n    return $res;\n}\necho is_happy('a') ? 'True'\
    \ : 'False';\necho \"\\n\";\necho is_happy('aa') ? 'True' : 'False';\necho \"\\\
    n\";\necho is_happy('abcd') ? 'True' : 'False';\necho \"\\n\";\necho is_happy('aabb')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho is_happy('adb') ? 'True' : 'False';\n\
    echo \"\\n\";\necho is_happy('xyy') ? 'True' : 'False';\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nFalse\nTrue\nFalse\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) >= 3){\n        for ($i = 2; $i < strlen($s); $i++){\n   \
    \         if ($s[$i] == $s[$i-1] && $s[$i] == $s[$i-2]){\n                return\
    \ \"False\";\n            }\n        }\n        return \"True\";\n    }\n    return\
    \ \"False\";\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4r31cbbs.php:28\n\
    Stack trace:\n#0 /tmp/tmp4r31cbbs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4r31cbbs.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) return false;\n    $s = str_split($s);\n    for ($i =\
    \ 0; $i < count($s) - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] ==\
    \ $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) return false;\n    }\n    return true;\n\
    }\necho is_happy(\"a\"); // \u279E false\necho is_happy(\"aa\"); // \u279E false\n\
    echo is_happy(\"abc\"); // \u279E true\necho is_happy(\"abcd\"); // \u279E true\n\
    echo is_happy(\"aabb\"); // \u279E false\necho is_happy(\"adb\"); // \u279E true\n\
    echo is_happy(\"xyy\"); // \u279E false\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '111'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $length = strlen($s);\n    if ($length < 3) {\n        return false;\n  \
    \  }\n    $half = floor($length / 3);\n    $current = 0;\n    $compareString =\
    \ '';\n    for ($i = 0; $i < $half; $i++) {\n        $compareString .= $s[$current++];\n\
    \        $compareString .= $s[$current++];\n        $compareString .= $s[$current++];\n\
    \        $compareString .= $s[$current++];\n        if (strlen(count_chars($compareString,\
    \ 3)) !== 4) {\n            return false;\n        }\n        $compareString =\
    \ '';\n    }\n    return true;\n}\n$s = 'adb';\n$s = 'aabb';\n$s = 'abcd';\n$s\
    \ = 'aa';\n$s = 'a';\necho is_happy($s);\nfunction candidate(...$args) {\n   \
    \ return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoolx54d3.php:47\n\
    Stack trace:\n#0 /tmp/tmpoolx54d3.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpoolx54d3.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  return count($s) >= 3 && $s[0] != $s[1] && $s[1] !=\
    \ $s[2] && $s[0] != $s[2];\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxndwklgd.php:28\n\
    Stack trace:\n#0 /tmp/tmpxndwklgd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxndwklgd.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i >\
    \ 0 && $i % 3 == 0) {\n            if (substr($s, $i - 3, 3) == substr($s, $i,\
    \ 3)) {\n                return false;\n            }\n        }\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunnotvxf.php:28\n\
    Stack trace:\n#0 /tmp/tmpunnotvxf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpunnotvxf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n  for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n    \
    \  return false;\n    }\n  }\n  return true;\n}\necho is_happy(\"abcd\") . \"\\\
    n\";\necho is_happy(\"aaabbb\") . \"\\n\";\necho is_happy(\"xyy\") . \"\\n\";\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2rg6b1a.php:34\n\
    Stack trace:\n#0 /tmp/tmpr2rg6b1a.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr2rg6b1a.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $result = false;\n  $length = strlen($s);\n  if ($length >= 3) {\n    $result\
    \ = true;\n    for ($i = 0; $i < $length - 2; $i++) {\n      if ($s[$i] == $s[$i\
    \ + 1] && $s[$i] == $s[$i + 2]) {\n        $result = false;\n        break;\n\
    \      }\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88gt6n5a.php:35\n\
    Stack trace:\n#0 /tmp/tmp88gt6n5a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp88gt6n5a.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzovzual1.php:19\n\
    Stack trace:\n#0 /tmp/tmpzovzual1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzovzual1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    $substrings = [];\n\
    \    for ($i = 0; $i < strlen($s) - 2; $i++) {\n        $substrings[] = substr($s,\
    \ $i, 3);\n    }\n    return count(array_unique($substrings)) === count($substrings);\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgzarbhq.php:30\n\
    Stack trace:\n#0 /tmp/tmpvgzarbhq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvgzarbhq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $length = strlen($s);\n    $arr = [];\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        $s1 = substr($s, $i, 3);\n        if (strlen($s1) == 3) {\n     \
    \       $arr[] = $s1;\n        }\n    }\n    foreach ($arr as $key => $value)\
    \ {\n        if (count(array_unique(str_split($value))) == 1) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4ghwmhk.php:33\n\
    Stack trace:\n#0 /tmp/tmph4ghwmhk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph4ghwmhk.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \tif(strlen($s) < 3) {\n\t\treturn false;\n\t}\n\tfor($i = 0; $i < strlen($s);\
    \ $i+=3) {\n\t\tif(isset($s[$i + 1]) && isset($s[$i + 2])) {\n\t\t\tif($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n\t\t\t\
    \treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\necho is_happy(\"a\")\
    \ . \"\\n\"; // false\necho is_happy(\"aa\") . \"\\n\"; // false\necho is_happy(\"\
    abcd\") . \"\\n\"; // true\necho is_happy(\"aabb\") . \"\\n\"; // false\necho\
    \ is_happy(\"adb\") . \"\\n\"; // true\necho is_happy(\"xyy\") . \"\\n\"; // false\n\
    echo is_happy(\"xyza\") . \"\\n\"; // true\necho is_happy(\"xyzx\") . \"\\n\"\
    ; // false\necho is_happy(\"acccc\") . \"\\n\"; // false\necho is_happy(\"acddd\"\
    ) . \"\\n\"; // true\necho is_happy(\"aaabbcccddd\") . \"\\n\"; // false\necho\
    \ is_happy(\"aaabbccddd\") . \"\\n\"; // true\necho is_happy(\"abcdabcdabcd\"\
    ) . \"\\n\"; // true\necho is_happy(\"abcabcabcabc\") . \"\\n\"; // false\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n1\n\n1\n1\n\n1\n\n\n1\n1\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_v54u20d.php:51\nStack trace:\n#0 /tmp/tmp_v54u20d.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_v54u20d.php on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \tif(strlen($s) < 3) {\n\t\treturn false;\n\t}\n\tfor($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n\t\tif($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i +\
    \ 1] == $s[$i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  if (count($s) < 3) return false;\n  $track = [];\n \
    \ for ($i = 0; $i < count($s) - 2; $i++) {\n    $c = implode(array_slice($s, $i,\
    \ 3));\n    if (isset($track[$c])) return false;\n    $track[$c] = true;\n  }\n\
    \  return true;\n}\n\necho is_happy('a') ? 'true' : 'false';\necho \"\\n\";\n\
    echo is_happy('aa') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('abcd')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho is_happy('aabb') ? 'true' : 'false';\n\
    echo \"\\n\";\necho is_happy('adb') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('xyy')\
    \ ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\nfalse\ntrue\ntrue\ntrue\ntrue\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpscscly8_.php:44\nStack trace:\n#0 /tmp/tmpscscly8_.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpscscly8_.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return strlen($s) >= 3 && preg_match(\"/[^\\w]|([a-zA-Z])\\1{2}/\", $s) ==\
    \ 0;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv60pj1de.php:23\n\
    Stack trace:\n#0 /tmp/tmpv60pj1de.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv60pj1de.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n\n  for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) return false;\n  for ($i = 0; $i < strlen($s) - 2; $i++)\
    \ {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i\
    \ + 2]) {\n      return false;\n    }\n  }\n  return true;\n}\necho is_happy('abcd')\
    \ . \"\\n\";\necho is_happy('adb') . \"\\n\";\necho is_happy('xyy') . \"\\n\"\
    ;\necho is_happy('aabb') . \"\\n\";\necho is_happy('aa') . \"\\n\";\necho is_happy('a')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmtsa0ci.php:22\n\
    Stack trace:\n#0 /tmp/tmptmtsa0ci.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptmtsa0ci.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if (substr($s, $i, 3) === substr($s, $i +\
    \ 1, 3)) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipggh_eh.php:31\n\
    Stack trace:\n#0 /tmp/tmpipggh_eh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpipggh_eh.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return false;\n}\n\n$answers = [\n  false,\n  false,\n  true,\n  false,\n \
    \ true,\n  false\n];\n\n$args = [\n  'a',\n  'aa',\n  'abcd',\n  'aabb',\n  'adb',\n\
    \  'xyy'\n];\n\n$correct = 0;\n$total = count($args);\n\nfor ($i = 0; $i < $total;\
    \ $i++) {\n  $result = is_happy($args[$i]);\n  $color = $result === $answers[$i]\
    \ ? 'green' : 'red';\n  echo \"<span style='color: $color'>$result</span>\";\n\
    \  if ($result === $answers[$i]) {\n    $correct++;\n  }\n}\n\necho \"<hr>Passed:\
    \ $correct/$total tests\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<span style='color: green'></span><span style='color: green'></span><span\
    \ style='color: red'></span><span style='color: green'></span><span style='color:\
    \ red'></span><span style='color: green'></span><hr>Passed: 4/6 tests\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp0kw2uyys.php:54\nStack trace:\n\
    #0 /tmp/tmp0kw2uyys.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp0kw2uyys.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $set = [];\n    for ($i = 0; $i < count($arr)\
    \ - 2; $i++) {\n        if (in_array($arr[$i] . $arr[$i + 1] . $arr[$i + 2], $set))\
    \ {\n            return false;\n        }\n        $set[] = $arr[$i] . $arr[$i\
    \ + 1] . $arr[$i + 2];\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwk3230km.php:28\n\
    Stack trace:\n#0 /tmp/tmpwk3230km.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwk3230km.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $s = array_map(function($char) {\n    return ord($char);\n\
    \  }, $s);\n  $out = [];\n  for ($i = 0; $i < count($s) - 2; $i++) {\n    $out[]\
    \ = abs($s[$i] - $s[$i + 1]) + abs($s[$i + 1] - $s[$i + 2]);\n  }\n  return !in_array(0,\
    \ $out);\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph90dr9lr.php:29\n\
    Stack trace:\n#0 /tmp/tmph90dr9lr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph90dr9lr.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \t$s = str_split($s);\n\t$len = count($s);\n\t$three = $len - 2;\n\t$test = array();\n\
    \t$out = true;\n\tfor ($i = 0; $i < $three; $i++) {\n\t\t$string = '';\n\t\tfor\
    \ ($j = 0; $j < 3; $j++) {\n\t\t\t$string .= $s[$i + $j];\n\t\t}\n\t\t$test[]\
    \ = $string;\n\t}\n\tfor ($i = 0; $i < count($test); $i++) {\n\t\t$count = 0;\n\
    \t\tfor ($j = 0; $j < count($test); $j++) {\n\t\t\tif ($test[$i] == $test[$j])\
    \ {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\tif ($count > 1) {\n\t\t\t$out = false;\n\
    \t\t}\n\t}\n\treturn $out;\n}\necho is_happy('a') . \"\\n\";\necho is_happy('aa')\
    \ . \"\\n\";\necho is_happy('abcd') . \"\\n\";\necho is_happy('aabb') . \"\\n\"\
    ;\necho is_happy('adb') . \"\\n\";\necho is_happy('xyy') . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxaikklm.php:49\n\
    Stack trace:\n#0 /tmp/tmpuxaikklm.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpuxaikklm.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $t='';\n    $split=str_split($s);\n    for($i=0;$i<count($split);$i++){\n\
    \        $t.=$split[$i];\n        if(strlen($t)==3){\n            if($t[0]==$t[1]\
    \ || $t[0]==$t[2] || $t[1]==$t[2]){\n                return false;\n         \
    \   }\n            $t='';\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40bzryw4.php:31\n\
    Stack trace:\n#0 /tmp/tmp40bzryw4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp40bzryw4.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  // Write your code here\n\n  // check if string length is greater than or equal\
    \ to 3\n  if (strlen($s) >= 3) {\n    // loop through string\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n      // check if i plus 1 and i plus 2 are equal\n\
    \      if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2]) {\n        // return\
    \ false if i plus 1 and i plus 2 are equal\n        return False;\n      }\n \
    \   }\n    // return true if string length is greater than or equal to 3\n   \
    \ return True;\n  } else {\n    // return false if string length is less than\
    \ 3\n    return False;\n  }\n}\n\n$a = 'asdf';\necho is_happy($a);\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $bool = false;\n    if (strlen($s) >= 3) {\n        for ($i = 0; $i < strlen($s);\
    \ $i++) {\n            if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) {\n                $bool = false;\n                break;\n\
    \            } else {\n                $bool = true;\n            }\n        }\n\
    \    }\n    return $bool;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5d429j3.php:34\n\
    Stack trace:\n#0 /tmp/tmpn5d429j3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn5d429j3.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) >= 3) {\n        $i = 0;\n        $j = 3;\n        while ($j\
    \ <= strlen($s)) {\n            $substr = substr($s, $i, $j);\n            if\
    \ ($substr == str_repeat($substr[0], 3)) {\n                return false;\n  \
    \          }\n            $i++;\n            $j++;\n        }\n        return\
    \ true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46w6p289.php:36\n\
    Stack trace:\n#0 /tmp/tmp46w6p289.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp46w6p289.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2b12_10e.php:22\n\
    Stack trace:\n#0 /tmp/tmp2b12_10e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2b12_10e.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i +\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    echo is_happy('aa') ? 'True' : 'False';\necho '<br>';\necho is_happy('abcd') ?\
    \ 'True' : 'False';\necho '<br>';\necho is_happy('aabb') ? 'True' : 'False';\n\
    echo '<br>';\necho is_happy('adb') ? 'True' : 'False';\necho '<br>';\necho is_happy('xyy')\
    \ ? 'True' : 'False';\necho '<br>';\necho is_happy('aaaaa') ? 'True' : 'False';\n\
    echo '<br>';\necho is_happy('abccd') ? 'True' : 'False';\necho '<br>';\necho is_happy('aabbc')\
    \ ? 'True' : 'False';\necho '<br>';\necho is_happy('aabbcd') ? 'True' : 'False';\n\
    echo '<br>';\necho is_happy('aaaaabbbbbb') ? 'True' : 'False';\necho '<br>';\n\
    echo is_happy('xyyzzz') ? 'True' : 'False';\necho '<br>';\necho is_happy('aaaaab')\
    \ ? 'True' : 'False';\necho '<br>';\necho is_happy('abcdeg') ? 'True' : 'False';\n\
    echo '<br>';\necho is_happy('aaaaabbbccc') ? 'True' : 'False';\necho '<br>';\n\
    echo is_happy('aaaaaabbbccc') ? 'True' : 'False';\necho '<br>';\necho is_happy('abcccddee')\
    \ ? 'True' : 'False';\necho '<br>';\necho is_happy('abcdee') ? 'True' : '\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpltj174rs.php on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $a = str_split($s);\n  $count = count($a);\n  $i = 0;\n  $b = array();\n  while\
    \ ($i < $count) {\n    $current = substr($s, $i, 3);\n    $b[] = $current;\n \
    \   $i++;\n  }\n  $c = array_count_values($b);\n  $bool = false;\n  foreach ($c\
    \ as $key => $value) {\n    if ($value >= 2) {\n      $bool = true;\n    }\n \
    \ }\n  if ($bool == true || $count < 3) {\n    return false;\n  } else {\n   \
    \ return true;\n  }\n}\nis_happy('aa');\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktosuhke.php:44\n\
    Stack trace:\n#0 /tmp/tmpktosuhke.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpktosuhke.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    // Write your code here...\n    $my_array = str_split($s);\n    if (count($my_array)\
    \ < 3) {\n        return false;\n    }\n    for ($i = 0; $i < count($my_array);\
    \ $i++) {\n        if ($my_array[$i] == $my_array[$i + 1] && $my_array[$i + 1]\
    \ == $my_array[$i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmb48lgd.php:34\n\
    Stack trace:\n#0 /tmp/tmpnmb48lgd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnmb48lgd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  // your code here\n  $strlen = strlen($s);\n  $ishappy = false;\n  if($strlen\
    \ < 3){\n      return $ishappy;\n  }else{\n      for($i = 0; $i < $strlen; $i++){\n\
    \          if($s[$i] == $s[$i+1] && $s[$i+1] == $s[$i+2]){\n              $ishappy\
    \ = false;\n              break;\n          }else{\n              $ishappy = true;\n\
    \          }\n      }\n  }\n  return $ishappy;\n}\necho is_happy(\"hello\");\n\
    echo is_happy(\"abb\");\necho is_happy(\"aaaaabbbb\");\necho is_happy(\"jkhlmm\"\
    );\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4vimjy83.php:43\n\
    Stack trace:\n#0 /tmp/tmp4vimjy83.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp4vimjy83.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return count(array_unique(str_split($s, 3))) === count(str_split($s, 3));\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3g3pshj.php:21\n\
    Stack trace:\n#0 /tmp/tmpp3g3pshj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp3g3pshj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return strlen($s) >= 3 && !preg_match('/(.)\\1\\1/', $s);\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbibf_g1n.php:23\n\
    Stack trace:\n#0 /tmp/tmpbibf_g1n.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbibf_g1n.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n\n  $a = str_split($s);\n  if\
    \ (count($a) < 3) {\n    return false;\n  }\n\n  $result = false;\n  $maxIdx =\
    \ count($a) - 2;\n  for ($i = 0; $i < $maxIdx; $i++) {\n    if ($a[$i] !== $a[$i\
    \ + 1] && $a[$i] !== $a[$i + 2] && $a[$i + 1] !== $a[$i + 2]) {\n      $result\
    \ = true;\n      break;\n    }\n  }\n\n  return $result;\n}\necho is_happy('a')\
    \ ? 'true' : 'false'; //false\necho \"<br>\";\necho is_happy('aa') ? 'true' :\
    \ 'false'; //false\necho \"<br>\";\necho is_happy('abcd') ? 'true' : 'false';\
    \ //true\necho \"<br>\";\necho is_happy('aabb') ? 'true' : 'false'; //false\n\
    echo \"<br>\";\necho is_happy('adb') ? 'true' : 'false'; //true\necho \"<br>\"\
    ;\necho is_happy('xyy') ? 'true' : 'false'; //false\necho \"<br>\";\necho is_happy('xyz')\
    \ ? 'true' : 'false'; //true\necho \"<br>\";\necho is_happy('yz') ? 'true' : 'false';\
    \ //false\necho \"<br>\";\necho is_happy('yyz') ? 'true' : 'false'; //false\n\
    echo \"<br>\";\necho is_happy('aaab') ? 'true' : 'false'; //false\necho \"<br>\"\
    ;\necho is_happy('aaabc') ? 'true' : 'false'; //true\necho \"<br>\";\necho is_happy('aaabcc')\
    \ ? 'true' : 'false'; //true\necho \"<br>\";\necho is_happy('aaabccd') ? 'true'\
    \ : 'false'; //true\necho \"<br>\";\necho is_happy('aaabccde') ? '\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvhpswk_t.php on line 59\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return preg_match('/[a-z]{3}/', $s) ? preg_match('/(.)\\1{2}/', $s) ? false\
    \ : true : false;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfjo0ell.php:23\n\
    Stack trace:\n#0 /tmp/tmpjfjo0ell.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjfjo0ell.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $length = strlen($s);\n  if($length < 3) {\n    return false;\n  }\n  for($i\
    \ = 0; $i < $length - 2; $i++) {\n    if($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n$s = \"abcd\";\necho is_happy($s);\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    print \"Hello world!\"\
    ;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Hello world!\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovqvnhop.php:23\n\
    Stack trace:\n#0 /tmp/tmpovqvnhop.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpovqvnhop.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzmgazk3.php:22\n\
    Stack trace:\n#0 /tmp/tmpwzmgazk3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwzmgazk3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if($count < 3) return false;\n\
    \  $last = [];\n  for($i = 0; $i < $count; $i++) {\n    if(count($last) === 3)\
    \ array_shift($last);\n    if(in_array($s[$i], $last)) return false;\n    $last[]\
    \ = $s[$i];\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $i = 0;\n    $length = strlen($s);\n    if ($length < 3) {\n        return\
    \ false;\n    }\n    while ($i < $length - 2) {\n        if ($s[$i] == $s[$i +\
    \ 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return\
    \ false;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    // Your code here!\n    $arr = str_split($s);\n    $count = 0;\n    for($i\
    \ = 0; $i < count($arr); $i++){\n        if($arr[$i] == $arr[$i+1] && $arr[$i]\
    \ == $arr[$i+2]){\n            $count++;\n        }\n    }\n    if($count > 0){\n\
    \        return false;\n    }else{\n        return true;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzlaov1ya.php:32\n\
    Stack trace:\n#0 /tmp/tmpzlaov1ya.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzlaov1ya.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqq9v5qga.php:20\n\
    Stack trace:\n#0 /tmp/tmpqq9v5qga.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqq9v5qga.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppehivnm8.php:22\n\
    Stack trace:\n#0 /tmp/tmppehivnm8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppehivnm8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i]\
    \ === $arr[$i + 1] && $arr[$i] === $arr[$i + 2]) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ese70jl.php:26\n\
    Stack trace:\n#0 /tmp/tmp2ese70jl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2ese70jl.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $res = false;\n    if (strlen($s) >= 3) {\n        for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n            if ($s[$i] != $s[$i + 1] && $s[$i] != $s[$i + 2] &&\
    \ $s[$i + 1] != $s[$i + 2]) {\n                $res = true;\n            } else\
    \ {\n                $res = false;\n                break;\n            }\n  \
    \      }\n    }\n    return $res;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   $s1 = substr($s, 0, 3);\n    $s2 = $s1[0] . $s1[2] . $s1[1];\n    $s3 = $s1[1]\
    \ . $s1[0] . $s1[2];\n    $s4 = $s1[1] . $s1[2] . $s1[0];\n    $s5 = $s1[2] .\
    \ $s1[0] . $s1[1];\n    $s6 = $s1[2] . $s1[1] . $s1[0];\n    for ($i = 3; $i <\
    \ $len; $i++) {\n        $char = $s[$i];\n        if ($s1[0] == $char || $s1[1]\
    \ == $char || $s1[2] == $char) {\n            return false;\n        }\n     \
    \   $s1 = $s1[1] . $s1[2] . $char;\n        if ($s1 == $s2 || $s1 == $s3 || $s1\
    \ == $s4 || $s1 == $s5 || $s1 == $s6) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5jbpxk_.php:46\n\
    Stack trace:\n#0 /tmp/tmph5jbpxk_.php(51): test()\n#1 {main}\n  thrown in /tmp/tmph5jbpxk_.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    echo is_happy('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy5e6f09z.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $length = strlen($s);\n    if ($length < 3) return false;\n    for ($i =\
    \ 0; $i < $length - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] ==\
    \ $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) return false;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $count = 0;\n    $arr = str_split($s);\n    for ($i = 0; $i < sizeof($arr)\
    \ - 2; $i++) {\n        if ($arr[$i] != $arr[$i + 1] && $arr[$i] != $arr[$i +\
    \ 2] && $arr[$i + 1] != $arr[$i + 2]) {\n            $count++;\n        }\n  \
    \  }\n    if ($count > 0) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\necho is_happy(\"aa\");\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qyz_3uv.php:40\n\
    Stack trace:\n#0 /tmp/tmp0qyz_3uv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0qyz_3uv.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $result = true;\n    $stringLength = strlen($s);\n    if ($stringLength <\
    \ 3) {\n        $result = false;\n    } else {\n        for ($i = 0; $i < $stringLength;\
    \ $i++) {\n            if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n \
    \               $result = false;\n                break;\n            }\n    \
    \    }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37u0gxc6.php:36\n\
    Stack trace:\n#0 /tmp/tmp37u0gxc6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp37u0gxc6.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $n = count($s);\n    for ($i = 0; $i <= $n - 3;\
    \ $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i +\
    \ 1] == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj29vk9jv.php:27\n\
    Stack trace:\n#0 /tmp/tmpj29vk9jv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj29vk9jv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3e4wnl_.php:20\n\
    Stack trace:\n#0 /tmp/tmpn3e4wnl_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpn3e4wnl_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\necho is_happy(\"abcd\");\necho is_happy(\"\
    aabb\");\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd9uo4du.php:33\n\
    Stack trace:\n#0 /tmp/tmprd9uo4du.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprd9uo4du.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $length = strlen($s);\n  if ($length < 3) {\n    return false;\n  }\n  $count\
    \ = 0;\n  $final = [];\n  for ($i = 0; $i < $length; $i++) {\n    $count++;\n\
    \    if ($count == 3) {\n      $count = 0;\n      if (count(array_unique(str_split($final[count($final)-1])))\
    \ < 3) {\n        return false;\n      }\n    }\n    $final[count($final)] .=\
    \ $s[$i];\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2s2uqqba.php:38\n\
    Stack trace:\n#0 /tmp/tmp2s2uqqba.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2s2uqqba.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   $arr = str_split($s);\n    for ($i = 0; $i < $len - 2; $i++) {\n        if\
    \ ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $l = strlen($s);\n    if ($l<3) return False;\n    for ($i=2; $i<$l; $i++)\
    \ {\n        if ($s[$i] == $s[$i-1] && $s[$i] == $s[$i-2]) return False;\n   \
    \ }\n    return True;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpror1goau.php:29\n\
    Stack trace:\n#0 /tmp/tmpror1goau.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpror1goau.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n  else {\n    $array = str_split($s);\n\
    \    $result = [];\n    for ($i = 0; $i < count($array) - 2; $i++) {\n      if\
    \ ($array[$i] != $array[$i + 1] && $array[$i] != $array[$i + 2] && $array[$i +\
    \ 1] != $array[$i + 2]) {\n        $result[] = true;\n      }\n      else {\n\
    \        $result[] = false;\n      }\n    }\n    if (in_array(false, $result))\
    \ {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $size=strlen($s);\n    if($size<3) return false;\n    $check='';\n    for($i=0;$i<$size;$i++){\n\
    \      if($i<$size-2) $check .= $s[$i];\n      if($check==substr($s,$i+1,3)) return\
    \ false;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpajdm25at.php:31\n\
    Stack trace:\n#0 /tmp/tmpajdm25at.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpajdm25at.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return count($s) >= 3 && count(array_unique(str_split($s, 3))) === 1;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpfyhbg63w.php on line 13\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpfyhbg63w.php\
    \ on line 13\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpfyhbg63w.php on line 13\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpfyhbg63w.php:22\nStack trace:\n#0 /tmp/tmpfyhbg63w.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfyhbg63w.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \tif(strlen($s) < 3) {\n\t\treturn false;\n\t}\n\tfor($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\tif($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] ==\
    \ $s[$i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1kfa7v9.php:30\n\
    Stack trace:\n#0 /tmp/tmpr1kfa7v9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpr1kfa7v9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $substr = substr($s, 0, 3);\n    if(strlen($s) < 3) {\n        return false;\n\
    \    }\n    for($i = 0; $i < strlen($s); $i++) {\n        if(substr_count($substr,\
    \ $s[$i]) > 1) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprpz662pi.php:37\n\
    Stack trace:\n#0 /tmp/tmprpz662pi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprpz662pi.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if (isset($s[$i + 2])) {\n      if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n        return false;\n      }\n\
    \    }\n  }\n\n  return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $ret = false;\n    if (strlen($s) < 3) {\n        $ret = false;\n    } else\
    \ {\n        $arr = str_split($s);\n        $res = [];\n        $tmp = 0;\n  \
    \      for ($i = 0; $i < count($arr); $i++) {\n            if ($i % 3 === 0) {\n\
    \                $tmp = 0;\n            }\n            $res[$i] = $tmp | (1 <<\
    \ $arr[$i]);\n            $tmp = $res[$i];\n            if ($res[$i] === 7) {\n\
    \                $ret = true;\n            }\n        }\n    }\n    return $ret;\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0v1plbfm.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp0v1plbfm.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp0v1plbfm.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp0v1plbfm.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0v1plbfm.php:40\n\
    Stack trace:\n#0 /tmp/tmp0v1plbfm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp0v1plbfm.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $chunks = array_chunk($s, 3);\n  foreach ($chunks as\
    \ $chunk) {\n    if (count(array_unique($chunk)) < 3) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpex2tau_a.php:29\n\
    Stack trace:\n#0 /tmp/tmpex2tau_a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpex2tau_a.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \tif(strlen($s) < 3) {\n\t\treturn false;\n\t}\n\tif(strlen($s) === 3) {\n\t\t\
    if($s[0] !== $s[1] && $s[1] !== $s[2] && $s[0] !== $s[2]) {\n\t\t\treturn true;\n\
    \t\t}\n\t\treturn false;\n\t}\n\tfor($i = 0; $i < strlen($s) - 2; $i++) {\n\t\t\
    if($s[$i] === $s[$i + 1] || $s[$i + 1] === $s[$i + 2] || $s[$i] === $s[$i + 2])\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) return false;\n  if (strlen($s) === 3) return true;\n \
    \ for ($i = 0; $i < strlen($s); $i+=3) {\n    if ($s[$i] === $s[$i+1] || $s[$i]\
    \ === $s[$i+2] || $s[$i+1] === $s[$i+2]) return false;\n  }\n  return true;\n\
    }\necho is_happy('abcd') . \"\\n\";\necho is_happy('aabb') . \"\\n\";\necho is_happy('aa')\
    \ . \"\\n\";\necho is_happy('a') . \"\\n\";\necho is_happy('adb') . \"\\n\";\n\
    echo is_happy('xyy') . \"\\n\";\necho is_happy('aaaa') . \"\\n\";\necho is_happy('aaab')\
    \ . \"\\n\";\necho is_happy('abaa') . \"\\n\";\necho is_happy('abbb') . \"\\n\"\
    ;\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n1\n1\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpq9s6wc4k.php:38\nStack trace:\n#0 /tmp/tmpq9s6wc4k.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpq9s6wc4k.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  foreach ($s as $i => $v) {\n    if (isset($s[$i + 1])\
    \ && isset($s[$i + 2])) {\n      if ($v === $s[$i + 1] && $v === $s[$i + 2]) return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsc50tgs.php:27\n\
    Stack trace:\n#0 /tmp/tmpqsc50tgs.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqsc50tgs.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = 0;\n    $char = '';\n    for ($i = 0;\
    \ $i < count($arr); $i++) {\n        if ($arr[$i] != $char) {\n            $count++;\n\
    \            $char = $arr[$i];\n        }\n        if ($count == 3) {\n      \
    \      $count = 0;\n            if ($arr[$i] == $arr[$i - 1] && $arr[$i] == $arr[$i\
    \ - 2]) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5txk4cg.php:35\n\
    Stack trace:\n#0 /tmp/tmpl5txk4cg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl5txk4cg.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) return false;\n  for ($i = 0; $i < strlen($s) - 2; $i++)\
    \ {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i\
    \ + 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  $prev = null;\n\
    \  $prevPrev = null;\n  for ($i = 0; $i < $len; $i++) {\n    if ($prev === $s[$i]\
    \ || $prevPrev === $s[$i]) {\n      return false;\n    }\n    $prevPrev = $prev;\n\
    \    $prev = $s[$i];\n  }\n  return true;\n}\necho is_happy('a') . PHP_EOL;\n\
    echo is_happy('aa') . PHP_EOL;\necho is_happy('abcd') . PHP_EOL;\necho is_happy('aabb')\
    \ . PHP_EOL;\necho is_happy('adb') . PHP_EOL;\necho is_happy('xyy') . PHP_EOL;\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return ((strlen($s) >= 3) && (strlen($s) == sizeof(array_unique(str_split($s,\
    \ 3)))));\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpht8bdlde.php:23\n\
    Stack trace:\n#0 /tmp/tmpht8bdlde.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpht8bdlde.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    // return true;\n    return preg_match('/^(?!.*(.).*\\1)(?!.*(.).*\\2)(?!.*(.).*\\\
    3)(?:([a-z])\\1|[a-z])$/', $s);\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpxizui6.php:21\n\
    Stack trace:\n#0 /tmp/tmpvpxizui6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvpxizui6.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    }\necho(is_happy('xyy') ? 'TRUE' : 'FALSE') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "FALSE\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vudk343.php:20\n\
    Stack trace:\n#0 /tmp/tmp2vudk343.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2vudk343.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 2; $i\
    \ < strlen($s); $i++) {\n        if ($s[$i] == $s[$i - 1] && $s[$i] == $s[$i -\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv2qsr8k.php:32\n\
    Stack trace:\n#0 /tmp/tmpuv2qsr8k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuv2qsr8k.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $strArr = str_split($s);\n  for ($i = 0; $i < count($strArr) - 2; $i++) {\n\
    \    if ($strArr[$i] === $strArr[$i + 1] || $strArr[$i] === $strArr[$i + 2] ||\
    \ $strArr[$i + 1] === $strArr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvg7o8a8.php:26\n\
    Stack trace:\n#0 /tmp/tmppvg7o8a8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppvg7o8a8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) return false;\n    $happy = true;\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if ($s[$i] === $s[$i + 1] && $s[$i] === $s[$i\
    \ + 2]) {\n            $happy = false;\n            break;\n        }\n    }\n\
    \    return $happy;\n}\n\necho is_happy('abcd'); // True\necho is_happy('aa');\
    \ // False\necho is_happy('aabb'); // False\necho is_happy('xyy'); // False\n\
    echo is_happy('a'); // False\necho is_happy('adb'); // True\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppc3_7b7n.php:38\n\
    Stack trace:\n#0 /tmp/tmppc3_7b7n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppc3_7b7n.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  // Your code here!\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnsb63es.php:20\n\
    Stack trace:\n#0 /tmp/tmpwnsb63es.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwnsb63es.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $res = str_split($s);\n    foreach($res as $key => $value){\n        if($key+2\
    \ < count($res)){\n            if($value === $res[$key+1] && $value === $res[$key+2]){\n\
    \                return false;\n            }\n        }\n    }\n    return count($res)\
    \ > 2;\n}\necho \"abcd\" . \" \" . is_happy(\"abcd\") . \"<br>\";\necho \"aabb\"\
    \ . \" \" . is_happy(\"aabb\") . \"<br>\";\necho \"adb\" . \" \" . is_happy(\"\
    adb\") . \"<br>\";\necho \"xyy\" . \" \" . is_happy(\"xyy\") . \"<br>\";\necho\
    \ \"a\" . \" \" . is_happy(\"a\") . \"<br>\";\necho \"aa\" . \" \" . is_happy(\"\
    aa\") . \"<br>\";\necho \"abcdabcdabcd\" . \" \" . is_happy(\"abcdabcdabcd\")\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "abcd 1<br>aabb 1<br>adb 1<br>xyy 1<br>a <br>aa <br>abcdabcdabcd 1<br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpoqbmh1h8.php:38\nStack\
    \ trace:\n#0 /tmp/tmpoqbmh1h8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpoqbmh1h8.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $length = strlen($s);\n    if ($length < 3) return\
    \ false;\n    for ($i = 0; $i < $length - 2; $i++) {\n        if ($arr[$i] ==\
    \ $arr[$i + 1] && $arr[$i] == $arr[$i + 2]) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\necho is_happy(\"aabb\") . \"<br>\";\necho\
    \ is_happy(\"abcd\") . \"<br>\";\necho is_happy(\"xyy\") . \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitk1exvz.php:35\n\
    Stack trace:\n#0 /tmp/tmpitk1exvz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpitk1exvz.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $same = 0;\n  $s = str_split($s);\n  for ($i = 0; $i < count($s) - 2; $i++)\
    \ {\n    if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n      $same++;\n\
    \    }\n  }\n  return $same == 0;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqvbc8xw.php:27\n\
    Stack trace:\n#0 /tmp/tmpsqvbc8xw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsqvbc8xw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   $happy = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $happy = 0;\n  \
    \      for ($j = $i; $j < $len; $j++) {\n            if ($j == $i) {\n       \
    \         $happy++;\n            } else if ($s[$j] != $s[$i]) {\n            \
    \    $happy++;\n            } else {\n                break;\n            }\n\
    \        }\n        if ($happy >= 3) {\n            break;\n        }\n    }\n\
    \    if ($happy >= 3) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkax_xii.php:48\n\
    Stack trace:\n#0 /tmp/tmppkax_xii.php(55): test()\n#1 {main}\n  thrown in /tmp/tmppkax_xii.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) >= 3) {\n        if ($s[0] !== $s[1] && $s[1] !== $s[2] &&\
    \ $s[0] !== $s[2]) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\necho is_happy(\"abcd\") . PHP_EOL;\necho is_happy(\"aabb\") . PHP_EOL;\n\
    echo is_happy(\"adb\") . PHP_EOL;\necho is_happy(\"xyy\") . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6otmavz0.php:37\n\
    Stack trace:\n#0 /tmp/tmp6otmavz0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6otmavz0.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $happy = false;\n  if (strlen($s) >= 3) {\n    $arr = str_split($s);\n    for\
    \ ($i = 0; $i < count($arr); $i += 3) {\n      if ($arr[$i] != $arr[$i + 1] &&\
    \ $arr[$i] != $arr[$i + 2] && $arr[$i + 1] != $arr[$i + 2]) {\n        $happy\
    \ = true;\n      } else {\n        $happy = false;\n        break;\n      }\n\
    \    }\n  }\n  return $happy;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppq5l3h3q.php:34\n\
    Stack trace:\n#0 /tmp/tmppq5l3h3q.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppq5l3h3q.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return (strlen($s) >= 3 && preg_match('/(.)(.*)\\1/', $s)) ? false : true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskqh95lu.php:21\n\
    Stack trace:\n#0 /tmp/tmpskqh95lu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpskqh95lu.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if ( strlen($s) < 3 ) {\n    return False;\n  } else {\n    for ($i=0; $i <\
    \ strlen($s)-2; $i++) {\n      if ( $s[$i] == $s[$i+1] || $s[$i] == $s[$i+2] ||\
    \ $s[$i+1] == $s[$i+2] ) {\n        return False;\n      }\n    }\n    return\
    \ True;\n  }\n}\necho is_happy('a'); // False\necho '<br>';\necho is_happy('aa');\
    \ // False\necho '<br>';\necho is_happy('abcd'); // True\necho '<br>';\necho is_happy('aabb');\
    \ // False\necho '<br>';\necho is_happy('adb'); // True\necho '<br>';\necho is_happy('xyy');\
    \ // False\n ?>\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br>1<br><br>1<br>function candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $letters = str_split($s);\n  $letterLength = count($letters);\n  if ($letterLength\
    \ < 3) {\n    return false;\n  }\n  for ($i = 2; $i < $letterLength; $i++) {\n\
    \    if ($letters[$i] == $letters[$i - 1] && $letters[$i] == $letters[$i - 2])\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_i387m9.php:34\n\
    Stack trace:\n#0 /tmp/tmpw_i387m9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw_i387m9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $array = str_split($s);\n  if (count($array) < 3) {\n    return false;\n  }\
    \ else {\n    for ($i = 0; $i < count($array); $i++) {\n      if (isset($array[$i\
    \ + 1]) && isset($array[$i + 2])) {\n        if ($array[$i] == $array[$i + 1]\
    \ || $array[$i] == $array[$i + 2] || $array[$i + 1] == $array[$i + 2]) {\n   \
    \       return false;\n        }\n      }\n    }\n    return true;\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) >= 3) {\n    for ($i = 0; $i < strlen($s); $i++) {\n      if\
    \ ($s[$i] == $s[$i + 1] && $s[$i + 1] == $s[$i + 2]) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplww2fuct.php:31\n\
    Stack trace:\n#0 /tmp/tmplww2fuct.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplww2fuct.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) return false;\n    $start = 0;\n    $end = 3;\n    $chars\
    \ = [];\n    while ($end <= strlen($s)) {\n        $chars[] = substr($s, $start,\
    \ $end);\n        $start++;\n        $end++;\n    }\n    foreach ($chars as $chars)\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($chars); $i++) {\n\
    \            if (substr_count($chars, $chars[$i]) > 1) {\n                $count++;\n\
    \            }\n        }\n        if ($count > 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho is_happy('abcd');\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2hsvcj3.php:47\n\
    Stack trace:\n#0 /tmp/tmpr2hsvcj3.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpr2hsvcj3.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    return count(array_unique(str_split($s,\
    \ 3))) === count(str_split($s, 3));\n}\n\nprint_r(is_happy('abcd'));\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphuzsi77y.php:28\n\
    Stack trace:\n#0 /tmp/tmphuzsi77y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphuzsi77y.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  \n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_7o1hpq.php:20\n\
    Stack trace:\n#0 /tmp/tmpy_7o1hpq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpy_7o1hpq.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \tif (strlen($s)<3) return false;\n\t$s = str_split($s);\n\tfor ($i=0; $i<count($s)-2;\
    \ $i++) {\n\t\tif ($s[$i]==$s[$i+1]||$s[$i]==$s[$i+2]||$s[$i+1]==$s[$i+2]) return\
    \ false;\n\t}\n\treturn true;\n}\nprint_r(is_happy('a'));\nprint_r(is_happy('aa'));\n\
    print_r(is_happy('abcd'));\nprint_r(is_happy('aabb'));\nprint_r(is_happy('adb'));\n\
    print_r(is_happy('xyy'));\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return $s;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaw02ncb4.php:21\n\
    Stack trace:\n#0 /tmp/tmpaw02ncb4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpaw02ncb4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $stringlength = strlen($s);\n    $chars = array();\n    $result = false;\n\
    \    if($stringlength >= 3){\n        for($i = 0; $i < $stringlength; $i++){\n\
    \            if(!in_array($s[$i], $chars)){\n                $chars[] = $s[$i];\n\
    \            }\n        }\n        if(count($chars) == 3){\n            $result\
    \ = true;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9fa2m029.php:36\n\
    Stack trace:\n#0 /tmp/tmp9fa2m029.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9fa2m029.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n  for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) return false;\n    $first = $s[0];\n\
    \    $second = $s[1];\n    $third = $s[2];\n    if ($first == $second || $first\
    \ == $third || $second == $third) return false;\n    for ($i = 1; $i < $len -\
    \ 2; $i++) {\n        $first = $s[$i];\n        $second = $s[$i + 1];\n      \
    \  $third = $s[$i + 2];\n        if ($first == $second || $first == $third ||\
    \ $second == $third) return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $prev2 = '';\n    $prev1 = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if ($prev2 != '' && $prev1 != '' && $s[$i] == $prev2 && $s[$i] == $prev1)\
    \ {\n            return false;\n        }\n        $prev2 = $prev1;\n        $prev1\
    \ = $s[$i];\n    }\n    return true;\n}\n\necho is_happy('aabb');\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybh8kipj.php:31\n\
    Stack trace:\n#0 /tmp/tmpybh8kipj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpybh8kipj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) return false;\n    if ($len == 3) return\
    \ $s[0] != $s[1] && $s[1] != $s[2] && $s[0] != $s[2];\n    $f = 0;\n    for ($i\
    \ = 0; $i < $len - 2; $i++) {\n        if ($s[$i] != $s[$i + 1] && $s[$i + 1]\
    \ != $s[$i + 2] && $s[$i] != $s[$i + 2]) {\n            $f = 1;\n            break;\n\
    \        }\n    }\n    return $f;\n}\necho \"Is happy: \" . is_happy(\"abcd\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Is happy: 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xzqx8h2.php:33\n\
    Stack trace:\n#0 /tmp/tmp8xzqx8h2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8xzqx8h2.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \   for($i=0;$i<strlen($s)-2;$i++){\n   \t\t$s1=substr($s,$i,3);\n   \t\tif($s1[0]==$s1[1]\
    \ || $s1[0]==$s1[2] || $s1[1]==$s1[2]){\n   \t\t\treturn false;\n   \t\t}\n  \
    \ }\n   return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfjsab_08.php:26\n\
    Stack trace:\n#0 /tmp/tmpfjsab_08.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfjsab_08.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $length = strlen($s);\n  $result = true;\n  if ($length < 3) {\n    $result\
    \ = false;\n  } else {\n    for ($i = 0; $i < $length; $i++) {\n      $current\
    \ = $s[$i];\n      $next = $s[$i + 1];\n      $nextnext = $s[$i + 2];\n      if\
    \ ($current === $next) {\n        $result = false;\n        break;\n      }\n\
    \      if ($current === $nextnext) {\n        $result = false;\n        break;\n\
    \      }\n      if ($next === $nextnext) {\n        $result = false;\n       \
    \ break;\n      }\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3bupear.php:46\n\
    Stack trace:\n#0 /tmp/tmpp3bupear.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpp3bupear.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    $str = str_split($s);\n\
    \    for ($i = 0; $i < count($str) - 2; $i++) {\n        if ($str[$i] == $str[$i\
    \ + 1] || $str[$i] == $str[$i + 2] || $str[$i + 1] == $str[$i + 2]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\necho is_happy('a')\
    \ . PHP_EOL;\necho is_happy('aa') . PHP_EOL;\necho is_happy('abcd') . PHP_EOL;\n\
    echo is_happy('aabb') . PHP_EOL;\necho is_happy('adb') . PHP_EOL;\necho is_happy('xyy')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $length = strlen($s);\n    if ($length < 3) return false;\n    for ($i =\
    \ 0; $i < $length; $i += 3) {\n        $substr = substr($s, $i, 3);\n        if\
    \ (strlen($substr) < 3) break;\n        $arr = str_split($substr);\n        if\
    \ (count(array_unique($arr)) !== 3) return false;\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_r0s3t1.php:35\n\
    Stack trace:\n#0 /tmp/tmpx_r0s3t1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpx_r0s3t1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $array = str_split($s);\n  $newArray = [];\n  $bool = false;\n  if(strlen($s)\
    \ >= 3){\n    foreach($array as $letter){\n      if(!in_array($letter, $newArray)){\n\
    \        array_push($newArray, $letter);\n      }\n    }\n    if(sizeof($newArray)\
    \ >= 3){\n      $bool = true;\n    }\n  }\n  return $bool;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3a_1_fgw.php:40\n\
    Stack trace:\n#0 /tmp/tmp3a_1_fgw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3a_1_fgw.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $str = str_split($s);\n  $result = false;\n  for ($i = 0; $i < count($str);\
    \ $i++){\n    if ($str[$i] != $str[$i+1] || $str[$i] != $str[$i+2]){\n      $result\
    \ = true;\n    } else {\n      $result = false;\n      break;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6fsviers.php:31\n\
    Stack trace:\n#0 /tmp/tmp6fsviers.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6fsviers.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $uniqueArray = array_unique(str_split($s));\n  if (count($uniqueArray) >= 3)\
    \ {\n    return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwa2ipnat.php:32\n\
    Stack trace:\n#0 /tmp/tmpwa2ipnat.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwa2ipnat.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $newarr = array_count_values($arr);\n    foreach ($newarr as $key\
    \ => $value) {\n        if ($value >= 3) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnc9uj40a.php:33\n\
    Stack trace:\n#0 /tmp/tmpnc9uj40a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnc9uj40a.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return preg_match('/(.)(?<!\\1)(.)(?<!\\1|\\2)\\1/m', $s) === 1;\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvntzsx4u.php:22\n\
    Stack trace:\n#0 /tmp/tmpvntzsx4u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvntzsx4u.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \   $len = strlen($s);\n   if ($len < 3) {\n     return false;\n   }\n   $arr\
    \ = array();\n   for ($i = 0; $i < $len - 2; $i++) {\n     $char = $s[$i];\n \
    \    if ($char == $s[$i + 1] && $char == $s[$i + 2]) {\n       return false;\n\
    \     }\n   }\n   return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqdip5x1.php:35\n\
    Stack trace:\n#0 /tmp/tmpbqdip5x1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbqdip5x1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n\n  for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 2; $i\
    \ < strlen($s); $i++) {\n        if ($s[$i] == $s[$i - 1] && $s[$i] == $s[$i -\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    echo is_happy(\"aabb\");\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf34nd9yt.php:33\n\
    Stack trace:\n#0 /tmp/tmpf34nd9yt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpf34nd9yt.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $length = strlen($s);\n    $l = 0;\n    while ($l < $length) {\n        if\
    \ (($l + 2) < $length) {\n            if ($s[$l] == $s[$l + 1] || $s[$l] == $s[$l\
    \ + 2] || $s[$l + 1] == $s[$l + 2]) {\n                return false;\n       \
    \     }\n        }\n        $l++;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyg8721c9.php:30\n\
    Stack trace:\n#0 /tmp/tmpyg8721c9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyg8721c9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  // TODO\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn4o8sj9.php:20\n\
    Stack trace:\n#0 /tmp/tmpjn4o8sj9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjn4o8sj9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n  for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n    if (substr($s, $i, 3) === substr($s, $i + 1, 3)) {\n     \
    \ return false;\n    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp884j7k08.php:31\n\
    Stack trace:\n#0 /tmp/tmp884j7k08.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp884j7k08.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    for ($i = 2; $i < count($s); $i++) {\n        if\
    \ ($s[$i] == $s[$i - 1] && $s[$i] == $s[$i - 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho is_happy(\"aabb\");\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfkq1yb4.php:27\n\
    Stack trace:\n#0 /tmp/tmpdfkq1yb4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdfkq1yb4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n\n  $compare = str_split($s);\n\
    \  $flag = true;\n  for ($i = 0; $i < strlen($s) - 2; $i++) {\n    if ($compare[$i]\
    \ === $compare[$i + 1] || $compare[$i] === $compare[$i + 2] || $compare[$i + 1]\
    \ === $compare[$i + 2]) {\n      $flag = false;\n    }\n  }\n  return $flag;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) <= 2) {\n    return false;\n  }\n  for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $all_unique = [];\n    for ($i = 0; $i < sizeof($s);\
    \ $i++) {\n        if ($i === sizeof($s) - 1) {\n            $all_unique[] = [$s[$i],\
    \ $s[0], $s[1]];\n        } else if ($i === sizeof($s) - 2) {\n            $all_unique[]\
    \ = [$s[$i], $s[$i + 1], $s[0]];\n        } else {\n            $all_unique[]\
    \ = [$s[$i], $s[$i + 1], $s[$i + 2]];\n        }\n    }\n    foreach ($all_unique\
    \ as $tri) {\n        if (sizeof(array_unique($tri)) !== 3) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\necho is_happy('adb') . \"\\n\"\
    ; // True\necho is_happy('xyy') . \"\\n\"; // False\necho is_happy('abcd') . \"\
    \\n\"; // True\necho is_happy('aabb') . \"\\n\"; // False\necho is_happy('aa')\
    \ . \"\\n\"; // False\necho is_happy('aa') . \"\\n\"; // False\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0lfasg83.php:49\n\
    Stack trace:\n#0 /tmp/tmp0lfasg83.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp0lfasg83.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $happy = true;\n    if (strlen($s) < 3) {\n        $happy = false;\n    }\
    \ else {\n        for ($i = 0; $i < strlen($s) - 2; $i++) {\n            if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \           $happy = false;\n            }\n        }\n    }\n    return $happy;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $array = str_split($s);\n    foreach ($array as $key => $value) {\n     \
    \   if ($value === $array[$key+1] && $value === $array[$key+2]) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}\n\necho is_happy(\"abcd\"\
    ) . \"\\n\"; //true\necho is_happy(\"aabb\") . \"\\n\"; //false\necho is_happy(\"\
    xyy\") . \"\\n\"; //false\necho is_happy(\"xyyyy\") . \"\\n\"; //true\necho is_happy(\"\
    xyzw\"); //true\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6eevy_o.php:32\n\
    Stack trace:\n#0 /tmp/tmp_6eevy_o.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_6eevy_o.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $i = 0;\n  $len = strlen($s);\n  if($len < 3) return false;\n  for($i = 0;\
    \ $i < $len; $i++){\n    if($s[$i] === $s[$i+1] || $s[$i] === $s[$i+2] || $s[$i+1]\
    \ === $s[$i+2]){\n      return false;\n    }\n  }\n  return true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprtenqt71.php:30\n\
    Stack trace:\n#0 /tmp/tmprtenqt71.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprtenqt71.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  for ($i = 0; $i < strlen($s); $i++) {\n    if ($arr[$i]\
    \ === $arr[$i + 1] && $arr[$i] === $arr[$i + 2]) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1bxih7pb.php:27\n\
    Stack trace:\n#0 /tmp/tmp1bxih7pb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1bxih7pb.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if (substr($s, $i, 3) === substr($s, $i +\
    \ 1, 3)) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprnpjogi6.php:31\n\
    Stack trace:\n#0 /tmp/tmprnpjogi6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprnpjogi6.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \t$s = array_values(array_unique(str_split($s)));\n\tfor ($i = 2; $i < count($s);\
    \ $i++) {\n\t\tif ($s[$i] == $s[$i - 1] || $s[$i] == $s[$i - 2]) return false;\n\
    \t}\n\treturn true;\n}\necho is_happy('abcd') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprds4qgx5.php:25\n\
    Stack trace:\n#0 /tmp/tmprds4qgx5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprds4qgx5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return False;\n  }\n  for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) {\n      return False;\n    }\n  }\n  return True;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $string = str_split($s);\n  if (count($string) < 3) {\n    return false;\n\
    \  }\n  $index = 0;\n  while ($index < count($string) - 2) {\n    if ($string[$index]\
    \ === $string[$index + 1] || $string[$index] === $string[$index + 2] || $string[$index\
    \ + 1] === $string[$index + 2]) {\n      return false;\n    }\n    $index++;\n\
    \  }\n  return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  for ($i = 0; $i < (count($s) - 2); $i++) {\n    if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \ return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvfb18nf.php:27\n\
    Stack trace:\n#0 /tmp/tmptvfb18nf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptvfb18nf.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $length = strlen($s);\n    if ($length < 3) return false;\n    for ($i =\
    \ 0; $i < $length - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i] ==\
    \ $s[$i + 2]) return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudpl440l.php:29\n\
    Stack trace:\n#0 /tmp/tmpudpl440l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpudpl440l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) return false;\n    $test = str_split($s, 3);\n    return\
    \ count(array_unique($test)) == count($test);\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp178n9fsp.php:25\n\
    Stack trace:\n#0 /tmp/tmp178n9fsp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp178n9fsp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return False;\n    }\n    $test = substr($s,\
    \ 0, 3);\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($test[0] == $test[1]\
    \ && $test[1] == $test[2]) {\n            return False;\n        }\n        $test\
    \ = substr($s, $i, 3);\n    }\n    return True;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5qsdama.php:33\n\
    Stack trace:\n#0 /tmp/tmpv5qsdama.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpv5qsdama.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $result = false;\n  if(strlen($s)>=3){\n    $arr = str_split($s);\n    for($i=0;$i<count($arr)-2;$i++){\n\
    \      if($arr[$i]!=$arr[$i+1] && $arr[$i]!=$arr[$i+2] && $arr[$i+1]!=$arr[$i+2]){\n\
    \        $result = true;\n      }else{\n        $result = false;\n        break;\n\
    \      }\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n \
    \   return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) return false;\n  for ($i = 0; $i < strlen($s) - 2; $i++)\
    \ {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i\
    \ + 2]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $c = strlen($s);\n    $i = 0;\n    while ($i <= $c-3) {\n        if (strstr($s,\
    \ substr($s, $i, 3))) {\n            return false;\n        }\n        $i++;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpin4lr5j2.php:29\n\
    Stack trace:\n#0 /tmp/tmpin4lr5j2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpin4lr5j2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    for ($i = 2; $i < $len; $i++) {\n        if ($s[$i\
    \ - 2] == $s[$i - 1] && $s[$i - 1] == $s[$i])\n            return false;\n   \
    \ }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8utlp0p6.php:25\n\
    Stack trace:\n#0 /tmp/tmp8utlp0p6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8utlp0p6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $foundHappy = true;\n  $length = strlen($s);\n  $i = 0;\n  $current = $s[$i];\n\
    \  $next = $s[$i + 1];\n  $nextNext = $s[$i + 2];\n  while ($i <= $length - 3)\
    \ {\n    if ($current == $next && $current == $nextNext) {\n      $foundHappy\
    \ = false;\n      break;\n    }\n    $i++;\n    $current = $s[$i];\n    $next\
    \ = $s[$i + 1];\n    $nextNext = $s[$i + 2];\n  }\n  return $foundHappy;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ed1n7ht.php:36\n\
    Stack trace:\n#0 /tmp/tmp1ed1n7ht.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1ed1n7ht.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return False;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return False;\n        }\n\
    \    }\n    return True;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \tif (strlen($s) < 3) {\n\t\treturn false;\n\t}\n\t$array = str_split($s);\n\t\
    for ($i = 0; $i < count($array) - 2; $i++) {\n\t\tif ($array[$i] == $array[$i\
    \ + 1] || $array[$i] == $array[$i + 2] || $array[$i + 1] == $array[$i + 2]) {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return\n  (strlen($s) >= 3 && $s[0] != $s[1] && $s[1] != $s[2] && $s[0] !=\
    \ $s[2]) ||\n  (strlen($s) >= 4 && $s[1] != $s[2] && $s[2] != $s[3] && $s[1] !=\
    \ $s[3]) ||\n  (strlen($s) >= 5 && $s[2] != $s[3] && $s[3] != $s[4] && $s[2] !=\
    \ $s[4]);\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaw0zleo7.php:31\n\
    Stack trace:\n#0 /tmp/tmpaw0zleo7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpaw0zleo7.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) <= 2) {\n        return false;\n    }\n    $split_string =\
    \ str_split($s);\n    $temp_string = '';\n    $res = '';\n    for ($i = 0; $i\
    \ < count($split_string); $i++) {\n        if ($temp_string != '') {\n       \
    \     $temp_string .= $split_string[$i];\n            if (strlen($temp_string)\
    \ === 3) {\n                $res .= $temp_string[0];\n                if ($temp_string[0]\
    \ === $temp_string[1] || $temp_string[0] === $temp_string[2] || $temp_string[1]\
    \ === $temp_string[2]) {\n                    return false;\n                }\n\
    \                $temp_string = '';\n            }\n        } else {\n       \
    \     $temp_string .= $split_string[$i];\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjixn82k.php:47\n\
    Stack trace:\n#0 /tmp/tmpdjixn82k.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdjixn82k.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\nprint_r(is_happy('a'));\nprint_r(is_happy('aa'));\n\
    print_r(is_happy('abcd'));\nprint_r(is_happy('aabb'));\nprint_r(is_happy('adb'));\n\
    print_r(is_happy('xyy'));\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \t$happy = true;\n\tif (strlen($s) >= 3) {\n\t\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t\tif ($s[$i] == $s[$i + 1] && $s[$i + 1] == $s[$i + 2]) {\n\t\t\
    \t\t$happy = false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$happy = false;\n\t}\n\t\
    return $happy;\n}\necho is_happy('abcd');\necho is_happy('aabb');\necho is_happy('xyy');\n\
    echo is_happy('aabbccddeefg');\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_zi1wnl.php:37\n\
    Stack trace:\n#0 /tmp/tmpv_zi1wnl.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpv_zi1wnl.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return (strlen($s) >= 3) && !preg_match('/(.)\\1\\1/', $s);\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0crfj48.php:23\n\
    Stack trace:\n#0 /tmp/tmpe0crfj48.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe0crfj48.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \t$i = 0;\n\t$arr = str_split($s);\n\twhile ( $i < count($arr) - 2 ) {\n\t\t$ch\
    \ = $arr[$i];\n\t\t$ch2 = $arr[$i + 1];\n\t\t$ch3 = $arr[$i + 2];\n\t\tif ( $ch\
    \ == $ch2 ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( $ch == $ch3 ) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t\tif ( $ch2 == $ch3 ) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn true;\n}\necho \"Test 1: \" . is_happy(\"abc\") . \"\\n\";\necho\
    \ \"Test 2: \" . is_happy(\"abcd\") . \"\\n\";\necho \"Test 3: \" . is_happy(\"\
    abaa\") . \"\\n\";\necho \"Test 4: \" . is_happy(\"\") . \"\\n\";\necho \"Test\
    \ 5: \" . is_happy(\"a\") . \"\\n\";\necho \"Test 6: \" . is_happy(\"aa\") . \"\
    \\n\";\necho \"Test 7: \" . is_happy(\"ab\") . \"\\n\";\necho \"Test 8: \" . is_happy(\"\
    abcdefghijk\") . \"\\n\";\necho \"Test 9: \" . is_happy(\"abcdefghijka\") . \"\
    \\n\";\necho \"Test 10: \" . is_happy(\"abcdefghijkl\") . \"\\n\";\necho \"Test\
    \ 11: \" . is_happy(\"abcdefghijklm\") . \"\\n\";\necho \"Test 12: \" . is_happy(\"\
    abcdefghijklmn\") . \"\\n\";\necho \"Test 13: \" . is_happy(\"abcdefghijklmno\"\
    ) . \"\\n\";\necho \"Test 14: \" . is_happy(\"abcdefghijklmnop\") . \"\\n\";\n\
    echo \"Test 15: \" . is_happy(\"abcdefghijklmnopq\") . \"\\n\";\necho \"Test 16:\
    \ \" . is_happy(\"abaa\") . \"\\n\";\necho \"Test 17: \" . is_happy(\"aaa\") .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Test 1: 1\nTest 2: 1\nTest 3: \nTest 4: 1\nTest 5: 1\nTest 6: 1\nTest 7:\
    \ 1\nTest 8: 1\nTest 9: 1\nTest 10: 1\nTest 11: 1\nTest 12: 1\nTest 13: 1\nTest\
    \ 14: 1\nTest 15: 1\nTest 16: \nTest 17: \n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0v56bb_o.php:54\nStack trace:\n#0 /tmp/tmp0v56bb_o.php(64):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0v56bb_o.php on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    $last_two = substr($s,\
    \ -2);\n    $all_happy = true;\n    $pattern = \"/([a-z])\\1{2,}/\";\n    if (preg_match($pattern,\
    \ $s)) {\n        $all_happy = false;\n    }\n    if (strlen($s) > 3) {\n    \
    \    $is_happy = is_happy(substr($s, 0, -1));\n        $all_happy = $all_happy\
    \ && $is_happy;\n    }\n    return $all_happy;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplv_yuetn.php:36\n\
    Stack trace:\n#0 /tmp/tmplv_yuetn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplv_yuetn.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return False;\n    }\n    $check = [];\n \
    \   $counter = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($counter\
    \ === 3) {\n            $counter = 0;\n            $check = [];\n        }\n \
    \       if (in_array($s[$i], $check)) {\n            return False;\n        }\n\
    \        $check[] = $s[$i];\n        $counter++;\n    }\n    return True;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo40x_g8a.php:43\n\
    Stack trace:\n#0 /tmp/tmpo40x_g8a.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo40x_g8a.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return count(str_split($s)) >= 3 && strlen(str_replace(str_split($s), '',\
    \ $s)) == 0;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dj4c5vd.php:23\n\
    Stack trace:\n#0 /tmp/tmp1dj4c5vd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1dj4c5vd.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $result = true;\n  if (strlen($s) < 3) {\n    $result = false;\n  } else {\n\
    \    for ($i = 0; $i < strlen($s) - 2; $i++) {\n      if ($s[$i] == $s[$i + 1]\
    \ || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n        $result = false;\n\
    \      }\n    }\n  }\n  return $result;\n}\necho is_happy('a') ? 'Yes' : 'No';\n\
    echo \"\\n\";\necho is_happy('aa') ? 'Yes' : 'No';\necho \"\\n\";\necho is_happy('abcd')\
    \ ? 'Yes' : 'No';\necho \"\\n\";\necho is_happy('aabb') ? 'Yes' : 'No';\necho\
    \ \"\\n\";\necho is_happy('adb') ? 'Yes' : 'No';\necho \"\\n\";\necho is_happy('xyy')\
    \ ? 'Yes' : 'No';\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "No\nNo\nYes\nNo\nYes\nNo\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $first_3 = substr($s, 0, 3);\n  if (strlen($s) < 3 || $first_3[0] == $first_3[1]\
    \ || $first_3[0] == $first_3[2] || $first_3[1] == $first_3[2])\n  {\n    return\
    \ false;\n  }\n  for ($i = 1; $i < strlen($s) - 2; $i++)\n  {\n    if ($s[$i]\
    \ == $s[$i+1] || $s[$i] == $s[$i+2] || $s[$i+1] == $s[$i+2])\n    {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return is_happy_1($s) && is_happy_2($s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_happy_1()\
    \ in /tmp/tmpcqee_9da.php:13\nStack trace:\n#0 /tmp/tmpcqee_9da.php(17): is_happy('a')\n\
    #1 /tmp/tmpcqee_9da.php(21): candidate('a')\n#2 /tmp/tmpcqee_9da.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcqee_9da.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $length = strlen($s);\n    if ($length < 3) {\n        return false;\n  \
    \  }\n    $prev = $s[0];\n    $count = 1;\n    for ($i = 1; $i < $length; $i++)\
    \ {\n        if ($s[$i] === $prev) {\n            $count++;\n        } else {\n\
    \            $prev = $s[$i];\n            $count = 1;\n        }\n        if ($count\
    \ === 3) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    echo is_happy('abcd') . '<br>';\necho is_happy('aabb') . '<br>';\necho is_happy('adb')\
    \ . '<br>';\necho is_happy('xyy') . '<br>';\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpz908sush.php:44\nStack trace:\n#0 /tmp/tmpz908sush.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpz908sush.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  \n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghho5szz.php:20\n\
    Stack trace:\n#0 /tmp/tmpghho5szz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpghho5szz.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \t$a = [];\n\t$count = 0;\n\t$s = str_split($s);\n\tfor ($i = 0; $i < count($s);\
    \ $i++) {\n\t\tif (count($a) == 0) {\n\t\t\tarray_push($a, $s[$i]);\n\t\t} else\
    \ {\n\t\t\tif (in_array($s[$i], $a)) {\n\t\t\t\t$count++;\n\t\t\t} else {\n\t\t\
    \t\tarray_push($a, $s[$i]);\n\t\t\t}\n\t\t}\n\t}\n\t$s = implode(\"\", $s);\n\t\
    return strlen($s) >= 3 && $count <= 0;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuq6khqis.php:42\n\
    Stack trace:\n#0 /tmp/tmpuq6khqis.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpuq6khqis.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $happy = True;\n    if (strlen($s) < 3) {\n        $happy = False;\n    }\n\
    \    for ($i = 0; $i < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i +\
    \ 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            $happy\
    \ = False;\n        }\n    }\n    return $happy;\n}\n\necho is_happy(\"abc\");\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $a = str_split($s);\n    if (count($a) < 3) {\n        return false;\n  \
    \  }\n    for ($i = 2; $i < count($a); $i++) {\n        if ($a[$i - 2] == $a[$i]\
    \ || $a[$i - 1] == $a[$i]) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\necho(is_happy('xyy') . PHP_EOL);\necho(is_happy('xyyy') .\
    \ PHP_EOL);\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $arr = [];\n  $i = 0;\n  while ($i < count($s)) {\n\
    \    if ($i < count($s) - 2) {\n      $s1 = $s[$i];\n      $s2 = $s[$i + 1];\n\
    \      $s3 = $s[$i + 2];\n      if ($s1 == $s2 && $s2 == $s3) {\n        return\
    \ false;\n      }\n    }\n    array_push($arr, $s[$i]);\n    $i++;\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vds0afd.php:35\n\
    Stack trace:\n#0 /tmp/tmp7vds0afd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7vds0afd.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $l = strlen($s);\n  $c = 0;\n  for ($i = 0; $i < $l - 2; $i++) {\n    if ($s[$i]\
    \ == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n      $c++;\n    }\n  }\n  return\
    \ $c == 0;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl9q3vzr.php:27\n\
    Stack trace:\n#0 /tmp/tmptl9q3vzr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptl9q3vzr.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $length = strlen($s);\n  if ($length < 3) {\n    return False;\n  }\n  for\
    \ ($i = 0; $i < $length - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] ==\
    \ $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return False;\n    }\n  }\n\
    \  return True;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if (isset($s[$i+1]) && isset($s[$i+2])) {\n      if ($s[$i] ==\
    \ $s[$i+1] || $s[$i] == $s[$i+2] || $s[$i+1] == $s[$i+2]) {\n        return false;\n\
    \      }\n    }\n  }\n\n  return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $results = [];\n  $k = 0;\n  while (strlen($s) > 2) {\n    if (strlen($s) >\
    \ 3) {\n      $results[$k] = [$s[0], $s[1], $s[2]];\n      $s = substr($s, 3);\n\
    \    } else {\n      $results[$k] = [$s[0], $s[1]];\n      $s = substr($s, 2);\n\
    \    }\n    $k++;\n  }\n  for ($i = 0; $i < count($results); $i++) {\n    $a =\
    \ $results[$i];\n    if (count($a) == 3) {\n      if (count(array_unique($a))\
    \ < 3) {\n        return False;\n      }\n    } else {\n      if (count(array_unique($a))\
    \ < 2) {\n        return False;\n      }\n    }\n  }\n  return True;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqw9n6pm_.php:45\n\
    Stack trace:\n#0 /tmp/tmpqw9n6pm_.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpqw9n6pm_.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $i = 0;\n  $count = count($s);\n  while($i<$count){\n    if(substr($s,$i,3)\
    \ === substr($s, $i+1,3)){\n      return false;\n    }\n    $i++;\n  }\n  return\
    \ true;\n}\n\necho is_happy(\"adb\"),\"\\n\"; // true\necho is_happy(\"abcd\"\
    ),\"\\n\"; // true\necho is_happy(\"aabb\"),\"\\n\"; // false\necho is_happy(\"\
    xyy\"),\"\\n\"; // false\necho is_happy(\"a\"),\"\\n\"; // false\necho is_happy(\"\
    aa\"),\"\\n\"; // false\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpwb2qrncy.php on line 14\n1\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpwb2qrncy.php\
    \ on line 14\n1\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpwb2qrncy.php on line 14\n1\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpwb2qrncy.php\
    \ on line 14\n1\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpwb2qrncy.php on line 14\n1\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpwb2qrncy.php\
    \ on line 14\n1\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpwb2qrncy.php on line 14\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpwb2qrncy.php:35\nStack trace:\n#0 /tmp/tmpwb2qrncy.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwb2qrncy.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return false;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9dyqa4k.php:22\n\
    Stack trace:\n#0 /tmp/tmpo9dyqa4k.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo9dyqa4k.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    return strlen($s) < 3 ? false : !preg_match('/(.)\\1{2}/', $s);\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpruyky5hk.php:23\n\
    Stack trace:\n#0 /tmp/tmpruyky5hk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpruyky5hk.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  // your code here\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6v7bcy8.php:20\n\
    Stack trace:\n#0 /tmp/tmpi6v7bcy8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi6v7bcy8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) return false;\n    for ($i = 0; $i\
    \ < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2])\
    \ return false;\n    }\n    return true;\n}\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyor2zsec.php:28\n\
    Stack trace:\n#0 /tmp/tmpyor2zsec.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyor2zsec.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $i = 0;\n    $length = strlen($s);\n    $seen = [];\n    while ($i < $length\
    \ - 2) {\n        $triple = $s[$i] . $s[$i + 1] . $s[$i + 2];\n        if (in_array($triple,\
    \ $seen)) {\n            return False;\n        }\n        $seen[] = $triple;\n\
    \        $i++;\n    }\n    return True;\n}\nfunction candidate(...$args) {\n \
    \   return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqk1qfz_6.php:31\n\
    Stack trace:\n#0 /tmp/tmpqk1qfz_6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqk1qfz_6.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $stringLength = strlen($s);\n    if ($stringLength > 2) {\n        for ($i\
    \ = 0; $i < $stringLength - 2; $i++) {\n            if ($s[$i] == $s[$i + 1] ||\
    \ $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $happy = str_split($s);\n  $count = count($happy);\n  if ($count < 3) {\n \
    \   return false;\n  } else {\n    for ($i = 2; $i < $count; $i++) {\n      if\
    \ ($happy[$i] == $happy[$i - 1] && $happy[$i] == $happy[$i - 2]) {\n        return\
    \ false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssl6hhd7.php:35\n\
    Stack trace:\n#0 /tmp/tmpssl6hhd7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpssl6hhd7.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $str_len = count($arr);\n    if ($str_len < 3)\
    \ {\n        return false;\n    }\n    for ($i = 0; $i < $str_len; $i++) {\n \
    \       if (($i + 2) > $str_len) {\n            break;\n        }\n        if\
    \ ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  // Your code here\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_8vsq17.php:20\n\
    Stack trace:\n#0 /tmp/tmp1_8vsq17.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1_8vsq17.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = [];\n  $s = str_split($s);\n  $i = 0;\n  while ($i < count($s) - 2)\
    \ {\n    $str = join('', array_slice($s, $i, 3));\n    $str = array_unique(str_split($str));\n\
    \    if (count($str) != 3) {\n      return false;\n    }\n    $i++;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst30_k86.php:32\n\
    Stack trace:\n#0 /tmp/tmpst30_k86.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpst30_k86.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $str = $s;\n    $isHappy = false;\n    for ($i = 2; $i < strlen($str); $i++)\
    \ {\n        if ($str[$i] !== $str[$i - 1] && $str[$i] !== $str[$i - 2] && $str[$i\
    \ - 1] !== $str[$i - 2]) {\n            $isHappy = true;\n        } else {\n \
    \           $isHappy = false;\n            break;\n        }\n    }\n    return\
    \ $isHappy;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $three_char_string = substr($s, 0, 3);\n  $char_array = str_split($three_char_string);\n\
    \  if (count($char_array) === count(array_unique($char_array))) {\n    return\
    \ True;\n  } else {\n    return False;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkg0uoe_z.php:27\n\
    Stack trace:\n#0 /tmp/tmpkg0uoe_z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkg0uoe_z.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) return false;\n    for ($i = 0; $i < strlen($s) - 2;\
    \ $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i +\
    \ 1] == $s[$i + 2]) return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) return false;\n  for ($i = 0; $i < strlen($s); $i += 3)\
    \ {\n    if (!$s[$i]) return true;\n    if ($s[$i] == $s[$i + 1] || $s[$i] ==\
    \ $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) return false;\n  }\n  return true;\n\
    }\necho is_happy(\"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprb0e9ibi.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $isHappy = true;\n  $letters = str_split($s);\n  $length = count($letters);\n\
    \  for ($i = 2; $i < $length; $i++) {\n    if ($letters[$i] == $letters[$i - 1]\
    \ && $letters[$i] == $letters[$i - 2]) {\n      $isHappy = false;\n      break;\n\
    \    }\n  }\n  return $isHappy;\n}\necho is_happy('aabb');\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gvn_0im.php:30\n\
    Stack trace:\n#0 /tmp/tmp2gvn_0im.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2gvn_0im.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $check = false;\n  $a = str_split($s);\n  if (count($a) < 3) return false;\n\
    \  for ($i = 0; $i < count($a); $i++) {\n    if ($a[$i] == $a[$i + 1] && $a[$i\
    \ + 1] == $a[$i + 2]) {\n      $check = true;\n    }\n  }\n  return !$check;\n\
    }\n\necho is_happy('a') . \"\\n\";\necho is_happy('aa') . \"\\n\";\necho is_happy('abcd')\
    \ . \"\\n\";\necho is_happy('aabb') . \"\\n\";\necho is_happy('adb') . \"\\n\"\
    ;\necho is_happy('xyy') . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhtrw4en.php:38\n\
    Stack trace:\n#0 /tmp/tmpxhtrw4en.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxhtrw4en.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $result = true;\n    $arr = str_split($s);\n    for ($i = 0; $i < count($arr)\
    \ - 2; $i++) {\n        if ($arr[$i] == $arr[$i + 1] && $arr[$i] == $arr[$i +\
    \ 2]) {\n            $result = false;\n            break;\n        }\n    }\n\
    \    return $result;\n}\n\necho is_happy('a') . \"\\n\"; // False\necho is_happy('aa')\
    \ . \"\\n\"; // False\necho is_happy('abcd') . \"\\n\"; // True\necho is_happy('aabb')\
    \ . \"\\n\"; // False\necho is_happy('adb') . \"\\n\"; // True\necho is_happy('xyy')\
    \ . \"\\n\"; // False\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1id0r0bl.php:35\n\
    Stack trace:\n#0 /tmp/tmp1id0r0bl.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1id0r0bl.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \tif(strlen($s) >= 3){\n\t\tfor($i = 0; $i < strlen($s); $i++) {\n\t\t\tif(isset($s[$i+2])){\n\
    \t\t\t\tif($s[$i] == $s[$i+1] || $s[$i] == $s[$i+2] || $s[$i+1] == $s[$i+2]){\n\
    \t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho is_happy('aabb') . PHP_EOL;\necho is_happy('a')\
    \ . PHP_EOL;\necho is_happy('aa') . PHP_EOL;\necho is_happy('abcd') . PHP_EOL;\n\
    echo is_happy('abaa') . PHP_EOL;\necho is_happy('adb') . PHP_EOL;\necho is_happy('xyy')\
    \ . PHP_EOL;\n\necho is_happy('abcabc') . PHP_EOL;\necho is_happy('abcabcd') .\
    \ PHP_EOL;\necho is_happy('abcabcab') . PHP_EOL;\necho is_happy('ab') . PHP_EOL;\n\
    echo is_happy('aab') . PHP_EOL;\necho is_happy('aabb') . PHP_EOL;\necho is_happy('aaaaa')\
    \ . PHP_EOL;\necho is_happy('aaaaab') . PHP_EOL;\necho is_happy('abcabcabcabc')\
    \ . PHP_EOL;\necho is_happy('abcabcabcabcab') . PHP_EOL;\necho is_happy('abcabcabcabcabc')\
    \ . PHP_EOL;\necho is_happy('aabaaab') . PHP_EOL;\necho is_happy('aabaaabc') .\
    \ PHP_EOL;\necho is_happy('aabaaabca') . PHP_EOL;\necho is_happy('aabaaabcaa')\
    \ . PHP_EOL;\necho is_happy('abcabcabcabc\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiowjbg6r.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    // your code\n    if (strlen($s) < 3) {\n        return false;\n    }\n \
    \   $arr = str_split($s);\n    for ($i = 0; $i < count($arr) - 2; $i++) {\n  \
    \      if ($arr[$i] == $arr[$i + 1] && $arr[$i] == $arr[$i + 2]) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n\necho is_happy('aa');\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vdj9lnt.php:35\n\
    Stack trace:\n#0 /tmp/tmp7vdj9lnt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7vdj9lnt.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \   $count = strlen($s);\n   $happy = false;\n   for ($i = 0; $i < $count - 2;\
    \ $i++) {\n      if ($s[$i] !== $s[$i + 1] && $s[$i] !== $s[$i + 2] && $s[$i +\
    \ 1] !== $s[$i + 2]) {\n         $happy = true;\n      }\n   }\n   return $happy;\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01t8qafz.php:34\n\
    Stack trace:\n#0 /tmp/tmp01t8qafz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp01t8qafz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n\n  for ($i\
    \ = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    if(strlen($s) <\
    \ 3) {\n        return false;\n    }\n    for($i = 0; $i < strlen($s) - 2; $i++)\
    \ {\n        $threeConsecutive = substr($s, $i, 3);\n        $first = substr($threeConsecutive,\
    \ 0, 1);\n        $second = substr($threeConsecutive, 1, 1);\n        $third =\
    \ substr($threeConsecutive, 2, 1);\n        if($first == $second || $first ==\
    \ $third || $second == $third) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nprint is_happy(\"abcd\");\nprint \"abcd\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1abcd
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  // Your code here.\n  $str = \"\";\n  $str .= $s[0].$s[1].$s[2];\n  for($i\
    \ = 3; $i < strlen($s); $i++){\n    if($str[0] == $str[1] || $str[1] == $str[2]\
    \ || $str[0] == $str[2]){\n      return false;\n    }\n    $str = $str[1].$str[2].$s[$i];\n\
    \  }\n  if($str[0] == $str[1] || $str[1] == $str[2] || $str[0] == $str[2]){\n\
    \    return false;\n  }\n  return true;\n}\nfunction candidate(...$args) {\n \
    \   return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n  else {\n    $n = 1;\n    while\
    \ ($n < strlen($s)) {\n      if ($s[$n-1] == $s[$n]) {\n        return false;\n\
    \      }\n      $n++;\n    }\n    return true;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9mmyjtqw.php:39\n\
    Stack trace:\n#0 /tmp/tmp9mmyjtqw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9mmyjtqw.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $sub_str_arr = [];\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (isset($s[$i+2]))\
    \ {\n      $sub_str_arr[] = substr($s, $i, 3);\n    }\n  }\n  return count(array_unique($sub_str_arr))\
    \ === count($sub_str_arr);\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvnab3uc.php:27\n\
    Stack trace:\n#0 /tmp/tmpzvnab3uc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzvnab3uc.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  if (strlen($s) < 3) return false;\n  for ($i = 0; $i < strlen($s) - 2; $i++)\
    \ {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i\
    \ + 2]) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (substr($s, $i, 3) === substr($s, $i + 1,\
    \ 3)) {\n            return false;\n        }\n    }\n    return true;\n}\necho\
    \ is_happy(\"aaabbbb\") . \"\\n\";\necho is_happy(\"aaabbccc\") . \"\\n\";\necho\
    \ is_happy(\"aaabbbccc\") . \"\\n\";\necho is_happy(\"aaabbbcccddd\") . \"\\n\"\
    ;\necho is_happy(\"aaabbbcccddde\") . \"\\n\";\necho is_happy(\"aaabbbcccdddee\"\
    ) . \"\\n\";\necho is_happy(\"aabcbb\") . \"\\n\";\necho is_happy(\"aabcbbc\"\
    ) . \"\\n\";\necho is_happy(\"aabcbbcc\") . \"\\n\";\necho is_happy(\"aabcbbccd\"\
    ) . \"\\n\";\necho is_happy(\"aabcbbccdd\") . \"\\n\";\necho is_happy(\"aabcbbccdde\"\
    ) . \"\\n\";\necho is_happy(\"aabcbbccddee\") . \"\\n\";\necho is_happy(\"12345678901234567890\"\
    ) . \"\\n\";\necho is_happy(\"123456789012345678901\") . \"\\n\";\necho is_happy(\"\
    1234567890123456789012\") . \"\\n\";\necho is_happy(\"12345678901234567890123\"\
    ) . \"\\n\";\necho is_happy(\"123456789012345678901234\") . \"\\n\";\necho is_happy(\"\
    1234567890123456789012345\") . \"\\n\";\necho is_happy(\"12345678901234567890123456\"\
    ) . \"\\n\";\necho is_happy(\"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1zm_8l8r.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return preg_match(\"/(\\S)\\1{2,}/\", $s) ? FALSE : TRUE;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiik_n3w7.php:20\n\
    Stack trace:\n#0 /tmp/tmpiik_n3w7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpiik_n3w7.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception

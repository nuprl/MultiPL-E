name: HumanEval_60_sum_to_n
language: php
prompt: "<?php\n// sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
  // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
  // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n($n) {\n"
tests: "function candidate(...$args) {\n    return sum_to_n(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(6) !== 21) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(11) !== 66) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(30) !== 465) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100)\
  \ !== 5050) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    // your answer here\n\t$sum=0;\n\tfor($i=1;$i<=$n;$i++){\n\t\t\
    $sum+=$i;\n\t}\n\treturn $sum;\n}\necho sum_to_n(30);\necho sum_to_n(100);\necho\
    \ sum_to_n(5);\necho sum_to_n(10);\necho sum_to_n(1);", "    $counter = 0;\n \
    \   $sum = 0;\n    while ($counter <= $n) {\n        $sum += $counter;\n     \
    \   $counter++;\n    }\n    return $sum;\n}", "    $sum = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n", "   \
    \ $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum;\n}\n", "  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum\
    \ += $i;\n  }\n  return $sum;\n}\necho sum_to_n(10);\n", "  // your code here\n\
    \  $counter = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $counter += $i;\n  }\n\
    \  return $counter;\n}\n\necho sum_to_n(30);", "\tif($n == 1) {\n\t\treturn 1;\n\
    \t}\n\treturn $n + sum_to_n($n - 1);\n}\necho \"Summation 1 to n: \" . sum_to_n(1)\
    \ . \"\\n\";\necho \"Summation 1 to n: \" . sum_to_n(10) . \"\\n\";\necho \"Summation\
    \ 1 to n: \" . sum_to_n(100) . \"\\n\";\n", "  // $sum will hold the sum of numbers\
    \ so far.\n  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n\
    \  return $sum;\n}\n", "    $result = 0;\n    for ($i = 1; $i <= $n; $i += 1)\
    \ {\n        $result += $i;\n    }\n    return $result;\n}\n\necho sum_to_n(30);\n\
    echo \"\\n\";\necho sum_to_n(100);\necho \"\\n\";\necho sum_to_n(5);\necho \"\\\
    n\";\necho sum_to_n(10);\necho \"\\n\";\necho sum_to_n(1);\necho \"\\n\";\n",
  "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n\
    }\n", "\tif ($n <= 1) {\n\t\treturn $n;\n\t} else {\n\t\treturn $n + sum_to_n($n\
    \ - 1);\n\t}\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n     \
    \   $sum += $i;\n    }\n    return $sum;\n}\n\necho sum_to_n(30) . \"\\n\";\n\
    echo sum_to_n(100) . \"\\n\";\necho sum_to_n(5) . \"\\n\";\necho sum_to_n(10)\
    \ . \"\\n\";\necho sum_to_n(1) . \"\\n\";", "\tif ($n == 1) {\n\t\treturn 1;\n\
    \t} else {\n\t\treturn sum_to_n($n - 1) + $n;\n\t}\n}\n\n$tests = array(\n\tarray(\n\
    \t\t\"input\" => 30,\n\t\t\"output\" => 465\n\t),\n\tarray(\n\t\t\"input\" =>\
    \ 100,\n\t\t\"output\" => 5050\n\t),\n\tarray(\n\t\t\"input\" => 5,\n\t\t\"output\"\
    \ => 15\n\t),\n\tarray(\n\t\t\"input\" => 10,\n\t\t\"output\" => 55\n\t),\n\t\
    array(\n\t\t\"input\" => 1,\n\t\t\"output\" => 1\n\t)\n);\n\n$passed = 0;\n$failed\
    \ = 0;\n\nforeach ($tests as $test) {\n\t$input = $test[\"input\"];\n\t$expected_output\
    \ = $test[\"output\"];\n\t$output = sum_to_n($input);\n\t\n\tif ($output == $expected_output)\
    \ {\n\t\t$passed += 1;\n\t} else {\n\t\t$failed += 1;\n\t\techo(\"FAILED: sum_to_n({$input})\
    \ == {$output} but expected: {$expected_output}\\n\");\n\t}\n}\n\necho(\"\\nSummary:\\\
    n\");\necho(\"passed: {$passed}\\n\");\necho(\"failed: {$failed}\\n\");\n\nif\
    \ ($failed == 0) {\n\techo(\"ALL TESTS PASSED\\n\");\n}", "  // your code here...\n\
    \  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return\
    \ $sum;\n}\n", "\tif ($n <= 1) {\n\t\treturn $n;\n\t} else {\n\t\treturn $n +\
    \ sum_to_n($n - 1);\n\t}\n}\n\necho sum_to_n(100);\necho \"\\n\";\n", "  $total\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $total += $i;\n  }\n  return $total;\n\
    }\n", "    return $n * ($n + 1) / 2;\n}\n\necho sum_to_n(30) . \"\\n\";\necho\
    \ sum_to_n(100) . \"\\n\";\necho sum_to_n(5) . \"\\n\";\necho sum_to_n(10) . \"\
    \\n\";\necho sum_to_n(1) . \"\\n\";\n", "  if ($n == 1) {\n    return 1;\n  }\n\
    \  return $n + sum_to_n($n - 1);\n}\n", "    $sum = 0;\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}", "    $acc = 0;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $acc += $i;\n    }\n    return $acc;\n\
    }\n", "    $result = 0;\n    $i = 1;\n    while ($i <= $n) {\n        $result\
    \ += $i;\n        $i += 1;\n    }\n    return $result;\n}\n", "  if ($n == 1)\
    \ {\n    return 1;\n  }\n  else {\n    return $n + sum_to_n($n - 1);\n  }\n}\n\
    \necho sum_to_n(30);\necho sum_to_n(100);\necho sum_to_n(5);\necho sum_to_n(10);\n\
    echo sum_to_n(1);", "  // YOUR CODE GOES HERE\n  // return solution;\n}\n", " \
    \   $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum;\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum;\n}\n\nif (sum_to_n(30) != 465) {\n\
    \    die(\"sum_to_n(30) != 465\");\n}\nif (sum_to_n(100) != 5050) {\n    die(\"\
    sum_to_n(100) != 5050\");\n}\nif (sum_to_n(5) != 15) {\n    die(\"sum_to_n(5)\
    \ != 15\");\n}\nif (sum_to_n(10) != 55) {\n    die(\"sum_to_n(10) != 55\");\n\
    }\nif (sum_to_n(1) != 1) {\n    die(\"sum_to_n(1) != 1\");\n}", "\t// if $n is\
    \ 1, return 1\n\tif ($n == 1) {\n\t\treturn 1;\n\t}\n\t// else, return $n + the\
    \ sum of all integers less than $n\n\telse {\n\t\treturn $n + sum_to_n($n - 1);\n\
    \t}\n}", "\t$total = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$total += $i;\n\
    \t}\n\treturn $total;\n}\n\necho sum_to_n(30) . \"\\n\";\necho sum_to_n(100) .\
    \ \"\\n\";\necho sum_to_n(5) . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho sum_to_n(1)\
    \ . \"\\n\";\n", "  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n\
    \  }\n  return $sum;\n}\n", "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\
    \t$sum += $i;\n\t}\n\treturn $sum;\n}\n", "  if ($n == 1) {\n    return 1;\n \
    \ } else {\n    return $n + sum_to_n($n - 1);\n  }\n}", "    //write your solution\
    \ here\n    return $n * ($n + 1) / 2;\n}\n", "\tif ($n == 1) {\n\t\treturn 1;\n\
    \t} else {\n\t\treturn $n + sum_to_n($n - 1);\n\t}\n}", "    $output = 0;\n  \
    \  for ($i = 1; $i <= $n; $i++) {\n        $output += $i;\n    }\n    return $output;\n\
    }\n", "    // $n is your number.\n    // Get the sum from 1 to $n.\n    // calculate\
    \ and return sum.\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n       \
    \ $sum += $i;\n    }\n    return $sum;\n}\necho sum_to_n(10);", "  $sum = 0;\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n}", " \
    \ return (1 + $n) * $n / 2;\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n", "    // TODO\n\
    \    if ($n <= 0) {\n        return 0;\n    } else {\n        return sum_to_n($n\
    \ - 1) + $n;\n    }\n}\n", "  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n\
    \    $count += $i;\n  }\n  return $count;\n}\n", "    $count = 0;\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $count += $i;\n    }\n    return $count;\n}\n",
  "  \n  // Add your code here.\n  \n}\n\nsum_to_n(10);", "    $result = $n;\n   \
    \ for ($i = 1; $i < $n; $i++){\n        $result += $i;\n    }\n    return $result;\n\
    }\n", "\t\n}\n", "    $sum = 0;\n    $i = 1;\n    while ($i <= $n) {\n       \
    \ $sum += $i;\n        $i++;\n    }\n    return $sum;\n}\n", "\t// Declare a variable\
    \ sum to 0.\n\t$sum = 0;\n\t// Loop from 1 to n.\n\tfor ($i = 1; $i <= $n; $i++)\
    \ {\n\t\t// Add i to sum.\n\t\t$sum += $i;\n\t}\n\t// Return sum.\n\treturn $sum;\n\
    }", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}\n$n = 5;\necho sum_to_n($n);", "    $sum = 0;\n  \
    \  $i = 1;\n    while ($i <= $n) {\n\t    $sum = $sum + $i;\n\t    $i++;\n   \
    \ }\n    return $sum;\n}\n\necho sum_to_n(10) . PHP_EOL;", "\treturn ($n*($n+1))/2;\n\
    }\n", "\t$total = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$total += $i;\n\t\
    }\n\treturn $total;\n}", "    $s = 0;\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $s += $i;\n    }\n    return $s;\n}\n", "    // $result = 0;\n    // for\
    \ ($i = 1; $i <= $n; $i++) {\n    //     $result += $i;\n    // }\n    // return\
    \ $result;\n    return $n * ($n + 1) / 2;\n}\n", "    $sum = 0;\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n", " \
    \ if ($n == 1) {\n    return 1;\n  } else {\n    return $n + sum_to_n($n - 1);\n\
    \  }\n}\n\necho sum_to_n(10) . \"\\n\";", "    $total = 0;\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $total += $i;\n    }\n    return $total;\n}\n", "  $sum\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n\
    }\n", "    if ($n == 1) return 1;\n    return $n + sum_to_n($n - 1);\n}\n\necho\
    \ sum_to_n(30);", "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$sum +=\
    \ $i;\n\t}\n\treturn $sum;\n}\n", "  $total = 0;\n  for ($i = 1; $i <= $n; $i++)\
    \ {\n    $total += $i;\n  }\n  return $total;\n}\n\necho sum_to_n(30) . PHP_EOL;\n\
    echo sum_to_n(100) . PHP_EOL;\necho sum_to_n(5) . PHP_EOL;\necho sum_to_n(10)\
    \ . PHP_EOL;\necho sum_to_n(1) . PHP_EOL;", "\t// YOUR CODE GOES HERE\n\t$result\
    \ = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$result += $i;\n\t}\n\treturn $result;\n\
    }\n", "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\t\
    return $sum;\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n     \
    \   $sum += $i;\n    }\n    return $sum;\n}", "    $sum = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}", "    if\
    \ ($n > 0) {\n        return sum_to_n($n - 1) + $n;\n    } else {\n        return\
    \ 0;\n    }\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n      \
    \  $sum += $i;\n    }\n    return $sum;\n}\n", "    if($n == 1) {\n        return\
    \ 1;\n    } else {\n        return $n + sum_to_n($n - 1);\n    }\n}\n", "  $sum\
    \ = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n\
    }\n\necho sum_to_n(30) . \"\\n\";\necho sum_to_n(100) . \"\\n\";\necho sum_to_n(5)\
    \ . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho sum_to_n(1) . \"\\n\";\n", " \
    \   if ($n == 1) {\n        return 1;\n    } else {\n        return $n + sum_to_n($n\
    \ - 1);\n    }\n}", "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$sum +=\
    \ $i;\n\t}\n\treturn $sum;\n}\n", "}\n", "    // return $n * ($n + 1) / 2;\n \
    \   // $sum = 0;\n    // for ($i = 1; $i <= $n; $i++) {\n    //     $sum += $i;\n\
    \    // }\n    // return $sum;\n    if ($n == 1) {\n        return 1;\n    } else\
    \ {\n        return $n + sum_to_n($n - 1);\n    }\n}\necho sum_to_n(30) . PHP_EOL;\n\
    echo sum_to_n(100) . PHP_EOL;\necho sum_to_n(5) . PHP_EOL;\necho sum_to_n(10)\
    \ . PHP_EOL;\necho sum_to_n(1) . PHP_EOL;\n", "\t// initialize variables\n\t$sum\
    \ = 0;\n\t// set a loop to sum from 1 to n\n\tfor ($i = 1; $i <= $n; $i++) {\n\
    \t\t$sum += $i;\n\t}\n\t// return the result\n\treturn $sum;\n}", "\t// take advantage\
    \ of Gauss's sum formula\n\treturn $n * ($n + 1) / 2;\n}\n", "    $sum = 0;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n\
    }\n", "    return $n;\n}\n", "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\
    \t$sum += $i;\n\t}\n\treturn $sum;\n}\n", "  // $sum variable is used to accumulate\
    \ the numbers from 1 to $n\n  $sum = 0;\n  // This is the format of the for loop\n\
    \  // for (initialization; test condition; increment)\n  // the body of the loop\
    \ is whatever commands we put inside { and }\n  for ($i = 1; $i <= $n; $i++) {\n\
    \    $sum = $sum + $i;\n  }\n  return $sum;\n}\n", "    return $n * ($n + 1) /\
    \ 2;\n}\necho sum_to_n(30) . \"\\n\";\necho sum_to_n(100) . \"\\n\";\necho sum_to_n(5)\
    \ . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho sum_to_n(1) . \"\\n\";", "\t\
    $sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n\
    }\n$number = 10;\necho \"Sum from 1 to {$number} is: \" . sum_to_n($number);",
  "\t// your code here\n\t// ...\n}", "    $s = 0;\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $s += $i;\n    }\n    return $s;\n}\necho sum_to_n(30) . \"\\n\"\
    ;\necho sum_to_n(100) . \"\\n\";\necho sum_to_n(5) . \"\\n\";\necho sum_to_n(10)\
    \ . \"\\n\";\necho sum_to_n(1) . \"\\n\";\n", "\t// your code here\n\tif ($n ==\
    \ 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn $n + sum_to_n($n - 1);\n\t}\n}\n",
  "    // your code here\n    // $total = 0;\n    // for ($i = 1; $i <= $n; $i++)\
    \ {\n    //     $total += $i;\n    // }\n    // return $total;\n    return $n\
    \ * ($n + 1) / 2;\n}\n", "  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum\
    \ += $i;\n  }\n  return $sum;\n}\n", "    if ($n == 1) {\n        return 1;\n\
    \    } else {\n        return $n + sum_to_n($n - 1);\n    }\n}\n\necho sum_to_n(30)\
    \ . \"\\n\";\necho sum_to_n(100) . \"\\n\";\necho sum_to_n(5) . \"\\n\";\necho\
    \ sum_to_n(10) . \"\\n\";\necho sum_to_n(1) . \"\\n\";\n", "\treturn ($n * ($n\
    \ + 1)) / 2;\n}\n\n$total = sum_to_n(100);\necho $total;", "    $sum = 0;\n  \
    \  $i = 1;\n    while ($i <= $n) {\n        $sum += $i;\n        $i++;\n    }\n\
    \    return $sum;\n}\necho sum_to_n(5) . PHP_EOL;\n", "\t// YOUR CODE GOES HERE\n\
    }\n", "    // TODO: add code here\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum;\n}\n", "  $total = 0;\n  for\
    \ ($i = 1; $i <= $n; $i++) {\n    $total += $i;\n  }\n  return $total;\n}\n\n\
    echo sum_to_n(30) . \"\\n\";\necho sum_to_n(100) . \"\\n\";\necho sum_to_n(5)\
    \ . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho sum_to_n(1) . \"\\n\";", "  \
    \  $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum;\n}\n\nvar_dump(sum_to_n(30));\nvar_dump(sum_to_n(100));\nvar_dump(sum_to_n(5));\n\
    var_dump(sum_to_n(10));\nvar_dump(sum_to_n(1));\n", "  $sum = 0;\n  for ($i =\
    \ 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n}\n\necho sum_to_n(30);\n\
    echo '<br>';\necho sum_to_n(100);\necho '<br>';\necho sum_to_n(5);\necho '<br>';\n\
    echo sum_to_n(10);\necho '<br>';\necho sum_to_n(1);\necho '<br>';", "\treturn\
    \ $n * ($n + 1) / 2;\n}\n", "  if($n==1) return 1;\n  return $n + sum_to_n($n-1);\n\
    }\necho sum_to_n(30) . \"\\n\";\necho sum_to_n(100) . \"\\n\";\necho sum_to_n(5)\
    \ . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho sum_to_n(1) . \"\\n\";\n", " \
    \ // $i = 1;\n  // $sum = 0;\n  // while ($i <= $n) {\n  //   $sum += $i;\n  //\
    \   $i += 1;\n  // }\n  // return $sum;\n  //\n  //\n  // OR\n  //\n  // $sum\
    \ = 0;\n  // for ($i = 1; $i <= $n; $i++) {\n  //   $sum += $i;\n  // }\n  //\
    \ return $sum;\n  //\n  //\n  // OR\n  //\n  $sum = ($n * ($n + 1)) / 2;\n  return\
    \ $sum;\n}\n\necho sum_to_n(5);", "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++)\
    \ {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}\n", "  \n}\n", "    $arr = range(1,\
    \ $n);\n    return array_sum($arr);\n}\necho sum_to_n(30) . PHP_EOL;\necho sum_to_n(100)\
    \ . PHP_EOL;\necho sum_to_n(5) . PHP_EOL;\necho sum_to_n(10) . PHP_EOL;\necho\
    \ sum_to_n(1) . PHP_EOL;", "\t$sum = $n;\n\tfor ($i=1; $i < $n; $i++) { \n\t\t\
    $sum += $i;\n\t}\n\treturn $sum;\n}\n", "    // BEGIN\n    $sum = 0;\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n \
    \   // END\n}", "\tif($n == 1) {\n\t\treturn 1;\n\t}\n\treturn $n + sum_to_n($n\
    \ - 1);\n}\n\n$n = 30;\necho \"Sum of numbers from 1 to $n: \" . sum_to_n($n)\
    \ . \"\\n\";", "  $result = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $result\
    \ += $i;\n  }\n  return $result;\n}\necho sum_to_n(30);\necho \"<br>\";\necho\
    \ sum_to_n(100);\necho \"<br>\";\necho sum_to_n(5);\necho \"<br>\";\necho sum_to_n(10);\n\
    echo \"<br>\";\necho sum_to_n(1);\necho \"<br>\";\n", "    $result = 0;\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $result += $i;\n    }\n    return $result;\n\
    }", "    return (($n / 2) * ($n + 1));\n}\n", "\tif($n == 1) {\n\t\treturn 1;\n\
    \t}\n\treturn $n + sum_to_n($n - 1);\n}\n\necho sum_to_n(30) . \"<br>\";\necho\
    \ sum_to_n(100) . \"<br>\";\necho sum_to_n(5) . \"<br>\";\necho sum_to_n(10) .\
    \ \"<br>\";\necho sum_to_n(1) . \"<br>\";\n", "\treturn $n * ($n + 1) / 2;\n}\n",
  "    $sum = $n;\n    for ($i = $n-1; $i > 0; $i--) {\n        $sum += $i;\n    }\n\
    \    return $sum;\n}\n", "  // $sum = 0;\n  // for ($i = 1; $i <= $n; $i++) {\n\
    \  //   $sum += $i;\n  // }\n  // return $sum;\n  // OR\n  return ($n * ($n +\
    \ 1)) / 2;\n}", "    return $n*($n+1)/2;\n}\n", "    $sum = 0;\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\necho\
    \ sum_to_n(30) . PHP_EOL;\necho sum_to_n(100) . PHP_EOL;\necho sum_to_n(5) . PHP_EOL;\n\
    echo sum_to_n(10) . PHP_EOL;\necho sum_to_n(1) . PHP_EOL;", "\t$sum = 0;\n\tfor\
    \ ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}\n\nprint\
    \ sum_to_n(10);", "    $n * ($n + 1) / 2;\n}", "    if($n==1) {\n        return\
    \ 1;\n    }\n    else {\n        return $n + sum_to_n($n-1);\n    }\n}\n", "\t\
    $sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n\
    }\n", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}\n\necho sum_to_n(30);\necho \"<br>\";\necho sum_to_n(100);\n\
    echo \"<br>\";\necho sum_to_n(5);\necho \"<br>\";\necho sum_to_n(10);\necho \"\
    <br>\";\necho sum_to_n(1);\necho \"<br>\";", "  return $n * ($n + 1) / 2;\n}\n\
    \necho sum_to_n(30) . PHP_EOL;\necho sum_to_n(100) . PHP_EOL;\necho sum_to_n(5)\
    \ . PHP_EOL;\necho sum_to_n(10) . PHP_EOL;\necho sum_to_n(1) . PHP_EOL;", "  if\
    \ ($n == 1) {\n    return 1;\n  } else {\n    return $n + sum_to_n($n - 1);\n\
    \  }\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum +=\
    \ $i;\n    }\n    return $sum;\n}\n", "\t\n\t$sum = 0;\n\tfor ($i = 1; $i <= $n;\
    \ $i++) {\n\t\t$sum += $i;\n\t}\n\t\n\treturn $sum;\n}\n\n", "\t$sum = 0;\n\t\
    for ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}\n", " \
    \ return ($n*($n+1))/2;\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum;\n}\n", "\t$sum = 0;\n\tfor ($i\
    \ = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}", "  // Your\
    \ code here!\n}\n", "    $sum = 0;\n    // write your code here\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n", " \
    \ return ($n + 1) * $n / 2;\n}\n\necho sum_to_n(30) . \"\\n\";\necho sum_to_n(100)\
    \ . \"\\n\";\necho sum_to_n(5) . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho\
    \ sum_to_n(1) . \"\\n\";\n", "  // $result = 0;\n  // for ($i = 1; $i <= $n; $i++)\
    \ {\n  //   $result += $i;\n  // }\n  // return $result;\n  return ($n*($n+1))/2;\n\
    }", "  $total = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $total += $i;\n  }\n\
    \  return $total;\n}\necho sum_to_n(30) . \"\\n\";\necho sum_to_n(100) . \"\\\
    n\";\necho sum_to_n(5) . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho sum_to_n(1)\
    \ . \"\\n\";", "  // YOUR CODE GOES HERE.\n  $sum = 0;\n  for ($i = 1; $i <= $n;\
    \ $i++) {\n  \t$sum += $i;\n  }\n  return $sum;\n}\n", "  $sum = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n}\n\necho \"sum_to_n(30)\"\
    ;\necho sum_to_n(30);\necho \"sum_to_n(100)\";\necho sum_to_n(100);\necho \"sum_to_n(5)\"\
    ;\necho sum_to_n(5);\necho \"sum_to_n(10)\";\necho sum_to_n(10);\necho \"sum_to_n(1)\"\
    ;\necho sum_to_n(1);\n", "\tif($n == 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\t\
    return $n + sum_to_n($n - 1);\n\t}\n}\n", "\t// Make sure that $n is a positive\
    \ integer.\n\tif( ! is_int($n) || $n < 1 ) return FALSE;\n\t$sum = 0;\n\tfor($i\
    \ = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}\n\nprint(sum_to_n(5));",
  "    if ($n === 1) {\n        return 1;\n    } else {\n        return $n + sum_to_n($n\
    \ - 1);\n    }\n}\n\necho sum_to_n(5);", "  $result = 0;\n  for ($i = 1; $i <=\
    \ $n; $i++) {\n    $result += $i;\n  }\n  return $result;\n}\n", "\t$sum = 0;\n\
    \tfor ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}", " \
    \ $total = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $total += $i;\n  }\n  return\
    \ $total;\n}\necho sum_to_n(30) . \"\\n\";\necho sum_to_n(100) . \"\\n\";\necho\
    \ sum_to_n(5) . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho sum_to_n(1) . \"\\\
    n\";", "  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n\
    \  return $sum;\n}\n", "    return ($n * ($n + 1)) / 2;\n}\n", "\t$sum = 0;\n\t\
    // it is really important that the counter starts at 1, \n\t//  because $n and\
    \ $sum are not defined before this loop\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t\
    $sum += $i;\n\t}\n\treturn $sum;\n}\n", "    $sum = 0;\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n\nif (isset($_REQUEST['n']))\
    \ {\n    $result = sum_to_n($_REQUEST['n']);\n    echo 'Sum from 1 to ' . $_REQUEST['n']\
    \ . ' is ' . $result;\n}", "    $sum = 0;\n    $sum = (1 + $n) * $n / 2;\n   \
    \ return $sum;\n}\n\necho sum_to_n(30).\"\\n\";\necho sum_to_n(100).\"\\n\";\n\
    echo sum_to_n(5).\"\\n\";\necho sum_to_n(10).\"\\n\";\necho sum_to_n(1).\"\\n\"\
    ;", '}', "  $accum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $accum += $i;\n\
    \  }\n  return $accum;\n}\n", "    // Your code here\n    $result = 0;\n    for\
    \ ($i = 1; $i <= $n; $i++){\n        $result += $i;\n    }\n    return $result;\n\
    }\n", "    $result = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $result +=\
    \ $i;\n    }\n    return $result;\n}\n", "    $sum = 0;\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n", "    if ($n\
    \ < 1) {\n        return 0;\n    } else {\n        return $n + sum_to_n($n - 1);\n\
    \    }\n}", "\treturn $n * ($n + 1) / 2;\n}\n", "    $sum = 0;\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n", " \
    \   if($n<0) {\n        return 0;\n    }\n    else {\n        $sum = 0;\n    \
    \    for($i=1; $i<=$n; $i++) {\n            $sum += $i;\n        }\n        return\
    \ $sum;\n    }\n}", "\n}\n", "  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n\
    \    $sum += $i;\n  }\n  return $sum;\n}\n", "\t$total = 0;\n\tfor ($i = 1; $i\
    \ <= $n; $i++) {\n\t\t$total += $i;\n\t}\n\treturn $total;\n}\n\nprint sum_to_n(30)\
    \ . \"\\n\";\nprint sum_to_n(100) . \"\\n\";\nprint sum_to_n(5) . \"\\n\";\nprint\
    \ sum_to_n(10) . \"\\n\";\nprint sum_to_n(1) . \"\\n\";", "  return $n * ($n +\
    \ 1) / 2;\n}\n\nprint sum_to_n(30);\nprint '<br>';\nprint sum_to_n(100);\nprint\
    \ '<br>';\nprint sum_to_n(5);\nprint '<br>';\nprint sum_to_n(10);\nprint '<br>';\n\
    print sum_to_n(1);\nprint '<br>';", "    $sum = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}", "    $sum = 0;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n\
    }\n$n = 30;\necho sum_to_n($n);\necho \"\\n\";\n$n = 100;\necho sum_to_n($n);\n\
    echo \"\\n\";\n$n = 5;\necho sum_to_n($n);\necho \"\\n\";\n$n = 10;\necho sum_to_n($n);\n\
    echo \"\\n\";\n$n = 1;\necho sum_to_n($n);\necho \"\\n\";", "    if ($n === 1)\
    \ {\n        return 1;\n    } else {\n        return $n + sum_to_n($n - 1);\n\
    \    }\n}\n\n$n = readline(\"Enter a number: \");\n$sum = sum_to_n($n);\nprint(\"\
    \\nThe sum from 1 to $n is $sum\\n\");", "  return $n * ($n + 1) / 2;\n}\n\necho\
    \ sum_to_n(30) . PHP_EOL;\necho sum_to_n(100) . PHP_EOL;\necho sum_to_n(5) . PHP_EOL;\n\
    echo sum_to_n(10) . PHP_EOL;\necho sum_to_n(1) . PHP_EOL;", "    $sum = 0;\n \
    \   for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n\
    }", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum;\n}", "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\
    \t\t$sum += $i;\n\t}\n\treturn $sum;\n}\n", "  // your code here\n}\n", "    $sum\
    \ = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum;\n}\n", "  $total = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $total +=\
    \ $i;\n  }\n  return $total;\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\necho sum_to_n(1) .\
    \ \"\\n\";\necho sum_to_n(5) . \"\\n\";\necho sum_to_n(10) . \"\\n\";\necho sum_to_n(30)\
    \ . \"\\n\";\necho sum_to_n(100) . \"\\n\";", "  // your code goes here\n  return\
    \ $n;\n}\n", "    if($n==1) {\n        return 1;\n    }\n    return $n + sum_to_n($n-1);\n\
    }\n", "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\t\
    return $sum;\n}\n", "  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum +=\
    \ $i;\n  }\n  return $sum;\n}\n\n$n = $argv[1];\necho \"$n: \" . sum_to_n($n)\
    \ . \"\\n\";", "    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum;\n}\n", "\t$count = 0;\n\tfor ($i = 1; $i <=\
    \ $n; $i++) {\n\t\t$count += $i;\n\t}\n\treturn $count;\n}\n", "  $sum = 0;\n\
    \  for ($i = 1; $i <= $n; $i += 1) {\n    $sum += $i;\n  }\n  return $sum;\n}\n",
  "    return $n * ($n + 1) / 2;\n}\n", "    $sum = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}", "\t$sum = 0;\n\t\
    for ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}", "  \
    \  $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum;\n}\n", "    $total = 0;\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $total += $i;\n    }\n    return $total;\n}", "  $sum = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n}\n\n$tests =\
    \ array(\n  30 => 465,\n  100 => 5050,\n  5 => 15,\n  10 => 55,\n  1 => 1,\n);\n\
    \nforeach ($tests as $i => $expected) {\n  assert(sum_to_n($i) === $expected);\n\
    }", "    // TODO: Implement the sum_to_n function.\n}", "    $ret = 0;\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $ret += $i;\n    }\n    return $ret;\n}\n\
    echo sum_to_n(1);\necho \"\\n\";\necho sum_to_n(2);\necho \"\\n\";\necho sum_to_n(5);\n\
    echo \"\\n\";\necho sum_to_n(30);\necho \"\\n\";\necho sum_to_n(100);\necho \"\
    \\n\";\necho sum_to_n(500);\necho \"\\n\";\n", "\t$sum = 0;\n\tfor ($i = 1; $i\
    \ <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}\n\necho \"sum_to_n(30):\
    \ \".sum_to_n(30).\"\\n\";\necho \"sum_to_n(100): \".sum_to_n(100).\"\\n\";\n\
    echo \"sum_to_n(5): \".sum_to_n(5).\"\\n\";\necho \"sum_to_n(10): \".sum_to_n(10).\"\
    \\n\";\necho \"sum_to_n(1): \".sum_to_n(1).\"\\n\";", "  $sum = 0;\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n}\n\necho sum_to_n(30)\
    \ . \"\\n\";\necho sum_to_n(100) . \"\\n\";\necho sum_to_n(5) . \"\\n\";\necho\
    \ sum_to_n(10) . \"\\n\";\necho sum_to_n(1) . \"\\n\";", "    if($n === 1) {\n\
    \        return 1;\n    } else {\n        return $n + sum_to_n($n - 1);\n    }\n\
    }", "  return (1 + $n) * $n / 2;\n}\n\necho sum_to_n(5) . PHP_EOL;\necho sum_to_n(10)\
    \ . PHP_EOL;\necho sum_to_n(1) . PHP_EOL;\n", "  if($n <= 1) {\n    return $n;\n\
    \  }\n  else {\n    return $n + sum_to_n($n - 1);\n  }\n}\n", "    // start with\
    \ a sum of 0\n    $sum = 0;\n    // loop from 1 to n\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        // add the current value of i to the sum\n        $sum += $i;\n\
    \    }\n    // return the result\n    return $sum;\n}\n", "    $sum = 0;\n   \
    \ for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n\
    }\n", "    if ($n == 1) {\n        return 1;\n    }\n    return $n + sum_to_n($n\
    \ - 1);\n}\n\necho sum_to_n(10) . \"\\n\";\n", "    $sum = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n\necho(sum_to_n(30)\
    \ . \"\\n\");\necho(sum_to_n(100) . \"\\n\");\necho(sum_to_n(5) . \"\\n\");\n\
    echo(sum_to_n(10) . \"\\n\");\necho(sum_to_n(1) . \"\\n\");", "\t$sum = 0;\n\t\
    for ($i = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}\n", " \
    \ // The sum_to_n function should increment a counter from 1 to n, keeping a\n\
    \  // running total of the value of the counter. The running total should be\n\
    \  // returned when the counter reaches n.\n  $sum = 0;\n  for ($i = 1; $i <=\
    \ $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n}\n", "    return $n*($n+1)/2;\n\
    }\n\necho sum_to_n(30);\necho \"\\n\";\necho sum_to_n(100);\necho \"\\n\";\necho\
    \ sum_to_n(5);\necho \"\\n\";\necho sum_to_n(10);\necho \"\\n\";\necho sum_to_n(1);\n\
    echo \"\\n\";", "    $total = 0;\n    for ($i = 1; $i <= $n; $i++) {\n       \
    \ $total += $i;\n    }\n    return $total;\n}", "\t$sum = 0;\n\tfor ($i = 1; $i\
    \ <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}\necho \"sum_to_n(30)\
    \ = \" . sum_to_n(30) . \"\\n\";\necho \"sum_to_n(100) = \" . sum_to_n(100) .\
    \ \"\\n\";\necho \"sum_to_n(5) = \" . sum_to_n(5) . \"\\n\";\necho \"sum_to_n(10)\
    \ = \" . sum_to_n(10) . \"\\n\";\necho \"sum_to_n(1) = \" . sum_to_n(1) . \"\\\
    n\";\n", "\treturn $n * ($n + 1) / 2;\n}\n", "  $sum = 0;\n  for ($i = 1; $i <=\
    \ $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n}", "\t$sum = 0;\n\tfor ($i\
    \ = 1; $i <= $n; $i++) {\n\t\t$sum += $i;\n\t}\n\treturn $sum;\n}\necho \"sum_to_n(30)\
    \ = \" . sum_to_n(30) . \"<br>\";\necho \"sum_to_n(100) = \" . sum_to_n(100) .\
    \ \"<br>\";\necho \"sum_to_n(5) = \" . sum_to_n(5) . \"<br>\";\necho \"sum_to_n(10)\
    \ = \" . sum_to_n(10) . \"<br>\";\necho \"sum_to_n(1) = \" . sum_to_n(1) . \"\
    <br>\";", "  $sum = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n\
    \  return $sum;\n}", "\tif($n == 1) {\n\t\treturn 1;\n\t} else {\n\t\treturn $n\
    \ + sum_to_n($n - 1);\n\t}\n}\necho sum_to_n(30);\necho \"<br />\";\necho sum_to_n(100);\n\
    echo \"<br />\";\necho sum_to_n(5);\necho \"<br />\";\necho sum_to_n(10);\necho\
    \ \"<br />\";\necho sum_to_n(1);", "\t// Your code here.\n\tif($n==1){\n\t\treturn\
    \ 1;\n\t}\n\telse{\n\t\treturn $n+sum_to_n($n-1);\n\t}\n}\n", "  $sum = 0;\n \
    \ for ($i = 1; $i <= $n; $i++) {\n    $sum += $i;\n  }\n  return $sum;\n}\n\n\
    echo sum_to_n(5) . \"\\n\";\necho sum_to_n(30) . \"\\n\";\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

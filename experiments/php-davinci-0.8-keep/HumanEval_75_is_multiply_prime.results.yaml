name: HumanEval_75_is_multiply_prime
language: php
results:
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $factors = [];\n  for ($n =\
    \ 2; $n <= $a; $n++) {\n    for (; $a % $n == 0; $a /= $n) {\n      $factors[]\
    \ = $n;\n    }\n  }\n  return count($factors) == 3;\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  // write here.\n}\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk567l4_u.php:16\n\
    Stack trace:\n#0 /tmp/tmpk567l4_u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpk567l4_u.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  for ($i = 2; $i < $a; $i++)\
    \ {\n    if ($a % $i == 0) {\n      if (is_prime($i)) {\n        $b = $a / $i;\n\
    \        if (is_prime($b)) {\n          return true;\n        }\n      }\n   \
    \ }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpfxzix_oz.php:11\nStack trace:\n#0 /tmp/tmpfxzix_oz.php(22): is_multiply_prime(30)\n\
    #1 /tmp/tmpfxzix_oz.php(27): candidate(30)\n#2 /tmp/tmpfxzix_oz.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfxzix_oz.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tif ($a == 1) {\n\t\treturn\
    \ false;\n\t}\n\tif ($a == 2) {\n\t\treturn true;\n\t}\n\tif ($a % 2 == 0) {\n\
    \t\treturn false;\n\t}\n\t$i = 3;\n\twhile ($i <= ceil(sqrt($a))) {\n\t\tif ($a\
    \ % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$i = $i + 2;\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9fyvyv8.php:33\n\
    Stack trace:\n#0 /tmp/tmpz9fyvyv8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpz9fyvyv8.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime_numbers = array();\n\
    \tfor ($i = 1; $i <= $a; $i++) {\n\t\tif ($i == 1) {\n\t\t\tcontinue;\n\t\t}\n\
    \t\t$is_prime = true;\n\t\tfor ($j = 2; $j < $i; $j++) {\n\t\t\tif ($i % $j ==\
    \ 0) {\n\t\t\t\t$is_prime = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($is_prime)\
    \ {\n\t\t\t$prime_numbers[] = $i;\n\t\t}\n\t}\n\tforeach ($prime_numbers as $prime_number)\
    \ {\n\t\tif ($a % $prime_number == 0) {\n\t\t\t$is_multiply_prime = true;\n\t\t\
    \t$a = $a / $prime_number;\n\t\t\tfor ($i = 0; $i < count($prime_numbers); $i++)\
    \ {\n\t\t\t\tif ($a % $prime_numbers[$i] == 0) {\n\t\t\t\t\t$a = $a / $prime_numbers[$i];\n\
    \t\t\t\t\tif ($a == 1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\necho is_multiply_prime(30);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpey5m4r1x.php:49\n\
    Stack trace:\n#0 /tmp/tmpey5m4r1x.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpey5m4r1x.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // Your code here\n}\n\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67ab3hq3.php:17\n\
    Stack trace:\n#0 /tmp/tmp67ab3hq3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp67ab3hq3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes_sum = 0;\n    for\
    \ ($i = 2; $i < $a; $i++) {\n        if ($a % $i == 0) {\n            $primes_sum\
    \ += 1;\n        }\n    }\n    return $primes_sum >= 3;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cnw0ks1.php:25\n\
    Stack trace:\n#0 /tmp/tmp7cnw0ks1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7cnw0ks1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$counter = 0;\n\tfor ($i =\
    \ 2; $i < 100; $i++) {\n\t\t$is_prime = true;\n\t\tfor ($j = 2; $j < $i; $j++)\
    \ {\n\t\t\tif ($i % $j == 0) {\n\t\t\t\t$is_prime = false;\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t\tif ($is_prime && $a % $i == 0) {\n\t\t\t$counter++;\n\t\t}\n\
    \t}\n\treturn $counter == 3;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdznum5c7.php:32\n\
    Stack trace:\n#0 /tmp/tmpdznum5c7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdznum5c7.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = array();\n    for\
    \ ($i = 1; $i <= $a; $i++) {\n        if ($a % $i == 0) {\n            if (is_prime($i))\
    \ {\n                $primes[] = $i;\n            }\n        }\n    }\n    if\
    \ (count($primes) == 3) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmec0wsbd.php:12\nStack trace:\n#0 /tmp/tmpmec0wsbd.php(25): is_multiply_prime(5)\n\
    #1 /tmp/tmpmec0wsbd.php(29): candidate(5)\n#2 /tmp/tmpmec0wsbd.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmec0wsbd.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $res = [];\n    for ($i =\
    \ 2; $i < $a; $i++) {\n        while ($a % $i == 0) {\n            $res[] = $i;\n\
    \            $a /= $i;\n        }\n    }\n    if (count($res) == 3) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohixvjyf.php:28\n\
    Stack trace:\n#0 /tmp/tmpohixvjyf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpohixvjyf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$n = $a;\n\t$str = [];\n\t\
    $i = 2;\n\twhile ($n > 1) {\n\t\tif ($n % $i == 0) {\n\t\t\t$str[] = $i;\n\t\t\
    \t$n = $n / $i;\n\t\t} else {\n\t\t\t$i++;\n\t\t}\n\t}\n\t$tmp = [];\n\tfor ($i\
    \ = 0; $i < count($str); $i++) {\n\t\t$sum = 0;\n\t\tfor ($j = 1; $j <= $str[$i];\
    \ $j++) {\n\t\t\tif ($str[$i] % $j == 0) {\n\t\t\t\t$sum++;\n\t\t\t}\n\t\t}\n\t\
    \tif ($sum == 2) {\n\t\t\t$tmp[] = $str[$i];\n\t\t}\n\t}\n\tif (count($tmp) ==\
    \ 3) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // for ($i = 2; $i < $a;\
    \ $i++) {\n    //     if ($a % $i == 0) {\n    //         for ($k = 2; $k < $i;\
    \ $k++) {\n    //             if ($i % $k == 0) {\n    //                 return\
    \ false;\n    //             }\n    //         }\n    //     }\n    // }\n   \
    \ // return true;\n    $range = range(2, $a);\n    // foreach ($range as $i) {\n\
    \    //     if ($a % $i == 0) {\n    //         if (in_array($i, $range)) {\n\
    \    //             if ($i % $i == 0) {\n    //                 return false;\n\
    \    //             }\n    //         }\n    //     }\n    // }\n    // return\
    \ true;\n    $prime_array = array_filter($range, function($item) {\n        for\
    \ ($i = 2; $i < $item; $i++) {\n            if ($item % $i == 0) {\n         \
    \       return false;\n            }\n        }\n        return true;\n    });\n\
    \    foreach ($prime_array as $prime) {\n        if ($a % $prime == 0) {\n   \
    \         $a = $a / $prime;\n        }\n    }\n    if ($a == 1) {\n        return\
    \ true;\n    }\n    return false;\n}\necho is_multiply_prime(30);\necho '<br>';\n\
    echo is_multiply_prime(6);\necho '<br>';\necho is_multiply_prime(33);\necho '<br>';\n\
    \nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1<br>1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpky_iz_xg.php:60\n\
    Stack trace:\n#0 /tmp/tmpky_iz_xg.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpky_iz_xg.php\
    \ on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    $ret = false;\n    $sqrt = (int)sqrt($a);\n    for ($i = 0; $i < count($primes);\
    \ $i++) {\n        $factor = $primes[$i];\n        if ($a % $factor == 0) {\n\
    \            $a /= $factor;\n            $ret = is_multiply_prime($a);\n     \
    \       break;\n        }\n    }\n    return $ret;\n}\n\n$arr = [1, 4, 6, 9, 12,\
    \ 18, 24, 27, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90, 96];\nforeach ($arr\
    \ as $a) {\n    echo is_multiply_prime($a) ? \"True \" : \"False \";\n}\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "False False False False False False False False False False False False\
    \ False False False False False False False False \n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmprc8hj60u.php:35\nStack trace:\n#0 /tmp/tmprc8hj60u.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprc8hj60u.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$i = $a;\n\t$j = $a;\n\t$k\
    \ = $a;\n\t$l = $a;\n\tif(is_numeric($a)) {\n\t\tif ($a > 0) {\n\t\t\tif ($a <=\
    \ 100) {\n\t\t\t\twhile ($i % 2 == 0) {\n\t\t\t\t\t$i = $i / 2;\n\t\t\t\t}\n\t\
    \t\t\twhile ($j % 3 == 0) {\n\t\t\t\t\t$j = $j / 3;\n\t\t\t\t}\n\t\t\t\twhile\
    \ ($k % 5 == 0) {\n\t\t\t\t\t$k = $k / 5;\n\t\t\t\t}\n\t\t\t\twhile ($l % 7 ==\
    \ 0) {\n\t\t\t\t\t$l = $l / 7;\n\t\t\t\t}\n\t\t\t\tif ($i == 1 && $j == 1 && $k\
    \ == 1 && $l == 1) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn\
    \ false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn \"error\";\n\t\t\t}\n\t\t\
    } else {\n\t\t\treturn \"error\";\n\t\t}\n\t} else {\n\t\treturn \"error\";\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ygv98pf.php:50\n\
    Stack trace:\n#0 /tmp/tmp4ygv98pf.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp4ygv98pf.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // get prime numbers\n  \
    \  $primes = get_prime_numbers($a);\n    // get prime factors of a\n    $factors\
    \ = get_prime_factors($a, $primes);\n    // true if the factors and the prime\
    \ factors are equal in count\n    if (count($factors) == 3) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_prime_numbers()\
    \ in /tmp/tmp6160n5rr.php:10\nStack trace:\n#0 /tmp/tmp6160n5rr.php(22): is_multiply_prime(5)\n\
    #1 /tmp/tmp6160n5rr.php(26): candidate(5)\n#2 /tmp/tmp6160n5rr.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6160n5rr.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $a=60;\n    $result=0;\n\
    \    for($i=1;$i<=$a;$i++){\n        if($a%$i==0){\n            $count=$count+1;\n\
    \        }\n    }\n    if($count==2){\n        $result=1;\n    }\n    return $result;\n\
    }\n\necho is_multiply_prime();\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught ArgumentCountError: Too few arguments to function\
    \ is_multiply_prime(), 0 passed in /tmp/tmpj4ca54ii.php on line 22 and exactly\
    \ 1 expected in /tmp/tmpj4ca54ii.php:8\nStack trace:\n#0 /tmp/tmpj4ca54ii.php(22):\
    \ is_multiply_prime()\n#1 {main}\n  thrown in /tmp/tmpj4ca54ii.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $k = 0;\n    for ($i = 2;\
    \ $i < $a; $i++) {\n        if ($a % $i == 0) {\n            for ($j = 2; $j <\
    \ $i; $j++) {\n                if ($i % $j == 0) {\n                    break;\n\
    \                }\n            }\n            if ($j == $i) {\n             \
    \   $arr[$k] = $i;\n                $k++;\n            }\n        }\n    }\n \
    \   if (count($arr) >= 3) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpitjipvyf.php on line 23\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpitjipvyf.php:36\nStack trace:\n#0 /tmp/tmpitjipvyf.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpitjipvyf.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime_numbers = array();\n\
    \t$multiple_numbers = array();\n\t$count = 0;\n\t$factor = 2;\n\twhile ($factor\
    \ <= ($a/2)) {\n\t\tif ($a % $factor == 0) {\n\t\t\t$multiple_numbers[] = $factor;\n\
    \t\t\t$a = $a / $factor;\n\t\t}\n\t\telse {\n\t\t\t$factor++;\n\t\t}\n\t}\n\t\
    $multiple_numbers[] = $a;\n\tif (count($multiple_numbers) == 3) {\n\t\tfor ($i\
    \ = 0; $i < count($multiple_numbers); $i++) {\n\t\t\tfor ($j = 2; $j < $multiple_numbers[$i];\
    \ $j++) {\n\t\t\t\tif ($multiple_numbers[$i] % $j == 0) {\n\t\t\t\t\t$count++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\tif ($count == 0) {\n\t\t\t\t$prime_numbers[] = $multiple_numbers[$i];\n\
    \t\t\t}\n\t\t\t$count = 0;\n\t\t}\n\t\tif (count($prime_numbers) == 3) {\n\t\t\
    \treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\
    \t\treturn false;\n\t}\n}\necho is_multiply_prime(30);\necho is_multiply_prime(15);\n\
    echo is_multiply_prime(21);\necho is_multiply_prime(57);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$result = true;\n\t$primes\
    \ = array();\n\tfor ($i = $a - 1; $i > 1; $i--) {\n\t\tif ($a % $i == 0) {\n\t\
    \t\t$primes[] = $i;\n\t\t}\n\t}\n\tif (count($primes) == 3) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpugappzrw.php:28\n\
    Stack trace:\n#0 /tmp/tmpugappzrw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpugappzrw.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tif (empty($a)) return false;\n\
    \t\n\t$array = [];\n\t\n\tfor ($i = 2; $i <= $a; $i++) {\n\t\tif ($a % $i == 0)\
    \ {\n\t\t\t$array[] = $i;\n\t\t\t$a = $a / $i;\n\t\t\t$i--;\n\t\t}\n\t}\n\t\n\t\
    $result = 1;\n\t\n\tforeach ($array as $num) {\n\t\t$result *= $num;\n\t}\n\t\n\
    \tif ($result == 8) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptq52zvsw.php:40\n\
    Stack trace:\n#0 /tmp/tmptq52zvsw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmptq52zvsw.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $result = false;\n  $count\
    \ = 0;\n  for ($i = 1; $i <= $a; $i++) {\n    $is_prime = true;\n    for ($j =\
    \ 2; $j < $i; $j++) {\n      if ($i % $j == 0) {\n        $is_prime = false;\n\
    \        break;\n      }\n    }\n    if ($is_prime && $a % $i == 0) {\n      $count\
    \ += 1;\n    }\n  }\n  if ($count >= 3) {\n    $result = true;\n  }\n  return\
    \ $result;\n}\nprint(is_multiply_prime(45));\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh_jf95v.php:36\n\
    Stack trace:\n#0 /tmp/tmpmh_jf95v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmh_jf95v.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t// Write your code here\n\t\
    // Hint: use is_prime function\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89hpvisd.php:18\n\
    Stack trace:\n#0 /tmp/tmp89hpvisd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp89hpvisd.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a==1) {\n        return\
    \ false;\n    }\n    if ($a<=100) {\n        $primes=array();\n        for ($i=2;\
    \ $i <=100 ; $i++) { \n            $is_prime=true;\n            for ($j=2; $j\
    \ < $i; $j++) { \n                if ($i%$j==0) {\n                    $is_prime=false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($is_prime) {\n                $primes[]=$i;\n            }\n        }\n   \
    \     $is_valid=false;\n        for ($i=0; $i <count($primes) ; $i++) { \n   \
    \         for ($j=$i; $j <count($primes) ; $j++) { \n                for ($k=$j;\
    \ $k <count($primes) ; $k++) { \n                    if ($primes[$i]*$primes[$j]*$primes[$k]==$a)\
    \ {\n                        $is_valid=true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ $is_valid;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbamut0vl.php:51\n\
    Stack trace:\n#0 /tmp/tmpbamut0vl.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpbamut0vl.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$ans = false;\n\t$b = $a;\n\
    \tfor ($i = 2; $i < 100; $i++) {\n\t\tif ($b % $i == 0) {\n\t\t\t$b = $b / $i;\n\
    \t\t\tif ($b == 1) {\n\t\t\t\t$ans = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$i--;\n\
    \t\t}\n\t}\n\treturn $ans;\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmq1l4dl.php:28\n\
    Stack trace:\n#0 /tmp/tmpjmq1l4dl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjmq1l4dl.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $a = trim($a);\n    if ($a\
    \ == null || $a > 100) {\n        return false;\n    }\n    $result = 0;\n   \
    \ $prime = true;\n    $primeMultiply = 0;\n    for ($i = 2; $i <= $a; $i++) {\n\
    \        for ($j = 2; $j <= $i / 2; $j++) {\n            if ($i % $j == 0) {\n\
    \                $prime = false;\n                break;\n            }\n    \
    \    }\n        if ($prime) {\n            if (($a % $i) == 0) {\n           \
    \     $primeMultiply++;\n                $result .= $i . ', ';\n            }\n\
    \        }\n        $prime = true;\n    }\n    echo $result;\n    if ($primeMultiply\
    \ == 3) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nvar_dump(is_multiply_prime(30));\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "02, 3, 5, bool(true)\n05, 02, 3, 5, 02, \nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsipzcn80.php:46\nStack trace:\n#0 /tmp/tmpsipzcn80.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsipzcn80.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime_num = get_prime_numbers($a);\n\
    \t$c = count($prime_num);\n\tfor ($i = 0; $i < $c; $i++) {\n\t\tfor ($j = $i +\
    \ 1; $j < $c; $j++) {\n\t\t\tfor ($k = $j + 1; $k < $c; $k++) {\n\t\t\t\tif ($prime_num[$i]\
    \ * $prime_num[$j] * $prime_num[$k] == $a) {\n\t\t\t\t\treturn TRUE;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\treturn FALSE;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_prime_numbers()\
    \ in /tmp/tmpio6xr28x.php:9\nStack trace:\n#0 /tmp/tmpio6xr28x.php(24): is_multiply_prime(5)\n\
    #1 /tmp/tmpio6xr28x.php(28): candidate(5)\n#2 /tmp/tmpio6xr28x.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmpio6xr28x.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n   for ($i = 2; $i < sqrt($a);\
    \ $i++) {\n   \t\tif ($a % $i == 0) {\n   \t\t\t$b = $a / $i;\n   \t\t\tfor ($j\
    \ = 2; $j < sqrt($b); $j++) {\n   \t\t\t\tif ($b % $j == 0) {\n   \t\t\t\t\t$c\
    \ = $b / $j;\n   \t\t\t\t\tfor ($m = 2; $m < sqrt($c); $m++) {\n   \t\t\t\t\t\t\
    if ($c % $m == 0) {\n   \t\t\t\t\t\t\treturn false;\n   \t\t\t\t\t\t}\n   \t\t\
    \t\t\t}\n   \t\t\t\t\treturn true;\n   \t\t\t\t}\n   \t\t\t}\n   \t\t}\n   }\n\
    }\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2oaeleg.php:32\n\
    Stack trace:\n#0 /tmp/tmpl2oaeleg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpl2oaeleg.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [];\n    for ($i\
    \ = 1; $i <= $a; $i++) {\n        if (is_prime($i)) {\n            $primes[] =\
    \ $i;\n        }\n    }\n    for ($i = 0; $i < count($primes); $i++) {\n     \
    \   for ($j = 0; $j < count($primes); $j++) {\n            for ($k = 0; $k < count($primes);\
    \ $k++) {\n                if ($primes[$i] * $primes[$j] * $primes[$k] == $a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0hb54bx5.php:11\nStack trace:\n#0 /tmp/tmp0hb54bx5.php(27): is_multiply_prime(5)\n\
    #1 /tmp/tmp0hb54bx5.php(31): candidate(5)\n#2 /tmp/tmp0hb54bx5.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0hb54bx5.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime = false;\n    if ($a\
    \ % 2 == 0 && $a % 3 == 0 && $a % 5 == 0) {\n        $prime = true;\n    }\n \
    \   return $prime;\n}\n\necho is_multiply_prime(30) . \"<br>\";\necho is_multiply_prime(32)\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwrcci1_.php:25\n\
    Stack trace:\n#0 /tmp/tmpxwrcci1_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxwrcci1_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $factors = array();\n   \
    \ $i = 2;\n    while ($a > 1) {\n        if ($a % $i == 0) {\n            $factors[]\
    \ = $i;\n            $a /= $i;\n        } else {\n            $i++;\n        }\n\
    \    }\n    if (count($factors) != 3) {\n        return false;\n    } else {\n\
    \        return true;\n    }\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primeNumbers = array(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97);\n    if ($a < 3) {\n        return false;\n    }\n    $primes\
    \ = [];\n    foreach ($primeNumbers as $number) {\n        if ($a % $number ==\
    \ 0) {\n            $primes[] = $number;\n            $a = $a / $number;\n   \
    \     }\n    }\n    $result = count($primes) == 3 ? true : false;\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjyzq6smp.php:30\n\
    Stack trace:\n#0 /tmp/tmpjyzq6smp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjyzq6smp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a % 3 == 0) {\n    \
    \    return true;\n    }\n    return false;\n}\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3pmt6zu.php:22\n\
    Stack trace:\n#0 /tmp/tmpo3pmt6zu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpo3pmt6zu.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $mult_of_prime = [1, 2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    $prime_num = 3;\n    $sum = 0;\n    for ($i = 0; $i < count($mult_of_prime);\
    \ $i++) {\n        if ($a % $mult_of_prime[$i] == 0) {\n            $sum++;\n\
    \        }\n    }\n    if ($sum == $prime_num) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf3l3ftss.php:30\n\
    Stack trace:\n#0 /tmp/tmpf3l3ftss.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf3l3ftss.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $is_multiply_prime = false;\n\
    \  $divisors = [];\n  if ($a > 100) {\n    return $is_multiply_prime;\n  }\n \
    \ if ($a == 1) {\n    return $is_multiply_prime;\n  }\n  if ($a == 2) {\n    return\
    \ $is_multiply_prime;\n  }\n  if ($a == 3) {\n    return $is_multiply_prime;\n\
    \  }\n  for ($i = 1; $i <= $a; $i++) {\n    if ($a % $i == 0) {\n      $divisors[]\
    \ = $i;\n    }\n  }\n  $count_of_divisors = count($divisors);\n  if ($count_of_divisors\
    \ == 3) {\n    $is_multiply_prime = true;\n  }\n  return $is_multiply_prime;\n\
    }\n\nprint(is_multiply_prime(30) . \"\\n\");\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3g9bk0fe.php:42\n\
    Stack trace:\n#0 /tmp/tmp3g9bk0fe.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp3g9bk0fe.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $prime_numbers = [];\n  for\
    \ ($i = 2; $i < $a; $i++) {\n    $is_prime = true;\n    for ($j = 2; $j < $i;\
    \ $j++) {\n      if ($i % $j == 0) {\n        $is_prime = false;\n        break;\n\
    \      }\n    }\n    if ($is_prime) {\n      $prime_numbers[] = $i;\n    }\n \
    \ }\n  $max_multiplier = intval($a / 3);\n  for ($i = 0; $i < count($prime_numbers);\
    \ $i++) {\n    for ($j = 0; $j < count($prime_numbers); $j++) {\n      for ($k\
    \ = 0; $k < count($prime_numbers); $k++) {\n        if ($prime_numbers[$i] * $prime_numbers[$j]\
    \ * $prime_numbers[$k] == $a) {\n          return true;\n        }\n      }\n\
    \    }\n  }\n  return false;\n}\n\necho is_multiply_prime(30);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // write your code here\n\
    }\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8sh3lss.php:16\n\
    Stack trace:\n#0 /tmp/tmps8sh3lss.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps8sh3lss.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $primes = [];\n  for ($i =\
    \ 1; $i <= $a; $i++) {\n    if (is_prime($i)) {\n      $primes[] = $i;\n    }\n\
    \  }\n  foreach ($primes as $prime) {\n    if ($a % $prime === 0) {\n      $a\
    \ = $a / $prime;\n    }\n  }\n  if ($a > 1) {\n    return false;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpn1pxy3wi.php:11\nStack trace:\n#0 /tmp/tmpn1pxy3wi.php(27): is_multiply_prime(5)\n\
    #1 /tmp/tmpn1pxy3wi.php(31): candidate(5)\n#2 /tmp/tmpn1pxy3wi.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn1pxy3wi.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $flag = 0;\n  if ($a == 1)\
    \ {\n  \treturn false;\n  }\n  for ($i = 2; $i <= $a; $i++) {\n    if ($a % $i\
    \ == 0) {\n      for ($j = 2; $j <= $i / 2; $j++) {\n        if ($i % $j == 0)\
    \ {\n          $flag = 1;\n          break;\n        }\n      }\n      if ($flag\
    \ == 0) {\n        echo $i . \"\\n\";\n      }\n      $flag = 0;\n    }\n  }\n\
    }\n\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "2\n3\n5\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw6eoco6.php:35\n\
    Stack trace:\n#0 /tmp/tmprw6eoco6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprw6eoco6.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tif ($a % 6 == 0) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tunyeov.php:23\n\
    Stack trace:\n#0 /tmp/tmp8tunyeov.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8tunyeov.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    for ($i = 0; $i < count($primes); $i++) {\n        for ($j = 0; $j\
    \ < count($primes); $j++) {\n            for ($k = 0; $k < count($primes); $k++)\
    \ {\n                if ($primes[$i] * $primes[$j] * $primes[$k] == $a) {\n  \
    \                  return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n\necho is_multiply_prime(30);\necho is_multiply_prime(35);\n\
    echo is_multiply_prime(10);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  for ($i = 2; $i < $a; $i++)\
    \ {\n    if ($a % $i == 0) {\n      if (is_prime($i)) {\n        $b = $a / $i;\n\
    \        if (is_prime($b)) {\n          $c = $b / $i;\n          if (is_prime($c))\
    \ {\n            return True;\n          }\n        }\n      }\n    }\n  }\n \
    \ return False;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbth1rbd9.php:11\nStack trace:\n#0 /tmp/tmpbth1rbd9.php(26): is_multiply_prime(30)\n\
    #1 /tmp/tmpbth1rbd9.php(31): candidate(30)\n#2 /tmp/tmpbth1rbd9.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbth1rbd9.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $result = false;\n  $arr =\
    \ [];\n  if($a > 0) {\n    for($i = 2; $i <= $a; $i++) {\n      if($a % $i ==\
    \ 0) {\n        $arr[] = $i;\n        $a /= $i;\n        $i--;\n      }\n    }\n\
    \    if(count($arr) == 3) {\n      for($j = 0; $j < count($arr); $j++) {\n   \
    \     if(is_prime($arr[$j])) {\n          $result = true;\n        } else {\n\
    \          $result = false;\n          break;\n        }\n      }\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp9m8de8ty.php:21\nStack trace:\n#0 /tmp/tmp9m8de8ty.php(34): is_multiply_prime(1)\n\
    #1 /tmp/tmp9m8de8ty.php(39): candidate(30)\n#2 /tmp/tmp9m8de8ty.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9m8de8ty.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a === 1) return false;\n\
    \    $i = 2;\n    while ($i < $a / 2) {\n        if ($a % $i === 0) {\n      \
    \      $a /= $i;\n            $i = 2;\n        } else {\n            $i++;\n \
    \       }\n    }\n    return is_prime($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpq5wuy7__.php:19\nStack trace:\n#0 /tmp/tmpq5wuy7__.php(23): is_multiply_prime(5)\n\
    #1 /tmp/tmpq5wuy7__.php(27): candidate(5)\n#2 /tmp/tmpq5wuy7__.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq5wuy7__.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime_list = array();\n\
    \    $prime_div = array();\n    $is_multiply_prime = false;\n    $i = 1;\n   \
    \ $j = 1;\n    while ($i <= $a) {\n        $is_prime = true;\n        $j = 1;\n\
    \        while ($j <= $i) {\n            if ($i % $j == 0 && $j != 1 && $j !=\
    \ $i) {\n                $is_prime = false;\n            }\n            $j++;\n\
    \        }\n        if ($is_prime) {\n            $prime_list[] = $i;\n      \
    \  }\n        $i++;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < count($prime_list))\
    \ {\n        if ($a % $prime_list[$i] == 0) {\n            $prime_div[] = $prime_list[$i];\n\
    \        }\n        $i++;\n    }\n    $k = 0;\n    $m = 0;\n    $multiply = 1;\n\
    \    while ($k < count($prime_div)) {\n        $m = $k;\n        while ($m < count($prime_div))\
    \ {\n            $multiply = $prime_div[$k] * $prime_div[$m];\n            if\
    \ ($multiply == $a) {\n                $is_multiply_prime = true;\n          \
    \  }\n            $m++;\n        }\n        $k++;\n    }\n    return $is_multiply_prime;\n\
    }\nprint_r(is_multiply_prime(30));\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14fi_33a.php:58\n\
    Stack trace:\n#0 /tmp/tmp14fi_33a.php(70): test()\n#1 {main}\n  thrown in /tmp/tmp14fi_33a.php\
    \ on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$primos = array();\n\t$primos\
    \ = multiples_primos($a);\n\tif (count($primos) == 3) {\n\t\treturn true;\n\t\
    }\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function multiples_primos()\
    \ in /tmp/tmp2w6m0iz5.php:10\nStack trace:\n#0 /tmp/tmp2w6m0iz5.php(18): is_multiply_prime(5)\n\
    #1 /tmp/tmp2w6m0iz5.php(22): candidate(5)\n#2 /tmp/tmp2w6m0iz5.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2w6m0iz5.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $a = (int)$a;\n    $divisors\
    \ = [];\n    for ($i = 2; $i <= $a; $i++) {\n        if ($a % $i == 0) {\n   \
    \         $divisors[] = $i;\n            $a /= $i;\n            $i--;\n      \
    \  }\n    }\n    $prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    foreach ($divisors\
    \ as $number) {\n        if (!in_array($number, $prime_numbers)) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx97gp0x_.php:32\n\
    Stack trace:\n#0 /tmp/tmpx97gp0x_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpx97gp0x_.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    $div = 1;\n    $b = $a;\n    for ($i = 0; $i < count($primes); $i++)\
    \ {\n        if ($a % $primes[$i] == 0) {\n            $div *= $primes[$i];\n\
    \            $a /= $primes[$i];\n            $i = -1;\n        }\n    }\n    return\
    \ $div == $b;\n}\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbts387z.php:27\n\
    Stack trace:\n#0 /tmp/tmppbts387z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppbts387z.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $i = 2;\n    $max = $a /\
    \ 2;\n    $arr = [];\n    while ($i <= $max) {\n        if ($a % $i == 0) {\n\
    \            $arr[] = $i;\n            $a = $a / $i;\n            $max = $a /\
    \ 2;\n        } else {\n            $i++;\n        }\n    }\n    $arr[] = $a;\n\
    \    // var_dump($arr);\n    // $arr = [2,3,5];\n    $count = 0;\n    foreach\
    \ ($arr as $key => $value) {\n        for ($i = 2; $i < $value; $i++) {\n    \
    \        if ($value % $i == 0) {\n                $count++;\n            }\n \
    \       }\n    }\n    if ($count == 0) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\necho is_multiply_prime(30) . PHP_EOL;\necho\
    \ is_multiply_prime(54) . PHP_EOL;\necho is_multiply_prime(120) . PHP_EOL;\necho\
    \ is_multiply_prime(11) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpguklmjrp.php:47\n\
    Stack trace:\n#0 /tmp/tmpguklmjrp.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpguklmjrp.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tfor ($i = 2; $i <= $a/2; $i++)\
    \ {\n\t\tif ($a % $i == 0) {\n\t\t\tfor ($j = 2; $j <= $a/2; $j++) {\n\t\t\t\t\
    if ($a % $j == 0) {\n\t\t\t\t\tfor ($k = 2; $k <= $a/2; $k++) {\n\t\t\t\t\t\t\
    if ($a % $k == 0) {\n\t\t\t\t\t\t\t$res = $i * $j * $k;\n\t\t\t\t\t\t\tif ($res\
    \ == $a) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\
    \t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9saxtfw.php:40\n\
    Stack trace:\n#0 /tmp/tmpk9saxtfw.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpk9saxtfw.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime = [];\n    $flag =\
    \ 0;\n    for ($i = 2; $i <= $a / 2; $i++) {\n        $c = 0;\n        for ($j\
    \ = 2; $j <= $i / 2; $j++) {\n            if ($i % $j == 0) {\n              \
    \  $c++;\n            }\n        }\n        if ($c == 0) {\n            $prime[]\
    \ = $i;\n        }\n    }\n    for ($i = 0; $i < count($prime); $i++) {\n    \
    \    for ($j = 0; $j < count($prime); $j++) {\n            for ($k = 0; $k < count($prime);\
    \ $k++) {\n                if ($prime[$i] * $prime[$j] * $prime[$k] == $a) {\n\
    \                    $flag = 1;\n                }\n            }\n        }\n\
    \    }\n    if ($flag == 1) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\necho is_multiply_prime(30);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime_num = array();\n\t$prime_num_multiply\
    \ = array();\n\t$flag = false;\n\tif($a % 2 == 0){\n\t\t$prime_num_multiply[]\
    \ = 2;\n\t\t$a = $a / 2;\n\t}\n\tfor($i = 3; $i <= $a; $i++){\n\t\t$flag = false;\n\
    \t\tfor($j = 2; $j <= ($i/2); $j++){\n\t\t\tif($i % $j == 0){\n\t\t\t\t$flag =\
    \ true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif($flag == false){\n\t\t\t$prime_num[]\
    \ = $i;\n\t\t}\n\t}\n\t\n\t$a = intval($a);\n\tforeach($prime_num as $prime){\n\
    \t\tif($a % $prime == 0){\n\t\t\t$prime_num_multiply[] = $prime;\n\t\t\t$a = $a\
    \ / $prime;\n\t\t}\n\t}\n\t\n\t\n\tif(count($prime_num_multiply) == 3){\n\t\t\
    return true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5qv4oxnz.php:51\n\
    Stack trace:\n#0 /tmp/tmp5qv4oxnz.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp5qv4oxnz.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $arr = [];\n    for ($i =\
    \ 2; $i < 100; $i++) {\n        $x = 0;\n        for ($j = 2; $j < $i; $j++) {\n\
    \            if ($i % $j == 0) {\n                $x++;\n            }\n     \
    \   }\n        if ($x == 0) {\n            $arr[] = $i;\n        }\n    }\n  \
    \  for ($i = 0; $i < count($arr); $i++) {\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            for ($k = 0; $k < count($arr); $k++) {\n              \
    \  if ($arr[$i] * $arr[$j] * $arr[$k] == $a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\necho\
    \ is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $result = false;\n    $prime_numbers\
    \ = [];\n    $counter = 0;\n    for ($i = 1; $i <= $a; $i++) {\n        if (is_prime($i))\
    \ {\n            $prime_numbers[] = $i;\n        }\n    }\n    for ($i = 0; $i\
    \ < count($prime_numbers); $i++) {\n        if ($a % $prime_numbers[$i] == 0)\
    \ {\n            $counter++;\n        }\n    }\n    if ($counter == 3) {\n   \
    \     $result = true;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpxkrtjf4c.php:13\nStack trace:\n#0 /tmp/tmpxkrtjf4c.php(28): is_multiply_prime(5)\n\
    #1 /tmp/tmpxkrtjf4c.php(32): candidate(5)\n#2 /tmp/tmpxkrtjf4c.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxkrtjf4c.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // your code\n}\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzempxnm.php:16\n\
    Stack trace:\n#0 /tmp/tmpwzempxnm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwzempxnm.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // B\u1EAFt \u0111\u1EA7\
    u code \u1EDF \u0111\xE2y\n    $prime = array();\n    for ($i = 0; $i < 100; $i++)\
    \ {\n        if (is_prime($i)) {\n            $prime[] = $i;\n        }\n    }\n\
    \    $prime_count = count($prime);\n    for ($i = 0; $i < $prime_count; $i++)\
    \ {\n        for ($j = 0; $j < $prime_count; $j++) {\n            for ($k = 0;\
    \ $k < $prime_count; $k++) {\n                if ($prime[$i] * $prime[$j] * $prime[$k]\
    \ == $a) {\n                    return true;\n                }\n            }\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp076hf0f1.php:12\nStack trace:\n#0 /tmp/tmp076hf0f1.php(30): is_multiply_prime(5)\n\
    #1 /tmp/tmp076hf0f1.php(34): candidate(5)\n#2 /tmp/tmp076hf0f1.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp076hf0f1.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  \n  for ($i = 2; $i <= 100;\
    \ $i++) {\n    for ($j = 2; $j <= 100; $j++) {\n      for ($k = 2; $k <= 100;\
    \ $k++) {\n        if ($i * $j * $k == $a) {\n          return true;\n       \
    \ }\n      }\n    }\n  }\n  return false;\n}\n\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jszy6kl.php:34\n\
    Stack trace:\n#0 /tmp/tmp3jszy6kl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3jszy6kl.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $counter = 0;\n    for ($i\
    \ = 2; $i <= $a; $i++) {\n        if ($a % $i == 0) {\n            $counter++;\n\
    \        }\n    }\n    if ($counter == 3) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nprint is_multiply_prime(30);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rjajgul.php:28\n\
    Stack trace:\n#0 /tmp/tmp9rjajgul.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9rjajgul.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a == 3) {\n        return\
    \ false;\n    }\n    $primes = array();\n    $i = 2;\n    while ($i < $a) {\n\
    \        if (($a % $i) == 0) {\n            if ($i != 3 && $i != 5 && $i != 7)\
    \ {\n                return false;\n            }\n            $primes[] = $i;\n\
    \            $a = $a / $i;\n        }\n        $i++;\n    }\n    if (count($primes)\
    \ == 3) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsswlli2a.php:36\n\
    Stack trace:\n#0 /tmp/tmpsswlli2a.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpsswlli2a.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $count = 0;\n    for ($i\
    \ = 2; $i <= 100; $i++) {\n        $c = 0;\n        for ($j = 1; $j <= $i; $j++)\
    \ {\n            if ($i % $j == 0) {\n                $c++;\n            }\n \
    \       }\n        if ($c == 2) {\n            $count++;\n        }\n    }\n \
    \   for ($i = 2; $i <= 100; $i++) {\n        $c = 0;\n        for ($j = 1; $j\
    \ <= $i; $j++) {\n            if ($i % $j == 0) {\n                $c++;\n   \
    \         }\n        }\n        if ($c == 2) {\n            $count++;\n      \
    \  }\n    }\n    for ($i = 2; $i <= 100; $i++) {\n        $c = 0;\n        for\
    \ ($j = 1; $j <= $i; $j++) {\n            if ($i % $j == 0) {\n              \
    \  $c++;\n            }\n        }\n        if ($c == 2) {\n            $count++;\n\
    \        }\n    }\n    if ($count > 0) {\n        echo \"True\";\n    } else {\n\
    \        echo \"False\";\n    }\n}\nis_multiply_prime(30);\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "TrueTrue\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj64y_ea.php:56\n\
    Stack trace:\n#0 /tmp/tmpkj64y_ea.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpkj64y_ea.php\
    \ on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $x = \"\";\n    for ($i =\
    \ 1; $i <= $a; $i++) {\n        $x = \"\";\n        for ($j = 1; $j <= $i; $j++)\
    \ {\n            if (($i % $j) == 0) {\n                $x++;\n            }\n\
    \        }\n        if ($x <= 2) {\n            $n[] = $i;\n        }\n    }\n\
    \    for ($i = 0; $i < count($n); $i++) {\n        for ($j = 0; $j < count($n);\
    \ $j++) {\n            if ($n[$i] * $n[$j] == $a) {\n                return True;\n\
    \            }\n        }\n    }\n    return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoylaesqy.php:36\n\
    Stack trace:\n#0 /tmp/tmpoylaesqy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoylaesqy.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $num=0;\n    for($i=2;$i<=$a;$i++){\n\
    \        if($a%$i==0){\n            $num++;\n        }\n    }\n    if($num==3){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }\n}\n$a=is_multiply_prime(30);\n\
    echo $a;\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2aqp7t1g.php:30\n\
    Stack trace:\n#0 /tmp/tmp2aqp7t1g.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2aqp7t1g.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $p = 0;\n    $is_multiply_prime\
    \ = false;\n    $temp = $a;\n    for ($i = 2; $i <= $a; $i++) {\n        if ($a\
    \ % $i == 0) {\n            for ($j = 2; $j <= $i; $j++) {\n                if\
    \ ($i % $j == 0) {\n                    $p++;\n                }\n           \
    \ }\n            if ($p == 1) {\n                $a = $a / $i;\n             \
    \   if ($a == 1) {\n                    $is_multiply_prime = true;\n         \
    \           break;\n                }\n            }\n            $p = 0;\n  \
    \      }\n    }\n    return $is_multiply_prime;\n}\n\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjcrq5mlv.php:38\n\
    Stack trace:\n#0 /tmp/tmpjcrq5mlv.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpjcrq5mlv.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  for ($i = 2; $i < $a; $i++)\
    \ {\n    if ($a % $i == 0) {\n      $ar[] = $i;\n    }\n  }\n  foreach ($ar as\
    \ $val) {\n    for ($i = 2; $i < $val; $i++) {\n      if ($val % $i == 0) {\n\
    \        break;\n      }\n    }\n    if ($i == $val) {\n      $ar2[] = $val;\n\
    \    }\n  }\n  if (count($ar2) == 3) {\n    return True;\n  } else {\n    return\
    \ False;\n  }\n}\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nWarning: Invalid argument supplied for foreach() in /tmp/tmpyj72oj_1.php\
    \ on line 14\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpyj72oj_1.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpyj72oj_1.php:38\nStack trace:\n#0 /tmp/tmpyj72oj_1.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpyj72oj_1.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $i = 2;\n    while ($i *\
    \ $i <= $a) {\n        while ($a % $i == 0) {\n            $a /= $i;\n       \
    \ }\n        $i++;\n    }\n    if ($a == 2 || $a == 3 || $a == 5) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho is_multiply_prime(27);\n\
    \nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxq7be87d.php:29\n\
    Stack trace:\n#0 /tmp/tmpxq7be87d.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxq7be87d.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // TODO\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2uup9e6f.php:17\n\
    Stack trace:\n#0 /tmp/tmp2uup9e6f.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2uup9e6f.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primearray = array();\n\
    \    for ($i = 2; $i <= $a; $i++) {\n        $primearray[] = $i;\n    }\n    foreach\
    \ ($primearray as $key => $value) {\n        if ($value == 1) {\n            continue;\n\
    \        }\n        if ($value == 2) {\n            continue;\n        }\n   \
    \     if ($value == 3) {\n            continue;\n        }\n        if ($value\
    \ == 5) {\n            continue;\n        }\n        if ($value == 7) {\n    \
    \        continue;\n        }\n        if ($value % 2 == 0) {\n            unset($primearray[$key]);\n\
    \            continue;\n        }\n        if ($value % 3 == 0) {\n          \
    \  unset($primearray[$key]);\n            continue;\n        }\n        if ($value\
    \ % 5 == 0) {\n            unset($primearray[$key]);\n            continue;\n\
    \        }\n        if ($value % 7 == 0) {\n            unset($primearray[$key]);\n\
    \            continue;\n        }\n    }\n    $primearray = array_values($primearray);\n\
    \    $primearray = array_reverse($primearray);\n    $count = count($primearray);\n\
    \    if ($count >= 3) {\n        $testarray = array();\n        for ($i = 0; $i\
    \ < $count; $i++) {\n            for ($j = 0; $j < $count; $j++) {\n         \
    \       for ($k = 0; $k < $count; $k++) {\n                    $multiplied = $primearray[$i]\
    \ * $primearray[$j] * $primearray[$k];\n                    if ($multiplied ==\
    \ $a) {\n                        $testarray[] = $multiplied;\n               \
    \     }\n                }\n            }\n        }\n        if (count($testarray)\
    \ > 0) {\n            return true;\n        } else {\n            return false;\n\
    \        }\n    } else {\n        return false;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime_number = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n\t$check_a = $a;\n\tfor ($i = 0; $i < sizeof($prime_number); $i++)\
    \ {\n\t\twhile ($check_a % $prime_number[$i] == 0) {\n\t\t\t$check_a = $check_a\
    \ / $prime_number[$i];\n\t\t}\n\t}\n\treturn $check_a == 1;\n}\necho is_multiply_prime(30)\
    \ ? \"True\" : \"False\";\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdwqyvxb.php:24\n\
    Stack trace:\n#0 /tmp/tmpzdwqyvxb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzdwqyvxb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    //...\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhyuj0jo.php:16\n\
    Stack trace:\n#0 /tmp/tmpqhyuj0jo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqhyuj0jo.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $p = false;\n    for ($b\
    \ = 2; $b < $a; $b++) {\n        for ($c = 2; $c < $a; $c++) {\n            for\
    \ ($d = 2; $d < $a; $d++) {\n                if ($b * $c * $d == $a) {\n     \
    \               $p = true;\n                }\n            }\n        }\n    }\n\
    \    return $p;\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2f7psb_.php:32\n\
    Stack trace:\n#0 /tmp/tmpz2f7psb_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz2f7psb_.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime_numbers = array();\n\
    \    for ($i = 2; $i <= $a; $i++) {\n        $temp = true;\n        for ($j =\
    \ 2; $j < $i; $j++) {\n            if ($i % $j == 0) {\n                $temp\
    \ = false;\n                break;\n            }\n        }\n        if ($temp)\
    \ {\n            $prime_numbers[] = $i;\n        }\n    }\n    var_dump($prime_numbers);\n\
    \    if (count($prime_numbers) > 2) {\n        $temp = array();\n        $check\
    \ = false;\n        for ($i = 0; $i < count($prime_numbers); $i++) {\n       \
    \     for ($j = $i + 1; $j < count($prime_numbers); $j++) {\n                $temp\
    \ = array();\n                $temp[] = $prime_numbers[$i];\n                $temp[]\
    \ = $prime_numbers[$j];\n                $result = $prime_numbers[$i] * $prime_numbers[$j];\n\
    \                for ($k = 0; $k < count($prime_numbers); $k++) {\n          \
    \          if ($result % $prime_numbers[$k] == 0) {\n                        $temp[]\
    \ = $prime_numbers[$k];\n                        $result = $result / $prime_numbers[$k];\n\
    \                    }\n                }\n                var_dump($temp);\n\
    \                $sum = 0;\n                for ($k = 0; $k < count($temp); $k++)\
    \ {\n                    $sum += $temp[$k];\n                }\n             \
    \   if ($sum == $a) {\n                    $check = true;\n                  \
    \  break;\n                }\n            }\n            if ($check) {\n     \
    \           break;\n            }\n        }\n        return $check;\n    } else\
    \ {\n        return false;\n    }\n}\n\necho is_multiply_prime(30);\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(10) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(3)\n  [2]=>\n  int(5)\n\
    \  [3]=>\n  int(7)\n  [4]=>\n  int(11)\n  [5]=>\n  int(13)\n  [6]=>\n  int(17)\n\
    \  [7]=>\n  int(19)\n  [8]=>\n  int(23)\n  [9]=>\n  int(29)\n}\narray(4) {\n \
    \ [0]=>\n  int(2)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n}\n\
    array(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(2)\n  [3]=>\n\
    \  int(5)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(7)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(7)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(11)\n  [2]=>\n\
    \  int(2)\n  [3]=>\n  int(11)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(13)\n\
    \  [2]=>\n  int(2)\n  [3]=>\n  int(13)\n}\n1array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n\
    \  int(3)\n  [2]=>\n  int(5)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(3)\n\
    \  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n\
    \  int(5)\n  [2]=>\n  int(2)\n  [3]=>\n  int(5)\n}\narray(4) {\n  [0]=>\n  int(3)\n\
    \  [1]=>\n  int(5)\n  [2]=>\n  int(3)\n  [3]=>\n  int(5)\n}\narray(10) {\n  [0]=>\n\
    \  int(2)\n  [1]=>\n  int(3)\n  [2]=>\n  int(5)\n  [3]=>\n  int(7)\n  [4]=>\n\
    \  int(11)\n  [5]=>\n  int(13)\n  [6]=>\n  int(17)\n  [7]=>\n  int(19)\n  [8]=>\n\
    \  int(23)\n  [9]=>\n  int(29)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(3)\n\
    \  [2]=>\n  int(2)\n  [3]=>\n  int(3)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n\
    \  int(5)\n  [2]=>\n  int(2)\n  [3]=>\n  int(5)\n}\narray(4) {\n  [0]=>\n  int(2)\n\
    \  [1]=>\n  int(7)\n  [2]=>\n  int(2)\n  [3]=>\n  int(7)\n}\narray(4) {\n  [0]=>\n\
    \  int(2)\n  [1]=>\n  int(11)\n  [2]=>\n  int(2)\n  [3]=>\n  int(11)\n}\narray(4)\
    \ {\n  [0]=>\n  int(2)\n  [1]=>\n  int(13)\n  [2]=>\n  int(2)\n  [3]=>\n  int(13)\n\
    }\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(3)\n  [2]=>\n  int(5)\n  [3]=>\n\
    \  int(7)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n\
    \  int(2)\n  [3]=>\n  int(5)\n}\narray(4) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(7)\n\
    \  [2]=>\n  int(2)\n  [3]=>\n  int(7)\n}\narray(4) {\n  [0]=>\n  int(3)\n  [1]=>\n\
    \  int(5)\n  [2]=>\n  int(3)\n  [3]=>\n  int(5)\n}\narray(4) {\n  [0]=>\n  int(3)\n\
    \  [1]=>\n  int(7)\n  [2]=>\n  int(3)\n  [3]=>\n  int(7)\n}\narray(4) {\n  [0]=>\n\
    \  int(5)\n  [1]=>\n  int(7)\n  [2]=>\n  i"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t// Your code here\n\t$arr=array();\n\
    \tfor($i=2;$i<=$a;$i++){\n\t\tif($a%$i==0){\n\t\t\t$arr[]=$i;\n\t\t\t$a=$a/$i;\n\
    \t\t\t$i--;\n\t\t}\n\t}\n\t$k=array_unique($arr);\n\tif(count($k)==3){\n\t\treturn\
    \ true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\nvar_dump(is_multiply_prime(30));\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3p75plq.php:34\n\
    Stack trace:\n#0 /tmp/tmpw3p75plq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpw3p75plq.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$number = array();\n\t$num=0;\n\
    \t$i=2;\n\t$sum=0;\n\twhile ($i<$a) {\n\t\tif ($a%$i==0) {\n\t\t\t$sum=$sum+1;\n\
    \t\t\t$number[$num]=$i;\n\t\t\t$num=$num+1;\n\t\t\t$a=$a/$i;\n\t\t}else{\n\t\t\
    \t$i=$i+1;\n\t\t}\n\t}\n\t$sum=$sum+1;\n\t$number[$num]=$a;\n\t$num=$num+1;\n\t\
    $prime=0;\n\tfor ($i=0; $i < $num; $i++) { \n\t\t$k=2;\n\t\t$prime_number=1;\n\
    \t\twhile ($k<$number[$i]) {\n\t\t\tif ($number[$i]%$k==0) {\n\t\t\t\t$prime_number=0;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\t$k=$k+1;\n\t\t}\n\t\tif ($prime_number==1) {\n\t\
    \t\t$prime=$prime+1;\n\t\t}\n\t}\n\tif ($prime==3) {\n\t\treturn true;\n\t}else{\n\
    \t\treturn false;\n\t}\n}\n\nvar_dump(is_multiply_prime(30));\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $arr = [];\n    for ($i =\
    \ 2; $i < $a; $i++) {\n        if ($a % $i == 0) {\n            if (is_prime($i))\
    \ {\n                $arr[] = $i;\n            }\n        }\n    }\n    return\
    \ ($a == array_product($arr)) ? true : false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmptq39cui7.php:12\nStack trace:\n#0 /tmp/tmptq39cui7.php(21): is_multiply_prime(30)\n\
    #1 /tmp/tmptq39cui7.php(26): candidate(30)\n#2 /tmp/tmptq39cui7.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmptq39cui7.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t\n\tif ($a == 0) {\n\t\treturn\
    \ false;\n\t}\n\tif ($a == 1) {\n\t\treturn false;\n\t}\n\t\n\t// $a = 2*3*5;\n\
    \t\n\t// $a = 2*2*5*7;\n\t\n\t$is_prime = is_prime($a);\n\t\n\tif ($is_prime)\
    \ {\n\t\treturn false;\n\t}\n\t\n\t$prime_numbers = get_prime_numbers($a);\n\t\
    \n\tif ($prime_numbers === false) {\n\t\treturn false;\n\t}\n\t\n\t// $prime_numbers\
    \ = [2,3,5];\n\t\n\tforeach ($prime_numbers as $prime_number) {\n\t\tif ($a %\
    \ $prime_number != 0) {\n\t\t\tcontinue;\n\t\t}\n\t\t$a = $a / $prime_number;\n\
    \t\t$prime_numbers2 = get_prime_numbers($a);\n\t\tforeach ($prime_numbers2 as\
    \ $prime_number2) {\n\t\t\tif ($a % $prime_number2 != 0) {\n\t\t\t\tcontinue;\n\
    \t\t\t}\n\t\t\t$a = $a / $prime_number2;\n\t\t\tif ($a == 1) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t\tif (is_prime($a)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\
    \t}\n\t}\n\t\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp86021t4a.php:21\nStack trace:\n#0 /tmp/tmp86021t4a.php(59): is_multiply_prime(5)\n\
    #1 /tmp/tmp86021t4a.php(63): candidate(5)\n#2 /tmp/tmp86021t4a.php(75): test()\n\
    #3 {main}\n  thrown in /tmp/tmp86021t4a.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  if ($a % 2 != 0) return false;\n\
    \  $b = $a / 2;\n  $c = 3;\n  $d = 5;\n  if ($b % 2 == 0 && $b % 3 == 0 && $b\
    \ % 5 == 0) {\n    return true;\n  }\n  return false;\n}\necho 'is_multiply_prime(30)\
    \ == ' . is_multiply_prime(30) . \"\\n\";\necho 'is_multiply_prime(27) == ' .\
    \ is_multiply_prime(27) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "is_multiply_prime(30) == \nis_multiply_prime(27) == \n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqgm8wcn9.php:27\nStack trace:\n#0 /tmp/tmpqgm8wcn9.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqgm8wcn9.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $n = $a;\n    $count = 0;\n\
    \    for ($i = 2; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n           \
    \ $count++;\n            while ($n % $i == 0) {\n                $n = $n / $i;\n\
    \            }\n        }\n    }\n    if ($count == 3) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n$a = 2;\nif (is_multiply_prime($a))\
    \ {\n    echo \"{$a} is multiplication of 3 prime numbers\";\n} else {\n    echo\
    \ \"{$a} is not multiplication of 3 prime numbers\";\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "2 is not multiplication of 3 prime numbers\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpoeu19xen.php:38\nStack trace:\n#0 /tmp/tmpoeu19xen.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpoeu19xen.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t// write your code here\n}\n\
    \nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kosxgf6.php:17\n\
    Stack trace:\n#0 /tmp/tmp3kosxgf6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3kosxgf6.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$is_prime = [];\n\t$i = 2;\n\
    \tfor($i = 2; $i <= $a; $i++) {\n\t\tif($a % $i == 0 && is_prime($i)) {\n\t\t\t\
    $is_prime[] = $i;\n\t\t}\n\t}\n\tif(sizeof($is_prime) == 3) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp4yah7lnp.php:12\nStack trace:\n#0 /tmp/tmp4yah7lnp.php(23): is_multiply_prime(5)\n\
    #1 /tmp/tmp4yah7lnp.php(27): candidate(5)\n#2 /tmp/tmp4yah7lnp.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4yah7lnp.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t// your code here...\n}\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8lq_ki8.php:16\n\
    Stack trace:\n#0 /tmp/tmpi8lq_ki8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi8lq_ki8.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$result = false;\n\t$i = 2;\n\
    \t$count = 0;\n\t$factor = array();\n\twhile($a != 1) {\n\t\twhile($a % $i ==\
    \ 0) {\n\t\t\t$factor[] = $i;\n\t\t\t$a /= $i;\n\t\t\t$count++;\n\t\t}\n\t\t$i++;\n\
    \t}\n\tif($count == 3) {\n\t\t$result = true;\n\t}\n\techo $result;\n\treturn\
    \ $result;\n}\n\nvar_dump(is_multiply_prime(30));\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1bool(true)\n11111"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$counter = 0;\n\tfor ($i =\
    \ 2; $i < $a; $i++) {\n\t\tif ($a % $i == 0) {\n\t\t\tfor ($j = 2; $j < $i; $j++)\
    \ {\n\t\t\t\tif ($i % $j == 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t} elseif ($j == $i\
    \ - 1) {\n\t\t\t\t\t$counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif ($counter\
    \ == 3) {\n\t\treturn True;\n\t} else {\n\t\treturn False;\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1ogg_sd.php:34\n\
    Stack trace:\n#0 /tmp/tmpw1ogg_sd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpw1ogg_sd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$is_prime = false;\n\t$output\
    \ = false;\n\tif($a > 0 && $a < 100){\n\t\tfor($i = 2; $i < $a; $i++){\n\t\t\t\
    for($j = 2; $j < $i; $j++){\n\t\t\t\tif($i % $j == 0){\n\t\t\t\t\t$is_prime =\
    \ false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$is_prime = true;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\tif($is_prime){\n\t\t\t\tfor($k = 2; $k < $a; $k++){\n\
    \t\t\t\t\tfor($l = 2; $l < $k; $l++){\n\t\t\t\t\t\tif($k % $l == 0){\n\t\t\t\t\
    \t\t\t$is_prime = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\
    \ {\n\t\t\t\t\t\t\t$is_prime = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif($is_prime){\n\
    \t\t\t\t\t\tif($i * $k == $a){\n\t\t\t\t\t\t\t$output = true;\n\t\t\t\t\t\t\t\
    break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $output;\n\
    }\n\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsuup7hr2.php:53\n\
    Stack trace:\n#0 /tmp/tmpsuup7hr2.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpsuup7hr2.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tfor ($i = 2; $i < $a; $i++)\
    \ {\n\t\tif ($a % $i == 0) {\n\t\t\tfor ($j = 2; $j < $a; $j++) {\n\t\t\t\tif\
    \ ($a % $j == 0) {\n\t\t\t\t\tfor ($k = 2; $k < $a; $k++) {\n\t\t\t\t\t\tif ($a\
    \ % $k == 0) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\
    \t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\necho is_multiply_prime(27);\necho\
    \ \"<br>\";\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfxradlk.php:34\n\
    Stack trace:\n#0 /tmp/tmpnfxradlk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnfxradlk.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  for ($i = 2; $i < $a; $i++)\
    \ {\n    if ($a % $i === 0) {\n      $a /= $i;\n      for ($j = 2; $j < $a; $j++)\
    \ {\n        if ($a % $j === 0) {\n          $a /= $j;\n          for ($k = 2;\
    \ $k < $a; $k++) {\n            if ($a % $k === 0) {\n              return false;\n\
    \            }\n          }\n          return true;\n        }\n      }\n    }\n\
    \  }\n  return false;\n}\n\nvar_dump(is_multiply_prime(30));\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 2; $i < 100; $i++)\
    \ {\n        if ($a % $i == 0) {\n            $a = $a / $i;\n            echo\
    \ $i . \"<br />\";\n        }\n    }\n}\necho is_multiply_prime(50);\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "2<br />5<br />5<br />\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp3zq2prbz.php:22\nStack trace:\n#0 /tmp/tmp3zq2prbz.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3zq2prbz.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $arr = [];\n    $result =\
    \ true;\n    for ($i = 2; $i < $a; $i++) {\n        if ($a % $i == 0) {\n    \
    \        array_push($arr, $i);\n        }\n    }\n    foreach ($arr as $value)\
    \ {\n        $count = 0;\n        for ($j = 1; $j <= $value; $j++) {\n       \
    \     if ($value % $j == 0) {\n                $count++;\n            }\n    \
    \    }\n        if ($count == 2) {\n            continue;\n        } else {\n\
    \            $result = false;\n            break;\n        }\n    }\n    if ($result)\
    \ {\n        echo \"True\" . \"<br>\";\n    } else {\n        echo \"False\" .\
    \ \"<br>\";\n    }\n}\nis_multiply_prime(30);\nis_multiply_prime(7);\nis_multiply_prime(15);\n\
    is_multiply_prime(31);\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "False<br>True<br>True<br>True<br>True<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5kg_661y.php:46\nStack trace:\n#0 /tmp/tmp5kg_661y.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5kg_661y.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $result = [];\n    $primes\
    \ = [];\n    $arr = [];\n    $is_prime = false;\n    for ($i = 1; $i <= $a; $i++)\
    \ {\n        if ($a % $i == 0) {\n            $result[] = $i;\n        }\n   \
    \ }\n    for ($i = 0; $i < count($result); $i++) {\n        $count = 0;\n    \
    \    for ($j = 1; $j <= $result[$i]; $j++) {\n            if ($result[$i] % $j\
    \ == 0) {\n                $count++;\n            }\n        }\n        if ($count\
    \ == 2) {\n            $primes[] = $result[$i];\n        }\n    }\n    for ($i\
    \ = 0; $i < count($primes); $i++) {\n        if ($a / $primes[$i] == $primes[$i])\
    \ {\n            $arr[] = $primes[$i];\n        }\n    }\n    if (count($arr)\
    \ == 2) {\n        $is_prime = true;\n    }\n    return $is_prime;\n}\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu9nqm30d.php:46\n\
    Stack trace:\n#0 /tmp/tmpu9nqm30d.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpu9nqm30d.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [];\n    $factors\
    \ = [];\n    for ($i = 2; $i <= $a; $i++) {\n        if ($a % $i == 0) {\n   \
    \         $factors[] = $i;\n        }\n    }\n    if (count($factors) == 3) {\n\
    \        $flag = 0;\n        for ($i = 0; $i < count($factors); $i++) {\n    \
    \        for ($j = 2; $j < $factors[$i]; $j++) {\n                if ($factors[$i]\
    \ % $j == 0) {\n                    $flag = 1;\n                    break;\n \
    \               }\n            }\n            if ($flag == 0) {\n            \
    \    $primes[] = $factors[$i];\n            }\n            $flag = 0;\n      \
    \  }\n        if (count($primes) == 3) {\n            return true;\n        }\
    \ else {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\n\n$a = 30;\nif (is_multiply_prime($a)) {\n    echo \"true\";\n} else\
    \ {\n    echo \"false\";\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "false\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2eu8s6dy.php:52\n\
    Stack trace:\n#0 /tmp/tmp2eu8s6dy.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp2eu8s6dy.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $r = $a;\n    $c = 2;\n \
    \   $last = 0;\n    for($i = $c; $i <= $r; $i++) {\n        if($r % $i == 0) {\n\
    \            $last = $i;\n            $r = $r / $i;\n            $i = $c;\n  \
    \      }\n    }\n    return $last == $a;\n}\n\necho is_multiply_prime(30) . \"\
    <br>\";\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0fhylmum.php:29\n\
    Stack trace:\n#0 /tmp/tmp0fhylmum.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0fhylmum.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $result = '';\n    for ($i\
    \ = 2; $i < 100; $i++) {\n        $count = 0;\n        for ($j = 1; $j <= $i;\
    \ $j++) {\n            if ($i % $j == 0) {\n                $count++;\n      \
    \      }\n        }\n        if ($count == 2) {\n            if ($a % $i == 0)\
    \ {\n                $result .= $i . '*';\n            }\n        }\n    }\n \
    \   return $result;\n}\necho is_multiply_prime(2);\necho is_multiply_prime(30);\n\
    echo is_multiply_prime(2 * 3 * 5);\n\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2*2*3*5*2*3*5*\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7dbxh1b8.php:34\n\
    Stack trace:\n#0 /tmp/tmp7dbxh1b8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7dbxh1b8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $a = (int)$a;\n    $flag\
    \ = 0;\n    $primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    for ($i = 0; $i < count($primes);\
    \ $i++) {\n        if ($a % $primes[$i] == 0) {\n            $flag++;\n      \
    \  }\n    }\n    if ($flag === 3) {\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}\necho is_multiply_prime(30);\necho '<br>';\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52i_ws13.php:32\n\
    Stack trace:\n#0 /tmp/tmp52i_ws13.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp52i_ws13.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$primeArray = getPrimeArray(100);\n\
    \t$aArray = getArrayOfPrimeNumbers($a, $primeArray);\n\tif(array_product($aArray)\
    \ == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getPrimeArray()\
    \ in /tmp/tmpojttsxt2.php:9\nStack trace:\n#0 /tmp/tmpojttsxt2.php(18): is_multiply_prime(5)\n\
    #1 /tmp/tmpojttsxt2.php(22): candidate(5)\n#2 /tmp/tmpojttsxt2.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpojttsxt2.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $arr=[];\n    for ($i=2;\
    \ $i<$a; $i++) {\n        if ($a%$i==0) {\n            $arr[]=$i;\n        }\n\
    \    }\n    if (count($arr)==2) {\n        return true;\n    }\n    return false;\n\
    }\n\necho is_multiply_prime(11*7*5);\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp309tdi0a.php:28\n\
    Stack trace:\n#0 /tmp/tmp309tdi0a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp309tdi0a.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$result = false;\n\tif (is_int($a))\
    \ {\n\t\t$result = true;\n\t\tfor ($i = 1; $i <= $a; $i++) {\n\t\t\tif (is_prime($i))\
    \ {\n\t\t\t\tif ($a % $i == 0) {\n\t\t\t\t\t$a = $a / $i;\n\t\t\t\t\techo $i .\
    \ ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmprzus9am6.php:13\nStack trace:\n#0 /tmp/tmprzus9am6.php(25): is_multiply_prime(5)\n\
    #1 /tmp/tmprzus9am6.php(29): candidate(5)\n#2 /tmp/tmprzus9am6.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmprzus9am6.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  if($a <= 1) {\n    return False;\n\
    \  }\n  $prime_numbers = [];\n  for($i = 2; $i <= $a; $i++) {\n    if(is_prime($i))\
    \ {\n      $prime_numbers[] = $i;\n    }\n  }\n  return $prime_numbers;\n}\n\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpj_9or2fq.php:14\nStack trace:\n#0 /tmp/tmpj_9or2fq.php(22): is_multiply_prime(5)\n\
    #1 /tmp/tmpj_9or2fq.php(26): candidate(5)\n#2 /tmp/tmpj_9or2fq.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj_9or2fq.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // Write your code here...\n\
    \    $result = false;\n    if ($a < 100) {\n        for ($i = 2; $i < 100; $i++)\
    \ {\n            for ($j = 2; $j < 100; $j++) {\n                for ($k = 2;\
    \ $k < 100; $k++) {\n                    if (($i * $j * $k) == $a) {\n       \
    \                 $result = true;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8dl53hq.php:34\n\
    Stack trace:\n#0 /tmp/tmpc8dl53hq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpc8dl53hq.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $result = [];\n    for ($i\
    \ = 1; $i <= $a; $i++) {\n        if ($a % $i == 0) {\n            $result[] =\
    \ $i;\n        }\n    }\n    if (count($result) != 3) {\n        return false;\n\
    \    }\n    $is_prime = false;\n    foreach ($result as $number) {\n        for\
    \ ($i = 2; $i < $number; $i++) {\n            if ($number % $i == 0) {\n     \
    \           $is_prime = false;\n                break;\n            } else {\n\
    \                $is_prime = true;\n            }\n        }\n        if ($is_prime\
    \ == false) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\necho is_multiply_prime(30);\necho \"<br>\";\necho is_multiply_prime(9);\n\
    echo \"<br>\";\necho is_multiply_prime(25);\necho \"<br>\";\necho is_multiply_prime(50);\n\
    echo \"<br>\";\necho is_multiply_prime(29);\necho \"<br>\";\necho is_multiply_prime(27);\n\
    echo \"<br>\";\necho is_multiply_prime(25);\necho \"<br>\";\necho is_multiply_prime(18);\n\
    echo \"<br>\";\necho is_multiply_prime(16);\necho \"<br>\";\necho is_multiply_prime(24);\n\
    echo \"<br>\";\necho is_multiply_prime(42);\necho \"<br>\";\necho is_multiply_prime(26);\n\
    echo \"<br>\";\necho is_multiply_prime(30);\necho \"<br>\";\necho is_multiply_prime(54);\n\
    echo \"<br>\";\necho is_multiply_prime(55);\necho \"<br>\";\necho is_multiply_prime(56);\n\
    echo \"<br>\";\necho is_multiply_prime(57);\necho \"<br>\";\necho is_multiply_prime(58);\n\
    echo \"<br>\";\necho is_\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmjjj_g2s.php on line 72\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$s = sqrt($a);\n\t$primes =\
    \ array();\n\tfor ($i = 2; $i <= $s; $i++) {\n\t\tif($a % $i == 0) {\n\t\t\t$primes[]\
    \ = $i;\n\t\t\t$a /= $i;\n\t\t\t$i--;\n\t\t}\n\t}\n\t$primes[] = $a;\n\t$s = 0;\n\
    \tforeach ($primes as $value) {\n\t\t$s += $value;\n\t}\n\tif ($s == 108) {\n\t\
    \treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprs5hx9k9.php:37\n\
    Stack trace:\n#0 /tmp/tmprs5hx9k9.php(48): test()\n#1 {main}\n  thrown in /tmp/tmprs5hx9k9.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$b = $a;\n\twhile ($b > 1)\
    \ {\n\t\tfor ($i = 2; $i <= $b; $i++) {\n\t\t\tif ($b % $i == 0) {\n\t\t\t\t$b\
    \ = $b / $i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\techo $i.\"<br>\";\n\t}\n}\n\
    is_multiply_prime(24);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "2<br>2<br>2<br>3<br>5<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpktgt0uwa.php:26\nStack trace:\n#0 /tmp/tmpktgt0uwa.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpktgt0uwa.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 2; $i <= sqrt($a);\
    \ $i++) {\n        if ($a % $i == 0) {\n            $a = $a / $i;\n          \
    \  $i = 1;\n        }\n    }\n    if ($a == 1) return true;\n    return false;\n\
    }\n$count = 0;\nfor ($i = 1; $i <= 100; $i++) {\n    if (is_multiply_prime($i))\
    \ {\n        $count++;\n        echo $i . \" \";\n    }\n}\necho \"<br>\";\necho\
    \ $count;\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1 <br>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphto6bbxi.php:33\n\
    Stack trace:\n#0 /tmp/tmphto6bbxi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphto6bbxi.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tfor ($i = 2; $i <= 100; $i++)\
    \ {\n\t\t$is_prime = true;\n\t\tfor ($j = 2; $j < $i; $j++) {\n\t\t\tif ($i %\
    \ $j == 0) {\n\t\t\t\t$is_prime = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\
    if ($is_prime) {\n\t\t\tfor ($j = 2; $j <= 100; $j++) {\n\t\t\t\t$is_prime_2 =\
    \ true;\n\t\t\t\tfor ($k = 2; $k < $j; $k++) {\n\t\t\t\t\tif ($j % $k == 0) {\n\
    \t\t\t\t\t\t$is_prime_2 = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\
    \t\t\t\tif ($is_prime_2) {\n\t\t\t\t\tfor ($k = 2; $k <= 100; $k++) {\n\t\t\t\t\
    \t\t$is_prime_3 = true;\n\t\t\t\t\t\tfor ($l = 2; $l < $k; $l++) {\n\t\t\t\t\t\
    \t\tif ($k % $l == 0) {\n\t\t\t\t\t\t\t\t$is_prime_3 = false;\n\t\t\t\t\t\t\t\t\
    break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($is_prime_3) {\n\t\t\t\
    \t\t\t\tif ($i * $j * $k == $a) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\
    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\necho \"is_multiply_prime(30) == True<br>\";\necho is_multiply_prime(30) ==\
    \ True ? 'True<br>' : 'False<br>';\necho \"is_multiply_prime(28) == False<br>\"\
    ;\necho\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl081suzw.php on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$i = 1;\n\t$primelist = array();\n\
    \twhile ($i <= 100) {\n\t\t$isPrime = true;\n\t\tfor ($j = 2; $j < $i; $j++) {\n\
    \t\t\tif ($i % $j == 0) {\n\t\t\t\t$isPrime = false;\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t}\n\t\tif ($isPrime) {\n\t\t\t$primelist[] = $i;\n\t\t}\n\t\t$i++;\n\t}\n\t\
    foreach ($primelist as $prime) {\n\t\tforeach ($primelist as $prime2) {\n\t\t\t\
    foreach ($primelist as $prime3) {\n\t\t\t\tif ($prime * $prime2 * $prime3 == $a)\
    \ {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\necho is_multiply_prime(30) . \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yryebot.php:41\n\
    Stack trace:\n#0 /tmp/tmp1yryebot.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp1yryebot.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime=array();\n\t$flag=0;\n\
    \tfor($i=2;$i<$a;$i++)\n\t{\n\t\tfor($j=2;$j<$i;$j++)\n\t\t{\n\t\t\tif($i%$j==0)\n\
    \t\t\t{\n\t\t\t\t$flag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif($flag==0)\n\t\
    \t{\n\t\t\tarray_push($prime,$i);\n\t\t}\n\t\t$flag=0;\n\t}\n\t$k=0;\n\t$temp=0;\n\
    \twhile($temp<$a)\n\t{\n\t\t$temp=$prime[$k]*$prime[$k+1]*$prime[$k+2];\n\t\t\
    if($temp==$a)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t$k++;\n\t}\n\treturn false;\n\
    }\nif(is_multiply_prime(30))\n{\n\techo \"True\\n\";\n}\nelse\n{\n\techo \"False\\\
    n\";\n}\nif(is_multiply_prime(94))\n{\n\techo \"True\\n\";\n}\nelse\n{\n\techo\
    \ \"False\\n\";\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: b'True\nFalse\n'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $primes = array(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97);\n  for ($i = 0; $i < count($primes); $i++) {\n    for ($j = 0; $j <\
    \ count($primes); $j++) {\n      for ($k = 0; $k < count($primes); $k++) {\n \
    \       if (($primes[$i] * $primes[$j] * $primes[$k]) == $a) {\n          return\
    \ True;\n        }\n      }\n    }\n  }\n  return False;\n}\n\nprint_r(is_multiply_prime(31));\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  // loop from 2 to $a/2\n  for\
    \ ($i = 2; $i <= $a/2; $i++) {\n    // If $a is divisible by $i\n    if ($a %\
    \ $i == 0) {\n      // divide $a by $i to find the next factor\n      $a = $a\
    \ / $i;\n      // If the next factor is prime\n      if (is_prime($a)) {\n   \
    \     // return true\n        return true;\n      }\n    }\n  }\n  // return false\n\
    \  return false;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmzv9v4jx.php:16\nStack trace:\n#0 /tmp/tmpmzv9v4jx.php(27): is_multiply_prime(15)\n\
    #1 /tmp/tmpmzv9v4jx.php(32): candidate(30)\n#2 /tmp/tmpmzv9v4jx.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmzv9v4jx.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 2; $i < $a; $i++)\
    \ {\n        for ($j = 2; $j < $a; $j++) {\n            for ($k = 2; $k < $a;\
    \ $k++) {\n                if ($i * $j * $k == $a) {\n                    return\
    \ true;\n                }\n            }\n        }\n    }\n    return false;\n\
    }\n\necho is_multiply_prime(30);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz9_t0jz.php:35\n\
    Stack trace:\n#0 /tmp/tmpkz9_t0jz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkz9_t0jz.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 2; $i < $a; $i++)\
    \ {\n        if ($a % $i === 0) {\n            for ($j = 2; $j < $a; $j++) {\n\
    \                if ($a % $j === 0) {\n                    for ($k = 2; $k < $a;\
    \ $k++) {\n                        if ($a % $k === 0) {\n                    \
    \        if ($i * $j * $k === $a) {\n                                return true;\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return false;\n\
    }\nprint_r(is_multiply_prime(30) . \"\\n\");\nprint_r(is_multiply_prime(20) .\
    \ \"\\n\");\nprint_r(is_multiply_prime(70) . \"\\n\");\nprint_r(is_multiply_prime(83)\
    \ . \"\\n\");\nprint_r(is_multiply_prime(100) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n1\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxezsthms.php:42\n\
    Stack trace:\n#0 /tmp/tmpxezsthms.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpxezsthms.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 2; $i < $a; $i++)\
    \ {\n        if (is_prime($i) && is_prime($a / $i)) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp3ekxhxbe.php:10\nStack trace:\n#0 /tmp/tmp3ekxhxbe.php(18): is_multiply_prime(5)\n\
    #1 /tmp/tmp3ekxhxbe.php(22): candidate(5)\n#2 /tmp/tmp3ekxhxbe.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3ekxhxbe.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a <= 1) return false;\n\
    \    $primes = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97);\n    $result = false;\n    for ($i = 0;\
    \ $i < sizeof($primes); $i++) {\n        if ($a % $primes[$i] == 0) {\n      \
    \      $result = true;\n            $result = $result && is_multiply_prime($a\
    \ / $primes[$i]);\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2xs63rd.php:26\n\
    Stack trace:\n#0 /tmp/tmpy2xs63rd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy2xs63rd.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n\tfor ($i = 0; $i < count($primes); $i++) {\n\t\tfor ($j = 0; $j < count($primes);\
    \ $j++) {\n\t\t\tfor ($k = 0; $k < count($primes); $k++) {\n\t\t\t\tif ($primes[$i]\
    \ * $primes[$j] * $primes[$k] == $a) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn false;\n}\n\necho is_multiply_prime(15);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $arr = array();\n    $tmp\
    \ = $a;\n    $tmp_var = 1;\n    for ($i = 2; $i <= $tmp; $i++) {\n        if ($tmp\
    \ % $i == 0) {\n            $tmp_var = $tmp / $i;\n            $tmp = $tmp_var;\n\
    \            array_push($arr, $i);\n            $i = 1;\n        }\n    }\n  \
    \  $len_arr = count($arr);\n    $res = 1;\n    for ($j = 0; $j < $len_arr; $j++)\
    \ {\n        $res *= $arr[$j];\n    }\n    if ($res == $a) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbm4b4a3.php:36\n\
    Stack trace:\n#0 /tmp/tmpsbm4b4a3.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpsbm4b4a3.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    $result = false;\n    foreach ($primes as $prime) {\n        if ($a\
    \ % $prime == 0) {\n            $a = $a / $prime;\n            $result = is_multiply_prime($a);\n\
    \            break;\n        }\n    }\n    return $result || $a == 1;\n}\necho\
    \ is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvhn_ul8.php:26\n\
    Stack trace:\n#0 /tmp/tmpsvhn_ul8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsvhn_ul8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tfor ($i = 2; $i <= $a; $i++)\
    \ {\n\t\t$is_prime = true;\n\t\tfor ($j = 2; $j < $i; $j++) {\n\t\t\tif ($i %\
    \ $j == 0) {\n\t\t\t\t$is_prime = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\
    if ($is_prime) {\n\t\t\tfor ($j = 2; $j <= $a; $j++) {\n\t\t\t\tif ($a % $j ==\
    \ 0) {\n\t\t\t\t\tif ($a % $i == 0) {\n\t\t\t\t\t\t$a /= $i;\n\t\t\t\t\t\tbreak;\n\
    \t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $a == 1;\n}\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4s8hfw5.php:36\n\
    Stack trace:\n#0 /tmp/tmpt4s8hfw5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpt4s8hfw5.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 2; $i < $a; $i++)\
    \ {\n        for ($j = 2; $j < $a; $j++) {\n            for ($k = 2; $k < $a;\
    \ $k++) {\n                if (($i * $j * $k) == $a) {\n                    return\
    \ True;\n                }\n            }\n        }\n    }\n    return False;\n\
    }\n\nvar_dump(is_multiply_prime(30));\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby2yefw5.php:33\n\
    Stack trace:\n#0 /tmp/tmpby2yefw5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpby2yefw5.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  if ($a == 2 || $a == 3 || $a\
    \ == 5) {\n    return true;\n  }\n  for ($i = 2; $i < $a; $i++) {\n    if ($a\
    \ % $i == 0) {\n      if ($i != 2 && $i != 3 && $i != 5) {\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprts7jlsz.php:26\n\
    Stack trace:\n#0 /tmp/tmprts7jlsz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprts7jlsz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$a = array();\n\tfor ($i =\
    \ 3; $i < 100; $i++) {\n\t\tif ($i % 3 == 0) {\n\t\t\t$a[] = $i;\n\t\t}\n\t}\n\
    \treturn $a;\n}\n\nvar_dump(is_multiply_prime(30));\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "array(33) {\n  [0]=>\n  int(3)\n  [1]=>\n  int(6)\n  [2]=>\n  int(9)\n\
    \  [3]=>\n  int(12)\n  [4]=>\n  int(15)\n  [5]=>\n  int(18)\n  [6]=>\n  int(21)\n\
    \  [7]=>\n  int(24)\n  [8]=>\n  int(27)\n  [9]=>\n  int(30)\n  [10]=>\n  int(33)\n\
    \  [11]=>\n  int(36)\n  [12]=>\n  int(39)\n  [13]=>\n  int(42)\n  [14]=>\n  int(45)\n\
    \  [15]=>\n  int(48)\n  [16]=>\n  int(51)\n  [17]=>\n  int(54)\n  [18]=>\n  int(57)\n\
    \  [19]=>\n  int(60)\n  [20]=>\n  int(63)\n  [21]=>\n  int(66)\n  [22]=>\n  int(69)\n\
    \  [23]=>\n  int(72)\n  [24]=>\n  int(75)\n  [25]=>\n  int(78)\n  [26]=>\n  int(81)\n\
    \  [27]=>\n  int(84)\n  [28]=>\n  int(87)\n  [29]=>\n  int(90)\n  [30]=>\n  int(93)\n\
    \  [31]=>\n  int(96)\n  [32]=>\n  int(99)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpz8gk96f5.php:24\nStack trace:\n#0 /tmp/tmpz8gk96f5.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz8gk96f5.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  if (empty($a)) return false;\n\
    \  if ($a > 100) return false;\n  for ($i = 1; $i <= $a; $i++) {\n    for ($j\
    \ = 1; $j <= $a; $j++) {\n      if (($i * $j) == $a) {\n        if ($i > 100)\
    \ return false;\n        if ($j > 100) return false;\n        if ($i == 1) return\
    \ false;\n        if ($j == 1) return false;\n        if (is_prime($i) && is_prime($j))\
    \ {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5b5sdn1.php:33\n\
    Stack trace:\n#0 /tmp/tmpp5b5sdn1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpp5b5sdn1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $n = 2;\n    $val = array();\n\
    \    while ($n < $a) {\n        if (is_prime($n)) {\n            if ($a % $n ==\
    \ 0) {\n                $val[] = $n;\n            }\n        }\n        $n++;\n\
    \    }\n    if (count($val) == 3) {\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpcmwsxzs6.php:12\nStack trace:\n#0 /tmp/tmpcmwsxzs6.php(27): is_multiply_prime(5)\n\
    #1 /tmp/tmpcmwsxzs6.php(31): candidate(5)\n#2 /tmp/tmpcmwsxzs6.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmwsxzs6.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 2; $i < $a; $i++)\
    \ {\n        for ($j = 2; $j < $a; $j++) {\n            for ($k = 2; $k < $a;\
    \ $k++) {\n                if ($i * $j * $k == $a) {\n                    if (is_prime($i)\
    \ && is_prime($j) && is_prime($k)) {\n                        return true;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return false;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpu2l90l1_.php:13\nStack trace:\n#0 /tmp/tmpu2l90l1_.php(24): is_multiply_prime(30)\n\
    #1 /tmp/tmpu2l90l1_.php(29): candidate(30)\n#2 /tmp/tmpu2l90l1_.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu2l90l1_.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  // your code here\n}\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_o6siux_.php:16\n\
    Stack trace:\n#0 /tmp/tmp_o6siux_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_o6siux_.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if($a == 1) {\n        return\
    \ false;\n    }\n    $factors = prime_factors($a);\n    if(count($factors) ==\
    \ 3) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime_factors()\
    \ in /tmp/tmp3v0hyijs.php:12\nStack trace:\n#0 /tmp/tmp3v0hyijs.php(20): is_multiply_prime(5)\n\
    #1 /tmp/tmp3v0hyijs.php(24): candidate(5)\n#2 /tmp/tmp3v0hyijs.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3v0hyijs.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a == 1) {\n        return\
    \ false;\n    }\n    $primes = [];\n    for ($i = 2; $i <= $a; $i++) {\n     \
    \   if ($a % $i == 0) {\n            $primes[] = $i;\n            $a /= $i;\n\
    \            $i--;\n        }\n    }\n    return count($primes) == 3 ? true :\
    \ false;\n}\nvar_dump(is_multiply_prime(30));\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$a = (int)$a;\n\tif($a>100)\
    \ {\n\t\techo \"Parametr is not a number!\";\n\t\texit();\n\t}\n\t$count = 0;\n\
    \t$mult = 1;\n\tfor($i=2; $i<= $a; $i++) {\n\t\tif($a%$i == 0) {\n\t\t\t$count++;\n\
    \t\t\t$mult *= $i;\n\t\t}\n\t}\n\tif($count == 3 && $mult == $a) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho is_multiply_prime(30);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaja1a_4r.php:34\n\
    Stack trace:\n#0 /tmp/tmpaja1a_4r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaja1a_4r.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$n=array();\n\t$i=2;\n\t$count=0;\n\
    \twhile($a!=1) {\n\t\tif($a%$i==0) {\n\t\t\t$n[]=$i;\n\t\t\t$a=$a/$i;\n\t\t\t\
    $count++;\n\t\t}\n\t\telse {\n\t\t\t$i++;\n\t\t}\n\t}\n\tif($count==3) {\n\t\t\
    return TRUE;\n\t}\n\telse {\n\t\treturn FALSE;\n\t}\n}\necho is_multiply_prime(30);\n\
    echo \"<br>\";\necho is_multiply_prime(17);\necho \"<br>\";\necho is_multiply_prime(27);\n\
    echo \"<br>\";\necho is_multiply_prime(50);\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a == 2) {\n        return\
    \ true;\n    } elseif ($a % 2 == 0) {\n        return false;\n    }\n    $i =\
    \ 3;\n    $sqrt_a = sqrt($a);\n    while ($i <= $sqrt_a) {\n        if ($a % $i\
    \ == 0) {\n            return false;\n        }\n        $i = $i + 2;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphw_wcy6n.php:30\n\
    Stack trace:\n#0 /tmp/tmphw_wcy6n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphw_wcy6n.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  //Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpajr0km_a.php:17\n\
    Stack trace:\n#0 /tmp/tmpajr0km_a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpajr0km_a.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a < 6) {\n        return\
    \ false;\n    }\n    if ($a == 6) {\n        return true;\n    }\n    $factors\
    \ = array();\n    for ($i = 2; $i <= $a / 2; $i++) {\n        if ($a % $i == 0)\
    \ {\n            array_push($factors, $i);\n        }\n    }\n    $factors_sum\
    \ = 0;\n    $factors_product = 1;\n    $factors_string = \"\";\n    foreach ($factors\
    \ as $factor) {\n        $factors_sum += $factor;\n        $factors_product *=\
    \ $factor;\n        $factors_string .= $factor . \" * \";\n    }\n    $factors_string\
    \ = substr($factors_string, 0, -3);\n    if ($factors_product == $a) {\n     \
    \   echo $a . \" = \" . $factors_string . \"\\n\";\n        return true;\n   \
    \ } else {\n        echo $a . \" = \" . $factors_string . \" != \" . $a . \"\\\
    n\";\n        return false;\n    }\n}\n$a = 50;\necho $a . \": \" . is_multiply_prime($a)\
    \ . \"\\n\";\n$a = 30;\necho $a . \": \" . is_multiply_prime($a) . \"\\n\";\n\
    $a = 33;\necho $a . \": \" . is_multiply_prime($a) . \"\\n\";\n$a = 90;\necho\
    \ $a . \": \" . is_multiply_prime($a) . \"\\n\";\n$a = 100;\necho $a . \": \"\
    \ . is_multiply_prime($a) . \"\\n\";\n$a = 99;\necho $a . \": \" . is_multiply_prime($a)\
    \ . \"\\n\";\n$a = 95;\necho $a . \": \" . is_multiply_prime($a) . \"\\n\";\n\
    $a = 97;\necho $a . \": \" . is_multiply_prime($a) . \"\\n\";\n$a = 111;\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "50 = 2 * 5 * 10 * 25 != 50\n50: \n30 = 2 * 3 * 5 * 6 * 10 * 15 != 30\n\
    30: \n33 = 3 * 11\n33: 1\n90 = 2 * 3 * 5 * 6 * 9 * 10 * 15 * 18 * 30 * 45 != 90\n\
    90: \n100 = 2 * 4 * 5 * 10 * 20 * 25 * 50 != 100\n100: \n99 = 3 * 9 * 11 * 33\
    \ != 99\n99: \n95 = 5 * 19\n95: 1\n97 =  != 97\n97: \n30 = 2 * 3 * 5 * 6 * 10\
    \ * 15 != 30\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6sm5dax.php:61\n\
    Stack trace:\n#0 /tmp/tmpp6sm5dax.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpp6sm5dax.php\
    \ on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $arr = array();\n    $count\
    \ = 0;\n    $n = $a;\n    while ($n > 1) {\n        for ($i = 2; $i <= $n; $i++)\
    \ {\n            if ($n % $i == 0) {\n                $arr[] = $i;\n         \
    \       $n = $n / $i;\n                break;\n            }\n        }\n    }\n\
    \    foreach ($arr as $value) {\n        if ($value != 1) {\n            $count++;\n\
    \        }\n    }\n    if ($count == 3) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\necho is_multiply_prime(30);\necho \"\\n\"\
    ;\necho is_multiply_prime(37);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // Write your code here\n\
    \    // Hint: Put a breakpoint in the loop to check the result\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfhh8qm74.php:18\n\
    Stack trace:\n#0 /tmp/tmpfhh8qm74.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfhh8qm74.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime_numbers = [];\n  \
    \  for ($i = 1; $i <= $a; $i++) {\n        $divider = 2;\n        $is_prime =\
    \ true;\n        while ($i > $divider) {\n            if ($i % $divider == 0)\
    \ {\n                $is_prime = false;\n                break;\n            }\n\
    \            $divider++;\n        }\n        if ($is_prime == true) {\n      \
    \      $prime_numbers[] = $i;\n        }\n    }\n    $last_number = $prime_numbers[count($prime_numbers)\
    \ - 1];\n    for ($i = 0; $i < count($prime_numbers); $i++) {\n        for ($j\
    \ = 0; $j < count($prime_numbers); $j++) {\n            if (($prime_numbers[$i]\
    \ * $prime_numbers[$j]) == $a) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n\n$result = is_multiply_prime(30);\n\
    echo $result;\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogldixs6.php:43\n\
    Stack trace:\n#0 /tmp/tmpogldixs6.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpogldixs6.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tfor ($i = 2; $i < 100; $i++)\
    \ {\n\t\tif ($a % $i == 0) {\n\t\t\t$a = $a / $i;\n\t\t\t$i--;\n\t\t}\n\t}\n\t\
    if ($a == 1) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78cosrvm.php:27\n\
    Stack trace:\n#0 /tmp/tmp78cosrvm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp78cosrvm.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime = [];\n\tfor ($i = 2;\
    \ $i <= $a; $i++) {\n\t\tif (is_prime($i)) {\n\t\t\t$prime[] = $i;\n\t\t}\n\t\
    }\n\tfor ($i = 0; $i < count($prime); $i++) {\n\t\tfor ($j = $i + 1; $j < count($prime);\
    \ $j++) {\n\t\t\tfor ($z = $j + 1; $z < count($prime); $z++) {\n\t\t\t\tif ($prime[$i]\
    \ * $prime[$j] * $prime[$z] == $a) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmggkvgp3.php:11\nStack trace:\n#0 /tmp/tmpmggkvgp3.php(28): is_multiply_prime(5)\n\
    #1 /tmp/tmpmggkvgp3.php(32): candidate(5)\n#2 /tmp/tmpmggkvgp3.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmggkvgp3.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = array();\n    for\
    \ ($i = 1; $i <= $a; $i++) {\n        if ($a % $i == 0) {\n            $div_count\
    \ = 0;\n            for ($j = 1; $j <= $i; $j++) {\n                if ($i % $j\
    \ == 0) {\n                    $div_count++;\n                }\n            }\n\
    \            if ($div_count == 2) {\n                $primes[] = $i;\n       \
    \     }\n        }\n    }\n    if (count($primes) == 3) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho is_multiply_prime(30);\n\
    echo '<br>';\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm0rxwwh.php:38\n\
    Stack trace:\n#0 /tmp/tmpzm0rxwwh.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzm0rxwwh.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 2; $i <= $a; $i++)\
    \ {\n        for ($j = 2; $j <= $a; $j++) {\n            for ($k = 2; $k <= $a;\
    \ $k++) {\n                if ($i * $j * $k == $a) {\n                    return\
    \ true;\n                }\n            }\n        }\n    }\n    return false;\n\
    }\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplf8boalw.php:32\n\
    Stack trace:\n#0 /tmp/tmplf8boalw.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplf8boalw.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    foreach ($primes as $key => $value) {\n        if($a % $value == 0)\
    \ {\n            $a = $a / $value;\n            $check_primes = $primes;\n   \
    \         unset($check_primes[$key]);\n            if(array_search($a, $check_primes)\
    \ == false) {\n                return true;\n            } else {\n          \
    \      return false;\n            }\n        }\n    }\n}\necho is_multiply_prime(30)\
    \ . \"\\n\";\necho is_multiply_prime(27) . \"\\n\";\necho is_multiply_prime(21)\
    \ . \"\\n\";\necho is_multiply_prime(20) . \"\\n\";\necho is_multiply_prime(96)\
    \ . \"\\n\";\necho is_multiply_prime(100) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n1\n\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplv_j1pvd.php:34\n\
    Stack trace:\n#0 /tmp/tmplv_j1pvd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplv_j1pvd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  if($a == 3){\n    return true;\n\
    \  }\n  for($i = 2; $i < $a; $i++){\n    if($a % $i == 0){\n      for($j = 2;\
    \ $j < $a; $j++){\n        if($a % $j == 0){\n          for($k = 2; $k < $a; $k++){\n\
    \            if($a % $k == 0){\n              if($a == $i * $j * $k){\n      \
    \          return true;\n              }\n            }\n          }\n       \
    \ }\n      }\n    }\n  }\n  return false;\n}\n\necho is_multiply_prime(30);\n\
    echo \"\\n\";\necho is_multiply_prime(6);\necho \"\\n\";\necho is_multiply_prime(7);\n\
    echo \"\\n\";\necho is_multiply_prime(8);\necho \"\\n\";\necho is_multiply_prime(23);\n\
    echo \"\\n\";\necho is_multiply_prime(40);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7afmy1ra.php:53\n\
    Stack trace:\n#0 /tmp/tmp7afmy1ra.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp7afmy1ra.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime_numbers = array(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97);\n    $res = $a;\n    $new_array = array();\n    while ($res\
    \ > 1) {\n        foreach ($prime_numbers as $prime_number) {\n            if\
    \ ($res % $prime_number == 0) {\n                $res = $res / $prime_number;\n\
    \                $new_array[] = $prime_number;\n                break;\n     \
    \       }\n        }\n    }\n    return count($new_array) == 3;\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $tmp = $a;\n    $d_3 = 2;\n\
    \    $d_2 = 3;\n    $d_1 = 5;\n    while ($tmp != 1) {\n        if ($tmp % $d_3\
    \ == 0) {\n            $tmp /= $d_3;\n            $d_3 = 2;\n        } elseif\
    \ ($tmp % $d_2 == 0) {\n            $tmp /= $d_2;\n            $d_2 = 3;\n   \
    \     } elseif ($tmp % $d_1 == 0) {\n            $tmp /= $d_1;\n            $d_1\
    \ = 5;\n        } else {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nprint_r(is_multiply_prime(30));\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbw5u920n.php:35\n\
    Stack trace:\n#0 /tmp/tmpbw5u920n.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbw5u920n.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $a = abs($a);\n    $is_prime\
    \ = false;\n    $cnt = 2;\n    $b = $a;\n    $factors = [];\n    while ($b > 1)\
    \ {\n        while ($b % $cnt == 0) {\n            $factors[] = $cnt;\n      \
    \      $b /= $cnt;\n        }\n        $cnt++;\n    }\n    $len = count($factors);\n\
    \    if ($len == 3) {\n        $is_prime = true;\n    }\n    return $is_prime;\n\
    }\n\n$a = is_multiply_prime(30);\nvar_dump($a);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t// write your code here\n}\n\
    \nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx9vxbx9.php:17\n\
    Stack trace:\n#0 /tmp/tmpcx9vxbx9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcx9vxbx9.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$arr = array(2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97);\n\tfor ($i = 0; $i < 3; $i++) {\n\t\tif (in_array($a, $arr)) {\n\t\t\t\
    return true;\n\t\t}\n\t\t$a = $a / 2;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldkzat8v.php:24\n\
    Stack trace:\n#0 /tmp/tmpldkzat8v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpldkzat8v.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  if($a == 1) return true;\n\
    \  for($i = 2; $i <= $a; $i++) {\n    $c = 0;\n    for($j = 1; $j <= $i; $j++)\
    \ {\n      if($i % $j == 0) $c++;\n    }\n    if($c == 2) {\n      if($a % $i\
    \ == 0) {\n        $b = $a / $i;\n        for($i = 2; $i <= $b; $i++) {\n    \
    \      $c = 0;\n          for($j = 1; $j <= $i; $j++) {\n            if($i % $j\
    \ == 0) $c++;\n          }\n          if($c == 2) {\n            if($b % $i ==\
    \ 0) {\n              $c = $b / $i;\n              for($i = 2; $i <= $c; $i++)\
    \ {\n                $d = 0;\n                for($j = 1; $j <= $i; $j++) {\n\
    \                  if($i % $j == 0) $d++;\n                }\n               \
    \ if($d == 2) {\n                  if($c % $i == 0) {\n                    return\
    \ true;\n                  }\n                }\n              }\n           \
    \ }\n          }\n        }\n      }\n    }\n  }\n  return false;\n}\necho is_multiply_prime(30);\n\
    \nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: b'1'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime = array(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97);\n    foreach ($prime as $i) {\n        $a /= $i;\n        if ($a ==\
    \ 1) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzxtrts9.php:26\n\
    Stack trace:\n#0 /tmp/tmplzxtrts9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplzxtrts9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $res=array();\n    for($i=2;$i<$a;$i++){\n\
    \        $test=0;\n        for($j=2;$j<=$i;$j++){\n            if($i%$j==0){\n\
    \                $test++;\n            }\n        }\n        if($test==1){\n \
    \           $res[]=$i;\n        }\n    }\n    if(count($res)>=3){\n        for($i=0;$i<count($res);$i++){\n\
    \            $check=$a/$res[$i];\n            for($j=0;$j<count($res);$j++){\n\
    \                if($res[$j]==$check){\n                    return true;\n   \
    \             }\n            }\n        }\n    }else{\n        return false;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0z4rs5yv.php:40\n\
    Stack trace:\n#0 /tmp/tmp0z4rs5yv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp0z4rs5yv.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $prime = false;\n  $isPrime\
    \ = function($a) {\n    if ($a <= 1) {\n      return false;\n    } else if ($a\
    \ <= 3) {\n      return true;\n    } else if ($a % 2 == 0 || $a % 3 == 0) {\n\
    \      return false;\n    }\n    $i = 5;\n    while ($i * $i <= $a) {\n      if\
    \ ($a % $i == 0 || $a % ($i + 2) == 0) {\n        return false;\n      }\n   \
    \   $i = $i + 6;\n    }\n    return true;\n  };\n  for ($i = 1; $i <= $a; $i++)\
    \ {\n    if ($isPrime($i)) {\n      for ($j = 1; $j <= $a; $j++) {\n        if\
    \ ($isPrime($j)) {\n          for ($k = 1; $k <= $a; $k++) {\n            if ($isPrime($k))\
    \ {\n              if ($i * $j * $k == $a) {\n                $prime = true;\n\
    \              }\n            }\n          }\n        }\n      }\n    }\n  }\n\
    \  return $prime;\n}\necho is_multiply_prime(30) . \"\\n\";\necho is_multiply_prime(42)\
    \ . \"\\n\";\necho is_multiply_prime(99) . \"\\n\";\necho is_multiply_prime(49)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: b'1\n1\n1\n\n'
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  // Write your code here\n \
    \ // Hint: $a is the product of $b, $c and $d\n  // In other words, $a = $b *\
    \ $c * $d\n  // You can use the is_prime() function\n  $count = 0;\n  for ($i\
    \ = 2; $i <= $a; $i++) {\n    if ($a % $i == 0) {\n      if (is_prime($i)) {\n\
    \        $count++;\n      }\n    }\n  }\n  if ($count == 3) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmprrip3df_.php:16\nStack trace:\n#0 /tmp/tmprrip3df_.php(29): is_multiply_prime(5)\n\
    #1 /tmp/tmprrip3df_.php(33): candidate(5)\n#2 /tmp/tmprrip3df_.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmprrip3df_.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$is_multiply_prime = false;\n\
    \t$first_prime = 3;\n\t$second_prime = 5;\n\t$third_prime = 7;\n\tfor ($i = 1;\
    \ $i < 100; $i++) {\n\t\tif (($first_prime * $second_prime * $third_prime) ==\
    \ $a) {\n\t\t\t$is_multiply_prime = true;\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\
    \t\t$first_prime++;\n\t\t\t$second_prime++;\n\t\t\t$third_prime++;\n\t\t}\n\t\
    }\n\treturn $is_multiply_prime;\n}\n\necho is_multiply_prime(30);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzdwy5w7.php:34\n\
    Stack trace:\n#0 /tmp/tmptzdwy5w7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptzdwy5w7.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [];\n    $i = 2;\n\
    \    while ($i <= $a/2) {\n        if ($a % $i == 0) {\n            if ($a / $i\
    \ == 1) {\n                $primes[] = $i;\n                break;\n         \
    \   }\n            $primes[] = $i;\n            $a = $a / $i;\n            $i\
    \ = 2;\n        } else {\n            $i += 1;\n        }\n    }\n    return count($primes)\
    \ == 3;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee72jxai.php:33\n\
    Stack trace:\n#0 /tmp/tmpee72jxai.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpee72jxai.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if($a%2 == 0 && $a%3 == 0\
    \ && $a%5 == 0 && $a%7 == 0){\n        echo \"True <br/>\";\n    }\n    else {\n\
    \        echo \"False <br/>\";\n    }\n}\nis_multiply_prime(30);\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "False <br/>False <br/>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpcrmbzecy.php:23\nStack trace:\n#0 /tmp/tmpcrmbzecy.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcrmbzecy.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $prime_numbers = array();\n\
    \  for ($i = 2; $i <= $a; $i++) {\n    $d = 0;\n    for ($j = 1; $j <= $i; $j++)\
    \ {\n      if ($i % $j == 0) {\n        $d++;\n      }\n    }\n    if ($d == 2)\
    \ {\n      $prime_numbers[] = $i;\n    }\n  }\n  $test = false;\n  for ($j = 0;\
    \ $j < count($prime_numbers); $j++) {\n    for ($i = 0; $i < count($prime_numbers);\
    \ $i++) {\n      if ($a % ($prime_numbers[$j] * $prime_numbers[$i]) == 0) {\n\
    \        $test = true;\n      }\n    }\n  }\n  return $test;\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4lpwpkfs.php:39\n\
    Stack trace:\n#0 /tmp/tmp4lpwpkfs.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4lpwpkfs.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $b = floor($a / 2);\n   \
    \ $mult = 1;\n    for ($i = 2; $i <= $b; $i++) {\n        if ($a % $i == 0) {\n\
    \            $c = $a / $i;\n            if (check_prime($i) && check_prime($c))\
    \ {\n                $mult *= $i;\n                $mult *= $c;\n            }\n\
    \        }\n    }\n    if ($mult == $a) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function check_prime()\
    \ in /tmp/tmpnb7793a9.php:14\nStack trace:\n#0 /tmp/tmpnb7793a9.php(28): is_multiply_prime(30)\n\
    #1 /tmp/tmpnb7793a9.php(33): candidate(30)\n#2 /tmp/tmpnb7793a9.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnb7793a9.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  for ($i = 2; $i < $a; $i++)\
    \ {\n    if ($a % $i == 0) {\n      return ($a / $i);\n    }\n  }\n  return False;\n\
    }\nvar_dump(is_multiply_prime(30));\nfunction candidate(...$args) {\n    return\
    \ is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(15)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jlb0yhs.php:23\n\
    Stack trace:\n#0 /tmp/tmp3jlb0yhs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3jlb0yhs.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime_numbers = array();\n\
    \    if ($a <= 2) {\n        return false;\n    }\n    if ($a == 3) {\n      \
    \  return true;\n    }\n    $is_multiply_prime = false;\n    $is_prime = true;\n\
    \    for ($i = 2; $i <= $a; $i++) {\n        $is_prime = true;\n        for ($j\
    \ = 2; $j < $i; $j++) {\n            if ($i % $j == 0) {\n                $is_prime\
    \ = false;\n                break;\n            }\n        }\n        if ($is_prime\
    \ == true) {\n            $prime_numbers[] = $i;\n        }\n    }\n    $max_prime_number\
    \ = max($prime_numbers);\n    for ($i = 0; $i < count($prime_numbers); $i++) {\n\
    \        for ($j = 0; $j < count($prime_numbers); $j++) {\n            if ($i\
    \ != $j) {\n                if ($prime_numbers[$i] * $prime_numbers[$j] == $a\
    \ ||\n                    $prime_numbers[$i] * $prime_numbers[$j] * $max_prime_number\
    \ == $a) {\n                    $is_multiply_prime = true;\n                 \
    \   break;\n                }\n            }\n        }\n    }\n    return $is_multiply_prime;\n\
    }\n\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqom3_vy.php:52\n\
    Stack trace:\n#0 /tmp/tmplqom3_vy.php(63): test()\n#1 {main}\n  thrown in /tmp/tmplqom3_vy.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [];\n    $result\
    \ = false;\n    if ($a > 1) {\n        if ($a < 4) {\n            $result = true;\n\
    \        } else {\n            for ($i = 2; $i <= $a; $i++) {\n              \
    \  if (is_prime($i)) {\n                    $primes[] = $i;\n                }\n\
    \            }\n            foreach ($primes as $prime) {\n                if\
    \ ($a % $prime == 0) {\n                    $a = $a / $prime;\n              \
    \      $result = is_multiply_prime($a);\n                    break;\n        \
    \        }\n            }\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp07iipywi.php:16\nStack trace:\n#0 /tmp/tmp07iipywi.php(32): is_multiply_prime(5)\n\
    #1 /tmp/tmp07iipywi.php(36): candidate(5)\n#2 /tmp/tmp07iipywi.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmp07iipywi.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $n = $a;\n    $prime = 0;\n\
    \    while($n != 1){\n        for($i = 2; $i <= $n; $i++){\n            if($n\
    \ % $i == 0){\n                $n = $n / $i;\n                $prime += 1;\n \
    \               break;\n            }\n        }\n    }\n    if($prime == 3){\n\
    \        return true;\n    }else{\n        return false;\n    }\n}\nvar_dump(is_multiply_prime(30));\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "bool(true)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime_num = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n\t$count = count($prime_num);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\
    \tfor ($j = 0; $j < $count; $j++) {\n\t\t\tfor ($k = 0; $k < $count; $k++) {\n\
    \t\t\t\tif ($prime_num[$i] * $prime_num[$j] * $prime_num[$k] == $a) {\n\t\t\t\t\
    \treturn True;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn False;\n}\necho '<h1>Write\
    \ a function that returns true if the given number is the multiplication of 3\
    \ prime numbers</h1>';\necho '<b>number 30:</b> '.is_multiply_prime(30).'<br>';\n\
    echo '<b>number 28:</b> '.is_multiply_prime(28).'<br>';\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: <h1>Write a function that returns true if the given number is the multiplication
    of 3 prime numbers</h1><b>number 30:</b> 1<br><b>number 28:</b> 1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime = array();\n    $divider\
    \ = 3;\n    for ($i = 2; $i < $a; $i++) {\n        $counter = 0;\n        for\
    \ ($j = 2; $j <= $i/2; $j++) {\n            if ($i % $j == 0) {\n            \
    \    $counter++;\n            }\n        }\n        if ($counter == 0) {\n   \
    \         $prime[] = $i;\n        }\n    }\n    $multiply = $prime[0] * $prime[1]\
    \ * $prime[2];\n    if ($multiply == $a) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\necho is_multiply_prime(15);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrligvpe.php:38\n\
    Stack trace:\n#0 /tmp/tmpbrligvpe.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpbrligvpe.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a <= 1) {\n        return\
    \ false;\n    }\n    $prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    for ($i = 0; $i\
    \ < count($prime_numbers); $i++) {\n        for ($j = 0; $j < count($prime_numbers);\
    \ $j++) {\n            for ($k = 0; $k < count($prime_numbers); $k++) {\n    \
    \            if ($prime_numbers[$i] * $prime_numbers[$j] * $prime_numbers[$k]\
    \ == $a) {\n                    return true;\n                }\n            }\n\
    \        }\n    }\n    return false;\n}\n\necho is_multiply_prime(30);\necho \"\
    <br>\";\necho is_multiply_prime(29);\necho \"<br>\";\necho is_multiply_prime(10);\n\
    echo \"<br>\";\necho is_multiply_prime(7);\necho \"<br>\";\necho is_multiply_prime(3);\n\
    echo \"<br>\";\necho is_multiply_prime(1);\necho \"<br>\";\necho is_multiply_prime(0);\n\
    echo \"<br>\";\necho is_multiply_prime(-1);\necho \"<br>\";\necho is_multiply_prime(-10);\n\
    echo \"<br>\";\necho is_multiply_prime(-27);\necho \"<br>\";\necho is_multiply_prime(-17);\n\
    echo \"<br>\";\necho is_multiply_prime(-81);\necho \"<br>\";\necho is_multiply_prime(-3);\n\
    echo \"<br>\";\necho is_multiply_prime(-5);\necho \"<br>\";\necho is_multiply_prime(-11);\n\
    echo \"<br>\";\necho is_multiply_prime(-35);\necho \"<br>\";\necho is_multiply_prime(-65);\n\
    echo \"<br>\";\necho\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxh8dnrkd.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$primes = array(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97);\n\t$prime_factors = array();\n\tforeach ($primes as $key => $value)\
    \ {\n\t\tif ($a % $value == 0) {\n\t\t\t$prime_factors[] = $value;\n\t\t}\n\t\
    }\n\tif (count($prime_factors) >= 3) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\n\nvar_dump(is_multiply_prime(30));\nvar_dump(is_multiply_prime(50));\n\
    var_dump(is_multiply_prime(20));\nvar_dump(is_multiply_prime(25));\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "bool(true)\nbool(false)\nbool(false)\nbool(false)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmph2jk5ku2.php:34\nStack trace:\n#0 /tmp/tmph2jk5ku2.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph2jk5ku2.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$divider = 2;\n\t$prime = true;\n\
    \t$prime_counter = 0;\n\t\n\twhile ($a != 1) {\n\t\tif ($a % $divider == 0) {\n\
    \t\t\t$a /= $divider;\n\t\t\t$prime_counter++;\n\t\t\tif ($prime_counter == 3)\
    \ {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\t$divider++;\n\t\t}\n\t\
    }\n\t\n\treturn false;\n}\n\n$a = is_multiply_prime(30);\nvar_dump($a);\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppshgg086.php:41\n\
    Stack trace:\n#0 /tmp/tmppshgg086.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppshgg086.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$result = 1;\n\tfor ($i = 2;\
    \ $i <= $a; $i++) {\n\t\tif ($a % $i == 0) {\n\t\t\tfor ($j = 2; $j <= $i; $j++)\
    \ {\n\t\t\t\tif ($i % $j == 0) {\n\t\t\t\t\tif ($i == $j) {\n\t\t\t\t\t\t$result\
    \ *= $i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $result == $a;\n}\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_sqbcps.php:30\n\
    Stack trace:\n#0 /tmp/tmpz_sqbcps.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpz_sqbcps.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $array_primes = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    $a_prime = [];\n    foreach ($array_primes as $prime) {\n    \
    \    if ($a % $prime == 0) {\n            $a_prime[] = $prime;\n        }\n  \
    \  }\n    if (count($a_prime) < 3) {\n        return false;\n    } else {\n  \
    \      return true;\n    }\n}\necho is_multiply_prime(30) . \"\\n\";\necho is_multiply_prime(42)\
    \ . \"\\n\";\necho is_multiply_prime(65) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpczh53ezq.php:32\n\
    Stack trace:\n#0 /tmp/tmpczh53ezq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpczh53ezq.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  //if $a is less then 100, it\
    \ is made of 3 prime numbers\n  if ($a < 100) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kar1yt3.php:22\n\
    Stack trace:\n#0 /tmp/tmp3kar1yt3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3kar1yt3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $b = 2;\n    $c = 3;\n  \
    \  $d = 5;\n    $count = 0;\n    $dynamic_count = 0;\n    while ($b <= sqrt($a))\
    \ {\n        if ($a % $b == 0) {\n            $a = $a / $b;\n            $count++;\n\
    \            $dynamic_count++;\n        } else {\n            $b++;\n        }\n\
    \    }\n    if ($count == 2) {\n        $count = 0;\n        while ($c <= sqrt($a))\
    \ {\n            if ($a % $c == 0) {\n                $a = $a / $c;\n        \
    \        $count++;\n                $dynamic_count++;\n            } else {\n\
    \                $c++;\n            }\n        }\n        if ($count == 2) {\n\
    \            $count = 0;\n            while ($d <= sqrt($a)) {\n             \
    \   if ($a % $d == 0) {\n                    $a = $a / $d;\n                 \
    \   $count++;\n                    $dynamic_count++;\n                } else {\n\
    \                    $d++;\n                }\n            }\n            if ($count\
    \ == 2) {\n                return true;\n            } else {\n              \
    \  return false;\n            }\n        } else {\n            return false;\n\
    \        }\n    } else {\n        return false;\n    }\n}\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2h4aq8n4.php:64\n\
    Stack trace:\n#0 /tmp/tmp2h4aq8n4.php(75): test()\n#1 {main}\n  thrown in /tmp/tmp2h4aq8n4.php\
    \ on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstlnio18.php:16\n\
    Stack trace:\n#0 /tmp/tmpstlnio18.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpstlnio18.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$primes = array();\n\tfor ($i\
    \ = 2; $i <= $a / 2; $i++) {\n\t\tif ($a % $i == 0) {\n\t\t\tif (is_prime($i))\
    \ {\n\t\t\t\t$primes[] = $i;\n\t\t\t}\n\t\t}\n\t}\n\tif (count($primes) < 3) {\n\
    \t\treturn false;\n\t}\n\t$sum = 1;\n\tforeach ($primes as $prime) {\n\t\t$sum\
    \ *= $prime;\n\t}\n\tif ($sum == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpe6ot52_p.php:12\nStack trace:\n#0 /tmp/tmpe6ot52_p.php(30): is_multiply_prime(30)\n\
    #1 /tmp/tmpe6ot52_p.php(35): candidate(30)\n#2 /tmp/tmpe6ot52_p.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe6ot52_p.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a == 1) {\n        return\
    \ false;\n    }\n    $primeNumbers = array(1);\n    for ($i = 2; $i <= $a; $i++)\
    \ {\n        if (is_prime($i)) {\n            $primeNumbers[] = $i;\n        }\n\
    \    }\n    $result = [];\n    foreach ($primeNumbers as $prime) {\n        if\
    \ ($a % $prime == 0) {\n            $result[] = $prime;\n        }\n    }\n  \
    \  if (count($result) == 3) {\n        return true;\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpcfsey0ch.php:14\nStack trace:\n#0 /tmp/tmpcfsey0ch.php(30): is_multiply_prime(5)\n\
    #1 /tmp/tmpcfsey0ch.php(34): candidate(5)\n#2 /tmp/tmpcfsey0ch.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcfsey0ch.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime_numbers = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    $primes = [];\n    $i = 0;\n    $j = 0;\n    $div = 0;\n    $flag\
    \ = false;\n    while($i < $a) {\n        if($a % $prime_numbers[$i] == 0) {\n\
    \            $primes[$j] = $prime_numbers[$i];\n            $j++;\n          \
    \  $flag = true;\n        }\n        $i++;\n    }\n    $z = 0;\n    while($z <\
    \ count($primes)) {\n        if($primes[$z] == 2) {\n            $div = $div +\
    \ 1;\n        }\n        $z++;\n    }\n    $z = 0;\n    while($z < count($primes))\
    \ {\n        if($primes[$z] == 3) {\n            $div = $div + 1;\n        }\n\
    \        $z++;\n    }\n    $z = 0;\n    while($z < count($primes)) {\n       \
    \ if($primes[$z] == 5) {\n            $div = $div + 1;\n        }\n        $z++;\n\
    \    }\n    if($div == 3 && $flag == true) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\necho is_multiply_prime(30);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpdd1f74et.php:16\n\
    Stack trace:\n#0 /tmp/tmpdd1f74et.php(50): is_multiply_prime(30)\n#1 {main}\n\
    \  thrown in /tmp/tmpdd1f74et.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$result = 0;\n\tfor ($i = 2;\
    \ $i < 100; $i++) {\n\t\tif ($a % $i == 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\t\
    if ($result == 2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    echo is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplyxu2pdo.php:28\n\
    Stack trace:\n#0 /tmp/tmplyxu2pdo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplyxu2pdo.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tif ($a == 0) {\n\t\treturn\
    \ false;\n\t}\n\tfor ($i = 2; $i < $a; $i++) {\n\t\tfor ($j = 2; $j < $a; $j++)\
    \ {\n\t\t\tfor ($k = 2; $k < $a; $k++) {\n\t\t\t\tif ($i * $j * $k == $a) {\n\t\
    \t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\necho\
    \ is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpno4xi87j.php:35\n\
    Stack trace:\n#0 /tmp/tmpno4xi87j.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpno4xi87j.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // Hint: use the prime number\
    \ function from the previous example\n\n    //Your code here...\n\n}\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_s133oe.php:19\n\
    Stack trace:\n#0 /tmp/tmpz_s133oe.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz_s133oe.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  if (is_int($a) === false) {\n\
    \    return false;\n  }\n  //if $a <= 1 - return false\n  if ($a <= 1) {\n   \
    \ return false;\n  }\n  //if $a is prime - return false\n  for ($i = 2; $i < $a;\
    \ $i++) {\n    if ($a % $i === 0) {\n      break;\n    }\n  }\n  if ($i === $a)\
    \ {\n    return false;\n  }\n  //find first prime number in $a and check if it\
    \ is multiplication of 3 prime numbers\n  for ($i = 2; $i < $a; $i++) {\n    if\
    \ ($a % $i === 0) {\n      //i is a prime number\n      for ($j = 2; $j < $i;\
    \ $j++) {\n        if ($i % $j === 0) {\n          break;\n        }\n      }\n\
    \      if ($j === $i) {\n        $secondPrime = $i;\n        break;\n      }\n\
    \    }\n  }\n  //if found prime number is not the multiplication of 3 prime numbers\n\
    \  if ($a / $secondPrime === 1) {\n    return false;\n  }\n  $b = $a / $secondPrime;\n\
    \  //if $b is prime - return false\n  for ($i = 2; $i < $b; $i++) {\n    if ($b\
    \ % $i === 0) {\n      break;\n    }\n  }\n  if ($i === $b) {\n    return false;\n\
    \  }\n  //find second prime number in $b and check if it is multiplication of\
    \ 3 prime numbers\n  for ($i = 2; $i < $b; $i++) {\n    if ($b % $i === 0) {\n\
    \      //i is a prime number\n      for ($j = 2; $j < $i; $j++) {\n        if\
    \ ($i % $j === 0) {\n          break;\n        }\n      }\n      if ($j === $i)\
    \ {\n        $thirdPrime = $i;\n        break;\n      }\n    }\n  }\n  //if found\
    \ prime number is not the multiplication of 3 prime numbers\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_8fdz88f.php on line 88\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    // Hints:\n    //  - verify\
    \ if given number is a product of prime numbers\n    //  - find prime numbers\n\
    \    //  - https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\n    //  - https://www.mathsisfun.com/prime-factorization.html\n\
    \    //  - http://www.mathsisfun.com/prime-numbers.html\n    //  - https://www.mathsisfun.com/prime-numbers.html\n\
    \    //  - https://www.mathsisfun.com/primes/\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4w3ix7m.php:24\n\
    Stack trace:\n#0 /tmp/tmpe4w3ix7m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpe4w3ix7m.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $n=0;\n    for ($j=2; $j<$a;\
    \ $j++) {\n        if($a%$j==0) {\n            for ($i=2; $i<=$j/2; $i++) {\n\
    \                if($j%$i==0) {\n                    $n++;\n                }\n\
    \            }\n            if($n==0 && $j!=$a) {\n                return False;\n\
    \            }\n        }\n    }\n    return True;\n}\n\nprint(is_multiply_prime(30)\
    \ . \"<br>\");\nprint(is_multiply_prime(28) . \"<br>\");\nprint(is_multiply_prime(27)\
    \ . \"<br>\");\nprint(is_multiply_prime(25) . \"<br>\");\nprint(is_multiply_prime(15)\
    \ . \"<br>\");\nprint(is_multiply_prime(7) . \"<br>\");\nprint(is_multiply_prime(24)\
    \ . \"<br>\");\nprint(is_multiply_prime(9) . \"<br>\");\nprint(is_multiply_prime(11)\
    \ . \"<br>\");\nprint(is_multiply_prime(13) . \"<br>\");\nprint(is_multiply_prime(17)\
    \ . \"<br>\");\nprint(is_multiply_prime(19) . \"<br>\");\nprint(is_multiply_prime(21)\
    \ . \"<br>\");\nprint(is_multiply_prime(23) . \"<br>\");\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "<br><br><br><br><br>1<br><br><br>1<br>1<br>1<br>1<br><br>1<br>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmppvgops8u.php:44\nStack trace:\n\
    #0 /tmp/tmppvgops8u.php(56): test()\n#1 {main}\n  thrown in /tmp/tmppvgops8u.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $multiply = 1;\n    $factors\
    \ = array();\n    $i = 2;\n    while ($i <= $a) {\n        while (($a % $i) ==\
    \ 0) {\n            $factors[] = $i;\n            $a /= $i;\n        }\n     \
    \   $i++;\n    }\n    if (count($factors) == 3) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n\nprint_r(is_multiply_prime(30));\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $prime_arr = array();\n  for\
    \ ($i = 2; $i <= $a; $i++) {\n    $c = 0;\n    for ($j = 1; $j <= $i; $j++) {\n\
    \      if ($i % $j == 0) {\n        $c++;\n      }\n    }\n    if ($c == 2) {\n\
    \      $prime_arr[] = $i;\n    }\n  }\n  $flag = 0;\n  $prime_arr_size = count($prime_arr);\n\
    \  for ($i = 0; $i < $prime_arr_size; $i++) {\n    for ($j = $i + 1; $j < $prime_arr_size;\
    \ $j++) {\n      for ($k = $j + 1; $k < $prime_arr_size; $k++) {\n        if ($prime_arr[$i]\
    \ * $prime_arr[$j] * $prime_arr[$k] == $a) {\n          $flag = 1;\n         \
    \ return true;\n        }\n      }\n    }\n  }\n  if ($flag == 0) {\n    return\
    \ false;\n  }\n}\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rxlrlr_.php:45\n\
    Stack trace:\n#0 /tmp/tmp4rxlrlr_.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp4rxlrlr_.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$b = 2;\n\t$c = 2;\n\t$d =\
    \ 2;\n\t\n\twhile ($b <= $a) {\n\t\twhile ($c <= $a) {\n\t\t\twhile ($d <= $a)\
    \ {\n\t\t\t\tif ($b * $c * $d == $a) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\
    \t\t$d++;\n\t\t\t}\n\t\t\t$c++;\n\t\t}\n\t\t$b++;\n\t}\n\treturn false;\n}\n\t\
    echo is_multiply_prime(30);\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkh53vm20.php:34\n\
    Stack trace:\n#0 /tmp/tmpkh53vm20.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkh53vm20.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$a = (int)$a;\n\tif ($a < 1)\
    \ return false;\n\t$value = true;\n\tfor ($i = 2; $i <= $a; $i++) {\n\t\t$value\
    \ = (function_is_prime($i)) ? true : false;\n\t\tif ($value && $a % $i == 0) {\n\
    \t\t\t$a /= $i;\n\t\t\t$i = 1;\n\t\t}\n\t}\n\treturn $value;\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function function_is_prime()\
    \ in /tmp/tmpgv0a8rgu.php:13\nStack trace:\n#0 /tmp/tmpgv0a8rgu.php(22): is_multiply_prime(5)\n\
    #1 /tmp/tmpgv0a8rgu.php(26): candidate(5)\n#2 /tmp/tmpgv0a8rgu.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmpgv0a8rgu.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t\n\t\tfor ($i = 2; $i < $a;\
    \ $i++) {\n\t\t\tfor ($j = 2; $j < $a; $j++) {\n\t\t\t\tfor ($x = 2; $x < $a;\
    \ $x++) {\n\t\t\t\t\tif ($i * $j * $x == $a) {\n\t\t\t\t\t\treturn true;\n\t\t\
    \t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nsv2q6g.php:33\n\
    Stack trace:\n#0 /tmp/tmp1nsv2q6g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1nsv2q6g.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  if ($a == 0 || $a == 1) return\
    \ False;\n  for ($i = 2; $i < $a; $i++) {\n    if ($a % $i == 0) {\n      $a =\
    \ $a / $i;\n      if ($a == 1) return True;\n      $i = 2;\n    }\n  }\n  return\
    \ False;\n}\n\nprint is_multiply_prime(0);\nprint is_multiply_prime(1);\nprint\
    \ is_multiply_prime(2);\nprint is_multiply_prime(3);\nprint is_multiply_prime(6);\n\
    print is_multiply_prime(10);\nprint is_multiply_prime(30);\nprint is_multiply_prime(11);\n\
    print is_multiply_prime(17);\nprint is_multiply_prime(25);\nprint is_multiply_prime(35);\n\
    print is_multiply_prime(37);\nprint is_multiply_prime(101);\nprint is_multiply_prime(121);\n\
    print is_multiply_prime(153);\nprint is_multiply_prime(221);\nprint is_multiply_prime(323);\n\
    print is_multiply_prime(455);\nprint is_multiply_prime(666);\nprint is_multiply_prime(889);\n\
    print is_multiply_prime(1239);\nprint is_multiply_prime(1259);\nprint is_multiply_prime(1289);\n\
    print is_multiply_prime(1343);\nprint is_multiply_prime(1449);\nprint is_multiply_prime(1541);\n\
    print is_multiply_prime(1645);\nprint is_multiply_prime(1889);\nprint is_multiply_prime(2031);\n\
    print is_multiply_prime(2111);\nprint is_multiply_prime(2189);\nprint is_multiply_prime(2303);\n\
    print is_multiply_prime(2499);\nprint is_multiply_prime(2647);\n\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hb9po80.php:61\n\
    Stack trace:\n#0 /tmp/tmp2hb9po80.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp2hb9po80.php\
    \ on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $prime = true;\n    for ($i\
    \ = 1; $i <= $a; $i++) {\n        if ($a % $i == 0) {\n            $prime = true;\n\
    \            for ($j = 2; $j <= $i / 2; $j++) {\n                if ($i % $j ==\
    \ 0) {\n                    $prime = false;\n                    break;\n    \
    \            }\n            }\n            if ($prime) {\n                echo\
    \ $i.\" \";\n            }\n        }\n    }\n}\n\necho is_multiply_prime(3);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1 3 1 5 \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0gj7h15.php:32\n\
    Stack trace:\n#0 /tmp/tmpz0gj7h15.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpz0gj7h15.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if($a == 1) {\n        return\
    \ false;\n    }\n\n    $n = $a;\n    $primes = [];\n    for($i = 2; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $n /= $i;\n            $primes[]\
    \ = $i;\n            $i--;\n        }\n    }\n\n    if(count($primes) < 3) {\n\
    \        return false;\n    }\n\n    $p1 = $primes[0];\n    $p2 = $primes[1];\n\
    \    $p3 = $primes[2];\n\n    return $p1 * $p2 * $p3 == $a;\n}\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$length = $a;\n\t$remainder\
    \ = $a;\n\t$prime_numbers = array();\n\t$is_multiply_prime = array();\n\t\n\t\
    if($a > 100) {\n\t\treturn \"The number must be less then 100.\";\n\t}\n\n\tfor($i\
    \ = 0; $i < $length; $i++) {\n\t\t$remainder = $a % ($i + 1);\n\t\tif($remainder\
    \ == 0) {\n\t\t\t$prime_numbers[] = $i + 1;\n\t\t}\n\t}\n\n\tforeach($prime_numbers\
    \ as $key => $value) {\n\t\tif($value == 1 || $value == $a) {\n\t\t\tunset($prime_numbers[$key]);\n\
    \t\t}\n\t}\n\n\t$prime_numbers = array_values($prime_numbers);\n\n\tif(count($prime_numbers)\
    \ == 3) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho is_multiply_prime(42);\n\
    \nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmz8qpe8p.php:48\n\
    Stack trace:\n#0 /tmp/tmpmz8qpe8p.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpmz8qpe8p.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tfor ($i = 2; $i <= 100; $i++)\
    \ {\n\t\tif ($a % $i == 0) {\n\t\t\t$b = $a / $i;\n\t\t\tfor ($j = 2; $j <= 100;\
    \ $j++) {\n\t\t\t\tif ($b % $j == 0) {\n\t\t\t\t\t$c = $b / $j;\n\t\t\t\t\tfor\
    \ ($k = 2; $k <= 100; $k++) {\n\t\t\t\t\t\tif ($c % $k == 0) {\n\t\t\t\t\t\t\t\
    if ($c / $k == 1) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\
    \t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplkr5p4va.php:40\n\
    Stack trace:\n#0 /tmp/tmplkr5p4va.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplkr5p4va.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$result = true;\n\t$multiply\
    \ = $a;\n\t$i = 2;\n\t$c = 0;\n\t$prime_array = [];\n\twhile ($multiply != 1)\
    \ {\n\t\tif ($multiply % $i == 0) {\n\t\t\t$multiply = $multiply / $i;\n\t\t\t\
    $prime_array[] = $i;\n\t\t\tif (!is_prime($i)) {\n\t\t\t\t$result = false;\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $result;\n\
    }\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpl479h3ux.php:18\nStack trace:\n#0 /tmp/tmpl479h3ux.php(29): is_multiply_prime(5)\n\
    #1 /tmp/tmpl479h3ux.php(33): candidate(5)\n#2 /tmp/tmpl479h3ux.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl479h3ux.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $b = $a;\n    $arr = [];\n\
    \    $i = 2;\n    while($i<$b) {\n        if ($b%$i == 0) {\n            array_push($arr,\
    \ $i);\n            $b /= $i;\n        } else {\n            $i++;\n        }\n\
    \    }\n    if ($b != 1) {\n        array_push($arr, $b);\n    }\n    if (count($arr)\
    \ == 3) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\necho is_multiply_prime(30) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    $mul = 1;\n    $is_prime = False;\n    foreach ($primes as $prime)\
    \ {\n        if ($a % $prime == 0) {\n            $is_prime = True;\n        \
    \    $mul *= $prime;\n        }\n        if ($mul == $a) break;\n    }\n    return\
    \ $is_prime;\n}\n\necho is_multiply_prime(30);\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvn8hdse.php:28\n\
    Stack trace:\n#0 /tmp/tmpyvn8hdse.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyvn8hdse.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if($a > 100) {\n        return\
    \ false;\n    }\n    $primes = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n    for($i = 0; $i < count($primes);\
    \ $i++) {\n        for($j = 0; $j < count($primes); $j++) {\n            for($k\
    \ = 0; $k < count($primes); $k++) {\n                if($primes[$i] * $primes[$j]\
    \ * $primes[$k] == $a) {\n                    return true;\n                }\n\
    \            }\n        }\n    }\n    return false;\n}\n\necho is_multiply_prime(30);\n\
    \nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgeec49n.php:36\n\
    Stack trace:\n#0 /tmp/tmpsgeec49n.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsgeec49n.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $i = 2;\n    $b = array();\n\
    \    while ($i < $a) {\n        if ($a % $i == 0) {\n            $b[] = $i;\n\
    \            $a = $a / $i;\n        } else {\n            $i++;\n        }\n \
    \   }\n    $b[] = $a;\n    if (count($b) == 3) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n$a = 30;\necho is_multiply_prime($a);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $my_is_prime = function($a)\
    \ {\n        for ($i = 2; $i < $a; $i++) {\n            if ($a % $i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    };\n    for ($i = 1; $i < $a; $i++) {\n        if (is_prime($i) && $a % $i\
    \ == 0) {\n            $b = $a / $i;\n            if (is_prime($b)) {\n      \
    \          return true;\n            }\n        }\n    }\n    return false;\n\
    }\necho is_multiply_prime(30);\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpa8h_9grs.php:18\nStack trace:\n#0 /tmp/tmpa8h_9grs.php(27): is_multiply_prime(30)\n\
    #1 {main}\n  thrown in /tmp/tmpa8h_9grs.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n  $n1 = 0;\n  $n2 = 0;\n  $n3\
    \ = 0;\n  $found = false;\n  $result = false;\n  $arr = array();\n  $arr = create_array($a);\n\
    \  while(!$found && $n1 < count($arr)) {\n    $n2 = $n1 + 1;\n    while(!$found\
    \ && $n2 < count($arr)) {\n      $n3 = $n2 + 1;\n      while(!$found && $n3 <\
    \ count($arr)) {\n        if ($arr[$n1] * $arr[$n2] * $arr[$n3] == $a) {\n   \
    \       $found = true;\n          $result = true;\n        }\n        $n3++;\n\
    \      }\n      $n2++;\n    }\n    $n1++;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function create_array()\
    \ in /tmp/tmpih4oh6xl.php:15\nStack trace:\n#0 /tmp/tmpih4oh6xl.php(35): is_multiply_prime(5)\n\
    #1 /tmp/tmpih4oh6xl.php(39): candidate(5)\n#2 /tmp/tmpih4oh6xl.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmpih4oh6xl.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t// make array of prime numbers\n\
    \t$prime_array = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\t$is_multiply_prime = false;\n\t$array_length\
    \ = count($prime_array);\n\tfor ($i = 0; $i < $array_length; $i++) {\n\t\tfor\
    \ ($j = 0; $j < $array_length; $j++) {\n\t\t\tfor ($k = 0; $k < $array_length;\
    \ $k++) {\n\t\t\t\tif ($prime_array[$i] * $prime_array[$j] * $prime_array[$k]\
    \ == $a) {\n\t\t\t\t\t$is_multiply_prime = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn $is_multiply_prime;\n}\n\necho is_multiply_prime(30);\nfunction candidate(...$args)\
    \ {\n    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(125) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    $arr = [];\n    for ($i =\
    \ 2; $i < 100; $i++) {\n        $check = 0;\n        for ($j = 2; $j < $i; $j++)\
    \ {\n            if ($i % $j == 0) {\n                $check = 1;\n          \
    \      break;\n            }\n        }\n        if ($check == 0) {\n        \
    \    $arr[] = $i;\n        }\n    }\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        for ($j = 0; $j < count($arr); $j++) {\n            for ($k = 0;\
    \ $k < count($arr); $k++) {\n                if ($arr[$i] * $arr[$j] * $arr[$k]\
    \ == $a) {\n                    return true;\n                }\n            }\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(30)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\tfor ($i = 2; $i < $a; $i++)\
    \ {\n\t\tfor ($j = 2; $j < $a; $j++) {\n\t\t\tfor ($k = 2; $k < $a; $k++) {\n\t\
    \t\t\tif (($i * $j * $k) == $a) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn false;\n}\necho is_multiply_prime(30);\necho \"<br>\";\n\
    echo is_multiply_prime(35);\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzn7a01j.php:35\n\
    Stack trace:\n#0 /tmp/tmpfzn7a01j.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfzn7a01j.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n   $res = false;\n   $res = is_prime($a);\n\
    \   if ($res == true) {\n     $res = true;\n   } elseif ((is_prime($a/2) == true)\
    \ && (is_prime($a/3) == true)) {\n     $res = true;\n   } elseif ((is_prime($a/2)\
    \ == true) && (is_prime($a/5) == true)) {\n     $res = true;\n   } elseif ((is_prime($a/3)\
    \ == true) && (is_prime($a/5) == true)) {\n     $res = true;\n   } else {\n  \
    \   $res = false;\n   }\n   return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_multiply_prime(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(5) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(30) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(125)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(105)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(126)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(729)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(891)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1001)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpyfw0k5fe.php:10\nStack trace:\n#0 /tmp/tmpyfw0k5fe.php(26): is_multiply_prime(5)\n\
    #1 /tmp/tmpyfw0k5fe.php(30): candidate(5)\n#2 /tmp/tmpyfw0k5fe.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyfw0k5fe.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a > 100) {\n       \
    \ return false;\n    }\n    $reminders = [];\n    $primes = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    for ($i = 2; $i < $a; $i++) {\n        $remin = $a % $i;\n        $reminders[]\
    \ = $remin;\n    }\n    for ($i = 0; $i < count($reminders); $i++) {\n       \
    \ if ($reminders[$i] == 0) {\n            $divisor = $i + 2;\n            if (in_array($divisor,\
    \ $primes)) {\n                $primes_divisors[] = $divisor;\n            }\n\
    \        }\n    }\n    if (count($primes_divisors) == 3) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho \"36 = \" . is_multiply_prime(36)\
    \ . \"\\n\";\necho \"30 = \" . is_multiply_prime(30) . \"\\n\";\necho \"27 = \"\
    \ . is_multiply_prime(27) . \"\\n\";\necho \"101 = \" . is_multiply_prime(101)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "36 = \n30 = 1\n27 = \n101 = \n\nWarning: count(): Parameter must be an\
    \ array or an object that implements Countable in /tmp/tmppn6fvli6.php on line\
    \ 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppn6fvli6.php:43\n\
    Stack trace:\n#0 /tmp/tmppn6fvli6.php(53): test()\n#1 {main}\n  thrown in /tmp/tmppn6fvli6.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n\t$prime = array();\n\t$value\
    \ = 2;\n\t$count = 0;\n\twhile ($count < 3) {\n\t\tfor ($i = 2; $i <= $value;\
    \ $i++) {\n\t\t\tif ($value % $i == 0) {\n\t\t\t\tif ($value == $i) {\n\t\t\t\t\
    \t$prime[] = $value;\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\
    \tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$value++;\n\t}\n\t$multiple = 1;\n\t\
    foreach ($prime as $value) {\n\t\t$multiple *= $value;\n\t}\n\tif ($multiple ==\
    \ $a) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nfunction\
    \ candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvvsowd5.php:44\n\
    Stack trace:\n#0 /tmp/tmpbvvsowd5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpbvvsowd5.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    for ($i = 3; $i < $a; $i++)\
    \ {\n        for ($j = $i + 1; $j < $a; $j++) {\n            for ($k = $j + 1;\
    \ $k < $a; $k++) {\n                if ($i * $j * $k == $a) {\n              \
    \      if (($i * $j * $k) % ($i * $j * $k) == 0) {\n                        return\
    \ true;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0k_f7phg.php:29\n\
    Stack trace:\n#0 /tmp/tmp0k_f7phg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0k_f7phg.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n    if ($a == 1) {\n        return\
    \ false;\n    }\n\n    $primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    $prime_numbers = array_values(array_filter($primes,\
    \ function($x) use ($a) {\n        return $a % $x == 0;\n    }));\n\n    return\
    \ count($prime_numbers) == 3;\n}\nfunction candidate(...$args) {\n    return is_multiply_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qva5xst.php:27\n\
    Stack trace:\n#0 /tmp/tmp3qva5xst.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3qva5xst.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns true if the given number is the\
    \ multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that\
    \ (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30\
    \ = 2 * 3 * 5\nfunction is_multiply_prime($a) {\n   $result = false;\n   $prime\
    \ = array();\n   $product = 1;\n   for ($i = 2; $i <= 100; $i++) {\n      $isPrime\
    \ = true;\n      for ($j = 2; $j < $i; $j++) {\n         if ($i % $j == 0) {\n\
    \            $isPrime = false;\n            break;\n         }\n      }\n    \
    \  if ($isPrime) {\n         array_push($prime, $i);\n      }\n   }\n   foreach\
    \ ($prime as $key1 => $item1) {\n      foreach ($prime as $key2 => $item2) {\n\
    \         foreach ($prime as $key3 => $item3) {\n            if ($item1 * $item2\
    \ * $item3 == $a) {\n               $result = true;\n               break;\n \
    \           }\n         }\n      }\n   }\n   return $result;\n}\n\necho is_multiply_prime(30);\n\
    function candidate(...$args) {\n    return is_multiply_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(30) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(125) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(105) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(126) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(729) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(891) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1001) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_13_greatest_common_divisor
language: php
results:
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $x = abs($a);\n \
    \   $y = abs($b);\n    $d = 0;\n    while ($x != 0 && $y != 0) {\n        if ($x\
    \ % 2 == 0 && $y % 2 == 0) {\n            $x /= 2;\n            $y /= 2;\n   \
    \         $d++;\n        } elseif ($x % 2 == 0) {\n            $x /= 2;\n    \
    \    } elseif ($y % 2 == 0) {\n            $y /= 2;\n        } elseif ($x >= $y)\
    \ {\n            $x -= $y;\n        } else {\n            $y -= $x;\n        }\n\
    \    }\n    return ($x + $y) * pow(2, $d);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a == 0) {\n  \
    \  return $b;\n  } else if ($b == 0) {\n    return $a;\n  } else if ($a > $b)\
    \ {\n    return greatest_common_divisor($a % $b, $b);\n  } else {\n    return\
    \ greatest_common_divisor($a, $b % $a);\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $current_gcd = 1;\n\
    \    for ($i = 2; $i <= min($a, $b); $i++) {\n        if (($a % $i == 0) && ($b\
    \ % $i == 0)) {\n            $current_gcd = $i;\n        }\n    }\n    return\
    \ $current_gcd;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $r = $a % $b;\n \
    \   if ($r == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $r);\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a == 0) return\
    \ $b;\n  if ($b == 0) return $a;\n  return greatest_common_divisor($b, $a % $b);\n\
    }\n\necho greatest_common_divisor(25, 15) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $r = $a % $b;\n \
    \   if ($r == 0) return $b;\n    else return greatest_common_divisor($b, $r);\n\
    }\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a > $b) {\n\t\t\
    $x = $a;\n\t\t$y = $b;\n\t} else {\n\t\t$x = $b;\n\t\t$y = $a;\n\t}\n\t\n\twhile\
    \ ($y > 0) {\n\t\t$r = $x % $y;\n\t\t$x = $y;\n\t\t$y = $r;\n\t}\n\t\n\treturn\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // TODO: implement\
    \ the function\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8f1cr0gz.php:16\n\
    Stack trace:\n#0 /tmp/tmp8f1cr0gz.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8f1cr0gz.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $div = 2;\n    $gcd\
    \ = 1;\n    while ($a >= $div && $b >= $div) {\n        if ($a % $div == 0 &&\
    \ $b % $div == 0) {\n            $gcd = $div;\n        }\n        $div++;\n  \
    \  }\n    return $gcd;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a % $b === 0)\
    \ {\n        return $b;\n    }\n    return greatest_common_divisor($b, $a % $b);\n\
    }\n\n$a = 3;\n$b = 5;\necho greatest_common_divisor($a, $b).\"\\n\";\n\n$a = 25;\n\
    $b = 15;\necho greatest_common_divisor($a, $b).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a % $b == 0) {\n\
    \    return $b;\n  } else {\n    return greatest_common_divisor($b, $a % $b);\n\
    \  }\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a < 0) {\n   \
    \ $a = -$a;\n  }\n  if ($b < 0) {\n    $b = -$b;\n  }\n  if ($a == 0 || $b ==\
    \ 0) {\n    return 0;\n  }\n  if ($a == $b) {\n    return $a;\n  }\n  return greatest_common_divisor($b,\
    \ $a % $b);\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimsjxqyw.php:27\n\
    Stack trace:\n#0 /tmp/tmpimsjxqyw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpimsjxqyw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0 || $b ==\
    \ 0) {\n\t\treturn abs(max($a, $b));\n\t}\n\n\treturn greatest_common_divisor(min($a,\
    \ $b), abs($a - $b));\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) return 0;\n    if ($a == $b) return $a;\n    if ($a > $b) return greatest_common_divisor($a\
    \ - $b, $b);\n    return greatest_common_divisor($a, $b - $a);\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $c = $a;\n        $a = $b;\n        $b = $c;\n    }\n    $remainder =\
    \ $a % $b;\n    if ($remainder == 0) {\n        return $b;\n    } else {\n   \
    \     return greatest_common_divisor($b, $remainder);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) {\n        return 0;\n    }\n    $a = abs($a);\n    $b = abs($b);\n  \
    \  if ($a < $b) {\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n\
    \    }\n    while ($b != 0) {\n        $tmp = $a % $b;\n        $a = $b;\n   \
    \     $b = $tmp;\n    }\n    return $a;\n}\n\nfunction candidate(...$args) {\n\
    \    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if($a == 0 || $b\
    \ == 0) {\n        return abs(max($a, $b));\n    }\n    return greatest_common_divisor(min($a,\
    \ $b), abs($a - $b));\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t$remainder = $a % $b;\n\
    \twhile ($remainder != 0) {\n\t\t$a = $b;\n\t\t$b = $remainder;\n\t\t$remainder\
    \ = $a % $b;\n\t}\n\treturn $b;\n}\n\n$test = greatest_common_divisor(25, 15);\n\
    echo \"$test\\n\";\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    $r = $a\
    \ % $b;\n    if ($r > 0) {\n        return greatest_common_divisor($b, $r);\n\
    \    } else {\n        return $b;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $r = $a % $b;\n \
    \   while ($r != 0) {\n        $a = $b;\n        $b = $r;\n        $r = $a % $b;\n\
    \    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $min = min($a, $b);\n\
    \    $max = max($a, $b);\n    $divisor = 1;\n    while ($divisor <= $min) {\n\
    \        if (($max % $divisor == 0) && ($min % $divisor == 0)) {\n           \
    \ $gcd = $divisor;\n        }\n        $divisor++;\n    }\n    return $gcd;\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t// Compare which integer\
    \ is bigger\n\tif ($a < $b) {\n\t\t// If $a is smaller than $b, then swap the\
    \ numbers\n\t\tlist($a, $b) = array($b, $a);\n\t}\n\t// Create a for loop that\
    \ iterates from 1 to $b\n\tfor ($i = 1; $i <= $b; $i++) {\n\t\t// If both numbers\
    \ can be divided by the current loop iteration, then return the current loop iteration\n\
    \t\tif ($a % $i == 0 && $b % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5s7zi9gw.php:28\n\
    Stack trace:\n#0 /tmp/tmp5s7zi9gw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5s7zi9gw.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5l38zwlx.php:15\n\
    Stack trace:\n#0 /tmp/tmp5l38zwlx.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp5l38zwlx.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a < $b) {\n  \
    \  $temp = $a;\n    $a = $b;\n    $b = $temp;\n  }\n  $r = $a % $b;\n  if ($r\
    \ === 0) {\n    return $b;\n  } else {\n    return greatest_common_divisor($b,\
    \ $r);\n  }\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $a = abs($a);\n \
    \   $b = abs($b);\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n\
    \        $b = $temp;\n    }\n    if ($b == 0) {\n        return $a;\n    }\n \
    \   $r = $a % $b;\n    while ($r > 0) {\n        $a = $b;\n        $b = $r;\n\
    \        $r = $a % $b;\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $t = $a;\n        $a = $b;\n        $b = $t;\n    }\n    while ($b !=\
    \ 0) {\n        $t = $a % $b;\n        $a = $b;\n        $b = $t;\n    }\n   \
    \ return $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a == 0 || $b ==\
    \ 0) {\n    return 0;\n  }\n  if ($a == $b) {\n    return $a;\n  }\n  if ($a >\
    \ $b) {\n    return greatest_common_divisor($a - $b, $b);\n  }\n  return greatest_common_divisor($a,\
    \ $b - $a);\n}\necho greatest_common_divisor(3, 5) . \"\\n\";\necho greatest_common_divisor(25,\
    \ 15) . \"\\n\";\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $a1 = $a;\n    $b1\
    \ = $b;\n    $r = $a1 % $b1;\n    while ($r > 0) {\n        $a1 = $b1;\n     \
    \   $b1 = $r;\n        $r = $a1 % $b1;\n    }\n    return $b1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $a = abs($a);\n \
    \   $b = abs($b);\n    if ($a > $b) {\n        $tmp = $a;\n        $a = $b;\n\
    \        $b = $tmp;\n    }\n    if ($a === 0) {\n        return $b;\n    }\n \
    \   if ($b === 0) {\n        return $a;\n    }\n    $remainder = 1;\n    do {\n\
    \        $remainder = $b % $a;\n        $b = $a;\n        $a = $remainder;\n \
    \   } while ($remainder !== 0);\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $i = min($a, $b);\n\
    \    while ($i > 0) {\n        if ($a % $i == 0 && $b % $i == 0) {\n         \
    \   return $i;\n        }\n        $i--;\n    }\n}\n\n$a = 25;\n$b = 15;\nprint_r(greatest_common_divisor($a,\
    \ $b));\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '5'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a === 0 || $b\
    \ === 0) {\n        return 1;\n    }\n    return gcd($a, $b);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function gcd() in /tmp/tmp2mn_9ol9.php:11\n\
    Stack trace:\n#0 /tmp/tmp2mn_9ol9.php(15): greatest_common_divisor(3, 7)\n#1 /tmp/tmp2mn_9ol9.php(19):\
    \ candidate(3, 7)\n#2 /tmp/tmp2mn_9ol9.php(25): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp2mn_9ol9.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) {\n\
    \        return $b;\n    }\n    return greatest_common_divisor($b % $a, $a);\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return ($a % $b)\
    \ ? greatest_common_divisor($b, $a % $b) : $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a === 0) {\n\
    \        return $b;\n    }\n    if ($b === 0) {\n        return $a;\n    }\n \
    \   if ($a > $b) {\n        return greatest_common_divisor($a % $b, $b);\n   \
    \ } else {\n        return greatest_common_divisor($a, $b % $a);\n    }\n}\n\n\
    function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // return gcd($a,\
    \ $b);\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b\
    \ = $temp;\n    }\n    while ($b != 0) {\n        $temp = $a % $b;\n        $a\
    \ = $b;\n        $b = $temp;\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $arr_a = array();\n\
    \    $arr_b = array();\n    for ($i = 1; $i <= $a; $i++) {\n        if ($a % $i\
    \ == 0) {\n            $arr_a[] = $i;\n        }\n    }\n    for ($i = 1; $i <=\
    \ $b; $i++) {\n        if ($b % $i == 0) {\n            $arr_b[] = $i;\n     \
    \   }\n    }\n    $gcd = array_intersect($arr_a, $arr_b);\n    rsort($gcd);\n\
    \    return $gcd[0];\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b == 0 ?\
    \ $a : greatest_common_divisor($b, $a % $b);\n}\n\necho greatest_common_divisor(25,\
    \ 15);\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '5'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a % $b == 0)\
    \ {\n        return $b;\n    } elseif ($b % $a == 0) {\n        return $a;\n \
    \   } else {\n        $bigger = max($a, $b);\n        $smaller = min($a, $b);\n\
    \        return greatest_common_divisor($bigger - $smaller, $smaller);\n    }\n\
    }\n\necho greatest_common_divisor(3, 5), PHP_EOL;\necho greatest_common_divisor(25,\
    \ 15), PHP_EOL;\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < $b) {\n\t\t\
    $temp = $a;\n\t\t$a = $b;\n\t\t$b = $temp;\n\t}\n\tif ($b == 0) {\n\t\treturn\
    \ $a;\n\t}\n\t$n = $a % $b;\n\treturn greatest_common_divisor($b, $n);\n}\n\n\
    function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b ? greatest_common_divisor($b,\
    \ $a % $b) : $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a % $b == 0) {\n\
    \t\treturn $b;\n\t} else {\n\t\treturn greatest_common_divisor($b, $a % $b);\n\
    \t}\n}\n\necho greatest_common_divisor(25, 15) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    if ($a\
    \ % $b == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $a % $b);\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $max = max($a, $b);\n\
    \    $min = min($a, $b);\n    $res = 1;\n    for ($i = 2; $i <= $min; $i++) {\n\
    \        if ($max % $i == 0 && $min % $i == 0) {\n            $res = $i;\n   \
    \     }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 15) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49,\
    \ 14) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(144,\
    \ 60) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $result = 0;\n  \
    \  if ($a == 0) {\n        $result = $b;\n    } else if ($b == 0) {\n        $result\
    \ = $a;\n    } else {\n        if ($a > $b) {\n            $result = greatest_common_divisor($a\
    \ % $b, $b);\n        } else {\n            $result = greatest_common_divisor($a,\
    \ $b % $a);\n        }\n    }\n    return $result;\n}\n\n$a = 25;\n$b = 15;\n\
    echo greatest_common_divisor($a, $b);\nfunction candidate(...$args) {\n    return\
    \ greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 15) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49,\
    \ 14) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(144,\
    \ 60) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '5'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) return\
    \ $b;\n    return greatest_common_divisor($b % $a, $a);\n}\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a == 0 || $b ==\
    \ 0) {\n    return $a + $b;\n  }\n  $big = max($a, $b);\n  $small = min($a, $b);\n\
    \  return greatest_common_divisor($small, $big % $small);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if($a === 0) return\
    \ $b;\n  if($b === 0) return $a;\n  if($a === $b) return $a;\n  if($a > $b) return\
    \ greatest_common_divisor($a-$b, $b);\n  if($a < $b) return greatest_common_divisor($a,\
    \ $b-$a);\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if($a == 0 || $b\
    \ == 0) {\n        return max($a, $b);\n    }\n    return greatest_common_divisor(min($a,\
    \ $b), max($a, $b) % min($a, $b));\n}\n\necho greatest_common_divisor(3, 5) .\
    \ PHP_EOL;\necho greatest_common_divisor(25, 15) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < $b) {\n\t\t\
    return greatest_common_divisor($b, $a);\n\t}\n\n\tif ($b == 0) {\n\t\treturn $a;\n\
    \t}\n\n\t$r = $a % $b;\n\treturn greatest_common_divisor($b, $r);\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  // Return a greater\
    \ integer if $a is less than $b, or vice versa\n  $greater = ($a > $b) ? $a :\
    \ $b;\n  $lesser = ($a < $b) ? $a : $b;\n\n  // Check if $greater is divisible\
    \ by $lesser,\n  // and iterate through until the answer is reached\n  $remainder\
    \ = $greater % $lesser;\n  while ($remainder != 0) {\n    $greater = $lesser;\n\
    \    $lesser = $remainder;\n    $remainder = $greater % $lesser;\n  }\n\n  return\
    \ $lesser;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $c = $a;\n        $a = $b;\n        $b = $c;\n    }\n    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $r);\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return ($a % $b)\
    \ ? greatest_common_divisor($b, $a % $b) : $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $x = max($a, $b);\n\
    \    $y = min($a, $b);\n    $a = $x;\n    $b = $y;\n    while ($y != 0) {\n  \
    \      $r = $a % $b;\n        $a = $b;\n        $b = $r;\n    }\n    return $a;\n\
    }\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmprtw937e4.php:13\n\
    Stack trace:\n#0 /tmp/tmprtw937e4.php(20): greatest_common_divisor(1, 0)\n#1 /tmp/tmprtw937e4.php(24):\
    \ candidate(3, 7)\n#2 /tmp/tmprtw937e4.php(30): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmprtw937e4.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < $b) {\n\t\t\
    $temp = $a;\n\t\t$a = $b;\n\t\t$b = $temp;\n\t}\n\tif ($b == 0) {\n\t\treturn\
    \ $a;\n\t}\n\telse {\n\t\treturn greatest_common_divisor($b, $a % $b);\n\t}\n\
    }\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) {\n        return 0;\n    }\n\n    if ($a == $b) {\n        return $a;\n\
    \    }\n\n    $max = max($a, $b);\n    $min = min($a, $b);\n\n    $r = $max %\
    \ $min;\n    if ($r == 0) {\n        return $min;\n    } else {\n        return\
    \ greatest_common_divisor($min, $r);\n    }\n}\n\n$a = rand(1, 100);\n$b = rand(1,\
    \ 100);\n$gcd = greatest_common_divisor($a, $b);\n\necho \"Greatest common divisor\
    \ of $a and $b is $gcd\\n\";\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Greatest common divisor of 6 and 61 is 1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0 || $b ==\
    \ 0) {\n\t\treturn 0;\n\t}\n\t\n\twhile ($a != $b) {\n\t\tif ($a > $b) {\n\t\t\
    \t$a = $a - $b;\n\t\t} else {\n\t\t\t$b = $b - $a;\n\t\t}\n\t}\n\t\n\treturn $a;\n\
    }\n\necho greatest_common_divisor(3, 5).\"\\n\";\necho greatest_common_divisor(25,\
    \ 15).\"\\n\";\necho greatest_common_divisor(100, 0).\"\\n\";\necho greatest_common_divisor(0,\
    \ 100).\"\\n\";\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n5\n0\n0\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) {\n        return 0;\n    }\n    if ($a == $b) {\n        return $a;\n\
    \    }\n    return greatest_common_divisor($b, $a % $b);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_al_d0w.php:22\n\
    Stack trace:\n#0 /tmp/tmpz_al_d0w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpz_al_d0w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $gcd = 0;\n    $min\
    \ = min($a, $b);\n    for ($i = 1; $i <= $min; $i++) {\n        if ($a % $i ==\
    \ 0 && $b % $i == 0) {\n            $gcd = $i;\n        }\n    }\n    return $gcd;\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return 0;\n}\n\n\
    function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2lqtyhe.php:16\n\
    Stack trace:\n#0 /tmp/tmpa2lqtyhe.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpa2lqtyhe.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 && $b\
    \ == 0) return 0;\n    elseif ($a == 0) return $b;\n    elseif ($b == 0) return\
    \ $a;\n    elseif ($a < $b) return greatest_common_divisor($b, $a);\n    else\
    \ return greatest_common_divisor($b, $a % $b);\n}\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $gcd = 0;\n    for\
    \ ($i = 1; $i <= min($a, $b); $i++) {\n        if ($a % $i == 0 && $b % $i ==\
    \ 0) {\n            $gcd = $i;\n        }\n    }\n    return $gcd;\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if($a == 0){\n  \
    \      return $b;\n    }\n    return greatest_common_divisor($b % $a, $a);\n}\n\
    \nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) {\n        return 0;\n    }\n\n    $n = min($a, $b);\n    $d = max($a,\
    \ $b);\n    $r = $d % $n;\n\n    if ($r == 0) {\n        return $n;\n    } else\
    \ {\n        return greatest_common_divisor($n, $r);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a == 0 || $b ==\
    \ 0) {\n    return 0;\n  }\n  $a = abs($a);\n  $b = abs($b);\n  if ($a < $b) {\n\
    \    list($b, $a) = array($a, $b);\n  }\n  if ($a % $b == 0) {\n    return $b;\n\
    \  }\n  return greatest_common_divisor($b, $a % $b);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t// TODO: Write a recursive\
    \ solution\n\t// and return the result\n\tif ($a==0) return $b;\n\tif ($b==0)\
    \ return $a;\n\tif ($a==$b) return $a;\n\tif ($a<$b) return greatest_common_divisor($a,\
    \ $b-$a);\n\tif ($a>$b) return greatest_common_divisor($a-$b, $b);\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a % $b == 0)\
    \ {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $a % $b);\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // your code here\n\
    }\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rkkmdqg.php:15\n\
    Stack trace:\n#0 /tmp/tmp6rkkmdqg.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6rkkmdqg.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a > $b) {\n\
    \        $greater = $a;\n        $smaller = $b;\n    } else {\n        $greater\
    \ = $b;\n        $smaller = $a;\n    }\n    $divisor = $greater;\n    while ($greater\
    \ % $divisor !== 0 || $smaller % $divisor !== 0) {\n        $divisor--;\n    }\n\
    \    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0) {\n\t\t\
    return $b;\n\t}\n\tif ($b == 0) {\n\t\treturn $a;\n\t}\n\tif ($a >= $b) {\n\t\t\
    return greatest_common_divisor($a % $b, $b);\n\t} else {\n\t\treturn greatest_common_divisor($a,\
    \ $b % $a);\n\t}\n}\n\n$a = 25;\n$b = 15;\n$gcd = greatest_common_divisor($a,\
    \ $b);\necho \"Greatest common divisor of $a and $b is $gcd.\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Greatest common divisor of 25 and 15 is 5.\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < 0) {\n \
    \       $a = -$a;\n    }\n    if ($b < 0) {\n        $b = -$b;\n    }\n    $n\
    \ = min($a, $b);\n    for ($i = $n; $i > 0; $i--) {\n        if ($a % $i == 0\
    \ && $b % $i == 0) {\n            return $i;\n        }\n    }\n    return 1;\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t$c = $a % $b;\n\tif($c\
    \ == 0) {\n\t\treturn $b;\n\t}\n\treturn greatest_common_divisor($b, $c);\n}\n\
    \nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  while ($b > 0) {\n\
    \    $temp = $b;\n    $b = $a % $b;\n    $a = $temp;\n  }\n  return $a;\n}\n\n\
    function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // Copy-paste your\
    \ implementation from the previous task\n}\n\nfunction candidate(...$args) {\n\
    \    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41ly_fyp.php:16\n\
    Stack trace:\n#0 /tmp/tmp41ly_fyp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp41ly_fyp.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $a = abs($a);\n \
    \   $b = abs($b);\n    while ($b) {\n        $remainder = $a % $b;\n        $a\
    \ = $b;\n        $b = $remainder;\n    }\n    return $a;\n}\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b ? greatest_common_divisor($b,\
    \ $a % $b) : $a;\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return ($a % $b)\
    \ ? greatest_common_divisor($b, $a % $b) : $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b ? greatest_common_divisor($b,\
    \ $a % $b) : $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) {\n\
    \        return $b;\n    } else if ($b == 0) {\n        return $a;\n    } else\
    \ if ($a > $b) {\n        return greatest_common_divisor($a % $b, $b);\n    }\
    \ else {\n        return greatest_common_divisor($a, $b % $a);\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        // swap\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    while ($b > 0) {\n        $r = $a % $b;\n        $a = $b;\n      \
    \  $b = $r;\n    }\n    return $a;\n}\n\nfunction candidate(...$args) {\n    return\
    \ greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 15) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49,\
    \ 14) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(144,\
    \ 60) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0) {\n\t\t\
    return $b;\n\t}\n\tif ($b == 0) {\n\t\treturn $a;\n\t}\n\treturn greatest_common_divisor($b,\
    \ $a % $b);\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) {\n\
    \        return $b;\n    }\n    if ($b == 0) {\n        return $a;\n    }\n  \
    \  if ($a > $b) {\n        return greatest_common_divisor($a % $b, $b);\n    }\
    \ else {\n        return greatest_common_divisor($a, $b % $a);\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $min = min($a, $b);\n\
    \    $max = max($a, $b);\n    $remainder = $max % $min;\n    if ($remainder ==\
    \ 0) {\n        return $min;\n    } else {\n        return greatest_common_divisor($min,\
    \ $remainder);\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a > $b) {\n\
    \        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    while ($a\
    \ != 0) {\n        $tmp = $a;\n        $a = $b % $a;\n        $b = $tmp;\n   \
    \ }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t$remainder = $a % $b;\n\
    \tif ($remainder != 0) {\n\t\treturn greatest_common_divisor($b, $remainder);\n\
    \t} else {\n\t\treturn $b;\n\t}\n}\n\necho greatest_common_divisor(3, 5) . \"\\\
    n\";\necho greatest_common_divisor(25, 15) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b == 0 ?\
    \ $a : greatest_common_divisor($b, $a % $b);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a === 0 || $b\
    \ === 0) {\n\t\treturn 1;\n\t}\n\t$a = abs($a);\n\t$b = abs($b);\n\twhile ($a\
    \ !== $b) {\n\t\tif ($a > $b) {\n\t\t\t$a = $a - $b;\n\t\t} else {\n\t\t\t$b =\
    \ $b - $a;\n\t\t}\n\t}\n\treturn $a;\n}\n\nfunction candidate(...$args) {\n  \
    \  return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a == 0 || $b ==\
    \ 0) {\n    return 0;\n  }\n  if ($a > $b) {\n    $a = $a % $b;\n  } else {\n\
    \    $b = $b % $a;\n  }\n  return greatest_common_divisor($a, $b);\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo85gznmp.php:24\n\
    Stack trace:\n#0 /tmp/tmpo85gznmp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo85gznmp.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $gcd = 1;\n    for\
    \ ($i = 1; $i <= $a && $i <= $b; $i++) {\n        if ($a % $i == 0 && $b % $i\
    \ == 0) {\n            $gcd = $i;\n        }\n    }\n    return $gcd;\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // Euclidean algorithm\
    \ (recursive)\n    if ($b == 0) {\n        return $a;\n    }\n    return greatest_common_divisor($b,\
    \ $a % $b);\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if($a == 0 || $b\
    \ == 0) {\n        return 0;\n    }\n    $r = $a % $b;\n    if($r == 0) {\n  \
    \      return $b;\n    }\n    return greatest_common_divisor($b, $r);\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) {\n        return 0;\n    }\n    while ($a != $b) {\n        if ($a >\
    \ $b) {\n            $a = $a - $b;\n        } else {\n            $b = $b - $a;\n\
    \        }\n    }\n    return $a;\n}\nfunction candidate(...$args) {\n    return\
    \ greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 15) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49,\
    \ 14) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(144,\
    \ 60) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) {\n        return 0;\n    }\n    $a = abs($a);\n    $b = abs($b);\n  \
    \  while ($a && $b) {\n        if ($a >= $b) {\n            $a %= $b;\n      \
    \  } else {\n            $b %= $a;\n        }\n    }\n    return $a + $b;\n}\n\
    \nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < 0 || $b <\
    \ 0) {\n\t\tthrow new InvalidArgumentException('Arguments must be positive integers');\n\
    \t}\n\tif ($a == 0 || $b == 0) {\n\t\treturn max($a, $b);\n\t}\n\t\n\t$min = min($a,\
    \ $b);\n\t$max = max($a, $b);\n\t\n\twhile ($min > 0) {\n\t\t$remainder = $max\
    \ % $min;\n\t\tif ($remainder === 0) {\n\t\t\treturn $min;\n\t\t}\n\t\t$max =\
    \ $min;\n\t\t$min = $remainder;\n\t}\n}\n\nfunction candidate(...$args) {\n  \
    \  return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a % $b == 0) {\n\
    \t\treturn $b;\n\t}\n\treturn greatest_common_divisor($b, $a % $b);\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $a = abs($a);\n \
    \   $b = abs($b);\n    if ($a < $b) {\n        list($b, $a) = array($a, $b);\n\
    \    }\n    if ($b == 0) {\n        return $a;\n    }\n    $r = $a % $b;\n   \
    \ while ($r > 0) {\n        $a = $b;\n        $b = $r;\n        $r = $a % $b;\n\
    \    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) {\n\
    \        return $b;\n    } else if ($b == 0) {\n        return $a;\n    } else\
    \ if ($a > $b) {\n        return greatest_common_divisor($a - $b, $b);\n    }\
    \ else {\n        return greatest_common_divisor($a, $b - $a);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t$min = min($a, $b);\n\
    \t$max = max($a, $b);\n\tfor ($i = $min; $i > 0; $i--) {\n\t\tif ($min % $i ==\
    \ 0 && $max % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  // Error Handling\n\
    \  if (!is_int($a) || !is_int($b)) {\n    trigger_error(\"Arguments must be integers\"\
    , E_USER_ERROR);\n  }\n  if ($a < 0 || $b < 0) {\n    trigger_error(\"Arguments\
    \ must be greater than zero\", E_USER_ERROR);\n  }\n  // Find the max and min\
    \ value\n  $min = min($a, $b);\n  $max = max($a, $b);\n  // Euclidean algorithm\n\
    \  while ($max % $min != 0) {\n    $remainder = $max % $min;\n    $max = $min;\n\
    \    $min = $remainder;\n  }\n  return $min;\n}\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  $a = intval($a);\n\
    \  $b = intval($b);\n  if ($a > $b) {\n    $a = $a + $b;\n    $b = $a - $b;\n\
    \    $a = $a - $b;\n  }\n  if ($a == 0) {\n    return $b;\n  }\n  return greatest_common_divisor($b\
    \ % $a, $a);\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $bigger = $a > $b\
    \ ? $a : $b;\n    $smaller = $a > $b ? $b : $a;\n    if ($bigger % $smaller ==\
    \ 0) {\n        return $smaller;\n    } else {\n        return greatest_common_divisor($smaller,\
    \ $bigger % $smaller);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 15) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49,\
    \ 14) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(144,\
    \ 60) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    while ($b)\
    \ {\n        $r = $a % $b;\n        $a = $b;\n        $b = $r;\n    }\n    return\
    \ $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $a = abs($a);\n \
    \   $b = abs($b);\n    if ($a == 0) return $b;\n    if ($b == 0) return $a;\n\
    \    $r = $a % $b;\n    return greatest_common_divisor($b, $r);\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // TODO\n}\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_jb9nku.php:15\n\
    Stack trace:\n#0 /tmp/tmp8_jb9nku.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8_jb9nku.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $x = max($a, $b);\n\
    \    $y = min($a, $b);\n    while($x % $y != 0) {\n        $d = $x % $y;\n   \
    \     $x = $y;\n        $y = $d;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a > $b) {\n\
    \        $smaller = $b;\n    } else {\n        $smaller = $a;\n    }\n    for\
    \ ($i = $smaller; $i > 0; $i--) {\n        if ($a % $i == 0 && $b % $i == 0) {\n\
    \            return $i;\n        }\n    }\n}\n\n$inputs = [\n    [3, 5],\n   \
    \ [25, 15],\n];\nforeach ($inputs as $input) {\n    list($a, $b) = $input;\n \
    \   echo \"gcd({$a}, {$b}) = \" . greatest_common_divisor($a, $b) . \"\\n\";\n\
    }\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "gcd(3, 5) = 1\ngcd(25, 15) = 5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  // TODO\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd6njv2d.php:16\n\
    Stack trace:\n#0 /tmp/tmpwd6njv2d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwd6njv2d.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a % $b == 0)\
    \ {\n        return $b;\n    }\n    return greatest_common_divisor($b, $a % $b);\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\treturn $b ? greatest_common_divisor($b,\
    \ $a % $b) : $a;\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b ? greatest_common_divisor($b,\
    \ $a % $b) : $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a === 0) {\n\
    \        return $b;\n    }\n    return greatest_common_divisor($b % $a, $a);\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return ($a % $b)\
    \ ? greatest_common_divisor($b, $a % $b) : $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0) {\n\t\t\
    return $b;\n\t} else if ($b == 0) {\n\t\treturn $a;\n\t} else if ($a > $b) {\n\
    \t\treturn greatest_common_divisor($a - $b, $b);\n\t} else {\n\t\treturn greatest_common_divisor($a,\
    \ $b - $a);\n\t}\n}\n\necho greatest_common_divisor(3, 5);\necho \"\\n\";\necho\
    \ greatest_common_divisor(25, 15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $gcd = 1;\n    for\
    \ ($i = 2; $i <= $a && $i <= $b; $i++) {\n        if ($a % $i == 0 && $b % $i\
    \ == 0) {\n            $gcd = $i;\n        }\n    }\n    return $gcd;\n}\n\necho\
    \ greatest_common_divisor(3, 5);\necho \"<br>\";\necho greatest_common_divisor(25,\
    \ 15);\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>5
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $i = 1;\n    $tmp\
    \ = 0;\n    if ($a > $b) {\n        $tmp = $a;\n        $a = $b;\n        $b =\
    \ $tmp;\n    }\n    $tmp = 0;\n    while ($i <= $a) {\n        if (($a % $i ==\
    \ 0) && ($b % $i == 0)) {\n            $tmp = $i;\n        }\n        $i++;\n\
    \    }\n    return $tmp;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\treturn ($a == 0 ? $b\
    \ : greatest_common_divisor($b % $a, $a));\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) {\n\
    \        return $b;\n    }\n    if ($b == 0) {\n        return $a;\n    }\n  \
    \  if ($a > $b) {\n        return greatest_common_divisor($a % $b, $b);\n    }\
    \ else {\n        return greatest_common_divisor($a, $b % $a);\n    }\n}\n\necho\
    \ greatest_common_divisor(3, 5);\necho PHP_EOL;\necho greatest_common_divisor(25,\
    \ 15);\necho PHP_EOL;\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if (is_int($a) &&\
    \ is_int($b)) {\n        if ($a === 0) {\n            return $b;\n        } elseif\
    \ ($b === 0) {\n            return $a;\n        } else {\n            return greatest_common_divisor($b,\
    \ $a % $b);\n        }\n    } else {\n        throw new Exception('Input is not\
    \ an integer!');\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif($a==0){\n\t\treturn\
    \ $b;\n\t}\n\treturn greatest_common_divisor($b%$a, $a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example: print \"Hello world!\";\n    $gcd = 1;\n    $i = 1;\n    while($i\
    \ <= $a && $i <= $b) {\n        if ($a % $i == 0 && $b % $i == 0) {\n        \
    \    $gcd = $i;\n        }\n        $i++;\n    }\n    print $gcd;\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2xxqrme.php:27\n\
    Stack trace:\n#0 /tmp/tmpw2xxqrme.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw2xxqrme.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // TODO: Implement\
    \ me\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0t5zck6m.php:16\n\
    Stack trace:\n#0 /tmp/tmp0t5zck6m.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp0t5zck6m.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $a = abs($a);\n \
    \   $b = abs($b);\n    while ($b) {\n        $rem = $a % $b;\n        $a = $b;\n\
    \        $b = $rem;\n    }\n    return $a;\n}\nfunction candidate(...$args) {\n\
    \    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $a = abs($a);\n \
    \   $b = abs($b);\n    if ($a < $b)\n        list($b, $a) = array($a, $b);\n \
    \   if ($b == 0)\n        return $a;\n    $r = $a % $b;\n    while ($r > 0) {\n\
    \        $a = $b;\n        $b = $r;\n        $r = $a % $b;\n    }\n    return\
    \ $b;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0 || $b ==\
    \ 0) {\n\t\treturn abs(max($a, $b));\n\t}\n\n\twhile ($a != $b) {\n\t\tif ($a\
    \ > $b) {\n\t\t\t$a = $a - $b;\n\t\t} else {\n\t\t\t$b = $b - $a;\n\t\t}\n\t}\n\
    \n\treturn $a;\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b ? greatest_common_divisor($b,\
    \ $a % $b) : $a;\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t$gcd = 1;\n\tfor ($i\
    \ = 2; $i <= min($a, $b); $i++) {\n\t\tif ($a % $i == 0 && $b % $i == 0) {\n\t\
    \t\t$gcd = $i;\n\t\t}\n\t}\n\treturn $gcd;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $x = $a;\n        $a = $b;\n        $b = $x;\n    }\n    if ($a == $b)\
    \ {\n        return $a;\n    } else {\n        return greatest_common_divisor($b,\
    \ $a - $b);\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < $b) {\n\t\t\
    $min = $a;\n\t\t$max = $b;\n\t} else {\n\t\t$min = $b;\n\t\t$max = $a;\n\t}\n\t\
    $result = 1;\n\tfor ($i = 2; $i <= $min; $i++) {\n\t\tif ($min % $i == 0 && $max\
    \ % $i == 0) {\n\t\t\t$result = $i;\n\t\t}\n\t}\n\treturn $result;\n}\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a < $b) {\n  \
    \  $temp = $a;\n    $a = $b;\n    $b = $temp;\n  }\n  if ($b == 0) {\n    return\
    \ $a;\n  }\n  return greatest_common_divisor($b, $a % $b);\n}\necho greatest_common_divisor(3,\
    \ 5) . \"\\n\";\necho greatest_common_divisor(25, 15) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) {\n        return abs(max($a, $b));\n    }\n\n    return greatest_common_divisor(min($a,\
    \ $b), abs($a - $b));\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $remainder = 0;\n\
    \    while ($b > 0) {\n        $remainder = $a % $b;\n        $a = $b;\n     \
    \   $b = $remainder;\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < $b) {\n\t\t\
    $temp = $a;\n\t\t$a = $b;\n\t\t$b = $temp;\n\t}\n\twhile ($b > 0) {\n\t\t$temp\
    \ = $a % $b;\n\t\t$a = $b;\n\t\t$b = $temp;\n\t}\n\treturn $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < 0 || $b\
    \ < 0) {\n        throw new Exception(\"Function greatest_common_divisor should\
    \ be called with positive integers.\");\n    }\n    $r = $a % $b;\n    while ($r\
    \ != 0) {\n        $a = $b;\n        $b = $r;\n        $r = $a % $b;\n    }\n\
    \    return $b;\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a < $b) {\n  \
    \  $tmp = $a;\n    $a = $b;\n    $b = $tmp;\n  }\n  $remainder = $a % $b;\n  if\
    \ ($remainder == 0) {\n    return $b;\n  } else {\n    return greatest_common_divisor($b,\
    \ $remainder);\n  }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $max = $a > $b ?\
    \ $a : $b;\n    $min = $a < $b ? $a : $b;\n    if ($max % $min) {\n        $divisor\
    \ = $min;\n        while ($max % $divisor || $min % $divisor) {\n            $divisor--;\n\
    \        }\n    } else {\n        $divisor = $min;\n    }\n    return $divisor;\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0 || $b\
    \ == 0) {\n        return 0;\n    }\n\n    if ($a == $b) {\n        return $a;\n\
    \    }\n\n    if ($a > $b) {\n        return greatest_common_divisor($a - $b,\
    \ $b);\n    } else {\n        return greatest_common_divisor($a, $b - $a);\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $r = $a % $b;\n \
    \   while ($r != 0) {\n        $a = $b;\n        $b = $r;\n        $r = $a % $b;\n\
    \    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) return\
    \ $b;\n    if ($b == 0) return $a;\n    return greatest_common_divisor($b, $a\
    \ % $b);\n}\n\necho greatest_common_divisor(3, 5) . PHP_EOL;\necho greatest_common_divisor(25,\
    \ 15) . PHP_EOL;\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  // Your code here\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzuocbqs.php:16\n\
    Stack trace:\n#0 /tmp/tmpfzuocbqs.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpfzuocbqs.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0) {\n\t\t\
    return $b;\n\t} elseif ($b == 0) {\n\t\treturn $a;\n\t} else {\n\t\treturn greatest_common_divisor($b,\
    \ $a % $b);\n\t}\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  // write your code\
    \ here\n  // and return the GCD of two integers\n  $gcd = 0;\n  for ($i = 1; $i\
    \ <= $a && $i <= $b; $i++) {\n    if ($a % $i == 0 && $b % $i == 0) {\n      $gcd\
    \ = $i;\n    }\n  }\n  return $gcd;\n}\nfunction candidate(...$args) {\n    return\
    \ greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3,\
    \ 7) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10,\
    \ 15) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(49,\
    \ 14) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(144,\
    \ 60) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t// >>> greatest_common_divisor(48,\
    \ 18)\n\t// 6\n\t// >>> greatest_common_divisor(48, 180)\n\t// 12\n\t// >>> greatest_common_divisor(48,\
    \ 36)\n\t// 12\n\t// >>> greatest_common_divisor(18, 48)\n\t// 6\n\t// >>> greatest_common_divisor(180,\
    \ 48)\n\t// 12\n\t// >>> greatest_common_divisor(36, 48)\n\t// 12\n\t// >>> greatest_common_divisor(5,\
    \ 0)\n\t// 5\n\t// >>> greatest_common_divisor(0, 5)\n\t// 5\n\t// >>> greatest_common_divisor(0,\
    \ 0)\n\t// 0\n\t// >>> greatest_common_divisor(1, 0)\n\t// 1\n\t// >>> greatest_common_divisor(0,\
    \ 1)\n\t// 1\n\t// >>> greatest_common_divisor(1, 1)\n\t// 1\n\t// >>> greatest_common_divisor(10,\
    \ 5)\n\t// 5\n\t// >>> greatest_common_divisor(5, 10)\n\t// 5\n\t// >>> greatest_common_divisor(3,\
    \ 5)\n\t// 1\n\t// >>> greatest_common_divisor(5, 3)\n\t// 1\n\t// >>> greatest_common_divisor(24,\
    \ 18)\n\t// 6\n\t// >>> greatest_common_divisor(18, 24)\n\t// 6\n\t// >>> greatest_common_divisor(49,\
    \ 14)\n\t// 7\n\t// >>> greatest_common_divisor(14, 49)\n\t// 7\n\t// >>> greatest_common_divisor(27,\
    \ 13)\n\t// 1\n\t// >>> greatest_common_divisor(13, 27)\n\t// 1\n\t// >>> greatest_common_divisor(21,\
    \ 14)\n\t// 7\n\t// >>> greatest_common_divisor(14, 21)\n\t// 7\n\t// >>> greatest_common_divisor(35,\
    \ 14)\n\t// 7\n\t// >>> greatest_common_divisor(\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn7jit72l.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a > $b) {\n\
    \        $bigger = $a;\n        $smaller = $b;\n    } else {\n        $bigger\
    \ = $b;\n        $smaller = $a;\n    }\n    $remainder = $bigger % $smaller;\n\
    \    if ($remainder === 0) {\n        return $smaller;\n    } else {\n       \
    \ return greatest_common_divisor($smaller, $remainder);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a > $b) {\n\
    \        $a = $a + $b;\n        $b = $a - $b;\n        $a = $a - $b;\n    }\n\
    \    if ($a === 0) {\n        return $b;\n    }\n    return greatest_common_divisor($b\
    \ % $a, $a);\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // YOUR CODE GOES\
    \ HERE\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz23hruzv.php:16\n\
    Stack trace:\n#0 /tmp/tmpz23hruzv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpz23hruzv.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a < $b) {\n  \
    \  // swap $a and $b\n    $t = $a;\n    $a = $b;\n    $b = $t;\n  }\n  while ($b\
    \ != 0) {\n    $t = $a % $b;\n    $a = $b;\n    $b = $t;\n  }\n  return $a;\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $c = $a % $b;\n \
    \   return $c == 0 ? $b : greatest_common_divisor($b, $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example: print \"Hello world!\";\n    $r = $a % $b;\n    if ($r != 0) {\n\
    \        return greatest_common_divisor($b, $r);\n    } else {\n        return\
    \ $b;\n    }\n}\n\n$fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n$stdin =\
    \ fopen(\"php://stdin\", \"r\");\n\nfscanf($stdin, \"%d\\n\", $a);\n\nfscanf($stdin,\
    \ \"%d\\n\", $b);\n\n$result = greatest_common_divisor($a, $b);\n\nfwrite($fptr,\
    \ $result . \"\\n\");\n\nfclose($stdin);\nfclose($fptr);\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: fopen(): Filename cannot be empty in /tmp/tmp933y3jce.php on\
    \ line 19\n\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmp933y3jce.php:11\n\
    Stack trace:\n#0 /tmp/tmp933y3jce.php(27): greatest_common_divisor(NULL, NULL)\n\
    #1 {main}\n  thrown in /tmp/tmp933y3jce.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  while ($b != 0) {\n\
    \    $remainder = $a % $b;\n    $a = $b;\n    $b = $remainder;\n  }\n  return\
    \ $a;\n}\n\necho greatest_common_divisor(3, 5) . \"\\n\";\necho greatest_common_divisor(25,\
    \ 15) . \"\\n\";\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a % $b == 0)\
    \ return $b;\n    else return greatest_common_divisor($b, $a % $b);\n}\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t// make sure a is greater\
    \ than b\n\tif ($a < $b) {\n\t\t$a ^= $b;\n\t\t$b ^= $a;\n\t\t$a ^= $b;\n\t}\n\
    \tif ($b == 0) {\n\t\treturn $a;\n\t}\n\treturn greatest_common_divisor($b, $a\
    \ % $b);\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a < $b) {\n  \
    \  $tmp = $a;\n    $a = $b;\n    $b = $tmp;\n  }\n  while ($b != 0) {\n    $tmp\
    \ = $a % $b;\n    $a = $b;\n    $b = $tmp;\n  }\n  return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $t = $a;\n        $a = $b;\n        $b = $t;\n    }\n    while ($b >\
    \ 0) {\n        $t = $a % $b;\n        $a = $b;\n        $b = $t;\n    }\n   \
    \ return $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t// find gcd of two\
    \ numbers\n\t// using Euclid's Algorithm\n\t// gcd(a, 0) = a\n\t// gcd(a, b) =\
    \ gcd(b, a mod b)\n\tif ($b == 0) {\n\t\treturn $a;\n\t} else {\n\t\treturn greatest_common_divisor($b,\
    \ $a % $b);\n\t}\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b == 0 ?\
    \ $a : greatest_common_divisor($b, $a % $b);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b == 0 ?\
    \ $a : greatest_common_divisor($b, $a % $b);\n}\n\necho greatest_common_divisor(3,\
    \ 5) . PHP_EOL;\necho greatest_common_divisor(25, 15) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $r = $a % $b;\n \
    \   while ($r > 0) {\n        $a = $b;\n        $b = $r;\n        $r = $a % $b;\n\
    \    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < 0) $a =\
    \ -$a;\n    if ($b < 0) $b = -$b;\n    while ($a > 0 && $b > 0) {\n        if\
    \ ($a > $b) $a %= $b;\n        else $b %= $a;\n    }\n    return $a + $b;\n}\n\
    \nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while\
    \ ($b != 0) {\n        $temp = $a % $b;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    return $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\treturn $b == 0 ? $a\
    \ : greatest_common_divisor($b, $a % $b);\n}\n\nfunction candidate(...$args) {\n\
    \    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a === 0 || $b\
    \ === 0) {\n        return abs(max($a, $b));\n    }\n    while ($a != $b) {\n\
    \        if ($a > $b) {\n            $a = $a - $b;\n        } else {\n       \
    \     $b = $b - $a;\n        }\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0 || $b ==\
    \ 0)\n\t\treturn $a + $b;\n\telse\n\t\treturn greatest_common_divisor($b, $a %\
    \ $b);\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < $b) {\n\t\t\
    $c = $a;\n\t\t$a = $b;\n\t\t$b = $c;\n\t}\n\tif ($a == 0 && $b == 0) {\n\t\treturn\
    \ 1;\n\t}\n\twhile ($b > 0) {\n\t\t$c = $a % $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\
    \t}\n\treturn $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        return greatest_common_divisor($b, $a);\n    }\n\n    $d = $a % $b;\n\
    \    if ($d == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $d);\n    }\n}\n\necho greatest_common_divisor(25, 15);\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // Your code here\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnjjif41.php:16\n\
    Stack trace:\n#0 /tmp/tmpwnjjif41.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwnjjif41.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t$c = min($a, $b);\n\
    \t$d = max($a, $b);\n\t$e = 0;\n\t$f = $d;\n\twhile ($e != $f) {\n\t\t$e = $f;\n\
    \t\t$f = $d % $c;\n\t\t$d = $c;\n\t\t$c = $f;\n\t}\n\treturn $e;\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpzljlf0ka.php:14\n\
    Stack trace:\n#0 /tmp/tmpzljlf0ka.php(22): greatest_common_divisor(3, 7)\n#1 /tmp/tmpzljlf0ka.php(26):\
    \ candidate(3, 7)\n#2 /tmp/tmpzljlf0ka.php(32): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpzljlf0ka.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\treturn $b ? greatest_common_divisor($b,\
    \ $a % $b) : $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t// TODO: Implement\
    \ this function\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzucc84d.php:16\n\
    Stack trace:\n#0 /tmp/tmpqzucc84d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpqzucc84d.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $n = max($a, $b);\n\
    \    $m = min($a, $b);\n    while ($m != 0) {\n        $tmp = $n % $m;\n     \
    \   $n = $m;\n        $m = $tmp;\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // YOUR CODE GOES\
    \ HERE\n    if ($a > $b) {\n      $r = $a % $b;\n      if ($r == 0) {\n      \
    \  return $b;\n      } else {\n        return greatest_common_divisor($b, $r);\n\
    \      }\n    } else {\n      $r = $b % $a;\n      if ($r == 0) {\n        return\
    \ $a;\n      } else {\n        return greatest_common_divisor($a, $r);\n     \
    \ }\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    return $b ? greatest_common_divisor($b,\
    \ $a % $b) : $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // Your code here\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7n8yt2sy.php:16\n\
    Stack trace:\n#0 /tmp/tmp7n8yt2sy.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7n8yt2sy.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0) return\
    \ $b;\n\tif ($b == 0) return $a;\n\t$k = $a > $b ? $a : $b;\n\t$i = $a < $b ?\
    \ $a : $b;\n\t$j = $k % $i;\n\twhile ($j != 0) {\n\t\t$k = $i;\n\t\t$i = $j;\n\
    \t\t$j = $k % $i;\n\t}\n\treturn $i;\n}\n\necho greatest_common_divisor(3, 5)\
    \ . \"\\n\";\necho greatest_common_divisor(25, 15) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $a = $a + $b;\n        $b = $a - $b;\n        $a = $a - $b;\n    }\n\
    \    while ($b != 0) {\n        $t = $b;\n        $b = $a % $b;\n        $a =\
    \ $t;\n    }\n    return $a;\n}\n\n$a = get_args($argv);\nif ($a[0] > $a[1]) {\n\
    \    $greatest_common_divisor = greatest_common_divisor($a[0], $a[1]);\n} else\
    \ {\n    $greatest_common_divisor = greatest_common_divisor($a[1], $a[0]);\n}\n\
    printf(\"%d\\n\", $greatest_common_divisor);\nfunction candidate(...$args) {\n\
    \    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_args() in\
    \ /tmp/tmp5xgarvfr.php:21\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp5xgarvfr.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < $b) {\n\t\t\
    $tmp = $a;\n\t\t$a = $b;\n\t\t$b = $tmp;\n\t}\n\twhile ($b) {\n\t\t$tmp = $a %\
    \ $b;\n\t\t$a = $b;\n\t\t$b = $tmp;\n\t}\n\treturn $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a < $b) {\n\t\t\
    $temp = $a;\n\t\t$a = $b;\n\t\t$b = $temp;\n\t}\n\twhile ($b != 0) {\n\t\t$temp\
    \ = $a % $b;\n\t\t$a = $b;\n\t\t$b = $temp;\n\t}\n\treturn $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $x = $a;\n        $a = $b;\n        $b = $x;\n    }\n    if ($a == 0\
    \ || $b == 0) return $a + $b;\n    return greatest_common_divisor($b, $a % $b);\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a == 0) {\n  \
    \  return $b;\n  }\n  return greatest_common_divisor($b % $a, $a);\n}\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  while ($b) {\n    $t\
    \ = $b;\n    $b = $a % $b;\n    $a = $t;\n  }\n  return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $x = max($a, $b);\n\
    \    $y = min($a, $b);\n    while ($y != 0) {\n        $r = $x % $y;\n       \
    \ $x = $y;\n        $y = $r;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a === 0) {\n\
    \        return $b;\n    }\n    return greatest_common_divisor($b % $a, $a);\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  $max = max($a, $b);\n\
    \  $min = min($a, $b);\n  if ($max % $min == 0) {\n    return $min;\n  } else\
    \ {\n    return greatest_common_divisor($min, $max % $min);\n  }\n}\n\nprint greatest_common_divisor(3,\
    \ 5) . \"\\n\";\nprint greatest_common_divisor(25, 15) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0 || $b ==\
    \ 0)\n\t\treturn 0;\n\t$r = $a % $b;\n\twhile ($r > 0) {\n\t\t$a = $b;\n\t\t$b\
    \ = $r;\n\t\t$r = $a % $b;\n\t}\n\treturn $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a === 0) return\
    \ $b;\n    if ($b === 0) return $a;\n    $remainder = $a % $b;\n    return greatest_common_divisor($b,\
    \ $remainder);\n}\n\necho greatest_common_divisor(3, 5) . \"\\n\";\necho greatest_common_divisor(25,\
    \ 15) . \"\\n\";\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // Your code goes\
    \ here.\n    if ($a == 0) {\n        return $b;\n    }\n    else if ($b == 0)\
    \ {\n        return $a;\n    }\n    else {\n        return greatest_common_divisor($b,\
    \ $a % $b);\n    }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) {\n\
    \        return $b;\n    }\n    if ($b == 0) {\n        return $a;\n    }\n  \
    \  if ($a >= $b) {\n        return greatest_common_divisor($a % $b, $b);\n   \
    \ } else {\n        return greatest_common_divisor($a, $b % $a);\n    }\n}\n\n\
    function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a < $b) {\n  \
    \  $a = $a + $b;\n    $b = $a - $b;\n    $a = $a - $b;\n  }\n  while ($b != 0)\
    \ {\n    $remainder = $a % $b;\n    $a = $b;\n    $b = $remainder;\n  }\n  return\
    \ $a;\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\treturn ($a % $b ==\
    \ 0) ? $b : greatest_common_divisor($b, $a % $b);\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // TODO: Implement\
    \ this\n    $divisor = 1;\n    $smaller = min($a, $b);\n    for ($i = 2; $i <=\
    \ $smaller; $i++) {\n        if ($a % $i == 0 && $b % $i == 0) {\n           \
    \ $divisor = $i;\n        }\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  $returnVal = 1;\n \
    \ $min = min($a, $b);\n  $max = max($a, $b);\n  $temp = $max;\n  while ($temp\
    \ > 1) {\n    if ($min % $temp == 0 && $max % $temp == 0) {\n      $returnVal\
    \ = $temp;\n      break;\n    }\n    $temp--;\n  }\n  return $returnVal;\n}\n\n\
    function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\t$r = $a % $b;\n\tif\
    \ ($r == 0) {\n\t\treturn $b;\n\t} else {\n\t\treturn greatest_common_divisor($b,\
    \ $r);\n\t}\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a == 0) {\n  \
    \  return $b;\n  }\n  if ($b == 0) {\n    return $a;\n  }\n  return greatest_common_divisor($b,\
    \ $a % $b);\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif ($a == 0) return\
    \ $b;\n\tif ($b == 0) return $a;\n\tif ($a >= $b) {\n\t\t$a = $a % $b;\n\t\tgreatest_common_divisor($a,\
    \ $b);\n\t} else {\n\t\t$b = $b % $a;\n\t\tgreatest_common_divisor($a, $b);\n\t\
    }\n}\n\n$first_number = 25;\n$second_number = 15;\n\necho greatest_common_divisor($first_number,\
    \ $second_number);\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8zfumo6.php:28\n\
    Stack trace:\n#0 /tmp/tmpc8zfumo6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpc8zfumo6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a == 0) {\n\
    \        return $b;\n    } else if ($b == 0) {\n        return $a;\n    }\n  \
    \  $rem = $a % $b;\n    return greatest_common_divisor($b, $rem);\n}\n\nfunction\
    \ candidate(...$args) {\n    return greatest_common_divisor(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n\tif($a == 0 || $b ==\
    \ 0) {\n\t\treturn 0;\n\t}\n\twhile($a != $b) {\n\t\tif($a > $b) {\n\t\t\t$a =\
    \ $a - $b;\n\t\t} else {\n\t\t\t$b = $b - $a;\n\t\t}\n\t}\n\treturn $a;\n}\n\n\
    echo greatest_common_divisor(25, 15) . \"\\n\";\necho greatest_common_divisor(3,\
    \ 5) . \"\\n\";\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "5\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  if ($a % $b == 0) {\n\
    \    return $b;\n  } else {\n    return greatest_common_divisor($b, $a % $b);\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a === 0 || $b\
    \ === 0) {\n        return false;\n    }\n    if ($a === $b) {\n        return\
    \ $a;\n    }\n    if ($a > $b) {\n        return greatest_common_divisor($a -\
    \ $b, $b);\n    }\n    if ($a < $b) {\n        return greatest_common_divisor($a,\
    \ $b - $a);\n    }\n}\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    $num1 = 0;\n    $num2\
    \ = 0;\n    if ($a > $b) {\n        $num1 = $a;\n        $num2 = $b;\n    } else\
    \ if ($a < $b) {\n        $num1 = $b;\n        $num2 = $a;\n    } else {\n   \
    \     return $a;\n    }\n    for ($i = $num2; $i > 0; $i--) {\n        if ($num1\
    \ % $i == 0 && $num2 % $i == 0) {\n            return $i;\n        }\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    if ($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    if ($a\
    \ % $b === 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $a % $b);\n    }\n}\n\necho greatest_common_divisor(3, 5);\necho \"\\n\";\n\
    echo greatest_common_divisor(25, 15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n  $gcd = 1;\n  for ($i\
    \ = 1; $i <= $a; $i++) {\n    if ($a % $i == 0 && $b % $i == 0) {\n      $gcd\
    \ = $i;\n    }\n  }\n  return $gcd;\n}\n\nfunction candidate(...$args) {\n   \
    \ return greatest_common_divisor(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return a greatest common divisor of two integers a and b\n//\
    \ >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25,\
    \ 15)\n// 5\nfunction greatest_common_divisor($a, $b) {\n    // Your code here\n\
    \    $m = $a;\n    $n = $b;\n    if($a == 0 || $b == 0)\n        return false;\n\
    \    while($m != $n)\n    {\n        if($m > $n)\n            $m = $m - $n;\n\
    \        else\n            $n = $n - $m;\n    }\n    return $m;\n}\nfunction candidate(...$args)\
    \ {\n    return greatest_common_divisor(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10, 15) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

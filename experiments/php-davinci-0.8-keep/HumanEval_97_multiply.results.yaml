name: HumanEval_97_multiply
language: php
results:
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // get the last digit of $a and\
    \ $b\n    $last_a = intval(substr($a, -1));\n    $last_b = intval(substr($b, -1));\n\
    \    // multiply the two numbers\n    $product = $last_a * $last_b;\n    // return\
    \ the result\n    return $product;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  //the product of the units of their\
    \ digits\n  //a product of 2*2 is 4.\n  //a product of 2*2 is 4.\n  //a product\
    \ of 1*1 is 1.\n  //return integer.\n  //use modulo to find the units of their\
    \ digits?\n  //use modulo to find the units of their digits?\n  //\n  //\n  //\n\
    \  //\n  \n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxj6sx4c.php:30\n\
    Stack trace:\n#0 /tmp/tmphxj6sx4c.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphxj6sx4c.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\necho \"<pre>\";\nvar_dump(multiply(148, 412));\nvar_dump(multiply(19, 28));\n\
    var_dump(multiply(2020, 1851));\nvar_dump(multiply(14,-15));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "<pre>int(16)\nint(72)\nint(0)\nint(-20)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpue1744ej.php:27\nStack trace:\n#0 /tmp/tmpue1744ej.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpue1744ej.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a % 10) * ($b % 10);\n}\n\
    echo multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "16<br>72<br>0<br>-20\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpp05sacpy.php:28\nStack trace:\n#0 /tmp/tmpp05sacpy.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpp05sacpy.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $product = ($a % 10) * ($b % 10);\n\
    \    return $product;\n}\necho multiply(14,-15);\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpufzgh_m6.php:24\n\
    Stack trace:\n#0 /tmp/tmpufzgh_m6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpufzgh_m6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\t$a = abs($a % 10);\n\t$b = abs($b\
    \ % 10);\n\treturn $a * $b;\n}\n\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // your code here\n    $number\
    \ = $a * $b;\n    $units = $number % 10;\n    return $units;\n  }\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ys2soaw.php:21\n\
    Stack trace:\n#0 /tmp/tmp3ys2soaw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3ys2soaw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (int)str_replace('-', '',\
    \ $a);\n    $b = (int)str_replace('-', '', $b);\n    return ($a * $b) % 10;\n\
    }\necho multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqtkv8z0s.php:21\n\
    Stack trace:\n#0 /tmp/tmpqtkv8z0s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqtkv8z0s.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a=str_split($a)[strlen($a)-1];\n\
    \    $b=str_split($b)[strlen($b)-1];\n    return $a*$b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicye692a.php:21\n\
    Stack trace:\n#0 /tmp/tmpicye692a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpicye692a.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n$a =  148;\n$b = 412;\necho multiply($a, $b);\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpilfog04l.php:27\n\
    Stack trace:\n#0 /tmp/tmpilfog04l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpilfog04l.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\t$a = str_split($a)[count(str_split($a))\
    \ - 1];\n\t$b = str_split($b)[count(str_split($b)) - 1];\n\t\n\treturn $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\necho \"\
    <br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $unitdigits = array(\n    1 => 1,\n\
    \    2 => 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n\
    \    8 => 8,\n    9 => 9,\n    0 => 0\n  );\n  $aindex = $a % 10;\n  $bindex =\
    \ $b % 10;\n  return $unitdigits[$aindex] * $unitdigits[$bindex];\n}\n\necho multiply(148,\
    \ 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2exn77b.php:37\n\
    Stack trace:\n#0 /tmp/tmpf2exn77b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpf2exn77b.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return (abs($a) % 10) * (abs($b)\
    \ % 10);\n}\n\necho multiply(19, 28);\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '72'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $array_a = str_split($a);\n   \
    \ $array_b = str_split($b);\n    $sum_a = $array_a[count($array_a) - 1];\n   \
    \ $sum_b = $array_b[count($array_b) - 1];\n    return $sum_a * $sum_b;\n}\necho\
    \ multiply(123, 456);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '18'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $x = $a % 10;\n    $y = $b % 10;\n\
    \    return $x * $y;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6x7zonz.php:23\n\
    Stack trace:\n#0 /tmp/tmpj6x7zonz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpj6x7zonz.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    //$a=substr($a, strlen($a)-1);\n\
    \    //$b=substr($b, strlen($b)-1);\n    return ($a%10)*($b%10);\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1s1os3_.php:23\n\
    Stack trace:\n#0 /tmp/tmps1s1os3_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmps1s1os3_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return (abs($a) % 10) * (abs($b)\
    \ % 10);\n}\n\necho multiply(4,4);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $c = (string)$a[strlen($a)-1];\n    $d = (string)$b[strlen($b)-1];\n    $result\
    \ = (int)$c * (int)$d;\n    return $result;\n}\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14,-15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a % 10) * ($b % 10);\n}\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpot5uw0ka.php:21\n\
    Stack trace:\n#0 /tmp/tmpot5uw0ka.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpot5uw0ka.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $unitA = array_sum(str_split($a))\
    \ % 10;\n    $unitB = array_sum(str_split($b)) % 10;\n    return $unitA * $unitB;\n\
    }\nprint_r(multiply(19, 28));\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7aeyllvk.php:22\n\
    Stack trace:\n#0 /tmp/tmp7aeyllvk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7aeyllvk.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $units = [1,2,3,4,5,6,7,8,9];\n \
    \ $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsivadbtw.php:25\n\
    Stack trace:\n#0 /tmp/tmpsivadbtw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsivadbtw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return abs($a % 10) * abs($b %\
    \ 10);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return $a%10 * $b%10;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlq2pszc.php:18\n\
    Stack trace:\n#0 /tmp/tmpqlq2pszc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqlq2pszc.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $res = str_split($a)[count(str_split($a))\
    \ - 1] * str_split($b)[count(str_split($b)) - 1];\n    return $res;\n}\necho multiply(14,-15);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '20'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(2020, 1851) . \"\\n\";\necho multiply(14,-15) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return (($a % 10) * ($b % 10));\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "16<br>72<br>0<br>-20\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpccskfgeu.php:28\nStack trace:\n#0 /tmp/tmpccskfgeu.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpccskfgeu.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // convert numbers to string\n\
    \    $sA = strval($a);\n    $sB = strval($b);\n    // get the last digit by accessing\
    \ the 0 index of the string\n    $aLast = $sA[0];\n    $bLast = $sB[0];\n    //\
    \ multiply last digits and return value\n    return $aLast * $bLast;\n}\necho\
    \ multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxf86eio.php:26\n\
    Stack trace:\n#0 /tmp/tmpvxf86eio.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvxf86eio.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a_arr = str_split($a);\n    $b_arr\
    \ = str_split($b);\n    return intval($a_arr[count($a_arr) - 1]) * intval($b_arr[count($b_arr)\
    \ - 1]);\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $product = $a * $b;\n  $mod = $product\
    \ % 10;\n  return $mod;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnftva9ae.php:21\n\
    Stack trace:\n#0 /tmp/tmpnftva9ae.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnftva9ae.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $first = $a % 10;\n  $second = $b\
    \ % 10;\n  $result = $first * $second;\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfgjgohz.php:24\n\
    Stack trace:\n#0 /tmp/tmptfgjgohz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptfgjgohz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $res1 = $a%10;\n    $res2 = $b%10;\n\
    \    return $res1*$res2;\n}\n$ret = multiply(148, 412);\necho $ret;\necho \"\\\
    n\";\n$ret = multiply(19, 28);\necho $ret;\necho \"\\n\";\n$ret = multiply(2020,\
    \ 1851);\necho $ret;\necho \"\\n\";\n$ret = multiply(14,-15);\necho $ret;\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ifvau8k.php:35\n\
    Stack trace:\n#0 /tmp/tmp1ifvau8k.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1ifvau8k.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // TODO\n    $multiplied_digits\
    \ = $a * $b;\n    $digits = str_split($multiplied_digits);\n    $digits = array_reverse($digits);\n\
    \    $new_array = [];\n    for ($i = 0; $i < count($digits); $i++) {\n       \
    \ if ($digits[$i] > 0) {\n            array_push($new_array, $digits[$i]);\n \
    \       }\n    }\n    if (count($new_array) > 0) {\n        return $new_array[0];\n\
    \    } else {\n        return 0;\n    }\n}\n\necho 'multiply(2019, 2018) expected:\
    \ 2' . '<br>';\necho 'multiply(2019, 2018) returned: ' . multiply(2019, 2018)\
    \ . '<br>';\necho '<br>';\necho 'multiply(148, 412) expected: 16' . '<br>';\n\
    echo 'multiply(148, 412) returned: ' . multiply(148, 412) . '<br>';\necho '<br>';\n\
    echo 'multiply(19, 28) expected: 72' . '<br>';\necho 'multiply(19, 28) returned:\
    \ ' . multiply(19, 28) . '<br>';\necho '<br>';\necho 'multiply(2020, 1851) expected:\
    \ 0' . '<br>';\necho 'multiply(2020, 1851) returned: ' . multiply(2020, 1851)\
    \ . '<br>';\necho '<br>';\necho 'multiply(14,-15) expected: 20' . '<br>';\necho\
    \ 'multiply(14,-15) returned: ' . multiply(14,-15) . '<br>';\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "multiply(2019, 2018) expected: 2<br>multiply(2019, 2018) returned: 2<br><br>multiply(148,\
    \ 412) expected: 16<br>multiply(148, 412) returned: 6<br><br>multiply(19, 28)\
    \ expected: 72<br>multiply(19, 28) returned: 2<br><br>multiply(2020, 1851) expected:\
    \ 0<br>multiply(2020, 1851) returned: 2<br><br>multiply(14,-15) expected: 20<br>multiply(14,-15)\
    \ returned: 1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp2hhf422.php:47\n\
    Stack trace:\n#0 /tmp/tmpp2hhf422.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpp2hhf422.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a * $b) % 10;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzeyht2xa.php:19\n\
    Stack trace:\n#0 /tmp/tmpzeyht2xa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzeyht2xa.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // Convert intergers to strings,\
    \ then split into arrays of single integers\n    $a = str_split((string) $a);\n\
    \    $b = str_split((string) $b);\n    // Remove minus sign if present\n    if($a[0]\
    \ == '-') {\n        unset($a[0]);\n    }\n    if($b[0] == '-') {\n        unset($b[0]);\n\
    \    }\n    // Multiply the arrays elements together\n    return array_product($a)\
    \ * array_product($b);\n}\n\necho multiply(148, 412) . '<br />';\necho multiply(19,\
    \ 28) . '<br />';\necho multiply(2020, 1851) . '<br />';\necho multiply(14,-15)\
    \ . '<br />';\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "256<br />144<br />0<br />20<br />\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmptb69unek.php:35\nStack trace:\n#0 /tmp/tmptb69unek.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptb69unek.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    //..\n    // $b = ($b < 0) ? $b*(-1)\
    \ : $b;\n    $a = ($a < 0) ? $a*(-1) : $a;\n    $b = ($b < 0) ? $b*(-1) : $b;\n\
    \    return ($a % 10) * ($b % 10);\n}\necho multiply(148, 412);\necho \"<br>\"\
    ;\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"\
    <br>\";\necho multiply(14,-15);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $unit_digit_a = $a % 10;\n    $unit_digit_b\
    \ = $b % 10;\n    return $unit_digit_a * $unit_digit_b;\n}\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqgbu0hpm.php:32\n\
    Stack trace:\n#0 /tmp/tmpqgbu0hpm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqgbu0hpm.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_japuqb.php:22\n\
    Stack trace:\n#0 /tmp/tmps_japuqb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmps_japuqb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = substr($a, -1);\n    $b =\
    \ substr($b, -1);\n    return $a * $b;\n}\nfunction candidate(...$args) {\n  \
    \  return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpup8h9oob.php:18\n\
    Stack trace:\n#0 /tmp/tmpup8h9oob.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpup8h9oob.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $strA = (string) $a;\n    $strB\
    \ = (string) $b;\n    return intval($strA[strlen($strA) - 1]) * intval($strB[strlen($strB)\
    \ - 1]);\n}\necho multiply(148, 412);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = str_split(abs($a))[1];\n  $b\
    \ = str_split(abs($b))[1];\n  return $a * $b;\n}\nvar_dump(multiply(148, 412));\n\
    var_dump(multiply(19, 28));\nvar_dump(multiply(2020, 1851));\nvar_dump(multiply(14,-15));\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "int(4)\nint(72)\nint(0)\nint(20)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpl7x6oxyd.php:24\nStack trace:\n#0 /tmp/tmpl7x6oxyd.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpl7x6oxyd.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a %= 10;\n    $b %= 10;\n    return\
    \ $a * $b;\n}\necho multiply(148, 412); // 16.\necho \"<br>\";\necho multiply(19,\
    \ 28); // 72.\necho \"<br>\";\necho multiply(2020, 1851); // 0.\necho \"<br>\"\
    ;\necho multiply(14,-15); // 20.\necho \"<br>\";\necho multiply(0, 10); // 0.\n\
    echo \"<br>\";\necho multiply(1, 16); // 6.\necho \"<br>\";\necho multiply(7,\
    \ 13); // 1.\necho \"<br>\";\necho multiply(14, -12); // 6.\necho \"<br>\";\n\
    echo multiply(12, -13); // 8.\necho \"<br>\";\necho multiply(12, 20); // 4.\n\
    echo \"<br>\";\necho multiply(18, 20); // 0.\necho \"<br>\";\necho multiply(17,\
    \ 20); // 6.\necho \"<br>\";\necho multiply(18, 20); // 0.\necho \"<br>\";\necho\
    \ multiply(17, 20); // 6.\necho \"<br>\";\necho multiply(18, 19); // 8.\necho\
    \ \"<br>\";\necho multiply(17, 19); // 3.\necho \"<br>\";\necho multiply(18, 18);\
    \ // 4.\necho \"<br>\";\necho multiply(17, 18); // 2.\necho \"<br>\";\necho multiply(18,\
    \ 17); // 0.\necho \"<br>\";\necho multiply(17, 17); // 9.\necho \"<br>\";\necho\
    \ multiply(0, 11); // 0.\necho \"<br>\";\necho multiply(0, 10); // 0.\necho \"\
    <br>\";\necho multiply(1, 16); // 6.\necho \"<br>\";\necho multiply(7, 13); //\
    \ 1.\necho \"<br>\";\necho multiply(14, -12); // 6.\necho \"<br>\";\necho multiply(12,\
    \ -13); // 8.\necho \"<br>\";\necho multiply(12, 20); // 4.\necho \"<br>\";\n\
    echo multiply(18, 20); // 0.\necho \"<br>\";\necho multiply(\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3wd2y1qv.php on line 72\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a * $b) % 10;\n}\necho\
    \ multiply(14,-15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphiyfdf5h.php:19\n\
    Stack trace:\n#0 /tmp/tmphiyfdf5h.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphiyfdf5h.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a < 0 ? -$a : $a) % 10\
    \ * ($b < 0 ? -$b : $b) % 10;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprizn70me.php:18\n\
    Stack trace:\n#0 /tmp/tmprizn70me.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprizn70me.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // if ($a < 0) $a = -$a;\n    //\
    \ if ($b < 0) $b = -$b;\n    // $multi = $a * $b;\n    // $unit_multi = $multi\
    \ % 10;\n    // return $unit_multi;\n    return $a % 10 * $b % 10;\n}\necho multiply(12,\
    \ -34);\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "-8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpho057lft.php:24\n\
    Stack trace:\n#0 /tmp/tmpho057lft.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpho057lft.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $unit_a = substr($a, -1);\n    $unit_b = substr($b, -1);\n    return (int)$unit_a\
    \ * (int)$unit_b;\n}\n\necho multiply(19, 28);\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '72'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $output = 1;\n    if ($a < 0) {\n\
    \        $a = -1 * $a;\n    }\n    if ($b < 0) {\n        $b = -1 * $b;\n    }\n\
    \    $arrayA = str_split($a);\n    $arrayB = str_split($b);\n    $output = $arrayA[sizeof($arrayA)\
    \ - 1] * $arrayB[sizeof($arrayB) - 1];\n    return $output;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $x = $a % 10;\n    $y = $b % 10;\n\
    \    return $x * $y;\n}\nprint_r(multiply(148, 412));\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp389m21n2.php:24\n\
    Stack trace:\n#0 /tmp/tmp389m21n2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp389m21n2.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\t$a = (int)$a;\n\t$b = (int)$b;\n\t\
    $a = $a - ($a / 10) * 10;\n\t$b = $b - ($b / 10) * 10;\n\treturn $a * $b;\n}\n\
    echo multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyypbev4i.php:23\n\
    Stack trace:\n#0 /tmp/tmpyypbev4i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyypbev4i.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcswpqa65.php:21\n\
    Stack trace:\n#0 /tmp/tmpcswpqa65.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcswpqa65.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  // Get only the units digit.\n  $a\
    \ = abs($a % 10);\n  $b = abs($b % 10);\n  return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return $a%10 * $b%10;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeaa_ezm7.php:19\n\
    Stack trace:\n#0 /tmp/tmpeaa_ezm7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpeaa_ezm7.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\necho multiply(148, 412); //16\necho \"\
    <br>\";\necho multiply(19, 28); //72\necho \"<br>\";\necho multiply(2020, 1851);\
    \ //0\necho \"<br>\";\necho multiply(14,-15); //20\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return (int)(($a % 10) * ($b %\
    \ 10));\n}\necho multiply(148, 412) . \"\\n\"; // 16\necho multiply(19, 28) .\
    \ \"\\n\"; // 72\necho multiply(2020, 1851) . \"\\n\"; // 0\necho multiply(14,-15)\
    \ . \"\\n\"; // 20\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dz5ntl0.php:25\n\
    Stack trace:\n#0 /tmp/tmp8dz5ntl0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8dz5ntl0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return (int)substr($a, -1, 1) *\
    \ (int)substr($b, -1, 1);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a_ones = $a % 10;\n  $b_ones = $b\
    \ % 10;\n  $c = $a_ones * $b_ones;\n  return $c;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9y0azey.php:24\n\
    Stack trace:\n#0 /tmp/tmpb9y0azey.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpb9y0azey.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a < 0 ? $a *= -1 : $a;\n\
    \    $b = $b < 0 ? $b *= -1 : $b;\n    return ($a % 10) * ($b % 10);\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // if($a > 0 && $b > 0)\n    //\
    \ {\n    //     return (substr($a, -1) * substr($b, -1));\n    // }\n    // else\
    \ if($a < 0 && $b < 0)\n    // {\n    //     return (substr($a, -1) * substr($b,\
    \ -1));\n    // }\n    // else if($a < 0 || $b < 0)\n    // {\n    //     return\
    \ (substr($a, -1) * substr($b, -1));\n    // }\n    // else\n    // {\n    //\
    \     return (substr($a, -1) * substr($b, -1));\n    // }\n    // return (substr($a,\
    \ -1) * substr($b, -1));\n    $a1 = abs($a) % 10;\n    $b1 = abs($b) % 10;\n \
    \   return ($a1 * $b1);\n}\n\necho multiply(148, 412).\"<br>\";\necho multiply(19,\
    \ 28).\"<br>\";\necho multiply(2020, 1851).\"<br>\";\necho multiply(14,-15).\"\
    <br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a % 10);\n    $b = abs($b\
    \ % 10);\n    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $total = ($a % 10) * ($b % 10);\n\
    \  return $total;\n}\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16<br>72<br>0<br>-20\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpd3y447x6.php:29\nStack trace:\n#0 /tmp/tmpd3y447x6.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmpd3y447x6.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return $a > 0 && $b > 0 ? $a %\
    \ 10 * $b % 10 : $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcetg2rjw.php:18\n\
    Stack trace:\n#0 /tmp/tmpcetg2rjw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcetg2rjw.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $str1 = strval($a);\n    $str2\
    \ = strval($b);\n    return $str1[strlen($str1)-1] * $str2[strlen($str2)-1];\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpii496qv_.php:23\n\
    Stack trace:\n#0 /tmp/tmpii496qv_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpii496qv_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmfmkdl5.php:22\n\
    Stack trace:\n#0 /tmp/tmprmfmkdl5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprmfmkdl5.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a1 = $a%10;\n    $b1 = $b%10;\n\
    \    return $a1*$b1;\n}\nprint_r(multiply(148, 412));\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanhlbuf0.php:24\n\
    Stack trace:\n#0 /tmp/tmpanhlbuf0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpanhlbuf0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkucibrgc.php:24\n\
    Stack trace:\n#0 /tmp/tmpkucibrgc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkucibrgc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return (($a % 10) * ($b % 10));\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvo4h31w.php:21\n\
    Stack trace:\n#0 /tmp/tmphvo4h31w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphvo4h31w.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a % 10) * ($b % 10);\n}\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt82nnjg.php:21\n\
    Stack trace:\n#0 /tmp/tmpgt82nnjg.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgt82nnjg.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $prod = 0;\n    if ($a < 0){\n\
    \        $a = $a * -1;\n    }\n    if ($b < 0){\n        $b = $b * -1;\n    }\n\
    \    if ($a > 9){\n        $a = $a % 10;\n    }\n    if ($b > 9){\n        $b\
    \ = $b % 10;\n    }\n    $prod = $a * $b;\n    return $prod;\n}\n\necho multiply(19,\
    \ 28);\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '72'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $r = (($a % 10) * ($b % 10));\n\
    \    return $r;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5se_xkb.php:23\n\
    Stack trace:\n#0 /tmp/tmpe5se_xkb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe5se_xkb.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $aUnit = $a % 10;\n  $bUnit = $b\
    \ % 10;\n  $product = $aUnit * $bUnit;\n  return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdr2tmvlb.php:24\n\
    Stack trace:\n#0 /tmp/tmpdr2tmvlb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdr2tmvlb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = substr($a, -1);\n  $b = substr($b,\
    \ -1);\n  return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return $a % 10 * $b % 10;\n}\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsw0tz5bv.php:19\n\
    Stack trace:\n#0 /tmp/tmpsw0tz5bv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsw0tz5bv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\necho multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp64o9sgg9.php:22\n\
    Stack trace:\n#0 /tmp/tmp64o9sgg9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp64o9sgg9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $str1 = strval($a);\n  $str2 = strval($b);\n\
    \  $newStr1 = '';\n  $newStr2 = '';\n  if($str1[0] == '-'){\n    $newStr1 = $str1[1];\n\
    \  } else {\n    $newStr1 = $str1[0];\n  }\n  if($str2[0] == '-'){\n    $newStr2\
    \ = $str2[1];\n  } else {\n    $newStr2 = $str2[0];\n  }\n  return $newStr1 *\
    \ $newStr2;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6t_dauaz.php:32\n\
    Stack trace:\n#0 /tmp/tmp6t_dauaz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6t_dauaz.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return (($a < 0 ? -$a : $a) % 10)\
    \ * (($b < 0 ? -$b : $b) % 10);\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $array1 = str_split($a);\n    $array2\
    \ = str_split($b);\n    //This function allows us to multiply two integers\n \
    \   return $array1[count($array1)-1] * $array2[count($array2)-1];\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a%10)*($b%10);\n}\necho\
    \ multiply(148, 412).\"\\n\";\necho multiply(19, 28).\"\\n\";\necho multiply(2020,\
    \ 1851).\"\\n\";\necho multiply(14,-15).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2m3jsh_.php:25\n\
    Stack trace:\n#0 /tmp/tmpu2m3jsh_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpu2m3jsh_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // 1) Solution with one line solution\n\
    \    // return ($a % 10) * ($b % 10);\n    // 2) Solution with two lines solution\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(19,\
    \ 28) . PHP_EOL;\necho multiply(14,-15) . PHP_EOL;\necho multiply(14,-15) . PHP_EOL;\n\
    echo multiply(148, 412) . PHP_EOL;\necho multiply(2020, 1851) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "72\n-20\n-20\n16\n0\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpdqszc3uq.php:32\nStack trace:\n#0 /tmp/tmpdqszc3uq.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdqszc3uq.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $unitA = $a % 10;\n  $unitB = $b\
    \ % 10;\n  return $unitA * $unitB;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lv7bjmv.php:23\n\
    Stack trace:\n#0 /tmp/tmp_lv7bjmv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_lv7bjmv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a * $b) % 10;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ocuvsh3.php:18\n\
    Stack trace:\n#0 /tmp/tmp1ocuvsh3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1ocuvsh3.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6gcs8np.php:22\n\
    Stack trace:\n#0 /tmp/tmpu6gcs8np.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu6gcs8np.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return $a % 10 * $b % 10;\n}\n\n\
    echo multiply(10,-2);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagczhi9r.php:20\n\
    Stack trace:\n#0 /tmp/tmpagczhi9r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpagczhi9r.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\treturn (($a%10) * ($b%10));\n}\n\n\
    $ans = multiply(148, 412);\nprint_r($ans);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_knack3b.php:26\n\
    Stack trace:\n#0 /tmp/tmp_knack3b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_knack3b.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = substr($a, -1);\n  $b = substr($b,\
    \ -1);\n  $c = $a * $b;\n  return $c;\n}\n\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5w9cmj46.php:22\n\
    Stack trace:\n#0 /tmp/tmp5w9cmj46.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5w9cmj46.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $n = $a * $b;\n    $n = abs($n);\n\
    \    $unit_digit = $n % 10;\n    return $unit_digit;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wxendbu.php:22\n\
    Stack trace:\n#0 /tmp/tmp3wxendbu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3wxendbu.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\t$result = [];\n\t$a = (string)$a;\n\
    \t$b = (string)$b;\n\t$result[] = substr($a, strlen($a) - 1);\n\t$result[] = substr($b,\
    \ strlen($b) - 1);\n\treturn array_product($result);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $unitDigitOne = $a % 10;\n    $unitDigitTwo\
    \ = $b % 10;\n    return $unitDigitOne * $unitDigitTwo;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpquorymi6.php:23\n\
    Stack trace:\n#0 /tmp/tmpquorymi6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpquorymi6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return (abs($a) % 10) * (abs($b)\
    \ % 10);\n}\necho multiply(19, 28) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "72\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string) $a;\n    $b = (string)\
    \ $b;\n    $a_last = $a[strlen($a) - 1];\n    $b_last = $b[strlen($b) - 1];\n\
    \    return (int) $a_last * (int) $b_last;\n}\necho multiply(148, 412) . \"\\\
    n\"; // should return 16.\necho multiply(19, 28) . \"\\n\"; // should return 72.\n\
    echo multiply(2020, 1851) . \"\\n\"; // should return 0.\necho multiply(14,-15)\
    \ . \"\\n\"; // should return 20.\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return abs($a) % 10 * abs($b) % 10;\n\
    }\n$solution = new Solution();\nvar_dump($solution->multiply(148, 412));\nvar_dump($solution->multiply(19,\
    \ 28));\nvar_dump($solution->multiply(2020, 1851));\nvar_dump($solution->multiply(14,-15));\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Class 'Solution' not found in /tmp/tmp9g5bby35.php:13\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmp9g5bby35.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = substr($a, -1);\n    $b =\
    \ substr($b, -1);\n    return $a * $b;\n}\nfunction candidate(...$args) {\n  \
    \  return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $aDigit = getLastDigit($a);\n  $bDigit\
    \ = getLastDigit($b);\n  return $aDigit * $bDigit;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getLastDigit()\
    \ in /tmp/tmppn4ju36q.php:11\nStack trace:\n#0 /tmp/tmppn4ju36q.php(17): multiply(148,\
    \ 412)\n#1 /tmp/tmppn4ju36q.php(21): candidate(148, 412)\n#2 /tmp/tmppn4ju36q.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmppn4ju36q.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return $a*$b;\n}\necho multiply(148,\
    \ 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "60976\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_ap93uh.php:19\n\
    Stack trace:\n#0 /tmp/tmpu_ap93uh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu_ap93uh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpll2r8prv.php:23\n\
    Stack trace:\n#0 /tmp/tmpll2r8prv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpll2r8prv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = explode('', $a);\n    $b =\
    \ explode('', $b);\n    $a = ($a[1] === '-') ? $a[2] : $a[0];\n    $b = ($b[1]\
    \ === '-') ? $b[2] : $b[0];\n    return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: explode(): Empty delimiter in /tmp/tmps6a79dm7.php on line 11\n\
    \nWarning: explode(): Empty delimiter in /tmp/tmps6a79dm7.php on line 12\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmps6a79dm7.php:22\nStack trace:\n\
    #0 /tmp/tmps6a79dm7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps6a79dm7.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a % 10);\n    $b = abs($b\
    \ % 10);\n    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\tif ($a < 0 || $b < 0) {\n\t\t$c =\
    \ (($a * -1) * ($b * -1)) % 10;\n\t\treturn $c * -1;\n\t}\n\telse {\n\t\t$c =\
    \ ($a * $b) % 10;\n\t\treturn $c;\n\t}\n}\necho multiply(148, 412) . \"<br>\"\
    ;\necho multiply(19, 28) . \"<br>\";\necho multiply(2020, 1851) . \"<br>\";\n\
    echo multiply(14,-15) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6<br>2<br>0<br>0<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpbukgqt3e.php:29\nStack trace:\n#0 /tmp/tmpbukgqt3e.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbukgqt3e.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return (($a % 10) * ($b % 10));\n\
    }\n\necho \"Test 1: \" . (multiply(148, 412) == 16 ? \"PASS\": \"FAIL\") . \"\\\
    n\";\necho \"Test 2: \" . (multiply(19, 28) == 72 ? \"PASS\": \"FAIL\") . \"\\\
    n\";\necho \"Test 3: \" . (multiply(2020, 1851) == 0 ? \"PASS\": \"FAIL\") . \"\
    \\n\";\necho \"Test 4: \" . (multiply(14,-15) == 20 ? \"PASS\": \"FAIL\") . \"\
    \\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Test 1: PASS\nTest 2: PASS\nTest 3: PASS\nTest 4: FAIL\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp83y_9dv7.php:26\nStack trace:\n\
    #0 /tmp/tmp83y_9dv7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp83y_9dv7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a % 10) * ($b % 10);\n}\n\
    \n$a = (int) readline('a: ');\n$b = (int) readline('b: ');\n$multiply = multiply($a,\
    \ $b);\necho 'multiply: ' . $multiply . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmp0bdle_55.php:14\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp0bdle_55.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $prod = $a * $b;\n    if ($prod\
    \ < 0) {\n        $prod = abs($prod);\n    }\n    if ($prod > 9) {\n        $prod\
    \ = (string)$prod;\n        $prod = $prod[strlen($prod) - 1];\n    }\n    return\
    \ $prod;\n}\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\\
    n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14,-15) . \"\\n\";\n\
    echo multiply(18, 2) . \"\\n\";\necho multiply(18, 3) . \"\\n\";\necho multiply(22,\
    \ -19) . \"\\n\";\necho multiply(41, -19) . \"\\n\";\necho multiply(0, -19) .\
    \ \"\\n\";\necho multiply(0, 0) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n2\n0\n0\n6\n4\n8\n9\n0\n0\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpkzx3t2_k.php:36\nStack trace:\n#0 /tmp/tmpkzx3t2_k.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkzx3t2_k.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // Happy coding!\n    $a = $a <\
    \ 0 ? -$a : $a;\n    $b = $b < 0 ? -$b : $b;\n    $aa = str_split($a);\n    $bb\
    \ = str_split($b);\n    $aa = $aa[count($aa) - 1];\n    $bb = $bb[count($bb) -\
    \ 1];\n    return $aa * $bb;\n}\necho multiply(19, 28);\necho \"\\n\";\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\necho multiply(-14,-15);\necho \"\\n\";\necho multiply(-19, 28);\n\
    echo \"\\n\";\necho multiply(19, -28);\necho \"\\n\";\necho multiply(-19, -28);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "72\n16\n0\n20\n20\n72\n72\n72\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $result = str_split($a);\n    $secResult\
    \ = str_split($b);\n    $intA = (int)$result[strlen($a)-1];\n    $intB = (int)$secResult[strlen($b)-1];\n\
    \    return $intA * $intB;\n}\n\necho multiply(20,-4);\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '0'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a < 0 || $b < 0) ? $a\
    \ * $b % 10 : $a * $b % 10;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyx5s5mq7.php:19\n\
    Stack trace:\n#0 /tmp/tmpyx5s5mq7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyx5s5mq7.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $u = $a % 10;\n    $v = $b % 10;\n\
    \    return $u * $v;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59w5_l9o.php:24\n\
    Stack trace:\n#0 /tmp/tmp59w5_l9o.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp59w5_l9o.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a);\n  $b = abs($b);\n\
    \  $result = $a % 10 * $b % 10;\n  return $result;\n}\necho multiply(14,-15);\n\
    echo \"\\n\";\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\n\
    echo \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n6\n2\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1aq735n.php:29\n\
    Stack trace:\n#0 /tmp/tmpb1aq735n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb1aq735n.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $aMod = $a % 10;\n    $bMod = $b\
    \ % 10;\n    return $aMod * $bMod;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpupbumpq_.php:24\n\
    Stack trace:\n#0 /tmp/tmpupbumpq_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpupbumpq_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5i80dbf.php:23\n\
    Stack trace:\n#0 /tmp/tmpf5i80dbf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpf5i80dbf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $x = $a % 10;\n  $y = $b % 10;\n\
    \  return $x * $y;\n}\necho multiply(14,-15) . \"\\n\";\necho multiply(19, 28)\
    \ . \"\\n\";\necho multiply(148, 412) . \"\\n\";\necho multiply(2020, 1851) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "-20\n72\n16\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5f3bhp4y.php:27\n\
    Stack trace:\n#0 /tmp/tmp5f3bhp4y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5f3bhp4y.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a < 0 ? -$a : $a;\n    $b\
    \ = $b < 0 ? -$b : $b;\n    return $a % 10 * $b % 10;\n}\necho multiply(148, 412)\
    \ . \"<br>\";\necho multiply(19, 28) . \"<br>\";\necho multiply(2020, 1851) .\
    \ \"<br>\";\necho multiply(14,-15) . \"<br>\";\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6<br>2<br>0<br>0<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpyrfyb566.php:24\nStack trace:\n#0 /tmp/tmpyrfyb566.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyrfyb566.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\t$string = strval($a * $b);\n\t$arr\
    \ = str_split($string);\n\t$sum = 1;\n\tforeach ($arr as $key => $value) {\n\t\
    \t$sum *= $value;\n\t}\n\treturn $sum;\n}\necho multiply(148, 412);\necho \"<br>\"\
    ;\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"\
    <br>\";\necho multiply(14,-15);\necho \"<br>\";\necho multiply(14, 15);\necho\
    \ \"<br>\";\necho multiply(152, 423);\necho \"<br>\";\necho multiply(18, 28);\n\
    echo \"<br>\";\necho multiply(2020, 1853);\necho \"<br>\";\necho multiply(19,\
    \ 15);\necho \"<br>\";\necho multiply(13, 14);\necho \"<br>\";\necho multiply(232,\
    \ 324);\necho \"<br>\";\necho multiply(18, 25);\necho \"<br>\";\necho multiply(2020,\
    \ 1859);\necho \"<br>\";\necho multiply(11, 15);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>30<br>0<br>\nWarning: A non-numeric value encountered in /tmp/tmpzkrye47k.php\
    \ on line 15\n0<br>0<br>2592<br>0<br>0<br>80<br>16<br>1680<br>0<br>0<br>30<br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzkrye47k.php:52\nStack\
    \ trace:\n#0 /tmp/tmpzkrye47k.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpzkrye47k.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return (abs($a) % 10) * (abs($b)\
    \ % 10);\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a * $b) % 10;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsbnwhax.php:19\n\
    Stack trace:\n#0 /tmp/tmpxsbnwhax.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxsbnwhax.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return $a%10 * $b%10;\n}\n\n$a =\
    \ multiply(148, 412);\nvar_dump($a);\n\n$b = multiply(19, 28);\nvar_dump($b);\n\
    \n$c = multiply(2020, 1851);\nvar_dump($c);\n\n$d = multiply(14,-15);\nvar_dump($d);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "int(6)\nint(2)\nint(0)\nint(0)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpi5qea9w7.php:30\nStack trace:\n#0 /tmp/tmpi5qea9w7.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi5qea9w7.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // your code here\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    if($a[0] < 0) $a[0] = $a[0] * -1;\n    if($b[0]\
    \ < 0) $b[0] = $b[0] * -1;\n    return $a[0] * $b[0];\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk5239hn.php:23\n\
    Stack trace:\n#0 /tmp/tmplk5239hn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplk5239hn.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  //..\n  $strA = (string)$a;\n  $strB\
    \ = (string)$b;\n  $lastA = $strA[strlen($strA)-1];\n  $lastB = $strB[strlen($strB)-1];\n\
    \  $result = (int)$lastA * (int)$lastB;\n  return $result;\n}\necho multiply(148,\
    \ 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020,\
    \ 1851);\necho \"<br>\";\necho multiply(14,-15);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    if ($a > $b) {\n        $result = $a % 10 * $b % 10;\n    } else {\n    \
    \    $result = $b % 10 * $a % 10;\n    }\n    return $result;\n}\necho multiply(148,\
    \ 412) . PHP_EOL;\necho multiply(19, 28) . PHP_EOL;\necho multiply(2020, 1851)\
    \ . PHP_EOL;\necho multiply(14,-15) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n2\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyoo0jglx.php:30\n\
    Stack trace:\n#0 /tmp/tmpyoo0jglx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyoo0jglx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $x = str_split($a);\n  $y = str_split($b);\n\
    \  // echo $x;\n  // echo $y;\n  return $x[count($x)-1] * $y[count($y)-1];\n}\n\
    echo multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\necho \"\
    <br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = intval(strval($a)[-1]);\n\
    \    $b = intval(strval($b)[-1]);\n    $product = $a * $b;\n    return $product;\n\
    }\n\necho multiply(148, 412);\necho multiply(19, 28);\necho multiply(2020, 1851);\n\
    echo multiply(14,-15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1672020'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $c = $a % 10;\n  $d = $b % 10;\n\
    \  return $c * $d;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon3jbpmu.php:23\n\
    Stack trace:\n#0 /tmp/tmpon3jbpmu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpon3jbpmu.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $aString = (string)$a;\n    $bString\
    \ = (string)$b;\n    $aDigit = $aString[strlen($aString)-1];\n    $bDigit = $bString[strlen($bString)-1];\n\
    \    return $aDigit * $bDigit;\n}\n\necho \"Answer: \" . multiply(148, 412) .\
    \ PHP_EOL;\necho \"Answer: \" . multiply(19, 28) . PHP_EOL;\necho \"Answer: \"\
    \ . multiply(2020, 1851) . PHP_EOL;\necho \"Answer: \" . multiply(14,-15) . PHP_EOL;\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Answer: 16\nAnswer: 72\nAnswer: 0\nAnswer: 20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a_unit_digit = substr($a, -1);\n\
    \    $b_unit_digit = substr($b, -1);\n    return $a_unit_digit * $b_unit_digit;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $output = 0;\n  $aDigit = $a % 10;\n\
    \  $bDigit = $b % 10;\n  $output = $aDigit * $bDigit;\n  return $output;\n}\n\
    multiply(2020, 1851);\nmultiply(14,-15);\nfunction candidate(...$args) {\n   \
    \ return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp133fhv5_.php:27\n\
    Stack trace:\n#0 /tmp/tmp133fhv5_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp133fhv5_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $lastDigit = fmod($a, 10) * fmod($b,\
    \ 10);\n    return $lastDigit;\n}\n\necho multiply(148, 412) . PHP_EOL;\necho\
    \ multiply(19, 28) . PHP_EOL;\necho multiply(2020, 1851) . PHP_EOL;\necho multiply(14,-15)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_4pf1f4.php:24\n\
    Stack trace:\n#0 /tmp/tmpo_4pf1f4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpo_4pf1f4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a) % 10;\n  $b = abs($b)\
    \ % 10;\n  return $a * $b;\n}\n\necho multiply(19, 28);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '72'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string) $a;\n    $b = (string)\
    \ $b;\n    return (int) $a[-1] * (int) $b[-1];\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return $a%10 * $b%10;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnan27e_.php:19\n\
    Stack trace:\n#0 /tmp/tmpwnan27e_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwnan27e_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a);\n  $b = abs($b);\n\
    \  return ($a % 10) * ($b % 10);\n}\n$a = 6;\n$b = 12;\necho multiply($a, $b)\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\t$x = 1;\n\twhile ($a >= 10) {\n\t\
    \t$a /= 10;\n\t}\n\twhile ($b >= 10) {\n\t\t$b /= 10;\n\t}\n\t$x = $a * $b;\n\t\
    return $x;\n}\nprint(multiply(19, 28) . PHP_EOL);\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "5.32\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppr5qviq3.php:28\n\
    Stack trace:\n#0 /tmp/tmppr5qviq3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppr5qviq3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  $result = $a * $b;\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0ie6icy.php:25\n\
    Stack trace:\n#0 /tmp/tmps0ie6icy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps0ie6icy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $product = $a * $b;\n    $c = abs($product);\n\
    \    $output = $c % 10;\n    if ($product < 0) {\n        $output = $output *\
    \ -1;\n    }\n    return $output;\n}\n$answer = multiply(148, 412);\necho \"Answer\
    \ is: \" . $answer;\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Answer is: 6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu832ddqj.php:26\n\
    Stack trace:\n#0 /tmp/tmpu832ddqj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu832ddqj.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return intval($a % 10) * intval($b\
    \ % 10);\n}\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\\
    n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14,-15) . \"\\n\";\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09tnw7p4.php:25\n\
    Stack trace:\n#0 /tmp/tmp09tnw7p4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp09tnw7p4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppwgy06df.php:23\n\
    Stack trace:\n#0 /tmp/tmppwgy06df.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppwgy06df.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $product = ($a % 10) * ($b % 10);\n\
    \    return $product;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5yaocqx.php:22\n\
    Stack trace:\n#0 /tmp/tmpv5yaocqx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv5yaocqx.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\tif($a<0 && $b<0){\n\t\t$a = $a *\
    \ -1;\n\t\t$b = $b * -1;\n\t} elseif($a < 0 || $b < 0){\n\t\t$a = abs($a);\n\t\
    \t$b = abs($b);\n\t}\n\t$a = $a % 10;\n\t$b = $b % 10;\n\treturn $a * $b;\n}\n\
    echo multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $lastDigitOfA = $a % 10;\n    $lastDigitOfB\
    \ = $b % 10;\n    $product = $lastDigitOfA * $lastDigitOfB;\n    return $product;\n\
    }\necho multiply(4, 3);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7siymkky.php:25\n\
    Stack trace:\n#0 /tmp/tmp7siymkky.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7siymkky.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = substr($a, -1);\n    $b =\
    \ substr($b, -1);\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return $a%10 * $b%10;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfm57j68.php:21\n\
    Stack trace:\n#0 /tmp/tmpgfm57j68.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgfm57j68.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a * $b) % 10;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclqg2be2.php:19\n\
    Stack trace:\n#0 /tmp/tmpclqg2be2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpclqg2be2.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzv4c9d5.php:24\n\
    Stack trace:\n#0 /tmp/tmpkzv4c9d5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkzv4c9d5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return (abs($a) % 10) * (abs($b)\
    \ % 10);\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaw1j_jle.php:23\n\
    Stack trace:\n#0 /tmp/tmpaw1j_jle.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaw1j_jle.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  // get only the units of each number\n\
    \  $a = $a % 10;\n  $b = $b % 10;\n  // multiply the numbers\n  return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt263fhhl.php:25\n\
    Stack trace:\n#0 /tmp/tmpt263fhhl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpt263fhhl.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = str_split($a);\n  $b = str_split($b);\n\
    \  return ($a[sizeof($a)-1] * $b[sizeof($b)-1]);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    return (int)$a[strlen($a)-1] * (int)$b[strlen($b)-1];\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = (string) $a;\n  $b = (string)\
    \ $b;\n  $a = (int) $a[strlen($a) - 1];\n  $b = (int) $b[strlen($b) - 1];\n  $result\
    \ = $a * $b;\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return $a % 10 * $b % 10;\n}\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoac6kn3k.php:19\n\
    Stack trace:\n#0 /tmp/tmpoac6kn3k.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpoac6kn3k.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $x = $a % 10;\n    $y = $b % 10;\n    return $x * $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $str_a = (string)$a;\n    $str_b\
    \ = (string)$b;\n    $multiply = $str_a[strlen($str_a)-1] * $str_b[strlen($str_b)-1];\n\
    \    return $multiply;\n}\n\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $product = 0;\n  // Write your code\
    \ here\n  $product = (abs($a)%10)*(abs($b)%10);\n  // End your code here\n  return\
    \ $product;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $arr_1 = str_split($a);\n    $arr_2\
    \ = str_split($b);\n    return $arr_1[sizeof($arr_1)-1] * $arr_2[sizeof($arr_2)-1];\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\t$a = abs($a % 10);\n\t$b = abs($b\
    \ % 10);\n\treturn $a * $b;\n}\n\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // write your code here...\n  $a\
    \ = abs($a);\n  $b = abs($b);\n  return $a * $b % 10;\n}\necho multiply(19, 28)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoywkfkic.php:22\n\
    Stack trace:\n#0 /tmp/tmpoywkfkic.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpoywkfkic.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(2020, 1851);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wmtvp_d.php:23\n\
    Stack trace:\n#0 /tmp/tmp7wmtvp_d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7wmtvp_d.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $newa = str_split($a);\n  $newb =\
    \ str_split($b);\n  return $newa[count($newa)-1] * $newb[count($newb)-1];\n}\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $split1 = str_split($a);\n    $split2\
    \ = str_split($b);\n    $length1 = count($split1);\n    $length2 = count($split2);\n\
    \    if($length1 > 1 && $length2 > 1){\n        return $split1[$length1-1] * $split2[$length2-1];\n\
    \    }\n    else{\n        return $a * $b;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // complete the function\n    $arr\
    \ = [$a, $b];\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ < 0) {\n            $arr[$i] = $arr[$i] * -1;\n        }\n        $arr[$i] =\
    \ str_split($arr[$i]);\n        for ($j = 0; $j < count($arr[$i]); $j++) {\n \
    \           if ($arr[$i][$j] == 0) {\n                unset($arr[$i][$j]);\n \
    \           }\n        }\n        $arr[$i] = $arr[$i][0];\n    }\n    $arr[0]\
    \ = $arr[0] * $arr[1];\n    return $arr[0];\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tk0lgoa.php:33\n\
    Stack trace:\n#0 /tmp/tmp6tk0lgoa.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6tk0lgoa.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string) $a;\n    $b = (string)\
    \ $b;\n    $a = intval($a[strlen($a) - 1]);\n    $b = intval($b[strlen($b) - 1]);\n\
    \    return $a * $b;\n}\n\necho multiply(19, 28);\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '72'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return (int) ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulxy790l.php:22\n\
    Stack trace:\n#0 /tmp/tmpulxy790l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpulxy790l.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  // we would like to return the product\
    \ of their unit digits.\n  $a = ($a < 0 ? -1 * $a : $a);\n  $b = ($b < 0 ? -1\
    \ * $b : $b);\n  return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return (int)($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55i5sw26.php:21\n\
    Stack trace:\n#0 /tmp/tmp55i5sw26.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp55i5sw26.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $res1 = (string)$a;\n  $res2 = (string)$b;\n\
    \  $res1 = intval($res1[strlen($res1)-1]);\n  $res2 = intval($res2[strlen($res2)-1]);\n\
    \  return $res1 * $res2;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = explode(\"\", $a);\n    $b\
    \ = explode(\"\", $b);\n    $a = end($a);\n    $b = end($b);\n    return $a *\
    \ $b;\n}\nprint_r(multiply(148, 412));\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: explode(): Empty delimiter in /tmp/tmpba1xphox.php on line 11\n\
    \nWarning: explode(): Empty delimiter in /tmp/tmpba1xphox.php on line 12\n\nWarning:\
    \ end() expects parameter 1 to be array, bool given in /tmp/tmpba1xphox.php on\
    \ line 13\n\nWarning: end() expects parameter 1 to be array, bool given in /tmp/tmpba1xphox.php\
    \ on line 14\n0\nWarning: explode(): Empty delimiter in /tmp/tmpba1xphox.php on\
    \ line 11\n\nWarning: explode(): Empty delimiter in /tmp/tmpba1xphox.php on line\
    \ 12\n\nWarning: end() expects parameter 1 to be array, bool given in /tmp/tmpba1xphox.php\
    \ on line 13\n\nWarning: end() expects parameter 1 to be array, bool given in\
    \ /tmp/tmpba1xphox.php on line 14\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpba1xphox.php:23\nStack trace:\n#0 /tmp/tmpba1xphox.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpba1xphox.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = str_split($a);\n    $b = str_split($b);\n\
    \    return $a[count($a)-1] * $b[count($b)-1];\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $str_a = strval($a);\n  $str_b =\
    \ strval($b);\n  $a_len = strlen($str_a);\n  $b_len = strlen($str_b);\n  $a_unit\
    \ = $str_a[$a_len - 1];\n  $b_unit = $str_b[$b_len - 1];\n  return intval($a_unit)\
    \ * intval($b_unit);\n}\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a);\n  $b = abs($b);\n\
    \  $array = str_split($a);\n  $a = array_pop($array);\n  $array = str_split($b);\n\
    \  $b = array_pop($array);\n  return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  //TODO\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gz2ve0n.php:18\n\
    Stack trace:\n#0 /tmp/tmp_gz2ve0n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_gz2ve0n.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $multi = $a * $b;\n  return substr($multi,\
    \ -1);\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwz0m6lj.php:20\n\
    Stack trace:\n#0 /tmp/tmpuwz0m6lj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuwz0m6lj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return $a < 0 ? -($a % 10) * $b\
    \ % 10 : $a % 10 * $b % 10;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy78novrr.php:18\n\
    Stack trace:\n#0 /tmp/tmpy78novrr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy78novrr.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string) $a;\n    $b = (string)\
    \ $b;\n    $aa = $a[strlen($a) - 1];\n    $bb = $b[strlen($b) - 1];\n    return\
    \ (int) $aa * (int) $bb;\n}\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $strA = strval($a);\n    $strB\
    \ = strval($b);\n    $strA = substr($strA, -1);\n    $strB = substr($strB, -1);\n\
    \    $result = $strA * $strB;\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $product = 0;\n    $a = (string)\
    \ $a;\n    $b = (string) $b;\n    $unit_a = $a[strlen($a) - 1];\n    $unit_b =\
    \ $b[strlen($b) - 1];\n    $product = $unit_a * $unit_b;\n    return $product;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n\t$unitA = intval($a % 10);\n\t$unitB\
    \ = intval($b % 10);\n\treturn $unitA * $unitB;\n}\necho multiply(148, 412); //\
    \ 16\necho \"<br>\";\necho multiply(19, 28); // 72\necho \"<br>\";\necho multiply(2020,\
    \ 1851); // 0\necho \"<br>\";\necho multiply(14,-15); // 20\necho \"<br>\";\n\
    echo multiply(1,-1); // 1\necho \"<br>\";\necho multiply(1,1); // 1\necho \"<br>\"\
    ;\necho multiply(1,0); // 0\necho \"<br>\";\necho multiply(0,0); // 0\necho \"\
    <br>\";\necho multiply(0,1); // 0\necho \"<br>\";\necho multiply(0,-1); // 0\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16<br>72<br>0<br>-20<br>-1<br>1<br>0<br>0<br>0<br>0<br>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp2090m6rw.php:43\nStack trace:\n#0 /tmp/tmp2090m6rw.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2090m6rw.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a*$b)%10;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh231jap.php:19\n\
    Stack trace:\n#0 /tmp/tmpmh231jap.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmh231jap.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // enter your code here\n    $a\
    \ = substr((string)$a, -1);\n    $b = substr((string)$b, -1);\n    return $a *\
    \ $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // Without taking in account negative\
    \ values\n    $prod = (($a % 10) * ($b % 10));\n    return $prod;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldgelyij.php:24\n\
    Stack trace:\n#0 /tmp/tmpldgelyij.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpldgelyij.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a % 10);\n  $b = abs($b\
    \ % 10);\n  return $a * $b;\n}\n\necho multiply(5,7);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,28);\n\
    echo \"<br>\";\necho multiply(0,12);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 35<br>20<br>72<br>0<br>16<br>72<br>0
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return intval(strval($a)[strlen(strval($a))\
    \ - 1]) * intval(strval($b)[strlen(strval($b)) - 1]);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $c = (string) $a;\n  $d = (string)\
    \ $b;\n  return (int) ($c[$c.length - 1] * $d[$d.length - 1]);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Use of undefined constant length - assumed 'length' (this will\
    \ throw an Error in a future version of PHP) in /tmp/tmp4h1gbsq7.php on line 13\n\
    \nWarning: Use of undefined constant length - assumed 'length' (this will throw\
    \ an Error in a future version of PHP) in /tmp/tmp4h1gbsq7.php on line 13\n\n\
    Warning: A non-numeric value encountered in /tmp/tmp4h1gbsq7.php on line 13\n\n\
    Warning: A non-numeric value encountered in /tmp/tmp4h1gbsq7.php on line 13\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp4h1gbsq7.php:20\nStack\
    \ trace:\n#0 /tmp/tmp4h1gbsq7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4h1gbsq7.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $prod = ($a % 10) * ($b % 10);\n\
    \  return $prod;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurh72eik.php:22\n\
    Stack trace:\n#0 /tmp/tmpurh72eik.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpurh72eik.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryjtjs6w.php:22\n\
    Stack trace:\n#0 /tmp/tmpryjtjs6w.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpryjtjs6w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ( $a * $b ) % 10;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayanfvi3.php:18\n\
    Stack trace:\n#0 /tmp/tmpayanfvi3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpayanfvi3.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = str_split($a);\n    $b = str_split($b);\n\
    \    return $a[count($a)-1] * $b[count($b)-1];\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx72hed00.php:21\n\
    Stack trace:\n#0 /tmp/tmpx72hed00.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpx72hed00.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $r = strval($a * $b);\n    $len\
    \ = strlen($r);\n    return intval($r[$len - 1]);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7eeztcef.php:21\n\
    Stack trace:\n#0 /tmp/tmp7eeztcef.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7eeztcef.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a % 10);\n  $b = abs($b\
    \ % 10);\n  return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    // your code here\n    if ($a <\
    \ 0 && $b < 0) {\n      $a = abs($a);\n      $b = abs($b);\n    }\n    else if\
    \ ($a < 0 || $b < 0) {\n      $a = abs($a);\n      $b = abs($b);\n      $product\
    \ = $a * $b;\n      return $product * -1;\n    }\n    else {\n      $a = abs($a);\n\
    \      $b = abs($b);\n    }\n    $a = $a % 10;\n    $b = $b % 10;\n    $product\
    \ = $a * $b;\n    return $product;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8kq4pqq.php:39\n\
    Stack trace:\n#0 /tmp/tmpa8kq4pqq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpa8kq4pqq.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  // Split into 10's, 1's, and return\
    \ the product\n  $aUnit = $a % 10;\n  $bUnit = $b % 10;\n  return $aUnit * $bUnit;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_0gvh5q.php:24\n\
    Stack trace:\n#0 /tmp/tmpj_0gvh5q.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpj_0gvh5q.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $d1 = $a % 10;\n    $d2 = $b %\
    \ 10;\n    $p = $d1 * $d2;\n    return $p;\n}\n\necho multiply(148, 412);\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivlchy17.php:27\n\
    Stack trace:\n#0 /tmp/tmpivlchy17.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpivlchy17.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $x = $a % 10;\n    $y = $b % 10;\n    $product = $x * $y;\n    return $product;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = str_split($a);\n    $b = str_split($b);\n\
    \    return $a[count($a)-1] * $b[count($b)-1];\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $product = ($a * $b) % 10;\n  \
    \  return $product;\n}\necho multiply(20, 18);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg586p1az.php:21\n\
    Stack trace:\n#0 /tmp/tmpg586p1az.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg586p1az.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $aUnit = $a % 10;\n    $bUnit =\
    \ $b % 10;\n    return $aUnit * $bUnit;\n}\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3so3tno.php:23\n\
    Stack trace:\n#0 /tmp/tmpg3so3tno.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpg3so3tno.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string) $a;\n    $b = (string)\
    \ $b;\n    return (int) $a[strlen($a) - 1] * (int) $b[strlen($b) - 1];\n}\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $dA = (string) $a;\n    $dB = (string)\
    \ $b;\n    return (int) $dA[strlen($dA) - 1] * (int) $dB[strlen($dB) - 1];\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return $a % 10 * $b % 10;\n}\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3h11vygg.php:19\n\
    Stack trace:\n#0 /tmp/tmp3h11vygg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3h11vygg.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a % 10) * ($b % 10);\n}\n\
    echo multiply(14,-15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvw5m3ej.php:22\n\
    Stack trace:\n#0 /tmp/tmpvvw5m3ej.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvvw5m3ej.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_131_digits
language: php
results:
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $num = $n;\n  $sum = 1;\n\
    \  $mod = 10;\n  while ($num != 0) {\n    $digit = $num % $mod;\n    if ($digit\
    \ % 2 != 0) {\n      $sum *= $digit;\n    }\n    $num = (int)($num / $mod);\n\
    \  }\n  return $sum;\n}\n\nprint_r(digits(1));\nprint_r(digits(4));\nprint_r(digits(235));\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdhdpl_1.php:36\n\
    Stack trace:\n#0 /tmp/tmpzdhdpl_1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzdhdpl_1.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = abs($n);\n  $odd\
    \ = 1;\n  while ($n > 0) {\n    $d = $n % 10;\n    if ($d % 2) $odd *= $d;\n \
    \   $n = floor($n / 10);\n  }\n  return $odd;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpth8j_cyh.php:30\n\
    Stack trace:\n#0 /tmp/tmpth8j_cyh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpth8j_cyh.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    if(strlen($n) == 1)\
    \ {\n        return ($n & 1) ? $n : 0;\n    } else {\n        return ($n%10 &\
    \ 1) ? (($n%10) * digits(floor($n/10))) : digits(floor($n/10));\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwyp2yukl.php:21\n\
    Stack trace:\n#0 /tmp/tmpwyp2yukl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwyp2yukl.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $str = strval($n);\n\
    \    $product = 1;\n    for ($i = 0; $i < strlen($str); $i++) {\n        if ($str[$i]\
    \ % 2 !== 0) {\n            $product *= $str[$i];\n        }\n    }\n    return\
    \ $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5ew8d0d.php:32\n\
    Stack trace:\n#0 /tmp/tmpw5ew8d0d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw5ew8d0d.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $new_string = '';\n  $total\
    \ = 1;\n  foreach (str_split($n) as $digit) {\n    if ($digit % 2 !== 0) {\n \
    \     $new_string .= $digit;\n    }\n  }\n  if (strlen($new_string) === 0) {\n\
    \    return 0;\n  }\n  foreach (str_split($new_string) as $digit) {\n    $total\
    \ *= $digit;\n  }\n  return $total;\n}\necho digits(1)  . PHP_EOL;\necho digits(4)\
    \  . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n \
    \   return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n0\n15\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  if ($n < 10) {\n    return\
    \ ($n % 2 === 0) ? 0 : $n;\n  }\n  return ($n % 10 % 2 === 0) ? digits($n / 10)\
    \ : ($n % 10) * digits($n / 10);\n}\necho digits(1) . PHP_EOL; //  == 1\necho\
    \ digits(4) . PHP_EOL; //  == 0\necho digits(235) . PHP_EOL; // == 15\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpss8rnu95.php:23\n\
    Stack trace:\n#0 /tmp/tmpss8rnu95.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpss8rnu95.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $arr = array_map('intval',\
    \ str_split($n));\n    $newArr = [];\n    foreach ($arr as $elem) {\n        if\
    \ ($elem % 2 == 1) {\n            $newArr[] = $elem;\n        }\n    }\n    return\
    \ array_product($newArr);\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk830nbw6.php:29\n\
    Stack trace:\n#0 /tmp/tmpk830nbw6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk830nbw6.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $sum = 1;\n  while($n\
    \ != 0) {\n    $tmp = $n % 10;\n    if($tmp % 2 != 0) {\n      $sum *= $tmp;\n\
    \    }\n    $n = intval($n / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf2z9bep.php:31\n\
    Stack trace:\n#0 /tmp/tmpvf2z9bep.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvf2z9bep.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n    \
    \        $result *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd42ef7y.php:31\n\
    Stack trace:\n#0 /tmp/tmpbd42ef7y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbd42ef7y.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $answer = 1;\n  $tmp =\
    \ $n;\n  while ($tmp > 0) {\n    $last = $tmp % 10;\n    if ($last % 2 == 1) {\n\
    \      $answer *= $last;\n    }\n    $tmp = ($tmp - $last) / 10;\n  }\n  return\
    \ $answer;\n}\n\necho digits(1) . \" == 1\\n\";\necho digits(4) . \" == 0\\n\"\
    ;\necho digits(235) . \" == 15\\n\";\necho digits(255) . \" == 125\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1 == 1\n1 == 0\n15 == 15\n25 == 125\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpaz89mfsr.php:36\nStack trace:\n#0 /tmp/tmpaz89mfsr.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaz89mfsr.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $result = 1;\n    foreach ($digits as $d) {\n        if ($d % 2 != 0) {\n\
    \            $result *= $d;\n        }\n    }\n    return $result;\n}\n\necho\
    \ digits(1);\necho '<br>';\necho digits(4);\necho '<br>';\necho digits(235);\n\
    echo '<br>';\necho digits(636);\necho '<br>';\necho digits(1357);\necho '<br>';\n\
    echo digits(2468);\necho '<br>';\necho digits(4680);\necho '<br>';\necho digits(8865);\n\
    echo '<br>';\necho digits(9309);\necho '<br>';\necho digits(1234);\necho '<br>';\n\
    echo digits(2345);\necho '<br>';\necho digits(3456);\necho '<br>';\necho digits(4567);\n\
    echo '<br>';\necho digits(5678);\necho '<br>';\necho digits(6789);\necho '<br>';\n\
    echo digits(7890);\necho '<br>';\necho digits(56780);\necho '<br>';\necho digits(67892);\n\
    echo '<br>';\necho digits(78903);\necho '<br>';\necho digits(89012);\necho '<br>';\n\
    echo digits(90123);\necho '<br>';\necho digits(01234);\necho '<br>';\necho digits(12345);\n\
    echo '<br>';\necho digits(23456);\necho '<br>';\necho digits(34567);\necho '<br>';\n\
    echo digits(45678);\necho '<br>';\necho digits(56789);\necho '<br>';\necho digits(67890);\n\
    echo '<br>';\necho digits(567890);\necho '<br>';\necho digits(678901);\necho '<br>';\n\
    echo digits(789012);\necho '<br>';\necho digits(890123);\necho\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjumtngqb.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = str_split($n);\n\
    \  $total = 1;\n  foreach ($n as $number) {\n    if ($number % 2 !== 0) {\n  \
    \    $total *= $number;\n    }\n  }\n  return $total;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm29v4eep.php:29\n\
    Stack trace:\n#0 /tmp/tmpm29v4eep.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpm29v4eep.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $result = 0;\n  for($i\
    \ = 1; $i <= $n; $i += 2) {\n    $result += $i;\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5c_7zf9.php:21\n\
    Stack trace:\n#0 /tmp/tmpj5c_7zf9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpj5c_7zf9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $nums = str_split($n);\n\
    \  $sum = 1;\n  foreach ($nums as $num) {\n    if ($num % 2 !== 0) {\n      $sum\
    \ *= $num;\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsjibc4f.php:29\n\
    Stack trace:\n#0 /tmp/tmptsjibc4f.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptsjibc4f.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  return array_product(array_filter(str_split($n),\
    \ function($n) {\n    return $n & 1;\n  }));\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0a_nocm.php:25\n\
    Stack trace:\n#0 /tmp/tmps0a_nocm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps0a_nocm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $result = 0;\n  $nArray\
    \ = str_split($n);\n  foreach ($nArray as $int) {\n    if($int % 2 === 1) {\n\
    \      $result *= $int;\n    }\n  }\n  return $result;\n}\n\necho digits(235);\n\
    \ ?>\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = (string)$n;\n  $sum\
    \ = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 === 1) {\n\
    \      $sum *= $n[$i];\n    }\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyfd0xed.php:29\n\
    Stack trace:\n#0 /tmp/tmpiyfd0xed.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpiyfd0xed.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    return array_product(array_filter(str_split($n),\
    \ function($v) {\n        return ($v % 2 != 0);\n    }));\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzbtjy5lo.php:24\n\
    Stack trace:\n#0 /tmp/tmpzbtjy5lo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzbtjy5lo.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $result = 1;\n  foreach\
    \ (str_split($n) as $value) {\n    if ($value % 2 !== 0) {\n      $result *= $value;\n\
    \    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0roq00e.php:28\n\
    Stack trace:\n#0 /tmp/tmpw0roq00e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw0roq00e.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $arr = str_split($n);\n\
    \  $product = 1;\n  foreach ($arr as $a) {\n    if ($a % 2 == 1) {\n      $product\
    \ *= $a;\n    }\n  }\n  return $product;\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkuar10vx.php:29\n\
    Stack trace:\n#0 /tmp/tmpkuar10vx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkuar10vx.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $product = 1;\n  $arr\
    \ = str_split($n);\n  foreach ($arr as $num) {\n    if ($num % 2 === 1) {\n  \
    \    $product *= $num;\n    }\n  }\n  return $product === 1 ? 0 : $product;\n\
    }\n\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) .\
    \ PHP_EOL;\necho digits(37) . PHP_EOL;\necho digits(8) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n0\n15\n21\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpofc4v_xo.php:31\n\
    Stack trace:\n#0 /tmp/tmpofc4v_xo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpofc4v_xo.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $str = $n . '';\n  \
    \  $arr = [];\n    $result = 1;\n    for ($i = 0; $i < strlen($str); $i++) {\n\
    \        if ($str[$i] % 2 == 1) {\n            $arr[] = $str[$i];\n        }\n\
    \    }\n    if (empty($arr)) {\n        return 0;\n    }\n    foreach ($arr as\
    \ $val) {\n        $result *= $val;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $digits = str_split($n);\n\
    \  $odd = 1;\n  foreach ($digits as $digit) {\n    if ($digit % 2 !== 0) {\n \
    \     $odd *= $digit;\n    }\n  }\n  return $odd;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rz85ena.php:29\n\
    Stack trace:\n#0 /tmp/tmp_rz85ena.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_rz85ena.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $arr = str_split($n);\n\
    \    $odd = function($item) {\n        return $item % 2 != 0;\n    };\n    $odds\
    \ = array_filter($arr, $odd);\n    $total = array_product($odds);\n    return\
    \ $total;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyudsya62.php:28\n\
    Stack trace:\n#0 /tmp/tmpyudsya62.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyudsya62.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $digits = str_split($n);\n\
    \  $odds = array_reduce($digits, function($carry, $item) {\n    if ($item % 2\
    \ !== 0) {\n      $carry *= $item;\n    }\n    return $carry;\n  }, 1);\n  return\
    \ $odds === 1 ? 0 : $odds;\n}\n\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqs_dpvb.php:28\n\
    Stack trace:\n#0 /tmp/tmpxqs_dpvb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxqs_dpvb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $digits = str_split($n);\n\
    \  $result = 1;\n  foreach ($digits as $digit) {\n    if ($digit % 2 !== 0) {\n\
    \      $result *= $digit;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmyz8as00.php:29\n\
    Stack trace:\n#0 /tmp/tmpmyz8as00.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmyz8as00.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n_str = strval($n);\n\
    \  $count = strlen($n_str);\n  $result = 1;\n  for ($i = 0; $i < $count; $i++)\
    \ {\n    $digit = intval($n_str[$i]);\n    if ($digit % 2 == 1) {\n      $result\
    \ *= $digit;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjschdq62.php:31\n\
    Stack trace:\n#0 /tmp/tmpjschdq62.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjschdq62.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    return array_product(array_filter(str_split($n),\
    \ function($val) {\n      return $val % 2 !== 0;\n    }));\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndmca3je.php:24\n\
    Stack trace:\n#0 /tmp/tmpndmca3je.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpndmca3je.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $sum = 1;\n  for ($i =\
    \ 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 === 1) {\n      $sum *= $n[$i];\n\
    \    }\n  }\n  return $sum;\n}\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\n\
    echo digits(235) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3srsf_e.php:26\n\
    Stack trace:\n#0 /tmp/tmpy3srsf_e.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy3srsf_e.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $product = 1;\n  while\
    \ ($n >= 1) {\n    $digit = $n % 10;\n    if ($digit % 2 != 0) {\n      $product\
    \ *= $digit;\n    }\n    $n /= 10;\n  }\n  return $product;\n}\n\necho digits(1)\
    \ . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphn7pj7mj.php:34\n\
    Stack trace:\n#0 /tmp/tmphn7pj7mj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphn7pj7mj.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t$arr = str_split($n);\n\
    \t$result = 1;\n\tforeach ($arr as $value) {\n\t\tif($value % 2 != 0) {\n\t\t\t\
    $result *= $value;\n\t\t}\n\t}\n\treturn $result;\n}\n$n = 235;\necho digits($n);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0by_yw0.php:31\n\
    Stack trace:\n#0 /tmp/tmpk0by_yw0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk0by_yw0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $arr = array_map('intval',\
    \ str_split($n));\n  $odd = array_filter($arr, function($v) { return ($v % 2 ==\
    \ 1); });\n  return (count($odd) == 0) ? 0 : array_product($odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $product = 1;\n  $numbers\
    \ = str_split($n);\n  foreach ($numbers as $number) {\n    if ($number % 2 !=\
    \ 0) {\n      $product *= $number;\n    }\n  }\n  return $product;\n}\n\necho\
    \ digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlvld6o4.php:33\n\
    Stack trace:\n#0 /tmp/tmpvlvld6o4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvlvld6o4.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $temp = 0;\n  $temp1 =\
    \ 1;\n  while($n!=0){\n    $temp = $n%10;\n    if($temp%2!=0){\n      $temp1 =\
    \ $temp1*$temp;\n    }\n    $n = intval($n/10);\n  }\n  return $temp1;\n}\necho\
    \ \"digits(1)  == 1 <br>\";\necho digits(1)  == 1 ? \"true<br>\" : \"false<br>\"\
    ;\necho \"digits(4)  == 0 <br>\";\necho digits(4)  == 0 ? \"true<br>\" : \"false<br>\"\
    ;\necho \"digits(235) == 15 <br>\";\necho digits(235) == 15 ? \"true<br>\" : \"\
    false<br>\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "digits(1)  == 1 <br>true<br>digits(4)  == 0 <br>false<br>digits(235) ==\
    \ 15 <br>true<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbsg_11b.php:37\n\
    Stack trace:\n#0 /tmp/tmpcbsg_11b.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcbsg_11b.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $result = 1;\n  $digits\
    \ = str_split($n);\n  foreach ($digits as $digit) {\n    if ($digit % 2 === 1)\
    \ {\n      $result *= $digit;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3f75kwg.php:30\n\
    Stack trace:\n#0 /tmp/tmpg3f75kwg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg3f75kwg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $product = 1;\n    $arr\
    \ = str_split($n);\n    foreach ($arr as $value) {\n        if ($value % 2 ===\
    \ 1) {\n            $product *= $value;\n        }\n    }\n    return $product;\n\
    }\n\necho digits(2), PHP_EOL;\necho digits(235), PHP_EOL;\necho digits(59), PHP_EOL;\n\
    echo digits(6), PHP_EOL;\necho digits(8), PHP_EOL;\necho digits(0), PHP_EOL;\n\
    echo digits(9), PHP_EOL;\necho digits(48), PHP_EOL;\necho digits(96), PHP_EOL;\n\
    echo digits(36), PHP_EOL;\necho digits(7), PHP_EOL;\necho digits(1), PHP_EOL;\n\
    echo digits(4), PHP_EOL;\necho digits(7), PHP_EOL;\necho digits(2), PHP_EOL;\n\
    echo digits(8), PHP_EOL;\necho digits(6), PHP_EOL;\necho digits(0), PHP_EOL;\n\
    echo digits(9), PHP_EOL;\necho digits(35), PHP_EOL;\necho digits(3), PHP_EOL;\n\
    echo digits(1), PHP_EOL;\necho digits(4), PHP_EOL;\necho digits(5), PHP_EOL;\n\
    echo digits(2), PHP_EOL;\necho digits(8), PHP_EOL;\necho digits(6), PHP_EOL;\n\
    echo digits(0), PHP_EOL;\necho digits(9), PHP_EOL;\necho digits(3), PHP_EOL;\n\
    echo digits(5), PHP_EOL;\necho digits(3), PHP_EOL;\necho digits(1), PHP_EOL;\n\
    echo digits(4), PHP_EOL;\necho digits(5), PHP_EOL;\necho digits(2), PHP_EOL;\n\
    echo digits(8), PHP_EOL;\necho digits(6), PHP_EOL;\necho digits(0), PHP_EOL;\n\
    echo digits(9), PHP_EOL;\necho digits(3), PHP_\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9wiub00x.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $odd = array_filter(str_split($n),\
    \ function($i) { return $i % 2 !== 0; });\n    return array_product($odd) == 0\
    \ ? 0 : array_product($odd);\n}\n\nvar_dump(digits(1));\nvar_dump(digits(4));\n\
    var_dump(digits(235));\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "int(1)\nint(1)\nint(15)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqvwqch3f.php:27\nStack trace:\n#0 /tmp/tmpqvwqch3f.php(30): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqvwqch3f.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $prod = 1;\n  for ($i\
    \ = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 == 1) {\n      $prod *= $n[$i];\n\
    \    }\n  }\n  return $prod;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ekkbym3.php:22\n\
    Stack trace:\n#0 /tmp/tmp_ekkbym3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_ekkbym3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $new = [];\n    $res\
    \ = 1;\n    $stringN = strval($n);\n    $split = str_split($stringN);\n    foreach\
    \ ($split as $num) {\n        if ($num % 2 == 1) {\n            $new[] = $num;\n\
    \        }\n    }\n    foreach ($new as $num) {\n        $res *= $num;\n    }\n\
    \    return $res;\n}\n\necho digits(235);\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_m3rn_2.php:36\n\
    Stack trace:\n#0 /tmp/tmpm_m3rn_2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm_m3rn_2.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n   $array = str_split($n);\n\
    \   $total = 1;\n   foreach ($array as $num) {\n      if ($num % 2 != 0) {\n \
    \        $total *= $num;\n      }\n   }\n   return $total == 1 ? 0 : $total;\n\
    }\n\necho digits(2352);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplm7gs61l.php:27\n\
    Stack trace:\n#0 /tmp/tmplm7gs61l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplm7gs61l.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $num = $n;\n    $result\
    \ = 1;\n    $listNum = [];\n    $i = 0;\n    while ($num != 0) {\n        $num\
    \ = (int)($num / 10);\n        $listNum[$i] = $num;\n        $i++;\n    }\n  \
    \  $lastIndex = count($listNum) - 1;\n    $num = $n;\n    for ($i = $lastIndex;\
    \ $i >= 0; $i--) {\n        $result = $result * ($num % 10);\n        $num = $listNum[$i];\n\
    \    }\n    return $result;\n}\n\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9it6txg.php:34\n\
    Stack trace:\n#0 /tmp/tmpe9it6txg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpe9it6txg.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = str_split($n);\n\
    \  $x = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $x *=\
    \ $value;\n    }\n  }\n  return $x == 1 ? 0 : $x;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xc2jexn.php:25\n\
    Stack trace:\n#0 /tmp/tmp0xc2jexn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0xc2jexn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    foreach\
    \ (str_split($n) as $digit) {\n        if ($digit % 2 !== 0) {\n            $result\
    \ *= $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwfctms6.php:29\n\
    Stack trace:\n#0 /tmp/tmphwfctms6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphwfctms6.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $product = 1;\n    $nString\
    \ = strval($n);\n    for ($i = 0; $i < strlen($nString); $i++) {\n        if ($nString[$i]\
    \ % 2 !== 0) {\n            $product *= $nString[$i];\n        }\n    }\n    return\
    \ $product;\n}\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0lk350a2.php:30\n\
    Stack trace:\n#0 /tmp/tmp0lk350a2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0lk350a2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $total = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $number) {\n    if ($number % 2 != 0) {\n      $total *= $number;\n\
    \    }\n  }\n  return $total;\n}\necho digits(1) . \"<br>\";\necho digits(4) .\
    \ \"<br>\";\necho digits(235) . \"<br>\";\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>15<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd0fz45k.php:33\n\
    Stack trace:\n#0 /tmp/tmptd0fz45k.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptd0fz45k.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $product = 1;\n  foreach\
    \ (str_split($n) as $n) {\n    if ($n % 2 != 0) {\n      $product *= $n;\n   \
    \ }\n  }\n  return $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_lihtfk.php:28\n\
    Stack trace:\n#0 /tmp/tmp3_lihtfk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3_lihtfk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $number = str_split($n);\n\
    \    $prod = 1;\n    foreach ($number as $num) {\n        if ($num % 2 == 1) {\n\
    \            $prod *= $num;\n        }\n    }\n    return $prod;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gre2hqb.php:29\n\
    Stack trace:\n#0 /tmp/tmp1gre2hqb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1gre2hqb.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  if($n < 0) {\n    $n =\
    \ abs($n);\n  }\n  $n = (string)$n;\n  $arr = str_split($n);\n  $res = 1;\n  foreach($arr\
    \ as $val) {\n    if(($val % 2) !== 0) {\n      $res *= $val;\n    }\n  }\n  return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs9gs80i.php:34\n\
    Stack trace:\n#0 /tmp/tmpcs9gs80i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcs9gs80i.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $arr = str_split($n);\n\
    \  $result = 1;\n  foreach ($arr as $digit) {\n    if ($digit % 2 === 1) {\n \
    \     $result *= $digit;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj44od3lw.php:29\n\
    Stack trace:\n#0 /tmp/tmpj44od3lw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj44od3lw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $str = strval($n);\n\
    \    $odds = array_filter(str_split($str), function($element) {\n        return\
    \ $element % 2 == 1;\n    });\n    if (count($odds) > 0) {\n        return array_product($odds);\n\
    \    } else {\n        return 0;\n    }\n}\n\necho digits(1) . \"\\n\";\necho\
    \ digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\necho digits(19) . \"\\n\"\
    ;\necho digits(18) . \"\\n\";\necho digits(24) . \"\\n\";\necho digits(31) . \"\
    \\n\";\necho digits(30) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "1\n0\n15\n9\n1\n0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $k = 1;\n    while ($n\
    \ > 0) {\n        $m = $n % 10;\n        if ($m % 2 != 0) {\n            $k *=\
    \ $m;\n        }\n        $n = floor($n / 10);\n    }\n    return $k;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfew_kk2.php:30\n\
    Stack trace:\n#0 /tmp/tmpqfew_kk2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqfew_kk2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $product = 1;\n  for ($i\
    \ = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 == 1) {\n      $product *=\
    \ $n[$i];\n    }\n  }\n  return $product;\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9z_ztig0.php:23\n\
    Stack trace:\n#0 /tmp/tmp9z_ztig0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9z_ztig0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $sum = 0;\n  $temp = $n;\n\
    \  while($temp > 0) {\n    $lastDigit = $temp % 10;\n    if ($lastDigit % 2 ==\
    \ 1) {\n      $sum *= $lastDigit;\n    }\n    $temp = ($temp - $lastDigit) / 10;\n\
    \  }\n  return $sum;\n}\necho digits(235).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51q26_0x.php:26\n\
    Stack trace:\n#0 /tmp/tmp51q26_0x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp51q26_0x.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $newArray = [];\n  $arr\
    \ = str_split($n);\n  for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i]\
    \ % 2 != 0) {\n      array_push($newArray, $arr[$i]);\n    }\n  }\n  $sum = 0;\n\
    \  if (count($newArray) > 0) {\n    $sum = array_product($newArray);\n  }\n  return\
    \ $sum;\n}\n\necho digits(235);\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: '15'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $output = 1;\n  $digits\
    \ = str_split($n);\n  foreach ($digits as $digit) {\n    if ($digit % 2 == 1)\
    \ {\n      $output *= $digit;\n    }\n  }\n  return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zsfpjb4.php:30\n\
    Stack trace:\n#0 /tmp/tmp_zsfpjb4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_zsfpjb4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $count = 0;\n    $newN\
    \ = $n;\n    $result = 1;\n    while ($newN) {\n        $number = $newN % 10;\n\
    \        if ($number % 2 !== 0) {\n            $result *= $number;\n        }\n\
    \        $newN = (int)($newN / 10);\n    }\n    return $result;\n}\n\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5ic472s.php:34\n\
    Stack trace:\n#0 /tmp/tmpu5ic472s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu5ic472s.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            $product *= $digit;\n        }\n    }\n    return $product\
    \ == 1 ? 0 : $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd47dr9wb.php:25\n\
    Stack trace:\n#0 /tmp/tmpd47dr9wb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd47dr9wb.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $digits = [];\n    $number\
    \ = str_split($n);\n    $total = 1;\n    foreach ($number as $digit) {\n     \
    \   if ($digit % 2 !== 0) {\n            $digits[] = $digit;\n        }\n    }\n\
    \    foreach ($digits as $digit) {\n        $total *= $digit;\n    }\n    return\
    \ $total;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi811f8az.php:34\n\
    Stack trace:\n#0 /tmp/tmpi811f8az.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi811f8az.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $n = (string)$n;\n \
    \   $digits = str_split($n);\n    $total = 1;\n    for ($i = 0; $i < count($digits);\
    \ $i++) {\n        if ($digits[$i] % 2 !== 0) {\n            $total *= $digits[$i];\n\
    \        }\n    }\n    return $total;\n}\n\nfunction candidate(...$args) {\n \
    \   return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz00iv2z0.php:31\n\
    Stack trace:\n#0 /tmp/tmpz00iv2z0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpz00iv2z0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $sum = 1;\n    $tmp\
    \ = \"\";\n    while ($n != 0) {\n        $tmp = $n % 10;\n        if ($tmp %\
    \ 2 != 0) {\n            $sum *= $tmp;\n        }\n        $n = (int)($n / 10);\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9p8swtm.php:31\n\
    Stack trace:\n#0 /tmp/tmpb9p8swtm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpb9p8swtm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $sum = 0;\n  for ($i =\
    \ 0; $i < strlen((string)$n); $i++) {\n    if ((int) substr((string)$n, $i, 1)\
    \ % 2 != 0) {\n      $sum += (int) substr((string)$n, $i, 1);\n    }\n  }\n  return\
    \ $sum;\n}\necho digits(235);\necho \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzpe3n8t.php:28\n\
    Stack trace:\n#0 /tmp/tmpzzpe3n8t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzzpe3n8t.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $string_n = (string)$n;\n\
    \  $sum = 1;\n  for ($i = 0; $i < strlen($string_n); $i++) {\n    if ($string_n[$i]\
    \ % 2 != 0) {\n      $sum *= $string_n[$i];\n    }\n  }\n  return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpew4u6u_a.php:29\n\
    Stack trace:\n#0 /tmp/tmpew4u6u_a.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpew4u6u_a.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $sum = 0;\n    while\
    \ ($n != 0) {\n        $sum = ($n % 10) % 2 != 0 ? $sum * ($n % 10) : $sum;\n\
    \        $n = (int)($n / 10);\n    }\n    return $sum;\n}\necho digits(1); //1\n\
    echo digits(4); //0\necho digits(235); //15\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6592dmn.php:25\n\
    Stack trace:\n#0 /tmp/tmpg6592dmn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpg6592dmn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t$ans = 1;\n\twhile($n\
    \ > 0) {\n\t\t$t = $n % 10;\n\t\tif($t % 2 == 1) $ans *= $t;\n\t\t$n /= 10;\n\t\
    }\n\treturn $ans;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk2xja79.php:29\n\
    Stack trace:\n#0 /tmp/tmpdk2xja79.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdk2xja79.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = str_split($n);\n\
    \  $answer = 0;\n  foreach ($n as $value) {\n    if ($value % 2 == 1) {\n    \
    \  $answer = $answer * $value;\n    }\n  }\n  return $answer;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevpn3gdi.php:23\n\
    Stack trace:\n#0 /tmp/tmpevpn3gdi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpevpn3gdi.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $arr = str_split($n);\n\
    \    $result = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ % 2 != 0) {\n            $result *= $arr[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho digits(2345);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphynhcdzg.php:31\n\
    Stack trace:\n#0 /tmp/tmphynhcdzg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphynhcdzg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $odd = 1;\n  while ($n\
    \ > 0) {\n    $d = $n % 10;\n    if ($d % 2 !== 0) {\n      $odd *= $d;\n    }\n\
    \    $n = floor($n / 10);\n  }\n  return $odd;\n}\n\necho digits(1) . '<br />';\n\
    echo digits(4) . '<br />';\necho digits(235) . '<br />';\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br />1<br />15<br />\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp72hzid61.php:34\nStack trace:\n#0 /tmp/tmp72hzid61.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmp72hzid61.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $str = strval($n);\n \
    \ $split_str = str_split($str);\n  $total = 1;\n  foreach ($split_str as $n) {\n\
    \    if($n % 2 != 0) {\n      $total *= $n;\n    }\n  }\n  return $total;\n}\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_pm9n32.php:31\n\
    Stack trace:\n#0 /tmp/tmpf_pm9n32.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf_pm9n32.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $output = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2 !==\
    \ 0) {\n            $output *= $digit;\n        }\n    }\n    return $output;\n\
    }\n\necho digits(1) . \"<br>\";\necho digits(4) . \"<br>\";\necho digits(235)\
    \ . \"<br>\";\necho digits(0) . \"<br>\";\necho digits(10) . \"<br>\";\necho digits(111)\
    \ . \"<br>\";\necho digits(1233) . \"<br>\";\necho digits(22) . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>15<br>1<br>1<br>1<br>9<br>1<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8btceo4d.php:38\nStack trace:\n#0 /tmp/tmp8btceo4d.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8btceo4d.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    while\
    \ ($n > 0) {\n        $temp = $n % 10;\n        if ($temp % 2 != 0)\n        \
    \    $result *= $temp;\n        $n /= 10;\n    }\n    return $result;\n}\n\n$n\
    \ = 7254;\n\necho digits($n);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "35\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1k92i4nn.php:33\n\
    Stack trace:\n#0 /tmp/tmp1k92i4nn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1k92i4nn.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $tmp = $n;\n    $sum\
    \ = 1;\n    while ($tmp > 0) {\n        $tmp2 = $tmp % 10;\n        if ($tmp2\
    \ % 2 != 0) {\n            $sum *= $tmp2;\n        }\n        $tmp = floor($tmp\
    \ / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrjkelz4.php:32\n\
    Stack trace:\n#0 /tmp/tmpcrjkelz4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcrjkelz4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $product = 1;\n  while\
    \ ($n != 0) {\n    $digit = $n % 10;\n    if ($digit % 2 == 1) {\n      $product\
    \ *= $digit;\n    }\n    $n = intval($n / 10);\n  }\n  return $product;\n}\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6sbjttf.php:31\n\
    Stack trace:\n#0 /tmp/tmpl6sbjttf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl6sbjttf.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $odd = 1;\n    $number\
    \ = str_split($n);\n    foreach ($number as $digit) {\n        if (($digit % 2)\
    \ == 1) {\n            $odd *= $digit;\n        }\n    }\n    return $odd;\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9vgw11a.php:29\n\
    Stack trace:\n#0 /tmp/tmpz9vgw11a.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz9vgw11a.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $digits = str_split($n);\n\
    \  $odd_digits = array_filter($digits, function($x) {\n    return $x % 2 !== 0;\n\
    \  });\n  return array_product($odd_digits);\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqx0_gix.php:26\n\
    Stack trace:\n#0 /tmp/tmppqx0_gix.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppqx0_gix.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $result = 1;\n  $n = (string)$n;\n\
    \  $a = str_split($n);\n  foreach ($a as $number) {\n    if ($number % 2 != 0)\
    \ {\n      $result *= $number;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_gm3upt.php:30\n\
    Stack trace:\n#0 /tmp/tmpt_gm3upt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt_gm3upt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $odd_num = 0;\n  while($n\
    \ > 0) {\n    $num = $n % 10;\n    if($num % 2 != 0) {\n      $odd_num = $odd_num\
    \ * 10 + $num;\n    }\n    $n = floor($n / 10);\n  }\n  $answer = 0;\n  while($odd_num\
    \ > 0) {\n    $answer = $answer * 10 + $odd_num % 10;\n    $odd_num = floor($odd_num\
    \ / 10);\n  }\n  return $answer;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7iqzcddq.php:33\n\
    Stack trace:\n#0 /tmp/tmp7iqzcddq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7iqzcddq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $arr = str_split(strval($n));\n\
    \    $product = 1;\n    foreach ($arr as $digit) {\n        if ($digit % 2 !==\
    \ 0) {\n            $product *= $digit;\n        }\n    }\n    return $product\
    \ === 1 ? 0 : $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpietptqje.php:25\n\
    Stack trace:\n#0 /tmp/tmpietptqje.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpietptqje.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\tif ($n == 0) return 0;\n\
    \t$product = 1;\n\twhile ($n > 0) {\n\t\t$digit = $n % 10;\n\t\tif ($digit % 2\
    \ != 0) {\n\t\t\t$product *= $digit;\n\t\t}\n\t\t$n = (int)($n / 10);\n\t}\n\t\
    return $product;\n}\necho digits(15);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfgkfwvm.php:32\n\
    Stack trace:\n#0 /tmp/tmpjfgkfwvm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjfgkfwvm.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 0;\n    $mult\
    \ = 1;\n    while ($n) {\n        $digit = $n % 10;\n        if ($digit % 2 !==\
    \ 0) {\n            $mult *= $digit;\n        }\n        $n = floor($n / 10);\n\
    \    }\n    return $mult;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb3jxn6c4.php:32\n\
    Stack trace:\n#0 /tmp/tmpb3jxn6c4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpb3jxn6c4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $arr = str_split($n);\n\
    \    $result = 1;\n    foreach ($arr as $el) {\n        if ($el % 2 !== 0) {\n\
    \            $result *= $el;\n        }\n    }\n    return $result;\n}\necho digits(1);\
    \ // 1\necho \"<br>\";\necho digits(4); // 0\necho \"<br>\";\necho digits(235);\
    \ // 15\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1<br>1<br>15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmvgt5e9.php:34\n\
    Stack trace:\n#0 /tmp/tmpsmvgt5e9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsmvgt5e9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  return array_product(array_filter(str_split($n),\
    \ function($n) { return $n % 2; }));\n}\n\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiv5ssvac.php:23\n\
    Stack trace:\n#0 /tmp/tmpiv5ssvac.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiv5ssvac.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $numbers = str_split($n);\n\
    \    $odd = [];\n    foreach ($numbers as $number) {\n        if ($number % 2\
    \ !== 0) {\n            $odd[] = $number;\n        }\n    }\n    if (count($odd)\
    \ > 0) {\n        return array_product($odd);\n    } else {\n        return 0;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t$odd = array();\n\t$results\
    \ = 0;\n\t$n = (string)$n;\n\tfor ($i=0; $i < strlen($n); $i++) { \n\t\t$odd[$i]\
    \ = $n[$i];\n\t\tif ($odd[$i] % 2 != 0){\n\t\t\t$results *= $odd[$i];\n\t\t}\n\
    \t}\n\treturn $results;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i757rvi.php:25\n\
    Stack trace:\n#0 /tmp/tmp8i757rvi.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8i757rvi.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $next = $n % 10;\n        if ($next % 2 === 1) {\n     \
    \       $product *= $next;\n        }\n        $n = floor($n / 10);\n    }\n \
    \   return $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15842te1.php:30\n\
    Stack trace:\n#0 /tmp/tmp15842te1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp15842te1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $odds = 1;\n  $digits\
    \ = str_split($n);\n  for ($i = 0; $i < count($digits); $i++) {\n    if ($digits[$i]\
    \ % 2 == 1) {\n      $odds *= $digits[$i];\n    }\n  }\n  return $odds;\n}\n\n\
    echo digits(1)  == 1, \"\\n\";\necho digits(4)  == 0, \"\\n\";\necho digits(235)\
    \ == 15, \"\\n\";\necho digits(236) == 0, \"\\n\";\necho digits(145) == 45, \"\
    \\n\";\necho digits(9)   == 9, \"\\n\";\necho digits(300) == 0, \"\\n\";\necho\
    \ digitsn\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1vl97zz2.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $result = 1;\n  $n = (string)$n;\n\
    \  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 == 1) {\n      $result\
    \ *= $n[$i];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3i7ln_kx.php:30\n\
    Stack trace:\n#0 /tmp/tmp3i7ln_kx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3i7ln_kx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $str = strval($n);\n\
    \    $odds = [];\n    for ($i = 0; $i < strlen($str); $i++) {\n        if ($str[$i]\
    \ % 2 !== 0) $odds[] = $str[$i];\n    }\n    return empty($odds) ? 0 : array_product($odds);\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t$result = 1;\n\t$n = (string)$n;\n\
    \t\n\tfor ($i = 0; $i < strlen($n); $i++) {\n\t\tif ((int)$n[$i] % 2 != 0) {\n\
    \t\t\t$result *= (int)$n[$i];\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0gg3fzvq.php:30\n\
    Stack trace:\n#0 /tmp/tmp0gg3fzvq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0gg3fzvq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $odds = 1;\n    $number\
    \ = str_split($n);\n    foreach ($number as $digit) {\n        if ($digit % 2\
    \ !== 0) {\n            $odds *= $digit;\n        }\n    }\n    return $odds;\n\
    }\n\necho digits(123);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41rdshx3.php:31\n\
    Stack trace:\n#0 /tmp/tmp41rdshx3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp41rdshx3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $output = [];\n  while\
    \ ($n >= 1) {\n    $output[] = $n % 10;\n    $n = floor($n / 10);\n  }\n  $product\
    \ = 1;\n  for ($i = 0; $i < count($output); $i++) {\n    if ($output[$i] % 2 !==\
    \ 0) {\n      $product *= $output[$i];\n    }\n  }\n  return $product;\n}\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9u41hzz.php:34\n\
    Stack trace:\n#0 /tmp/tmps9u41hzz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps9u41hzz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n_string = strval($n);\n\
    \  $digits = str_split($n_string);\n  $sum = 1;\n  foreach ($digits as $key =>\
    \ $value) {\n    if ($value % 2 != 0) {\n      $sum *= $value;\n    }\n  }\n \
    \ return $sum;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzblo6jz.php:30\n\
    Stack trace:\n#0 /tmp/tmpkzblo6jz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkzblo6jz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $chars = str_split($n);\n\
    \    $product = 1;\n    for ($i = 0; $i < count($chars); $i++) {\n        if ($chars[$i]\
    \ % 2 !== 0) {\n            $product *= $chars[$i];\n        }\n    }\n    return\
    \ $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiklpwnxr.php:29\n\
    Stack trace:\n#0 /tmp/tmpiklpwnxr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpiklpwnxr.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = (string)$n;\n  $result\
    \ = [];\n  $result = array_map(function($item) {\n    if($item % 2 == 1) {\n \
    \     return $item;\n    }\n  }, str_split($n));\n  $result = array_filter($result);\n\
    \  if(count($result) == 0) {\n    return 0;\n  }\n  return array_product($result);\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $str = (string)$n;\n \
    \ $res = 1;\n  for ($i = 0; $i < strlen($str); $i++) {\n    if ($str[$i] % 2 !=\
    \ 0) {\n      $res *= (int)$str[$i];\n    }\n  }\n  return $res;\n}\n ?>\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    while\
    \ ($n >= 1) {\n        $num = $n % 10;\n        if ($num % 2 != 0) {\n       \
    \     $result *= $num;\n        }\n        $n = ($n - $num) / 10;\n    }\n   \
    \ return $result;\n}\n$n = 4;\nvar_dump(digits($n));\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(1)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3b9ui3ja.php:32\n\
    Stack trace:\n#0 /tmp/tmp3b9ui3ja.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3b9ui3ja.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = (string)$n;\n  $sum\
    \ = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ((int)$n[$i] % 2 !== 0)\
    \ {\n      $sum *= (int)$n[$i];\n    }\n  }\n  return $sum;\n}\necho digits(1);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9ytbtvt.php:30\n\
    Stack trace:\n#0 /tmp/tmpr9ytbtvt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpr9ytbtvt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $numbers = str_split($n);\n\
    \  $oddNumbers = [];\n  foreach ($numbers as $value) {\n    if (($value % 2) !==\
    \ 0) {\n      array_push($oddNumbers, $value);\n    }\n  }\n  if (count($oddNumbers)\
    \ > 0) {\n    return array_product($oddNumbers);\n  } else {\n    return 0;\n\
    \  }\n}\n\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\necho digits(123)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "0\n15\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $product = 1;\n    for\
    \ ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 === 1) {\n       \
    \     $product *= $n[$i];\n        }\n    }\n    return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gr8urr6.php:22\n\
    Stack trace:\n#0 /tmp/tmp1gr8urr6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1gr8urr6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $s = str_split($n);\n\
    \    $result = 1;\n    foreach ($s as $item) {\n        if ($item % 2 != 0) {\n\
    \            $result *= $item;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vqht0cr.php:29\n\
    Stack trace:\n#0 /tmp/tmp2vqht0cr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2vqht0cr.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $sum = 0;\n    $temp\
    \ = 0;\n    if($n < 10) {\n        if($n % 2 == 1) {\n            return $n;\n\
    \        }\n        else {\n            return 0;\n        }\n    }\n    else\
    \ {\n        $temp = $n % 10;\n        if($temp % 2 == 1) {\n            $sum\
    \ = $temp;\n        }\n        $n = (int)($n / 10);\n        $sum *= digits($n);\n\
    \        return $sum;\n    }\n}\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygyclvw1.php:36\n\
    Stack trace:\n#0 /tmp/tmpygyclvw1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpygyclvw1.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $arr = str_split($n);\n\
    \    $result = 1;\n    foreach ($arr as $item) {\n        if ($item % 2 == 1)\
    \ {\n            $result *= $item;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpustk3s1q.php:30\n\
    Stack trace:\n#0 /tmp/tmpustk3s1q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpustk3s1q.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $str = (string)$n;\n\
    \    $prod = 1;\n    for ($i = 0; $i < strlen($str); $i++) {\n        if ((int)$str[$i]\
    \ % 2 == 1) {\n            $prod *= (int)$str[$i];\n        }\n    }\n    return\
    \ $prod;\n}\necho digits(1);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog_afzku.php:30\n\
    Stack trace:\n#0 /tmp/tmpog_afzku.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpog_afzku.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = str_split($n);\n\
    \  $prod = 1;\n  foreach ($n as $num) {\n    if ($num % 2 != 0) {\n      $prod\
    \ *= $num;\n    }\n  }\n  return $prod;\n}\n\n$n = 498;\necho digits($n);\n ?>\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "9function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = str_split( $n );\n\
    \  $newn = 0;\n  foreach($n as $x) {\n      if($x % 2 !== 0){\n          $newn\
    \ = $newn * $x;\n      }\n  }\n  return $newn;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8uva7fp.php:24\n\
    Stack trace:\n#0 /tmp/tmpf8uva7fp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpf8uva7fp.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = (string)$n;\n  $odd\
    \ = 1;\n  $len = strlen($n);\n  for ($i = 0; $i < $len; $i++) {\n    if ( $n[$i]\
    \ % 2 == 0 ) {\n      $odd *= 1;\n    } else {\n      $odd *= $n[$i];\n    }\n\
    \  }\n  return $odd;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpozbieiwg.php:32\n\
    Stack trace:\n#0 /tmp/tmpozbieiwg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpozbieiwg.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t// $arr = str_split($n);\n\
    \t// $arr2 = [];\n\t// for ($i=0; $i < count($arr); $i++) { \n\t// \tif($arr[$i]\
    \ % 2 !== 0){\n\t// \t\t$arr2[] = $arr[$i];\n\t// \t}\n\t// }\n\t// if(count($arr2)\
    \ == 0){\n\t// \treturn 0;\n\t// }\n\t// $result = array_product($arr2);\n\t//\
    \ return $result;\n\t$arr = str_split($n);\n\t$arr2 = [];\n\tforeach ($arr as\
    \ $key => $value) {\n\t\tif($value % 2 !== 0){\n\t\t\t$arr2[] = $value;\n\t\t\
    }\n\t}\n\tif(count($arr2) == 0){\n\t\treturn 0;\n\t}\n\t$result = array_product($arr2);\n\
    \treturn $result;\n}\necho digits(1).\"\\n\"; // 1\necho digits(4).\"\\n\"; //\
    \ 0\necho digits(235).\"\\n\"; // 15\necho digits(465932798213); // 245\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n0\n15\n25515"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $s = (string)$n;\n  $arr\
    \ = str_split($s);\n  $odd = array_filter($arr, function($v) { return $v & 1;\
    \ });\n  return array_product($odd);\n}\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprif1frnn.php:28\n\
    Stack trace:\n#0 /tmp/tmprif1frnn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprif1frnn.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2 != 0)\
    \ {\n            $odd *= $digit;\n        }\n    }\n    return $odd;\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tq53b09.php:30\n\
    Stack trace:\n#0 /tmp/tmp_tq53b09.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_tq53b09.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $odds = array_filter(str_split($n),\
    \ function($digit) {\n    return $digit % 2 == 1;\n  });\n  if (!$odds) return\
    \ 0;\n  return array_product($odds);\n}\n\necho digits(12); // 0\necho digits(13);\
    \ // 1\necho digits(32); // 2\necho digits(149); // 1*5 = 5\necho digits(13843);\
    \ // 1*3*3 = 9\necho digits(444444444444); // 0\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '133990'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $digits = array_map('intval',\
    \ str_split($n));\n    return array_product(array_filter($digits, function($n)\
    \ { return $n % 2 == 1; }));\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjmxu62l.php:23\n\
    Stack trace:\n#0 /tmp/tmpsjmxu62l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsjmxu62l.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = (string)$n;\n  $odd_digits\
    \ = array_filter(str_split($n), function($i) {\n    return $i & 1;\n  });\n  if(count($odd_digits)\
    \ == 0) return 0;\n  return array_reduce($odd_digits, function($carry, $item)\
    \ {\n    return $carry *= $item;\n  });\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfbfpa_r.php:24\n\
    Stack trace:\n#0 /tmp/tmpyfbfpa_r.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyfbfpa_r.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    $n\
    \ = abs($n);\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $result *= $digit;\n        }\n        $n = floor($n\
    \ / 10);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8x6hrbmr.php:32\n\
    Stack trace:\n#0 /tmp/tmp8x6hrbmr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8x6hrbmr.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $sum = 1;\n    while\
    \ ($n > 0) {\n        $sum *= ($n % 10) % 2 ? ($n % 10) : 1;\n        $n = floor($n\
    \ / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd0xo3mb.php:28\n\
    Stack trace:\n#0 /tmp/tmpfd0xo3mb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfd0xo3mb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $output = 1;\n    while($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 === 1) {\n       \
    \     $output *= $digit;\n        }\n        $n = ($n - $digit) / 10;\n    }\n\
    \    return $output;\n}\n\n$test1 = 1;\n$test2 = 4;\n$test3 = 235;\n$test4 = 567;\n\
    $test5 = 568;\n$test6 = 8738;\n$test7 = 88788;\n$test8 = 88888;\n$test9 = 998998;\n\
    $test10 = 9898889;\n$test11 = 7777777;\n$test12 = 7777778;\n\n$tests = [$test1,\
    \ $test2, $test3, $test4, $test5, $test6, $test7, $test8, $test9, $test10, $test11,\
    \ $test12];\n\nforeach ($tests as $test) {\n    echo \"digits($test) = \" . digits($test)\
    \ . \"\\n\";\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "digits(1) = 1\ndigits(4) = 1\ndigits(235) = 15\ndigits(567) = 35\ndigits(568)\
    \ = 5\ndigits(8738) = 21\ndigits(88788) = 7\ndigits(88888) = 1\ndigits(998998)\
    \ = 6561\ndigits(9898889) = 729\ndigits(7777777) = 823543\ndigits(7777778) = 117649\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbrbo3u9.php:49\nStack\
    \ trace:\n#0 /tmp/tmplbrbo3u9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplbrbo3u9.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $res = 1;\n  $arr = str_split($n);\n\
    \  foreach ($arr as $val) {\n    if ($val % 2 != 0) {\n      $res *= $val;\n \
    \   }\n  }\n  return $res == 1 ? 0 : $res;\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzym_msty.php:25\n\
    Stack trace:\n#0 /tmp/tmpzym_msty.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzym_msty.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $odd = $even = 1;\n  $n\
    \ = str_split($n);\n  foreach ($n as $digit) {\n    if ($digit % 2 == 0) {\n \
    \     $even *= $digit;\n    } else {\n      $odd *= $digit;\n    }\n  }\n  if\
    \ ($even == 1) {\n    return $odd;\n  } else {\n    return 0;\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90sb1868.php:30\n\
    Stack trace:\n#0 /tmp/tmp90sb1868.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp90sb1868.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $res = 1;\n  foreach (str_split($n)\
    \ as $v) {\n    if ($v % 2) {\n      $res *= $v;\n    }\n  }\n  return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvjzgrhfr.php:29\n\
    Stack trace:\n#0 /tmp/tmpvjzgrhfr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvjzgrhfr.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    while\
    \ ($n) {\n        $n = (int)$n;\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 != 0) {\n            $result *= $digit;\n        }\n        $n /= 10;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1fc6vcb.php:31\n\
    Stack trace:\n#0 /tmp/tmpa1fc6vcb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa1fc6vcb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $product = 1;\n    for\
    \ ($i = 0; $i < strlen($n); $i++) {\n        if (($n[$i] % 2) == 1) {\n      \
    \      $product *= $n[$i];\n        }\n    }\n    return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzf0mggg9.php:22\n\
    Stack trace:\n#0 /tmp/tmpzf0mggg9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzf0mggg9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t$result = 1;\n\t$arr =\
    \ str_split($n);\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($arr[$i] %\
    \ 2 != 0) {\n\t\t\t$result *= $arr[$i];\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nrwa8gx.php:30\n\
    Stack trace:\n#0 /tmp/tmp_nrwa8gx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_nrwa8gx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $myArray = str_split($n);\n\
    \    $oddSum = 1;\n    foreach ($myArray as $digit) {\n        if ($digit % 2\
    \ === 1) {\n            $oddSum *= $digit;\n        }\n    }\n    return $oddSum;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgky1194z.php:30\n\
    Stack trace:\n#0 /tmp/tmpgky1194z.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgky1194z.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    return array_product(array_filter(str_split($n),\
    \ 'is_odd'));\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_odd' not found or invalid function name in /tmp/tmp0yvos_mn.php on line\
    \ 9\n\nWarning: array_product() expects parameter 1 to be array, null given in\
    \ /tmp/tmp0yvos_mn.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0yvos_mn.php:17\nStack trace:\n#0 /tmp/tmp0yvos_mn.php(26): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0yvos_mn.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    for\
    \ ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 == 1) {\n        \
    \    $result *= $n[$i];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj621gx_q.php:23\n\
    Stack trace:\n#0 /tmp/tmpj621gx_q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj621gx_q.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $num = (string)$n;\n\
    \    $digits = str_split($num);\n    $result = 1;\n    for ($i = 0; $i < count($digits);\
    \ $i++) {\n        if ($digits[$i] % 2 !== 0) {\n            $result *= $digits[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhcpgbu_.php:31\n\
    Stack trace:\n#0 /tmp/tmpqhcpgbu_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqhcpgbu_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $odds = 0;\n    $nums\
    \ = str_split(strval($n));\n    for ($i = 0; $i < count($nums); $i++) {\n    \
    \    if ($nums[$i] % 2 !== 0) {\n            $odds = $odds * $nums[$i];\n    \
    \    }\n    }\n    return $odds;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3pgmykv_.php:23\n\
    Stack trace:\n#0 /tmp/tmp3pgmykv_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3pgmykv_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    $n\
    \ = str_split($n);\n    foreach ($n as $num) {\n        if (($num % 2) == 1) {\n\
    \            $result *= $num;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm84y0uwk.php:30\n\
    Stack trace:\n#0 /tmp/tmpm84y0uwk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpm84y0uwk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $digits = array_map('intval',\
    \ str_split($n));\n  return array_product(array_filter($digits, function($digit)\
    \ {\n    return $digit % 2 !== 0;\n  }));\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplquumbhv.php:25\n\
    Stack trace:\n#0 /tmp/tmplquumbhv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplquumbhv.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $odd_digits = [];\n\
    \    $n_string = strval($n);\n    $total = 1;\n    foreach (str_split($n_string)\
    \ as $digit) {\n        if ($digit % 2 != 0) {\n            $odd_digits[] = $digit;\n\
    \        }\n    }\n    if (empty($odd_digits)) {\n        return 0;\n    }\n \
    \   foreach ($odd_digits as $digit) {\n        $total *= $digit;\n    }\n    return\
    \ $total;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $prod = 1;\n  for ($i\
    \ = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 == 1) {\n      $prod *= $n[$i];\n\
    \    }\n  }\n  return $prod;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztztkxlr.php:23\n\
    Stack trace:\n#0 /tmp/tmpztztkxlr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpztztkxlr.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $str = strval($n);\n \
    \ $digits = str_split($str);\n  $odd = array_filter($digits, function($digit)\
    \ {\n    return intval($digit) % 2 == 1;\n  });\n  if (count($odd) == 0) {\n \
    \   return 0;\n  }\n  return array_reduce($odd, function($total, $value) {\n \
    \   return $total * intval($value);\n  }, 1);\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $result = 1;\n    while\
    \ ($n > 0) {\n        $remainder = $n % 10;\n        if ($remainder % 2 != 0)\
    \ {\n            $result *= $remainder;\n        }\n        $n = floor($n / 10);\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jaxm3az.php:30\n\
    Stack trace:\n#0 /tmp/tmp8jaxm3az.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8jaxm3az.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $result = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $result *= $value;\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgy6649so.php:30\n\
    Stack trace:\n#0 /tmp/tmpgy6649so.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgy6649so.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $numbers = str_split($n);\n\
    \    $product = 1;\n    for ($i = 0; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] % 2 != 0) {\n            $product *= $numbers[$i];\n        }\n\
    \    }\n    return $product;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7l9m5ls6.php:30\n\
    Stack trace:\n#0 /tmp/tmp7l9m5ls6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7l9m5ls6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t$arr = str_split($n);\n\
    \t$total = 0;\n\tforeach ($arr as $value) {\n\t\tif($value % 2 == 1) {\n\t\t\t\
    $total += $value;\n\t\t}\n\t}\n\treturn $total;\n}\n\necho digits(2345);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggnba6em.php:28\n\
    Stack trace:\n#0 /tmp/tmpggnba6em.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpggnba6em.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $sum = 0;\n  while($n\
    \ > 0) {\n    $digit = $n % 10;\n    if($digit % 2 == 1) {\n      $sum *= $digit;\n\
    \    }\n    $n /= 10;\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7d4nqey.php:24\n\
    Stack trace:\n#0 /tmp/tmp_7d4nqey.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_7d4nqey.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $string = (string)$n;\n\
    \    $result = 1;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if\
    \ ($string[$i] % 2 != 0) {\n            $result *= $string[$i];\n        }\n \
    \   }\n    return $result;\n}\necho digits(521);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8ebtgey.php:30\n\
    Stack trace:\n#0 /tmp/tmpv8ebtgey.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv8ebtgey.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $product = 1;\n    $i\
    \ = strlen($n);\n    $n = str_split($n);\n    for ($i; $i > 0; $i--) {\n     \
    \   if ($n[$i - 1] % 2 == 1) {\n            $product *= $n[$i - 1];\n        }\n\
    \    }\n    return $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6p7cmd1o.php:30\n\
    Stack trace:\n#0 /tmp/tmp6p7cmd1o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6p7cmd1o.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $num = (string)$n;\n \
    \ $result = 1;\n  for ($i = 0; $i < strlen($num); $i++) {\n    if ($num[$i] %\
    \ 2 !== 0) {\n      $result *= $num[$i];\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdi6hf2c.php:30\n\
    Stack trace:\n#0 /tmp/tmptdi6hf2c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptdi6hf2c.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $r = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $r *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $r;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmsp1_fgm.php:31\n\
    Stack trace:\n#0 /tmp/tmpmsp1_fgm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmsp1_fgm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $oddArray = [];\n  \
    \  $numberArray = str_split($n);\n    for ($i = 0; $i < count($numberArray); $i++)\
    \ {\n        if ($numberArray[$i] % 2 == 1) {\n            array_push($oddArray,\
    \ $numberArray[$i]);\n        }\n    }\n    if (count($oddArray) == 0) {\n   \
    \     return 0;\n    } else {\n        return array_product($oddArray);\n    }\n\
    }\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n0\n15\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t$n = (string)$n;\n\t$arr\
    \ = array_map('intval', str_split($n));\n\t$result = array_filter($arr, function($v)\
    \ {\n\t\treturn ($v & 1);\n\t});\n\treturn array_product($result);\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_9ibg1c.php:27\n\
    Stack trace:\n#0 /tmp/tmpf_9ibg1c.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpf_9ibg1c.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  if ($n === 0) {\n    return\
    \ 0;\n  }\n\n  $digits = str_split($n);\n  $odd = array_filter($digits, function($digit)\
    \ {\n    return $digit % 2 !== 0;\n  });\n\n  return array_product($odd);\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vr1hc1k.php:31\n\
    Stack trace:\n#0 /tmp/tmp7vr1hc1k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7vr1hc1k.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $oddProduct = 1;\n  for\
    \ ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 == 1) {\n      $oddProduct\
    \ *= $n[$i];\n    }\n  }\n  return $oddProduct;\n}\n\necho digits(1); // == 1\n\
    echo \"<br>\";\necho digits(4); // == 0\necho \"<br>\";\necho digits(235); //\
    \ == 15\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1<br>1<br>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7oc562o4.php:28\n\
    Stack trace:\n#0 /tmp/tmp7oc562o4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7oc562o4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $result = 1;\n  for ($i\
    \ = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 == 1) {\n      $result *=\
    \ $n[$i];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwyyfm1gs.php:23\n\
    Stack trace:\n#0 /tmp/tmpwyyfm1gs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwyyfm1gs.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n\t$n = str_split($n);\n\t\
    $odd_product = 1;\n\tforeach ($n as $digit) {\n\t\tif ($digit % 2 !== 0) {\n\t\
    \t\t$odd_product *= $digit;\n\t\t}\n\t}\n\treturn $odd_product;\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5o4jw2bq.php:30\n\
    Stack trace:\n#0 /tmp/tmp5o4jw2bq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5o4jw2bq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    return array_product(array_filter(str_split($n),\
    \ function($i) {\n        return $i % 2 == 1;\n    }));\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhtja2yw.php:25\n\
    Stack trace:\n#0 /tmp/tmpyhtja2yw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyhtja2yw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  return $n === 0 ? 0 :\
    \ $n % 10 % 2 === 1 ? digits((int)($n / 10)) * ($n % 10) : digits((int)($n / 10));\n\
    }\n\necho digits(1)  . PHP_EOL;\necho digits(4)  . PHP_EOL;\necho digits(235)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 262144 bytes) in /tmp/tmpt0cm08xf.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $newArray = [];\n  \
    \  $newNum = str_split($n);\n    foreach ($newNum as $number) {\n        if ($number\
    \ % 2 != 0) {\n            array_push($newArray, $number);\n        }\n    }\n\
    \    return array_product($newArray);\n}\n\nfunction candidate(...$args) {\n \
    \   return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd7e8p1s_.php:30\n\
    Stack trace:\n#0 /tmp/tmpd7e8p1s_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpd7e8p1s_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $numString = strval($n);\n\
    \  $sum = 1;\n  for ($i = 0; $i < strlen($numString); $i++) {\n    if ($numString[$i]\
    \ % 2 == 1) {\n      $sum *= $numString[$i];\n    }\n  }\n  return $sum;\n}\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyloj8532.php:30\n\
    Stack trace:\n#0 /tmp/tmpyloj8532.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyloj8532.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $odd_digits = [];\n\
    \    while($n > 0) {\n        $digit = $n % 10;\n        if($digit % 2 == 1) {\n\
    \            $odd_digits[] = $digit;\n        }\n        $n = floor($n / 10);\n\
    \    }\n    return array_product($odd_digits);\n}\n\nvar_dump(digits(1)); // 1\n\
    var_dump(digits(2)); // 0\nvar_dump(digits(6)); // 0\nvar_dump(digits(7)); //\
    \ 7\nvar_dump(digits(13)); // 7\nvar_dump(digits(100)); // 0\nvar_dump(digits(323));\
    \ // 21\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "int(1)\nint(1)\nint(1)\nint(7)\nint(3)\nint(1)\nint(9)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpwrvz_svw.php:38\nStack trace:\n\
    #0 /tmp/tmpwrvz_svw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwrvz_svw.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ == 1) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\n\n$test_data = [1, 4, 235];\nforeach ($test_data as $input) {\n    echo \"\
    Input: $input\\n\";\n    echo \"Output: \" . digits($input) . \"\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Input: 1\nOutput: 1\nInput: 4\nOutput: 1\nInput: 235\nOutput: 15\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpgr3u4hz6.php:35\nStack trace:\n\
    #0 /tmp/tmpgr3u4hz6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgr3u4hz6.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $n = str_split(strval($n));\n\
    \  $product = 1;\n  foreach ($n as $n){\n    if ($n % 2 == 1) {\n      $product\
    \ *= $n;\n    }\n  }\n  return $product;\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7o32u9tn.php:29\n\
    Stack trace:\n#0 /tmp/tmp7o32u9tn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7o32u9tn.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $nums = str_split($n);\n\
    \    $odds = 0;\n    foreach ($nums as $number) {\n        if ($number % 2 ==\
    \ 1) {\n            $odds += $number;\n        }\n    }\n    return $odds;\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp58ifcqd3.php:26\n\
    Stack trace:\n#0 /tmp/tmp58ifcqd3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp58ifcqd3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $array = str_split($n);\n\
    \    $product = 1;\n    for ($i = 0; $i < count($array); $i++) {\n        if ($array[$i]\
    \ % 2 != 0) {\n            $product *= $array[$i];\n        }\n    }\n    return\
    \ $product;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4599a3bi.php:30\n\
    Stack trace:\n#0 /tmp/tmp4599a3bi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4599a3bi.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $odd_sum = 0;\n  $splited_array\
    \ = str_split($n);\n  foreach ($splited_array as $value) {\n    if ($value % 2\
    \ != 0) {\n      $odd_sum += $value;\n    }\n  }\n  return $odd_sum;\n}\necho\
    \ digits(1)  == 1;\necho digits(4)  == 0;\necho digits(235) == 15;\n ?>\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $string = $n.\"\";\n\
    \    $total = 1;\n    for($i = 0; $i < strlen($string); $i++){\n        if($string[$i]\
    \ % 2 == 1){\n            $total *= $string[$i];\n        }\n    }\n    return\
    \ $total;\n}\n\n$total = digits(2356);\necho \"Product of odd digits = \".$total;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Product of odd digits = 15\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpabz3sq2y.php:32\nStack trace:\n#0 /tmp/tmpabz3sq2y.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpabz3sq2y.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $array = str_split($n);\n\
    \  $output = 1;\n  foreach ($array as $value) {\n    if ($value % 2 != 0) {\n\
    \      $output *= $value;\n    }\n  }\n  return $output != 1 ? $output : 0;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zecu5ka.php:25\n\
    Stack trace:\n#0 /tmp/tmp0zecu5ka.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0zecu5ka.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $a = str_split($n);\n\
    \    $r = 1;\n    foreach ($a as $v) {\n        if ($v % 2 !== 0) {\n        \
    \    $r *= $v;\n        }\n    }\n    return $r;\n}\necho digits(1);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnd588nle.php:30\n\
    Stack trace:\n#0 /tmp/tmpnd588nle.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnd588nle.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $sum = 1;\n  $n = str_split(strval($n));\n\
    \  foreach ($n as $num) {\n    if ($num % 2 != 0) {\n      $sum *= $num;\n   \
    \ }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucsiwi95.php:30\n\
    Stack trace:\n#0 /tmp/tmpucsiwi95.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpucsiwi95.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $prod = 1;\n  $n = array_map('intval',\
    \ str_split($n));\n  foreach ($n as $i) {\n    if ($i % 2 == 1) {\n      $prod\
    \ *= $i;\n    }\n  }\n  return $prod;\n}\n\necho digits(1);\necho '<br>';\necho\
    \ digits(4);\necho '<br>';\necho digits(235);\necho '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>15<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4jhe2ll.php:37\n\
    Stack trace:\n#0 /tmp/tmpf4jhe2ll.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpf4jhe2ll.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $product = 1;\n  while\
    \ ($n > 0) {\n    $digit = $n % 10;\n    if ($digit % 2 == 1) $product *= $digit;\n\
    \    $n = floor($n / 10);\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\
    \ // 1\necho digits(4) . PHP_EOL; // 0\necho digits(235) . PHP_EOL; // 15\n\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmzb0pez.php:32\n\
    Stack trace:\n#0 /tmp/tmpjmzb0pez.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjmzb0pez.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n   $result = 0;\n   $n =\
    \ (string)$n;\n   for ($i = 0; $i < strlen($n); $i++) {\n       if ($n[$i] % 2\
    \ == 1) {\n           $result = $result * $n[$i];\n       }\n   }\n   return $result;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprqehdv2g.php:23\n\
    Stack trace:\n#0 /tmp/tmprqehdv2g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprqehdv2g.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $numbers = str_split($n);\n\
    \    $result = 1;\n    foreach ($numbers as $num) {\n        if ($num % 2 !==\
    \ 0) {\n            $result *= $num;\n        }\n    }\n    return $result > 1\
    \ ? $result : 0;\n}\necho digits(1)  . \"<br>\"; // == 1\necho digits(4)  . \"\
    <br>\"; // == 0\necho digits(235) . \"<br>\"; // == 15\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0<br>0<br>15<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52tggfmq.php:28\n\
    Stack trace:\n#0 /tmp/tmp52tggfmq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp52tggfmq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $digitArr = str_split($n);\n\
    \    $product = 1;\n    foreach ($digitArr as $digit) {\n        if ($digit %\
    \ 2 === 1) {\n            $product *= $digit;\n        }\n    }\n    return $product\
    \ === 1 ? 0 : $product;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y0own18.php:26\n\
    Stack trace:\n#0 /tmp/tmp6y0own18.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6y0own18.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    if ( $n < 0 ) {\n  \
    \      return 0;\n    }\n\n    $n = (string)$n;\n    $length = strlen($n);\n \
    \   $solution = 1;\n\n    for ($i = 0; $i < $length; $i++) {\n        if ( $n[$i]\
    \ % 2 != 0 ) {\n            $solution *= $n[$i];\n        }\n    }\n\n    return\
    \ $solution == 1 ? 0 : $solution;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuc_ti1u.php:33\n\
    Stack trace:\n#0 /tmp/tmppuc_ti1u.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppuc_ti1u.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    return implode('', array_filter(str_split($n),\
    \ function($n) {\n        return $n % 2;\n    })) ?: 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuw75im30.php:19\n\
    Stack trace:\n#0 /tmp/tmpuw75im30.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuw75im30.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  if ($n<0) return 0;\n\
    \  $result = 1;\n  for ($i=0; $i < strlen($n); $i++) {\n    if (substr($n, $i,\
    \ 1)%2!=0) {\n      $result *= substr($n, $i, 1);\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6qrx2x4g.php:29\n\
    Stack trace:\n#0 /tmp/tmp6qrx2x4g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6qrx2x4g.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $r = 1;\n    $i = 0;\n\
    \    while ($n > 0) {\n        $i = $n % 10;\n        if ($i % 2 == 1) {\n   \
    \         $r *= $i;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $r;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsr4l4uco.php:31\n\
    Stack trace:\n#0 /tmp/tmpsr4l4uco.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsr4l4uco.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $arr= str_split($n);\n\
    \    $result = 1;\n    for ($i=0; $i < count($arr); $i++) { \n      if ($arr[$i]\
    \ % 2 !== 0) {\n        $result *= $arr[$i];\n      }\n    }\n    return $result;\n\
    \  }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8l963rh0.php:29\n\
    Stack trace:\n#0 /tmp/tmp8l963rh0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8l963rh0.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n  $s = str_split(strval($n));\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($s); $i++) {\n    if ($s[$i] % 2 != 0)\
    \ {\n      $sum += $s[$i];\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjivv1nao.php:27\n\
    Stack trace:\n#0 /tmp/tmpjivv1nao.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjivv1nao.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)\
    \  == 0\n// digits(235) == 15\nfunction digits($n) {\n    $nums = str_split($n);\n\
    \    $odds = array_filter($nums, function($x) { return $x % 2 == 1; });\n    return\
    \ array_product($odds);\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7w7v7r03.php:24\n\
    Stack trace:\n#0 /tmp/tmp7w7v7r03.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7w7v7r03.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception

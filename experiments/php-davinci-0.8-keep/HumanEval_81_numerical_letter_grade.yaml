name: HumanEval_81_numerical_letter_grade
language: php
prompt: "<?php\n// It is the last week of the semester and the teacher has to give\
  \ the grades\n// to students. The teacher has been making her own algorithm for\
  \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
  // She has given you a list of GPAs for some students and you have to write \n//\
  \ a function that can output a list of letter grades using the following table:\n\
  // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7             \
  \   A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7      \
  \          B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7\
  \                C\n// > 1.3                C-\n// > 1.0                D+ \n//\
  \ > 0.7                D \n// > 0.0                D-\n// 0.0                E\n\
  // Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C',\
  \ 'A-']\nfunction numerical_letter_grade($grades) {\n"
tests: "function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
  \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
  )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
  \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"E\", \"D-\"))\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $letter_grades = [];\n    foreach ($grades as $gpa) {\n       \
    \ if ($gpa > 4.0) {\n            array_push($letter_grades, 'A+');\n        }\
    \ elseif ($gpa > 3.7) {\n            array_push($letter_grades, 'A');\n      \
    \  } elseif ($gpa > 3.3) {\n            array_push($letter_grades, 'A-');\n  \
    \      } elseif ($gpa > 3.0) {\n            array_push($letter_grades, 'B+');\n\
    \        } elseif ($gpa > 2.7) {\n            array_push($letter_grades, 'B');\n\
    \        } elseif ($gpa > 2.3) {\n            array_push($letter_grades, 'B-');\n\
    \        } elseif ($gpa > 2.0) {\n            array_push($letter_grades, 'C+');\n\
    \        } elseif ($gpa > 1.7) {\n            array_push($letter_grades, 'C');\n\
    \        } elseif ($gpa > 1.3) {\n            array_push($letter_grades, 'C-');\n\
    \        } elseif ($gpa > 1.0) {\n            array_push($letter_grades, 'D+');\n\
    \        } elseif ($gpa > 0.7) {\n            array_push($letter_grades, 'D');\n\
    \        } elseif ($gpa > 0.0) {\n            array_push($letter_grades, 'D-');\n\
    \        } else {\n            array_push($letter_grades, 'E');\n        }\n \
    \   }\n    return $letter_grades;\n}", "    $letter_grades = [];\n    for ($i\
    \ = 0; $i < count($grades); $i++) {\n        $current_grade = $grades[$i];\n \
    \       if ($current_grade >= 4.0) {\n            array_push($letter_grades, 'A+');\n\
    \        } else if ($current_grade >= 3.7) {\n            array_push($letter_grades,\
    \ 'A');\n        } else if ($current_grade >= 3.3) {\n            array_push($letter_grades,\
    \ 'A-');\n        } else if ($current_grade >= 3.0) {\n            array_push($letter_grades,\
    \ 'B+');\n        } else if ($current_grade >= 2.7) {\n            array_push($letter_grades,\
    \ 'B');\n        } else if ($current_grade >= 2.3) {\n            array_push($letter_grades,\
    \ 'B-');\n        } else if ($current_grade >= 2.0) {\n            array_push($letter_grades,\
    \ 'C+');\n        } else if ($current_grade >= 1.7) {\n            array_push($letter_grades,\
    \ 'C');\n        } else if ($current_grade >= 1.3) {\n            array_push($letter_grades,\
    \ 'C-');\n        } else if ($current_grade >= 1.0) {\n            array_push($letter_grades,\
    \ 'D+');\n        } else if ($current_grade >= 0.7) {\n            array_push($letter_grades,\
    \ 'D');\n        } else if ($current_grade >= 0.0) {\n            array_push($letter_grades,\
    \ 'D-');\n        } else {\n            array_push($letter_grades, 'E');\n   \
    \     }\n    }\n    return $letter_grades;\n}\n\nvar_dump(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $letter_grades = array();\n    for ($i = 0; $i < count($grades);\
    \ $i++) {\n        switch ($grades[$i]) {\n            case $grades[$i] >= 4.0:\n\
    \                array_push($letter_grades, \"A+\");\n                break;\n\
    \            case $grades[$i] >= 3.7:\n                array_push($letter_grades,\
    \ \"A\");\n                break;\n            case $grades[$i] >= 3.3:\n    \
    \            array_push($letter_grades, \"A-\");\n                break;\n   \
    \         case $grades[$i] >= 3.0:\n                array_push($letter_grades,\
    \ \"B+\");\n                break;\n            case $grades[$i] >= 2.7:\n   \
    \             array_push($letter_grades, \"B\");\n                break;\n   \
    \         case $grades[$i] >= 2.3:\n                array_push($letter_grades,\
    \ \"B-\");\n                break;\n            case $grades[$i] >= 2.0:\n   \
    \             array_push($letter_grades, \"C+\");\n                break;\n  \
    \          case $grades[$i] >= 1.7:\n                array_push($letter_grades,\
    \ \"C\");\n                break;\n            case $grades[$i] >= 1.3:\n    \
    \            array_push($letter_grades, \"C-\");\n                break;\n   \
    \         case $grades[$i] >= 1.0:\n                array_push($letter_grades,\
    \ \"D+\");\n                break;\n            case $grades[$i] >= 0.7:\n   \
    \             array_push($letter_grades, \"D\");\n                break;\n   \
    \         case $grades[$i] >= 0.0:\n                array_push($letter_grades,\
    \ \"D-\");\n                break;\n            case $grades[$i] <= 0.0:\n   \
    \             array_push($letter_grades, \"E\");\n                break;\n   \
    \     }\n    }\n    return $letter_grades;\n}\n\necho \"<pre>\";\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])); //['A+', 'B', 'C", "  $grades_letter = [];\n  foreach ($grades\
    \ as $grade) {\n    if ($grade > 4.0) {\n      $grades_letter[] = 'A+';\n    }\
    \ elseif ($grade > 3.7) {\n      $grades_letter[] = 'A';\n    } elseif ($grade\
    \ > 3.3) {\n      $grades_letter[] = 'A-';\n    } elseif ($grade > 3.0) {\n  \
    \    $grades_letter[] = 'B+';\n    } elseif ($grade > 2.7) {\n      $grades_letter[]\
    \ = 'B';\n    } elseif ($grade > 2.3) {\n      $grades_letter[] = 'B-';\n    }\
    \ elseif ($grade > 2.0) {\n      $grades_letter[] = 'C+';\n    } elseif ($grade\
    \ > 1.7) {\n      $grades_letter[] = 'C';\n    } elseif ($grade > 1.3) {\n   \
    \   $grades_letter[] = 'C-';\n    } elseif ($grade > 1.0) {\n      $grades_letter[]\
    \ = 'D+';\n    } elseif ($grade > 0.7) {\n      $grades_letter[] = 'D';\n    }\
    \ elseif ($grade > 0.0) {\n      $grades_letter[] = 'D-';\n    } else {\n    \
    \  $grades_letter[] = 'E';\n    }\n  }\n  return $grades_letter;\n}\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $letters = [];\n    for ($i = 0; $i < count($grades);\
    \ $i++) {\n        $letter = '';\n        switch (true) {\n            case $grades[$i]\
    \ == 4.0:\n                $letter = 'A+';\n                break;\n         \
    \   case $grades[$i] > 3.7:\n                $letter = 'A';\n                break;\n\
    \            case $grades[$i] > 3.3:\n                $letter = 'A-';\n      \
    \          break;\n            case $grades[$i] > 3.0:\n                $letter\
    \ = 'B+';\n                break;\n            case $grades[$i] > 2.7:\n     \
    \           $letter = 'B';\n                break;\n            case $grades[$i]\
    \ > 2.3:\n                $letter = 'B-';\n                break;\n          \
    \  case $grades[$i] > 2.0:\n                $letter = 'C+';\n                break;\n\
    \            case $grades[$i] > 1.7:\n                $letter = 'C';\n       \
    \         break;\n            case $grades[$i] > 1.3:\n                $letter\
    \ = 'C-';\n                break;\n            case $grades[$i] > 1.0:\n     \
    \           $letter = 'D+';\n                break;\n            case $grades[$i]\
    \ > 0.7:\n                $letter = 'D';\n                break;\n           \
    \ case $grades[$i] > 0.0:\n                $letter = 'D-';\n                break;\n\
    \            case $grades[$i] == 0.0:\n                $letter = 'E';\n      \
    \          break;\n        }\n        array_push($letters, $letter);\n    }\n\
    \    return $letters;\n}\n$grades = [4.0, 3, 1.7, 2, 3.5];\n$result = numerical_letter_grade($grades);\n\
    print_r($result);\n", "\t$letters = [];\n\tforeach ($grades as $grade) {\n\t\t\
    if ($grade == 4.0) {\n\t\t\t$letters[] = 'A+';\n\t\t} elseif ($grade > 3.7) {\n\
    \t\t\t$letters[] = 'A';\n\t\t} elseif ($grade > 3.3) {\n\t\t\t$letters[] = 'A-';\n\
    \t\t} elseif ($grade > 3.0) {\n\t\t\t$letters[] = 'B+';\n\t\t} elseif ($grade\
    \ > 2.7) {\n\t\t\t$letters[] = 'B';\n\t\t} elseif ($grade > 2.3) {\n\t\t\t$letters[]\
    \ = 'B-';\n\t\t} elseif ($grade > 2.0) {\n\t\t\t$letters[] = 'C+';\n\t\t} elseif\
    \ ($grade > 1.7) {\n\t\t\t$letters[] = 'C';\n\t\t} elseif ($grade > 1.3) {\n\t\
    \t\t$letters[] = 'C-';\n\t\t} elseif ($grade > 1.0) {\n\t\t\t$letters[] = 'D+';\n\
    \t\t} elseif ($grade > 0.7) {\n\t\t\t$letters[] = 'D';\n\t\t} elseif ($grade >\
    \ 0.0) {\n\t\t\t$letters[] = 'D-';\n\t\t} else {\n\t\t\t$letters[] = 'E';\n\t\t\
    }\n\t}\n\treturn $letters;\n}\necho implode(', ', numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "  $letters = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+',\
    \ 'C', 'C-', 'D+', 'D', 'D-', 'E'];\n  $num_grades = [4.0, 3.7, 3.3, 3.0, 2.7,\
    \ 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0];\n  $output = [];\n  for ($i = 0; $i\
    \ < count($grades); $i++) {\n    for ($j = 0; $j < count($num_grades); $j++) {\n\
    \      if ($grades[$i] >= $num_grades[$j]) {\n        $output[] = $letters[$j];\n\
    \        break;\n      }\n    }\n  }\n  return $output;\n}\n", "  $letter_grades\
    \ = [];\n  for ($i = 0; $i < count($grades); $i++) {\n    if ($grades[$i] >= 4.0)\
    \ {\n      array_push($letter_grades, 'A+');\n    } elseif ($grades[$i] >= 3.7)\
    \ {\n      array_push($letter_grades, 'A');\n    } elseif ($grades[$i] >= 3.3)\
    \ {\n      array_push($letter_grades, 'A-');\n    } elseif ($grades[$i] >= 3.0)\
    \ {\n      array_push($letter_grades, 'B+');\n    } elseif ($grades[$i] >= 2.7)\
    \ {\n      array_push($letter_grades, 'B');\n    } elseif ($grades[$i] >= 2.3)\
    \ {\n      array_push($letter_grades, 'B-');\n    } elseif ($grades[$i] >= 2.0)\
    \ {\n      array_push($letter_grades, 'C+');\n    } elseif ($grades[$i] >= 1.7)\
    \ {\n      array_push($letter_grades, 'C');\n    } elseif ($grades[$i] >= 1.3)\
    \ {\n      array_push($letter_grades, 'C-');\n    } elseif ($grades[$i] >= 1.0)\
    \ {\n      array_push($letter_grades, 'D+');\n    } elseif ($grades[$i] >= 0.7)\
    \ {\n      array_push($letter_grades, 'D');\n    } elseif ($grades[$i] >= 0.0)\
    \ {\n      array_push($letter_grades, 'D-');\n    } else {\n      array_push($letter_grades,\
    \ 'E');\n    }\n  }\n  return $letter_grades;\n}\n", "    // TODO\n}\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])); // Should be ['A+', 'B', 'C-', 'C', 'A-']\n", "    $letter_grades\
    \ = [];\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n   \
    \         $letter_grades[] = 'A+';\n        } elseif ($grade >= 3.7) {\n     \
    \       $letter_grades[] = 'A';\n        } elseif ($grade >= 3.3) {\n        \
    \    $letter_grades[] = 'A-';\n        } elseif ($grade >= 3.0) {\n          \
    \  $letter_grades[] = 'B+';\n        } elseif ($grade >= 2.7) {\n            $letter_grades[]\
    \ = 'B';\n        } elseif ($grade >= 2.3) {\n            $letter_grades[] = 'B-';\n\
    \        } elseif ($grade >= 2.0) {\n            $letter_grades[] = 'C+';\n  \
    \      } elseif ($grade >= 1.7) {\n            $letter_grades[] = 'C';\n     \
    \   } elseif ($grade >= 1.3) {\n            $letter_grades[] = 'C-';\n       \
    \ } elseif ($grade >= 1.0) {\n            $letter_grades[] = 'D+';\n        }\
    \ elseif ($grade >= 0.7) {\n            $letter_grades[] = 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            $letter_grades[] = 'D-';\n        } else {\n\
    \            $letter_grades[] = 'E';\n        }\n    }\n    return $letter_grades;\n\
    }", "\t$letters = [];\n\t$c = count($grades);\n\tfor ($i = 0; $i < $c; $i++) {\n\
    \t\t$g = $grades[$i];\n\t\tif ($g > 3.7) {\n\t\t\t$l = 'A+';\n\t\t} else if ($g\
    \ > 3.3) {\n\t\t\t$l = 'A';\n\t\t} else if ($g > 3.0) {\n\t\t\t$l = 'A-';\n\t\t\
    } else if ($g > 2.7) {\n\t\t\t$l = 'B+';\n\t\t} else if ($g > 2.3) {\n\t\t\t$l\
    \ = 'B';\n\t\t} else if ($g > 2.0) {\n\t\t\t$l = 'B-';\n\t\t} else if ($g > 1.7)\
    \ {\n\t\t\t$l = 'C+';\n\t\t} else if ($g > 1.3) {\n\t\t\t$l = 'C';\n\t\t} else\
    \ if ($g > 1.0) {\n\t\t\t$l = 'C-';\n\t\t} else if ($g > 0.7) {\n\t\t\t$l = 'D+';\n\
    \t\t} else if ($g > 0.0) {\n\t\t\t$l = 'D';\n\t\t} else if ($g >= 0.0) {\n\t\t\
    \t$l = 'D-';\n\t\t} else {\n\t\t\t$l = 'E';\n\t\t}\n\t\t$letters[] = $l;\n\t}\n\
    \treturn $letters;\n}\n", "$letters = array(\n     'A+' => 4.0,\n     'A' => 3.7,\n\
    \     'A-' => 3.3,\n     'B+' => 3.0,\n     'B' => 2.7,\n     'B-' => 2.3,\n \
    \    'C+' => 2.0,\n     'C' => 1.7,\n     'C-' => 1.3,\n     'D+' => 1.0,\n  \
    \   'D' => 0.7,\n     'D-' => 0.0,\n     'E' => 0.0\n);\n$gpas = array_values($grades);\n\
    $letter_grade = array();\nforeach ($gpas as $grade) {\n     foreach ($letters\
    \ as $letter => $gpa) {\n          if ($grade > $gpa) {\n               $letter_grade[]\
    \ = $letter;\n               break;\n          }\n     }\n}\nreturn $letter_grade;\n\
    }\n", "    $letters = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+',\
    \ 'D', 'D-', 'E'];\n    $numericals = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7,\
    \ 1.3, 1.0, 0.7, 0.0, 0.0];\n    $result = [];\n    foreach ($grades as $grade)\
    \ {\n        foreach ($numericals as $key => $numerical) {\n            if ($grade\
    \ >= $numerical) {\n                $result[] = $letters[$key];\n            \
    \    break;\n            }\n        }\n    }\n    return $result;\n}\n$grades\
    \ = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));", "\t$num_to_letter\
    \ = array(\n\t\t'4.0'=>'A+',\n\t\t'3.7'=>'A',\n\t\t'3.3'=>'A-',\n\t\t'3.0'=>'B+',\n\
    \t\t'2.7'=>'B',\n\t\t'2.3'=>'B-',\n\t\t'2.0'=>'C+',\n\t\t'1.7'=>'C',\n\t\t'1.3'=>'C-',\n\
    \t\t'1.0'=>'D+',\n\t\t'0.7'=>'D',\n\t\t'0.0'=>'D-',\n\t\t'0.0'=>'E'\n\t);\n\t\
    $result = array();\n\tforeach ($grades as $grade) {\n\t\tif (array_key_exists($grade,\
    \ $num_to_letter)) {\n\t\t\t$result[] = $num_to_letter[$grade];\n\t\t} else {\n\
    \t\t\t$result[] = 'n/a';\n\t\t}\n\t}\n\treturn $result;\n}\n\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    // Write your code here.\n}\n", "    $new_array =\
    \ [];\n    foreach ($grades as $grade) {\n        if($grade >= 4.0) {\n      \
    \      $new_array[] = 'A+';\n        } elseif ($grade >= 3.7) {\n            $new_array[]\
    \ = 'A';\n        } elseif ($grade >= 3.3) {\n            $new_array[] = 'A-';\n\
    \        } elseif ($grade >= 3.0) {\n            $new_array[] = 'B+';\n      \
    \  } elseif ($grade >= 2.7) {\n            $new_array[] = 'B';\n        } elseif\
    \ ($grade >= 2.3) {\n            $new_array[] = 'B-';\n        } elseif ($grade\
    \ >= 2.0) {\n            $new_array[] = 'C+';\n        } elseif ($grade >= 1.7)\
    \ {\n            $new_array[] = 'C';\n        } elseif ($grade >= 1.3) {\n   \
    \         $new_array[] = 'C-';\n        } elseif ($grade >= 1.0) {\n         \
    \   $new_array[] = 'D+';\n        } elseif ($grade >= 0.7) {\n            $new_array[]\
    \ = 'D';\n        } elseif ($grade >= 0.0) {\n            $new_array[] = 'D-';\n\
    \        } else {\n            $new_array[] = 'E';\n        }\n    }\n    return\
    \ $new_array;\n}", "  $gpa_grade = [\n    '4.0' => 'A+',\n    '3.7' => 'A',\n\
    \    '3.3' => 'A-',\n    '3.0' => 'B+',\n    '2.7' => 'B',\n    '2.3' => 'B-',\n\
    \    '2.0' => 'C+',\n    '1.7' => 'C',\n    '1.3' => 'C-',\n    '1.0' => 'D+',\n\
    \    '0.7' => 'D',\n    '0.0' => 'D-',\n    '0.0' => 'E'\n  ];\n  $result = [];\n\
    \  foreach ($grades as $item) {\n    if ($item >= 4.0) {\n      $result[] = $gpa_grade['4.0'];\n\
    \    } else if ($item < 4.0 && $item >= 3.7) {\n      $result[] = $gpa_grade['3.7'];\n\
    \    } else if ($item < 3.7 && $item >= 3.3) {\n      $result[] = $gpa_grade['3.3'];\n\
    \    } else if ($item < 3.3 && $item >= 3.0) {\n      $result[] = $gpa_grade['3.0'];\n\
    \    } else if ($item < 3.0 && $item >= 2.7) {\n      $result[] = $gpa_grade['2.7'];\n\
    \    } else if ($item < 2.7 && $item >= 2.3) {\n      $result[] = $gpa_grade['2.3'];\n\
    \    } else if ($item < 2.3 && $item >= 2.0) {\n      $result[] = $gpa_grade['2.0'];\n\
    \    } else if ($item < 2.0 && $item >= 1.7) {\n      $result[] = $gpa_grade['1.7'];\n\
    \    } else if ($item < 1.7 && $item >= 1.3) {\n      $result[] = $gpa_grade['1.3'];\n\
    \    } else if ($item <", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example: print \"Hello world!\"\
    ;\n    $letters = [];\n    foreach ($grades as $grade) {\n      if ($grade >=\
    \ 4.0) {\n        $letters[] = 'A+';\n      } elseif ($grade >= 3.7) {\n     \
    \   $letters[] = 'A';\n      } elseif ($grade >= 3.3) {\n        $letters[] =\
    \ 'A-';\n      } elseif ($grade >= 3.0) {\n        $letters[] = 'B+';\n      }\
    \ elseif ($grade >= 2.7) {\n        $letters[] = 'B';\n      } elseif ($grade\
    \ >= 2.3) {\n        $letters[] = 'B-';\n      } elseif ($grade >= 2.0) {\n  \
    \      $letters[] = 'C+';\n      } elseif ($grade >= 1.7) {\n        $letters[]\
    \ = 'C';\n      } elseif ($grade >= 1.3) {\n        $letters[] = 'C-';\n     \
    \ } elseif ($grade >= 1.0) {\n        $letters[] = 'D+';\n      } elseif ($grade\
    \ >= 0.7) {\n        $letters[] = 'D';\n      } elseif ($grade >= 0.0) {\n   \
    \     $letters[] = 'D-';\n      } else {\n        $letters[] = 'E';\n      }\n\
    \    }\n    return $letters;\n}\n\nvar_dump(numerical_letter_grade([4.0, 3, 1.7,\
    \ 2, 3.5]));\n", "    $grade_array = [];\n    foreach ($grades as $grade) {\n\
    \        if($grade >= 4.0) {\n            $grade_array[] = 'A+';\n        } elseif\
    \ ($grade >= 3.7) {\n            $grade_array[] = 'A';\n        } elseif ($grade\
    \ >= 3.3) {\n            $grade_array[] = 'A-';\n        } elseif ($grade >= 3.0)\
    \ {\n            $grade_array[] = 'B+';\n        } elseif ($grade >= 2.7) {\n\
    \            $grade_array[] = 'B';\n        } elseif ($grade >= 2.3) {\n     \
    \       $grade_array[] = 'B-';\n        } elseif ($grade >= 2.0) {\n         \
    \   $grade_array[] = 'C+';\n        } elseif ($grade >= 1.7) {\n            $grade_array[]\
    \ = 'C';\n        } elseif ($grade >= 1.3) {\n            $grade_array[] = 'C-';\n\
    \        } elseif ($grade >= 1.0) {\n            $grade_array[] = 'D+';\n    \
    \    } elseif ($grade >= 0.7) {\n            $grade_array[] = 'D';\n        }\
    \ elseif ($grade >= 0.0) {\n            $grade_array[] = 'D-';\n        } else\
    \ {\n            $grade_array[] = 'E';\n        }\n    }\n    return $grade_array;\n\
    }\n", "\tforeach ($grades as $grade) {\n\t\tif ($grade >= 4.0) {\n\t\t\t$answer[]\
    \ = 'A+';\n\t\t} elseif ($grade >= 3.7) {\n\t\t\t$answer[] = 'A';\n\t\t} elseif\
    \ ($grade >= 3.3) {\n\t\t\t$answer[] = 'A-';\n\t\t} elseif ($grade >= 3.0) {\n\
    \t\t\t$answer[] = 'B+';\n\t\t} elseif ($grade >= 2.7) {\n\t\t\t$answer[] = 'B';\n\
    \t\t} elseif ($grade >= 2.3) {\n\t\t\t$answer[] = 'B-';\n\t\t} elseif ($grade\
    \ >= 2.0) {\n\t\t\t$answer[] = 'C+';\n\t\t} elseif ($grade >= 1.7) {\n\t\t\t$answer[]\
    \ = 'C';\n\t\t} elseif ($grade >= 1.3) {\n\t\t\t$answer[] = 'C-';\n\t\t} elseif\
    \ ($grade >= 1.0) {\n\t\t\t$answer[] = 'D+';\n\t\t} elseif ($grade >= 0.7) {\n\
    \t\t\t$answer[] = 'D';\n\t\t} elseif ($grade >= 0.0) {\n\t\t\t$answer[] = 'D-';\n\
    \t\t} else {\n\t\t\t$answer[] = 'E';\n\t\t}\n\t}\n\treturn $answer;\n}\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $res = [];\n    foreach ($grades as $grade) {\n  \
    \      if ($grade == 4.0) {\n            $res[] = 'A+';\n        } elseif ($grade\
    \ >= 3.7) {\n            $res[] = 'A';\n        } elseif ($grade >= 3.3) {\n \
    \           $res[] = 'A-';\n        } elseif ($grade >= 3.0) {\n            $res[]\
    \ = 'B+';\n        } elseif ($grade >= 2.7) {\n            $res[] = 'B';\n   \
    \     } elseif ($grade >= 2.3) {\n            $res[] = 'B-';\n        } elseif\
    \ ($grade >= 2.0) {\n            $res[] = 'C+';\n        } elseif ($grade >= 1.7)\
    \ {\n            $res[] = 'C';\n        } elseif ($grade >= 1.3) {\n         \
    \   $res[] = 'C-';\n        } elseif ($grade >= 1.0) {\n            $res[] = 'D+';\n\
    \        } elseif ($grade >= 0.7) {\n            $res[] = 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            $res[] = 'D-';\n        } else {\n          \
    \  $res[] = 'E';\n        }\n    }\n    return $res;\n}", "  $letters = [];\n\
    \  foreach ($grades as $grade) {\n    if ($grade >= 4.0) {\n      $letters[] =\
    \ 'A+';\n    } elseif ($grade >= 3.7) {\n      $letters[] = 'A';\n    } elseif\
    \ ($grade >= 3.3) {\n      $letters[] = 'A-';\n    } elseif ($grade >= 3.0) {\n\
    \      $letters[] = 'B+';\n    } elseif ($grade >= 2.7) {\n      $letters[] =\
    \ 'B';\n    } elseif ($grade >= 2.3) {\n      $letters[] = 'B-';\n    } elseif\
    \ ($grade >= 2.0) {\n      $letters[] = 'C+';\n    } elseif ($grade >= 1.7) {\n\
    \      $letters[] = 'C';\n    } elseif ($grade >= 1.3) {\n      $letters[] = 'C-';\n\
    \    } elseif ($grade >= 1.0) {\n      $letters[] = 'D+';\n    } elseif ($grade\
    \ >= 0.7) {\n      $letters[] = 'D';\n    } elseif ($grade >= 0.0) {\n      $letters[]\
    \ = 'D-';\n    } else {\n      $letters[] = 'E';\n    }\n  }\n  return $letters;\n\
    }", "  $gpa_array = [\n    'A+' => 4.0,\n    'A' => 3.7,\n    'A-' => 3.3,\n \
    \   'B+' => 3.0,\n    'B' => 2.7,\n    'B-' => 2.3,\n    'C+' => 2.0,\n    'C'\
    \ => 1.7,\n    'C-' => 1.3,\n    'D+' => 1.0,\n    'D' => 0.7,\n    'D-' => 0.0,\n\
    \    'E' => 0.0\n  ];\n  $letter_grades = [];\n  foreach ($grades as $grade) {\n\
    \    if ($grade > 3.7) {\n      $letter_grades[] = 'A+';\n    } else if ($grade\
    \ >= 3.3) {\n      $letter_grades[] = 'A';\n    } else if ($grade >= 3.0) {\n\
    \      $letter_grades[] = 'A-';\n    } else if ($grade >= 2.7) {\n      $letter_grades[]\
    \ = 'B+';\n    } else if ($grade >= 2.3) {\n      $letter_grades[] = 'B';\n  \
    \  } else if ($grade >= 2.0) {\n      $letter_grades[] = 'B-';\n    } else if\
    \ ($grade >= 1.7) {\n      $letter_grades[] = 'C+';\n    } else if ($grade >=\
    \ 1.3) {\n      $letter_grades[] = 'C';\n    } else if ($grade >= 1.0) {\n   \
    \   $letter_grades[] = 'C-';\n    } else if ($grade >= 0.7) {\n      $letter_grades[]\
    \ = 'D+';\n    } else if ($grade >= 0.0) {\n      $letter_grades[] = 'D';\n  \
    \  } else {\n      $letter_grades[] = 'E';\n    }\n  }\n  return $letter_grades;\n\
    }\n", "  $grades = array_map(function($grade) {\n    $grade = round($grade, 1);\n\
    \    if ($grade >= 4.0) {\n      return 'A+';\n    } else if ($grade >= 3.7) {\n\
    \      return 'A';\n    } else if ($grade >= 3.3) {\n      return 'A-';\n    }\
    \ else if ($grade >= 3.0) {\n      return 'B+';\n    } else if ($grade >= 2.7)\
    \ {\n      return 'B';\n    } else if ($grade >= 2.3) {\n      return 'B-';\n\
    \    } else if ($grade >= 2.0) {\n      return 'C+';\n    } else if ($grade >=\
    \ 1.7) {\n      return 'C';\n    } else if ($grade >= 1.3) {\n      return 'C-';\n\
    \    } else if ($grade >= 1.0) {\n      return 'D+';\n    } else if ($grade >=\
    \ 0.7) {\n      return 'D';\n    } else if ($grade >= 0.0) {\n      return 'D-';\n\
    \    } else {\n      return 'E';\n    }\n  }, $grades);\n  return $grades;\n}\n",
  "    $result = [];\n    for ($i = 0; $i < count($grades); $i++) {\n        if ($grades[$i]\
    \ >= 4.0) {\n            $result[] = 'A+';\n        } else if ($grades[$i] > 3.7)\
    \ {\n            $result[] = 'A';\n        } else if ($grades[$i] > 3.3) {\n \
    \           $result[] = 'A-';\n        } else if ($grades[$i] > 3.0) {\n     \
    \       $result[] = 'B+';\n        } else if ($grades[$i] > 2.7) {\n         \
    \   $result[] = 'B';\n        } else if ($grades[$i] > 2.3) {\n            $result[]\
    \ = 'B-';\n        } else if ($grades[$i] > 2.0) {\n            $result[] = 'C+';\n\
    \        } else if ($grades[$i] > 1.7) {\n            $result[] = 'C';\n     \
    \   } else if ($grades[$i] > 1.3) {\n            $result[] = 'C-';\n        }\
    \ else if ($grades[$i] > 1.0) {\n            $result[] = 'D+';\n        } else\
    \ if ($grades[$i] > 0.7) {\n            $result[] = 'D';\n        } else if ($grades[$i]\
    \ >= 0.0) {\n            $result[] = 'D-';\n        } else {\n            $result[]\
    \ = 'E';\n        }\n    }\n    return $result;\n}\necho json_encode(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $gpa_grade_mapping = [\n        4.0 => 'A+',\n   \
    \     3.7 => 'A',\n        3.3 => 'A-',\n        3.0 => 'B+',\n        2.7 =>\
    \ 'B',\n        2.3 => 'B-',\n        2.0 => 'C+',\n        1.7 => 'C',\n    \
    \    1.3 => 'C-',\n        1.0 => 'D+',\n        0.7 => 'D',\n        0.0 => 'D-',\n\
    \    ];\n    $letter_grades = [];\n    foreach ($grades as $grade) {\n       \
    \ if ($grade == 0) {\n            $letter_grades[] = 'E';\n            continue;\n\
    \        }\n        foreach ($gpa_grade_mapping as $gpa => $letter_grade) {\n\
    \            if ($grade > $gpa) {\n                $letter_grades[] = $letter_grade;\n\
    \                break;\n            }\n        }\n    }\n    return $letter_grades;\n\
    }", "    $grades_letters = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-',\
    \ 'D+', 'D', 'D-', 'E'];\n    $letter_grades = [];\n    foreach ($grades as $grade)\
    \ {\n        $letter_grades[] = grade_converter($grade, $grades_letters);\n  \
    \  }\n    return $letter_grades;\n}\n", "    $result = [];\n    foreach ($grades\
    \ as $grade) {\n        if ($grade >= 4.0) {\n            $result[] = 'A+';\n\
    \        } elseif ($grade >= 3.7) {\n            $result[] = 'A';\n        } elseif\
    \ ($grade >= 3.3) {\n            $result[] = 'A-';\n        } elseif ($grade >=\
    \ 3.0) {\n            $result[] = 'B+';\n        } elseif ($grade >= 2.7) {\n\
    \            $result[] = 'B';\n        } elseif ($grade >= 2.3) {\n          \
    \  $result[] = 'B-';\n        } elseif ($grade >= 2.0) {\n            $result[]\
    \ = 'C+';\n        } elseif ($grade >= 1.7) {\n            $result[] = 'C';\n\
    \        } elseif ($grade >= 1.3) {\n            $result[] = 'C-';\n        }\
    \ elseif ($grade >= 1.0) {\n            $result[] = 'D+';\n        } elseif ($grade\
    \ >= 0.7) {\n            $result[] = 'D';\n        } elseif ($grade >= 0.0) {\n\
    \            $result[] = 'D-';\n        } else {\n            $result[] = 'E';\n\
    \        }\n    }\n    return $result;\n}\n", "\t$result = [];\n\tforeach ($grades\
    \ as $grade) {\n\t\tswitch ($grade) {\n\t\t\tcase $grade == 4.0:\n\t\t\t\t$result[]\
    \ = 'A+';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 3.7:\n\t\t\t\t$result[] = 'A';\n\
    \t\t\t\tbreak;\n\t\t\tcase $grade > 3.3:\n\t\t\t\t$result[] = 'A-';\n\t\t\t\t\
    break;\n\t\t\tcase $grade > 3.0:\n\t\t\t\t$result[] = 'B+';\n\t\t\t\tbreak;\n\t\
    \t\tcase $grade > 2.7:\n\t\t\t\t$result[] = 'B';\n\t\t\t\tbreak;\n\t\t\tcase $grade\
    \ > 2.3:\n\t\t\t\t$result[] = 'B-';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 2.0:\n\
    \t\t\t\t$result[] = 'C+';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 1.7:\n\t\t\t\t\
    $result[] = 'C';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 1.3:\n\t\t\t\t$result[]\
    \ = 'C-';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 1.0:\n\t\t\t\t$result[] = 'D+';\n\
    \t\t\t\tbreak;\n\t\t\tcase $grade > 0.7:\n\t\t\t\t$result[] = 'D';\n\t\t\t\tbreak;\n\
    \t\t\tcase $grade > 0.0:\n\t\t\t\t$result[] = 'D-';\n\t\t\t\tbreak;\n\t\t\tcase\
    \ $grade == 0.0:\n\t\t\t\t$result[] = 'E';\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}", "    \n}\n\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));",
  "\t$grades_result = [];\n\tforeach ($grades as $grade) {\n\t\tif($grade < 1.0){\n\
    \t\t\tif($grade > 0.7){\n\t\t\t\t$grades_result[] = 'D+';\n\t\t\t}elseif($grade\
    \ > 0.0){\n\t\t\t\t$grades_result[] = 'D';\n\t\t\t}else{\n\t\t\t\t$grades_result[]\
    \ = 'E';\n\t\t\t}\n\t\t}elseif($grade < 2.0){\n\t\t\tif($grade > 1.7){\n\t\t\t\
    \t$grades_result[] = 'C+';\n\t\t\t}elseif($grade > 1.3){\n\t\t\t\t$grades_result[]\
    \ = 'C';\n\t\t\t}else{\n\t\t\t\t$grades_result[] = 'C-';\n\t\t\t}\n\t\t}elseif($grade\
    \ < 3.0){\n\t\t\tif($grade > 2.7){\n\t\t\t\t$grades_result[] = 'B+';\n\t\t\t}elseif($grade\
    \ > 2.3){\n\t\t\t\t$grades_result[] = 'B';\n\t\t\t}else{\n\t\t\t\t$grades_result[]\
    \ = 'B-';\n\t\t\t}\n\t\t}elseif($grade < 4.0){\n\t\t\tif($grade > 3.7){\n\t\t\t\
    \t$grades_result[] = 'A';\n\t\t\t}elseif($grade > 3.3){\n\t\t\t\t$grades_result[]\
    \ = 'A-';\n\t\t\t}else{\n\t\t\t\t$grades_result[] = 'A+';\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn $grades_result;\n}", "\t$grade_ref = array(\n\t\t'A+' => 4.0,\n\t\t\
    'A' => 3.7,\n\t\t'A-' => 3.3,\n\t\t'B+' => 3.0,\n\t\t'B' => 2.7,\n\t\t'B-' =>\
    \ 2.3,\n\t\t'C+' => 2.0,\n\t\t'C' => 1.7,\n\t\t'C-' => 1.3,\n\t\t'D+' => 1.0,\n\
    \t\t'D' => 0.7,\n\t\t'D-' => 0.0,\n\t\t'E' => 0.0\n\t);\n\t$result = array();\n\
    \tforeach ($grades as $grade) {\n\t\tforeach ($grade_ref as $key => $value) {\n\
    \t\t\tif ($grade >= $value) {\n\t\t\t\t$result[] = $key;\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $result;\n}\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\n$grades2\
    \ = [2.5, 3.5, 2.5, 2.0, 3.0, 2.5, 2.5, 2.5, 2.0, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,\
    \ 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,\
    \ 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,\
    \ 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5,", "    $output\
    \ = [];\n    foreach ($grades as $gpa) {\n        switch (true) {\n          \
    \  case $gpa == 4.0:\n                $output[] = 'A+';\n                break;\n\
    \            case $gpa > 3.7:\n                $output[] = 'A';\n            \
    \    break;\n            case $gpa > 3.3:\n                $output[] = 'A-';\n\
    \                break;\n            case $gpa > 3.0:\n                $output[]\
    \ = 'B+';\n                break;\n            case $gpa > 2.7:\n            \
    \    $output[] = 'B';\n                break;\n            case $gpa > 2.3:\n\
    \                $output[] = 'B-';\n                break;\n            case $gpa\
    \ > 2.0:\n                $output[] = 'C+';\n                break;\n        \
    \    case $gpa > 1.7:\n                $output[] = 'C';\n                break;\n\
    \            case $gpa > 1.3:\n                $output[] = 'C-';\n           \
    \     break;\n            case $gpa > 1.0:\n                $output[] = 'D+';\n\
    \                break;\n            case $gpa > 0.7:\n                $output[]\
    \ = 'D';\n                break;\n            case $gpa > 0.0:\n             \
    \   $output[] = 'D-';\n                break;\n            case $gpa == 0.0:\n\
    \                $output[] = 'E';\n                break;\n        }\n    }\n\
    \    return $output;\n}\n", "    $output = [];\n    foreach ($grades as $grade)\
    \ {\n        if ($grade == 4.0) {\n            $output[] = 'A+';\n        } elseif\
    \ ($grade > 3.7) {\n            $output[] = 'A';\n        } elseif ($grade > 3.3)\
    \ {\n            $output[] = 'A-';\n        } elseif ($grade > 3.0) {\n      \
    \      $output[] = 'B+';\n        } elseif ($grade > 2.7) {\n            $output[]\
    \ = 'B';\n        } elseif ($grade > 2.3) {\n            $output[] = 'B-';\n \
    \       } elseif ($grade > 2.0) {\n            $output[] = 'C+';\n        } elseif\
    \ ($grade > 1.7) {\n            $output[] = 'C';\n        } elseif ($grade > 1.3)\
    \ {\n            $output[] = 'C-';\n        } elseif ($grade > 1.0) {\n      \
    \      $output[] = 'D+';\n        } elseif ($grade > 0.7) {\n            $output[]\
    \ = 'D';\n        } elseif ($grade > 0.0) {\n            $output[] = 'D-';\n \
    \       } else {\n            $output[] = 'E';\n        }\n    }\n    return $output;\n\
    }\necho implode(', ', numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));", "  //\
    \ Write your code here...\n}\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));\n",
  "    $grade_equation = array(\n        'A+' => 4.0,\n        'A' => 3.7,\n     \
    \   'A-' => 3.3,\n        'B+' => 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n\
    \        'C+' => 2.0,\n        'C' => 1.7,\n        'C-' => 1.3,\n        'D+'\
    \ => 1.0,\n        'D' => 0.7,\n        'D-' => 0.0,\n        'E' => 0.0\n   \
    \ );\n    // Your code here\n    $result = [];\n    foreach ($grades as $grade)\
    \ {\n        foreach ($grade_equation as $key => $value) {\n            if ($grade\
    \ > $value) {\n                $result[] = $key;\n                break;\n   \
    \         }\n        }\n    }\n    return $result;\n}\n\nnumerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]);", "    $grades_new = array();\n    foreach ($grades as $grade)\
    \ {\n        switch ($grade) {\n            case $grade < 1.0:\n             \
    \   $grades_new[] = 'E';\n                break;\n            case $grade > 1.0:\n\
    \                $grades_new[] = 'D-';\n                break;\n            case\
    \ $grade > 1.3:\n                $grades_new[] = 'D';\n                break;\n\
    \            case $grade > 1.7:\n                $grades_new[] = 'D+';\n     \
    \           break;\n            case $grade > 2.0:\n                $grades_new[]\
    \ = 'C-';\n                break;\n            case $grade > 2.3:\n          \
    \      $grades_new[] = 'C';\n                break;\n            case $grade >\
    \ 2.7:\n                $grades_new[] = 'C+';\n                break;\n      \
    \      case $grade > 3.0:\n                $grades_new[] = 'B-';\n           \
    \     break;\n            case $grade > 3.3:\n                $grades_new[] =\
    \ 'B';\n                break;\n            case $grade > 3.7:\n             \
    \   $grades_new[] = 'B+';\n                break;\n            case $grade > 4.0:\n\
    \                $grades_new[] = 'A-';\n                break;\n            case\
    \ $grade > 4.0:\n                $grades_new[] = 'A';\n                break;\n\
    \            case $grade > 4.0:\n                $grades_new[] = 'A+';\n     \
    \           break;\n        }\n    }\n    return $grades_new;\n}\n", "    $letter_grades\
    \ = [];\n    foreach ($grades as $grade) {\n        $letter_grade = \"\";\n  \
    \      if ($grade >= 4.0) {\n            $letter_grade = \"A+\";\n        } elseif\
    \ ($grade >= 3.7) {\n            $letter_grade = \"A\";\n        } elseif ($grade\
    \ >= 3.3) {\n            $letter_grade = \"A-\";\n        } elseif ($grade >=\
    \ 3.0) {\n            $letter_grade = \"B+\";\n        } elseif ($grade >= 2.7)\
    \ {\n            $letter_grade = \"B\";\n        } elseif ($grade >= 2.3) {\n\
    \            $letter_grade = \"B-\";\n        } elseif ($grade >= 2.0) {\n   \
    \         $letter_grade = \"C+\";\n        } elseif ($grade >= 1.7) {\n      \
    \      $letter_grade = \"C\";\n        } elseif ($grade >= 1.3) {\n          \
    \  $letter_grade = \"C-\";\n        } elseif ($grade >= 1.0) {\n            $letter_grade\
    \ = \"D+\";\n        } elseif ($grade >= 0.7) {\n            $letter_grade = \"\
    D\";\n        } elseif ($grade >= 0.0) {\n            $letter_grade = \"D-\";\n\
    \        } else {\n            $letter_grade = \"E\";\n        }\n        array_push($letter_grades,\
    \ $letter_grade);\n    }\n    return $letter_grades;\n}\necho \"<pre>\";\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\necho \"</pre>\";", "    $letters = [];\n    for ($i = 0;\
    \ $i < count($grades); $i++) {\n        if ($grades[$i] >= 4.0) {\n          \
    \  $letters[] = 'A+';\n        } elseif ($grades[$i] >= 3.7) {\n            $letters[]\
    \ = 'A';\n        } elseif ($grades[$i] >= 3.3) {\n            $letters[] = 'A-';\n\
    \        } elseif ($grades[$i] >= 3.0) {\n            $letters[] = 'B+';\n   \
    \     } elseif ($grades[$i] >= 2.7) {\n            $letters[] = 'B';\n       \
    \ } elseif ($grades[$i] >= 2.3) {\n            $letters[] = 'B-';\n        } elseif\
    \ ($grades[$i] >= 2.0) {\n            $letters[] = 'C+';\n        } elseif ($grades[$i]\
    \ >= 1.7) {\n            $letters[] = 'C';\n        } elseif ($grades[$i] >= 1.3)\
    \ {\n            $letters[] = 'C-';\n        } elseif ($grades[$i] >= 1.0) {\n\
    \            $letters[] = 'D+';\n        } elseif ($grades[$i] >= 0.7) {\n   \
    \         $letters[] = 'D';\n        } elseif ($grades[$i] >= 0.0) {\n       \
    \     $letters[] = 'D-';\n        } else {\n            $letters[] = 'E';\n  \
    \      }\n    }\n    return $letters;\n}", "    foreach ($grades as $value) {\n\
    \        if ($value >= 4.0) {\n            $letter[] = 'A+';\n        } elseif\
    \ ($value >= 3.7) {\n            $letter[] = 'A';\n        } elseif ($value >=\
    \ 3.3) {\n            $letter[] = 'A-';\n        } elseif ($value >= 3.0) {\n\
    \            $letter[] = 'B+';\n        } elseif ($value >= 2.7) {\n         \
    \   $letter[] = 'B';\n        } elseif ($value >= 2.3) {\n            $letter[]\
    \ = 'B-';\n        } elseif ($value >= 2.0) {\n            $letter[] = 'C+';\n\
    \        } elseif ($value >= 1.7) {\n            $letter[] = 'C';\n        } elseif\
    \ ($value >= 1.3) {\n            $letter[] = 'C-';\n        } elseif ($value >=\
    \ 1.0) {\n            $letter[] = 'D+';\n        } elseif ($value >= 0.7) {\n\
    \            $letter[] = 'D';\n        } elseif ($value >= 0.0) {\n          \
    \  $letter[] = 'D-';\n        } else {\n            $letter[] = 'E';\n       \
    \ }\n    }\n    return $letter;\n}\n$grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));",
  "  $converted_grades = [];\n  foreach ($grades as $grade) {\n    if ($grade == 4.0)\
    \ {\n      $converted_grades[] = 'A+';\n    } elseif ($grade > 3.7) {\n      $converted_grades[]\
    \ = 'A';\n    } elseif ($grade > 3.3) {\n      $converted_grades[] = 'A-';\n \
    \   } elseif ($grade > 3.0) {\n      $converted_grades[] = 'B+';\n    } elseif\
    \ ($grade > 2.7) {\n      $converted_grades[] = 'B';\n    } elseif ($grade > 2.3)\
    \ {\n      $converted_grades[] = 'B-';\n    } elseif ($grade > 2.0) {\n      $converted_grades[]\
    \ = 'C+';\n    } elseif ($grade > 1.7) {\n      $converted_grades[] = 'C';\n \
    \   } elseif ($grade > 1.3) {\n      $converted_grades[] = 'C-';\n    } elseif\
    \ ($grade > 1.0) {\n      $converted_grades[] = 'D+';\n    } elseif ($grade >\
    \ 0.7) {\n      $converted_grades[] = 'D';\n    } elseif ($grade > 0.0) {\n  \
    \    $converted_grades[] = 'D-';\n    } else {\n      $converted_grades[] = 'E';\n\
    \    }\n  }\n  return $converted_grades;\n}\n", "    // Our class averages 5.33\
    \ so everyone gets an A+\n    return 'A+';\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}", "\t$letters = array();\n\tforeach ($grades as $grade)\
    \ {\n\t\tswitch ($grade) {\n\t\t\tcase $grade > 3.7:\n\t\t\t\t$letters[] = 'A+';\n\
    \t\t\t\tbreak;\n\t\t\tcase $grade > 3.3:\n\t\t\t\t$letters[] = 'A';\n\t\t\t\t\
    break;\n\t\t\tcase $grade > 3.0:\n\t\t\t\t$letters[] = 'A-';\n\t\t\t\tbreak;\n\
    \t\t\tcase $grade > 2.7:\n\t\t\t\t$letters[] = 'B+';\n\t\t\t\tbreak;\n\t\t\tcase\
    \ $grade > 2.3:\n\t\t\t\t$letters[] = 'B';\n\t\t\t\tbreak;\n\t\t\tcase $grade\
    \ > 2.0:\n\t\t\t\t$letters[] = 'B-';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 1.7:\n\
    \t\t\t\t$letters[] = 'C+';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 1.3:\n\t\t\t\t\
    $letters[] = 'C';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 1.0:\n\t\t\t\t$letters[]\
    \ = 'C-';\n\t\t\t\tbreak;\n\t\t\tcase $grade > 0.7:\n\t\t\t\t$letters[] = 'D+';\n\
    \t\t\t\tbreak;\n\t\t\tcase $grade > 0.0:\n\t\t\t\t$letters[] = 'D';\n\t\t\t\t\
    break;\n\t\t\tcase $grade == 0.0:\n\t\t\t\t$letters[] = 'E';\n\t\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn $letters;\n}\nprint_r(numerical_letter_grade([4.0, 3, 1.7,\
    \ 2, 3.5]));", "    $grade_letter_table = array(\n        \"A+\" => 4.0,\n   \
    \     \"A\" => 3.7,\n        \"A-\" => 3.3,\n        \"B+\" => 3.0,\n        \"\
    B\" => 2.7,\n        \"B-\" => 2.3,\n        \"C+\" => 2.0,\n        \"C\" =>\
    \ 1.7,\n        \"C-\" => 1.3,\n        \"D+\" => 1.0,\n        \"D\" => 0.7,\n\
    \        \"D-\" => 0.0,\n        \"E\" => 0.0\n    );\n    $letters = array();\n\
    \    foreach ($grades as $grade) {\n        $letter = \"E\";\n        foreach\
    \ ($grade_letter_table as $grade_letter => $min_grade) {\n            if ($grade\
    \ >= $min_grade) {\n                $letter = $grade_letter;\n               \
    \ break;\n            }\n        }\n        $letters[] = $letter;\n    }\n   \
    \ return $letters;\n}\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));",
  "    foreach ($grades as $g) {\n        if ($g == 4.0) {\n            $letter_grade[]\
    \ = 'A+';\n        } elseif ($g > 3.7) {\n            $letter_grade[] = 'A';\n\
    \        } elseif ($g > 3.3) {\n            $letter_grade[] = 'A-';\n        }\
    \ elseif ($g > 3.0) {\n            $letter_grade[] = 'B+';\n        } elseif ($g\
    \ > 2.7) {\n            $letter_grade[] = 'B';\n        } elseif ($g > 2.3) {\n\
    \            $letter_grade[] = 'B-';\n        } elseif ($g > 2.0) {\n        \
    \    $letter_grade[] = 'C+';\n        } elseif ($g > 1.7) {\n            $letter_grade[]\
    \ = 'C';\n        } elseif ($g > 1.3) {\n            $letter_grade[] = 'C-';\n\
    \        } elseif ($g > 1.0) {\n            $letter_grade[] = 'D+';\n        }\
    \ elseif ($g > 0.7) {\n            $letter_grade[] = 'D';\n        } elseif ($g\
    \ > 0.0) {\n            $letter_grade[] = 'D-';\n        } else {\n          \
    \  $letter_grade[] = 'E';\n        }\n    }\n    return $letter_grade;\n}\n",
  "    $letters = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-',\
    \ 'E'];\n    $numerical_grades = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3,\
    \ 1.0, 0.7, 0.0, 0.0];\n    $letter_grades = [];\n    foreach ($grades as $gpa)\
    \ {\n        $letter_grade = NULL;\n        for ($i = 0; $i < count($numerical_grades);\
    \ $i++) {\n            if ($gpa >= $numerical_grades[$i]) {\n                $letter_grade\
    \ = $letters[$i];\n                break;\n            }\n        }\n        $letter_grades[]\
    \ = $letter_grade;\n    }\n    return $letter_grades;\n}\n", "\t$letters = [];\n\
    \t$grades = array_unique($grades);\n\tforeach ($grades as $grade) {\n\t\tif ($grade\
    \ >= 4.0) {\n\t\t\t$letters[] = 'A+';\n\t\t} elseif ($grade >= 3.7) {\n\t\t\t\
    $letters[] = 'A';\n\t\t} elseif ($grade >= 3.3) {\n\t\t\t$letters[] = 'A-';\n\t\
    \t} elseif ($grade >= 3.0) {\n\t\t\t$letters[] = 'B+';\n\t\t} elseif ($grade >=\
    \ 2.7) {\n\t\t\t$letters[] = 'B';\n\t\t} elseif ($grade >= 2.3) {\n\t\t\t$letters[]\
    \ = 'B-';\n\t\t} elseif ($grade >= 2.0) {\n\t\t\t$letters[] = 'C+';\n\t\t} elseif\
    \ ($grade >= 1.7) {\n\t\t\t$letters[] = 'C';\n\t\t} elseif ($grade >= 1.3) {\n\
    \t\t\t$letters[] = 'C-';\n\t\t} elseif ($grade >= 1.0) {\n\t\t\t$letters[] = 'D+';\n\
    \t\t} elseif ($grade >= 0.7) {\n\t\t\t$letters[] = 'D';\n\t\t} elseif ($grade\
    \ >= 0.0) {\n\t\t\t$letters[] = 'D-';\n\t\t} else {\n\t\t\t$letters[] = 'E';\n\
    \t\t}\n\t}\n\treturn $letters;\n}\n", "  $result = [];\n  foreach ($grades as\
    \ $grade) {\n    if ($grade == 4.0) {\n      $result[] = 'A+';\n    } elseif ($grade\
    \ >= 3.7) {\n      $result[] = 'A';\n    } elseif ($grade >= 3.3) {\n      $result[]\
    \ = 'A-';\n    } elseif ($grade >= 3.0) {\n      $result[] = 'B+';\n    } elseif\
    \ ($grade >= 2.7) {\n      $result[] = 'B';\n    } elseif ($grade >= 2.3) {\n\
    \      $result[] = 'B-';\n    } elseif ($grade >= 2.0) {\n      $result[] = 'C+';\n\
    \    } elseif ($grade >= 1.7) {\n      $result[] = 'C';\n    } elseif ($grade\
    \ >= 1.3) {\n      $result[] = 'C-';\n    } elseif ($grade >= 1.0) {\n      $result[]\
    \ = 'D+';\n    } elseif ($grade >= 0.7) {\n      $result[] = 'D';\n    } elseif\
    \ ($grade > 0.0) {\n      $result[] = 'D-';\n    } else {\n      $result[] = 'E';\n\
    \    }\n  }\n  return $result;\n}\n", "    return array_map(function($grade) {\n\
    \        if($grade >= 4.0) {\n            return 'A+';\n        }\n        if($grade\
    \ >= 3.7) {\n            return 'A';\n        }\n        if($grade >= 3.3) {\n\
    \            return 'A-';\n        }\n        if($grade >= 3.0) {\n          \
    \  return 'B+';\n        }\n        if($grade >= 2.7) {\n            return 'B';\n\
    \        }\n        if($grade >= 2.3) {\n            return 'B-';\n        }\n\
    \        if($grade >= 2.0) {\n            return 'C+';\n        }\n        if($grade\
    \ >= 1.7) {\n            return 'C';\n        }\n        if($grade >= 1.3) {\n\
    \            return 'C-';\n        }\n        if($grade >= 1.0) {\n          \
    \  return 'D+';\n        }\n        if($grade >= 0.7) {\n            return 'D';\n\
    \        }\n        if($grade >= 0.0) {\n            return 'D-';\n        }\n\
    \        return 'E';\n    }, $grades);\n}\n", "    $letter_grades = array();\n\
    \    foreach ($grades as $gpa) {\n        switch ($gpa) {\n            case $gpa\
    \ >= 4.0:\n                $letter_grades[] = 'A+';\n                break;\n\
    \            case $gpa >= 3.7:\n                $letter_grades[] = 'A';\n    \
    \            break;\n            case $gpa >= 3.3:\n                $letter_grades[]\
    \ = 'A-';\n                break;\n            case $gpa >= 3.0:\n           \
    \     $letter_grades[] = 'B+';\n                break;\n            case $gpa\
    \ >= 2.7:\n                $letter_grades[] = 'B';\n                break;\n \
    \           case $gpa >= 2.3:\n                $letter_grades[] = 'B-';\n    \
    \            break;\n            case $gpa >= 2.0:\n                $letter_grades[]\
    \ = 'C+';\n                break;\n            case $gpa >= 1.7:\n           \
    \     $letter_grades[] = 'C';\n                break;\n            case $gpa >=\
    \ 1.3:\n                $letter_grades[] = 'C-';\n                break;\n   \
    \         case $gpa >= 1.0:\n                $letter_grades[] = 'D+';\n      \
    \          break;\n            case $gpa >= 0.7:\n                $letter_grades[]\
    \ = 'D';\n                break;\n            case $gpa >= 0.0:\n            \
    \    $letter_grades[] = 'D-';\n                break;\n            case $gpa >=\
    \ 0.0:\n                $letter_grades[] = 'E';\n                break;\n    \
    \    }\n    }\n    return $letter_grades;\n}", "    $new_grades = [];\n    foreach\
    \ ($grades as $gpa) {\n        $digit = substr($gpa, 2, 1);\n        if ($gpa\
    \ == 4.0) {\n            $new_grades[] = 'A+';\n        } elseif ($gpa > 3.7)\
    \ {\n            $new_grades[] = 'A';\n        } elseif ($gpa > 3.3) {\n     \
    \       $new_grades[] = 'A-';\n        } elseif ($gpa > 3.0) {\n            $new_grades[]\
    \ = 'B+';\n        } elseif ($gpa > 2.7) {\n            $new_grades[] = 'B';\n\
    \        } elseif ($gpa > 2.3) {\n            $new_grades[] = 'B-';\n        }\
    \ elseif ($gpa > 2.0) {\n            $new_grades[] = 'C+';\n        } elseif ($gpa\
    \ > 1.7) {\n            $new_grades[] = 'C';\n        } elseif ($gpa > 1.3) {\n\
    \            $new_grades[] = 'C-';\n        } elseif ($gpa > 1.0) {\n        \
    \    $new_grades[] = 'D+';\n        } elseif ($gpa > 0.7) {\n            $new_grades[]\
    \ = 'D';\n        } elseif ($gpa > 0.0) {\n            $new_grades[] = 'D-';\n\
    \        } else {\n            $new_grades[] = 'E';\n        }\n    }\n    return\
    \ $new_grades;\n}\n$grades = [4.0, 3, 1.7, 2, 3.5];\n$new_grades = numerical_letter_grade($grades);\n\
    print_r($new_grades);", "    // Your code here\n    $return = [];\n    foreach($grades\
    \ as $grade){\n        if($grade == 4.0){\n            $return[] = 'A+';\n   \
    \     }elseif($grade > 3.7){\n            $return[] = 'A';\n        }elseif($grade\
    \ > 3.3){\n            $return[] = 'A-';\n        }elseif($grade > 3.0){\n   \
    \         $return[] = 'B+';\n        }elseif($grade > 2.7){\n            $return[]\
    \ = 'B';\n        }elseif($grade > 2.3){\n            $return[] = 'B-';\n    \
    \    }elseif($grade > 2.0){\n            $return[] = 'C+';\n        }elseif($grade\
    \ > 1.7){\n            $return[] = 'C';\n        }elseif($grade > 1.3){\n    \
    \        $return[] = 'C-';\n        }elseif($grade > 1.0){\n            $return[]\
    \ = 'D+';\n        }elseif($grade > 0.7){\n            $return[] = 'D';\n    \
    \    }elseif($grade > 0.0){\n            $return[] = 'D-';\n        }else{\n \
    \           $return[] = 'E';\n        }\n    }\n    return $return;\n}", "   \
    \ $return_list = [];\n    foreach ($grades as $gpa) {\n        if ($gpa == 4.0)\
    \ {\n            $return_list[] = 'A+';\n        } elseif ($gpa >= 3.7) {\n  \
    \          $return_list[] = 'A';\n        } elseif ($gpa >= 3.3) {\n         \
    \   $return_list[] = 'A-';\n        } elseif ($gpa >= 3.0) {\n            $return_list[]\
    \ = 'B+';\n        } elseif ($gpa >= 2.7) {\n            $return_list[] = 'B';\n\
    \        } elseif ($gpa >= 2.3) {\n            $return_list[] = 'B-';\n      \
    \  } elseif ($gpa >= 2.0) {\n            $return_list[] = 'C+';\n        } elseif\
    \ ($gpa >= 1.7) {\n            $return_list[] = 'C';\n        } elseif ($gpa >=\
    \ 1.3) {\n            $return_list[] = 'C-';\n        } elseif ($gpa >= 1.0) {\n\
    \            $return_list[] = 'D+';\n        } elseif ($gpa >= 0.7) {\n      \
    \      $return_list[] = 'D';\n        } elseif ($gpa >= 0.0) {\n            $return_list[]\
    \ = 'D-';\n        } else {\n            $return_list[] = 'E';\n        }\n  \
    \  }\n    return $return_list;\n}\n", "    $grades = array_map(function($v) {\n\
    \        if ($v >= 4.0) {\n            return 'A+';\n        } elseif ($v >= 3.7)\
    \ {\n            return 'A';\n        } elseif ($v >= 3.3) {\n            return\
    \ 'A-';\n        } elseif ($v >= 3.0) {\n            return 'B+';\n        } elseif\
    \ ($v >= 2.7) {\n            return 'B';\n        } elseif ($v >= 2.3) {\n   \
    \         return 'B-';\n        } elseif ($v >= 2.0) {\n            return 'C+';\n\
    \        } elseif ($v >= 1.7) {\n            return 'C';\n        } elseif ($v\
    \ >= 1.3) {\n            return 'C-';\n        } elseif ($v >= 1.0) {\n      \
    \      return 'D+';\n        } elseif ($v >= 0.7) {\n            return 'D';\n\
    \        } elseif ($v >= 0.0) {\n            return 'D-';\n        } else {\n\
    \            return 'E';\n        }\n    }, $grades);\n    return $grades;\n}\n\
    $grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));",
  "    // Write your code here\n}\necho \"<pre>\";\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5])); // Output: ['A+', 'B', 'C-', 'C', 'A-']\necho \"</pre>\";",
  "    $letter_grades = [];\n    foreach ($grades as $grade) {\n        if ($grade\
    \ >= 4.0) {\n            $letter_grades[] = 'A+';\n        } elseif ($grade >=\
    \ 3.7) {\n            $letter_grades[] = 'A';\n        } elseif ($grade >= 3.3)\
    \ {\n            $letter_grades[] = 'A-';\n        } elseif ($grade >= 3.0) {\n\
    \            $letter_grades[] = 'B+';\n        } elseif ($grade >= 2.7) {\n  \
    \          $letter_grades[] = 'B';\n        } elseif ($grade >= 2.3) {\n     \
    \       $letter_grades[] = 'B-';\n        } elseif ($grade >= 2.0) {\n       \
    \     $letter_grades[] = 'C+';\n        } elseif ($grade >= 1.7) {\n         \
    \   $letter_grades[] = 'C';\n        } elseif ($grade >= 1.3) {\n            $letter_grades[]\
    \ = 'C-';\n        } elseif ($grade >= 1.0) {\n            $letter_grades[] =\
    \ 'D+';\n        } elseif ($grade >= 0.7) {\n            $letter_grades[] = 'D';\n\
    \        } elseif ($grade >= 0.0) {\n            $letter_grades[] = 'D-';\n  \
    \      } else {\n            $letter_grades[] = 'E';\n        }\n    }\n    return\
    \ $letter_grades;\n}\n\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));",
  "    // Write your code here\n    $gpa = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7,\
    \ 1.3, 1.0, 0.7, 0.0];\n    $letter = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+',\
    \ 'C', 'C-', 'D+', 'D', 'D-', 'E'];\n    $array = [];\n    for ($i = 0; $i < count($grades);\
    \ $i++) {\n        for ($j = 0; $j < count($gpa); $j++) {\n            if ($grades[$i]\
    \ >= $gpa[$j]) {\n                $array[] = $letter[$j];\n                break;\n\
    \            }\n        }\n    }\n    return $array;\n}\necho \"<pre>\";\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\necho \"</pre>\";", "    $result = [];\n    foreach ($grades\
    \ as $grade) {\n        if ($grade >= 4.0) {\n            $result[] = 'A+';\n\
    \        } elseif ($grade >= 3.7) {\n            $result[] = 'A';\n        } elseif\
    \ ($grade >= 3.3) {\n            $result[] = 'A-';\n        } elseif ($grade >=\
    \ 3.0) {\n            $result[] = 'B+';\n        } elseif ($grade >= 2.7) {\n\
    \            $result[] = 'B';\n        } elseif ($grade >= 2.3) {\n          \
    \  $result[] = 'B-';\n        } elseif ($grade >= 2.0) {\n            $result[]\
    \ = 'C+';\n        } elseif ($grade >= 1.7) {\n            $result[] = 'C';\n\
    \        } elseif ($grade >= 1.3) {\n            $result[] = 'C-';\n        }\
    \ elseif ($grade >= 1.0) {\n            $result[] = 'D+';\n        } elseif ($grade\
    \ >= 0.7) {\n            $result[] = 'D';\n        } elseif ($grade >= 0.0) {\n\
    \            $result[] = 'D-';\n        } else {\n            $result[] = 'E';\n\
    \        }\n    }\n    return $result;\n}\n", "  $letters = ['A+', 'A', 'A-',\
    \ 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E'];\n  $numerical_grades\
    \ = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0];\n  $counter\
    \ = 0;\n  $result = [];\n  foreach ($grades as $grade) {\n    while ($grade <\
    \ $numerical_grades[$counter]) {\n      $counter++;\n    }\n    $result[] = $letters[$counter];\n\
    \    $counter = 0;\n  }\n  return $result;\n}\n", "  $arr = array();\n  foreach\
    \ ($grades as $key => $value) {\n    if ($value >= 4.0) {\n      $arr[] = 'A+';\n\
    \    }\n    elseif ($value >= 3.7) {\n      $arr[] = 'A';\n    }\n    elseif ($value\
    \ >= 3.3) {\n      $arr[] = 'A-';\n    }\n    elseif ($value >= 3.0) {\n     \
    \ $arr[] = 'B+';\n    }\n    elseif ($value >= 2.7) {\n      $arr[] = 'B';\n \
    \   }\n    elseif ($value >= 2.3) {\n      $arr[] = 'B-';\n    }\n    elseif ($value\
    \ >= 2.0) {\n      $arr[] = 'C+';\n    }\n    elseif ($value >= 1.7) {\n     \
    \ $arr[] = 'C';\n    }\n    elseif ($value >= 1.3) {\n      $arr[] = 'C-';\n \
    \   }\n    elseif ($value >= 1.0) {\n      $arr[] = 'D+';\n    }\n    elseif ($value\
    \ >= 0.7) {\n      $arr[] = 'D';\n    }\n    elseif ($value >= 0.0) {\n      $arr[]\
    \ = 'D-';\n    }\n    else {\n      $arr[] = 'E';\n    }\n  }\n  return $arr;\n\
    }\n$grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));",
  "    $grade_equation = array(\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\"\
    , \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\");\n    $letter_grade = array(\"\
    4.0\", \"3.7\", \"3.3\", \"3.0\", \"2.7\", \"2.3\", \"2.0\", \"1.7\", \"1.3\"\
    , \"1.0\", \"0.7\", \"0.0\", \"0.0\");\n    $final_grades = array();\n    foreach\
    \ ($grades as $grade) {\n        for ($i = 0; $i < count($letter_grade); $i++)\
    \ {\n            if ($grade > $letter_grade[$i]) {\n                array_push($final_grades,\
    \ $grade_equation[$i]);\n                break;\n            }\n        }\n  \
    \  }\n    return $final_grades;\n}\n", "\tfor ($i = 0; $i < count($grades); $i++)\
    \ {\n\t\tif ($grades[$i] > 4.0) {\n\t\t\t$numerical_letter_grade[$i] = 'E';\n\t\
    \t} elseif ($grades[$i] > 3.7) {\n\t\t\t$numerical_letter_grade[$i] = 'A+';\n\t\
    \t} elseif ($grades[$i] > 3.3) {\n\t\t\t$numerical_letter_grade[$i] = 'A';\n\t\
    \t} elseif ($grades[$i] > 3.0) {\n\t\t\t$numerical_letter_grade[$i] = 'A-';\n\t\
    \t} elseif ($grades[$i] > 2.7) {\n\t\t\t$numerical_letter_grade[$i] = 'B+';\n\t\
    \t} elseif ($grades[$i] > 2.3) {\n\t\t\t$numerical_letter_grade[$i] = 'B';\n\t\
    \t} elseif ($grades[$i] > 2.0) {\n\t\t\t$numerical_letter_grade[$i] = 'B-';\n\t\
    \t} elseif ($grades[$i] > 1.7) {\n\t\t\t$numerical_letter_grade[$i] = 'C+';\n\t\
    \t} elseif ($grades[$i] > 1.3) {\n\t\t\t$numerical_letter_grade[$i] = 'C';\n\t\
    \t} elseif ($grades[$i] > 1.0) {\n\t\t\t$numerical_letter_grade[$i] = 'C-';\n\t\
    \t} elseif ($grades[$i] > 0.7) {\n\t\t\t$numerical_letter_grade[$i] = 'D+';\n\t\
    \t} elseif ($grades[$i] > 0.0) {\n\t\t\t$numerical_letter_grade[$i] = 'D';\n\t\
    \t} elseif ($grades[$i] >= 0.0) {\n\t\t\t$numerical_letter_grade[$", "    $grades\
    \ = [4.0, 3, 1.7, 2, 3.5];\n    $grades = [3.3, 3.7, 3.0, 3.9, 3.8, 2.7, 2.3,\
    \ 2.0, 2.1, 2.4, 2.6, 2.9, 2.8, 2.5, 2.2, 2.3, 1.7, 1.3, 1.0, 1.1, 1.4, 1.6, 1.9,\
    \ 1.8, 1.5, 1.2, 1.3, 0.7, 0.0, 0.0];\n    $values = [\"A+\", \"A\", \"A-\", \"\
    B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"];\n \
    \   $keys = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0];\n\
    \    $letter = [];\n    for ($i = 0; $i < count($grades); $i++) {\n        for\
    \ ($j = 0; $j < count($keys); $j++) {\n            if ($grades[$i] > $keys[$j])\
    \ {\n                $letter[] = $values[$j];\n                break;\n      \
    \      }\n        }\n    }\n    echo implode(\" \", $letter);\n}\nnumerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]);\nnumerical_letter_grade([3.3, 3.7, 3.0, 3.9, 3.8, 2.7, 2.3,\
    \ 2.0, 2.1, 2.4, 2.6, 2.9, 2.8, 2.5, 2.2, 2.3, 1.7, 1.3, 1.0, 1.1, 1.4, 1.6, 1.9,\
    \ 1.8, 1.5, 1.2, 1.3, 0.7, 0.0, 0.0]);\n", "    $grades = explode(',', $grades);\n\
    \    $output = [];\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0)\
    \ {\n            $output[] = 'A+';\n        } elseif ($grade >= 3.7) {\n     \
    \       $output[] = 'A';\n        } elseif ($grade >= 3.3) {\n            $output[]\
    \ = 'A-';\n        } elseif ($grade >= 3.0) {\n            $output[] = 'B+';\n\
    \        } elseif ($grade >= 2.7) {\n            $output[] = 'B';\n        } elseif\
    \ ($grade >= 2.3) {\n            $output[] = 'B-';\n        } elseif ($grade >=\
    \ 2.0) {\n            $output[] = 'C+';\n        } elseif ($grade >= 1.7) {\n\
    \            $output[] = 'C';\n        } elseif ($grade >= 1.3) {\n          \
    \  $output[] = 'C-';\n        } elseif ($grade >= 1.0) {\n            $output[]\
    \ = 'D+';\n        } elseif ($grade >= 0.7) {\n            $output[] = 'D';\n\
    \        } elseif ($grade >= 0.0) {\n            $output[] = 'D-';\n        }\
    \ else {\n            $output[] = 'E';\n        }\n    }\n    return $output;\n\
    }\n$grade_equation = numerical_letter_grade('4.0, 3, 1.7, 2, 3.5');\nvar_dump($grade_equation);\n",
  "    // your code here\n    $num = count($grades);\n    for($i = 0; $i < $num; $i++){\n\
    \    \tif($grades[$i] == 4.0){\n    \t\t$grades[$i] = 'A+';\n    \t}\n    \telseif($grades[$i]\
    \ > 3.7){\n    \t\t$grades[$i] = 'A';\n    \t}\n    \telseif($grades[$i] > 3.3){\n\
    \    \t\t$grades[$i] = 'A-';\n    \t}\n    \telseif($grades[$i] > 3.0){\n    \t\
    \t$grades[$i] = 'B+';\n    \t}\n    \telseif($grades[$i] > 2.7){\n    \t\t$grades[$i]\
    \ = 'B';\n    \t}\n    \telseif($grades[$i] > 2.3){\n    \t\t$grades[$i] = 'B-';\n\
    \    \t}\n    \telseif($grades[$i] > 2.0){\n    \t\t$grades[$i] = 'C+';\n    \t\
    }\n    \telseif($grades[$i] > 1.7){\n    \t\t$grades[$i] = 'C';\n    \t}\n   \
    \ \telseif($grades[$i] > 1.3){\n    \t\t$grades[$i] = 'C-';\n    \t}\n    \telseif($grades[$i]\
    \ > 1.0){\n    \t\t$grades[$i] = 'D+';\n    \t}\n    \telseif($grades[$i] > 0.7){\n\
    \    \t\t$grades[$i] = 'D';\n    \t}\n    \telseif($grades[$i] > 0.0){\n    \t\
    \t$grades[$i] = 'D-';\n    \t}\n    \telse{\n    \t\t$grades[$i] = 'E';\n    \t\
    }\n    }\n    return $grades;\n}", "    $grades = array_map(function($grade) {\n\
    \        if ($grade >= 4.0) {\n            return 'A+';\n        } elseif ($grade\
    \ >= 3.7) {\n            return 'A';\n        } elseif ($grade >= 3.3) {\n   \
    \         return 'A-';\n        } elseif ($grade >= 3.0) {\n            return\
    \ 'B+';\n        } elseif ($grade >= 2.7) {\n            return 'B';\n       \
    \ } elseif ($grade >= 2.3) {\n            return 'B-';\n        } elseif ($grade\
    \ >= 2.0) {\n            return 'C+';\n        } elseif ($grade >= 1.7) {\n  \
    \          return 'C';\n        } elseif ($grade >= 1.3) {\n            return\
    \ 'C-';\n        } elseif ($grade >= 1.0) {\n            return 'D+';\n      \
    \  } elseif ($grade >= 0.7) {\n            return 'D';\n        } elseif ($grade\
    \ >= 0.0) {\n            return 'D-';\n        } else {\n            return 'E';\n\
    \        }\n    }, $grades);\n    return $grades;\n}", "  $a_plus_grade = 4.0;\n\
    \  $a_grade = 3.7;\n  $a_minus_grade = 3.3;\n  $b_plus_grade = 3.0;\n  $b_grade\
    \ = 2.7;\n  $b_minus_grade = 2.3;\n  $c_plus_grade = 2.0;\n  $c_grade = 1.7;\n\
    \  $c_minus_grade = 1.3;\n  $d_plus_grade = 1.0;\n  $d_grade = 0.7;\n  $d_minus_grade\
    \ = 0.0;\n  $e_grade = 0.0;\n  $result = [];\n  foreach ($grades as $grade) {\n\
    \    if ($grade >= $a_plus_grade) {\n      $result[] = 'A+';\n    } elseif ($grade\
    \ < $a_plus_grade && $grade >= $a_grade) {\n      $result[] = 'A';\n    } elseif\
    \ ($grade < $a_grade && $grade >= $a_minus_grade) {\n      $result[] = 'A-';\n\
    \    } elseif ($grade < $a_minus_grade && $grade >= $b_plus_grade) {\n      $result[]\
    \ = 'B+';\n    } elseif ($grade < $b_plus_grade && $grade >= $b_grade) {\n   \
    \   $result[] = 'B';\n    } elseif ($grade < $b_grade && $grade >= $b_minus_grade)\
    \ {\n      $result[] = 'B-';\n    } elseif ($grade < $b_minus_grade && $grade\
    \ >= $c_plus_grade) {\n      $result[] = 'C+';\n    } elseif ($grade < $c_plus_grade\
    \ && $grade >= $c_grade) {\n      $result[] = 'C';\n    } elseif ($grade < $c_grade\
    \ && $grade >= $c_minus_grade) {\n      $result[] = 'C-';\n    } elseif ($grade\
    \ < $c_minus_grade && $grade >= $d_plus_grade) {\n      $result[] = 'D+';\n  \
    \  }", "\t$new_grades = [];\n\tforeach ($grades as $grade) {\n\t\tif ($grade >\
    \ 4.0) {\n\t\t\tarray_push($new_grades, 'A+');\n\t\t} elseif ($grade > 3.7) {\n\
    \t\t\tarray_push($new_grades, 'A');\n\t\t} elseif ($grade > 3.3) {\n\t\t\tarray_push($new_grades,\
    \ 'A-');\n\t\t} elseif ($grade > 3.0) {\n\t\t\tarray_push($new_grades, 'B+');\n\
    \t\t} elseif ($grade > 2.7) {\n\t\t\tarray_push($new_grades, 'B');\n\t\t} elseif\
    \ ($grade > 2.3) {\n\t\t\tarray_push($new_grades, 'B-');\n\t\t} elseif ($grade\
    \ > 2.0) {\n\t\t\tarray_push($new_grades, 'C+');\n\t\t} elseif ($grade > 1.7)\
    \ {\n\t\t\tarray_push($new_grades, 'C');\n\t\t} elseif ($grade > 1.3) {\n\t\t\t\
    array_push($new_grades, 'C-');\n\t\t} elseif ($grade > 1.0) {\n\t\t\tarray_push($new_grades,\
    \ 'D+');\n\t\t} elseif ($grade > 0.7) {\n\t\t\tarray_push($new_grades, 'D');\n\
    \t\t} elseif ($grade > 0.0) {\n\t\t\tarray_push($new_grades, 'D-');\n\t\t} else\
    \ {\n\t\t\tarray_push($new_grades, 'E');\n\t\t}\n\t}\n\treturn $new_grades;\n\
    }\n\nnumerical_letter_grade([4.0, 3, 1.7, 2, 3.5]);", "    $grades_array = [];\n\
    \    for ($i = 0; $i < count($grades); $i++) {\n        if ($grades[$i] == 4.0)\
    \ {\n            array_push($grades_array, 'A+');\n        } elseif ($grades[$i]\
    \ >= 3.7) {\n            array_push($grades_array, 'A');\n        } elseif ($grades[$i]\
    \ >= 3.3) {\n            array_push($grades_array, 'A-');\n        } elseif ($grades[$i]\
    \ >= 3.0) {\n            array_push($grades_array, 'B+');\n        } elseif ($grades[$i]\
    \ >= 2.7) {\n            array_push($grades_array, 'B');\n        } elseif ($grades[$i]\
    \ >= 2.3) {\n            array_push($grades_array, 'B-');\n        } elseif ($grades[$i]\
    \ >= 2.0) {\n            array_push($grades_array, 'C+');\n        } elseif ($grades[$i]\
    \ >= 1.7) {\n            array_push($grades_array, 'C');\n        } elseif ($grades[$i]\
    \ >= 1.3) {\n            array_push($grades_array, 'C-');\n        } elseif ($grades[$i]\
    \ >= 1.0) {\n            array_push($grades_array, 'D+');\n        } elseif ($grades[$i]\
    \ >= 0.7) {\n            array_push($grades_array, 'D');\n        } elseif ($grades[$i]\
    \ >= 0.0) {\n            array_push($grades_array, 'D-');\n        } else {\n\
    \            array_push($grades_array, 'E');\n        }\n    }\n    return $grades_array;\n\
    }\necho implode(', ', numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\necho '<br>';\n",
  "    $letter_grades = [];\n    foreach ($grades as $grade) {\n        if ($grade\
    \ >= 4.0) {\n            $letter_grades[] = 'A+';\n        } elseif ($grade >=\
    \ 3.7) {\n            $letter_grades[] = 'A';\n        } elseif ($grade >= 3.3)\
    \ {\n            $letter_grades[] = 'A-';\n        } elseif ($grade >= 3.0) {\n\
    \            $letter_grades[] = 'B+';\n        } elseif ($grade >= 2.7) {\n  \
    \          $letter_grades[] = 'B';\n        } elseif ($grade >= 2.3) {\n     \
    \       $letter_grades[] = 'B-';\n        } elseif ($grade >= 2.0) {\n       \
    \     $letter_grades[] = 'C+';\n        } elseif ($grade >= 1.7) {\n         \
    \   $letter_grades[] = 'C';\n        } elseif ($grade >= 1.3) {\n            $letter_grades[]\
    \ = 'C-';\n        } elseif ($grade >= 1.0) {\n            $letter_grades[] =\
    \ 'D+';\n        } elseif ($grade >= 0.7) {\n            $letter_grades[] = 'D';\n\
    \        } elseif ($grade >= 0.0) {\n            $letter_grades[] = 'D-';\n  \
    \      } else {\n            $letter_grades[] = 'E';\n        }\n    }\n    return\
    \ $letter_grades;\n}\n$grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));",
  "  $result = [];\n  foreach ($grades as $grade) {\n    if ($grade >= 4.0) {\n  \
    \    $result[] = 'A+';\n    } elseif ($grade >= 3.7) {\n      $result[] = 'A';\n\
    \    } elseif ($grade >= 3.3) {\n      $result[] = 'A-';\n    } elseif ($grade\
    \ >= 3.0) {\n      $result[] = 'B+';\n    } elseif ($grade >= 2.7) {\n      $result[]\
    \ = 'B';\n    } elseif ($grade >= 2.3) {\n      $result[] = 'B-';\n    } elseif\
    \ ($grade >= 2.0) {\n      $result[] = 'C+';\n    } elseif ($grade >= 1.7) {\n\
    \      $result[] = 'C';\n    } elseif ($grade >= 1.3) {\n      $result[] = 'C-';\n\
    \    } elseif ($grade >= 1.0) {\n      $result[] = 'D+';\n    } elseif ($grade\
    \ >= 0.7) {\n      $result[] = 'D';\n    } elseif ($grade >= 0.0) {\n      $result[]\
    \ = 'D-';\n    } else {\n      $result[] = 'E';\n    }\n  }\n  return $result;\n\
    }\n", "\t$letterGrades = array();\n\tforeach ($grades as $grade) {\n\t\tif ($grade\
    \ == 4.0) {\n\t\t\tarray_push($letterGrades, \"A+\");\n\t\t} elseif ($grade >=\
    \ 3.7) {\n\t\t\tarray_push($letterGrades, \"A\");\n\t\t} elseif ($grade >= 3.3)\
    \ {\n\t\t\tarray_push($letterGrades, \"A-\");\n\t\t} elseif ($grade >= 3.0) {\n\
    \t\t\tarray_push($letterGrades, \"B+\");\n\t\t} elseif ($grade >= 2.7) {\n\t\t\
    \tarray_push($letterGrades, \"B\");\n\t\t} elseif ($grade >= 2.3) {\n\t\t\tarray_push($letterGrades,\
    \ \"B-\");\n\t\t} elseif ($grade >= 2.0) {\n\t\t\tarray_push($letterGrades, \"\
    C+\");\n\t\t} elseif ($grade >= 1.7) {\n\t\t\tarray_push($letterGrades, \"C\"\
    );\n\t\t} elseif ($grade >= 1.3) {\n\t\t\tarray_push($letterGrades, \"C-\");\n\
    \t\t} elseif ($grade >= 1.0) {\n\t\t\tarray_push($letterGrades, \"D+\");\n\t\t\
    } elseif ($grade >= 0.7) {\n\t\t\tarray_push($letterGrades, \"D\");\n\t\t} elseif\
    \ ($grade >= 0.0) {\n\t\t\tarray_push($letterGrades, \"D-\");\n\t\t} else {\n\t\
    \t\tarray_push($letterGrades, \"E\");\n\t\t}\n\t}\n\treturn $letterGrades;\n}\n",
  "    // Write your code here\n    $letter = [\"A+\", \"A\", \"A-\", \"B+\", \"B\"\
    , \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"];\n    $numbers\
    \ = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0];\n    $result\
    \ = [];\n    foreach ($grades as $g) {\n        $i = 0;\n        while ($g < $numbers[$i])\
    \ {\n            $i++;\n        }\n        $result[] = $letter[$i];\n    }\n \
    \   return $result;\n}\n", "    $grades_letter = array();\n    foreach ($grades\
    \ as $grade) {\n        if ($grade >= 4.0) {\n            $grades_letter[] = 'A+';\n\
    \        } elseif ($grade >= 3.7) {\n            $grades_letter[] = 'A';\n   \
    \     } elseif ($grade >= 3.3) {\n            $grades_letter[] = 'A-';\n     \
    \   } elseif ($grade >= 3.0) {\n            $grades_letter[] = 'B+';\n       \
    \ } elseif ($grade >= 2.7) {\n            $grades_letter[] = 'B';\n        } elseif\
    \ ($grade >= 2.3) {\n            $grades_letter[] = 'B-';\n        } elseif ($grade\
    \ >= 2.0) {\n            $grades_letter[] = 'C+';\n        } elseif ($grade >=\
    \ 1.7) {\n            $grades_letter[] = 'C';\n        } elseif ($grade >= 1.3)\
    \ {\n            $grades_letter[] = 'C-';\n        } elseif ($grade >= 1.0) {\n\
    \            $grades_letter[] = 'D+';\n        } elseif ($grade >= 0.7) {\n  \
    \          $grades_letter[] = 'D';\n        } elseif ($grade >= 0.0) {\n     \
    \       $grades_letter[] = 'D-';\n        } else {\n            $grades_letter[]\
    \ = 'E';\n        }\n    }\n    return $grades_letter;\n}", "    $letter_grades\
    \ = array();\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n\
    \            $letter_grades[] = 'A+';\n        } elseif ($grade >= 3.7) {\n  \
    \          $letter_grades[] = 'A';\n        } elseif ($grade >= 3.3) {\n     \
    \       $letter_grades[] = 'A-';\n        } elseif ($grade >= 3.0) {\n       \
    \     $letter_grades[] = 'B+';\n        } elseif ($grade >= 2.7) {\n         \
    \   $letter_grades[] = 'B';\n        } elseif ($grade >= 2.3) {\n            $letter_grades[]\
    \ = 'B-';\n        } elseif ($grade >= 2.0) {\n            $letter_grades[] =\
    \ 'C+';\n        } elseif ($grade >= 1.7) {\n            $letter_grades[] = 'C';\n\
    \        } elseif ($grade >= 1.3) {\n            $letter_grades[] = 'C-';\n  \
    \      } elseif ($grade >= 1.0) {\n            $letter_grades[] = 'D+';\n    \
    \    } elseif ($grade >= 0.7) {\n            $letter_grades[] = 'D';\n       \
    \ } elseif ($grade >= 0.0) {\n            $letter_grades[] = 'D-';\n        }\
    \ else {\n            $letter_grades[] = 'E';\n        }\n    }\n    return $letter_grades;\n\
    }", "\treturn array_map(function($gpa) {\n\t\tif ($gpa == 4.0) {\n\t\t\treturn\
    \ 'A+';\n\t\t} elseif ($gpa > 3.7) {\n\t\t\treturn 'A';\n\t\t} elseif ($gpa >\
    \ 3.3) {\n\t\t\treturn 'A-';\n\t\t} elseif ($gpa > 3.0) {\n\t\t\treturn 'B+';\n\
    \t\t} elseif ($gpa > 2.7) {\n\t\t\treturn 'B';\n\t\t} elseif ($gpa > 2.3) {\n\t\
    \t\treturn 'B-';\n\t\t} elseif ($gpa > 2.0) {\n\t\t\treturn 'C+';\n\t\t} elseif\
    \ ($gpa > 1.7) {\n\t\t\treturn 'C';\n\t\t} elseif ($gpa > 1.3) {\n\t\t\treturn\
    \ 'C-';\n\t\t} elseif ($gpa > 1.0) {\n\t\t\treturn 'D+';\n\t\t} elseif ($gpa >\
    \ 0.7) {\n\t\t\treturn 'D';\n\t\t} elseif ($gpa > 0.0) {\n\t\t\treturn 'D-';\n\
    \t\t} else {\n\t\t\treturn 'E';\n\t\t}\n\t}, $grades);\n}\n", "    // Your code\
    \ here\n    $solution = [];\n    for ($i = 0; $i < count($grades); $i++) {\n \
    \       $gpa = $grades[$i];\n        if ($gpa == 4.0) {\n            array_push($solution,\
    \ \"A+\");\n        } else if ($gpa > 3.7) {\n            array_push($solution,\
    \ \"A\");\n        } else if ($gpa > 3.3) {\n            array_push($solution,\
    \ \"A-\");\n        } else if ($gpa > 3.0) {\n            array_push($solution,\
    \ \"B+\");\n        } else if ($gpa > 2.7) {\n            array_push($solution,\
    \ \"B\");\n        } else if ($gpa > 2.3) {\n            array_push($solution,\
    \ \"B-\");\n        } else if ($gpa > 2.0) {\n            array_push($solution,\
    \ \"C+\");\n        } else if ($gpa > 1.7) {\n            array_push($solution,\
    \ \"C\");\n        } else if ($gpa > 1.3) {\n            array_push($solution,\
    \ \"C-\");\n        } else if ($gpa > 1.0) {\n            array_push($solution,\
    \ \"D+\");\n        } else if ($gpa > 0.7) {\n            array_push($solution,\
    \ \"D\");\n        } else if ($gpa > 0.0) {\n            array_push($solution,\
    \ \"D-\");\n        } else {\n            array_push($solution, \"E\");\n    \
    \    }\n    }\n    return $solution;\n}", "    $final_grades = [];\n    foreach\
    \ ($grades as $grade) {\n        if ($grade == 4.0) {\n            $final_grades[]\
    \ = 'A+';\n        } elseif ($grade > 3.7) {\n            $final_grades[] = 'A';\n\
    \        } elseif ($grade > 3.3) {\n            $final_grades[] = 'A-';\n    \
    \    } elseif ($grade > 3.0) {\n            $final_grades[] = 'B+';\n        }\
    \ elseif ($grade > 2.7) {\n            $final_grades[] = 'B';\n        } elseif\
    \ ($grade > 2.3) {\n            $final_grades[] = 'B-';\n        } elseif ($grade\
    \ > 2.0) {\n            $final_grades[] = 'C+';\n        } elseif ($grade > 1.7)\
    \ {\n            $final_grades[] = 'C';\n        } elseif ($grade > 1.3) {\n \
    \           $final_grades[] = 'C-';\n        } elseif ($grade > 1.0) {\n     \
    \       $final_grades[] = 'D+';\n        } elseif ($grade > 0.7) {\n         \
    \   $final_grades[] = 'D';\n        } elseif ($grade >= 0.0) {\n            $final_grades[]\
    \ = 'D-';\n        } else {\n            $final_grades[] = 'E';\n        }\n \
    \   }\n    return $final_grades;\n}\nprint_r(numerical_letter_grade([4.0, 3, 1.7,\
    \ 2, 3.5]));", "    $letter_grades = array();\n    foreach ($grades as $grade)\
    \ {\n        if ($grade >= 4.0) {\n            $letter_grades[] = 'A+';\n    \
    \    } elseif ($grade >= 3.7) {\n            $letter_grades[] = 'A';\n       \
    \ } elseif ($grade >= 3.3) {\n            $letter_grades[] = 'A-';\n        }\
    \ elseif ($grade >= 3.0) {\n            $letter_grades[] = 'B+';\n        } elseif\
    \ ($grade >= 2.7) {\n            $letter_grades[] = 'B';\n        } elseif ($grade\
    \ >= 2.3) {\n            $letter_grades[] = 'B-';\n        } elseif ($grade >=\
    \ 2.0) {\n            $letter_grades[] = 'C+';\n        } elseif ($grade >= 1.7)\
    \ {\n            $letter_grades[] = 'C';\n        } elseif ($grade >= 1.3) {\n\
    \            $letter_grades[] = 'C-';\n        } elseif ($grade >= 1.0) {\n  \
    \          $letter_grades[] = 'D+';\n        } elseif ($grade >= 0.7) {\n    \
    \        $letter_grades[] = 'D';\n        } elseif ($grade >= 0.0) {\n       \
    \     $letter_grades[] = 'D-';\n        } else {\n            $letter_grades[]\
    \ = 'E';\n        }\n    }\n    return $letter_grades;\n}\n", "    // Write your\
    \ code here\n    $letter_grade = array();\n    foreach ($grades as $g) {\n   \
    \     if ($g >= 4.0) {\n            $letter_grade[] = 'A+';\n        } elseif\
    \ ($g >= 3.7) {\n            $letter_grade[] = 'A';\n        } elseif ($g >= 3.3)\
    \ {\n            $letter_grade[] = 'A-';\n        } elseif ($g >= 3.0) {\n   \
    \         $letter_grade[] = 'B+';\n        } elseif ($g >= 2.7) {\n          \
    \  $letter_grade[] = 'B';\n        } elseif ($g >= 2.3) {\n            $letter_grade[]\
    \ = 'B-';\n        } elseif ($g >= 2.0) {\n            $letter_grade[] = 'C+';\n\
    \        } elseif ($g >= 1.7) {\n            $letter_grade[] = 'C';\n        }\
    \ elseif ($g >= 1.3) {\n            $letter_grade[] = 'C-';\n        } elseif\
    \ ($g >= 1.0) {\n            $letter_grade[] = 'D+';\n        } elseif ($g >=\
    \ 0.7) {\n            $letter_grade[] = 'D';\n        } elseif ($g >= 0.0) {\n\
    \            $letter_grade[] = 'D-';\n        } else {\n            $letter_grade[]\
    \ = 'E';\n        }\n    }\n    return $letter_grade;\n}\n\necho(\"<pre>\");\n\
    print_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\necho(\"</pre>\");", " \
    \   $result = [];\n    foreach ($grades as $grade) {\n        switch (true) {\n\
    \            case $grade > 3.7:\n                $result[] = 'A+';\n         \
    \       break;\n            case $grade > 3.3:\n                $result[] = 'A';\n\
    \                break;\n            case $grade > 3.0:\n                $result[]\
    \ = 'A-';\n                break;\n            case $grade > 2.7:\n          \
    \      $result[] = 'B+';\n                break;\n            case $grade > 2.3:\n\
    \                $result[] = 'B';\n                break;\n            case $grade\
    \ > 2.0:\n                $result[] = 'B-';\n                break;\n        \
    \    case $grade > 1.7:\n                $result[] = 'C+';\n                break;\n\
    \            case $grade > 1.3:\n                $result[] = 'C';\n          \
    \      break;\n            case $grade > 1.0:\n                $result[] = 'C-';\n\
    \                break;\n            case $grade > 0.7:\n                $result[]\
    \ = 'D+';\n                break;\n            case $grade > 0.0:\n          \
    \      $result[] = 'D';\n                break;\n            case $grade == 0.0:\n\
    \                $result[] = 'E';\n                break;\n            default:\n\
    \                $result[] = 'D-';\n                break;\n        }\n    }\n\
    \    return $result;\n}\n", "    $grades_letter = [];\n    foreach ($grades as\
    \ $key => $value) {\n        if ($value >= 4.0) {\n            $grades_letter[]\
    \ = 'A+';\n        } elseif ($value > 3.7) {\n            $grades_letter[] = 'A';\n\
    \        } elseif ($value > 3.3) {\n            $grades_letter[] = 'A-';\n   \
    \     } elseif ($value > 3.0) {\n            $grades_letter[] = 'B+';\n      \
    \  } elseif ($value > 2.7) {\n            $grades_letter[] = 'B';\n        } elseif\
    \ ($value > 2.3) {\n            $grades_letter[] = 'B-';\n        } elseif ($value\
    \ > 2.0) {\n            $grades_letter[] = 'C+';\n        } elseif ($value > 1.7)\
    \ {\n            $grades_letter[] = 'C';\n        } elseif ($value > 1.3) {\n\
    \            $grades_letter[] = 'C-';\n        } elseif ($value > 1.0) {\n   \
    \         $grades_letter[] = 'D+';\n        } elseif ($value > 0.7) {\n      \
    \      $grades_letter[] = 'D';\n        } elseif ($value > 0.0) {\n          \
    \  $grades_letter[] = 'D-';\n        } else {\n            $grades_letter[] =\
    \ 'E';\n        }\n    }\n    return $grades_letter;\n}", "    $letters = [\"\
    A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"\
    D\", \"D-\", \"E\"];\n    $grade_score = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7,\
    \ 1.3, 1.0, 0.7, 0.0, 0.0];\n    $result = [];\n    foreach ($grades as $grade)\
    \ {\n        $index = 0;\n        while ($grade < $grade_score[$index]) {\n  \
    \          $index++;\n        }\n        $result[] = $letters[$index];\n    }\n\
    \    return $result;\n}\n", "  \n  // Code here\n  $array = [];\n  foreach($grades\
    \ as $grade){\n      if($grade>=4.0){\n          $array[] = \"A+\";\n      }elseif($grade>=3.7){\n\
    \          $array[] = \"A\";\n      }elseif($grade>=3.3){\n          $array[]\
    \ = \"A-\";\n      }elseif($grade>=3.0){\n          $array[] = \"B+\";\n     \
    \ }elseif($grade>=2.7){\n          $array[] = \"B\";\n      }elseif($grade>=2.3){\n\
    \          $array[] = \"B-\";\n      }elseif($grade>=2.0){\n          $array[]\
    \ = \"C+\";\n      }elseif($grade>=1.7){\n          $array[] = \"C\";\n      }elseif($grade>=1.3){\n\
    \          $array[] = \"C-\";\n      }elseif($grade>=1.0){\n          $array[]\
    \ = \"D+\";\n      }elseif($grade>=0.7){\n          $array[] = \"D\";\n      }elseif($grade>=0.0){\n\
    \          $array[] = \"D-\";\n      }else{\n          $array[] = \"E\";\n   \
    \   }\n  }\n  return $array;\n}\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\necho \"<pre>\"\
    ;\nprint_r(numerical_letter_grade($grades));\necho \"</pre>\";", "\t$letter =\
    \ array();\n\tforeach ($grades as $value) {\n\t\tif ($value == 4.0) {\n\t\t\t\
    $letter[] = 'A+';\n\t\t} elseif ($value > 3.7) {\n\t\t\t$letter[] = 'A';\n\t\t\
    } elseif ($value > 3.3) {\n\t\t\t$letter[] = 'A-';\n\t\t} elseif ($value > 3.0)\
    \ {\n\t\t\t$letter[] = 'B+';\n\t\t} elseif ($value > 2.7) {\n\t\t\t$letter[] =\
    \ 'B';\n\t\t} elseif ($value > 2.3) {\n\t\t\t$letter[] = 'B-';\n\t\t} elseif ($value\
    \ > 2.0) {\n\t\t\t$letter[] = 'C+';\n\t\t} elseif ($value > 1.7) {\n\t\t\t$letter[]\
    \ = 'C';\n\t\t} elseif ($value > 1.3) {\n\t\t\t$letter[] = 'C-';\n\t\t} elseif\
    \ ($value > 1.0) {\n\t\t\t$letter[] = 'D+';\n\t\t} elseif ($value > 0.7) {\n\t\
    \t\t$letter[] = 'D';\n\t\t} elseif ($value > 0.0) {\n\t\t\t$letter[] = 'D-';\n\
    \t\t} else {\n\t\t\t$letter[] = 'E';\n\t\t}\n\t}\n\treturn $letter;\n}\necho implode(',\
    \ ', numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));", "  $result = [];\n  foreach\
    \ ($grades as $grade) {\n    if ($grade == 4.0) {\n      $result[] = 'A+';\n \
    \   } elseif ($grade > 3.7) {\n      $result[] = 'A';\n    } elseif ($grade >\
    \ 3.3) {\n      $result[] = 'A-';\n    } elseif ($grade > 3.0) {\n      $result[]\
    \ = 'B+';\n    } elseif ($grade > 2.7) {\n      $result[] = 'B';\n    } elseif\
    \ ($grade > 2.3) {\n      $result[] = 'B-';\n    } elseif ($grade > 2.0) {\n \
    \     $result[] = 'C+';\n    } elseif ($grade > 1.7) {\n      $result[] = 'C';\n\
    \    } elseif ($grade > 1.3) {\n      $result[] = 'C-';\n    } elseif ($grade\
    \ > 1.0) {\n      $result[] = 'D+';\n    } elseif ($grade > 0.7) {\n      $result[]\
    \ = 'D';\n    } elseif ($grade > 0.0) {\n      $result[] = 'D-';\n    } else {\n\
    \      $result[] = 'E';\n    }\n  }\n  return $result;\n}\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    // Write code here\n    $result = [];\n    foreach\
    \ ($grades as $grade) {\n        if($grade>= 4.0){\n            $result[] = 'A+';\n\
    \        }elseif($grade>= 3.7){\n            $result[] = 'A';\n        }elseif($grade>=\
    \ 3.3){\n            $result[] = 'A-';\n        }elseif($grade>= 3.0){\n     \
    \       $result[] = 'B+';\n        }elseif($grade>= 2.7){\n            $result[]\
    \ = 'B';\n        }elseif($grade>= 2.3){\n            $result[] = 'B-';\n    \
    \    }elseif($grade>= 2.0){\n            $result[] = 'C+';\n        }elseif($grade>=\
    \ 1.7){\n            $result[] = 'C';\n        }elseif($grade>= 1.3){\n      \
    \      $result[] = 'C-';\n        }elseif($grade>= 1.0){\n            $result[]\
    \ = 'D+';\n        }elseif($grade>= 0.7){\n            $result[] = 'D';\n    \
    \    }elseif($grade>= 0.0){\n            $result[] = 'D-';\n        }else{\n \
    \           $result[] = 'E';\n        }\n    }\n    return $result;\n}\n$output\
    \ = numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]);\necho \"<pre>\";\nprint_r($output);\n\
    echo \"</pre>\";", "    $letter_grades = array();\n    foreach ($grades as $grade)\
    \ {\n        $numerical_grade = (float)$grade;\n        if ($numerical_grade >=\
    \ 4.0) {\n            $letter_grades[] = 'A+';\n        } else if ($numerical_grade\
    \ >= 3.7) {\n            $letter_grades[] = 'A';\n        } else if ($numerical_grade\
    \ >= 3.3) {\n            $letter_grades[] = 'A-';\n        } else if ($numerical_grade\
    \ >= 3.0) {\n            $letter_grades[] = 'B+';\n        } else if ($numerical_grade\
    \ >= 2.7) {\n            $letter_grades[] = 'B';\n        } else if ($numerical_grade\
    \ >= 2.3) {\n            $letter_grades[] = 'B-';\n        } else if ($numerical_grade\
    \ >= 2.0) {\n            $letter_grades[] = 'C+';\n        } else if ($numerical_grade\
    \ >= 1.7) {\n            $letter_grades[] = 'C';\n        } else if ($numerical_grade\
    \ >= 1.3) {\n            $letter_grades[] = 'C-';\n        } else if ($numerical_grade\
    \ >= 1.0) {\n            $letter_grades[] = 'D+';\n        } else if ($numerical_grade\
    \ >= 0.7) {\n            $letter_grades[] = 'D';\n        } else if ($numerical_grade\
    \ >= 0.0) {\n            $letter_grades[] = 'D-';\n        } else {\n        \
    \    $letter_grades[] = 'E';\n        }\n    }\n    return $letter_grades;\n}\n",
  "    $numerical_grade = $grades;\n    $letter_grade = '';\n    $final_letter_grade\
    \ = [];\n    foreach ($numerical_grade as $score) {\n        switch ($score) {\n\
    \            case ($score >= 4.0):\n                $letter_grade = 'A+';\n  \
    \              break;\n            case ($score >= 3.7):\n                $letter_grade\
    \ = 'A';\n                break;\n            case ($score >= 3.3):\n        \
    \        $letter_grade = 'A-';\n                break;\n            case ($score\
    \ >= 3.0):\n                $letter_grade = 'B+';\n                break;\n  \
    \          case ($score >= 2.7):\n                $letter_grade = 'B';\n     \
    \           break;\n            case ($score >= 2.3):\n                $letter_grade\
    \ = 'B-';\n                break;\n            case ($score >= 2.0):\n       \
    \         $letter_grade = 'C+';\n                break;\n            case ($score\
    \ >= 1.7):\n                $letter_grade = 'C';\n                break;\n   \
    \         case ($score >= 1.3):\n                $letter_grade = 'C-';\n     \
    \           break;\n            case ($score >= 1.0):\n                $letter_grade\
    \ = 'D+';\n                break;\n            case ($score >= 0.7):\n       \
    \         $letter_grade = 'D';\n                break;\n            case ($score\
    \ >= 0.0):\n                $letter_grade = 'D-';\n                break;\n  \
    \          case ($score <= 0.0):\n                $letter_grade = 'E';\n     \
    \           break;\n        }\n        array_push($final_letter_grade, $letter_grade);\n\
    \    }\n    return $final_letter_grade;\n}\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $result = [];\n    foreach ($grades as $grade) {\n\
    \        if ($grade >= 4.0) {\n            $result[] = 'A+';\n        } elseif\
    \ ($grade >= 3.7) {\n            $result[] = 'A';\n        } elseif ($grade >=\
    \ 3.3) {\n            $result[] = 'A-';\n        } elseif ($grade >= 3.0) {\n\
    \            $result[] = 'B+';\n        } elseif ($grade >= 2.7) {\n         \
    \   $result[] = 'B';\n        } elseif ($grade >= 2.3) {\n            $result[]\
    \ = 'B-';\n        } elseif ($grade >= 2.0) {\n            $result[] = 'C+';\n\
    \        } elseif ($grade >= 1.7) {\n            $result[] = 'C';\n        } elseif\
    \ ($grade >= 1.3) {\n            $result[] = 'C-';\n        } elseif ($grade >=\
    \ 1.0) {\n            $result[] = 'D+';\n        } elseif ($grade >= 0.7) {\n\
    \            $result[] = 'D';\n        } elseif ($grade >= 0.0) {\n          \
    \  $result[] = 'D-';\n        } else {\n            $result[] = 'E';\n       \
    \ }\n    }\n    return $result;\n}", "    $letter_grades = array();\n    foreach\
    \ ($grades as $grade) {\n        if ($grade >= 4.0) {\n            $letter_grades[]\
    \ = 'A+';\n        } elseif ($grade >= 3.7) {\n            $letter_grades[] =\
    \ 'A';\n        } elseif ($grade >= 3.3) {\n            $letter_grades[] = 'A-';\n\
    \        } elseif ($grade >= 3.0) {\n            $letter_grades[] = 'B+';\n  \
    \      } elseif ($grade >= 2.7) {\n            $letter_grades[] = 'B';\n     \
    \   } elseif ($grade >= 2.3) {\n            $letter_grades[] = 'B-';\n       \
    \ } elseif ($grade >= 2.0) {\n            $letter_grades[] = 'C+';\n        }\
    \ elseif ($grade >= 1.7) {\n            $letter_grades[] = 'C';\n        } elseif\
    \ ($grade >= 1.3) {\n            $letter_grades[] = 'C-';\n        } elseif ($grade\
    \ >= 1.0) {\n            $letter_grades[] = 'D+';\n        } elseif ($grade >=\
    \ 0.7) {\n            $letter_grades[] = 'D';\n        } elseif ($grade >= 0.0)\
    \ {\n            $letter_grades[] = 'D-';\n        } else {\n            $letter_grades[]\
    \ = 'E';\n        }\n    }\n    return $letter_grades;\n}\n$grades = [4.0, 3,\
    \ 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));", "\t$grades_converted\
    \ = [];\n\tforeach ($grades as $grade) {\n\t\t$grades_converted[] = grade_equation($grade);\n\
    \t}\n\treturn $grades_converted;\n}\n", "  $grades = [\n    'a+' => 4.0,\n   \
    \ 'a' => 3.7,\n    'a-' => 3.3,\n    'b+' => 3.0,\n    'b' => 2.7,\n    'b-' =>\
    \ 2.3,\n    'c+' => 2.0,\n    'c' => 1.7,\n    'c-' => 1.3,\n    'd+' => 1.0,\n\
    \    'd' => 0.7,\n    'd-' => 0.0,\n    'e' => 0.0\n  ];\n  $return = [];\n  foreach\
    \ ($grades as $key => $value) {\n    $return[] = $key;\n  }\n  return $return;\n\
    }\nvar_dump(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));", "    $num_to_letter\
    \ = array(\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        'E' => 'E'\n    );\n    $letter_grades\
    \ = array();\n    foreach ($grades as $grade) {\n        $letter_grades[] = $num_to_letter[$grade];\n\
    \    }\n    return $letter_grades;\n}\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\n$letter_grades\
    \ = numerical_letter_grade($grades);\nprint_r($letter_grades);", "  $conversion\
    \ = array(\n    4.0 => 'A+',\n    3.7 => 'A',\n    3.3 => 'A-',\n    3.0 => 'B+',\n\
    \    2.7 => 'B',\n    2.3 => 'B-',\n    2.0 => 'C+',\n    1.7 => 'C',\n    1.3\
    \ => 'C-',\n    1.0 => 'D+',\n    0.7 => 'D',\n    0.0 => 'D-',\n    -1.0 => 'E'\n\
    \  );\n  $result = array();\n  foreach ($grades as $grade) {\n    $letter_grade\
    \ = '';\n    foreach ($conversion as $value => $key) {\n      if ($grade >= $value)\
    \ {\n        $letter_grade = $key;\n        break;\n      }\n    }\n    $result[]\
    \ = $letter_grade;\n  }\n  return $result;\n}\n", "  $grades_letters = array();\n\
    \  foreach ($grades as $key => $value) {\n    if ($value >= 4.0) {\n      $grades_letters[]\
    \ = 'A+';\n    } elseif ($value >= 3.7) {\n      $grades_letters[] = 'A';\n  \
    \  } elseif ($value >= 3.3) {\n      $grades_letters[] = 'A-';\n    } elseif ($value\
    \ >= 3.0) {\n      $grades_letters[] = 'B+';\n    } elseif ($value >= 2.7) {\n\
    \      $grades_letters[] = 'B';\n    } elseif ($value >= 2.3) {\n      $grades_letters[]\
    \ = 'B-';\n    } elseif ($value >= 2.0) {\n      $grades_letters[] = 'C+';\n \
    \   } elseif ($value >= 1.7) {\n      $grades_letters[] = 'C';\n    } elseif ($value\
    \ >= 1.3) {\n      $grades_letters[] = 'C-';\n    } elseif ($value >= 1.0) {\n\
    \      $grades_letters[] = 'D+';\n    } elseif ($value >= 0.7) {\n      $grades_letters[]\
    \ = 'D';\n    } elseif ($value >= 0.0) {\n      $grades_letters[] = 'D-';\n  \
    \  } else {\n      $grades_letters[] = 'E';\n    }\n  }\n  return $grades_letters;\n\
    }\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\n", "    return array_map(function($grade)\
    \ {\n        if ($grade >= 4.0) {\n            return 'A+';\n        } elseif\
    \ ($grade >= 3.7) {\n            return 'A';\n        } elseif ($grade >= 3.3)\
    \ {\n            return 'A-';\n        } elseif ($grade >= 3.0) {\n          \
    \  return 'B+';\n        } elseif ($grade >= 2.7) {\n            return 'B';\n\
    \        } elseif ($grade >= 2.3) {\n            return 'B-';\n        } elseif\
    \ ($grade >= 2.0) {\n            return 'C+';\n        } elseif ($grade >= 1.7)\
    \ {\n            return 'C';\n        } elseif ($grade >= 1.3) {\n           \
    \ return 'C-';\n        } elseif ($grade >= 1.0) {\n            return 'D+';\n\
    \        } elseif ($grade >= 0.7) {\n            return 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            return 'D-';\n        } else {\n            return\
    \ 'E';\n        }\n    }, $grades);\n}\n", "    // Write your code here...\n}\n\
    \nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\necho '<br>';\nprint_r(numerical_letter_grade([1.0,\
    \ 2.5, 3.5, 3.9, 4.0]));", "    $result = [];\n    foreach ($grades as $value)\
    \ {\n        if ($value > 4.0) {\n            $result[] = 'A+';\n        } elseif\
    \ ($value > 3.7) {\n            $result[] = 'A';\n        } elseif ($value > 3.3)\
    \ {\n            $result[] = 'A-';\n        } elseif ($value > 3.0) {\n      \
    \      $result[] = 'B+';\n        } elseif ($value > 2.7) {\n            $result[]\
    \ = 'B';\n        } elseif ($value > 2.3) {\n            $result[] = 'B-';\n \
    \       } elseif ($value > 2.0) {\n            $result[] = 'C+';\n        } elseif\
    \ ($value > 1.7) {\n            $result[] = 'C';\n        } elseif ($value > 1.3)\
    \ {\n            $result[] = 'C-';\n        } elseif ($value > 1.0) {\n      \
    \      $result[] = 'D+';\n        } elseif ($value > 0.7) {\n            $result[]\
    \ = 'D';\n        } elseif ($value > 0.0) {\n            $result[] = 'D-';\n \
    \       } else {\n            $result[] = 'E';\n        }\n    }\n    return $result;\n\
    }", "    $grades_letters = [];\n    foreach ($grades as $grade) {\n        if\
    \ ($grade == 4.0) {\n            $grades_letters[] = 'A+';\n        } elseif ($grade\
    \ > 3.7) {\n            $grades_letters[] = 'A';\n        } elseif ($grade > 3.3)\
    \ {\n            $grades_letters[] = 'A-';\n        } elseif ($grade > 3.0) {\n\
    \            $grades_letters[] = 'B+';\n        } elseif ($grade > 2.7) {\n  \
    \          $grades_letters[] = 'B';\n        } elseif ($grade > 2.3) {\n     \
    \       $grades_letters[] = 'B-';\n        } elseif ($grade > 2.0) {\n       \
    \     $grades_letters[] = 'C+';\n        } elseif ($grade > 1.7) {\n         \
    \   $grades_letters[] = 'C';\n        } elseif ($grade > 1.3) {\n            $grades_letters[]\
    \ = 'C-';\n        } elseif ($grade > 1.0) {\n            $grades_letters[] =\
    \ 'D+';\n        } elseif ($grade > 0.7) {\n            $grades_letters[] = 'D';\n\
    \        } elseif ($grade > 0.0) {\n            $grades_letters[] = 'D-';\n  \
    \      } else {\n            $grades_letters[] = 'E';\n        }\n    }\n    return\
    \ $grades_letters;\n}\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\necho implode(', ',\
    \ numerical_letter_grade($grades)) . PHP_EOL;", "  $grade_list = array();\n  foreach\
    \ ($grades as $grade) {\n    if ($grade > 4.0) {\n      $grade_list[] = 'A+';\n\
    \    } elseif ($grade > 3.7) {\n      $grade_list[] = 'A';\n    } elseif ($grade\
    \ > 3.3) {\n      $grade_list[] = 'A-';\n    } elseif ($grade > 3.0) {\n     \
    \ $grade_list[] = 'B+';\n    } elseif ($grade > 2.7) {\n      $grade_list[] =\
    \ 'B';\n    } elseif ($grade > 2.3) {\n      $grade_list[] = 'B-';\n    } elseif\
    \ ($grade > 2.0) {\n      $grade_list[] = 'C+';\n    } elseif ($grade > 1.7) {\n\
    \      $grade_list[] = 'C';\n    } elseif ($grade > 1.3) {\n      $grade_list[]\
    \ = 'C-';\n    } elseif ($grade > 1.0) {\n      $grade_list[] = 'D+';\n    } elseif\
    \ ($grade > 0.7) {\n      $grade_list[] = 'D';\n    } elseif ($grade > 0.0) {\n\
    \      $grade_list[] = 'D-';\n    } else {\n      $grade_list[] = 'E';\n    }\n\
    \  }\n  return $grade_list;\n}\n\nprint_r(numerical_letter_grade([4.0, 3, 1.7,\
    \ 2, 3.5])); // ['A+', 'B', 'C-', 'C', 'A-']\n", "\t$grades = array_map(function($value)\
    \ {\n\t\tif ($value >= 4.0) {\n\t\t\treturn 'A+';\n\t\t} elseif ($value >= 3.7)\
    \ {\n\t\t\treturn 'A';\n\t\t} elseif ($value >= 3.3) {\n\t\t\treturn 'A-';\n\t\
    \t} elseif ($value >= 3.0) {\n\t\t\treturn 'B+';\n\t\t} elseif ($value >= 2.7)\
    \ {\n\t\t\treturn 'B';\n\t\t} elseif ($value >= 2.3) {\n\t\t\treturn 'B-';\n\t\
    \t} elseif ($value >= 2.0) {\n\t\t\treturn 'C+';\n\t\t} elseif ($value >= 1.7)\
    \ {\n\t\t\treturn 'C';\n\t\t} elseif ($value >= 1.3) {\n\t\t\treturn 'C-';\n\t\
    \t} elseif ($value >= 1.0) {\n\t\t\treturn 'D+';\n\t\t} elseif ($value >= 0.7)\
    \ {\n\t\t\treturn 'D';\n\t\t} elseif ($value > 0.0) {\n\t\t\treturn 'D-';\n\t\t\
    } else {\n\t\t\treturn 'E';\n\t\t}\n\t}, $grades);\n\treturn $grades;\n}\n$grades\
    \ = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));", "  $grade_map\
    \ = array(\"4.0\" => \"A+\",\n                     \"3.7\" => \"A\",\n       \
    \              \"3.3\" => \"A-\",\n                     \"3.0\" => \"B+\",\n \
    \                    \"2.7\" => \"B\",\n                     \"2.3\" => \"B-\"\
    ,\n                     \"2.0\" => \"C+\",\n                     \"1.7\" => \"\
    C\",\n                     \"1.3\" => \"C-\",\n                     \"1.0\" =>\
    \ \"D+\",\n                     \"0.7\" => \"D\",\n                     \"0.0\"\
    \ => \"D-\",\n                     \"-1\" => \"E\"\n                    );\n \
    \ $letter_grades = array();\n  $grade_map_keys = array_keys($grade_map);\n  foreach\
    \ ($grades as $gpa) {\n    $new_letter_grade = \"\";\n    foreach ($grade_map_keys\
    \ as $key) {\n      if ($gpa >= $key || $key == \"-1\") {\n        $new_letter_grade\
    \ = $grade_map[$key];\n        break;\n      }\n    }\n    array_push($letter_grades,\
    \ $new_letter_grade);\n  }\n  return $letter_grades;\n}", "    return array_map(function($grade)\
    \ {\n        if ($grade >= 4.0) return 'A+';\n        if ($grade >= 3.7) return\
    \ 'A';\n        if ($grade >= 3.3) return 'A-';\n        if ($grade >= 3.0) return\
    \ 'B+';\n        if ($grade >= 2.7) return 'B';\n        if ($grade >= 2.3) return\
    \ 'B-';\n        if ($grade >= 2.0) return 'C+';\n        if ($grade >= 1.7) return\
    \ 'C';\n        if ($grade >= 1.3) return 'C-';\n        if ($grade >= 1.0) return\
    \ 'D+';\n        if ($grade >= 0.7) return 'D';\n        if ($grade >= 0.0) return\
    \ 'D-';\n        return 'E';\n    }, $grades);\n}\n", "    $result = [];\n   \
    \ foreach ($grades as $item) {\n        if ($item >= 4.0) {\n            $result[]\
    \ = 'A+';\n        } elseif ($item > 3.7) {\n            $result[] = 'A';\n  \
    \      } elseif ($item > 3.3) {\n            $result[] = 'A-';\n        } elseif\
    \ ($item > 3.0) {\n            $result[] = 'B+';\n        } elseif ($item > 2.7)\
    \ {\n            $result[] = 'B';\n        } elseif ($item > 2.3) {\n        \
    \    $result[] = 'B-';\n        } elseif ($item > 2.0) {\n            $result[]\
    \ = 'C+';\n        } elseif ($item > 1.7) {\n            $result[] = 'C';\n  \
    \      } elseif ($item > 1.3) {\n            $result[] = 'C-';\n        } elseif\
    \ ($item > 1.0) {\n            $result[] = 'D+';\n        } elseif ($item > 0.7)\
    \ {\n            $result[] = 'D';\n        } elseif ($item > 0.0) {\n        \
    \    $result[] = 'D-';\n        } else {\n            $result[] = 'E';\n     \
    \   }\n    }\n    return $result;\n}\n", "    $letter_grades = [];\n    $gpa_grades\
    \ = [\n        '4.0' => 'A+',\n        '3.7' => 'A',\n        '3.3' => 'A-',\n\
    \        '3.0' => 'B+',\n        '2.7' => 'B',\n        '2.3' => 'B-',\n     \
    \   '2.0' => 'C+',\n        '1.7' => 'C',\n        '1.3' => 'C-',\n        '1.0'\
    \ => 'D+',\n        '0.7' => 'D',\n        '0.0' => 'D-',\n        '0.0' => 'E'\n\
    \    ];\n    foreach ($grades as $grade) {\n        if (array_key_exists($grade,\
    \ $gpa_grades)) {\n            $letter_grades[] = $gpa_grades[$grade];\n     \
    \   } else {\n            $letter_grades[] = $gpa_grades[get_gpa_grade($grade)];\n\
    \        }\n    }\n    return $letter_grades;\n}\n", "    $return_grades = [];\n\
    \    $ratings = [\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        0.1 => 'E'\n    ];\n    $numbers\
    \ = array_keys($ratings);\n    foreach ($grades as $grade) {\n        $return_grades[]\
    \ = $ratings[$numbers[count($numbers) - 1]];\n        for ($i = count($numbers)\
    \ - 1; $i >= 0; $i--) {\n            if ($grade >= $numbers[$i]) {\n         \
    \       $return_grades[count($return_grades) - 1] = $ratings[$numbers[$i]];\n\
    \                break;\n            }\n        }\n    }\n    return $return_grades;\n\
    }\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\necho implode(', ', numerical_letter_grade($grades));",
  "    $output_array = [];\n    foreach ($grades as $key => $value) {\n        $output_array[$key]\
    \ = grade_equation($value);\n    }\n    return $output_array;\n}", "  $key_value\
    \ = array('4.0' => 'A+',\n                     '3.7' => 'A',\n               \
    \      '3.3' => 'A-',\n                     '3.0' => 'B+',\n                 \
    \    '2.7' => 'B',\n                     '2.3' => 'B-',\n                    \
    \ '2.0' => 'C+',\n                     '1.7' => 'C',\n                     '1.3'\
    \ => 'C-',\n                     '1.0' => 'D+',\n                     '0.7' =>\
    \ 'D',\n                     '0.0' => 'D-',\n                     '-1' => 'E');\n\
    \  $arr = array();\n  foreach ($grades as $grade) {\n    $arr[] = $key_value[$grade];\n\
    \  }\n  return $arr;\n}\n", "    $grades = [\n        \"A+\" => [\n          \
    \  \"min\" => 4.0,\n            \"max\" => 4.0\n        ],\n        \"A\" => [\n\
    \            \"min\" => 3.7,\n            \"max\" => 3.7\n        ],\n       \
    \ \"A-\" => [\n            \"min\" => 3.3,\n            \"max\" => 3.3\n     \
    \   ],\n        \"B+\" => [\n            \"min\" => 3.0,\n            \"max\"\
    \ => 3.0\n        ],\n        \"B\" => [\n            \"min\" => 2.7,\n      \
    \      \"max\" => 2.7\n        ],\n        \"B-\" => [\n            \"min\" =>\
    \ 2.3,\n            \"max\" => 2.3\n        ],\n        \"C+\" => [\n        \
    \    \"min\" => 2.0,\n            \"max\" => 2.0\n        ],\n        \"C\" =>\
    \ [\n            \"min\" => 1.7,\n            \"max\" => 1.7\n        ],\n   \
    \     \"C-\" => [\n            \"min\" => 1.3,\n            \"max\" => 1.3\n \
    \       ],\n        \"D+\" => [\n            \"min\" => 1.0,\n            \"max\"\
    \ => 1.0\n        ],\n        \"D\" => [\n            \"min\" => 0.7,\n      \
    \      \"max\" => 0.7\n        ],\n        \"D-\" => [\n            \"min\" =>\
    \ 0.0,\n            \"max\" => 0.0\n        ],\n        \"E\" => [\n         \
    \   \"min\" => 0.0,\n            \"max\" => 0.0\n        ]\n    ];\n    foreach\
    \ ($grades as $grade => $range) {\n        $min_grade = $range[\"min\"];\n   \
    \     $max_grade = $range[\"max\"];\n        $grade_formatted = grade_formatter($min_grade,\
    \ $max_grade);\n        $grades[$grade] = $grade_formatted;\n    }\n    return\
    \ $grades;\n}\n", "    $letter_grades = array();\n    foreach ($grades as $grade)\
    \ {\n        if ($grade >= 4.0) {\n            $letter_grades[] = 'A+';\n    \
    \    } elseif ($grade >= 3.7) {\n            $letter_grades[] = 'A';\n       \
    \ } elseif ($grade >= 3.3) {\n            $letter_grades[] = 'A-';\n        }\
    \ elseif ($grade >= 3.0) {\n            $letter_grades[] = 'B+';\n        } elseif\
    \ ($grade >= 2.7) {\n            $letter_grades[] = 'B';\n        } elseif ($grade\
    \ >= 2.3) {\n            $letter_grades[] = 'B-';\n        } elseif ($grade >=\
    \ 2.0) {\n            $letter_grades[] = 'C+';\n        } elseif ($grade >= 1.7)\
    \ {\n            $letter_grades[] = 'C';\n        } elseif ($grade >= 1.3) {\n\
    \            $letter_grades[] = 'C-';\n        } elseif ($grade >= 1.0) {\n  \
    \          $letter_grades[] = 'D+';\n        } elseif ($grade >= 0.7) {\n    \
    \        $letter_grades[] = 'D';\n        } elseif ($grade >= 0.0) {\n       \
    \     $letter_grades[] = 'D-';\n        } else {\n            $letter_grades[]\
    \ = 'E';\n        }\n    }\n    return $letter_grades;\n}\necho \"original Grades:\\\
    n\";\nprint_r([4.0, 3, 1.7, 2, 3.5]);\necho \"Letter Grades:\\n\";\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\necho \"\\n\";", "    $letter_grades = [];\n    foreach ($grades\
    \ as $grade) {\n        $letter_grade = '';\n        if ($grade < 0) {\n     \
    \       $letter_grade = 'E';\n        } else if ($grade < 0.7) {\n           \
    \ $letter_grade = 'D-';\n        } else if ($grade < 1.0) {\n            $letter_grade\
    \ = 'D';\n        } else if ($grade < 1.3) {\n            $letter_grade = 'D+';\n\
    \        } else if ($grade < 1.7) {\n            $letter_grade = 'C-';\n     \
    \   } else if ($grade < 2.0) {\n            $letter_grade = 'C';\n        } else\
    \ if ($grade < 2.3) {\n            $letter_grade = 'C+';\n        } else if ($grade\
    \ < 2.7) {\n            $letter_grade = 'B-';\n        } else if ($grade < 3.0)\
    \ {\n            $letter_grade = 'B';\n        } else if ($grade < 3.3) {\n  \
    \          $letter_grade = 'B+';\n        } else if ($grade < 3.7) {\n       \
    \     $letter_grade = 'A-';\n        } else if ($grade <= 4.0) {\n           \
    \ $letter_grade = 'A';\n        }\n        $letter_grades[] = $letter_grade;\n\
    \    }\n    return $letter_grades;\n}\necho '<pre>';\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $final = [];\n    foreach ($grades as $grade) {\n\
    \        if ($grade >= 4.0) {\n            $final[] = 'A+';\n        } elseif\
    \ ($grade > 3.7) {\n            $final[] = 'A';\n        } elseif ($grade > 3.3)\
    \ {\n            $final[] = 'A-';\n        } elseif ($grade > 3.0) {\n       \
    \     $final[] = 'B+';\n        } elseif ($grade > 2.7) {\n            $final[]\
    \ = 'B';\n        } elseif ($grade > 2.3) {\n            $final[] = 'B-';\n  \
    \      } elseif ($grade > 2.0) {\n            $final[] = 'C+';\n        } elseif\
    \ ($grade > 1.7) {\n            $final[] = 'C';\n        } elseif ($grade > 1.3)\
    \ {\n            $final[] = 'C-';\n        } elseif ($grade > 1.0) {\n       \
    \     $final[] = 'D+';\n        } elseif ($grade > 0.7) {\n            $final[]\
    \ = 'D';\n        } elseif ($grade > 0.0) {\n            $final[] = 'D-';\n  \
    \      } else {\n            $final[] = 'E';\n        }\n    }\n    return $final;\n\
    }\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));", "    $grades_copy\
    \ = $grades;\n    $letter_grades = [];\n    for ($i = 0; $i < count($grades_copy);\
    \ $i++) {\n        if ($grades_copy[$i] == 4.0) {\n            array_push($letter_grades,\
    \ 'A+');\n        } elseif ($grades_copy[$i] > 3.7) {\n            array_push($letter_grades,\
    \ 'A');\n        } elseif ($grades_copy[$i] > 3.3) {\n            array_push($letter_grades,\
    \ 'A-');\n        } elseif ($grades_copy[$i] > 3.0) {\n            array_push($letter_grades,\
    \ 'B+');\n        } elseif ($grades_copy[$i] > 2.7) {\n            array_push($letter_grades,\
    \ 'B');\n        } elseif ($grades_copy[$i] > 2.3) {\n            array_push($letter_grades,\
    \ 'B-');\n        } elseif ($grades_copy[$i] > 2.0) {\n            array_push($letter_grades,\
    \ 'C+');\n        } elseif ($grades_copy[$i] > 1.7) {\n            array_push($letter_grades,\
    \ 'C');\n        } elseif ($grades_copy[$i] > 1.3) {\n            array_push($letter_grades,\
    \ 'C-');\n        } elseif ($grades_copy[$i] > 1.0) {\n            array_push($letter_grades,\
    \ 'D+');\n        } elseif ($grades_copy[$i] > 0.7) {\n            array_push($letter_grades,\
    \ 'D');\n        } elseif ($grades_copy[$i] > 0.0) {\n            array_push($letter_grades,\
    \ 'D-');\n        } elseif ($grades_copy[$i] == 0.0) {\n            array_push($letter_grades,\
    \ 'E');\n        }\n    }\n    return $letter_grades;\n}\n$grades = [4.0, 3, 1.7,\
    \ 2, 3.5];\necho implode(\", \", numerical_letter_grade($grades", "  $grades_mapping\
    \ = array(\n    'A+' => 4.0,\n    'A' => 3.7,\n    'A-' => 3.3,\n    'B+' => 3.0,\n\
    \    'B' => 2.7,\n    'B-' => 2.3,\n    'C+' => 2.0,\n    'C' => 1.7,\n    'C-'\
    \ => 1.3,\n    'D+' => 1.0,\n    'D' => 0.7,\n    'D-' => 0.0,\n    'E' => 0.0\n\
    \  );\n  return array_map(function($grade) use ($grades_mapping) {\n    foreach\
    \ ($grades_mapping as $grade_to_check => $grade_value) {\n      if ($grade >=\
    \ $grade_value) {\n        return $grade_to_check;\n      }\n    }\n  }, $grades);\n\
    }\n", "    $a = $grades;\n    for ($i = 0; $i < count($a); $i++) {\n        switch\
    \ ($a[$i]) {\n            case $a[$i] <= 4.0 && $a[$i] > 3.7:\n              \
    \  $a[$i] = 'A+';\n                break;\n            case $a[$i] <= 3.7 && $a[$i]\
    \ > 3.3:\n                $a[$i] = 'A';\n                break;\n            case\
    \ $a[$i] <= 3.3 && $a[$i] > 3.0:\n                $a[$i] = 'A-';\n           \
    \     break;\n            case $a[$i] <= 3.0 && $a[$i] > 2.7:\n              \
    \  $a[$i] = 'B+';\n                break;\n            case $a[$i] <= 2.7 && $a[$i]\
    \ > 2.3:\n                $a[$i] = 'B';\n                break;\n            case\
    \ $a[$i] <= 2.3 && $a[$i] > 2.0:\n                $a[$i] = 'B-';\n           \
    \     break;\n            case $a[$i] <= 2.0 && $a[$i] > 1.7:\n              \
    \  $a[$i] = 'C+';\n                break;\n            case $a[$i] <= 1.7 && $a[$i]\
    \ > 1.3:\n                $a[$i] = 'C';\n                break;\n            case\
    \ $a[$i] <= 1.3 && $a[$i] > 1.0:\n                $a[$i] = 'C-';\n           \
    \     break;\n            case $a[$i] <= 1.0 && $a[$i] > 0.7:\n              \
    \  $a[$i] = 'D+';\n                break;\n            case $a[$i] <= 0.7 && $a[$i]\
    \ > 0.0:\n                $a[$i] = 'D';\n                break;\n            case\
    \ $a[$i] <= 0.0 && $a[", "  $grades = [\n    4.0 => 'A+',\n    3.7 => 'A',\n \
    \   3.3 => 'A-',\n    3.0 => 'B+',\n    2.7 => 'B',\n    2.3 => 'B-',\n    2.0\
    \ => 'C+',\n    1.7 => 'C',\n    1.3 => 'C-',\n    1.0 => 'D+',\n    0.7 => 'D',\n\
    \    0.0 => 'D-',\n    -1  => 'E'\n  ];\n  return $grades;\n}\n", "    $result\
    \ = [];\n    foreach ($grades as $grade) {\n        if($grade >= 4.0) {\n    \
    \        $result[] = 'A+';\n        }\n        elseif($grade >= 3.7) {\n     \
    \       $result[] = 'A';\n        }\n        elseif($grade >= 3.3) {\n       \
    \     $result[] = 'A-';\n        }\n        elseif($grade >= 3.0) {\n        \
    \    $result[] = 'B+';\n        }\n        elseif($grade >= 2.7) {\n         \
    \   $result[] = 'B';\n        }\n        elseif($grade >= 2.3) {\n           \
    \ $result[] = 'B-';\n        }\n        elseif($grade >= 2.0) {\n            $result[]\
    \ = 'C+';\n        }\n        elseif($grade >= 1.7) {\n            $result[] =\
    \ 'C';\n        }\n        elseif($grade >= 1.3) {\n            $result[] = 'C-';\n\
    \        }\n        elseif($grade >= 1.0) {\n            $result[] = 'D+';\n \
    \       }\n        elseif($grade >= 0.7) {\n            $result[] = 'D';\n   \
    \     }\n        elseif($grade >= 0.0) {\n            $result[] = 'D-';\n    \
    \    }\n        else {\n            $result[] = 'E';\n        }\n    }\n    return\
    \ $result;\n}\necho \"<pre>\";\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2,\
    \ 3.5]));\necho \"</pre>\";", "  $new_grades = [];\n  foreach ($grades as $grade)\
    \ {\n    if ($grade >= 4.0) {\n      $new_grades[] = 'A+';\n    } elseif ($grade\
    \ >= 3.7) {\n      $new_grades[] = 'A';\n    } elseif ($grade >= 3.3) {\n    \
    \  $new_grades[] = 'A-';\n    } elseif ($grade >= 3.0) {\n      $new_grades[]\
    \ = 'B+';\n    } elseif ($grade >= 2.7) {\n      $new_grades[] = 'B';\n    } elseif\
    \ ($grade >= 2.3) {\n      $new_grades[] = 'B-';\n    } elseif ($grade >= 2.0)\
    \ {\n      $new_grades[] = 'C+';\n    } elseif ($grade >= 1.7) {\n      $new_grades[]\
    \ = 'C';\n    } elseif ($grade >= 1.3) {\n      $new_grades[] = 'C-';\n    } elseif\
    \ ($grade >= 1.0) {\n      $new_grades[] = 'D+';\n    } elseif ($grade >= 0.7)\
    \ {\n      $new_grades[] = 'D';\n    } elseif ($grade >= 0.0) {\n      $new_grades[]\
    \ = 'D-';\n    } else {\n      $new_grades[] = 'E';\n    }\n  }\n  return $new_grades;\n\
    }\n$grades = [4.0, 3, 1.7, 2, 3.5];\necho \"GPA to letter grades : <br>\";\nprint_r(numerical_letter_grade($grades));",
  "    // Write your code here\n    $result = [];\n    foreach ($grades as $grade)\
    \ {\n        if ($grade >= 4.0) {\n            $result[] = 'A+';\n        } elseif\
    \ ($grade >= 3.7) {\n            $result[] = 'A';\n        } elseif ($grade >=\
    \ 3.3) {\n            $result[] = 'A-';\n        } elseif ($grade >= 3.0) {\n\
    \            $result[] = 'B+';\n        } elseif ($grade >= 2.7) {\n         \
    \   $result[] = 'B';\n        } elseif ($grade >= 2.3) {\n            $result[]\
    \ = 'B-';\n        } elseif ($grade >= 2.0) {\n            $result[] = 'C+';\n\
    \        } elseif ($grade >= 1.7) {\n            $result[] = 'C';\n        } elseif\
    \ ($grade >= 1.3) {\n            $result[] = 'C-';\n        } elseif ($grade >=\
    \ 1.0) {\n            $result[] = 'D+';\n        } elseif ($grade >= 0.7) {\n\
    \            $result[] = 'D';\n        } elseif ($grade >= 0.0) {\n          \
    \  $result[] = 'D-';\n        } else {\n            $result[] = 'E';\n       \
    \ }\n    }\n    return $result;\n}", "  $result = [];\n  for ($i = 0; $i < count($grades);\
    \ $i++) {\n    if ($grades[$i] == 4.0) {\n      $result[] = 'A+';\n    } else\
    \ if ($grades[$i] >= 3.7) {\n      $result[] = 'A';\n    } else if ($grades[$i]\
    \ >= 3.3) {\n      $result[] = 'A-';\n    } else if ($grades[$i] >= 3.0) {\n \
    \     $result[] = 'B+';\n    } else if ($grades[$i] >= 2.7) {\n      $result[]\
    \ = 'B';\n    } else if ($grades[$i] >= 2.3) {\n      $result[] = 'B-';\n    }\
    \ else if ($grades[$i] >= 2.0) {\n      $result[] = 'C+';\n    } else if ($grades[$i]\
    \ >= 1.7) {\n      $result[] = 'C';\n    } else if ($grades[$i] >= 1.3) {\n  \
    \    $result[] = 'C-';\n    } else if ($grades[$i] >= 1.0) {\n      $result[]\
    \ = 'D+';\n    } else if ($grades[$i] >= 0.7) {\n      $result[] = 'D';\n    }\
    \ else if ($grades[$i] > 0.0) {\n      $result[] = 'D-';\n    } else {\n     \
    \ $result[] = 'E';\n    }\n  }\n  return $result;\n}", "    $letter_grades = [];\n\
    \    foreach ($grades as $gpa) {\n        $letter_grade = '';\n        if ($gpa\
    \ == 4.0) {\n            $letter_grade = 'A+';\n        } elseif ($gpa > 3.7)\
    \ {\n            $letter_grade = 'A';\n        } elseif ($gpa > 3.3) {\n     \
    \       $letter_grade = 'A-';\n        } elseif ($gpa > 3.0) {\n            $letter_grade\
    \ = 'B+';\n        } elseif ($gpa > 2.7) {\n            $letter_grade = 'B';\n\
    \        } elseif ($gpa > 2.3) {\n            $letter_grade = 'B-';\n        }\
    \ elseif ($gpa > 2.0) {\n            $letter_grade = 'C+';\n        } elseif ($gpa\
    \ > 1.7) {\n            $letter_grade = 'C';\n        } elseif ($gpa > 1.3) {\n\
    \            $letter_grade = 'C-';\n        } elseif ($gpa > 1.0) {\n        \
    \    $letter_grade = 'D+';\n        } elseif ($gpa > 0.7) {\n            $letter_grade\
    \ = 'D';\n        } elseif ($gpa > 0.0) {\n            $letter_grade = 'D-';\n\
    \        } else {\n            $letter_grade = 'E';\n        }\n        $letter_grades[]\
    \ = $letter_grade;\n    }\n    return $letter_grades;\n}\necho implode(\", \"\
    , numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));", "    $letters = [\"D-\", \"\
    D\", \"D+\", \"C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"\
    ];\n    $numerical_grades = [0.0, 0.7, 1.0, 1.3, 1.7, 2.0, 2.3, 2.7, 3.0, 3.3,\
    \ 3.7, 4.0];\n    $result = [];\n    foreach ($grades as $grade) {\n        $is_found\
    \ = false;\n        foreach ($numerical_grades as $key => $numerical_grade) {\n\
    \            if ($grade >= $numerical_grade) {\n                $result[] = $letters[$key];\n\
    \                $is_found = true;\n                break;\n            }\n  \
    \      }\n        if (!$is_found) {\n            $result[] = \"E\";\n        }\n\
    \    }\n    return $result;\n}\necho \"<pre>\";\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\necho \"</pre>\";", "  $grade_map = array(\n    4.0 => 'A+',\n\
    \    3.7 => 'A',\n    3.3 => 'A-',\n    3.0 => 'B+',\n    2.7 => 'B',\n    2.3\
    \ => 'B-',\n    2.0 => 'C+',\n    1.7 => 'C',\n    1.3 => 'C-',\n    1.0 => 'D+',\n\
    \    0.7 => 'D',\n    0.0 => 'D-',\n  );\n  $letters = array();\n  foreach ($grades\
    \ as $grade) {\n    if ($grade >= 4.0) {\n      $letters[] = 'A+';\n    } elseif\
    \ ($grade > 0.0) {\n      $letters[] = $grade_map[(float)min(array_keys($grade_map,\
    \ $grade_map[floor($grade)]))];\n    } else {\n      $letters[] = 'E';\n    }\n\
    \  }\n  return $letters;\n}\n", "    $result = [];\n    for ($i = 0; $i < count($grades);\
    \ $i++) {\n        if ($grades[$i] > 4.0) {\n            array_push($result, 'A+');\n\
    \        } else if ($grades[$i] > 3.7) {\n            array_push($result, 'A');\n\
    \        } else if ($grades[$i] > 3.3) {\n            array_push($result, 'A-');\n\
    \        } else if ($grades[$i] > 3.0) {\n            array_push($result, 'B+');\n\
    \        } else if ($grades[$i] > 2.7) {\n            array_push($result, 'B');\n\
    \        } else if ($grades[$i] > 2.3) {\n            array_push($result, 'B-');\n\
    \        } else if ($grades[$i] > 2.0) {\n            array_push($result, 'C+');\n\
    \        } else if ($grades[$i] > 1.7) {\n            array_push($result, 'C');\n\
    \        } else if ($grades[$i] > 1.3) {\n            array_push($result, 'C-');\n\
    \        } else if ($grades[$i] > 1.0) {\n            array_push($result, 'D+');\n\
    \        } else if ($grades[$i] > 0.7) {\n            array_push($result, 'D');\n\
    \        } else if ($grades[$i] > 0.0) {\n            array_push($result, 'D-');\n\
    \        } else {\n            array_push($result, 'E');\n        }\n    }\n \
    \   return $result;\n}\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\necho 'Input : ' .\
    \ implode(', ', $grades) . '</br>';\necho 'Output : ' . implode(', ', numerical_letter_grade($grades));",
  "    $letter_grades = array();\n    $num_of_grades = count($grades);\n    $i = 0;\n\
    \    while ($i < $num_of_grades) {\n        if ($grades[$i] >= 4.0) {\n      \
    \      $letter_grades[$i] = \"A+\";\n        } elseif ($grades[$i] >= 3.7) {\n\
    \            $letter_grades[$i] = \"A\";\n        } elseif ($grades[$i] >= 3.3)\
    \ {\n            $letter_grades[$i] = \"A-\";\n        } elseif ($grades[$i] >=\
    \ 3.0) {\n            $letter_grades[$i] = \"B+\";\n        } elseif ($grades[$i]\
    \ >= 2.7) {\n            $letter_grades[$i] = \"B\";\n        } elseif ($grades[$i]\
    \ >= 2.3) {\n            $letter_grades[$i] = \"B-\";\n        } elseif ($grades[$i]\
    \ >= 2.0) {\n            $letter_grades[$i] = \"C+\";\n        } elseif ($grades[$i]\
    \ >= 1.7) {\n            $letter_grades[$i] = \"C\";\n        } elseif ($grades[$i]\
    \ >= 1.3) {\n            $letter_grades[$i] = \"C-\";\n        } elseif ($grades[$i]\
    \ >= 1.0) {\n            $letter_grades[$i] = \"D+\";\n        } elseif ($grades[$i]\
    \ >= 0.7) {\n            $letter_grades[$i] = \"D\";\n        } elseif ($grades[$i]\
    \ >= 0.0) {\n            $letter_grades[$i] = \"D-\";\n        } else {\n    \
    \        $letter_grades[$i] = \"E\";\n        }\n        $i++;\n    }\n    return\
    \ $letter_grades;\n}", "  $res = [];\n  foreach ($grades as $grade) {\n    if\
    \ ($grade >= 4.0) {\n      $res[] = 'A+';\n    } else if ($grade >= 3.7) {\n \
    \     $res[] = 'A';\n    } else if ($grade >= 3.3) {\n      $res[] = 'A-';\n \
    \   } else if ($grade >= 3.0) {\n      $res[] = 'B+';\n    } else if ($grade >=\
    \ 2.7) {\n      $res[] = 'B';\n    } else if ($grade >= 2.3) {\n      $res[] =\
    \ 'B-';\n    } else if ($grade >= 2.0) {\n      $res[] = 'C+';\n    } else if\
    \ ($grade >= 1.7) {\n      $res[] = 'C';\n    } else if ($grade >= 1.3) {\n  \
    \    $res[] = 'C-';\n    } else if ($grade >= 1.0) {\n      $res[] = 'D+';\n \
    \   } else if ($grade >= 0.7) {\n      $res[] = 'D';\n    } else if ($grade >=\
    \ 0.0) {\n      $res[] = 'D-';\n    } else {\n      $res[] = 'E';\n    }\n  }\n\
    \  return $res;\n}\necho implode(', ', numerical_letter_grade([4.0, 3, 1.7, 2,\
    \ 3.5]));\necho \"\\n\";\n", "  $result = [];\n  foreach ($grades as $grade) {\n\
    \    if ($grade >= 4.0) {\n      $result[] = 'A+';\n    } elseif ($grade >= 3.7)\
    \ {\n      $result[] = 'A';\n    } elseif ($grade >= 3.3) {\n      $result[] =\
    \ 'A-';\n    } elseif ($grade >= 3.0) {\n      $result[] = 'B+';\n    } elseif\
    \ ($grade >= 2.7) {\n      $result[] = 'B';\n    } elseif ($grade >= 2.3) {\n\
    \      $result[] = 'B-';\n    } elseif ($grade >= 2.0) {\n      $result[] = 'C+';\n\
    \    } elseif ($grade >= 1.7) {\n      $result[] = 'C';\n    } elseif ($grade\
    \ >= 1.3) {\n      $result[] = 'C-';\n    } elseif ($grade >= 1.0) {\n      $result[]\
    \ = 'D+';\n    } elseif ($grade >= 0.7) {\n      $result[] = 'D';\n    } elseif\
    \ ($grade >= 0.0) {\n      $result[] = 'D-';\n    } else {\n      $result[] =\
    \ 'E';\n    }\n  }\n  return $result;\n}\n", "  $results = [];\n  foreach ($grades\
    \ as $grade) {\n    if ($grade >= 4.0) {\n      $results[] = 'A+';\n    } elseif\
    \ ($grade >= 3.7) {\n      $results[] = 'A';\n    } elseif ($grade >= 3.3) {\n\
    \      $results[] = 'A-';\n    } elseif ($grade >= 3.0) {\n      $results[] =\
    \ 'B+';\n    } elseif ($grade >= 2.7) {\n      $results[] = 'B';\n    } elseif\
    \ ($grade >= 2.3) {\n      $results[] = 'B-';\n    } elseif ($grade >= 2.0) {\n\
    \      $results[] = 'C+';\n    } elseif ($grade >= 1.7) {\n      $results[] =\
    \ 'C';\n    } elseif ($grade >= 1.3) {\n      $results[] = 'C-';\n    } elseif\
    \ ($grade >= 1.0) {\n      $results[] = 'D+';\n    } elseif ($grade >= 0.7) {\n\
    \      $results[] = 'D';\n    } elseif ($grade >= 0.0) {\n      $results[] = 'D-';\n\
    \    } else {\n      $results[] = 'E';\n    }\n  }\n  return $results;\n}", " \
    \ $grades_lower = array_map('strtolower', $grades);\n  $grades_letter = array_map(function($grade){\n\
    \    switch ($grade) {\n      case '4.0':\n        return 'A+';\n        break;\n\
    \      case $grade >= 3.7:\n        return 'A';\n        break;\n      case $grade\
    \ >= 3.3:\n        return 'A-';\n        break;\n      case $grade >= 3.0:\n \
    \       return 'B+';\n        break;\n      case $grade >= 2.7:\n        return\
    \ 'B';\n        break;\n      case $grade >= 2.3:\n        return 'B-';\n    \
    \    break;\n      case $grade >= 2.0:\n        return 'C+';\n        break;\n\
    \      case $grade >= 1.7:\n        return 'C';\n        break;\n      case $grade\
    \ >= 1.3:\n        return 'C-';\n        break;\n      case $grade >= 1.0:\n \
    \       return 'D+';\n        break;\n      case $grade >= 0.7:\n        return\
    \ 'D';\n        break;\n      case $grade >= 0.0:\n        return 'D-';\n    \
    \    break;\n      case $grade == 0.0:\n        return 'E';\n        break;\n\
    \      default:\n        return 'not valid';\n        break;\n    }\n  }, $grades_lower);\n\
    \  return $grades_letter;\n}", "    $result = [];\n    foreach ($grades as $key\
    \ => $value) {\n        if ($value >= 4.0) {\n            $result[] = 'A+';\n\
    \        } elseif ($value >= 3.7) {\n            $result[] = 'A';\n        } elseif\
    \ ($value >= 3.3) {\n            $result[] = 'A-';\n        } elseif ($value >=\
    \ 3.0) {\n            $result[] = 'B+';\n        } elseif ($value >= 2.7) {\n\
    \            $result[] = 'B';\n        } elseif ($value >= 2.3) {\n          \
    \  $result[] = 'B-';\n        } elseif ($value >= 2.0) {\n            $result[]\
    \ = 'C+';\n        } elseif ($value >= 1.7) {\n            $result[] = 'C';\n\
    \        } elseif ($value >= 1.3) {\n            $result[] = 'C-';\n        }\
    \ elseif ($value >= 1.0) {\n            $result[] = 'D+';\n        } elseif ($value\
    \ >= 0.7) {\n            $result[] = 'D';\n        } elseif ($value >= 0.0) {\n\
    \            $result[] = 'D-';\n        } else {\n            $result[] = 'E';\n\
    \        }\n    }\n    return $result;\n}", "\t$grades = explode(',', $grades);\n\
    \t$let = array();\n\tforeach ($grades as $grade) {\n\t\tif ($grade == 0) {\n\t\
    \t\t$let[] = 'E';\n\t\t} elseif ($grade > 0 && $grade <= 0.7) {\n\t\t\t$let[]\
    \ = 'D-';\n\t\t} elseif ($grade > 0.7 && $grade <= 1.0) {\n\t\t\t$let[] = 'D+';\n\
    \t\t} elseif ($grade > 1.0 && $grade <= 1.3) {\n\t\t\t$let[] = 'C-';\n\t\t} elseif\
    \ ($grade > 1.3 && $grade <= 1.7) {\n\t\t\t$let[] = 'C';\n\t\t} elseif ($grade\
    \ > 1.7 && $grade <= 2.0) {\n\t\t\t$let[] = 'C+';\n\t\t} elseif ($grade > 2.0\
    \ && $grade <= 2.3) {\n\t\t\t$let[] = 'B-';\n\t\t} elseif ($grade > 2.3 && $grade\
    \ <= 2.7) {\n\t\t\t$let[] = 'B';\n\t\t} elseif ($grade > 2.7 && $grade <= 3.0)\
    \ {\n\t\t\t$let[] = 'B+';\n\t\t} elseif ($grade > 3.0 && $grade <= 3.3) {\n\t\t\
    \t$let[] = 'A-';\n\t\t} elseif ($grade > 3.3 && $grade <= 3.7) {\n\t\t\t$let[]\
    \ = 'A';\n\t\t} elseif ($grade > 3.7 && $grade <= 4.0) {\n\t\t\t$let[] = 'A+';\n\
    \t\t}\n\t}\n\treturn $let;\n}\necho \"<pre>\";\nprint_r(numerical_letter_grade('4.0,\
    \ 3, 1.7, 2, 3.5'));\necho \"</pre>\";", "  $letter_grades = [];\n  for ($i =\
    \ 0; $i < count($grades); $i++) {\n    $temp = ($grades[$i] * 10) % 10;\n    if\
    \ ($grades[$i] >= 4.0) {\n      $letter_grades[] = 'A+';\n    } else if ($grades[$i]\
    \ >= 3.7) {\n      $letter_grades[] = 'A';\n    } else if ($grades[$i] >= 3.3)\
    \ {\n      $letter_grades[] = 'A-';\n    } else if ($grades[$i] >= 3.0) {\n  \
    \    $letter_grades[] = 'B+';\n    } else if ($grades[$i] >= 2.7) {\n      $letter_grades[]\
    \ = 'B';\n    } else if ($grades[$i] >= 2.3) {\n      $letter_grades[] = 'B-';\n\
    \    } else if ($grades[$i] >= 2.0) {\n      $letter_grades[] = 'C+';\n    } else\
    \ if ($grades[$i] >= 1.7) {\n      $letter_grades[] = 'C';\n    } else if ($grades[$i]\
    \ >= 1.3) {\n      $letter_grades[] = 'C-';\n    } else if ($grades[$i] >= 1.0)\
    \ {\n      $letter_grades[] = 'D+';\n    } else if ($grades[$i] >= 0.7) {\n  \
    \    $letter_grades[] = 'D';\n    } else if ($grades[$i] > 0.0) {\n      $letter_grades[]\
    \ = 'D-';\n    } else {\n      $letter_grades[] = 'E';\n    }\n  }\n  return $letter_grades;\n\
    }\n$grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));",
  "$grade_letter = [];\nforeach ($grades as $grade) {\n    if ($grade == 4.0) {\n\
    \        $grade_letter[] = 'A+';\n    } elseif ($grade > 3.7) {\n        $grade_letter[]\
    \ = 'A';\n    } elseif ($grade > 3.3) {\n        $grade_letter[] = 'A-';\n   \
    \ } elseif ($grade > 3.0) {\n        $grade_letter[] = 'B+';\n    } elseif ($grade\
    \ > 2.7) {\n        $grade_letter[] = 'B';\n    } elseif ($grade > 2.3) {\n  \
    \      $grade_letter[] = 'B-';\n    } elseif ($grade > 2.0) {\n        $grade_letter[]\
    \ = 'C+';\n    } elseif ($grade > 1.7) {\n        $grade_letter[] = 'C';\n   \
    \ } elseif ($grade > 1.3) {\n        $grade_letter[] = 'C-';\n    } elseif ($grade\
    \ > 1.0) {\n        $grade_letter[] = 'D+';\n    } elseif ($grade > 0.7) {\n \
    \       $grade_letter[] = 'D';\n    } elseif ($grade > 0.0) {\n        $grade_letter[]\
    \ = 'D-';\n    } else {\n        $grade_letter[] = 'E';\n    }\n}\nreturn $grade_letter;\n\
    }\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5])); //  ['A+', 'B', 'C-',\
    \ 'C', 'A-']\nprint_r(numerical_letter_grade([3.5, 2.7, 3.3, 3.7, 2.5, 2.7, 2.5,\
    \ 2.7, 2.5, 2.7, 2.5, 2.7, 2.5, 2.7, 2.5, 2.7, 2.5, 2.7, 2.5, 2.7, 2.5, 2.7, 2.5,\
    \ 2.7, 2.5, 2.7, 2.5,", "    $grades = array_map(\n        function($x) {\n  \
    \          if ($x >= 4.0) {\n                return 'A+';\n            } elseif\
    \ ($x >= 3.7) {\n                return 'A';\n            } elseif ($x >= 3.3)\
    \ {\n                return 'A-';\n            } elseif ($x >= 3.0) {\n      \
    \          return 'B+';\n            } elseif ($x >= 2.7) {\n                return\
    \ 'B';\n            } elseif ($x >= 2.3) {\n                return 'B-';\n   \
    \         } elseif ($x >= 2.0) {\n                return 'C+';\n            }\
    \ elseif ($x >= 1.7) {\n                return 'C';\n            } elseif ($x\
    \ >= 1.3) {\n                return 'C-';\n            } elseif ($x >= 1.0) {\n\
    \                return 'D+';\n            } elseif ($x >= 0.7) {\n          \
    \      return 'D';\n            } elseif ($x >= 0.0) {\n                return\
    \ 'D-';\n            } else {\n                return 'E';\n            }\n  \
    \      },\n        $grades\n    );\n    return $grades;\n}\necho '<pre>';\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\necho '</pre>';\n", "    $grade_conversion = array(\n   \
    \     'A+' => 4.0,\n        'A' => 3.7,\n        'A-' => 3.3,\n        'B+' =>\
    \ 3.0,\n        'B' => 2.7,\n        'B-' => 2.3,\n        'C+' => 2.0,\n    \
    \    'C' => 1.7,\n        'C-' => 1.3,\n        'D+' => 1.0,\n        'D' => 0.7,\n\
    \        'D-' => 0.0,\n        'E' => 0.0\n    );\n    $numerical_conversion =\
    \ array_flip($grade_conversion);\n    $numerical_grades = array();\n    foreach\
    \ ($grades as $grade) {\n        if ($grade >= 4.0) {\n            $numerical_grades[]\
    \ = 4.0;\n        } elseif ($grade >= 3.7) {\n            $numerical_grades[]\
    \ = 3.7;\n        } elseif ($grade >= 3.3) {\n            $numerical_grades[]\
    \ = 3.3;\n        } elseif ($grade >= 3.0) {\n            $numerical_grades[]\
    \ = 3.0;\n        } elseif ($grade >= 2.7) {\n            $numerical_grades[]\
    \ = 2.7;\n        } elseif ($grade >= 2.3) {\n            $numerical_grades[]\
    \ = 2.3;\n        } elseif ($grade >= 2.0) {\n            $numerical_grades[]\
    \ = 2.0;\n        } elseif ($grade >= 1.7) {\n            $numerical_grades[]\
    \ = 1.7;\n        } elseif ($grade >= 1.3) {\n            $numerical_grades[]\
    \ = 1.3;\n        } elseif ($grade >= 1.0) {\n            $numerical_grades[]\
    \ = 1.0;\n        } elseif ($grade >= 0.7) {\n            $numerical_grades[]\
    \ = 0.7;\n        } elseif ($grade >= 0.0) {\n            $numerical_grades[]\
    \ = 0.0;\n       ", "\t$returnArr = [];\n\tforeach ($grades as $grade) {\n\t\t\
    $returnArr[] = numerical_to_letter($grade);\n\t}\n\treturn $returnArr;\n}\n",
  "    $answers = [];\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0)\
    \ {\n            $answers[] = 'A+';\n        } elseif ($grade >= 3.7) {\n    \
    \        $answers[] = 'A';\n        } elseif ($grade >= 3.3) {\n            $answers[]\
    \ = 'A-';\n        } elseif ($grade >= 3.0) {\n            $answers[] = 'B+';\n\
    \        } elseif ($grade >= 2.7) {\n            $answers[] = 'B';\n        }\
    \ elseif ($grade >= 2.3) {\n            $answers[] = 'B-';\n        } elseif ($grade\
    \ >= 2.0) {\n            $answers[] = 'C+';\n        } elseif ($grade >= 1.7)\
    \ {\n            $answers[] = 'C';\n        } elseif ($grade >= 1.3) {\n     \
    \       $answers[] = 'C-';\n        } elseif ($grade >= 1.0) {\n            $answers[]\
    \ = 'D+';\n        } elseif ($grade >= 0.7) {\n            $answers[] = 'D';\n\
    \        } elseif ($grade > 0.0) {\n            $answers[] = 'D-';\n        }\
    \ else {\n            $answers[] = 'E';\n        }\n    }\n    return $answers;\n\
    }\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));",
  "\t$grades = [\n\t\t'E' => [0,0],\n\t\t'D-' => [0.1,0.7],\n\t\t'D' => [0.8,1.0],\n\
    \t\t'D+' => [1.1,1.3],\n\t\t'C-' => [1.4,1.7],\n\t\t'C' => [1.8,2.0],\n\t\t'C+'\
    \ => [2.1,2.3],\n\t\t'B-' => [2.4,2.7],\n\t\t'B' => [2.8,3.0],\n\t\t'B+' => [3.1,3.3],\n\
    \t\t'A-' => [3.4,3.7],\n\t\t'A' => [3.8,4.0],\n\t\t'A+' => [4.1,4.0]\n\t];\n\t\
    \n\t$letterGrades = [];\n\tforeach ($grades as $key => $value) {\n\t\tforeach\
    \ ($value as $k => $v) {\n\t\t\t$letterGrades[] = $key;\n\t\t}\n\t}\n\t\n\t$gradeOutput\
    \ = [];\n\tforeach ($letterGrades as $grade) {\n\t\tif ($grade >= 1.8 && $grade\
    \ <= 2.0) {\n\t\t\t$gradeOutput[] = 'C';\n\t\t} else if ($grade >= 2.1 && $grade\
    \ <= 2.3) {\n\t\t\t$gradeOutput[] = 'C+';\n\t\t} else if ($grade >= 2.4 && $grade\
    \ <= 2.7) {\n\t\t\t$gradeOutput[] = 'B-';\n\t\t} else if ($grade >= 2.8 && $grade\
    \ <= 3.0) {\n\t\t\t$gradeOutput[] = 'B';\n\t\t} else if ($grade >= 3.1 && $grade\
    \ <= 3.3) {\n\t\t\t$gradeOutput[] = 'B+';\n\t\t} else if ($grade >= 3.4 && $grade\
    \ <= 3.7) {\n\t\t\t$gradeOutput[] = 'A-';\n\t\t} else if ($grade >= 3.8 && $",
  "    $letters = [];\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0)\
    \ {\n            $letters[] = 'A+';\n        } elseif ($grade >= 3.7) {\n    \
    \        $letters[] = 'A';\n        } elseif ($grade >= 3.3) {\n            $letters[]\
    \ = 'A-';\n        } elseif ($grade >= 3.0) {\n            $letters[] = 'B+';\n\
    \        } elseif ($grade >= 2.7) {\n            $letters[] = 'B';\n        }\
    \ elseif ($grade >= 2.3) {\n            $letters[] = 'B-';\n        } elseif ($grade\
    \ >= 2.0) {\n            $letters[] = 'C+';\n        } elseif ($grade >= 1.7)\
    \ {\n            $letters[] = 'C';\n        } elseif ($grade >= 1.3) {\n     \
    \       $letters[] = 'C-';\n        } elseif ($grade >= 1.0) {\n            $letters[]\
    \ = 'D+';\n        } elseif ($grade >= 0.7) {\n            $letters[] = 'D';\n\
    \        } elseif ($grade >= 0.0) {\n            $letters[] = 'D-';\n        }\
    \ else {\n            $letters[] = 'E';\n        }\n    }\n    return $letters;\n\
    }\necho '<pre>';\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\necho\
    \ '</pre>';", "    $letter_grades = [];\n    foreach ($grades as $grade) {\n \
    \       if ($grade >= 4.0) {\n            $letter_grades[] = 'A+';\n        }\
    \ elseif ($grade >= 3.7) {\n            $letter_grades[] = 'A';\n        } elseif\
    \ ($grade >= 3.3) {\n            $letter_grades[] = 'A-';\n        } elseif ($grade\
    \ >= 3.0) {\n            $letter_grades[] = 'B+';\n        } elseif ($grade >=\
    \ 2.7) {\n            $letter_grades[] = 'B';\n        } elseif ($grade >= 2.3)\
    \ {\n            $letter_grades[] = 'B-';\n        } elseif ($grade >= 2.0) {\n\
    \            $letter_grades[] = 'C+';\n        } elseif ($grade >= 1.7) {\n  \
    \          $letter_grades[] = 'C';\n        } elseif ($grade >= 1.3) {\n     \
    \       $letter_grades[] = 'C-';\n        } elseif ($grade >= 1.0) {\n       \
    \     $letter_grades[] = 'D+';\n        } elseif ($grade >= 0.7) {\n         \
    \   $letter_grades[] = 'D';\n        } elseif ($grade >= 0.0) {\n            $letter_grades[]\
    \ = 'D-';\n        } else {\n            $letter_grades[] = 'E';\n        }\n\
    \    }\n    return $letter_grades;\n}\n", "    $grades_letters = [];\n    foreach\
    \ ($grades as $grade) {\n        if ($grade >= 4.0) {\n            $grades_letters[]\
    \ = 'A+';\n        } elseif ($grade >= 3.7) {\n            $grades_letters[] =\
    \ 'A';\n        } elseif ($grade >= 3.3) {\n            $grades_letters[] = 'A-';\n\
    \        } elseif ($grade >= 3.0) {\n            $grades_letters[] = 'B+';\n \
    \       } elseif ($grade >= 2.7) {\n            $grades_letters[] = 'B';\n   \
    \     } elseif ($grade >= 2.3) {\n            $grades_letters[] = 'B-';\n    \
    \    } elseif ($grade >= 2.0) {\n            $grades_letters[] = 'C+';\n     \
    \   } elseif ($grade >= 1.7) {\n            $grades_letters[] = 'C';\n       \
    \ } elseif ($grade >= 1.3) {\n            $grades_letters[] = 'C-';\n        }\
    \ elseif ($grade >= 1.0) {\n            $grades_letters[] = 'D+';\n        } elseif\
    \ ($grade >= 0.7) {\n            $grades_letters[] = 'D';\n        } elseif ($grade\
    \ >= 0.0) {\n            $grades_letters[] = 'D-';\n        } else {\n       \
    \     $grades_letters[] = 'E';\n        }\n    }\n    return $grades_letters;\n\
    }\n", "    $letters = array();\n    foreach ($grades as $grade) {\n        if\
    \ ($grade == 4.0) {\n            $letters[] = 'A+';\n        } elseif ($grade\
    \ > 3.7) {\n            $letters[] = 'A';\n        } elseif ($grade > 3.3) {\n\
    \            $letters[] = 'A-';\n        } elseif ($grade > 3.0) {\n         \
    \   $letters[] = 'B+';\n        } elseif ($grade > 2.7) {\n            $letters[]\
    \ = 'B';\n        } elseif ($grade > 2.3) {\n            $letters[] = 'B-';\n\
    \        } elseif ($grade > 2.0) {\n            $letters[] = 'C+';\n        }\
    \ elseif ($grade > 1.7) {\n            $letters[] = 'C';\n        } elseif ($grade\
    \ > 1.3) {\n            $letters[] = 'C-';\n        } elseif ($grade > 1.0) {\n\
    \            $letters[] = 'D+';\n        } elseif ($grade > 0.7) {\n         \
    \   $letters[] = 'D';\n        } elseif ($grade > 0.0) {\n            $letters[]\
    \ = 'D-';\n        } else {\n            $letters[] = 'E';\n        }\n    }\n\
    \    return $letters;\n}\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\n\
    echo PHP_EOL;", "    $letters = [];\n    foreach ($grades as $grade) {\n     \
    \   if ($grade >= 4.0) {\n            $letters[] = 'A+';\n        } elseif ($grade\
    \ >= 3.7) {\n            $letters[] = 'A';\n        } elseif ($grade >= 3.3) {\n\
    \            $letters[] = 'A-';\n        } elseif ($grade >= 3.0) {\n        \
    \    $letters[] = 'B+';\n        } elseif ($grade >= 2.7) {\n            $letters[]\
    \ = 'B';\n        } elseif ($grade >= 2.3) {\n            $letters[] = 'B-';\n\
    \        } elseif ($grade >= 2.0) {\n            $letters[] = 'C+';\n        }\
    \ elseif ($grade >= 1.7) {\n            $letters[] = 'C';\n        } elseif ($grade\
    \ >= 1.3) {\n            $letters[] = 'C-';\n        } elseif ($grade >= 1.0)\
    \ {\n            $letters[] = 'D+';\n        } elseif ($grade >= 0.7) {\n    \
    \        $letters[] = 'D';\n        } elseif ($grade >= 0.0) {\n            $letters[]\
    \ = 'D-';\n        } else {\n            $letters[] = 'E';\n        }\n    }\n\
    \    return $letters;\n}", "    $letterGrades = array();\n    foreach ($grades\
    \ as $grade) {\n        if ($grade >= 4.0) {\n            $letterGrades[] = 'A+';\n\
    \        } elseif ($grade >= 3.7) {\n            $letterGrades[] = 'A';\n    \
    \    } elseif ($grade >= 3.3) {\n            $letterGrades[] = 'A-';\n       \
    \ } elseif ($grade >= 3.0) {\n            $letterGrades[] = 'B+';\n        } elseif\
    \ ($grade >= 2.7) {\n            $letterGrades[] = 'B';\n        } elseif ($grade\
    \ >= 2.3) {\n            $letterGrades[] = 'B-';\n        } elseif ($grade >=\
    \ 2.0) {\n            $letterGrades[] = 'C+';\n        } elseif ($grade >= 1.7)\
    \ {\n            $letterGrades[] = 'C';\n        } elseif ($grade >= 1.3) {\n\
    \            $letterGrades[] = 'C-';\n        } elseif ($grade >= 1.0) {\n   \
    \         $letterGrades[] = 'D+';\n        } elseif ($grade >= 0.7) {\n      \
    \      $letterGrades[] = 'D';\n        } elseif ($grade >= 0.0) {\n          \
    \  $letterGrades[] = 'D-';\n        } else {\n            $letterGrades[] = 'E';\n\
    \        }\n    }\n    return $letterGrades;\n}\n\n$grades = [4.0, 3, 1.7, 2,\
    \ 3.5];\n$letterGrades = numerical_letter_grade($grades);\nforeach ($letterGrades\
    \ as $grade) {\n    echo $grade . ' ';\n}\necho '<br>';\n", "\t$result = [];\n\
    \tforeach ($grades as $gpa) {\n\t\tswitch ($gpa) {\n\t\t\tcase ($gpa >= 4.0):\n\
    \t\t\t\t$result[] = 'A+';\n\t\t\t\tbreak;\n\t\t\tcase ($gpa >= 3.7):\n\t\t\t\t\
    $result[] = 'A';\n\t\t\t\tbreak;\n\t\t\tcase ($gpa >= 3.3):\n\t\t\t\t$result[]\
    \ = 'A-';\n\t\t\t\tbreak;\n\t\t\tcase ($gpa >= 3.0):\n\t\t\t\t$result[] = 'B+';\n\
    \t\t\t\tbreak;\n\t\t\tcase ($gpa >= 2.7):\n\t\t\t\t$result[] = 'B';\n\t\t\t\t\
    break;\n\t\t\tcase ($gpa >= 2.3):\n\t\t\t\t$result[] = 'B-';\n\t\t\t\tbreak;\n\
    \t\t\tcase ($gpa >= 2.0):\n\t\t\t\t$result[] = 'C+';\n\t\t\t\tbreak;\n\t\t\tcase\
    \ ($gpa >= 1.7):\n\t\t\t\t$result[] = 'C';\n\t\t\t\tbreak;\n\t\t\tcase ($gpa >=\
    \ 1.3):\n\t\t\t\t$result[] = 'C-';\n\t\t\t\tbreak;\n\t\t\tcase ($gpa >= 1.0):\n\
    \t\t\t\t$result[] = 'D+';\n\t\t\t\tbreak;\n\t\t\tcase ($gpa >= 0.7):\n\t\t\t\t\
    $result[] = 'D';\n\t\t\t\tbreak;\n\t\t\tcase ($gpa >= 0.0):\n\t\t\t\t$result[]\
    \ = 'D-';\n\t\t\t\tbreak;\n\t\t\tcase ($gpa == 0.0):\n\t\t\t\t$result[] = 'E';\n\
    \t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}", "  $res = [];\n  foreach ($grades\
    \ as $grade) {\n    if ($grade >= 4.0) $res[] = 'A+';\n    else if ($grade >=\
    \ 3.7) $res[] = 'A';\n    else if ($grade >= 3.3) $res[] = 'A-';\n    else if\
    \ ($grade >= 3.0) $res[] = 'B+';\n    else if ($grade >= 2.7) $res[] = 'B';\n\
    \    else if ($grade >= 2.3) $res[] = 'B-';\n    else if ($grade >= 2.0) $res[]\
    \ = 'C+';\n    else if ($grade >= 1.7) $res[] = 'C';\n    else if ($grade >= 1.3)\
    \ $res[] = 'C-';\n    else if ($grade >= 1.0) $res[] = 'D+';\n    else if ($grade\
    \ >= 0.7) $res[] = 'D';\n    else if ($grade >= 0.0) $res[] = 'D-';\n    else\
    \ $res[] = 'E';\n  }\n  return $res;\n}\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\nprint_r(numerical_letter_grade([4.0, 4.0, 4.0, 4.0, 4.0]));\n\
    print_r(numerical_letter_grade([0.0, 0.0, 0.0, 0.0, 0.0]));\n", "  $numerical_letter_grades\
    \ = [];\n  foreach ($grades as $grade) {\n    if ($grade == 4.0) {\n      $numerical_letter_grades[]\
    \ = 'A+';\n    } elseif ($grade > 3.7) {\n      $numerical_letter_grades[] = 'A';\n\
    \    } elseif ($grade > 3.3) {\n      $numerical_letter_grades[] = 'A-';\n   \
    \ } elseif ($grade > 3.0) {\n      $numerical_letter_grades[] = 'B+';\n    } elseif\
    \ ($grade > 2.7) {\n      $numerical_letter_grades[] = 'B';\n    } elseif ($grade\
    \ > 2.3) {\n      $numerical_letter_grades[] = 'B-';\n    } elseif ($grade > 2.0)\
    \ {\n      $numerical_letter_grades[] = 'C+';\n    } elseif ($grade > 1.7) {\n\
    \      $numerical_letter_grades[] = 'C';\n    } elseif ($grade > 1.3) {\n    \
    \  $numerical_letter_grades[] = 'C-';\n    } elseif ($grade > 1.0) {\n      $numerical_letter_grades[]\
    \ = 'D+';\n    } elseif ($grade > 0.7) {\n      $numerical_letter_grades[] = 'D';\n\
    \    } elseif ($grade > 0.0) {\n      $numerical_letter_grades[] = 'D-';\n   \
    \ } else {\n      $numerical_letter_grades[] = 'E';\n    }\n  }\n  return $numerical_letter_grades;\n\
    }", "    $grades = [4.0, 3, 1.7, 2, 3.5];\n    $letter_grades = [];\n    for ($i\
    \ = 0; $i < count($grades); $i++) {\n        if ($grades[$i] == 4.0) {\n     \
    \       $letter_grades[] = \"A+\";\n        } elseif ($grades[$i] > 3.7) {\n \
    \           $letter_grades[] = \"A\";\n        } elseif ($grades[$i] > 3.3) {\n\
    \            $letter_grades[] = \"A-\";\n        } elseif ($grades[$i] > 3.0)\
    \ {\n            $letter_grades[] = \"B+\";\n        } elseif ($grades[$i] > 2.7)\
    \ {\n            $letter_grades[] = \"B\";\n        } elseif ($grades[$i] > 2.3)\
    \ {\n            $letter_grades[] = \"B-\";\n        } elseif ($grades[$i] > 2.0)\
    \ {\n            $letter_grades[] = \"C+\";\n        } elseif ($grades[$i] > 1.7)\
    \ {\n            $letter_grades[] = \"C\";\n        } elseif ($grades[$i] > 1.3)\
    \ {\n            $letter_grades[] = \"C-\";\n        } elseif ($grades[$i] > 1.0)\
    \ {\n            $letter_grades[] = \"D+\";\n        } elseif ($grades[$i] > 0.7)\
    \ {\n            $letter_grades[] = \"D\";\n        } elseif ($grades[$i] > 0.0)\
    \ {\n            $letter_grades[] = \"D-\";\n        } elseif ($grades[$i] ==\
    \ 0.0) {\n            $letter_grades[] = \"E\";\n        }\n    }\n    return\
    \ $letter_grades;\n}\nnumerical_letter_grade($grades);", "    $letter_grades =\
    \ [];\n    foreach ($grades as $grade) {\n        if ($grade == 4.0) {\n     \
    \       $letter_grades[] = 'A+';\n        } elseif ($grade > 3.7) {\n        \
    \    $letter_grades[] = 'A';\n        } elseif ($grade > 3.3) {\n            $letter_grades[]\
    \ = 'A-';\n        } elseif ($grade > 3.0) {\n            $letter_grades[] = 'B+';\n\
    \        } elseif ($grade > 2.7) {\n            $letter_grades[] = 'B';\n    \
    \    } elseif ($grade > 2.3) {\n            $letter_grades[] = 'B-';\n       \
    \ } elseif ($grade > 2.0) {\n            $letter_grades[] = 'C+';\n        } elseif\
    \ ($grade > 1.7) {\n            $letter_grades[] = 'C';\n        } elseif ($grade\
    \ > 1.3) {\n            $letter_grades[] = 'C-';\n        } elseif ($grade > 1.0)\
    \ {\n            $letter_grades[] = 'D+';\n        } elseif ($grade > 0.7) {\n\
    \            $letter_grades[] = 'D';\n        } elseif ($grade > 0.0) {\n    \
    \        $letter_grades[] = 'D-';\n        } else {\n            $letter_grades[]\
    \ = 'E';\n        }\n    }\n    return $letter_grades;\n}\necho '<pre>';\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\necho '</pre>';\n", "$grades_key = [\n'A+' => 4.0,\n'A' =>\
    \ 3.7,\n'A-' => 3.3,\n'B+' => 3.0,\n'B' => 2.7,\n'B-' => 2.3,\n'C+' => 2.0,\n\
    'C' => 1.7,\n'C-' => 1.3,\n'D+' => 1.0,\n'D' => 0.7,\n'D-' => 0.0,\n'E' => 0.0\n\
    ];\n$grades_reverse = array_reverse($grades_key);\n$grades_letter = [];\nfor ($i=0;\
    \ $i < count($grades); $i++) { \n    foreach ($grades_reverse as $key => $value)\
    \ {\n        if ($grades[$i] >= $value) {\n            $grades_letter[] = $key;\n\
    \            break;\n        }\n    }\n}\nreturn $grades_letter;\n}", "    $letters\
    \ = [];\n    foreach ($grades as $grade) {\n        switch ($grade) {\n      \
    \      case $grade >= 4.0:\n                $letters[] = 'A+';\n             \
    \   break;\n            case $grade >= 3.7:\n                $letters[] = 'A';\n\
    \                break;\n            case $grade >= 3.3:\n                $letters[]\
    \ = 'A-';\n                break;\n            case $grade >= 3.0:\n         \
    \       $letters[] = 'B+';\n                break;\n            case $grade >=\
    \ 2.7:\n                $letters[] = 'B';\n                break;\n          \
    \  case $grade >= 2.3:\n                $letters[] = 'B-';\n                break;\n\
    \            case $grade >= 2.0:\n                $letters[] = 'C+';\n       \
    \         break;\n            case $grade >= 1.7:\n                $letters[]\
    \ = 'C';\n                break;\n            case $grade >= 1.3:\n          \
    \      $letters[] = 'C-';\n                break;\n            case $grade >=\
    \ 1.0:\n                $letters[] = 'D+';\n                break;\n         \
    \   case $grade >= 0.7:\n                $letters[] = 'D';\n                break;\n\
    \            case $grade >= 0.0:\n                $letters[] = 'D-';\n       \
    \         break;\n            case $grade == 0.0:\n                $letters[]\
    \ = 'E';\n                break;\n        }\n    }\n    return $letters;\n}\n",
  "$result = [];\nforeach ($grades as $grade) {\n    if ($grade > 3.7) {\n       \
    \ $result[] = 'A+';\n    } elseif ($grade > 3.3) {\n        $result[] = 'A';\n\
    \    } elseif ($grade > 3.0) {\n        $result[] = 'A-';\n    } elseif ($grade\
    \ > 2.7) {\n        $result[] = 'B+';\n    } elseif ($grade > 2.3) {\n       \
    \ $result[] = 'B';\n    } elseif ($grade > 2.0) {\n        $result[] = 'B-';\n\
    \    } elseif ($grade > 1.7) {\n        $result[] = 'C+';\n    } elseif ($grade\
    \ > 1.3) {\n        $result[] = 'C';\n    } elseif ($grade > 1.0) {\n        $result[]\
    \ = 'C-';\n    } elseif ($grade > 0.7) {\n        $result[] = 'D+';\n    } elseif\
    \ ($grade > 0.0) {\n        $result[] = 'D';\n    } elseif ($grade == 0.0) {\n\
    \        $result[] = 'E';\n    }\n}\nreturn $result;\n}\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $answer = [];\n    foreach ($grades as $grade) {\n\
    \        if ($grade > 4) {\n            $answer[] = 'not valid';\n        } elseif\
    \ ($grade >= 3.7) {\n            $answer[] = 'A';\n        } elseif ($grade >=\
    \ 3.3) {\n            $answer[] = 'A-';\n        } elseif ($grade >= 3) {\n  \
    \          $answer[] = 'B+';\n        } elseif ($grade >= 2.7) {\n           \
    \ $answer[] = 'B';\n        } elseif ($grade >= 2.3) {\n            $answer[]\
    \ = 'B-';\n        } elseif ($grade >= 2) {\n            $answer[] = 'C+';\n \
    \       } elseif ($grade >= 1.7) {\n            $answer[] = 'C';\n        } elseif\
    \ ($grade >= 1.3) {\n            $answer[] = 'C-';\n        } elseif ($grade >=\
    \ 1) {\n            $answer[] = 'D+';\n        } elseif ($grade >= 0.7) {\n  \
    \          $answer[] = 'D';\n        } elseif ($grade >= 0) {\n            $answer[]\
    \ = 'D-';\n        } else {\n            $answer[] = 'E';\n        }\n    }\n\
    \    return $answer;\n}\necho '<h2>Numerical-Letter Grade</h2>';\necho '<p>Expected\
    \ values: A+, B, C-, C, A-</p>';\necho 'Actual values: ';\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\n", "    return array_map(function($item) {\n        if($item\
    \ >= 4.0) {\n            return 'A+';\n        }\n        elseif($item >= 3.7)\
    \ {\n            return 'A';\n        }\n        elseif($item >= 3.3) {\n    \
    \        return 'A-';\n        }\n        elseif($item >= 3.0) {\n           \
    \ return 'B+';\n        }\n        elseif($item >= 2.7) {\n            return\
    \ 'B';\n        }\n        elseif($item >= 2.3) {\n            return 'B-';\n\
    \        }\n        elseif($item >= 2.0) {\n            return 'C+';\n       \
    \ }\n        elseif($item >= 1.7) {\n            return 'C';\n        }\n    \
    \    elseif($item >= 1.3) {\n            return 'C-';\n        }\n        elseif($item\
    \ >= 1.0) {\n            return 'D+';\n        }\n        elseif($item >= 0.7)\
    \ {\n            return 'D';\n        }\n        elseif($item >= 0.0) {\n    \
    \        return 'D-';\n        }\n        else {\n            return 'E';\n  \
    \      }\n    }, $grades);\n}\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));",
  "    $letter_grades = [];\n    foreach ($grades as $grade) {\n        switch ($grade)\
    \ {\n            case $grade >= 4.0:\n                $letter_grades[] = 'A+';\n\
    \                break;\n            case $grade >= 3.7:\n                $letter_grades[]\
    \ = 'A';\n                break;\n            case $grade >= 3.3:\n          \
    \      $letter_grades[] = 'A-';\n                break;\n            case $grade\
    \ >= 3.0:\n                $letter_grades[] = 'B+';\n                break;\n\
    \            case $grade >= 2.7:\n                $letter_grades[] = 'B';\n  \
    \              break;\n            case $grade >= 2.3:\n                $letter_grades[]\
    \ = 'B-';\n                break;\n            case $grade >= 2.0:\n         \
    \       $letter_grades[] = 'C+';\n                break;\n            case $grade\
    \ >= 1.7:\n                $letter_grades[] = 'C';\n                break;\n \
    \           case $grade >= 1.3:\n                $letter_grades[] = 'C-';\n  \
    \              break;\n            case $grade >= 1.0:\n                $letter_grades[]\
    \ = 'D+';\n                break;\n            case $grade >= 0.7:\n         \
    \       $letter_grades[] = 'D';\n                break;\n            case $grade\
    \ >= 0.0:\n                $letter_grades[] = 'D-';\n                break;\n\
    \            case $grade < 0.0:\n                $letter_grades[] = 'E';\n   \
    \             break;\n        }\n    }\n    return $letter_grades;\n}", "    $result\
    \ = [];\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n   \
    \         $result[] = 'A+';\n        } elseif ($grade >= 3.7) {\n            $result[]\
    \ = 'A';\n        } elseif ($grade >= 3.3) {\n            $result[] = 'A-';\n\
    \        } elseif ($grade >= 3.0) {\n            $result[] = 'B+';\n        }\
    \ elseif ($grade >= 2.7) {\n            $result[] = 'B';\n        } elseif ($grade\
    \ >= 2.3) {\n            $result[] = 'B-';\n        } elseif ($grade >= 2.0) {\n\
    \            $result[] = 'C+';\n        } elseif ($grade >= 1.7) {\n         \
    \   $result[] = 'C';\n        } elseif ($grade >= 1.3) {\n            $result[]\
    \ = 'C-';\n        } elseif ($grade >= 1.0) {\n            $result[] = 'D+';\n\
    \        } elseif ($grade >= 0.7) {\n            $result[] = 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            $result[] = 'D-';\n        } else {\n       \
    \     $result[] = 'E';\n        }\n    }\n    return $result;\n}\necho '<pre>';\n\
    var_dump(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));", "    $letter_grades\
    \ = array();\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n\
    \            $letter_grades[] = 'A+';\n        } elseif ($grade >= 3.7) {\n  \
    \          $letter_grades[] = 'A';\n        } elseif ($grade >= 3.3) {\n     \
    \       $letter_grades[] = 'A-';\n        } elseif ($grade >= 3.0) {\n       \
    \     $letter_grades[] = 'B+';\n        } elseif ($grade >= 2.7) {\n         \
    \   $letter_grades[] = 'B';\n        } elseif ($grade >= 2.3) {\n            $letter_grades[]\
    \ = 'B-';\n        } elseif ($grade >= 2.0) {\n            $letter_grades[] =\
    \ 'C+';\n        } elseif ($grade >= 1.7) {\n            $letter_grades[] = 'C';\n\
    \        } elseif ($grade >= 1.3) {\n            $letter_grades[] = 'C-';\n  \
    \      } elseif ($grade >= 1.0) {\n            $letter_grades[] = 'D+';\n    \
    \    } elseif ($grade >= 0.7) {\n            $letter_grades[] = 'D';\n       \
    \ } elseif ($grade >= 0.0) {\n            $letter_grades[] = 'D-';\n        }\
    \ else {\n            $letter_grades[] = 'E';\n        }\n    }\n    return $letter_grades;\n\
    }\necho \"<pre>\";\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5])); //\
    \ => ['A+', 'B', 'C-', 'C', 'A-']\necho \"</pre>\";\necho \"<hr>\";", "  $letter_grades\
    \ = array();\n  foreach ($grades as $grade) {\n    $letter_grade = \"E\";\n  \
    \  if ($grade >= 4.0) {\n      $letter_grade = \"A+\";\n    } else if ($grade\
    \ >= 3.7) {\n      $letter_grade = \"A\";\n    } else if ($grade >= 3.3) {\n \
    \     $letter_grade = \"A-\";\n    } else if ($grade >= 3.0) {\n      $letter_grade\
    \ = \"B+\";\n    } else if ($grade >= 2.7) {\n      $letter_grade = \"B\";\n \
    \   } else if ($grade >= 2.3) {\n      $letter_grade = \"B-\";\n    } else if\
    \ ($grade >= 2.0) {\n      $letter_grade = \"C+\";\n    } else if ($grade >= 1.7)\
    \ {\n      $letter_grade = \"C\";\n    } else if ($grade >= 1.3) {\n      $letter_grade\
    \ = \"C-\";\n    } else if ($grade >= 1.0) {\n      $letter_grade = \"D+\";\n\
    \    } else if ($grade >= 0.7) {\n      $letter_grade = \"D\";\n    } else if\
    \ ($grade >= 0.0) {\n      $letter_grade = \"D-\";\n    }\n    array_push($letter_grades,\
    \ $letter_grade);\n  }\n  return $letter_grades;\n}\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $res = [];\n    for ($i = 0; $i < count($grades);\
    \ $i++) {\n        if ($grades[$i] >= 4.0) {\n            $res[] = 'A+';\n   \
    \     } else if ($grades[$i] >= 3.7) {\n            $res[] = 'A';\n        } else\
    \ if ($grades[$i] >= 3.3) {\n            $res[] = 'A-';\n        } else if ($grades[$i]\
    \ >= 3.0) {\n            $res[] = 'B+';\n        } else if ($grades[$i] >= 2.7)\
    \ {\n            $res[] = 'B';\n        } else if ($grades[$i] >= 2.3) {\n   \
    \         $res[] = 'B-';\n        } else if ($grades[$i] >= 2.0) {\n         \
    \   $res[] = 'C+';\n        } else if ($grades[$i] >= 1.7) {\n            $res[]\
    \ = 'C';\n        } else if ($grades[$i] >= 1.3) {\n            $res[] = 'C-';\n\
    \        } else if ($grades[$i] >= 1.0) {\n            $res[] = 'D+';\n      \
    \  } else if ($grades[$i] >= 0.7) {\n            $res[] = 'D';\n        } else\
    \ if ($grades[$i] >= 0.0) {\n            $res[] = 'D-';\n        } else {\n  \
    \          $res[] = 'E';\n        }\n    }\n    return $res;\n}\n\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\necho '<br/>';\nprint_r(numerical_letter_grade([4.0, 3, 1.9,\
    \ 2, 3.5]));\necho '<br/>';\nprint_r(numerical_letter_grade([4.0, 3, 0.7, 2, 3.5]));\n\
    echo '<br/>';\nprint_r(numerical_letter_grade([4.0, 3, -1, 2, 3.5]));", "    return\
    \ array_map(function($grade) {\n        if ($grade >= 4.0) {\n            return\
    \ 'A+';\n        } elseif ($grade >= 3.7) {\n            return 'A';\n       \
    \ } elseif ($grade >= 3.3) {\n            return 'A-';\n        } elseif ($grade\
    \ >= 3.0) {\n            return 'B+';\n        } elseif ($grade >= 2.7) {\n  \
    \          return 'B';\n        } elseif ($grade >= 2.3) {\n            return\
    \ 'B-';\n        } elseif ($grade >= 2.0) {\n            return 'C+';\n      \
    \  } elseif ($grade >= 1.7) {\n            return 'C';\n        } elseif ($grade\
    \ >= 1.3) {\n            return 'C-';\n        } elseif ($grade >= 1.0) {\n  \
    \          return 'D+';\n        } elseif ($grade >= 0.7) {\n            return\
    \ 'D';\n        } elseif ($grade >= 0.0) {\n            return 'D-';\n       \
    \ } else {\n            return 'E';\n        }\n    }, $grades);\n}\n", "    $gpa\
    \ = array_combine(\n        $grades,\n        array_map(\n            function($grade)\
    \ {\n                if ($grade > 4) return 'A+';\n                if ($grade\
    \ > 3.7) return 'A';\n                if ($grade > 3.3) return 'A-';\n       \
    \         if ($grade > 3) return 'B+';\n                if ($grade > 2.7) return\
    \ 'B';\n                if ($grade > 2.3) return 'B-';\n                if ($grade\
    \ > 2) return 'C+';\n                if ($grade > 1.7) return 'C';\n         \
    \       if ($grade > 1.3) return 'C-';\n                if ($grade > 1) return\
    \ 'D+';\n                if ($grade > 0.7) return 'D';\n                if ($grade\
    \ > 0) return 'D-';\n                return 'E';\n            },\n           \
    \ $grades\n        )\n    );\n    return $gpa;\n}\n", "    $result = [];\n   \
    \ for ($i = 0; $i < count($grades); $i++) {\n        if ($grades[$i] == 4.0) {\n\
    \            $result[] = 'A+';\n        } elseif ($grades[$i] >= 3.7) {\n    \
    \        $result[] = 'A';\n        } elseif ($grades[$i] >= 3.3) {\n         \
    \   $result[] = 'A-';\n        } elseif ($grades[$i] >= 3.0) {\n            $result[]\
    \ = 'B+';\n        } elseif ($grades[$i] >= 2.7) {\n            $result[] = 'B';\n\
    \        } elseif ($grades[$i] >= 2.3) {\n            $result[] = 'B-';\n    \
    \    } elseif ($grades[$i] >= 2.0) {\n            $result[] = 'C+';\n        }\
    \ elseif ($grades[$i] >= 1.7) {\n            $result[] = 'C';\n        } elseif\
    \ ($grades[$i] >= 1.3) {\n            $result[] = 'C-';\n        } elseif ($grades[$i]\
    \ >= 1.0) {\n            $result[] = 'D+';\n        } elseif ($grades[$i] >= 0.7)\
    \ {\n            $result[] = 'D';\n        } elseif ($grades[$i] >= 0.0) {\n \
    \           $result[] = 'D-';\n        } else {\n            $result[] = 'E';\n\
    \        }\n    }\n    return $result;\n}\n", "    // your code here\n}\n", " \
    \ $gradesArray = [];\n  foreach ($grades as $grade) {\n    if ($grade === 4.0)\
    \ {\n      array_push($gradesArray, 'A+');\n    } elseif ($grade >= 3.7) {\n \
    \     array_push($gradesArray, 'A');\n    } elseif ($grade >= 3.3) {\n      array_push($gradesArray,\
    \ 'A-');\n    } elseif ($grade >= 3.0) {\n      array_push($gradesArray, 'B+');\n\
    \    } elseif ($grade >= 2.7) {\n      array_push($gradesArray, 'B');\n    } elseif\
    \ ($grade >= 2.3) {\n      array_push($gradesArray, 'B-');\n    } elseif ($grade\
    \ >= 2.0) {\n      array_push($gradesArray, 'C+');\n    } elseif ($grade >= 1.7)\
    \ {\n      array_push($gradesArray, 'C');\n    } elseif ($grade >= 1.3) {\n  \
    \    array_push($gradesArray, 'C-');\n    } elseif ($grade >= 1.0) {\n      array_push($gradesArray,\
    \ 'D+');\n    } elseif ($grade >= 0.7) {\n      array_push($gradesArray, 'D');\n\
    \    } elseif ($grade >= 0.0) {\n      array_push($gradesArray, 'D-');\n    }\
    \ else {\n      array_push($gradesArray, 'E');\n    }\n  }\n  return $gradesArray;\n\
    }\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\nprint_r(numerical_letter_grade($grades));",
  "  $map = [\n    4.0 => 'A+',\n    3.7 => 'A',\n    3.3 => 'A-',\n    3.0 => 'B+',\n\
    \    2.7 => 'B',\n    2.3 => 'B-',\n    2.0 => 'C+',\n    1.7 => 'C',\n    1.3\
    \ => 'C-',\n    1.0 => 'D+',\n    0.7 => 'D',\n    0.0 => 'D-',\n  ];\n  $res\
    \ = [];\n  foreach ($grades as $g) {\n    $last_key = 0;\n    foreach ($map as\
    \ $key => $value) {\n      if ($g >= $key) {\n        $res[] = $value;\n     \
    \   break;\n      }\n      $last_key = $key;\n    }\n    if ($g < $last_key) {\n\
    \      $res[] = 'E';\n    }\n  }\n  return $res;\n}\n\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));", "    $grades_letters = [];\n    foreach ($grades as $grade)\
    \ {\n        if($grade >= 4.0) {\n            $grades_letters[] = 'A+';\n    \
    \    } elseif ($grade > 3.7) {\n            $grades_letters[] = 'A';\n       \
    \ } elseif ($grade > 3.3) {\n            $grades_letters[] = 'A-';\n        }\
    \ elseif ($grade > 3.0) {\n            $grades_letters[] = 'B+';\n        } elseif\
    \ ($grade > 2.7) {\n            $grades_letters[] = 'B';\n        } elseif ($grade\
    \ > 2.3) {\n            $grades_letters[] = 'B-';\n        } elseif ($grade >\
    \ 2.0) {\n            $grades_letters[] = 'C+';\n        } elseif ($grade > 1.7)\
    \ {\n            $grades_letters[] = 'C';\n        } elseif ($grade > 1.3) {\n\
    \            $grades_letters[] = 'C-';\n        } elseif ($grade > 1.0) {\n  \
    \          $grades_letters[] = 'D+';\n        } elseif ($grade > 0.7) {\n    \
    \        $grades_letters[] = 'D';\n        } elseif ($grade > 0.0) {\n       \
    \     $grades_letters[] = 'D-';\n        } else {\n            $grades_letters[]\
    \ = 'E';\n        }\n    }\n    return $grades_letters;\n}", "\t$letter_grades\
    \ = [];\n\tforeach ($grades as $grade) {\n\t\tif ($grade >= 4.0) {\n\t\t\t$letter_grades[]\
    \ = 'A+';\n\t\t} elseif ($grade >= 3.7) {\n\t\t\t$letter_grades[] = 'A';\n\t\t\
    } elseif ($grade >= 3.3) {\n\t\t\t$letter_grades[] = 'A-';\n\t\t} elseif ($grade\
    \ >= 3.0) {\n\t\t\t$letter_grades[] = 'B+';\n\t\t} elseif ($grade >= 2.7) {\n\t\
    \t\t$letter_grades[] = 'B';\n\t\t} elseif ($grade >= 2.3) {\n\t\t\t$letter_grades[]\
    \ = 'B-';\n\t\t} elseif ($grade >= 2.0) {\n\t\t\t$letter_grades[] = 'C+';\n\t\t\
    } elseif ($grade >= 1.7) {\n\t\t\t$letter_grades[] = 'C';\n\t\t} elseif ($grade\
    \ >= 1.3) {\n\t\t\t$letter_grades[] = 'C-';\n\t\t} elseif ($grade >= 1.0) {\n\t\
    \t\t$letter_grades[] = 'D+';\n\t\t} elseif ($grade >= 0.7) {\n\t\t\t$letter_grades[]\
    \ = 'D';\n\t\t} elseif ($grade >= 0.0) {\n\t\t\t$letter_grades[] = 'D-';\n\t\t\
    } else {\n\t\t\t$letter_grades[] = 'E';\n\t\t}\n\t}\n\treturn $letter_grades;\n\
    }\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));", "  $res = [];\n \
    \ foreach ($grades as $grade) {\n    switch (true) {\n      case $grade > 3.7:\n\
    \        $res[] = 'A+';\n        break;\n      case $grade > 3.3:\n        $res[]\
    \ = 'A';\n        break;\n      case $grade > 3.0:\n        $res[] = 'A-';\n \
    \       break;\n      case $grade > 2.7:\n        $res[] = 'B+';\n        break;\n\
    \      case $grade > 2.3:\n        $res[] = 'B';\n        break;\n      case $grade\
    \ > 2.0:\n        $res[] = 'B-';\n        break;\n      case $grade > 1.7:\n \
    \       $res[] = 'C+';\n        break;\n      case $grade > 1.3:\n        $res[]\
    \ = 'C';\n        break;\n      case $grade > 1.0:\n        $res[] = 'C-';\n \
    \       break;\n      case $grade > 0.7:\n        $res[] = 'D+';\n        break;\n\
    \      case $grade > 0.0:\n        $res[] = 'D';\n        break;\n      case $grade\
    \ > 0.0:\n        $res[] = 'D-';\n        break;\n      default:\n        $res[]\
    \ = 'E';\n    }\n  }\n  return $res;\n}\n$grades = [4.0, 3, 1.7, 2, 3.5];\n$res\
    \ = numerical_letter_grade($grades);\nprint_r($res);\necho \"\\n\";", "    $letters\
    \ = [];\n    foreach ($grades as $grade) {\n        if ($grade > 4.0) {\n    \
    \        $letters[] = 'A+';\n        } elseif ($grade > 3.7) {\n            $letters[]\
    \ = 'A';\n        } elseif ($grade > 3.3) {\n            $letters[] = 'A-';\n\
    \        } elseif ($grade > 3.0) {\n            $letters[] = 'B+';\n        }\
    \ elseif ($grade > 2.7) {\n            $letters[] = 'B';\n        } elseif ($grade\
    \ > 2.3) {\n            $letters[] = 'B-';\n        } elseif ($grade > 2.0) {\n\
    \            $letters[] = 'C+';\n        } elseif ($grade > 1.7) {\n         \
    \   $letters[] = 'C';\n        } elseif ($grade > 1.3) {\n            $letters[]\
    \ = 'C-';\n        } elseif ($grade > 1.0) {\n            $letters[] = 'D+';\n\
    \        } elseif ($grade > 0.7) {\n            $letters[] = 'D';\n        } elseif\
    \ ($grade > 0.0) {\n            $letters[] = 'D-';\n        } else {\n       \
    \     $letters[] = 'E';\n        }\n    }\n    return $letters;\n}\n", "    $grades\
    \ = array_map(function($grade) {\n        switch (true) {\n            case $grade\
    \ == 4.0:\n                return 'A+';\n            case $grade > 3.7:\n    \
    \            return 'A';\n            case $grade > 3.3:\n                return\
    \ 'A-';\n            case $grade > 3.0:\n                return 'B+';\n      \
    \      case $grade > 2.7:\n                return 'B';\n            case $grade\
    \ > 2.3:\n                return 'B-';\n            case $grade > 2.0:\n     \
    \           return 'C+';\n            case $grade > 1.7:\n                return\
    \ 'C';\n            case $grade > 1.3:\n                return 'C-';\n       \
    \     case $grade > 1.0:\n                return 'D+';\n            case $grade\
    \ > 0.7:\n                return 'D';\n            case $grade > 0.0:\n      \
    \          return 'D-';\n            default:\n                return 'E';\n \
    \       }\n    }, $grades);\n    return $grades;\n}\n", "    $output = [];\n \
    \   foreach ($grades as $grade) {\n        if ($grade == 4.0) {\n            $output[]\
    \ = 'A+';\n        } elseif ($grade > 3.7) {\n            $output[] = 'A';\n \
    \       } elseif ($grade > 3.3) {\n            $output[] = 'A-';\n        } elseif\
    \ ($grade > 3.0) {\n            $output[] = 'B+';\n        } elseif ($grade >\
    \ 2.7) {\n            $output[] = 'B';\n        } elseif ($grade > 2.3) {\n  \
    \          $output[] = 'B-';\n        } elseif ($grade > 2.0) {\n            $output[]\
    \ = 'C+';\n        } elseif ($grade > 1.7) {\n            $output[] = 'C';\n \
    \       } elseif ($grade > 1.3) {\n            $output[] = 'C-';\n        } elseif\
    \ ($grade > 1.0) {\n            $output[] = 'D+';\n        } elseif ($grade >\
    \ 0.7) {\n            $output[] = 'D';\n        } elseif ($grade > 0.0) {\n  \
    \          $output[] = 'D-';\n        } else {\n            $output[] = 'E';\n\
    \        }\n    }\n    return $output;\n}\n", "    $aplus = [\"A+\"];\n    $a\
    \ = [\"A\"];\n    $aminus = [\"A-\"];\n    $bplus = [\"B+\"];\n    $b = [\"B\"\
    ];\n    $bminus = [\"B-\"];\n    $cplus = [\"C+\"];\n    $c = [\"C\"];\n    $cminus\
    \ = [\"C-\"];\n    $dplus = [\"D+\"];\n    $d = [\"D\"];\n    $dminus = [\"D-\"\
    ];\n    $e = [\"E\"];\n    for ($i = 0; $i < count($grades); $i++) {\n       \
    \ if ($grades[$i] == 4.0) {\n            $aplus[$i] = $grades[$i];\n        }\
    \ elseif ($grades[$i] > 3.7) {\n            $a[$i] = $grades[$i];\n        } elseif\
    \ ($grades[$i] > 3.3) {\n            $aminus[$i] = $grades[$i];\n        } elseif\
    \ ($grades[$i] > 3.0) {\n            $bplus[$i] = $grades[$i];\n        } elseif\
    \ ($grades[$i] > 2.7) {\n            $b[$i] = $grades[$i];\n        } elseif ($grades[$i]\
    \ > 2.3) {\n            $bminus[$i] = $grades[$i];\n        } elseif ($grades[$i]\
    \ > 2.0) {\n            $cplus[$i] = $grades[$i];\n        } elseif ($grades[$i]\
    \ > 1.7) {\n            $c[$i] = $grades[$i];\n        } elseif ($grades[$i] >\
    \ 1.3) {\n            $cminus[$i] = $grades[$i];\n        } elseif ($grades[$i]\
    \ > 1.0) {\n            $dplus[$i] = $grades[$i];\n        } elseif ($grades[$i]\
    \ > 0.7) {\n            $d[$i] = $grades[$i];\n        }", "    $output = [];\n\
    \    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n           \
    \ $output[] = 'A+';\n        } elseif ($grade >= 3.7) {\n            $output[]\
    \ = 'A';\n        } elseif ($grade >= 3.3) {\n            $output[] = 'A-';\n\
    \        } elseif ($grade >= 3.0) {\n            $output[] = 'B+';\n        }\
    \ elseif ($grade >= 2.7) {\n            $output[] = 'B';\n        } elseif ($grade\
    \ >= 2.3) {\n            $output[] = 'B-';\n        } elseif ($grade >= 2.0) {\n\
    \            $output[] = 'C+';\n        } elseif ($grade >= 1.7) {\n         \
    \   $output[] = 'C';\n        } elseif ($grade >= 1.3) {\n            $output[]\
    \ = 'C-';\n        } elseif ($grade >= 1.0) {\n            $output[] = 'D+';\n\
    \        } elseif ($grade >= 0.7) {\n            $output[] = 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            $output[] = 'D-';\n        } else {\n       \
    \     $output[] = 'E';\n        }\n    }\n    return $output;\n}\n", "    $result\
    \ = [];\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n   \
    \         $result[] = 'A+';\n        } elseif ($grade >= 3.7) {\n            $result[]\
    \ = 'A';\n        } elseif ($grade >= 3.3) {\n            $result[] = 'A-';\n\
    \        } elseif ($grade >= 3.0) {\n            $result[] = 'B+';\n        }\
    \ elseif ($grade >= 2.7) {\n            $result[] = 'B';\n        } elseif ($grade\
    \ >= 2.3) {\n            $result[] = 'B-';\n        } elseif ($grade >= 2.0) {\n\
    \            $result[] = 'C+';\n        } elseif ($grade >= 1.7) {\n         \
    \   $result[] = 'C';\n        } elseif ($grade >= 1.3) {\n            $result[]\
    \ = 'C-';\n        } elseif ($grade >= 1.0) {\n            $result[] = 'D+';\n\
    \        } elseif ($grade >= 0.7) {\n            $result[] = 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            $result[] = 'D-';\n        } else {\n       \
    \     $result[] = 'E';\n        }\n    }\n    return $result;\n}\necho '<pre>';\n\
    print_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\necho '</pre>';\n\necho\
    \ '<hr>';\n", "    $letter_grades = [];\n    foreach ($grades as $grade) {\n \
    \       if ($grade >= 4.0) {\n            $letter_grades[] = 'A+';\n        }\
    \ elseif ($grade >= 3.7) {\n            $letter_grades[] = 'A';\n        } elseif\
    \ ($grade >= 3.3) {\n            $letter_grades[] = 'A-';\n        } elseif ($grade\
    \ >= 3.0) {\n            $letter_grades[] = 'B+';\n        } elseif ($grade >=\
    \ 2.7) {\n            $letter_grades[] = 'B';\n        } elseif ($grade >= 2.3)\
    \ {\n            $letter_grades[] = 'B-';\n        } elseif ($grade >= 2.0) {\n\
    \            $letter_grades[] = 'C+';\n        } elseif ($grade >= 1.7) {\n  \
    \          $letter_grades[] = 'C';\n        } elseif ($grade >= 1.3) {\n     \
    \       $letter_grades[] = 'C-';\n        } elseif ($grade >= 1.0) {\n       \
    \     $letter_grades[] = 'D+';\n        } elseif ($grade >= 0.7) {\n         \
    \   $letter_grades[] = 'D';\n        } elseif ($grade >= 0.0) {\n            $letter_grades[]\
    \ = 'D-';\n        } else {\n            $letter_grades[] = 'E';\n        }\n\
    \    }\n    return $letter_grades;\n}\n$grades = [4.0, 3, 1.7, 2, 3.5];\nvar_dump(numerical_letter_grade($grades));\n",
  "    $letter_grades = array();\n    foreach ($grades as $gpa) {\n        switch\
    \ (true) {\n            case $gpa >= 4.0:\n                $letter_grades[] =\
    \ 'A+';\n                break;\n            case $gpa >= 3.7:\n             \
    \   $letter_grades[] = 'A';\n                break;\n            case $gpa >=\
    \ 3.3:\n                $letter_grades[] = 'A-';\n                break;\n   \
    \         case $gpa >= 3.0:\n                $letter_grades[] = 'B+';\n      \
    \          break;\n            case $gpa >= 2.7:\n                $letter_grades[]\
    \ = 'B';\n                break;\n            case $gpa >= 2.3:\n            \
    \    $letter_grades[] = 'B-';\n                break;\n            case $gpa >=\
    \ 2.0:\n                $letter_grades[] = 'C+';\n                break;\n   \
    \         case $gpa >= 1.7:\n                $letter_grades[] = 'C';\n       \
    \         break;\n            case $gpa >= 1.3:\n                $letter_grades[]\
    \ = 'C-';\n                break;\n            case $gpa >= 1.0:\n           \
    \     $letter_grades[] = 'D+';\n                break;\n            case $gpa\
    \ >= 0.7:\n                $letter_grades[] = 'D';\n                break;\n \
    \           case $gpa >= 0.0:\n                $letter_grades[] = 'D-';\n    \
    \            break;\n            default:\n                $letter_grades[] =\
    \ 'E';\n                break;\n        }\n    }\n    return $letter_grades;\n\
    }\n", "\t$letters = [];\n\tforeach ($grades as $grade) {\n\t\tif ($grade == 4.0)\
    \ {\n\t\t\t$letters[] = 'A+';\n\t\t} elseif ($grade > 3.7) {\n\t\t\t$letters[]\
    \ = 'A';\n\t\t} elseif ($grade > 3.3) {\n\t\t\t$letters[] = 'A-';\n\t\t} elseif\
    \ ($grade > 3.0) {\n\t\t\t$letters[] = 'B+';\n\t\t} elseif ($grade > 2.7) {\n\t\
    \t\t$letters[] = 'B';\n\t\t} elseif ($grade > 2.3) {\n\t\t\t$letters[] = 'B-';\n\
    \t\t} elseif ($grade > 2.0) {\n\t\t\t$letters[] = 'C+';\n\t\t} elseif ($grade\
    \ > 1.7) {\n\t\t\t$letters[] = 'C';\n\t\t} elseif ($grade > 1.3) {\n\t\t\t$letters[]\
    \ = 'C-';\n\t\t} elseif ($grade > 1.0) {\n\t\t\t$letters[] = 'D+';\n\t\t} elseif\
    \ ($grade > 0.7) {\n\t\t\t$letters[] = 'D';\n\t\t} elseif ($grade > 0.0) {\n\t\
    \t\t$letters[] = 'D-';\n\t\t} else {\n\t\t\t$letters[] = 'E';\n\t\t}\n\t}\n\t\
    return $letters;\n}\necho '<pre>';\nprint_r(numerical_letter_grade([4.0, 3, 1.7,\
    \ 2, 3.5]));\necho '</pre>';\n", "  $grades = array_map(function($grade) {\n \
    \   switch($grade) {\n      case $grade >= 4.0:\n        return 'A+';\n      case\
    \ $grade >= 3.7:\n        return 'A';\n      case $grade >= 3.3:\n        return\
    \ 'A-';\n      case $grade >= 3.0:\n        return 'B+';\n      case $grade >=\
    \ 2.7:\n        return 'B';\n      case $grade >= 2.3:\n        return 'B-';\n\
    \      case $grade >= 2.0:\n        return 'C+';\n      case $grade >= 1.7:\n\
    \        return 'C';\n      case $grade >= 1.3:\n        return 'C-';\n      case\
    \ $grade >= 1.0:\n        return 'D+';\n      case $grade >= 0.7:\n        return\
    \ 'D';\n      case $grade >= 0.0:\n        return 'D-';\n      case $grade ==\
    \ 0.0:\n        return 'E';\n    }\n  }, $grades);\n  return $grades;\n}\n", " \
    \   $letter_grades = [];\n    foreach ($grades as $grade) {\n        if ($grade\
    \ >= 4.0) {\n            $letter_grades[] = 'A+';\n        } elseif ($grade >=\
    \ 3.7) {\n            $letter_grades[] = 'A';\n        } elseif ($grade >= 3.3)\
    \ {\n            $letter_grades[] = 'A-';\n        } elseif ($grade >= 3.0) {\n\
    \            $letter_grades[] = 'B+';\n        } elseif ($grade >= 2.7) {\n  \
    \          $letter_grades[] = 'B';\n        } elseif ($grade >= 2.3) {\n     \
    \       $letter_grades[] = 'B-';\n        } elseif ($grade >= 2.0) {\n       \
    \     $letter_grades[] = 'C+';\n        } elseif ($grade >= 1.7) {\n         \
    \   $letter_grades[] = 'C';\n        } elseif ($grade >= 1.3) {\n            $letter_grades[]\
    \ = 'C-';\n        } elseif ($grade >= 1.0) {\n            $letter_grades[] =\
    \ 'D+';\n        } elseif ($grade >= 0.7) {\n            $letter_grades[] = 'D';\n\
    \        } elseif ($grade >= 0.0) {\n            $letter_grades[] = 'D-';\n  \
    \      } else {\n            $letter_grades[] = 'E';\n        }\n    }\n    return\
    \ $letter_grades;\n}\necho \"<pre>\";\nprint_r(numerical_letter_grade([4.0, 3,\
    \ 1.7, 2, 3.5]));", "    $result = [];\n    foreach ($grades as $grade) {\n  \
    \      if ($grade >= 4.0) {\n            $result[] = 'A+';\n        } elseif ($grade\
    \ >= 3.7) {\n            $result[] = 'A';\n        } elseif ($grade >= 3.3) {\n\
    \            $result[] = 'A-';\n        } elseif ($grade >= 3.0) {\n         \
    \   $result[] = 'B+';\n        } elseif ($grade >= 2.7) {\n            $result[]\
    \ = 'B';\n        } elseif ($grade >= 2.3) {\n            $result[] = 'B-';\n\
    \        } elseif ($grade >= 2.0) {\n            $result[] = 'C+';\n        }\
    \ elseif ($grade >= 1.7) {\n            $result[] = 'C';\n        } elseif ($grade\
    \ >= 1.3) {\n            $result[] = 'C-';\n        } elseif ($grade >= 1.0) {\n\
    \            $result[] = 'D+';\n        } elseif ($grade >= 0.7) {\n         \
    \   $result[] = 'D';\n        } elseif ($grade >= 0.0) {\n            $result[]\
    \ = 'D-';\n        } else {\n            $result[] = 'E';\n        }\n    }\n\
    \    return $result;\n}\n", "    $grades_numerical = [];\n    foreach ($grades\
    \ as $grade) {\n        if ($grade == 4.0) {\n            $grades_numerical[]\
    \ = \"A+\";\n        } elseif ($grade > 3.7) {\n            $grades_numerical[]\
    \ = \"A\";\n        } elseif ($grade > 3.3) {\n            $grades_numerical[]\
    \ = \"A-\";\n        } elseif ($grade > 3.0) {\n            $grades_numerical[]\
    \ = \"B+\";\n        } elseif ($grade > 2.7) {\n            $grades_numerical[]\
    \ = \"B\";\n        } elseif ($grade > 2.3) {\n            $grades_numerical[]\
    \ = \"B-\";\n        } elseif ($grade > 2.0) {\n            $grades_numerical[]\
    \ = \"C+\";\n        } elseif ($grade > 1.7) {\n            $grades_numerical[]\
    \ = \"C\";\n        } elseif ($grade > 1.3) {\n            $grades_numerical[]\
    \ = \"C-\";\n        } elseif ($grade > 1.0) {\n            $grades_numerical[]\
    \ = \"D+\";\n        } elseif ($grade > 0.7) {\n            $grades_numerical[]\
    \ = \"D\";\n        } elseif ($grade > 0.0) {\n            $grades_numerical[]\
    \ = \"D-\";\n        } else {\n            $grades_numerical[] = \"E\";\n    \
    \    }\n    }\n    return $grades_numerical;\n}\n", "    $grades_str = [];\n \
    \   foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n            $grades_str[]\
    \ = 'A+';\n        } elseif ($grade >= 3.7) {\n            $grades_str[] = 'A';\n\
    \        } elseif ($grade >= 3.3) {\n            $grades_str[] = 'A-';\n     \
    \   } elseif ($grade >= 3.0) {\n            $grades_str[] = 'B+';\n        } elseif\
    \ ($grade >= 2.7) {\n            $grades_str[] = 'B';\n        } elseif ($grade\
    \ >= 2.3) {\n            $grades_str[] = 'B-';\n        } elseif ($grade >= 2.0)\
    \ {\n            $grades_str[] = 'C+';\n        } elseif ($grade >= 1.7) {\n \
    \           $grades_str[] = 'C';\n        } elseif ($grade >= 1.3) {\n       \
    \     $grades_str[] = 'C-';\n        } elseif ($grade >= 1.0) {\n            $grades_str[]\
    \ = 'D+';\n        } elseif ($grade >= 0.7) {\n            $grades_str[] = 'D';\n\
    \        } elseif ($grade >= 0.0) {\n            $grades_str[] = 'D-';\n     \
    \   } else {\n            $grades_str[] = 'E';\n        }\n    }\n    return $grades_str;\n\
    }\necho '<pre>';\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));\necho\
    \ '</pre>';", "    $letter_grades = [];\n    for ($i = 0; $i < count($grades);\
    \ $i++) {\n        if ($grades[$i] >= 4.0) {\n            array_push($letter_grades,\
    \ 'A+');\n        } elseif ($grades[$i] >= 3.7) {\n            array_push($letter_grades,\
    \ 'A');\n        } elseif ($grades[$i] >= 3.3) {\n            array_push($letter_grades,\
    \ 'A-');\n        } elseif ($grades[$i] >= 3.0) {\n            array_push($letter_grades,\
    \ 'B+');\n        } elseif ($grades[$i] >= 2.7) {\n            array_push($letter_grades,\
    \ 'B');\n        } elseif ($grades[$i] >= 2.3) {\n            array_push($letter_grades,\
    \ 'B-');\n        } elseif ($grades[$i] >= 2.0) {\n            array_push($letter_grades,\
    \ 'C+');\n        } elseif ($grades[$i] >= 1.7) {\n            array_push($letter_grades,\
    \ 'C');\n        } elseif ($grades[$i] >= 1.3) {\n            array_push($letter_grades,\
    \ 'C-');\n        } elseif ($grades[$i] >= 1.0) {\n            array_push($letter_grades,\
    \ 'D+');\n        } elseif ($grades[$i] >= 0.7) {\n            array_push($letter_grades,\
    \ 'D');\n        } elseif ($grades[$i] >= 0.0) {\n            array_push($letter_grades,\
    \ 'D-');\n        } else {\n            array_push($letter_grades, 'E');\n   \
    \     }\n    }\n    return $letter_grades;\n}", "    $numerical = [4.0, 3.7, 3.3,\
    \ 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0];\n    $letter = ['A+', 'A', 'A-',\
    \ 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E'];\n    $result = [];\n\
    \    for ($i = 0; $i < count($grades); $i++) {\n        for ($j = 0; $j < count($numerical);\
    \ $j++) {\n            if ($grades[$i] > $numerical[$j]) {\n                $result[]\
    \ = $letter[$j];\n                break;\n            }\n        }\n    }\n  \
    \  return $result;\n}\necho numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]);", " \
    \   \n}", "  // Write your code here\n}", "  $letters = array();\n  foreach ($grades\
    \ as $grade) {\n    if ($grade >= 4.0) {\n      $letters[] = 'A+';\n    } elseif\
    \ ($grade >= 3.7) {\n      $letters[] = 'A';\n    } elseif ($grade >= 3.3) {\n\
    \      $letters[] = 'A-';\n    } elseif ($grade >= 3.0) {\n      $letters[] =\
    \ 'B+';\n    } elseif ($grade >= 2.7) {\n      $letters[] = 'B';\n    } elseif\
    \ ($grade >= 2.3) {\n      $letters[] = 'B-';\n    } elseif ($grade >= 2.0) {\n\
    \      $letters[] = 'C+';\n    } elseif ($grade >= 1.7) {\n      $letters[] =\
    \ 'C';\n    } elseif ($grade >= 1.3) {\n      $letters[] = 'C-';\n    } elseif\
    \ ($grade >= 1.0) {\n      $letters[] = 'D+';\n    } elseif ($grade >= 0.7) {\n\
    \      $letters[] = 'D';\n    } elseif ($grade >= 0.0) {\n      $letters[] = 'D-';\n\
    \    } else {\n      $letters[] = 'E';\n    }\n  }\n  return $letters;\n}\n",
  "    $letters = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-',\
    \ 'E'];\n    $numerical = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7,\
    \ 0.0, 0.0];\n    $results = [];\n    foreach ($grades as $grade) {\n        for\
    \ ($i = 0; $i < count($numerical); $i++) {\n            if ($grade >= $numerical[$i])\
    \ {\n                $results[] = $letters[$i];\n                break;\n    \
    \        }\n        }\n    }\n    return $results;\n}\n", "    $result = [];\n\
    \    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n           \
    \ $result[] = 'A+';\n        } elseif ($grade >= 3.7) {\n            $result[]\
    \ = 'A';\n        } elseif ($grade >= 3.3) {\n            $result[] = 'A-';\n\
    \        } elseif ($grade >= 3.0) {\n            $result[] = 'B+';\n        }\
    \ elseif ($grade >= 2.7) {\n            $result[] = 'B';\n        } elseif ($grade\
    \ >= 2.3) {\n            $result[] = 'B-';\n        } elseif ($grade >= 2.0) {\n\
    \            $result[] = 'C+';\n        } elseif ($grade >= 1.7) {\n         \
    \   $result[] = 'C';\n        } elseif ($grade >= 1.3) {\n            $result[]\
    \ = 'C-';\n        } elseif ($grade >= 1.0) {\n            $result[] = 'D+';\n\
    \        } elseif ($grade >= 0.7) {\n            $result[] = 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            $result[] = 'D-';\n        } else {\n       \
    \     $result[] = 'E';\n        }\n    }\n    return $result;\n}", "    $gradesArray\
    \ = [];\n    foreach ($grades as $gpa) {\n        if ($gpa == 4.0) {\n       \
    \     $gradesArray[] = 'A+';\n        } elseif ($gpa > 3.7) {\n            $gradesArray[]\
    \ = 'A';\n        } elseif ($gpa > 3.3) {\n            $gradesArray[] = 'A-';\n\
    \        } elseif ($gpa > 3.0) {\n            $gradesArray[] = 'B+';\n       \
    \ } elseif ($gpa > 2.7) {\n            $gradesArray[] = 'B';\n        } elseif\
    \ ($gpa > 2.3) {\n            $gradesArray[] = 'B-';\n        } elseif ($gpa >\
    \ 2.0) {\n            $gradesArray[] = 'C+';\n        } elseif ($gpa > 1.7) {\n\
    \            $gradesArray[] = 'C';\n        } elseif ($gpa > 1.3) {\n        \
    \    $gradesArray[] = 'C-';\n        } elseif ($gpa > 1.0) {\n            $gradesArray[]\
    \ = 'D+';\n        } elseif ($gpa > 0.7) {\n            $gradesArray[] = 'D';\n\
    \        } elseif ($gpa > 0.0) {\n            $gradesArray[] = 'D-';\n       \
    \ } else {\n            $gradesArray[] = 'E';\n        }\n    }\n    return $gradesArray;\n\
    }\necho numerical_letter_grade([4.0, 3, 1.7, 2, 3.5])[0];", "    $letter_grades\
    \ = [];\n    foreach ($grades as $grade) {\n        if($grade == 4.0) {\n    \
    \        $letter_grades[] = 'A+';\n        } elseif ($grade > 3.7) {\n       \
    \     $letter_grades[] = 'A';\n        } elseif ($grade > 3.3) {\n           \
    \ $letter_grades[] = 'A-';\n        } elseif ($grade > 3.0) {\n            $letter_grades[]\
    \ = 'B+';\n        } elseif ($grade > 2.7) {\n            $letter_grades[] = 'B';\n\
    \        } elseif ($grade > 2.3) {\n            $letter_grades[] = 'B-';\n   \
    \     } elseif ($grade > 2.0) {\n            $letter_grades[] = 'C+';\n      \
    \  } elseif ($grade > 1.7) {\n            $letter_grades[] = 'C';\n        } elseif\
    \ ($grade > 1.3) {\n            $letter_grades[] = 'C-';\n        } elseif ($grade\
    \ > 1.0) {\n            $letter_grades[] = 'D+';\n        } elseif ($grade > 0.7)\
    \ {\n            $letter_grades[] = 'D';\n        } elseif ($grade > 0.0) {\n\
    \            $letter_grades[] = 'D-';\n        } else {\n            $letter_grades[]\
    \ = 'E';\n        }\n    }\n    return $letter_grades;\n}\necho implode(', ',\
    \ numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]));", "    $letter_grades = [];\n\
    \    foreach ($grades as $grade) {\n        if($grade < 0.7) {\n            array_push($letter_grades,\
    \ 'E');\n        } elseif ($grade < 1.0) {\n            array_push($letter_grades,\
    \ 'D-');\n        } elseif ($grade < 1.3) {\n            array_push($letter_grades,\
    \ 'D+');\n        } elseif ($grade < 1.7) {\n            array_push($letter_grades,\
    \ 'D');\n        } elseif ($grade < 2.0) {\n            array_push($letter_grades,\
    \ 'C-');\n        } elseif ($grade < 2.3) {\n            array_push($letter_grades,\
    \ 'C+');\n        } elseif ($grade < 2.7) {\n            array_push($letter_grades,\
    \ 'C');\n        } elseif ($grade < 3.0) {\n            array_push($letter_grades,\
    \ 'B-');\n        } elseif ($grade < 3.3) {\n            array_push($letter_grades,\
    \ 'B+');\n        } elseif ($grade < 3.7) {\n            array_push($letter_grades,\
    \ 'B');\n        } elseif ($grade < 4.0) {\n            array_push($letter_grades,\
    \ 'A-');\n        } else {\n            array_push($letter_grades, 'A+');\n  \
    \      }\n    }\n    return $letter_grades;\n}\n", "    $grade_letters = array(\"\
    A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"\
    D\", \"D-\", \"E\");\n    $grade_numbers = array(4.0, 3.7, 3.3, 3.0, 2.7, 2.3,\
    \ 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0);\n    $grade_results = array();\n    foreach\
    \ ($grades as $grade) {\n        $grd = 0;\n        foreach ($grade_numbers as\
    \ $number) {\n            if ($grade >= $number) {\n                $grd = $number;\n\
    \                break;\n            }\n        }\n        $index = array_search($grd,\
    \ $grade_numbers);\n        $grade_results[] = $grade_letters[$index];\n    }\n\
    \    return $grade_results;\n}\nprint_r(numerical_letter_grade([4.0, 3, 1.7, 2,\
    \ 3.5]));", "    $result = [];\n    foreach ($grades as $value) {\n        if\
    \ ($value >= 4.0) {\n            $result[] = 'A+';\n        } elseif ($value >=\
    \ 3.7) {\n            $result[] = 'A';\n        } elseif ($value >= 3.3) {\n \
    \           $result[] = 'A-';\n        } elseif ($value >= 3.0) {\n          \
    \  $result[] = 'B+';\n        } elseif ($value >= 2.7) {\n            $result[]\
    \ = 'B';\n        } elseif ($value >= 2.3) {\n            $result[] = 'B-';\n\
    \        } elseif ($value >= 2.0) {\n            $result[] = 'C+';\n        }\
    \ elseif ($value >= 1.7) {\n            $result[] = 'C';\n        } elseif ($value\
    \ >= 1.3) {\n            $result[] = 'C-';\n        } elseif ($value >= 1.0) {\n\
    \            $result[] = 'D+';\n        } elseif ($value >= 0.7) {\n         \
    \   $result[] = 'D';\n        } elseif ($value >= 0.0) {\n            $result[]\
    \ = 'D-';\n        } else {\n            $result[] = 'E';\n        }\n    }\n\
    \    return $result;\n}\n", "    // Write your code here!\n    $letter_grades\
    \ = [];\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n   \
    \         $letter_grades[] = 'A+';\n        } elseif ($grade >= 3.7) {\n     \
    \       $letter_grades[] = 'A';\n        } elseif ($grade >= 3.3) {\n        \
    \    $letter_grades[] = 'A-';\n        } elseif ($grade >= 3.0) {\n          \
    \  $letter_grades[] = 'B+';\n        } elseif ($grade >= 2.7) {\n            $letter_grades[]\
    \ = 'B';\n        } elseif ($grade >= 2.3) {\n            $letter_grades[] = 'B-';\n\
    \        } elseif ($grade >= 2.0) {\n            $letter_grades[] = 'C+';\n  \
    \      } elseif ($grade >= 1.7) {\n            $letter_grades[] = 'C';\n     \
    \   } elseif ($grade >= 1.3) {\n            $letter_grades[] = 'C-';\n       \
    \ } elseif ($grade >= 1.0) {\n            $letter_grades[] = 'D+';\n        }\
    \ elseif ($grade >= 0.7) {\n            $letter_grades[] = 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            $letter_grades[] = 'D-';\n        } else {\n\
    \            $letter_grades[] = 'E';\n        }\n    }\n    return $letter_grades;\n\
    }\n\n$grades = [4.0, 3, 1.7, 2, 3.5];\necho '<pre>';\nvar_dump(numerical_letter_grade($grades));\n\
    echo '</pre>';", "  $output = [];\n  foreach ($grades as $key => $grade) {\n \
    \   if ($grade >= 4.0) {\n      $output[] = 'A+';\n    } elseif ($grade >= 3.7)\
    \ {\n      $output[] = 'A';\n    } elseif ($grade >= 3.3) {\n      $output[] =\
    \ 'A-';\n    } elseif ($grade >= 3.0) {\n      $output[] = 'B+';\n    } elseif\
    \ ($grade >= 2.7) {\n      $output[] = 'B';\n    } elseif ($grade >= 2.3) {\n\
    \      $output[] = 'B-';\n    } elseif ($grade >= 2.0) {\n      $output[] = 'C+';\n\
    \    } elseif ($grade >= 1.7) {\n      $output[] = 'C';\n    } elseif ($grade\
    \ >= 1.3) {\n      $output[] = 'C-';\n    } elseif ($grade >= 1.0) {\n      $output[]\
    \ = 'D+';\n    } elseif ($grade >= 0.7) {\n      $output[] = 'D';\n    } elseif\
    \ ($grade >= 0.0) {\n      $output[] = 'D-';\n    } else {\n      $output[] =\
    \ 'E';\n    }\n  }\n  return $output;\n}", "  $result = [];\n  foreach ($grades\
    \ as $grade) {\n    if ($grade >= 4.0) {\n      $result[] = 'A+';\n    } elseif\
    \ ($grade >= 3.7) {\n      $result[] = 'A';\n    } elseif ($grade >= 3.3) {\n\
    \      $result[] = 'A-';\n    } elseif ($grade >= 3.0) {\n      $result[] = 'B+';\n\
    \    } elseif ($grade >= 2.7) {\n      $result[] = 'B';\n    } elseif ($grade\
    \ >= 2.3) {\n      $result[] = 'B-';\n    } elseif ($grade >= 2.0) {\n      $result[]\
    \ = 'C+';\n    } elseif ($grade >= 1.7) {\n      $result[] = 'C';\n    } elseif\
    \ ($grade >= 1.3) {\n      $result[] = 'C-';\n    } elseif ($grade >= 1.0) {\n\
    \      $result[] = 'D+';\n    } elseif ($grade >= 0.7) {\n      $result[] = 'D';\n\
    \    } elseif ($grade > 0.0) {\n      $result[] = 'D-';\n    } else {\n      $result[]\
    \ = 'E';\n    }\n  }\n  return $result;\n}", "    return array_map(function($grade)\
    \ {\n        if ($grade >= 4.0) {\n            return 'A+';\n        }\n     \
    \   if ($grade >= 3.7) {\n            return 'A';\n        }\n        if ($grade\
    \ >= 3.3) {\n            return 'A-';\n        }\n        if ($grade >= 3.0) {\n\
    \            return 'B+';\n        }\n        if ($grade >= 2.7) {\n         \
    \   return 'B';\n        }\n        if ($grade >= 2.3) {\n            return 'B-';\n\
    \        }\n        if ($grade >= 2.0) {\n            return 'C+';\n        }\n\
    \        if ($grade >= 1.7) {\n            return 'C';\n        }\n        if\
    \ ($grade >= 1.3) {\n            return 'C-';\n        }\n        if ($grade >=\
    \ 1.0) {\n            return 'D+';\n        }\n        if ($grade >= 0.7) {\n\
    \            return 'D';\n        }\n        if ($grade >= 0.0) {\n          \
    \  return 'D-';\n        }\n        return 'E';\n    }, $grades);\n}\n\nprint_r(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]));\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

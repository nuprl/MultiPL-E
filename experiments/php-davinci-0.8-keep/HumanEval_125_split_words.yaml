name: HumanEval_125_split_words
language: php
prompt: "<?php\n// Given a string of words, return a list of words split on whitespace,\
  \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
  \ commas exists you should return the number of lower-case letters with odd order\
  \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
  // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
  Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") == 3\n\
  function split_words($txt) {\n"
tests: "function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
  )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
  ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
  ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["  $odd_count = 0;\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    for ($i = 0; $i < strlen($txt); $i++) {\n\
    \      if (ord($txt[$i]) % 2 !== 0) {\n        $odd_count++;\n      }\n    }\n\
    \    return $odd_count;\n  }\n}", "  if (strpos($txt, ' ') !== false) {\n    return\
    \ preg_split('/\\s+/', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n  \
    \  return preg_split('/,/', $txt);\n  } else {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n      if (ord($txt[$i]) % 2 !== 0) {\n      \
    \  $count++;\n      }\n    }\n    return $count;\n  }\n}\necho split_words(\"\
    Hello world!\");\necho split_words(\"Hello,world!\");\necho split_words(\"abcdef\"\
    );", "    $regex = \"/\\s|,/\";\n    if (preg_match($regex, $txt)) {\n       \
    \ return preg_split($regex, $txt);\n    } else {\n        $count = 0;\n      \
    \  $alphabet = range('a', 'z');\n        for ($i = 0; $i < count($alphabet); $i++)\
    \ {\n            if ($i % 2 == 1) {\n                $count += substr_count($txt,\
    \ $alphabet[$i]);\n            }\n        }\n        return $count;\n    }\n}\n",
  "    $txt = trim($txt);\n    if (strpos($txt, ' ') > 0) {\n        return explode('\
    \ ', $txt);\n    } elseif (strpos($txt, ',') > 0) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $letter = 0;\n        $order = [];\n        for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n            $order[] = ord($txt[$i]);\n\
    \        }\n        for ($i = 0; $i < count($order); $i++) {\n            if ($order[$i]\
    \ % 2 != 0) {\n                $letter++;\n            }\n        }\n        return\
    \ $letter;\n    }\n}\n\necho split_words(\"Hello world!\") . \"<br>\";\necho split_words(\"\
    Hello,world!\") . \"<br>\";\necho split_words(\"abcdef\");", "    if (strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $low_letters = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n      \
    \      if (ord($txt[$i]) % 2 !== 0) {\n                $low_letters++;\n     \
    \       }\n        }\n        return $low_letters;\n    }\n}\n", "    if (ctype_alpha($txt))\
    \ {\n        $res = [];\n        $array = str_split($txt);\n        foreach ($array\
    \ as $letter) {\n            if (ord($letter) % 2 == 1) {\n                $res[]\
    \ = $letter;\n            }\n        }\n        return count($res);\n    } elseif\
    \ (ctype_punct($txt)) {\n        $res = [];\n        $array = str_split($txt);\n\
    \        foreach ($array as $item) {\n            if ($item == ',') {\n      \
    \          $res[] = $item;\n            }\n        }\n        return count($res);\n\
    \    } else {\n        $array = str_split($txt);\n        foreach ($array as $item)\
    \ {\n            if ($item == ' ') {\n                $res[] = $item;\n      \
    \      }\n        }\n        return count($res);\n    }\n}\n\necho split_words(\"\
    Hello world!\");", "    $words = preg_split('/\\s+/', $txt);\n    if (count($words)\
    \ <= 1) {\n        $words = preg_split('/,/', $txt);\n        if (count($words)\
    \ <= 1) {\n            $words = preg_split('/([a-z])(?=[A-Z])/', $txt);\n    \
    \        return count($words);\n        }\n    }\n    return $words;\n}\nprint_r(split_words(\"\
    Hello world!\"));\necho \"<br>\";\nprint_r(split_words(\"Hello,world!\"));\necho\
    \ \"<br>\";\nprint_r(split_words(\"abcdef\"));\necho \"<br>\";\nprint_r(split_words(\"\
    abcDEF\"));\necho \"<br>\";\nprint_r(split_words(\"abc,def\"));\necho \"<br>\"\
    ;\nprint_r(split_words(\"abc,DEF\"));\necho \"<br>\";\nprint_r(split_words(\"\
    HelloWorld!\"));\necho \"<br>\";\n", "    if (strpos($txt, ' ') === false) {\n\
    \        if (strpos($txt, ',') === false) {\n            return substr_count($txt,\
    \ 'a') + substr_count($txt, 'c') + substr_count($txt, 'e') + substr_count($txt,\
    \ 'g') + substr_count($txt, 'i') + substr_count($txt, 'k') + substr_count($txt,\
    \ 'm') + substr_count($txt, 'o') + substr_count($txt, 'q') + substr_count($txt,\
    \ 's') + substr_count($txt, 'u') + substr_count($txt, 'w') + substr_count($txt,\
    \ 'y');\n        } else {\n            return explode(',', $txt);\n        }\n\
    \    } else {\n        return explode(' ', $txt);\n    }\n}\necho '<pre>';\nprint_r(split_words(\"\
    Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';",
  "    $text = str_split($txt);\n    $new = [];\n    $new2 = [];\n    foreach ($text\
    \ as $i) {\n        if (ctype_alpha($i)) {\n            $new2[] = $i;\n      \
    \  } else {\n            $new[] = $i;\n        }\n    }\n    if (count($new) >\
    \ 0) {\n        return explode(\" \", $txt);\n    } else if (count($new2) > 0)\
    \ {\n        return explode(\",\", $txt);\n    } else {\n        $count = 0;\n\
    \        foreach ($text as $i) {\n            if (ord($i) % 2 != 0) {\n      \
    \          $count += 1;\n            }\n        }\n        return $count;\n  \
    \  }\n}\n", "\t// return array_filter(str_split($txt), function($a) {\n\t// \t\
    return ord($a) % 2 == 0;\n\t// });\n\t$parts = explode(',', $txt);\n\tif (count($parts)\
    \ == 1) {\n\t\t$parts = explode(' ', $txt);\n\t\tif (count($parts) == 1) {\n\t\
    \t\treturn array_filter(str_split($txt), function($a) {\n\t\t\t\treturn ord($a)\
    \ % 2 == 0;\n\t\t\t});\n\t\t}\n\t}\n\treturn $parts;\n}\n\necho(var_dump(split_words(\"\
    Hello world!\"))); // [\"Hello\", \"world!\"]\necho(var_dump(split_words(\"Hello,world!\"\
    ))); // [\"Hello\", \"world!\"]\necho(var_dump(split_words(\"abcdef\"))); // 3\n\
    echo(var_dump(split_words(\"codewars\"))); // 4\necho(var_dump(split_words(\"\
    abcdefghijklmnopqrstuvwxyz\"))); // 13\necho(var_dump(split_words(\"abcdefghijklmnopqrstuvwxyz1234567890\"\
    ))); // 16\necho(var_dump(split_words(\"abcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()\"\
    ))); // 16\necho(var_dump(split_words(\"abc,defghi,jklmnopqrst,uvwxyz\"))); //\
    \ [\"abc\", \"defghi\", \"jklmnopqrst\", \"uvwxyz\"]\necho(var_dump(split_words(\"\
    abc,defghi,jklmnopqrst,uvwxyz,1234567890\"))); // [\"abc\", \"defghi\", \"jklmnopqrst\"\
    , \"uvwxyz\", \"1234567890\"]\necho(var_dump(split_words(\"abc,defghi,jklmnopqrst,uvwxyz,1234567890!@#$%^&*()\"\
    ))); // [\"abc\", \"defghi\", \"jklmnopqrst", "  $even = 0;\n  $odd = 0;\n  $len\
    \ = strlen($txt);\n  for ($i = 0; $i < $len; $i++){\n    if(ord($txt[$i]) % 2\
    \ === 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n  }\n  if (strpos($txt,\
    \ ' ') !== false) {\n    return explode(' ', $txt);\n  } elseif (strpos($txt,\
    \ ',') !== false) {\n    return explode(',', $txt);\n  } else {\n    return $odd;\n\
    \  }\n}\necho \"split_words('Hello world!') = \";\nprint_r(split_words('Hello\
    \ world!'));\necho \"<br>\";\necho \"split_words('Hello,world!') = \";\nprint_r(split_words('Hello,world!'));\n\
    echo \"<br>\";\necho \"split_words('abcdef') = \";\nprint_r(split_words('abcdef'));\n\
    echo \"<br>\";\necho \"split_words('def') = \";\nprint_r(split_words('def'));\n\
    echo \"<br>\";\necho \"split_words('def,ghi') = \";\nprint_r(split_words('def,ghi'));\n\
    echo \"<br>\";", "  $words = preg_split('/[\\s,]+/', $txt);\n  return empty($words[1])\
    \ ? 3 : $words;\n}\n", "  if (strpos($txt, ' ') !== false) {\n    return explode('\
    \ ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  } else {\n    $odd = 0;\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n      if ($i % 2 == 0) {\n        $odd++;\n      }\n    }\n    return $odd;\n\
    \  }\n}", "\tif (count(explode(\" \", $txt)) > 1) {\n\t\treturn explode(\" \"\
    , $txt);\n\t}\n\tif (count(explode(\",\", $txt)) > 1) {\n\t\treturn explode(\"\
    ,\", $txt);\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\
    \tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\necho split_words(\"Hello world!\");\necho split_words(\"Hello,world!\");\n\
    echo split_words(\"abcdef\");\necho split_words(\"abcefgh\");", "    // your code\
    \ here\n}", "  if(preg_match('/[ ,]/', $txt)){\n    if(preg_match('/ /', $txt)){\n\
    \      return explode(' ', $txt);\n    }else{\n      return explode(',', $txt);\n\
    \    }\n  }else{\n    $arr = [];\n    for($i = 0; $i < strlen($txt); $i++){\n\
    \      if(ord($txt[$i]) % 2 != 0){\n        $arr[] = $txt[$i];\n      }\n    }\n\
    \    return count($arr);\n  }\n}\necho split_words(\"Hello world!\") . \"<br>\"\
    ;\necho split_words(\"Hello,world!\") . \"<br>\";\necho split_words(\"abcdef\"\
    ) . \"<br>\";", "    $txt = explode(\" \", $txt);\n    if (count($txt) == 1) {\n\
    \        $txt = explode(\",\", $txt[0]);\n        if (count($txt) == 1) {\n  \
    \          $sum = 0;\n            for ($i = 0; $i < strlen($txt[0]); $i++) {\n\
    \                if (ord($txt[0][$i]) % 2 != 0) $sum++;\n            }\n     \
    \       return $sum;\n        }\n    }\n    return $txt;\n}\n", "    $text = str_split($txt);\n\
    \    $arr = [];\n    for ($i = 0; $i < count($text); $i++) {\n        if ($text[$i]\
    \ === \" \") {\n            $arr[] = array_splice($text, 0, $i);\n           \
    \ $text = array_slice($text, $i + 1);\n            $i = 0;\n        } else if\
    \ ($text[$i] === \",\") {\n            $arr[] = array_splice($text, 0, $i);\n\
    \            $text = array_slice($text, $i + 1);\n            $i = 0;\n      \
    \  }\n    }\n    $arr[] = $text;\n    $text = array_map(function ($x) {\n    \
    \    return implode($x);\n    }, $arr);\n    return $text;\n}\n", "    if (strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $txt = str_split($txt);\n        $odds = 0;\n        foreach ($txt as $letter)\
    \ {\n            if (ord($letter) % 2 != 0) {\n                $odds++;\n    \
    \        }\n        }\n        return $odds;\n    }\n}", "    $ret = [];\n   \
    \ if (strpos($txt, ' ') !== false) {\n        $ret = explode(' ', $txt);\n   \
    \ } else if (strpos($txt, ',') !== false) {\n        $ret = explode(',', $txt);\n\
    \    } else {\n        $i = 0;\n        for ($j = 0; $j < strlen($txt); $j++)\
    \ {\n            if (ord($txt[$j]) % 2 == 1) {\n                $i++;\n      \
    \      }\n        }\n        $ret = $i;\n    }\n    return $ret;\n}", "    $split\
    \ = preg_split('/\\s+/', $txt);\n    if (count($split) === 1) {\n        $split\
    \ = preg_split('/,/', $txt);\n        if (count($split) === 1) {\n           \
    \ $sum = 0;\n            $letters = str_split($txt);\n            foreach ($letters\
    \ as $letter) {\n                $ord = ord($letter);\n                if ($ord\
    \ % 2 === 1) {\n                    $sum++;\n                }\n            }\n\
    \            return $sum;\n        }\n    }\n    return $split;\n}\n", "\t\n\t\
    $arr = str_split($txt);\n\t$n = count($arr);\n\t$res = [];\n\t$odd = 0;\n\t$cnt\
    \ = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($arr[$i] == ' ' || $arr[$i] ==\
    \ ',') {\n\t\t\t$res[] = $odd;\n\t\t\t$odd = 0;\n\t\t\t$cnt++;\n\t\t} else {\n\
    \t\t\tif (ord($arr[$i]) % 2 == 1) {\n\t\t\t\t$odd++;\n\t\t\t}\n\t\t}\n\t}\n\t\
    if ($cnt == 0) {\n\t\treturn $odd;\n\t}\n\treturn $res;\n}\n", "  if (strpos($txt,\
    \ ' ') !== false) {\n    return explode(' ', $txt);\n  }\n  if (strpos($txt, ',')\
    \ !== false) {\n    return explode(',', $txt);\n  }\n  $count = 0;\n  for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n    if (ord($txt[$i]) % 2 == 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\necho split_words(\"abcdef\").PHP_EOL;\necho\
    \ split_words(\"Hello world!\").PHP_EOL;\necho split_words(\"Hello,world!\").PHP_EOL;\n\
    echo split_words(\"a,b,c,d,e,f\").PHP_EOL;\necho split_words(\"Hello,my,name,is,Peter,Parker\"\
    ).PHP_EOL;\necho split_words(\"Hello my name is Peter Parker\").PHP_EOL;\necho\
    \ split_words(\"Hello,my,name,is,Peter,Parker\").PHP_EOL;\necho split_words(\"\
    Hello my name is Peter Parker\").PHP_EOL;\necho split_words(\"Hello!It's,me\"\
    ).PHP_EOL;\necho split_words(\"Hello!It's,me\").PHP_EOL;\necho split_words(\"\
    Hello,It's,me\").PHP_EOL;\necho split_words(\"Hello,my,name,is,Peter,Parker\"\
    ).PHP_EOL;\necho split_words(\"Hello my name is Peter Parker\").PHP_EOL;\necho\
    \ split_words(\"Hello,my,name,is,Peter,Parker\").PHP_EOL;\necho split_words(\"\
    Hello my name is Peter Parker\").PHP_EOL;\necho split_words(\"Hello!It's,me\"\
    ).PHP_EOL;\necho split_words(\"Hello!It's,me\").PHP_EOL;\necho split_words(\"\
    Hello,It's,me\").PHP_EOL;", "    $letter_count = strlen($txt);\n    if(stristr($txt,\
    \ ' ')) {\n        return explode(' ', $txt);\n    }\n    elseif(stristr($txt,\
    \ ',')) {\n        return explode(',', $txt);\n    }\n    else {\n        $odd_count\
    \ = 0;\n        for($i = 0; $i < $letter_count; $i++) {\n            if(ord($txt[$i])\
    \ % 2 != 0) {\n                $odd_count++;\n            }\n        }\n     \
    \   return $odd_count;\n    }\n}", "  $noSplitters = false;\n  $noCommas = false;\n\
    \  $noSplitter = false;\n  $noWhitespace = false;\n  $returnInt = false;\n  $arr\
    \ = array();\n  $txt = trim($txt);\n  for ($i = 0; $i < strlen($txt); $i++) {\n\
    \    $char = $txt[$i];\n    if (ord($char) >= 97 && ord($char) <= 122) {\n   \
    \   $arr[] = $char;\n    }\n  }\n  $odds = array();\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    if ($i % 2 != 0) {\n      $odds[] = $arr[$i];\n    }\n  }\n  if\
    \ (count($odds) > 0) {\n    return count($odds);\n  }\n  if (strpos($txt, \" \"\
    ) == true) {\n    $noWhitespace = true;\n  }\n  if (strpos($txt, \",\") == true)\
    \ {\n    $noCommas = true;\n  }\n  if ($noWhitespace == false && $noCommas ==\
    \ false) {\n    $noSplitters = true;\n  }\n  if ($noWhitespace == false && $noCommas\
    \ == true) {\n    $noSplitter = true;\n  }\n  if ($noSplitters == true || $noSplitter\
    \ == true) {\n    $returnInt = true;\n  }\n  if ($returnInt == true) {\n    return\
    \ count($odds);\n  }\n  if ($noCommas == true) {\n    $chars = explode(\",\",\
    \ $txt);\n    return $chars;\n  }\n  if ($noWhitespace == true) {\n    $chars\
    \ = explode(\" \", $txt);\n    return $chars;\n  }\n}\necho var_dump(split_words(\"\
    Hello world!\")) . \"\\n\";\necho var_dump(split_words(\"Hello,world!\")) . \"\
    \\n\";\necho var_dump(split_words(\"abcdef\")) . \"\\n\";", "    if (strpos($txt,\
    \ ' ') === false) {\n        if (strpos($txt, ',') === false) {\n            if\
    \ ($txt !== strtoupper($txt)) {\n                return(substr_count($txt, 'a')\
    \ + substr_count($txt, 'c') + substr_count($txt, 'e') + substr_count($txt, 'g')\
    \ + substr_count($txt, 'i') + substr_count($txt, 'k') + substr_count($txt, 'm')\
    \ + substr_count($txt, 'o') + substr_count($txt, 'q') + substr_count($txt, 's')\
    \ + substr_count($txt, 'u') + substr_count($txt, 'w') + substr_count($txt, 'y'));\n\
    \            }\n        } else {\n            return(explode(',', $txt));\n  \
    \      }\n    } else {\n        return(explode(' ', $txt));\n    }\n}\n", "\t\
    $splited = explode(' ', $txt);\n\tif (count($splited) > 1) {\n\t\treturn $splited;\n\
    \t}\n\t$splited = explode(',', $txt);\n\tif (count($splited) > 1) {\n\t\treturn\
    \ $splited;\n\t}\n\treturn count_odd($txt);\n}\n", "  $res1 = explode(\" \", $txt);\n\
    \  $res2 = explode(\",\", $txt);\n  if(count($res1) > 1) {\n    return $res1;\n\
    \  } else if(count($res2) > 1) {\n    return $res2;\n  } else {\n    $odds = 0;\n\
    \    for($i = 0; $i < 26; $i++) {\n      if($i % 2 != 0) {\n        $odds++;\n\
    \      }\n    }\n    return $odds;\n  }\n}", "  $arr = str_split($txt);\n  if(strpos($txt,\
    \ ' ') !== false) {\n    return explode(' ', $txt);\n  } else if(strpos($txt,\
    \ ',') !== false) {\n    return explode(',', $txt);\n  } else {\n    $count =\
    \ 0;\n    for($i = 0; $i < count($arr); $i++) {\n      if(ord($arr[$i]) % 2 ==\
    \ 1) {\n        $count++;\n      }\n    }\n    return $count;\n  }\n}\necho split_words(\"\
    Hello world!\");\necho '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\n\
    echo split_words(\"abcdef\");\necho '<br>';", "\tif (strpos($txt, ' ') !== false)\
    \ {\n\t\treturn explode(' ', $txt);\n\t} elseif (strpos($txt, ',') !== false)\
    \ {\n\t\treturn explode(',', $txt);\n\t} else {\n\t\t$letters = str_split($txt);\n\
    \t\treturn count(array_filter($letters, function($letter) {\n\t\t\treturn ord($letter)\
    \ % 2 === 1;\n\t\t}));\n\t}\n}\n\n$ret = split_words(\"abcdef\");\nvar_dump($ret);",
  "    if (preg_match(\"/\\s/\", $txt)) {\n        return preg_split(\"/\\s/\", $txt);\n\
    \    } elseif (preg_match(\"/,/\", $txt)) {\n        return preg_split(\"/,/\"\
    , $txt);\n    } else {\n        $counter = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n                $counter++;\n\
    \            }\n        }\n        return $counter;\n    }\n}\necho split_words(\"\
    Hello world!\");\necho \"\\n\";\necho split_words(\"Hello,world!\");\necho \"\\\
    n\";\necho split_words(\"abcdef\");\necho \"\\n\";", "  if (strpos($txt, ' ')\
    \ === false) {\n    if (strpos($txt, ',') === false) {\n      $letters = str_split($txt);\n\
    \      $odd_order = [];\n      foreach ($letters as $letter) {\n        if (ord($letter)\
    \ % 2 != 0) {\n          $odd_order[] = $letter;\n        }\n      }\n      return\
    \ count($odd_order);\n    } else {\n      return explode(',', $txt);\n    }\n\
    \  } else {\n    return explode(' ', $txt);\n  }\n}", "    if(preg_match(\"/\\\
    s/\", $txt)){\n        return preg_split(\"/\\s/\", $txt);\n    } elseif(preg_match(\"\
    /,/\", $txt)){\n        return preg_split(\"/,/\", $txt);\n    } else {\n    \
    \    $count = 0;\n        for($i = 0; $i < strlen($txt); $i++){\n            if(ord($txt[$i])\
    \ % 2 == 1){\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n", "\t$arr = [];\n\tif (strpos($txt, ' ') != false) {\n\t\
    \t$arr = explode(' ', $txt);\n\t} elseif (strpos($txt, ',') != false) {\n\t\t\
    $arr = explode(',', $txt);\n\t} else {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i <\
    \ strlen($txt); $i++) {\n\t\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t\t$count++;\n\
    \t\t\t}\n\t\t}\n\t\t$arr = $count;\n\t}\n\treturn $arr;\n}", "    $odds = 0;\n\
    \    $arr = [];\n    $split = \"\";\n    $split = preg_split(\"/[\\s,]+/\", $txt);\n\
    \    for ($i = 0; $i < count($split); $i++) {\n        if (ord($split[$i]) % 2\
    \ != 0) {\n            $odds++;\n        }\n    }\n    return $odds;\n}\necho\
    \ split_words(\"Hello world!\");", "    if (strpos($txt, ' ') == false) {\n  \
    \      if (strpos($txt, ',') == false) {\n            $odds = 0;\n           \
    \ $a = 'a';\n            for ($i = 0; $i < strlen($txt); $i++) {\n           \
    \     if (ord($txt[$i]) % 2 !== 0) {\n                    $odds++;\n         \
    \       }\n            }\n            return $odds;\n        } else {\n      \
    \      return explode(',', $txt);\n        }\n    } else {\n        return explode('\
    \ ', $txt);\n    }\n}\necho split_words(\"Hello world!\");", "  $txt = str_replace(\"\
    ,\", \" \", $txt);\n  $words = explode(\" \", $txt);\n  if(count($words) <= 1)\
    \ {\n    return count_letter($txt);\n  } else {\n    return $words;\n  }\n}\n",
  "  if(preg_match('/[a-z]/', $txt)){\n    $result = 0;\n    $i = 0;\n    while($i\
    \ < strlen($txt)){\n      if(ord($txt[$i]) % 2 != 0){\n        $result += 1;\n\
    \      }\n      $i++;\n    }\n    return $result;\n  }\n  if(preg_match('/\\s/',\
    \ $txt)){\n    return preg_split('/\\s/', $txt);\n  }\n  if(preg_match('/,/',\
    \ $txt)){\n    return preg_split('/,/', $txt);\n  }\n}", "\tif (preg_match('/[,\
    \ ]/', $txt)) {\n\t\t$split_whitespace = preg_split('/[, ]/', $txt);\n\t\treturn\
    \ $split_whitespace;\n\t} else {\n\t\t$arr = str_split($txt);\n\t\t$result = 0;\n\
    \t\tforeach ($arr as $key => $value) {\n\t\t\tif (ord($value) % 2 != 0) {\n\t\t\
    \t\t$result++;\n\t\t\t}\n\t\t}\n\t\treturn $result;\n\t}\n}\necho split_words(\"\
    Hello world!\") . \"\\n\";\necho split_words(\"Hello,world!\") . \"\\n\";\necho\
    \ split_words(\"abcdef\") . \"\\n\";", "\tif (str_replace(' ', '', $txt) == $txt)\
    \ {\n\t\tif (str_replace(',', '', $txt) == $txt) {\n\t\t\treturn count(str_split($txt))/2;\n\
    \t\t}\n\t\treturn explode(',', $txt);\n\t}\n\treturn explode(' ', $txt);\n}\n\n\
    echo '<pre>';\nvar_dump(split_words(\"Hello world!\"));\nvar_dump(split_words(\"\
    Hello,world!\"));\nvar_dump(split_words(\"abcdef\"));\nvar_dump(split_words(\"\
    abcdefg\"));\nvar_dump(split_words(\"abcdefgh\"));\nvar_dump(split_words(\"abcdefghi\"\
    ));\nvar_dump(split_words(\"abcdefghij\"));\nvar_dump(split_words(\"abcdefghijk\"\
    ));\nvar_dump(split_words(\"abcdefghijkl\"));\nvar_dump(split_words(\"abcdefghijklm\"\
    ));\nvar_dump(split_words(\"abcdefghijklmn\"));\nvar_dump(split_words(\"abcdefghijklmno\"\
    ));\nvar_dump(split_words(\"abcdefghijklmnop\"));\nvar_dump(split_words(\"abcdefghijklmnopq\"\
    ));\nvar_dump(split_words(\"abcdefghijklmnopqr\"));\nvar_dump(split_words(\"abcdefghijklmnopqrs\"\
    ));\nvar_dump(split_words(\"abcdefghijklmnopqrst\"));\nvar_dump(split_words(\"\
    abcdefghijklmnopqrstu\"));\nvar_dump(split_words(\"abcdefghijklmnopqrstuv\"));\n\
    var_dump(split_words(\"abcdefghijklmnopqrstuvw\"));\nvar_dump(split_words(\"abcdefghijklmnopqrstuvwx\"\
    ));\nvar_dump(split_words(\"abcdefghijklmnopqrstuvwxy\"));\nvar_dump(split_words(\"\
    abcdefghijklmnopqrstuvwxyz\"));\n", "    $j = 0;\n    $letters = array();\n  \
    \  $commas = array();\n    $txt = str_split($txt);\n    foreach ($txt as $i =>\
    \ $c) {\n        $ascii = ord($c);\n        if ($ascii >= 65 && $ascii <= 90)\
    \ {\n            $letters[$j] = chr($ascii + 32);\n            $j++;\n       \
    \ } else if ($ascii >= 97 && $ascii <= 122) {\n            $letters[$j] = $c;\n\
    \            $j++;\n        } else if ($c == ' ') {\n            break;\n    \
    \    } else if ($c == ',') {\n            array_push($commas, $i);\n        }\n\
    \    }\n    if ($j == count($txt)) {\n        $count = 0;\n        foreach ($letters\
    \ as $i => $c) {\n            if ($i % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    } else if (count($commas)\
    \ == 0) {\n        return $letters;\n    } else {\n        $a = array();\n   \
    \     $a[0] = '';\n        $a[1] = '';\n        $commas = $commas[0];\n      \
    \  foreach ($txt as $i => $c) {\n            if ($i <= $commas) {\n          \
    \      $a[0] .= $c;\n            } else {\n                $a[1] .= $c;\n    \
    \        }\n        }\n        return $a;\n    }\n}", "  $text = preg_split('/[,\\\
    s]+/', $txt);\n  if (empty($text[1])) {\n    $text = preg_split('//', $txt, -1,\
    \ PREG_SPLIT_NO_EMPTY);\n    return count(array_filter($text, function($x) {\n\
    \      return (ord($x) % 2 == 1);\n    }));\n  }\n  return $text;\n}", "\tif(strpos($txt,\
    \ ' ') !== false) {\n\t\treturn explode(' ', $txt);\n\t} elseif(strpos($txt, ',')\
    \ !== false) {\n\t\treturn explode(',', $txt);\n\t} else {\n\t\t$odds = 0;\n\t\
    \tfor($i = 0; $i < strlen($txt); $i++) {\n\t\t\tif(ord($txt[$i]) % 2 !== 0) {\n\
    \t\t\t\t$odds++;\n\t\t\t}\n\t\t}\n\t\treturn $odds;\n\t}\n}\n", "    $arr = [];\n\
    \    $isDigit = ctype_digit($txt);\n    $isUpper = ctype_upper($txt);\n    if\
    \ ($isDigit) {\n        return $txt;\n    } else if ($isUpper) {\n        return\
    \ strtolower($txt);\n    } else {\n        $txt = str_replace('\"', '', $txt);\n\
    \        $txt = str_replace(\"'\", '', $txt);\n        $txt = str_replace('.',\
    \ '', $txt);\n        $txt = str_replace(',', '', $txt);\n        $txt = str_replace(';',\
    \ '', $txt);\n        $txt = str_replace('-', '', $txt);\n        $txt = str_replace('/',\
    \ '', $txt);\n        $txt = str_replace('&', '', $txt);\n        $txt = str_replace(')',\
    \ '', $txt);\n        $txt = str_replace('(', '', $txt);\n        $txt = str_replace('!',\
    \ '', $txt);\n        $txt = str_replace('?', '', $txt);\n        $txt = str_replace('+',\
    \ '', $txt);\n        $txt = str_replace('=', '', $txt);\n        $txt = str_replace('$',\
    \ '', $txt);\n        $txt = str_replace('|', '', $txt);\n        $txt = str_replace('%',\
    \ '', $txt);\n        $txt = str_replace('^', '', $txt);\n        $txt = str_replace('*',\
    \ '', $txt);\n        $txt = str_replace('#', '', $txt);\n        $txt = str_replace('@',\
    \ '', $txt);\n        $txt = str_replace('~', '', $txt);\n        $txt = str_replace('{',\
    \ '', $txt);\n        $txt = str_replace('}', '', $txt);\n        $txt = str_replace('[',\
    \ '', $txt);\n        $txt = str_replace(']', '', $txt);\n        $txt = str_replace('<',\
    \ '', $txt);\n        $txt =", "    if(strpos($txt, ' ') !== false) {\n      \
    \  return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n \
    \       return explode(',', $txt);\n    } else {\n        return floor(strlen($txt)\
    \ / 2);\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\"\
    ;", "\tif (preg_match(\"/\\s/\", $txt)) {\n\t\t$txt = preg_split(\"/\\s/\", $txt);\n\
    \t} elseif (preg_match(\"/,/\", $txt)) {\n\t\t$txt = preg_split(\"/,/\", $txt);\n\
    \t} else {\n\t\t$arr = str_split($txt);\n\t\t$counter = 0;\n\t\tfor ($i=0; $i\
    \ < sizeof($arr); $i++) { \n\t\t\tif (ord($arr[$i]) % 2 != 0) {\n\t\t\t\t$counter++;\n\
    \t\t\t}\n\t\t}\n\t\t$txt = $counter;\n\t}\n\tprint_r($txt);\n}\nsplit_words(\"\
    abcdef\");", "    $letter_array = str_split($txt);\n    $odd_num = 0;\n    for\
    \ ($i = 0; $i < count($letter_array); $i++) {\n        if (ord($letter_array[$i])\
    \ >= ord('a') && ord($letter_array[$i]) <= ord('z')) {\n            if ($i % 2\
    \ != 0) {\n                $odd_num++;\n            }\n        }\n    }\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    } else\
    \ if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n   \
    \ } else {\n        return $odd_num;\n    }\n}", "  $txt = explode(\" \", $txt);\n\
    \  if (count($txt) == 1) {\n    $txt = explode(\",\", $txt[0]);\n    if (count($txt)\
    \ == 1) {\n      $cnt = 0;\n      for ($i = 0; $i < strlen($txt[0]); $i++) {\n\
    \        if (ord($txt[0][$i]) % 2 == 1) {\n          $cnt++;\n        }\n    \
    \  }\n      return $cnt;\n    }\n  }\n  return $txt;\n}\necho split_words(\"Hello\
    \ world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"<br>\"\
    ;\necho split_words(\"abcdef\");", "\tif (preg_match('/\\s/', $txt)) {\n\t\treturn\
    \ preg_split('/\\s/', $txt);\n\t}\n\tif (preg_match('/,/', $txt)) {\n\t\treturn\
    \ preg_split('/,/', $txt);\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}\necho split_words(\"Hello world!\");\necho \"\\n\";\necho split_words(\"\
    Hello,world!\");\necho \"\\n\";\necho split_words(\"abcdef\");", "    if(strpos($txt,\
    \ ' ') === false && strpos($txt, ',') === false) {\n        $arr = str_split($txt);\n\
    \        $count = 0;\n        for($i = 0; $i < count($arr); $i++) {\n        \
    \    if(ord($arr[$i]) % 2 === 1) {\n                $count++;\n            }\n\
    \        }\n        return $count;\n    } elseif(strpos($txt, ' ') === false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        return explode('\
    \ ', $txt);\n    }\n}", "    if (preg_match(\"/\\s/\", $txt)) {\n        return\
    \ preg_split(\"/\\s/\", $txt);\n    }\n    if (preg_match(\"/,/\", $txt)) {\n\
    \        return preg_split(\"/,/\", $txt);\n    }\n    $counter = 0;\n    for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 !== 0) {\n\
    \            $counter++;\n        }\n    }\n    return $counter;\n}\necho \"split_words('Hello\
    \ world!') => \";\nprint_r(split_words('Hello world!'));\necho \"<br>\";\necho\
    \ \"split_words('Hello,world!') => \";\nprint_r(split_words('Hello,world!'));\n\
    echo \"<br>\";\necho \"split_words('abcdef') => \";\nprint_r(split_words('abcdef'));\n\
    echo \"<br>\";\necho \"split_words('abc def') => \";\nprint_r(split_words('abc\
    \ def'));\necho \"<br>\";\necho \"split_words('def') => \";\nprint_r(split_words('def'));\n\
    echo \"<br>\";", "    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    } else if (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    } else {\n        $odd = '';\n        for ($i = 0; $i < strlen($txt);\
    \ $i += 2) {\n            $odd .= $txt[$i];\n        }\n        return strlen($odd);\n\
    \    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"Hello,world!\"\
    ) . '<br>';\necho split_words(\"abcdef\") . '<br>';", "    if (strpos($txt, '\
    \ ') !== false) {\n        return explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $odd_chars = array();\n        $i = 0;\n        while ($i < strlen($txt)) {\n\
    \            if ($i % 2 == 0) {\n                $odd_chars[] = $txt[$i];\n  \
    \          }\n            $i++;\n        }\n        return count($odd_chars);\n\
    \    }\n}\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\"\
    ;", "  $alphabet = str_split('abcdefghijklmnopqrstuvwxyz');\n  if (strpos($txt,\
    \ ' ') == false) {\n    if (strpos($txt, ',') == false) {\n      $count = 0;\n\
    \      for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2\
    \ == 1) {\n          $count++;\n        }\n      }\n      return $count;\n   \
    \ } else {\n      return explode(',', $txt);\n    }\n  } else {\n    return explode('\
    \ ', $txt);\n  }\n}\n", "  if (strpos($txt, ' ') === false && strpos($txt, ',')\
    \ === false) {\n    $odd = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n \
    \     if (ord($txt[$i]) % 2 != 0) {\n        $odd++;\n      }\n    }\n    return\
    \ $odd;\n  }\n  elseif (strpos($txt, ' ') === false) {\n    return explode(',',\
    \ $txt);\n  }\n  else {\n    return explode(' ', $txt);\n  }\n}", "  if (strpos($txt,\
    \ ' ') !== false) {\n    return explode(' ', $txt);\n  } elseif (strpos($txt,\
    \ ',') !== false) {\n    return explode(',', $txt);\n  } else {\n    $alpha =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if (strpos($alpha, $txt[$i]) % 2 !== 0) {\n        $count++;\n\
    \      }\n    }\n    return $count;\n  }\n}\necho split_words('Hello world!');\n\
    echo '<br>';\necho split_words('Hello,world!');\necho '<br>';\necho split_words('abcdef');\n\
    echo '<br>';\necho split_words('abc,def');\necho '<br>';\necho split_words('abcde,f');\n\
    echo '<br>';", "    $result = [];\n    if (strpos($txt, ' ') !== false) {\n  \
    \      $result = explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        $result = explode(',', $txt);\n    } else {\n        $result = 0;\n\
    \        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $result++;\n            }\n        }\n    }\n \
    \   return $result;\n}", "    $txt = trim($txt);\n    if (strpos($txt, ' ') !==\
    \ false) {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        return explode(',', $txt);\n    } else {\n        $sum\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 === 1) {\n                $sum++;\n            }\n        }\n        return\
    \ $sum;\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"Split,on,commas.\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,no,whitespace.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,no,whitespace,and,no,commas,either.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,no,whitespace,and,no,commas,.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,whitespace,and,commas.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,whitespace,and,commas,no,period.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,whitespace,and,commas,no,period,either.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Split,on,whitespace,and,commas,period,exists.\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Splitonwhitespaceandcommasperiodexists\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(", "    if(preg_match(\"/[a-zA-Z]/\"\
    , $txt)) {\n        if(preg_match(\"/[a-zA-Z]\\s[a-zA-Z]/\", $txt)) {\n      \
    \      $words = preg_split(\"/\\s/\", $txt);\n            return $words;\n   \
    \     }\n        elseif(preg_match(\"/[a-zA-Z],\\s[a-zA-Z]/\", $txt)) {\n    \
    \        $words = preg_split(\"/,\\s/\", $txt);\n            return $words;\n\
    \        }\n        else {\n            $abc = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n            $num_of_letters = strlen($txt);\n            $odd_letters = 0;\n\
    \            for($i = 0; $i < $num_of_letters; $i++) {\n                $letter\
    \ = strtolower($txt[$i]);\n                if(preg_match(\"/[$letter]/\", $abc))\
    \ {\n                    $index = strpos($abc, $letter);\n                   \
    \ if($index % 2 == 1) {\n                        $odd_letters++;\n           \
    \         }\n                }\n            }\n            return $odd_letters;\n\
    \        }\n    }\n    else {\n        return \"Input is invalid.\";\n    }\n}",
  "  $oddLetters = ['a', 'c', 'e', 'g', 'i', 'k', 'm', 'o', 'q', 's', 'u', 'w', 'y'];\n\
    \  $onlyLetters = str_replace(['-', ',', '.', '!', '?', ';', ':', ' ', '/', '\"\
    '], '', $txt);\n  if (strlen($onlyLetters) > 0) {\n    $letters = str_split($onlyLetters);\n\
    \    $lowerCase = [];\n    foreach ($letters as $l) {\n      $lowerCase[] = strtolower($l);\n\
    \    }\n    $odds = array_intersect($lowerCase, $oddLetters);\n    return count($odds);\n\
    \  }\n  $array = explode(' ', $txt);\n  if (count($array) > 1) {\n    return $array;\n\
    \  }\n  $array = explode(',', $txt);\n  if (count($array) > 1) {\n    return $array;\n\
    \  }\n  return 0;\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"\
    Hi-Low\") . '<br>';\necho split_words(\"Wonderful!\") . '<br>';\necho split_words(\"\
    Hello!\") . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho split_words(\"\
    I need a drink.\") . '<br>';\necho split_words(\"When you're hot, you're hot!\"\
    ) . '<br>';\necho split_words(\"My name is Bob.\") . '<br>';\necho split_words(\"\
    Jingle bells, Batman smells!\") . '<br>';\necho split_words(\"YOLO!\") . '<br>';\n\
    echo split_words(\"GIF\") . '<br>';\necho split_words(\"YESTERDAY\") . '<br>';\n\
    echo split_words(\"ALABAMA\") . '<br>';\necho split_words", "\tif(strstr($txt,\
    \ ' ')) {\n\t\treturn explode(' ', $txt);\n\t} elseif(strstr($txt, ',')) {\n\t\
    \treturn explode(',', $txt);\n\t} else {\n\t\t$txtArray = str_split($txt);\n\t\
    \t$letters = 0;\n\t\tforeach($txtArray as $char) {\n\t\t\tif(ord($char) % 2 ===\
    \ 1) {\n\t\t\t\t$letters++;\n\t\t\t}\n\t\t}\n\t\treturn $letters;\n\t}\n}", " \
    \   if (str_word_count($txt) > 1) {\n        return explode(\" \", $txt);\n  \
    \  } elseif (strpos($txt, \",\") != false) {\n        return explode(\",\", $txt);\n\
    \    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if ($i % 2 == 0) {\n                $count++;\n            }\n\
    \        }\n        return $count;\n    }\n}", "  if(preg_match(\"/\\s/\", $txt)){\n\
    \    return explode(\" \", $txt);\n  }\n  if(preg_match(\"/,/\", $txt)){\n   \
    \ return explode(\",\", $txt);\n  }\n  $sum = 0;\n  $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  for($i = 0; $i < strlen($txt); $i++){\n    if(in_array($txt[$i], str_split($alphabet))){\n\
    \      $index = strpos($alphabet, $txt[$i]);\n      if($index % 2 == 1){\n   \
    \     $sum++;\n      }\n    }\n  }\n  return $sum;\n}", "\t$words = explode('\
    \ ', $txt);\n\t$commas = preg_match('/,/', $txt);\n\t$count = 0;\n\tif (count($words)\
    \ > 1) {\n\t\treturn $words;\n\t} else if ($commas > 0) {\n\t\treturn $words;\n\
    \t} else {\n\t\t$letters = str_split($txt);\n\t\tforeach ($letters as $key =>\
    \ $value) {\n\t\t\tif (ord($value) % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\
    \t}\n\t\treturn $count;\n\t}\n}\necho split_words(\"Hello world!\");\necho '<br>';\n\
    echo split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\"\
    );", "    $result = [];\n    $regex = '/[^\\s]+|\\s+/';\n    preg_match_all($regex,\
    \ $txt, $matches);\n    for ($i = 0; $i < count($matches[0]); $i++) {\n      \
    \  $result[] = $matches[0][$i];\n    }\n    if (count($result) > 1) {\n      \
    \  return $result;\n    } else {\n        $regex = '/[^,]+|,+/';\n        preg_match_all($regex,\
    \ $txt, $matches);\n        for ($i = 0; $i < count($matches[0]); $i++) {\n  \
    \          $result[] = $matches[0][$i];\n        }\n        if (count($result)\
    \ > 1) {\n            return $result;\n        } else {\n            return lowercase_odd($txt);\n\
    \        }\n    }\n}", "    if(strpos($txt, ' ') !== false) {\n        return\
    \ explode(' ', $txt);\n    } else if(strpos($txt, ',') !== false) {\n        return\
    \ explode(',', $txt);\n    } else {\n        $oddCount = 0;\n        for($i =\
    \ 0; $i < strlen($txt); $i++) {\n            if($i % 2 == 0) {\n             \
    \   $oddCount++;\n            }\n        }\n        return $oddCount;\n    }\n\
    }", "    // return str_split($txt);\n    if(strpos($txt, ' ') !== false) {\n \
    \       return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       $chars = str_split($txt);\n        foreach($chars as $char) {\n      \
    \      if(ord($char) % 2 !== 0) {\n                $count++;\n            }\n\
    \        }\n        return $count;\n    }\n}\necho \"Number of odd characters\
    \ \".split_words(\"abcdef\").\"\\n\";\necho \"Two word split \".split_words(\"\
    Hello world!\").\"\\n\";\necho \"Two word split \".split_words(\"Hello,world!\"\
    ).\"\\n\";\n", "\t$w = explode(\" \", $txt);\n\tif (count($w) > 1) {\n\t\treturn\
    \ $w;\n\t}\n\t$w = explode(\",\", $txt);\n\tif (count($w) > 1) {\n\t\treturn $w;\n\
    \t}\n\t$o = 0;\n\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\tif (ord($txt[$i])\
    \ % 2 != 0) {\n\t\t\t$o++;\n\t\t}\n\t}\n\treturn $o;\n}\necho split_words(\"Hello\
    \ world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"<br>\"\
    ;\necho split_words(\"abcdef\");", "  if (strpos($txt, ' ') !== false) {\n   \
    \ return explode(' ', $txt);\n  }\n  if (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  }\n  $charArray = str_split($txt);\n  $count = 0;\n \
    \ foreach ($charArray as $value) {\n    if (ord($value) % 2 != 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\necho '<pre>';\nvar_dump(split_words(\"Hello\
    \ world!\"));\nvar_dump(split_words(\"Hello,world!\"));\nvar_dump(split_words(\"\
    abcdef\"));\necho '</pre>';", "    $result = preg_split('/[\\s,]+/', $txt);\n\
    \    if(count($result) < 2) {\n        $result = ord(strtolower($txt[0])) % 2;\n\
    \    }\n    return $result;\n}", "    $char_list = str_split($txt);\n    $char_array\
    \ = [];\n    $odd_char_number = 0;\n    foreach ($char_list as $char) {\n    \
    \    if (ord($char) >= 97 && ord($char) <= 122) {\n            $char_array[] =\
    \ ord($char);\n        }\n    }\n    foreach ($char_array as $number) {\n    \
    \    if ($number % 2 == 1) {\n            $odd_char_number += 1;\n        }\n\
    \    }\n    if (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n\
    \    } elseif (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    } else {\n        return $odd_char_number;\n    }\n}\n$txt = \"h,e!l!l,!o,w!o!r,l,d?\"\
    ;\necho split_words($txt);", "  if(strpos($txt, ' ') == true) {\n    return explode('\
    \ ', $txt);\n  } elseif(strpos($txt, ',') == true) {\n    return explode(',',\
    \ $txt);\n  } else {\n    $letters = str_split($txt);\n    $res = [];\n    foreach($letters\
    \ as $let) {\n      if(ord($let) % 2 != 0) {\n        $res[] = $let;\n      }\n\
    \    }\n    return count($res);\n  }\n}\necho split_words(\"Hello world!\");\n\
    \ ?>", "    $text = preg_split('/[\\s,]+/', $txt);\n    if (count($text) > 1)\
    \ {\n        return $text;\n    }\n    else {\n        $count = 0;\n        for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 != 0) {\n      \
    \          $count++;\n            }\n        }\n        return $count;\n    }\n\
    }\n$result = split_words(\"abcdef\");\nprint_r($result);\necho \"</br>\";\n$result\
    \ = split_words(\"Hello world!\");\nprint_r($result);\necho \"</br>\";\n$result\
    \ = split_words(\"Hello,world!\");\nprint_r($result);\necho \"</br>\";", "   \
    \ $words = preg_split('/[\\s,]+/', $txt);\n    if (count($words) == 1) {\n   \
    \     $odds = array_filter(str_split($txt), function($s) {\n            return\
    \ ord($s) % 2 === 1;\n        });\n        return count($odds);\n    }\n    return\
    \ $words;\n}\nprint_r(split_words(\"abcdef\"));", "\t$txt = str_replace(\",\"\
    , \" \", $txt);\n\t$split = explode(\" \", $txt);\n\t$count = 0;\n\tforeach($split\
    \ as $index => $word) {\n\t\tif(ctype_lower($word) && $index % 2 == 0) {\n\t\t\
    \t$count++;\n\t\t}\n\t}\n\treturn $count > 0 ? $count : $split;\n}\necho \"<pre>\"\
    ;\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"\
    abcdef\"));\necho \"</pre>\";", "\t$text = str_split($txt);\n\t$words = [];\n\t\
    $i = 0;\n\t$n = count($text);\n\twhile ($i < $n) {\n\t\t$word = \"\";\n\t\twhile\
    \ ($i < $n && $text[$i] != \" \" && $text[$i] != \",\") {\n\t\t\t$word .= $text[$i];\n\
    \t\t\t$i++;\n\t\t}\n\t\t$words[] = $word;\n\t\t$i++;\n\t}\n\tif (count($words)\
    \ == 1) {\n\t\t$word = str_split($words[0]);\n\t\t$odds = 0;\n\t\tforeach ($word\
    \ as $letter) {\n\t\t\tif (ord($letter) % 2 == 1) {\n\t\t\t\t$odds++;\n\t\t\t\
    }\n\t\t}\n\t\treturn $odds;\n\t}\n\treturn $words;\n}\necho split_words(\"Hello\
    \ world!\") . PHP_EOL;\necho split_words(\"Hello,world!\") . PHP_EOL;\necho split_words(\"\
    abcdef\") . PHP_EOL;", "    if (strpos($txt, ' ') !== false) {\n        return\
    \ explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !== false) {\n       \
    \ return explode(',', $txt);\n    }\n    $chars = str_split($txt);\n    $result\
    \ = [];\n    foreach ($chars as $char) {\n        if (ord($char) % 2 == 1) {\n\
    \            $result[] = $char;\n        }\n    }\n    return count($result);\n\
    }", "    $r = [];\n    $t = str_split($txt);\n    $i = 0;\n    foreach ($t as\
    \ $c) {\n        if (preg_match('/[a-z]/', $c)) {\n            $r[$i] .= $c;\n\
    \        } else {\n            $i++;\n        }\n    }\n    if (count($r) ===\
    \ 1) {\n        $i = 0;\n        foreach ($t as $c) {\n            if (preg_match('/[A-Z]/',\
    \ $c)) {\n                $r[$i] .= $c;\n            } else {\n              \
    \  $i++;\n            }\n        }\n    }\n    if (count($r) === 1) {\n      \
    \  $i = 0;\n        foreach ($t as $c) {\n            if (preg_match('/[!,.\\\
    s]/', $c)) {\n                $r[$i] .= $c;\n            } else {\n          \
    \      $i++;\n            }\n        }\n    }\n    if (count($r) === 1) {\n  \
    \      $i = 0;\n        foreach ($t as $c) {\n            if (preg_match('/[0-9]/',\
    \ $c)) {\n                $r[$i] .= $c;\n            } else {\n              \
    \  $i++;\n            }\n        }\n    }\n    if (count($r) === 1) {\n      \
    \  $i = 0;\n        foreach ($t as $c) {\n            if (preg_match('/[=\\+\\\
    -\\*\\/\\^\\%]/', $c)) {\n                $r[$i] .= $c;\n            } else {\n\
    \                $i++;\n            }\n        }\n    }\n    if (count($r) ===\
    \ 1) {\n        $i = 0;\n        foreach ($t as $c) {\n            if (preg_match('/[()]/',\
    \ $c)) {\n                $r[$i] .= $c;\n            } else {\n              \
    \  $i++;\n            }\n        }\n    }\n    if (count($", "    if (strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $cnt = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ ($i % 2 === 0) {\n                $cnt++;\n            }\n        }\n      \
    \  return $cnt;\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"\
    </pre>\";", "\tif (strpos($txt, ' ') === false && strpos($txt, ',') === false)\
    \ {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\t\tif (ord($txt[$i])\
    \ % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t} elseif\
    \ (strpos($txt, ' ') === false) {\n\t\treturn explode(',', $txt);\n\t} else {\n\
    \t\treturn explode(' ', $txt);\n\t}\n}\necho implode('<br>', split_words('Hello\
    \ world!'));\necho '<br>';\necho implode('<br>', split_words('Hello,world!'));\n\
    echo '<br>';\necho split_words('abcdef');", "  if(strpos($txt, ' ') !== false)\
    \ {\n    return explode(' ', $txt);\n  }\n  if(strpos($txt, ',') !== false) {\n\
    \    return explode(',', $txt);\n  }\n  $arr = str_split($txt);\n  $odds = [];\n\
    \  foreach($arr as $char) {\n    if((ord($char) % 2) === 1) {\n      $odds[] =\
    \ $char;\n    }\n  }\n  return count($odds);\n}\necho split_words(\"Hello world!\"\
    ) . PHP_EOL;\necho split_words(\"Hello,world!\") . PHP_EOL;\necho split_words(\"\
    abcdef\") . PHP_EOL;\n", "    $result = [];\n    $last_space = 0;\n    $last_comma\
    \ = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (substr($txt,\
    \ $i, 1) == ' ') {\n            $result[] = substr($txt, $last_space, $i - $last_space);\n\
    \            $last_space = $i + 1;\n        } else if (substr($txt, $i, 1) ==\
    \ ',') {\n            $result[] = substr($txt, $last_comma, $i - $last_comma);\n\
    \            $last_comma = $i + 1;\n        }\n    }\n    if (empty($result))\
    \ {\n        $result = substr_count($txt, 'a') + substr_count($txt, 'c') + substr_count($txt,\
    \ 'e') + substr_count($txt, 'g') + substr_count($txt, 'i') + substr_count($txt,\
    \ 'k') + substr_count($txt, 'm') + substr_count($txt, 'o') + substr_count($txt,\
    \ 'q') + substr_count($txt, 's') + substr_count($txt, 'u') + substr_count($txt,\
    \ 'w') + substr_count($txt, 'y');\n    }\n    return $result;\n}", "    $split_word\
    \ = explode(' ', $txt);\n    if (count($split_word) > 1) {\n        return $split_word;\n\
    \    } else {\n        $split_comma = explode(',', $txt);\n        if (count($split_comma)\
    \ > 1) {\n            return $split_comma;\n        } else {\n            $split_lower_case\
    \ = count(preg_grep('/[a-z]/', str_split($txt), PREG_GREP_INVERT));\n        \
    \    return $split_lower_case;\n        }\n    }\n}\necho split_words(\"abcdef\"\
    ) . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho split_words(\"\
    Hello world!\") . '<br>';\n", "    if(strpos($txt, ' ') !== false) {\n       \
    \ return explode(' ', $txt);\n    }\n\n    if(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    }\n\n    $chars = str_split($txt);\n\
    \    $count = 0;\n    foreach($chars as $char) {\n        if(ord($char) % 2 ==\
    \ 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho\
    \ split_words(\"Hello world!\");\necho \"\\n\";\necho split_words(\"Hello,world!\"\
    );\necho \"\\n\";\necho split_words(\"abcdef\");\necho \"\\n\";\necho split_words(\"\
    \");\necho \"\\n\";\necho split_words(\"\");\necho \"\\n\";\necho split_words(\"\
    Hello,world!abcdef\");\necho \"\\n\";\necho split_words(\"abcdef,Hello world!\"\
    );\necho \"\\n\";\necho split_words(\"abcdef,Hello world!a\");\necho \"\\n\";\n\
    echo split_words(\"abcdef,Hello world!b\");\necho \"\\n\";\necho split_words(\"\
    abcdef,Hello world!c\");\necho \"\\n\";\necho split_words(\"abcdef,Hello world!d\"\
    );\necho \"\\n\";\necho split_words(\"abcdef,Hello world!e\");\necho \"\\n\";\n\
    echo split_words(\"abcdef,Hello world!f\");\necho \"\\n\";\necho split_words(\"\
    abcdef,Hello world!g\");\necho \"\\n\";\necho split_words(\"abcdef,Hello world!h\"\
    );\necho \"\\n\";\necho split_words(\"abcdef,Hello world!i\");\necho \"\\n\";\n\
    echo split_words(\"abcdef,Hello world!j\");\necho \"\\n\";\necho split_words(\"\
    abcdef,Hello world!k\");\necho \"\\n\";\necho split_words(\"abcdef,Hello world!l\"\
    );\necho \"\\n\";\necho split_words(\"abcdef,Hello world!m\");\necho \"\\n\";\n\
    echo split_words(\"abcdef,Hello world!n\");\necho \"\\n\";\necho split_words(\"\
    abcdef,Hello world!o\");\necho \"\\", "  if (strpos($txt, ' ') !== false) {\n\
    \    return explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n\
    \    return explode(',', $txt);\n  } else {\n    $result = array();\n    $strlen\
    \ = strlen($txt);\n    for ($i = 0; $i < $strlen; $i++) {\n      if (ord($txt[$i])\
    \ % 2 !== 0) {\n        $result[] = $txt[$i];\n      }\n    }\n    return count($result);\n\
    \  }\n}\n", "\t$l = str_split(strtolower($txt));\n\t$p = count(array_filter($l,\
    \ function($k) { return ($k >= 0 && $k <= 25) && $k % 2 == 1; }));\n\treturn (!$p)\
    \ ? (!strpos($txt, ' ') ? (!strpos($txt, ',') ? $p : explode(',', $txt)) : explode('\
    \ ', $txt)) : $p;\n}\n\necho implode(', ', split_words('abcdef')) . PHP_EOL;\n\
    echo implode(', ', split_words('Hello world!')) . PHP_EOL;\necho implode(', ',\
    \ split_words('Hello,world!')) . PHP_EOL;\necho split_words('abcdef') . PHP_EOL;\n\
    echo split_words('Hello world!') . PHP_EOL;\necho split_words('Hello,world!')\
    \ . PHP_EOL;\necho PHP_EOL;\n", "    if (strpos($txt, ' ') === false && strpos($txt,\
    \ ',') === false) {\n        return countOddLowerCaseLetters($txt);\n    }\n \
    \   if (strpos($txt, ' ') === false) {\n        return explode(',', $txt);\n \
    \   }\n    return explode(' ', $txt);\n}\n", "    $txt = preg_replace('/\\s+/',\
    \ ' ', $txt);\n    $str = preg_split('/(\\,|\\s)/', $txt);\n    if (strpos($txt,\
    \ ',') === false && strpos($txt, ' ') === false) {\n        $odd = 0;\n      \
    \  for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2\
    \ != 0) {\n                $odd++;\n            }\n        }\n        return $odd;\n\
    \    }\n    return $str;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';",
  "  $res = [];\n  if (strpos($txt, ' ') !== false) {\n    $res = explode(' ', $txt);\n\
    \  } else if (strpos($txt, ',') !== false) {\n    $res = explode(',', $txt);\n\
    \  } else {\n    $count = 0;\n    $letters = range('a', 'z');\n    foreach ($letters\
    \ as $key => $letter) {\n      if ($key % 2 !== 0) {\n        $count += substr_count($txt,\
    \ $letter);\n      }\n    }\n    $res = $count;\n  }\n  return $res;\n}\necho\
    \ implode(', ', split_words('Hello world!'));\necho '<br>';\necho implode(', ',\
    \ split_words('Hello,world!'));\necho '<br>';\necho split_words('abcdef');", " \
    \ $txt = str_replace(\",\", \" \", $txt);\n  $txt = str_replace(\"!\", \" \",\
    \ $txt);\n  $words = preg_split(\"/\\s+/\", $txt);\n  if(count($words) > 1) {\n\
    \    return $words;\n  } else {\n    $letters = str_split($txt);\n    $sum = 0;\n\
    \    foreach($letters as $letter) {\n      $number = ord($letter) - 97;\n    \
    \  if($number % 2 == 1) {\n        $sum++;\n      }\n    }\n    return $sum;\n\
    \  }\n}", "  if (strpos($txt, ' ') !== false) {\n    return explode(' ', $txt);\n\
    \  } elseif (strpos($txt, ',') !== false) {\n    return explode(',', $txt);\n\
    \  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \    if (ord($txt[$i]) % 2 != 0) {\n        $count++;\n      }\n    }\n    return\
    \ $count;\n  }\n}\necho \"<pre>\";\nvar_dump(split_words(\"Hello world!\"));\n\
    var_dump(split_words(\"Hello,world!\"));\nvar_dump(split_words(\"abcdef\"));\n\
    echo \"</pre>\";", "    if (strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    }\n    if (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    }\n    $i = 0;\n    for ($x = 0; $x < strlen($txt); $x++) {\n  \
    \      if (ord($txt[$x]) % 2 == 1) {\n            $i++;\n        }\n    }\n  \
    \  return $i;\n}\n", "    if(strpos($txt, ' ') !== false) {\n        return explode('\
    \ ', $txt);\n    }\n\n    if(strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    }\n\n    return substr_count($txt, 'b') + substr_count($txt, 'd')\
    \ + substr_count($txt, 'f') + substr_count($txt, 'h') + substr_count($txt, 'j')\
    \ + substr_count($txt, 'l') + substr_count($txt, 'n') + substr_count($txt, 'p')\
    \ + substr_count($txt, 'r') + substr_count($txt, 't') + substr_count($txt, 'v')\
    \ + substr_count($txt, 'x') + substr_count($txt, 'z');\n}\n", "    $list = str_split($txt);\n\
    \    $len = strlen($txt);\n    $result = [];\n    $str = \"\";\n    for ($i =\
    \ 0; $i < $len; $i++) {\n        if ($list[$i] == \" \" || $list[$i] == \",\"\
    ) {\n            if ($str != \"\") {\n                array_push($result, $str);\n\
    \                $str = \"\";\n            }\n        } else {\n            $str\
    \ .= $list[$i];\n        }\n    }\n    if ($str != \"\") {\n        array_push($result,\
    \ $str);\n    }\n    if (count($result) == 0) {\n        $count = 0;\n       \
    \ for ($i = 0; $i < $len; $i++) {\n            if (ord($list[$i]) % 2 == 1) {\n\
    \                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n    return $result;\n}\n", "  $split_on_comma = explode(\",\", $txt);\n\
    \  $split_on_space = explode(\" \", $txt);\n  $split_on_no_char = str_split($txt);\n\
    \  $ordinal_of_no_char = ord($txt);\n  $odd_ordinal_of_no_char = [];\n  $result\
    \ = [];\n  if (count($split_on_comma) === 2) {\n    $result = $split_on_comma;\n\
    \  } else if (count($split_on_space) === 2) {\n    $result = $split_on_space;\n\
    \  } else {\n    foreach ($split_on_no_char as $char) {\n      $ordinal_of_char\
    \ = ord($char);\n      if ($ordinal_of_char % 2 === 1) {\n        array_push($odd_ordinal_of_no_char,\
    \ $ordinal_of_char);\n      }\n    }\n    $result = count($odd_ordinal_of_no_char);\n\
    \  }\n  echo print_r($result, true) . PHP_EOL;\n}\n\n$txt = \"Hello world!\";",
  "  $lowercase = preg_match(\"/[a-z]/\", $txt);\n  $uppercase = preg_match(\"/[A-Z]/\"\
    , $txt);\n  $numbers = preg_match(\"/[0-9]/\", $txt);\n  $whiteSpace = preg_match(\"\
    /\\s/\", $txt);\n  $comma = preg_match(\"/,/\", $txt);\n  $count = 0;\n  $split\
    \ = [];\n  if ($whiteSpace == 0 && $comma == 0) {\n    $split = str_split($txt);\n\
    \    for ($i = 0; $i < count($split); $i++) {\n      if (ord($split[$i]) % 2 !=\
    \ 0) {\n        $count++;\n      }\n    }\n    return $count;\n  } else if ($whiteSpace\
    \ == 0 && $comma != 0) {\n    $split = preg_split(\"/,/\", $txt);\n    return\
    \ $split;\n  } else if ($whiteSpace != 0 && $comma == 0) {\n    $split = preg_split(\"\
    /\\s/\", $txt);\n    return $split;\n  }\n}\n", "    $result = preg_split('/[\\\
    s,]+/', $txt);\n    if(count($result) == 1) {\n        $txt = str_split($txt);\n\
    \        $oddOrderAlpha = array();\n        foreach($txt as $key => $value) {\n\
    \            if($key % 2 == 0) {\n                array_push($oddOrderAlpha, $value);\n\
    \            }\n        }\n        return count($oddOrderAlpha);\n    } else {\n\
    \        return $result;\n    }\n}\necho \"2. Given a string of words, return\
    \ a list of words split on whitespace, if no whitespaces exists in the text you\
    \ should split on commas ',' if no commas exists you should return the number\
    \ of lower-case letters with odd order in the alphabet, ord('a') = 0, ord('b')\
    \ = 1, ... ord('z') = 25\\n\";\necho \"split_words('Hello world!')\\n\";\nprint_r(split_words('Hello\
    \ world!'));\necho \"split_words('Hello,world!')\\n\";\nprint_r(split_words('Hello,world!'));\n\
    echo \"split_words('abcdef')\\n\";\nprint_r(split_words('abcdef'));\necho \"split_words('abcde')\\\
    n\";\nprint_r(split_words('abcde'));\necho \"split_words('abcdefg')\\n\";\nprint_r(split_words('abcdefg'));\n\
    echo \"split_words('abcdefgh')\\n\";\nprint_r(split_words('abcdefgh'));\necho\
    \ \"split_words('abcdefghi')\\n\";\nprint_r(split_words('abcdefghi'));\necho \"\
    split_words('abcdefghij')\\n\";\nprint_r(split_words('abcdefghij'));\necho \"\
    split_words('abcdefghijk')\\n\";\nprint_r(split_words('abcdefghijk'));\necho \"\
    split_words('abcdefghijkl')\\n\";\nprint_r(split_words('abcdefghijkl'));\necho\
    \ \"split_words('abcdefghijklm')\\n\";\nprint", "  $str = preg_replace('/[^a-z]/i',\
    \ '', $txt);\n  if($str == '') {\n    $arr = explode(',', $txt);\n    if($arr[0]\
    \ == $txt) {\n      $arr = str_split($txt);\n      return count(array_filter($arr,\
    \ function($v, $k) {\n        return $k % 2;\n      }, ARRAY_FILTER_USE_BOTH));\n\
    \    }\n    return $arr;\n  }\n  return preg_split('/\\s+/', $txt);\n}\necho '<pre>';\n\
    print_r(split_words(\"Hello world!\"));\necho '</pre>';", "  if (strpos($txt,\
    \ ' ') !== false) {\n    return explode(' ', $txt);\n  } elseif (strpos($txt,\
    \ ',') !== false) {\n    return explode(',', $txt);\n  } else {\n    $txtArray\
    \ = [];\n    for ($i = 0; $i < strlen($txt); $i++) {\n      $str = strtolower($txt[$i]);\n\
    \      $ord = ord($str);\n      if ($ord % 2 === 1) {\n        $txtArray[] = $str;\n\
    \      }\n    }\n    return count($txtArray);\n  }\n}\necho split_words('abcdef').PHP_EOL;\n\
    echo split_words('Hello world!').PHP_EOL;\necho split_words('Hello,world!').PHP_EOL;",
  "    $res = '';\n    if(strpos($txt, ' ') !== false) {\n        $res = explode('\
    \ ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n        $res = explode(',',\
    \ $txt);\n    } else {\n        $oddCount = 0;\n        for($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if(ord($txt[$i]) % 2 === 1) {\n                $oddCount++;\n\
    \            }\n        }\n        $res = $oddCount;\n    }\n    return $res;\n\
    }\necho split_words(\"Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\"\
    );\necho \"<br>\";\necho split_words(\"abcdef\");", "    if(preg_match('/\\s/',\
    \ $txt)){\n        return explode(' ', $txt);\n    }\n    if(preg_match('/,/',\
    \ $txt)){\n        return explode(',', $txt);\n    }\n    preg_match_all('/[a-z]/',\
    \ $txt, $matches);\n    $count = 0;\n    foreach($matches[0] as $match){\n   \
    \     if(ord($match) % 2 != 0){\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\necho split_words(\"abcdef\");", "    if (strpos($txt, ' ')\
    \ !== false) {\n        return explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n            }\n    \
    \    }\n        return $count;\n    }\n}\necho '<pre>';\nprint_r(split_words(\"\
    abcdef\"));\necho '</pre>';", "    $temp = $txt;\n    $temp = preg_replace('/\\\
    s+/', '', $temp);\n    if ($temp === $txt) {\n        $temp = preg_replace('/[,]/',\
    \ '', $temp);\n        if ($temp === $txt) {\n            $temp = 0;\n       \
    \     for ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i])\
    \ % 2 == 1) {\n                    $temp++;\n                }\n            }\n\
    \            return $temp;\n        }\n    }\n    return explode(' ', $txt);\n\
    }\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\";\n\
    echo \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";", "\t$pattern\
    \ = '/[^a-zA-Z]/';\n\t$pattern2 = '/[^a-z]/';\n\tif (preg_match($pattern, $txt))\
    \ {\n\t\t$pattern = '/[a-z]/';\n\t\tpreg_match_all($pattern, $txt, $matches);\n\
    \t\t$txt = implode('', $matches[0]);\n\t}\n\tif (preg_match($pattern2, $txt))\
    \ {\n\t\t$pattern = '/[A-Z]/';\n\t\tpreg_match_all($pattern, $txt, $matches);\n\
    \t\t$txt = implode('', $matches[0]);\n\t}\n\t$arr = str_split($txt);\n\t$result\
    \ = [];\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\
    \tarray_push($result, $arr[$i]);\n\t\t}\n\t}\n\tif (count($result) == 0) {\n\t\
    \treturn count($arr);\n\t}\n\treturn $result;\n}\n\necho implode(', ', split_words('abcdef'));",
  "\t$s = preg_split('/\\s|,/', $txt);\n\tif (count($s) > 1) return $s;\n\tif (count($s)\
    \ == 1) {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\t\t\
    if ($i % 2 == 0 && strtolower($txt[$i]) == $txt[$i]) {\n\t\t\t\t$count++;\n\t\t\
    \t}\n\t\t}\n\t\treturn $count;\n\t}\n}\n\necho split_words(\"Hello world!\") .\
    \ \"\\n\";\necho split_words(\"Hello,world!\") . \"\\n\";\necho split_words(\"\
    abcdef\") . \"\\n\";", "\t$txt = str_replace(\",\", \" \", $txt);\n\t$ret = array();\n\
    \t$txt = explode(\" \", $txt);\n\tforeach ($txt as $word) {\n\t\tif (!empty($word))\
    \ {\n\t\t\t$ret[] = $word;\n\t\t}\n\t}\n\treturn empty($ret) ? substr_count($txt[0],\
    \ \"a\") : $ret;\n}\necho \"<pre>\";\nprint_r(split_words(\"hills,of,california\"\
    ));\necho \"</pre>\";", "\tif(ctype_alnum($txt)) {\n\t\tif (ctype_alpha($txt))\
    \ {\n\t\t\t$sum = 0;\n\t\t\tfor ($i=0; $i < strlen($txt); $i++) { \n\t\t\t\tif\
    \ (ord($txt[$i]) % 2 != 0) {\n\t\t\t\t\t$sum += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\
    return $sum;\n\t\t} else {\n\t\t\treturn $txt;\n\t\t}\n\t} else {\n\t\t$arr =\
    \ explode(' ', $txt);\n\t\treturn $arr;\n\t}\n}\necho split_words(\"Hello world!\"\
    );", "    $text = \"\";\n    if (strpos($txt, \" \") !== false) {\n        $text\
    \ = explode(\" \", $txt);\n    } elseif (strpos($txt, \",\") !== false) {\n  \
    \      $text = explode(\",\", $txt);\n    } else {\n        $text = count(array_filter(array_map(function\
    \ ($e) {\n            return ord($e) % 2 === 1;\n        }, str_split($txt))));\n\
    \    }\n    return $text;\n}\n\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\n\
    echo \"</pre>\";", "    if (strpos($txt, ' ') == true) {\n        return $split\
    \ = explode(' ', $txt);\n    } elseif (strpos($txt, ',') == true) {\n        return\
    \ $split = explode(',', $txt);\n    } else {\n        $split = array();\n    \
    \    for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0) {\n\
    \                array_push($split, $txt[$i]);\n            }\n        }\n   \
    \     return count($split);\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\n\
    echo split_words(\"Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\n",
  "    $arr = preg_split('/\\s+/', $txt);\n    if (sizeof($arr) > 1) return $arr;\n\
    \    $arr = preg_split('/,/', $txt);\n    if (sizeof($arr) > 1) return $arr;\n\
    \    $odds = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if ((ord($txt[$i])\
    \ - ord('a')) % 2 == 1) $odds++;\n    }\n    return $odds;\n}\n\necho split_words(\"\
    Hello world!\") . \"\\n\";\necho split_words(\"Hello,world!\") . \"\\n\";\necho\
    \ split_words(\"abcdef\") . \"\\n\";\necho split_words(\"abcdef,ghi jkl!\") .\
    \ \"\\n\";\necho split_words(\"abcde,fghi,jk,lmnop\") . \"\\n\";\necho split_words(\"\
    abcde,fghi,jk,lmn\") . \"\\n\";\necho split_words(\"abcde,fghi,jk,lmnopqrstuv\"\
    ) . \"\\n\";\necho split_words(\"abcde,fghi,jk,lmnopqrst\") . \"\\n\";", "  if\
    \ (strpos($txt, ' ') !== false) return explode(' ', $txt);\n  if (strpos($txt,\
    \ ',') !== false) return explode(',', $txt);\n  return strlen(preg_replace('/[^a-z]/i',\
    \ '', $txt)) / 2;\n}", "    $words = explode(\" \", $txt);\n    $result = [];\n\
    \    if (count($words) >= 2) {\n        foreach ($words as $word) {\n        \
    \    if ($word !== \"\") {\n                array_push($result, $word);\n    \
    \        }\n        }\n        return $result;\n    } else {\n        $words =\
    \ explode(\",\", $txt);\n        if (count($words) >= 2) {\n            foreach\
    \ ($words as $word) {\n                if ($word !== \"\") {\n               \
    \     array_push($result, $word);\n                }\n            }\n        \
    \    return $result;\n        } else {\n            $odds = [];\n            for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i]) % 2 !==\
    \ 0) {\n                    array_push($odds, $txt[$i]);\n                }\n\
    \            }\n            return count($odds);\n        }\n    }\n}\necho split_words(\"\
    Hello world!\");\necho split_words(\"Hello,world!\");\necho split_words(\"abcdef\"\
    );", "   $words = explode(\" \", $txt);\n   if (sizeof($words) == 1) {\n     \
    \ $words = explode(\",\", $txt);\n      if (sizeof($words) == 1) {\n         return\
    \ count(array_filter(range(0, 25), function($i) use ($txt) {\n            return\
    \ strpos($txt, chr($i + 97)) % 2 == 1;\n         }));\n      }\n   }\n   return\
    \ $words;\n}\n", "    $reg_ex = \"/\\s/\";\n    $result = preg_split($reg_ex,\
    \ $txt);\n    if (count($result) > 1) {\n        return $result;\n    } else {\n\
    \        $reg_ex = \"/,/\";\n        $result = preg_split($reg_ex, $txt);\n  \
    \      if (count($result) > 1) {\n            return $result;\n        } else\
    \ {\n            $num_odd = 0;\n            $len = strlen($txt);\n           \
    \ for ($i = 0; $i < $len; $i++) {\n                $ascii = ord($txt[$i]);\n \
    \               if ($ascii % 2 != 0) {\n                    $num_odd++;\n    \
    \            }\n            }\n            return $num_odd;\n        }\n    }\n\
    }\n", "    $split_word_num = 0;\n    $txt_split = array();\n    if(preg_match('/\\\
    s/', $txt)) {\n        $txt_split = preg_split('/\\s/', $txt);\n    } else if(preg_match('/,/',\
    \ $txt)) {\n        $txt_split = preg_split('/,/', $txt);\n    } else {\n    \
    \    for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) % 2\
    \ === 1) {\n                $split_word_num++;\n            }\n        }\n   \
    \ }\n    return empty($txt_split) ? $split_word_num : $txt_split;\n}\necho \"\
    <pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(split_words(\"abcdef\"));\necho \"</pre>\";", "\tif (strpos($txt, ' ')\
    \ !== false) {\n\t\treturn explode(' ', $txt);\n\t}\n\tif (strpos($txt, ',') !==\
    \ false) {\n\t\treturn explode(',', $txt);\n\t}\n\t$odd = 0;\n\tfor ($i = 0; $i\
    \ < strlen($txt); $i++) {\n\t\tif (ord($txt[$i]) % 2 == 1) {\n\t\t\t$odd++;\n\t\
    \t}\n\t}\n\treturn $odd;\n}\n", "    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 != 0) {\n      \
    \          $arr[] = ord($txt[$i]);\n            }\n        }\n    }\n    return\
    \ $arr;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(split_words(\"Hello,world!\"));\necho '</pre>';\necho '<pre>';\n\
    print_r(split_words(\"abcdef\"));\necho '</pre>';", "    if (strpos($txt, ' ')\
    \ !== false) {\n        return explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        $arr = str_split($txt);\n        foreach ($arr as $key\
    \ => $val) {\n            if ($key % 2 === 0) {\n                $count++;\n \
    \           }\n        }\n        return $count;\n    }\n}\n", "    $num = 0;\n\
    \    $x = explode(' ', $txt);\n    if (count($x) > 1) {\n        return $x;\n\
    \    } else {\n        $x = explode(',', $txt);\n        if (count($x) > 1) {\n\
    \            return $x;\n        } else {\n            for ($i = 0; $i < count($txt);\
    \ $i++) {\n                if ($i % 2 == 0) {\n                    $num++;\n \
    \               }\n            }\n            return $num;\n        }\n    }\n\
    }\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"Hello,world!\"\
    ) . '<br>';\necho split_words(\"abcdef\") . '<br>';", "  $arr = array();\n  $ind\
    \ = 0;\n  $l = strlen($txt);\n  for ($i = 0; $i < $l; $i++) {\n    if ((!ctype_alpha($txt[$i])\
    \ && !ctype_digit($txt[$i])) && $i != 0) {\n      if (ctype_alpha($txt[$i - 1])\
    \ || ctype_digit($txt[$i - 1])) {\n        $ind++;\n      }\n    } else if ($i\
    \ == $l - 1) {\n      $ind++;\n    }\n    $arr[$ind] .= $txt[$i];\n  }\n  if (count($arr)\
    \ == 1) {\n    $chars = \"abcdefghijklmnopqrstuvwxyz\";\n    $odd_chars = array();\n\
    \    for ($i = 0; $i < strlen($chars); $i += 2) {\n      $odd_chars[] = $chars[$i];\n\
    \    }\n    $sum = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n      if (in_array($txt[$i],\
    \ $odd_chars)) {\n        $sum++;\n      }\n    }\n    return $sum;\n  }\n  return\
    \ $arr;\n}", "    $odd_letters = 0;\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n        if (ord($txt[$i]) % 2 == 1) {\n            $odd_letters++;\n    \
    \    }\n    }\n    if (strpos($txt, \" \") == false && strpos($txt, \",\") ==\
    \ false) {\n        return $odd_letters;\n    } elseif (strpos($txt, \" \") ==\
    \ false) {\n        return explode(\",\", $txt);\n    } else {\n        return\
    \ explode(\" \", $txt);\n    }\n}\necho split_words(\"Hello world!\");\necho \"\
    <br/>\";\necho split_words(\"Hello,world!\");\necho \"<br/>\";\necho split_words(\"\
    abcdef\");\necho \"<br/>\";\necho split_words(\"a\").\"<br/>\";\necho split_words(\"\
    a,b,c\").\"<br/>\";\necho split_words(\"a,b,c,d,e,f\").\"<br/>\";\necho split_words(\"\
    hello, world\").\"<br/>\";\necho split_words(\"hello, world, how, are, you\").\"\
    <br/>\";\necho split_words(\"welcome, to, epicodus\").\"<br/>\";", "  if(strpos($txt,\
    \ ' ') !== false) {\n    return explode(' ', $txt);\n  } elseif(strpos($txt, ',')\
    \ !== false) {\n    return explode(',', $txt);\n  } else {\n    $count = 0;\n\
    \    for($i = 0; $i < strlen($txt); $i++) {\n      if($i % 2 == 0 && strpos('aeiou',\
    \ $txt[$i]) !== false) {\n        $count++;\n      }\n    }\n    return $count;\n\
    \  }\n}\necho split_words('Hello world!');\necho '<br>';\necho split_words('Hello,world!');\n\
    echo '<br>';\necho split_words('abcdef');", "  $txt = str_replace(['!', '.', '?',\
    \ ','], ' ', $txt);\n  $txt = str_replace(array(\"\\n\", \"\\r\"), '', $txt);\n\
    \  $txt = str_replace('  ', ' ', $txt);\n  $txt = trim($txt);\n  if (strpos($txt,\
    \ ' ') === false) {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n      if (ord($txt[$i]) % 2 !== 0) {\n        $count++;\n      }\n    }\n\
    \    return $count;\n  }\n  return explode(' ', $txt);\n}\n\necho '<pre>';\nprint_r(split_words(\"\
    Hello,world!\"));\necho '</pre>';\n", "    if (strpos($txt, ' ') !== false) {\n\
    \        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       $count_arr = [];\n        for ($i = 97; $i <= 122; $i++) {\n         \
    \   $count_arr[] = chr($i);\n        }\n        $arr = str_split($txt);\n    \
    \    foreach ($arr as $item) {\n            if (in_array($item, $count_arr)) {\n\
    \                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}", "\t$split_words = [];\n\tif (strpos($txt, ' ') === false && strpos($txt,\
    \ ',') === false) {\n\t\t$split_words = strlen($txt);\n\t} elseif (strpos($txt,\
    \ ' ') === false) {\n\t\t$split_words = explode(',', $txt);\n\t} else {\n\t\t\
    $split_words = explode(' ', $txt);\n\t}\n\treturn $split_words;\n}\necho '<pre>';\n\
    print_r(split_words(\"Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"\
    Hello,world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"\
    ));\necho '</pre>';", "  if (strpos($txt, ' ') !== false) {\n    return explode('\
    \ ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return explode(',',\
    \ $txt);\n  } else {\n    $out = 0;\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n      if ($i % 2 == 0) {\n        $out++;\n      }\n    }\n    return $out;\n\
    \  }\n}", "  if(preg_match(\"/ /\", $txt)) {\n    return explode(\" \", $txt);\n\
    \  } else if(preg_match(\"/,/\", $txt)) {\n    return explode(\",\", $txt);\n\
    \  } else {\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $alphabet =\
    \ str_split($alphabet);\n    $count = 0;\n    for($i = 0; $i < 26; $i += 2) {\n\
    \      if(strpos($txt, $alphabet[$i]) !== false) {\n        $count++;\n      }\n\
    \    }\n    return $count;\n  }\n}\n\necho split_words(\"Hello world!\");\necho\
    \ \"<br>\";\necho split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"\
    abcdef\");", "    if (strpos($txt, ' ') === false) {\n        if (strpos($txt,\
    \ ',') === false) {\n            $count = 0;\n            for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n                if (ord($txt[$i]) % 2 !== 0) {\n                  \
    \  $count++;\n                }\n            }\n            return $count;\n \
    \       } else {\n            return explode(',', $txt);\n        }\n    } else\
    \ {\n        return explode(' ', $txt);\n    }\n}", "\t$txt = preg_replace('/\\\
    s*,\\s*/', ',', $txt);\n\t$txt = preg_replace('/\\s*\\.\\s*/', '.', $txt);\n\t\
    $txt = preg_replace('/\\s*\\?\\s*/', '?', $txt);\n\t$txt = preg_replace('/\\s*!\\\
    s*/', '!', $txt);\n\t$txt = preg_replace('/\\s*\\(\\s*/', '(', $txt);\n\t$txt\
    \ = preg_replace('/\\s*\\)\\s*/', ')', $txt);\n\t$txt = preg_replace('/\\s*\\\
    [\\s*/', '[', $txt);\n\t$txt = preg_replace('/\\s*\\]\\s*/', ']', $txt);\n\t$txt\
    \ = preg_replace('/\\s*\\{\\s*/', '{', $txt);\n\t$txt = preg_replace('/\\s*\\\
    }\\s*/', '}', $txt);\n\t$txt = preg_replace('/\\s*\\|\\s*/', '|', $txt);\n\t$txt\
    \ = preg_replace('/\\s*\\\\\\s*/', '\\\\', $txt);\n\t$txt = preg_replace('/\\\
    s*\\/\\s*/', '/', $txt);\n\t$txt = preg_replace('/\\s*\\+\\s*/', '+', $txt);\n\
    \t$txt = preg_replace('/\\s*\\*\\s*/', '*', $txt);\n\t$txt = preg_replace('/\\\
    s*\\=\\s*/', '=', $txt);\n\t$txt = preg_replace('/\\s*\\-\\s*/', '-', $txt);\n\
    \t$txt = preg_replace('/\\s*\\:\\s*/', ':', $txt);\n\t$txt = preg_replace('/\\\
    s*\\@\\s*/', '@', $txt);\n\t$txt = preg_replace('/\\s*\\%\\s*/', '%', $txt);\n\
    \t$txt = preg_", "\t$str = explode(' ', $txt);\n\t\n\tif(count($str) > 1) {\n\t\
    \treturn $str;\n\t} else {\n\t\t$str = explode(',', $txt);\n\t\tif(count($str)\
    \ > 1) {\n\t\t\treturn $str;\n\t\t} else {\n\t\t\t$str = str_split($txt);\n\t\t\
    \t$num = 0;\n\t\t\tfor($i = 0; $i < count($str); $i++) {\n\t\t\t\tif(ord($str[$i])\
    \ % 2 == 1) {\n\t\t\t\t\t$num++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $num;\n\t\t\
    }\n\t}\n}\n\necho split_words(\"Hello world!\");\necho split_words(\"Hello,world!\"\
    );\necho split_words(\"abcdef\");", "  $word_ar=explode(\" \",$txt);\n  if(count($word_ar)==1){\n\
    \    $word_ar=explode(\",\",$txt);\n    if(count($word_ar)==1){\n      $ltr_count=0;\n\
    \      for($i=0;$i<strlen($txt);$i++){\n        if(ord($txt[$i])%2==1){\n    \
    \      $ltr_count++;\n        }\n      }\n      return $ltr_count;\n    }\n  }\n\
    \  return $word_ar;\n}\necho \"the input is : \\\"Hello world!\\\"<br>\";\necho\
    \ \"the output is : \";\nprint_r(split_words(\"Hello world!\"));\necho \"<br>---------------------------------<br>\"\
    ;\necho \"the input is : \\\"Hello,world!\\\"<br>\";\necho \"the output is : \"\
    ;\nprint_r(split_words(\"Hello,world!\"));\necho \"<br>---------------------------------<br>\"\
    ;\necho \"the input is : \\\"abcdef\\\"<br>\";\necho \"the output is : \";\nprint_r(split_words(\"\
    abcdef\"));", "\tif (preg_match(\"#[\\s]#\", $txt)){\n\t\treturn preg_split(\"\
    #[\\s]#\", $txt);\n\t} else if (preg_match(\"#[,]#\", $txt)){\n\t\treturn preg_split(\"\
    #[,]#\", $txt);\n\t} else {\n\t\treturn  count(array_filter(str_split($txt), function($x){\n\
    \t\t\treturn ord($x)%2==1;\n\t\t}));\n\t}\n}\necho \"<pre>\";\nprint_r(split_words(\"\
    Hello world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";", "  $arr = preg_split('/[\\s,]+/', $txt);\n  if(count($arr) > 1)\
    \ {\n    return $arr;\n  } else {\n    $count = 0;\n    $arr = str_split($txt);\n\
    \    foreach($arr as $key => $v) {\n      if($key % 2 !== 0) {\n        $count\
    \ += 1;\n      }\n    }\n    return $count;\n  }\n}", "  $letters = str_split(strtolower($txt));\n\
    \  $odd = 0;\n  foreach ($letters as $letter) {\n    if (ord($letter) % 2 == 1)\
    \ $odd++;\n  }\n  if (count($letters) == $odd) return $odd;\n  if (strpos($txt,\
    \ ',') === false) return explode(' ', $txt);\n  return [strstr($txt, ',', true),\
    \ substr(strstr($txt, ','), 1)];\n}\necho implode(', ', split_words('Hello, world!'))\
    \ . PHP_EOL;", "  $arr = [];\n  $txt = trim($txt);\n  if (strpos($txt, ' ') !==\
    \ false) {\n    $arr = explode(' ', $txt);\n  } elseif (strpos($txt, ',') !==\
    \ false) {\n    $arr = explode(',', $txt);\n  } else {\n    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n      if (ord($txt[$i]) % 2 == 1) {\n \
    \       $count++;\n      }\n    }\n    return $count;\n  }\n  return $arr;\n}\n\
    print_r(split_words(\"Hello world!\") . PHP_EOL);\nprint_r(split_words(\"Hello,world!\"\
    ) . PHP_EOL);\nprint_r(split_words(\"abcdef\") . PHP_EOL);", "  if (strpos($txt,\
    \ ' ') !== false) return explode(' ', $txt);\n  if (strpos($txt, ',') !== false)\
    \ return explode(',', $txt);\n  $letters = 'abcdefghijklmnopqrstuvwxyz';\n  $odd\
    \ = 0;\n  $txt = strtolower($txt);\n  for ($i = 0; $i < strlen($txt); $i++) {\n\
    \    if (strpos($letters, $txt[$i]) % 2 === 1) $odd++;\n  }\n  return $odd;\n\
    }\necho \"<pre>split_words('Hello world!')\\r\\n\";\nprint_r(split_words('Hello\
    \ world!'));\necho \"</pre>\";\necho \"<pre>split_words('Hello,world!')\\r\\n\"\
    ;\nprint_r(split_words('Hello,world!'));\necho \"</pre>\";\necho \"<pre>split_words('abcdef')\\\
    r\\n\";\nprint_r(split_words('abcdef'));\necho \"</pre>\";", "    $split = explode(\"\
    \ \", $txt);\n    if (count($split) < 2) {\n        $split = explode(\",\", $txt);\n\
    \        if (count($split) < 2) {\n            $split = count_letters($txt);\n\
    \        }\n    }\n    return $split;\n}\n", "\tif(strpos($txt, ' ') == true)\
    \ {\n\t\treturn explode(' ', $txt);\n\t} elseif(strpos($txt, ',') == true) {\n\
    \t\treturn explode(',', $txt);\n\t} else {\n\t\t$new_arr = str_split($txt);\n\t\
    \t$number = 0;\n\t\tfor($i = 0; $i < count($new_arr); $i++) {\n\t\t\tif(ord($new_arr[$i])\
    \ % 2 !== 0) {\n\t\t\t\t$number++;\n\t\t\t}\n\t\t}\n\t\treturn $number;\n\t}\n\
    }\n", //     $arr = str_split($txt);, "    $array = str_split($txt);\n    if (str_word_count($txt)\
    \ === 1) {\n        $oddLetters = [];\n        for ($i = 0; $i < count($array);\
    \ $i++) {\n            if (ord($array[$i]) % 2 != 0) {\n                array_push($oddLetters,\
    \ $array[$i]);\n            }\n        }\n        return count($oddLetters);\n\
    \    } else if (str_word_count($txt) > 1) {\n        return explode(\" \", $txt);\n\
    \    } else {\n        return explode(\",\", $txt);\n    }\n}\n", "    if (strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    }\n    $tot = 0;\n\
    \    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 ==\
    \ 1) {\n            $tot++;\n        }\n    }\n    return $tot;\n}\n", "  if (strstr($txt,\
    \ ' ')) {\n    return explode(' ', $txt);\n  } elseif (strstr($txt, ',')) {\n\
    \    return explode(',', $txt);\n  } else {\n    return strlen(preg_replace('/[a-z]/',\
    \ '', $txt));\n  }\n}", "\t$whitespace = preg_match(\"/\\s/\", $txt);\n\t$comma\
    \ = preg_match(\"/,/\", $txt);\n\tif ($whitespace != 0) {\n\t\t$result = preg_split(\"\
    /\\s/\", $txt);\n\t} elseif ($comma != 0) {\n\t\t$result = preg_split(\"/,/\"\
    , $txt);\n\t} else {\n\t\t$result = 0;\n\t\tfor ($i = 0; $i < strlen($txt); $i++)\
    \ {\n\t\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t\t$result++;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $result;\n}\n\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"qwerty123\"));\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"strawberries and bananas\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"this is a sentence\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"\"));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(split_words(\"coconut\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(split_words(\"apple,pear,kiwi\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(split_words(\"apple, pear, kiwi\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(split_words(\"nothing\"));\necho \"</pre>\";\n\n\
    echo \"<pre>\";\nprint_r(split_words(\"abcd efghi", "    $arr = explode(\" \"\
    , $txt);\n    if(!empty($arr[1])) {\n        return $arr;\n    } else {\n    \
    \    $arr = explode(\",\", $txt);\n        if(!empty($arr[1])) {\n           \
    \ return $arr;\n        } else {\n            $sum = 0;\n            for($i =\
    \ 0; $i < strlen($txt); $i++) {\n                if($i % 2 == 0) {\n         \
    \           $sum++;\n                }\n            }\n            return $sum;\n\
    \        }\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";\n", "    $result = [];\n    $result = explode(\" \", $txt);\n  \
    \  if (count($result) == 1) {\n        $result = explode(\",\", $txt);\n     \
    \   if (count($result) == 1) {\n            $result = 0;\n            for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n                if ($i % 2 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"\
    </pre>\";", "    $ret = [];\n    if (strpos($txt, ' ') === false) {\n        if\
    \ (strpos($txt, ',') === false) {\n            $od = 0;\n            for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i]) % 2 != 0) {\n\
    \                    $od++;\n                }\n            }\n            return\
    \ $od;\n        } else {\n            $ret = explode(',', $txt);\n        }\n\
    \    } else {\n        $ret = explode(' ', $txt);\n    }\n    return $ret;\n}\n\
    echo join(', ', split_words('Hello world!')) . '<br>';\necho join(', ', split_words('Hello,world!'))\
    \ . '<br>';\necho split_words('abcdef') . '<br>';", "    if(strpos($txt, ' ')\
    \ != false) {\n        return explode(' ', $txt);\n    } else if(strpos($txt,\
    \ ',') != false) {\n        return explode(',', $txt);\n    } else {\n       \
    \ $arr = str_split($txt);\n        $count = 0;\n        for($i = 0; $i < count($arr);\
    \ $i++) {\n            if(ord($arr[$i]) % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\necho '<pre>';\nprint_r(split_words(\"\
    Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';",
  "  if (strpos($txt, ' ') !== false) return explode(' ', $txt);\n  if (strpos($txt,\
    \ ',') !== false) return explode(',', $txt);\n  $count = 0;\n  for ($i = 0; $i\
    \ < strlen($txt); $i++) {\n    if (ord($txt[$i]) % 2 == 1) $count++;\n  }\n  return\
    \ $count;\n}\necho split_words(\"Hello world!\") . \"<br>\";\necho split_words(\"\
    Hello,world!\") . \"<br>\";\necho split_words(\"abcdef\") . \"<br>\";\necho split_words(\"\
    abcde\") . \"<br>\";\necho split_words(\"abcdefg\") . \"<br>\";\necho split_words(\"\
    abcdefghijklmnopqrstuvwxyz\") . \"<br>\";", "  if (strpos($txt, ' ') !== false)\
    \ {\n    return explode(' ', $txt);\n  }\n  if (strpos($txt, ',') !== false) {\n\
    \    return explode(',', $txt);\n  }\n  $n = 0;\n  for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n    if (ord($txt[$i]) % 2 !== 0) {\n      $n++;\n    }\n  }\n  return\
    \ $n;\n}\n", "  if(strpos($txt, ' ') !== false) {\n    return explode(' ', $txt);\n\
    \  }\n  if(strpos($txt, ',') !== false) {\n    return explode(',', $txt);\n  }\n\
    \  $num_odd_alphabet = 0;\n  $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  for($i\
    \ = 0; $i < strlen($txt); $i++) {\n    if(ord($txt[$i]) % 2 != 0) {\n      $num_odd_alphabet++;\n\
    \    }\n  }\n  return $num_odd_alphabet;\n}", "\t$arr = [];\n\t$arrSpace = explode(\"\
    \ \", $txt);\n\t$arrComma = explode(\",\", $txt);\n\t$arrLtr = str_split($txt);\n\
    \t\n\tif(count($arrSpace) > 1){\n\t\treturn $arrSpace;\n\t}elseif(count($arrComma)\
    \ > 1){\n\t\treturn $arrComma;\n\t}else{\n\t\t$arrFilter = array_filter($arrLtr,\
    \ function($letter){\n\t\t\treturn ord($letter) % 2 != 0;\n\t\t});\n\t\treturn\
    \ count($arrFilter);\n\t}\n}", "    $words = explode(' ', $txt);\n    $new_arr\
    \ = [];\n    if(count($words) === 1) {\n        $words = explode(',', $txt);\n\
    \        if(count($words) === 1) {\n            foreach($words as $value) {\n\
    \                $new_arr[] = ord($value);\n            }\n            return\
    \ $new_arr;\n        }\n    }\n    return $words;\n}", "    if (strpos($txt, '\
    \ ') !== false) {\n        return explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        $letters = str_split($txt);\n        foreach ($letters\
    \ as $letter) {\n            if (ord($letter) % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}", "    // TODO:\n\
    }\n", "    $res = [];\n    $arr = str_split($txt);\n    foreach ($arr as $key\
    \ => $val) {\n        if ($val == ' ') {\n            $res[] = implode('', array_slice($arr,\
    \ 0, $key));\n            $res[] = implode('', array_slice($arr, $key + 1));\n\
    \            break;\n        }\n        if ($val == ',') {\n            $res[]\
    \ = implode('', array_slice($arr, 0, $key));\n            $res[] = implode('',\
    \ array_slice($arr, $key + 1));\n            break;\n        }\n    }\n    if\
    \ (empty($res)) {\n        $count = 0;\n        foreach ($arr as $val) {\n   \
    \         if ((ord($val) - ord('a')) % 2 == 1) {\n                $count++;\n\
    \            }\n        }\n        $res[] = $count;\n    }\n    return $res;\n\
    }\n\necho split_words(\"Hello world!\");\necho split_words(\"Hello,world!\");\n\
    echo split_words(\"abcdef\");", "  if(preg_match('/[^\\s,]+,/', $txt)) {\n   \
    \ $arr = explode(',', $txt);\n    return $arr;\n  } elseif(preg_match('/[^\\s,]+/',\
    \ $txt)) {\n    $count = preg_match_all('/[^\\s,]+/', $txt);\n    return $count;\n\
    \  }\n}", "    if (strpos($txt, ' ') !== false) {\n        return explode(' ',\
    \ $txt);\n    }\n    if (strpos($txt, ',') !== false) {\n        return explode(',',\
    \ $txt);\n    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n\
    \        if (ord($txt[$i]) % 2 !== 0) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}\necho split_words(\"Hello world!\") . '<br>';\necho\
    \ split_words(\"Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\n\
    echo split_words(\"abcdef,ghi jklmno\") . '<br>';\necho split_words(\"abcdefghijklmno\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmn,opqrstuvwxyz\") . '<br>';\necho\
    \ split_words(\"123456789\") . '<br>';\necho split_words(\"123456789,abcdefghijklmnopqrstuvwxyz\"\
    ) . '<br>';\necho split_words(\"123456789,abcdefghijklmnopqrstuvwxyz, !\") . '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrstuvwxyz,123456789\") . '<br>';\necho split_words(\"\
    \") . '<br>';\necho split_words(\"123456789,\") . '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuvwxyz,\") . '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz,123456789,\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz,123456789,!\") . '<br>';\n\
    echo split_words(\"!\") . '<br>';\necho split_words(\"123456789,!\") . '", "\t\
    return $txt . \"\\n\";\n}\n", "  if(strpos($txt, ' ') !== false) return explode('\
    \ ', $txt);\n  if(strpos($txt, ',') !== false) return explode(',', $txt);\n  $chars\
    \ = str_split($txt);\n  $odds = [];\n  foreach($chars as $char) {\n    if(ord($char)\
    \ % 2 === 1) $odds[] = $char;\n  }\n  return count($odds);\n}\necho split_words(\"\
    abcdef\") . '<br>';\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"Hello world!, I am a string.\");",
  "    $txt = str_replace(',', ' ', $txt);\n    $arr = explode(' ', $txt);\n    if\
    \ (count($arr) < 2) {\n        $arr = [];\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n                $arr[] =\
    \ $txt[$i];\n            }\n        }\n    }\n    return $arr;\n}\n", "\t$space\
    \ = \" \";\n\t$comma = \",\";\n\tif (strpos($txt, $space) !== false) {\n\t\treturn\
    \ explode(\" \", $txt);\n\t} elseif (strpos($txt, $comma) !== false) {\n\t\treturn\
    \ explode(\",\", $txt);\n\t} else {\n\t\t$chars = str_split($txt);\n\t\t$count\
    \ = 0;\n\t\tforeach ($chars as $char) {\n\t\t\tif (ord($char) % 2 != 0) {\n\t\t\
    \t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n}\necho split_words(\"\
    Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"\
    <br>\";\necho split_words(\"abcdef\");\necho \"<br>\";\necho split_words(\"a,b,c,d,e,f\"\
    );\necho \"<br>\";\necho split_words(\"b,a,c,d,e,f\");\necho \"<br>\";", "   \
    \ $res = [];\n    $tmp = explode(\" \", $txt);\n    if(count($tmp) == 1) {\n \
    \       $tmp = explode(\",\", $txt);\n        if(count($tmp) == 1) {\n       \
    \     $res = count(preg_grep(\"/(.)\\1/\", array_map(\"chr\", range(ord(\"a\"\
    ), ord(\"z\")))));\n        } else {\n            foreach($tmp as $t) {\n    \
    \            $res[] = $t;\n            }\n        }\n    } else {\n        foreach($tmp\
    \ as $t) {\n            $res[] = $t;\n        }\n    }\n    return $res;\n}\n\
    echo \"<pre>\";\nprint_r(split_words(\"aaaabbcde\"));\necho \"</pre>\";", "\t\
    // your code goes here\n\tif(strpos($txt, ' ') !== false) {\n\t\treturn explode('\
    \ ', $txt);\n\t}\n\tif(strpos($txt, ',') !== false) {\n\t\treturn explode(',',\
    \ $txt);\n\t}\n\t$sum = 0;\n\tfor($i = 0; $i < strlen($txt); $i++) {\n\t\tif($i\
    \ % 2 !== 0) {\n\t\t\t$sum++;\n\t\t}\n\t}\n\treturn $sum;\n}\necho split_words(\"\
    Hello world!\") . \"<br>\";\necho split_words(\"Hello,world!\") . \"<br>\";\n\
    echo split_words(\"abcdef\") . \"<br>\";", "    $res = [];\n    $letters = \"\
    abcdefghijklmnopqrstuvwxyz\";\n    if (strpos($txt, \" \") !== false) {\n    \
    \    $res = explode(\" \", $txt);\n    } else if (strpos($txt, \",\") !== false)\
    \ {\n        $res = explode(\",\", $txt);\n    } else {\n        $ct = 0;\n  \
    \      for ($i = 0; $i < strlen($txt); $i++) {\n            $index = strpos($letters,\
    \ $txt[$i]);\n            if ($index % 2 != 0) {\n                $ct++;\n   \
    \         }\n        }\n        $res[] = $ct;\n    }\n    return $res;\n}\necho\
    \ \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";", "    if (ctype_alpha($txt))\
    \ {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    } else if (strpos($txt, ' ') ===\
    \ false) {\n        return explode(',', $txt);\n    } else {\n        return explode('\
    \ ', $txt);\n    }\n}\necho split_words(\"Hello world!\");\necho \"<br/>\";\n\
    echo split_words(\"Hello,world!\");\necho \"<br/>\";\necho split_words(\"abcdef\"\
    );\necho \"<br/>\";\n", "    // Check if whitespace exists\n    $output = explode(\"\
    \ \", $txt);\n    if (count($output) > 1) {\n        return $output;\n    }\n\
    \    // Check if comma exists\n    $output = explode(\",\", $txt);\n    if (count($output)\
    \ > 1) {\n        return $output;\n    }\n    // Check for the number of lower-case\
    \ letters with odd order in the alphabet\n    $odd_count = 0;\n    $letters =\
    \ range('a', 'z');\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (in_array($txt[$i],\
    \ $letters)) {\n            $letter_value = array_search($txt[$i], $letters);\n\
    \            if ($letter_value % 2 != 0) {\n                $odd_count++;\n  \
    \          }\n        }\n    }\n    return $odd_count;\n}", "    if(strpos($txt,\
    \ ' ') != false) {\n        return explode(' ', $txt);\n    } else if(strpos($txt,\
    \ ',') != false) {\n        return explode(',', $txt);\n    } else {\n       \
    \ $num = 0;\n        $txt = str_split($txt);\n        for($i = 0; $i < sizeof($txt);\
    \ $i++) {\n            if(ord($txt[$i]) % 2 == 1) {\n                $num++;\n\
    \            }\n        }\n        return $num;\n    }\n}\necho split_words(\"\
    Hello world!\");\necho split_words(\"Hello,world!\");\necho split_words(\"abcdef\"\
    );", "\t// your code here\n}\necho implode(\", \", split_words(\"Hello world!\"\
    ));", "\t$txt = trim($txt);\n\t$parts = array_map(function($word) {\n\t\treturn\
    \ trim($word);\n\t}, explode(' ', $txt));\n\tif (count($parts) > 1) {\n\t\treturn\
    \ $parts;\n\t}\n\t$parts = array_map(function($word) {\n\t\treturn trim($word);\n\
    \t}, explode(',', $txt));\n\tif (count($parts) > 1) {\n\t\treturn $parts;\n\t\
    }\n\t$letters = array_map(function($word) {\n\t\treturn ord($word);\n\t}, str_split($txt));\n\
    \t$n = 0;\n\tforeach ($letters as $l) {\n\t\tif ($l%2 == 1) {\n\t\t\t$n++;\n\t\
    \t}\n\t}\n\treturn $n;\n}\necho split_words(\"Hello world!\") . \"\\n\";\necho\
    \ split_words(\"Hello,world!\") . \"\\n\";\necho split_words(\"abcdef\") . \"\\\
    n\";\necho split_words(\"a1\") . \"\\n\";", "    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } else if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    } else {\n        $count =\
    \ 0;\n        $len = strlen($txt);\n        for ($i = 0; $i < $len; $i++) {\n\
    \            if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n      \
    \      }\n        }\n        return $count;\n    }\n}\n\necho implode(', ', split_words('Hello\
    \ world!'));\necho \"\\n\";\necho implode(', ', split_words('Hello,world!'));\n\
    echo \"\\n\";\necho split_words('abcdef');\necho \"\\n\";\necho split_words('abc');\n\
    echo \"\\n\";\necho split_words('abcde');\necho \"\\n\";\necho split_words('abcdefg');\n\
    echo \"\\n\";\necho split_words('Abcdefg');\necho \"\\n\";\necho split_words('Abcdefg,\
    \ hijkl');\necho \"\\n\";\n", "\tif (preg_match('/\\s/', $txt)) {\n\t\treturn\
    \ array_filter(explode(' ', $txt));\n\t}\n\tif (preg_match('/,/', $txt)) {\n\t\
    \treturn array_filter(explode(',', $txt));\n\t}\n\tif (preg_match('/[a-z]/', $txt))\
    \ {\n\t\t$chars = str_split($txt);\n\t\t$odd = array_filter($chars, function($char)\
    \ {\n\t\t\t$ascii = ord($char);\n\t\t\treturn ($ascii % 2 !== 0);\n\t\t});\n\t\
    \treturn count($odd);\n\t}\n}\n", "  if (preg_match('/[a-z]/', $txt)) {\n    $count\
    \ = 0;\n    $array = [];\n    for ($i = 0; $i < strlen($txt); $i++) {\n      $num\
    \ = (ord($txt[$i]) - ord('a')) % 2;\n      if ($num == 1) {\n        $count++;\n\
    \      }\n    }\n    return $count;\n  } else if (preg_match('/[,]/', $txt)) {\n\
    \    return explode(',', $txt);\n  } else {\n    return explode(' ', $txt);\n\
    \  }\n}\n", "  if (strstr($txt, ' ')) {\n    return explode(' ', $txt);\n  } elseif\
    \ (strstr($txt, ',')) {\n    return explode(',', $txt);\n  } else {\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n      if (ord($txt[$i]) %\
    \ 2 === 1) {\n        $count++;\n      }\n    }\n    return $count;\n  }\n}\n\
    echo split_words(', world!')[0];", "    if (strpos($txt, ' ') !== false) {\n \
    \       return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 === 0\
    \ && ord($txt[$i]) > 96 && ord($txt[$i]) < 123) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}", "    if (strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $odd_count = 0;\n        $length = strlen($txt);\n        for ($i = 0; $i <\
    \ $length; $i++) {\n            if ($i % 2 != 0) {\n                $odd_count++;\n\
    \            }\n        }\n        return $odd_count;\n    }\n}\n", "  $arr =\
    \ explode(\" \", $txt);\n  if(count($arr) == 1) {\n    $arr = explode(\",\", $txt);\n\
    \    if(count($arr) == 1) {\n      $arr = str_split($txt);\n      $count = 0;\n\
    \      foreach($arr as $item) {\n        if(ord($item) % 2 == 1) {\n         \
    \ $count++;\n        }\n      }\n      $arr = $count;\n    }\n  }\n  return $arr;\n\
    }", "\t$ans = '';\n\tif(str_word_count($txt, 1) > 1) {\n\t\t$ans = str_word_count($txt,\
    \ 1);\n\t} else if(substr_count($txt, ',') > 0) {\n\t\t$ans = explode(',', $txt);\n\
    \t} else {\n\t\t$ans = count(preg_grep('/[a-z]/', str_split($txt)));\n\t}\n\t\
    return $ans;\n}", "    if(preg_match(\"/\\s/\", $txt)) {\n        return explode(\"\
    \ \", $txt);\n    }\n    if(preg_match(\"/,/\", $txt)) {\n        return explode(\"\
    ,\", $txt);\n    }\n    $letters = str_split($txt);\n    $result = 0;\n    foreach($letters\
    \ as $letter) {\n        if(ord($letter) % 2 == 1) {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\necho split_words(\"Hello world!\");\n\
    echo \"\\n\";\necho split_words(\"Hello,world!\");\necho \"\\n\";\necho split_words(\"\
    abcdef\");", "  if (preg_match('/[ ]/', $txt)) {\n    return preg_split('/[ ]/',\
    \ $txt);\n  } elseif (preg_match('/[,]/', $txt)) {\n    return preg_split('/[,]/',\
    \ $txt);\n  } else {\n    return preg_match_all('/[a-z]/', $txt, $arr);\n  }\n\
    }", "    $a = \"abcedefghijklmnopqrstuvwxyz\";\n    $a = str_split($a);\n    $txt\
    \ = str_split($txt);\n    $k = 0;\n    for ($i = 0; $i < count($txt); $i++) {\n\
    \        if (in_array($txt[$i], $a)) {\n            $k++;\n        }\n    }\n\
    \    if (strpos($txt, \" \") === false && strpos($txt, \",\") === false) {\n \
    \       return $k;\n    } elseif (strpos($txt, \" \") === false) {\n        return\
    \ explode(\",\", $txt);\n    } else {\n        return explode(\" \", $txt);\n\
    \    }\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\n\
    echo \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";", "\tif (strpos($txt,\
    \ ' ') !== false) {\n\t\treturn explode(' ', $txt);\n\t}\n\tif (strpos($txt, ',')\
    \ !== false) {\n\t\treturn explode(',', $txt);\n\t}\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < strlen($txt); $i++) {\n\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\necho split_words(\"Hello world!\");\necho '<br>';\n\
    echo split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\"\
    );\necho '<br>';\necho split_words(\"abcdef,\");\necho '<br>';\necho split_words(\"\
    z abcdef\");\necho '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\n\
    echo split_words(\"a,b,c,d,e,f\");\necho '<br>';\necho split_words(\"a,b,c,d,e,f,\"\
    );\necho '<br>';\necho split_words(\"z a,b,c,d,e,f\");\necho '<br>';", "  if (strpos($txt,\
    \ ' ') === false) {\n    if (strpos($txt, ',') === false) {\n      return substr_count($txt,\
    \ 'a') + substr_count($txt, 'c') + substr_count($txt, 'e') + substr_count($txt,\
    \ 'g') + substr_count($txt, 'i') + substr_count($txt, 'k') + substr_count($txt,\
    \ 'm') + substr_count($txt, 'o') + substr_count($txt, 'q') + substr_count($txt,\
    \ 's') + substr_count($txt, 'u') + substr_count($txt, 'w') + substr_count($txt,\
    \ 'y');\n    } else {\n      return explode(',', $txt);\n    }\n  } else {\n \
    \   return explode(' ', $txt);\n  }\n}\n\necho var_dump(split_words(\"Hello world!\"\
    ));\necho '<br>';\necho var_dump(split_words(\"Hello,world!\"));\necho '<br>';\n\
    echo var_dump(split_words(\"abcdef\"));\n", "    $arr = str_split($txt);\n   \
    \ $str = \"\";\n    $str1 = \"\";\n    $str2 = \"\";\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] === \" \") {\n            $str = $str1;\n    \
    \        break;\n        } elseif ($arr[$i] === \",\") {\n            $str = $str2;\n\
    \            break;\n        } else {\n            $str1 .= $arr[$i];\n      \
    \      $str2 .= $arr[$i];\n        }\n    }\n    $arr = explode($str, $txt);\n\
    \    if (count($arr) === 1) {\n        $num = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 !== 0) {\n                $num++;\n\
    \            }\n        }\n        return $num;\n    } else {\n        return\
    \ $arr;\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"\
    </pre>\";", "\tif (strpos($txt, ' ') !== false) {\n\t\treturn explode(' ', $txt);\n\
    \t} elseif (strpos($txt, ',') !== false) {\n\t\treturn explode(',', $txt);\n\t\
    } else {\n\t\t$odd_chars = 0;\n\t\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\
    \t\tif (ord($txt[$i]) % 2 === 1) {\n\t\t\t\t$odd_chars++;\n\t\t\t}\n\t\t}\n\t\t\
    return $odd_chars;\n\t}\n}\n", "    $output = [];\n    // $len = strlen($txt);\n\
    \    // $arr = str_split($txt);\n    // $i = 0;\n    // while ($i < $len) {\n\
    \    //     $char = $arr[$i];\n    //     if ($char === ' ') {\n    //       \
    \  $word = '';\n    //         $i++;\n    //         while ($i < $len && $arr[$i]\
    \ !== ' ') {\n    //             $word .= $arr[$i];\n    //             $i++;\n\
    \    //         }\n    //         $output[] = $word;\n    //     } else {\n  \
    \  //         $i++;\n    //     }\n    // }\n    // return $output;\n    $matches\
    \ = [];\n    preg_match_all('/(\\S+)/', $txt, $matches);\n    return $matches[0];\n\
    }\n", "    if (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n\
    \    } else if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    } else {\n        $counter = 0;\n        for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n            if (ord($txt[$i]) % 2 !== 0) {\n                $counter++;\n\
    \            }\n        }\n        return $counter;\n    }\n}\n", "  if (strpos($txt,\
    \ ' ') !== false) {\n    return explode(' ', $txt);\n  }\n  if (strpos($txt, ',')\
    \ !== false) {\n    return explode(',', $txt);\n  }\n  return substr_count($txt,\
    \ 'a') + substr_count($txt, 'c') + substr_count($txt, 'e') + substr_count($txt,\
    \ 'g') + substr_count($txt, 'i') + substr_count($txt, 'k') + substr_count($txt,\
    \ 'm') + substr_count($txt, 'o') + substr_count($txt, 'q') + substr_count($txt,\
    \ 's') + substr_count($txt, 'u') + substr_count($txt, 'w') + substr_count($txt,\
    \ 'y');\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"def\");\necho '<br>';\necho split_words(\"ab,cd,ef\");", " \
    \   if(strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n  \
    \  } elseif(strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    } else {\n        $count = 0;\n        $n = strlen($txt);\n        for($i\
    \ = 0; $i < $n; $i++) {\n            if(ord($txt[$i]) % 2 == 1) {\n          \
    \      $count++;\n            }\n        }\n        return $count;\n    }\n}\n\
    echo split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"Hello,world!\"\
    );\necho '<br>';\necho split_words(\"abcdef\");", "    $txt = str_replace(',',\
    \ ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = trim($txt);\n\
    \    $str_to_arr = explode(' ', $txt);\n    if (count($str_to_arr) == 1) {\n \
    \       $char_array = str_split($txt);\n        $count = 0;\n        for ($i =\
    \ 0; $i < count($char_array); $i++) {\n            if ($i % 2 == 0) {\n      \
    \          $count++;\n            }\n        }\n        return $count;\n    }\n\
    \    return $str_to_arr;\n}\n\n$txt = \"Hello world!\";\nprint_r(split_words($txt));\n\
    echo \"<br/>\";\n\n$txt = \"Hello,world!\";\nprint_r(split_words($txt));\necho\
    \ \"<br/>\";\n\n$txt = \"abcdef\";\nprint_r(split_words($txt));\necho \"<br/>\"\
    ;\n", "\t$arr = str_split($txt);\n\tif (in_array(\" \", $arr)){\n\t\treturn explode(\"\
    \ \", $txt);\n\t} else if (in_array(\",\", $arr)){\n\t\treturn explode(\",\",\
    \ $txt);\n\t} else {\n\t\t$count = 0;\n\t\tforeach($arr as $letter){\n\t\t\tif\
    \ (ord($letter) % 2 === 1){\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\
    \t}\n}\nprint_r(split_words(\"Hello world!\"));\necho \"<br>\";\nprint_r(split_words(\"\
    Hello,world!\"));\necho \"<br>\";\nprint_r(split_words(\"abcdef\"));", "    if\
    \ (strstr($txt, ' ')) {\n        return explode(' ', $txt);\n    } elseif (strstr($txt,\
    \ ',')) {\n        return explode(',', $txt);\n    } else {\n        $count =\
    \ 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\necho split_words(\"Hello world!\");", "  if (empty($txt))\
    \ {\n    return \"\";\n  }\n  if (preg_match(\"/\\s/\", $txt)) {\n    return explode(\"\
    \ \", $txt);\n  }\n  if (preg_match(\"/,/\", $txt)) {\n    return explode(\",\"\
    , $txt);\n  }\n  $arr = [];\n  $str = preg_split('//u', $txt, -1, PREG_SPLIT_NO_EMPTY);\n\
    \  foreach ($str as $value) {\n    if (ord($value) % 2 != 0) {\n      array_push($arr,\
    \ $value);\n    }\n  }\n  return count($arr);\n}\nprint_r(split_words(\"abcdef\"\
    ));\nprint_r(split_words(\"Hello world!\"));\nprint_r(split_words(\"Hello,world!\"\
    ));", "// \t$txt = preg_replace(\"/\\s+/\", \",\", $txt);", "\t$text = preg_split('/[\\\
    s,]+/', $txt);\n\t$arr = [];\n\tforeach ($text as $value) {\n\t\t$arr[] = $value;\n\
    \t}\n\treturn count($arr) > 1 ? $arr : count_letters($txt);\n}\n", "  $txt = trim($txt);\n\
    \  $txt = preg_replace('/\\s+/', ' ', $txt);\n  if(preg_match(\"/\\s/\", $txt)){\n\
    \    return explode(\" \", $txt);\n  }\n  if(preg_match(\"/,/\", $txt)){\n   \
    \ return explode(\",\", $txt);\n  }\n  $result = 0;\n  $arr = str_split($txt);\n\
    \  foreach($arr as $item){\n    if(ord($item) % 2 === 1){\n      $result++;\n\
    \    }\n  }\n  return $result;\n}\necho split_words(\"abcdef\").\"\\n\";\necho\
    \ split_words(\"Hello world!\").\"\\n\";\necho split_words(\"Hello,world!\").\"\
    \\n\";", "    $result = [];\n    $txt = str_replace(\",\", \" \", $txt);\n   \
    \ $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\".\", \" \"\
    , $txt);\n    $result = explode(\" \", $txt);\n    $letterCount = 0;\n    for\
    \ ($i = 0; $i < count($result); $i++) {\n        $letterCount += strlen($result[$i]);\n\
    \    }\n    if ($letterCount > count($result)) {\n        return $result;\n  \
    \  } else {\n        $oddOrd = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $oddOrd++;\n \
    \           }\n        }\n        return $oddOrd;\n    }\n}\necho split_words(\"\
    Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"\
    <br>\";\necho split_words(\"abcdef\");\necho \"<br>\";\necho split_words(\"abcd,efg!\"\
    );\necho \"<br>\";\necho split_words(\"abcde,fg!\");\necho \"<br>\";\necho split_words(\"\
    Hello World,I am here!\");", "  $array = [];\n  if (strpos($txt, ' ') !== false)\
    \ {\n    $array = explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false)\
    \ {\n    $array = explode(',', $txt);\n  } else {\n    $lowercase = range('a',\
    \ 'z');\n    $array = array_filter($lowercase, function($x){\n      return ord($x)\
    \ % 2 === 1;\n    });\n    $array = count($array);\n  }\n  return $array;\n}",
  "  if (strpos($txt, ' ') !== false) {\n    return explode(' ', $txt);\n  } elseif\
    \ (strpos($txt, ',') !== false) {\n    return explode(',', $txt);\n  } else {\n\
    \    return count(array_filter(str_split($txt), function($c) {\n      return ord($c)\
    \ % 2 == 1;\n    }));\n  }\n}", "\t\n\tif(strpos($txt, ' ') !== false) {\n\t\t\
    $txt = explode(' ', $txt);\n\t\treturn $txt;\n\t} elseif(strpos($txt, ',') !==\
    \ false) {\n\t\t$txt = explode(',', $txt);\n\t\treturn $txt;\n\t} else {\n\t\t\
    return count_odd($txt);\n\t}\n}\n", "  if (count(explode(\" \", $txt))>1) {\n\
    \    return explode(\" \", $txt);\n  }\n  else if (count(explode(\",\", $txt))>1)\
    \ {\n    return explode(\",\", $txt);\n  }\n  else {\n    $counter = 0;\n    for\
    \ ($i=0; $i < strlen($txt); $i++) {\n      if ($i%2==0) {\n        $counter +=\
    \ 1;\n      }\n    }\n    return $counter;\n  }\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

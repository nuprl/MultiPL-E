name: HumanEval_134_check_if_last_char_is_a_letter
language: php
prompt: "<?php\n// Create a function that returns True if the last character\n// of\
  \ a given string is an alphabetical character and is not\n// a part of a word, and\
  \ False otherwise.\n// Note: \"word\" is a group of characters separated by space.\n\
  // Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u279E False\n//\
  \ check_if_last_char_is_a_letter(\"apple pi e\") \u279E True\n// check_if_last_char_is_a_letter(\"\
  apple pi e \") \u279E False\n// check_if_last_char_is_a_letter(\"\") \u279E False\n\
  function check_if_last_char_is_a_letter($txt) {\n"
tests: "function candidate(...$args) {\n    return check_if_last_char_is_a_letter(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"apple\") !== false) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"apple pi e\") !== true) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !== false)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A\") !== true)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin pie \"\
  ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Pumpkin\
  \ pie 1\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  eeeee e \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  apple pie\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  apple pi e \") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $txtLength = strlen($txt);\n    $lastChar = $txt[$txtLength - 1];\n\
    \    return preg_match(\"/[a-zA-Z]/\", $lastChar) && !preg_match(\"/\\w/\", $lastChar);\n\
    }", "  $last = substr($txt, -1);\n  if(ctype_alpha($last) && $last == \" \"){\n\
    \    return false;\n  }else{\n    return true;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";", "\t\
    $new_txt = trim($txt);\n\t$last_char = substr($new_txt, -1);\n\tif($last_char\
    \ == \" \"){\n\t\treturn False;\n\t}\n\tif(ctype_alpha($last_char)){\n\t\treturn\
    \ True;\n\t}\n\telse{\n\t\treturn False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");", "\tif(empty($txt)) return false;\n\t$word = explode(\" \",$txt);\n\
    \t$lastword = end($word);\n\t$lastword = str_split($lastword);\n\t$lastchar =\
    \ end($lastword);\n\tif(preg_match(\"/[a-zA-Z]/\",$lastchar)){\n\t\tif(strlen($lastword)\
    \ === 1) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\
    \ else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";", "\t$last = substr($txt, -1);\n\treturn ctype_alpha($last) &&\
    \ strpos($txt, ' ') === strlen($txt) - 1;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? 'True' : 'False';\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? 'True' : 'False';\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? 'True' : 'False';\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? 'True' : 'False';\necho \"\\n\";", "    if (empty($txt)) {\n        return\
    \ False;\n    } else {\n        $lastChar = substr($txt, -1);\n        if (preg_match('/[a-zA-Z]/',\
    \ $lastChar)) {\n            return True;\n        } else {\n            return\
    \ False;\n        }\n    }\n}\necho check_if_last_char_is_a_letter(\"a\");", " \
    \   if ($txt == \"\") {\n        return False;\n    } elseif (ctype_alpha(substr($txt,\
    \ -1)) == True && $txt[-1] == \" \") {\n        return True;\n    } else {\n \
    \       return False;\n    }\n}\n", "    $lastCharacter = substr($txt, -1);\n\
    \    $result = false;\n    if(ctype_alpha($lastCharacter) && ($lastCharacter ==\
    \ \" \" || preg_match(\"/\\w+\\s/\", $txt))){\n        $result = true;\n    }\n\
    \    return $result;\n}\necho check_if_last_char_is_a_letter(\"apple pie\");",
  "\t$lastchar = $txt[strlen($txt)-1];\n\tif($lastchar === \" \" || preg_match(\"\
    /[a-zA-Z]/\", $lastchar) == 0) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\
    \t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";", "    $txtArr\
    \ = str_split($txt);\n    $lastLetter = array_pop($txtArr);\n    $currentLetter\
    \ = '';\n    for ($i = count($txtArr) - 1; $i >= 0; $i--) {\n        if ($txtArr[$i]\
    \ == ' ') {\n            break;\n        }\n        $currentLetter = $txtArr[$i];\n\
    \    }\n    if ($currentLetter == $lastLetter) {\n        return false;\n    }\n\
    \    return true;\n}", "\tif ($txt === \"\") {\n\t\treturn false;\n\t}\n\t$lastChar\
    \ = substr($txt, -1);\n\tif (preg_match(\"/[a-zA-Z]/\", $lastChar)) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";", "    $length = strlen($txt);\n    if ($length == 0) return false;\n\
    \    if ($txt[$length - 1] != \" \") return true;\n    return false;\n}", "  \
    \  if (preg_match(\"/^[a-zA-Z]$/\", substr($txt, -1))) {\n        return true;\n\
    \    }\n    return false;\n}", "    return strlen($txt) == 0 ? false : !ctype_alpha(strrev($txt)[0]);\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";", "  $last\
    \ = $txt[strlen($txt) - 1];\n  return !ctype_alpha($last) || ctype_alpha($txt[strlen($txt)\
    \ - 2]);\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;", "    $len = strlen($txt);\n    $last = $txt[$len - 1];\n    $last2 = $txt[$len\
    \ - 2];\n    if ($len > 0 && !ctype_alpha($last) && ctype_alpha($last2)) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";", "  if (strlen($txt)\
    \ > 0) {\n    $str = $txt[strlen($txt) - 1];\n    $str = str_replace(\" \", \"\
    \", $str);\n    if (ctype_alpha($str)) {\n      return true;\n    } else {\n \
    \     return false;\n    }\n  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";", "    $lastChar = substr($txt,\
    \ -1);\n    if (preg_match(\"/^[a-z]$/i\", $lastChar)) {\n        $isLetter =\
    \ true;\n    } else {\n        $isLetter = false;\n    }\n    if (preg_match(\"\
    /\\w$/\", $lastChar)) {\n        $isPartOfWord = true;\n    } else {\n       \
    \ $isPartOfWord = false;\n    }\n    if ($isLetter && !$isPartOfWord) {\n    \
    \    return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";", "\t$last_chr = substr($txt,\
    \ -1);\n\tif (ctype_alpha($last_chr) && !preg_match('/[A-Za-z]/', $last_chr))\
    \ {\n\t\treturn 'True';\n\t} else {\n\t\treturn 'False';\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";", "\tif(preg_match('/^(.*[a-zA-Z])\\\
    s([a-zA-Z])$/', $txt, $matches)){\n\t\treturn false;\n\t}else{\n\t\treturn true;\n\
    \t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ;\necho \"<br/>\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\") ;\necho \"<br/>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ;\necho \"<br/>\";\necho check_if_last_char_is_a_letter(\"\") ;",
  "    if (empty($txt)) {\n        return false;\n    }\n    $arr = str_split($txt);\n\
    \    $lastChar = end($arr);\n    if (preg_match('/[a-zA-Z]/', $lastChar)) {\n\
    \        if (preg_match('/[a-zA-Z][a-zA-Z]/', end($arr) . prev($arr))) {\n   \
    \         return false;\n        }\n        return true;\n    }\n    return false;\n\
    }", "\t$words = explode(\" \", $txt);\n\t$last = end($words);\n\tif ($last ===\
    \ \"\" || preg_match(\"/[a-zA-Z]$/\", $last) === 0) {\n\t\treturn false;\n\t}\n\
    \treturn true;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;", "  return ctype_alpha(substr($txt, -1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"\") . PHP_EOL;", "  if ($txt == \"\") {\n\
    \    return false;\n  }\n  if (ctype_alpha(substr($txt, -1))) {\n    return true;\n\
    \  }\n  return false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"\");\necho \"\\n\";", "  if($txt[strlen($txt)-1]!=\"\
    \ \" && ctype_alpha($txt[strlen($txt)-1])){\n    return true;\n  }else{\n    return\
    \ false;\n  }\n}", "  return ctype_alpha(substr($txt, -1)) && !ctype_alpha(substr($txt,\
    \ -2, 1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\"\
    ;\necho \"<hr>\";", "    $x = \"\";\n    $txt = str_split($txt);\n    $last_char\
    \ = end($txt);\n    if(ctype_alpha($last_char) && $last_char != \" \"){\n    \
    \    $x = true;\n    } else {\n        $x = false;\n    }\n    return $x;\n}\n\
    echo check_if_last_char_is_a_letter(\"apple pie\");", "  $arr = explode(\" \"\
    , $txt);\n  $lastIndex = count($arr) - 1;\n  if (is_numeric($arr[$lastIndex][-1]))\
    \ {\n    return false;\n  }\n  return true;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";", "\t$last = $txt[strlen($txt)\
    \ - 1];\n\treturn ctype_alpha($last) && (strlen($txt) == 1 || ctype_space($txt[strlen($txt)\
    \ - 2]));\n}", "  if(strlen($txt) == 0) {\n    return false;\n  }\n  $last_character\
    \ = substr($txt, -1);\n  $last_character_ascii = ord($last_character);\n  if ($last_character_ascii\
    \ > 96 && $last_character_ascii < 123) {\n    $last_char_index = strrpos($txt,\
    \ $last_character);\n    $last_char_index_second_last = strrpos($txt, $last_character,\
    \ ($last_char_index - strlen($txt) - 1));\n    if($last_char_index_second_last\
    \ !== false) {\n      return false;\n    }\n    $last_letter_space_index = strrpos($txt,\
    \ \" \");\n    if($last_letter_space_index == $last_char_index - 1) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}", "\tif(preg_match(\"/[a-zA-Z]$/\", $txt)){\n\
    \t\tif(preg_match(\"/\\w$/\", $txt)){\n\t\t\treturn false;\n\t\t}\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";", "\treturn ($txt[strlen($txt)-1] !== ' ' && ctype_alpha($txt[strlen($txt)-1]));\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") ? 'True' : 'False';\necho\
    \ '<br>';\necho check_if_last_char_is_a_letter(\"apple pi e\") ? 'True' : 'False';\n\
    echo '<br>';\necho check_if_last_char_is_a_letter(\"apple pi e \") ? 'True' :\
    \ 'False';\necho '<br>';\necho check_if_last_char_is_a_letter(\"\") ? 'True' :\
    \ 'False';", "\tif(preg_match('/[^\\w]$/', $txt)){\n\t\treturn \"True\";\n\t}\n\
    \treturn \"False\";\n}\necho check_if_last_char_is_a_letter(\"apple pie\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\").\"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple\").\"\\n\";", "\t$txt = trim($txt);\n\
    \t$last = strlen($txt) - 1;\n\tif (ctype_alpha($txt[$last]) && ctype_alpha($txt[$last\
    \ - 1])) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\\n\" : \"false\\n\";", "  $txt = trim($txt);\n  $result = true;\n\
    \  if ($txt == '' || $txt[strlen($txt) - 1] == ' ') {\n    $result = false;\n\
    \  } else {\n    $arr = str_split($txt);\n    $i = 0;\n    while ($arr[$i] !=\
    \ ' ' && $i < count($arr)) {\n      $i++;\n    }\n    if ($i != count($arr)) {\n\
    \      $result = false;\n    }\n  }\n  return $result;\n}\necho 'function #1'\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pie\") . ' should be\
    \ False' . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . '\
    \ should be True' . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \") . ' should be False' . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") . ' should be False' . \"<br>\";\n", "\t$txt = str_split($txt);\n\t$last =\
    \ end($txt);\n\t$space = \" \";\n\tif ($last == $space) {\n\t\treturn false;\n\
    \t} else {\n\t\treturn true;\n\t}\n}", "\tif(empty($txt)){\n\t\treturn false;\n\
    \t}\n\t$words = explode(\" \", $txt);\n\t$last_word = array_pop($words);\n\t$last_char\
    \ = strtolower(substr($last_word, -1));\n\treturn ($last_char > 'a' && $last_char\
    \ < 'z') ? true : false;\n}\n\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . PHP_EOL;\necho check_if_last_char_is_a_letter(\"apple pi e\") . PHP_EOL;\n\
    echo check_if_last_char_is_a_letter(\"apple pi e \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"\
    \") . PHP_EOL;\necho check_if_last_char_is_a_letter(\"3\") . PHP_EOL;", "  $last\
    \ = substr($txt, -1);\n  if ($last != \" \") {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"<br>\";", "\t$l = strlen($txt);\n\treturn $l > 0 && ctype_alpha($txt[$l-1])\
    \ && ($l == 1 || !ctype_alpha($txt[$l-2]));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";", "\t$last = substr($txt, -1);\n\treturn preg_match('/^[a-zA-Z]$/',\
    \ $last);\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"\\n\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple p2ie\");\necho \"\\n\"\
    ;\necho check_if_last_char_is_a_letter(\"  \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple p 2ie\");\necho \"\\n\";", "    $last_char = substr($txt, -1);\n    if($last_char\
    \ == \" \") {\n        return false;\n    } else {\n        if(ctype_alpha($last_char))\
    \ {\n            return true;\n        } else {\n            return false;\n \
    \       }\n    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\") . \"<br>\"\
    ;", "\t$arr = str_split($txt);\n\t$char = \"\";\n\tfor ($i=count($arr)-1; $i >=\
    \ 0; $i--) { \n\t\tif(ctype_alpha($arr[$i])){\n\t\t\t$char = $arr[$i];\n\t\t\t\
    break;\n\t\t}\n\t}\n\tif($char != \"\"){\n\t\tfor ($i=count($arr)-1; $i >= 0;\
    \ $i--) { \n\t\t\tif($arr[$i] == \" \"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\
    if($arr[$i] == $char){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }", "\t$last = substr($txt, -1);\n\treturn (ctype_alpha($last) && !preg_match('/\\\
    s/', $last)) ? True : False;\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    );", "\treturn preg_match(\"/\\s[a-zA-Z]$/\", $txt);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";", "  return ctype_alpha(substr($txt, -1));\n}", " \
    \ if($txt[strlen($txt)-1] >= 'a' && $txt[strlen($txt)-1] <= 'z') {\n    if($txt[strlen($txt)-2]\
    \ === ' ') {\n      return true;\n    }\n  }\n  return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\n ?>", "\t$len = strlen($txt);\n\t$result = '';\n\tif ($len == 0)\
    \ {\n\t\t$result = false;\n\t} else {\n\t\t$char = substr($txt, -1);\n\t\tif (ctype_alpha($char)\
    \ && !ctype_alpha(substr($txt, -2, 1))) {\n\t\t\t$result = true;\n\t\t} else {\n\
    \t\t\t$result = false;\n\t\t}\n\t}\n\treturn $result;\n}", "\t$len = strlen($txt);\n\
    \tif(!$len){\n\t\treturn \"False\";\n\t}\n\t$i = $len - 1;\n\t$txt = str_split($txt);\n\
    \t$result = true;\n\twhile($i >= 0){\n\t\tif($txt[$i] == \" \"){\n\t\t\treturn\
    \ \"False\";\n\t\t}\n\t\tif(!ctype_alpha($txt[$i])){\n\t\t\treturn \"False\";\n\
    \t\t}\n\t\t$i--;\n\t}\n\treturn \"True\";\n}", "  return ctype_alpha(strrev($txt)[0])\
    \ && substr_count($txt, \" \") >= 1;\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";", "\t$letters = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \t$lastChar = substr($txt, -1);\n\tif (in_array($lastChar, $letters)) {\n\t\t\
    $checkSpaces = preg_split('/ /', $txt);\n\t\t$numSpaces = count($checkSpaces);\n\
    \t\t$lastString = $checkSpaces[$numSpaces - 1];\n\t\tif (strlen($lastString) ===\
    \ 1) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    );", "    $arr = str_split($txt);\n    $last = $arr[strlen($txt) - 1];\n    if\
    \ (ctype_alpha($last) && ctype_alpha($arr[strlen($txt) - 2])) {\n        return\
    \ false;\n    } elseif (ctype_alpha($last)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\
    <br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"\") . \"<br>\";", "    $str = preg_replace('/[^a-zA-Z]+/',\
    \ '', $txt);\n    if (strlen($str) == 0) {\n        return false;\n    }\n   \
    \ $last_char = substr($str, -1);\n    if (preg_match('/[a-zA-Z]/', $last_char))\
    \ {\n        return true;\n    }\n    return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";", "\t$alpha = '/[a-zA-Z]/';\n\
    \t$lastChar = substr($txt, -1);\n\tif ($lastChar == \" \") {\n\t\treturn False;\n\
    \t} elseif ($lastChar == \" \" && preg_match($alpha, $lastChar)) {\n\t\treturn\
    \ False;\n\t} elseif (preg_match($alpha, $lastChar)) {\n\t\treturn True;\n\t}\
    \ else {\n\t\treturn False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    2\");\necho \"\\n\";", "    $array = str_split($txt);\n    if($array[count($array)-1]\
    \ == ' ') {\n        return False;\n    }\n    $lastChar = $array[count($array)-1];\n\
    \    if(ctype_alpha($lastChar)) {\n        return True;\n    }\n    return False;\n\
    }", "  $txt = trim($txt);\n  $lastChar = substr($txt, -1);\n  $secondLastChar\
    \ = substr($txt, -2, 1);\n  if (preg_match('/[a-zA-Z]/', $lastChar) && !preg_match('/[a-zA-Z]/',\
    \ $secondLastChar)) {\n    return true;\n  } else {\n    return false;\n  }\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"True\" : \"False\";\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? \"True\"\
    \ : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \") ? \"True\" : \"False\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\";", "    if (strlen($txt) == 0) {\n        return false;\n\
    \    }\n    $lastChar = substr($txt, -1);\n    return !ctype_alpha($lastChar);\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\");", "\t$txt = explode(\"\
    \ \", $txt);\n\t$txt = end($txt);\n\t$last = substr($txt, -1);\n\tif($last==\"\
    \ \"){\n\t\treturn \"False\";\n\t}elseif(ctype_alpha($last)){\n\t\treturn \"True\"\
    ;\n\t}else{\n\t\treturn \"False\";\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\
    <br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"\").\"<br>\";", "\t$last = substr($txt, -1);\n\
    \tif (ctype_alpha($last) === true && ctype_space($last) === false) {\n\t\treturn\
    \ 'True';\n\t} else {\n\t\treturn 'False';\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\n", "  $txt = rtrim($txt);\n\
    \  if($txt === \"\") {\n    return false;\n  } else {\n    if(ctype_alpha(substr($txt,\
    \ -1)) && (strpos($txt, \" \") === false || strrpos($txt, \" \") === strlen($txt)\
    \ - 2)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\
    }", "\t$len = strlen($txt);\n\t$lastChar = $txt[$len-1];\n\tif(ctype_alpha($lastChar)\
    \ && !ctype_alnum($lastChar)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\");", "\t$result\
    \ = preg_match('/[a-z]\\s$/i', $txt);\n\tif ($result == 0) {\n\t\treturn 'False';\n\
    \t} else {\n\t\treturn 'True';\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple p\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple  p\");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"ab \");\necho \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"ab c\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    abc\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"hello world\");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"hello world \");\necho \"\
    \\n\";\necho check_if_last_char_is_a_letter(\"hello world! \");\necho \"\\n\"\
    ;\necho check_if_last_char_is_a_letter(\"hello world! b\");\necho \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"hello world b\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    hello world!b\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"hello\
    \ worldb\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"hello\");\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"hello \");\necho \"\\n\"\
    ;\necho check_if_last_char_is_a", "\t$txt = substr($txt, -1);\n\treturn ctype_alpha($txt)\
    \ && !ctype_alnum($txt);\n}", "\t$txtarr = str_split($txt);\n\t$len = count($txtarr);\n\
    \tif($len==0){\n\t\treturn false;\n\t}\n\tif(preg_match(\"/[^a-zA-Z]/\", $txtarr[$len-1])){\n\
    \t\treturn false;\n\t}else{\n\t\treturn true;\n\t}\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");", "    $last = substr($txt,\
    \ -1);\n    return (ctype_alpha($last) and $last != \" \") ? true : false;\n}",
  "\t$txt = trim($txt);\n\tif (strlen($txt) == 0) {\n\t\treturn false;\n\t}\n\tif\
    \ (ctype_alpha($txt[strlen($txt) - 1])) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pie.\");\necho \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pie..\");\necho \"\\n\";", "\t$words\
    \ = explode(\" \", $txt);\n\tforeach ($words as $w) {\n\t\t$last_char = substr($w,\
    \ -1);\n\t\t$last_char = preg_replace(\"/[^a-zA-Z]/\", \"\", $last_char);\n\t\t\
    if (strlen($last_char)>0) {\n\t\t\treturn True;\n\t\t}\n\t}\n\treturn False;\n\
    }", "\t$lastChar = substr($txt, -1);\n\treturn ctype_alpha($lastChar) && ctype_space(substr($txt,\
    \ -2, 1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;", "$last = $txt[strlen($txt)-1];\nreturn ctype_alpha($last) && !ctype_alpha($txt[strlen($txt)-2]);\n\
    }", "\t$letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\
    \t$last_letter = substr($txt, -1);\n\t$last_word = end(explode(' ', $txt));\n\t\
    if (in_array($last_letter, $letters) && !in_array($last_letter, str_split($last_word)))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    abc\") . \"\\n\";\necho check_if_last_char_is_a_letter(\" o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o", "\t$txt_array = str_split($txt);\n\t$last_character = array_pop($txt_array);\n\
    \treturn ctype_alpha($last_character) && $last_character != \" \";\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");", "    $arr = str_split($txt);\n    $length = count($arr) - 1;\n\
    \    if(ctype_alpha($arr[$length]) && !ctype_alpha($arr[$length - 1])) {\n   \
    \     return \"True\";\n    }\n    return \"False\";\n}", "\t$txt = trim($txt);\n\
    \t$flag = false;\n\tif(substr($txt, -1) == \" \") {\n\t\t$flag = false;\n\t} else\
    \ {\n\t\t$flag = true;\n\t}\n\treturn $flag;\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");\necho \"<br>\";", "\t\
    $array=str_split($txt);\n\t$last=end($array);\n\t\n\t$last_two=array_slice($array,\
    \ -2, 1);\n\t\n\t$last_two=implode(\"\", $last_two);\n\t\n\tif(preg_match(\"/\\\
    s/\", $last_two)){\n\t\tif(preg_match(\"/\\w/\", $last)){\n\t\t\treturn True;\n\
    \t\t}\n\t\telse{\n\t\t\treturn False;\n\t\t}\n\t}\n\telse{\n\t\treturn False;\n\
    \t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\n", "\t$last = substr($txt,\
    \ -1);\n\tif (ctype_alpha($last) && strpos($txt, $last) == strlen($txt) - 1) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";", "\tif($txt != \"\") {\n\t\tif(ord(substr($txt, strlen($txt) - 1))\
    \ >= 97 && ord(substr($txt, strlen($txt) - 1)) <= 122) {\n\t\t\tif(ord(substr($txt,\
    \ strlen($txt) - 2)) != 32) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}", "\t$lastChar = substr($txt, -1);\n\tif (ctype_alpha($lastChar) &&\
    \ strlen($txt)>1 && !ctype_alnum(substr($txt, -2, 1))) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");", "\t$txt = trim($txt);\n\tif(empty($txt)) {\n\t\treturn false;\n\t\
    }\n\t$length = strlen($txt);\n\t$last = $txt[$length - 1];\n\tif(ctype_alpha($last)\
    \ && $txt[$length - 2] != \" \") {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\necho check_if_last_char_is_a_letter(\"apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\
    \\n\";\necho check_if_last_char_is_a_letter(\"\").\"\\n\";", "\t// split into\
    \ array by space\n\t$arr = explode(\" \", $txt);\n\t// get last element\n\t$last_element\
    \ = array_pop($arr);\n\t// if the last element is empty\n\tif (empty($last_element))\
    \ {\n\t\treturn false;\n\t}\n\t// last element is not empty, check the last character\
    \ if it is a-z, return true\n\t// else return false\n\tif (preg_match(\"/[a-z]/\"\
    , $last_element[strlen($last_element) - 1])) {\n\t\treturn true;\n\t} else {\n\
    \t\treturn false;\n\t}\n}\necho \"check_if_last_char_is_a_letter(\\\"apple pie\\\
    \") = \" . check_if_last_char_is_a_letter(\"apple pie\") . \"<br>\";\necho \"\
    check_if_last_char_is_a_letter(\\\"apple pi e\\\") = \" . check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"<br>\";\necho \"check_if_last_char_is_a_letter(\\\"apple pi\
    \ e \\\") = \" . check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\";\n\
    echo \"check_if_last_char_is_a_letter(\\\"\\\") = \" . check_if_last_char_is_a_letter(\"\
    \") . \"<br>\";", "\t$arr = explode(\" \", $txt);\n\t$answer = true;\n\t$lastWord\
    \ = array_pop($arr);\n\tif($lastWord == \"\" ) {\n\t\t$answer = false;\n\t}\n\t\
    if (strlen($lastWord) == 1) {\n\t\t$answer = true;\n\t}\n\telseif (strlen($lastWord)\
    \ == 2) {\n\t\tif(!ctype_alpha($lastWord[1])) {\n\t\t\t$answer = false;\n\t\t\
    }\n\t}\n\telseif (strlen($lastWord) > 2) {\n\t\tif(!ctype_alpha($lastWord[1])\
    \ || !ctype_alpha($lastWord[2])) {\n\t\t\t$answer = false;\n\t\t}\n\t}\n\treturn\
    \ $answer;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;", "\t$txt = str_split($txt);\n\t$last_char = array_pop($txt);\n\t$last_char\
    \ = trim($last_char);\n\tif ($last_char == '') {\n\t\treturn false;\n\t}\n\tif\
    \ (ctype_alpha($last_char)) {\n\t\treturn true;\n\t}\n\treturn false;\n}", " \
    \ $lastChar = $txt[strlen($txt) - 1];\n  $wordArray = explode(\" \", $txt);\n\
    \  $lastWord = array_pop($wordArray);\n  $lastCharOfLastWord = $lastWord[strlen($lastWord)\
    \ - 1];\n  if (strtolower($lastChar) != strtolower($lastCharOfLastWord)) {\n \
    \   return true;\n  } else {\n    return false;\n  }\n}", "\treturn ctype_alpha(substr($txt,\
    \ -1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \");\necho \"<br>\";\necho \"<br>\";\n", "\t$str = substr($txt, -1);\n\treturn\
    \ ctype_alpha($str) && $str == ' ' ? false : true;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");", "  $array = explode(\" \", $txt);\n  $lastWord = end($array);\n\
    \  if ($lastWord !== \"\") {\n    $lastLetter = substr($lastWord, -1);\n    return\
    \ ctype_alpha($lastLetter);\n  } else {\n    return false;\n  }\n}\n", "\treturn\
    \ ctype_alpha(substr($txt, -1)) && (preg_match('/\\s/', substr($txt, -2, 1)) ||\
    \ $txt == substr($txt, -1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    );", "  $last = substr($txt, -1);\n  if (ctype_alpha($last) && strlen($txt) >\
    \ 0 && !ctype_alnum($last)){\n    return \"True\";\n  } else {\n    return \"\
    False\";\n  }\n}\n", "\tif (empty($txt)) {\n\t\treturn false;\n\t} else {\n\t\t\
    $last_char = substr($txt, -1);\n\t\tif (ctype_alpha($last_char) && strpos($txt,\
    \ $last_char) == strlen($txt) - 1) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\t\
    return false;\n\t\t}\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";", "\t// if(str_word_count($txt)==0) {\n\t// \treturn false;\n\t\
    // } else {\n\t// \t$txtArray = str_split($txt);\n\t// \tif(ord($txtArray[count($txtArray)-1])\
    \ >= 65 && ord($txtArray[count($txtArray)-1]) <= 90 || ord($txtArray[count($txtArray)-1])\
    \ >= 97 && ord($txtArray[count($txtArray)-1]) <= 122) {\n\t// \t\treturn true;\n\
    \t// \t} else {\n\t// \t\treturn false;\n\t// \t}\n\t// }\n\treturn ((str_word_count($txt)==0)\
    \ ? false : ((ord($txt[strlen($txt)-1]) >= 65 && ord($txt[strlen($txt)-1]) <=\
    \ 90 || ord($txt[strlen($txt)-1]) >= 97 && ord($txt[strlen($txt)-1]) <= 122) ?\
    \ true : false));\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"\
    TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple\
    \ pi e\") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple p ie\") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pie 2\") ? \"TRUE\" : \"FALSE\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pie?\") ? \"TRUE\" : \"FALSE\";", "\treturn ctype_alpha(substr($txt, -1));\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";", "\tif ($txt[strlen($txt)-1]\
    \ == \" \") {\n\t\treturn false;\n\t}\n\telseif ($txt[strlen($txt)-1] == \"\\\
    t\") {\n\t\treturn false;\n\t}\n\telseif ($txt[strlen($txt)-1] == \"\\n\") {\n\
    \t\treturn false;\n\t}\n\telseif ($txt[strlen($txt)-1] == \"\\r\") {\n\t\treturn\
    \ false;\n\t}\n\telseif ($txt[strlen($txt)-1] == \"\\0\") {\n\t\treturn false;\n\
    \t}\n\telseif ($txt[strlen($txt)-1] == \"\\x0B\") {\n\t\treturn false;\n\t}\n\t\
    else {\n\t\treturn true;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\n\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pie\\n\").\"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pie\\t\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pie\\r\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pie\\0\"\
    ).\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pie\\x0B\").\"\\n\";",
  "\treturn ctype_alpha(substr($txt, -1)) && ctype_space(substr($txt, -2, 1));\n}\n\
    echo check_if_last_char_is_a_letter(\"apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\
    \\n\";\necho check_if_last_char_is_a_letter(\"\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    a\").\"\\n\";\necho check_if_last_char_is_a_letter(\" \").\"\\n\";", "  $lastIndex\
    \ = strlen($txt) - 1;\n  $lastChar = $txt[$lastIndex];\n  if ($lastChar == \"\
    \ \") {\n    return false;\n  } else if (ctype_alpha($lastChar)) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";", "    if (substr($txt, -1)\
    \ === \" \") {\n        return false;\n    } elseif (substr($txt, -1) === \"?\"\
    ) {\n        return false;\n    } elseif (substr($txt, -1) === \"!\") {\n    \
    \    return false;\n    } elseif (substr($txt, -1) === \".\") {\n        return\
    \ false;\n    } elseif (substr($txt, -1) === \",\") {\n        return false;\n\
    \    } elseif (substr($txt, -1) === \":\") {\n        return false;\n    } elseif\
    \ (substr($txt, -1) === \";\") {\n        return false;\n    } elseif (substr($txt,\
    \ -1) === \"'\") {\n        return false;\n    } elseif (substr($txt, -1) ===\
    \ '\"') {\n        return false;\n    } elseif (substr($txt, -1) === \")\") {\n\
    \        return false;\n    } elseif (substr($txt, -1) === \"(\") {\n        return\
    \ false;\n    } elseif (substr($txt, -1) === \"0\") {\n        return false;\n\
    \    } elseif (substr($txt, -1) === \"1\") {\n        return false;\n    } elseif\
    \ (substr($txt, -1) === \"2\") {\n        return false;\n    } elseif (substr($txt,\
    \ -1) === \"3\") {\n        return false;\n    } elseif (substr($txt, -1) ===\
    \ \"4\") {\n        return false;\n    } elseif (substr($txt, -1) === \"5\") {\n\
    \        return false;\n    } elseif (substr($txt, -1) === \"6\") {\n        return\
    \ false;\n    } elseif (substr($txt, -1) === \"7\") {\n        return false;\n\
    \    } elseif (substr($txt, -1) === \"8\") {\n        return false;\n    } elseif\
    \ (substr($txt, -1) === \"9\") {\n        return false;\n    } else {\n      \
    \  return true;\n    }", "  $last_char = substr($txt, -1);\n  if (ctype_alpha($last_char)\
    \ && preg_match('/\\s/', $last_char)) {\n    return true;\n  }\n  return false;\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\");", "\tif (strlen($txt) >\
    \ 0 && str_split($txt)[count(str_split($txt)) - 1] !== \" \" && ctype_alpha(str_split($txt)[count(str_split($txt))\
    \ - 1])) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";", "\t$i = strlen($txt)\
    \ - 1;\n\twhile($i >= 0 && ctype_alpha($txt[$i])) {\n\t\t$i--;\n\t}\n\t$lastCharIsLetter\
    \ = $i != strlen($txt) - 1;\n\t$lastCharIsLastOfWord = $i == -1 || !ctype_alpha($txt[$i\
    \ + 1]);\n\treturn $lastCharIsLetter && $lastCharIsLastOfWord;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\" : \"False\"; // \u279E False\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\" : \"False\"; // \u279E True\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\"; // \u279E False\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\"; // \u279E False", "    $txt = trim($txt);\n    $last\
    \ = $txt[strlen($txt) - 1];\n    return !ctype_alpha($last);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");", "    $len = strlen($txt);\n    $last = $txt[$len - 1];\n    if\
    \ (ctype_alpha($last) && ($last != ' ')) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}", "  if(preg_match(\"/\\W$/\", $txt)) {\n   \
    \ return True;\n  } else {\n    return False;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";", "    $lastChar = substr($txt, -1);\n    if ($lastChar == ' ' ||\
    \ !ctype_alpha($lastChar)) {\n        return false;\n    }\n    return true;\n\
    }", "\t$textArray = str_split($txt);\n\t$lastIndex = count($textArray)-1;\n\t\
    $lastElement = $textArray[$lastIndex];\n\t$patern = '/[a-zA-Z]/';\n\tif(preg_match($patern,\
    \ $lastElement) != false && $lastElement != ' '){\n\t\treturn true;\n\t}else{\n\
    \t\treturn false;\n\t}\n}\n\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . \"<br/>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"<br/>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br/>\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"<br/>\";", "\tif (empty($txt)) {\n\t\treturn false;\n\t}\n\t$is_letter\
    \ = false;\n\t$txt = str_split($txt);\n\t$txt_len = count($txt);\n\tfor ($i =\
    \ 0; $i < $txt_len; $i++) {\n\t\tif (ctype_alpha($txt[$i])) {\n\t\t\t$is_letter\
    \ = true;\n\t\t} else {\n\t\t\t$is_letter = false;\n\t\t}\n\t}\n\treturn $is_letter;\n\
    }\necho \"True if the last character\\n of a given string is an alphabetical character\
    \ and is not\\n a part of a word, and False otherwise\";\necho \"\\n\";\necho\
    \ \"1: \" . check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho \"\
    2: \" . check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho \"3: \"\
    \ . check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho \"4: \" .\
    \ check_if_last_char_is_a_letter(\"\") . \"\\n\";\necho \"5: \" . check_if_last_char_is_a_letter(\"\
    |||\") . \"\\n\";\necho \"6: \" . check_if_last_char_is_a_letter(\"||| \") . \"\
    \\n\";\necho \"7: \" . check_if_last_char_is_a_letter(\"||| e\") . \"\\n\";\n\
    echo \"8: \" . check_if_last_char_is_a_letter(\"||| e \") . \"\\n\";\necho \"\
    9: \" . check_if_last_char_is_a_letter(\"||| eee \") . \"\\n\";\necho \"10: \"\
    \ . check_if_last_char_is_a_letter(\"\") . \"\\n\";\necho \"11: \" . check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";\necho \"12: \" . check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;\necho \"13", "  $lastChar = substr($txt, -1);\n  $charIsAlph = ctype_alpha($lastChar);\n\
    \  $charIsNotSpace = $lastChar != \" \";\n  $charIsNotPartOfWord = !preg_match(\"\
    /\\S\\b/\", $lastChar);\n  return $charIsAlph && $charIsNotSpace && $charIsNotPartOfWord;\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"true\" : \"false\";\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \") ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\" : \"false\";\necho \"\\n\";", "\t$trimmed = rtrim($txt);\n\tif(ctype_alpha(substr($trimmed,\
    \ -1)) and substr($trimmed, -1) == substr($txt, -1)) {\n\t\treturn true;\n\t}\
    \ else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\\n\" : \"false\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\\n\" : \"false\\n\";", "  $txtarr = explode(\" \", $txt);\n  $last\
    \ = end($txtarr);\n  $lastchar = str_split($last);\n  $lchar = end($lastchar);\n\
    \  if (ctype_alpha($lchar)) {\n    return true;\n  }\n  else {\n    return false;\n\
    \  }\n}", "    if (strlen($txt) === 0) {\n        return False;\n    } else {\n\
    \        return !ctype_alpha(substr($txt, -1));\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");", "    if (strlen($txt) == 0){\n        return false;\n    }\n \
    \   $last = $txt[strlen($txt) - 1];\n    return (ctype_alpha($last) && ! ctype_alpha($txt[strlen($txt)\
    \ - 2]));\n}\n\necho check_if_last_char_is_a_letter(\"apple pie\");\necho check_if_last_char_is_a_letter(\"\
    apple pi e\");\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho check_if_last_char_is_a_letter(\"\
    \");\necho check_if_last_char_is_a_letter(\"a\");\necho check_if_last_char_is_a_letter(\"\
    ab \");", "    $txt = trim($txt);\n    if (strlen($txt) < 1) return false;\n \
    \   $last_chr = strtolower(substr($txt, -1));\n    if (!ctype_alpha($last_chr))\
    \ return false;\n    if (ctype_alpha(substr($txt, -2, 1))) return false;\n   \
    \ return true;\n}", "    $str_arr = str_split($txt);\n    $len = count($str_arr);\n\
    \    $ch = $str_arr[$len - 1];\n    if (!ctype_alpha($ch)) {\n        return False;\n\
    \    }\n    for ($i = 0; $i < $len - 1; $i++) {\n        if ($str_arr[$i] == \"\
    \ \") {\n            if ($str_arr[$i + 1] == $ch) {\n                return False;\n\
    \            }\n        }\n    }\n    return True;\n}\n", "    $txt = trim($txt);\n\
    \    if($txt === \"\") {\n        return false;\n    }\n    $firstLetterIndex\
    \ = $txt[0];\n    $lastLetterIndex = $txt[-1];\n    if(ctype_alpha($lastLetterIndex)\
    \ && !ctype_alpha($firstLetterIndex)) {\n        return true;\n    }\n    else\
    \ {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\
    <br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"\") . \"<br>\";", "\t$len = strlen($txt);\n\
    \t$last_char = $txt[$len-1];\n\tif (preg_match(\"/[a-zA-Z]/\", $last_char) ==\
    \ 1) {\n\t\tif (ctype_alpha($last_char)) {\n\t\t\treturn True;\n\t\t} else {\n\
    \t\t\treturn False;\n\t\t}\n\t} else {\n\t\treturn False;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");", "\t$last = substr($txt, -1);\n\tif (is_numeric($last)) {\n\t\t\
    return false;\n\t} else {\n\t\treturn true;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";", "\t$txt = preg_replace('/\\\
    s+/', '', $txt);\n\t$last_char = $txt[strlen($txt) - 1];\n\tif (ctype_alpha($last_char))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\\n\" : \"False\\n\";", "    if(ctype_alpha(substr($txt, -1)) && strlen($txt)\
    \ > 1 && ctype_alpha(substr($txt, -2, 1)) == false && substr($txt, -1) != \" \"\
    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\");", "\t$lastChar\
    \ = substr($txt, -1);\n\treturn preg_match('/[a-zA-Z]/', $lastChar) && strpos($txt,\
    \ $lastChar) == strlen($txt) - 1;\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"<br>\";\necho check_if_last_char_is_a_letter(\"\");", "\treturn preg_match(\"\
    /[a-zA-Z]$/\", $txt);\n}", "    $last_char = substr($txt, -1);\n    $alphabets\
    \ = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n    if (in_array($last_char,\
    \ $alphabets)) {\n        return True;\n    } else {\n        return False;\n\
    \    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;", "  if (preg_match(\"/[a-z]/i\", $txt[strlen($txt)-1])) {\n    return True;\n\
    \  } else {\n    return False;\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \ \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a\") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pie \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    b \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    c \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? 'True' : 'False';\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a\") ? 'True' : 'False';\necho \"<br", "\t$ltr = $txt[strlen($txt)-1];\n\tif($ltr\
    \ >= 'a' && $ltr <= 'z' || $ltr >= 'A' && $ltr <= 'Z'){\n\t\t$ltr = true;\n\t\
    } else{\n\t\t$ltr = false;\n\t}\n\treturn $ltr;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");", "  $lastChar = substr($txt, -1);\n  return ctype_alpha($lastChar)\
    \ && !ctype_alnum($lastChar);\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");", "   $words = explode(\" \",$txt);\n   $count = count($words);\n  \
    \ for($i = 0; $i < $count; $i++){\n       $lastWord = $words[$i];\n   }\n   $lastWordLength\
    \ = strlen($lastWord);\n   $lastWordLastChar = $lastWord[$lastWordLength-1];\n\
    \   if(ctype_alpha($lastWordLastChar)){\n       return true;\n   }else{\n    \
    \   return false;\n   }\n}", "  $lastChar = substr($txt, -1);\n  if (ctype_alpha($lastChar)\
    \ == 1) {\n    $arr = explode(\" \", $txt);\n    $lastWord = array_pop($arr);\n\
    \    if (strpos($lastWord, $lastChar) === false) {\n      return true;\n    }\n\
    \  }\n  return false;\n}", "\t$lastChar = substr($txt, -1);\n\t$isChar = ctype_alpha($lastChar);\n\
    \t$noSpace = preg_match('/\\s/', $lastChar);\n\treturn $isChar && !$noSpace;\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"true\" : \"false\";\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ? \"true\"\
    \ : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e \") ? \"true\" : \"false\";\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\" : \"false\";", "    if(ctype_alpha(substr($txt, -1)) && !ctype_alpha(substr($txt,\
    \ -2))) {\n        return true;\n    } else {\n        return false;\n    }\n}",
  "  if (strlen($txt) == 0) {\n    return false;\n  }\n  if (ctype_alpha(substr($txt,\
    \ -1)) && ctype_alpha(substr($txt, -2, 1))) {\n    return false;\n  }\n  if (ctype_alpha(substr($txt,\
    \ -1))) {\n    return true;\n  }\n  return false;\n}", "  if (strlen($txt) ==\
    \ 0) {\n    return false;\n  } else {\n    return ctype_alpha(substr($txt, -1));\n\
    \  }\n}", "\t$arr = str_split($txt);\n\t$count = count($arr);\n\t$result = \"\"\
    ;\n\tif ($count == 0){\n\t\t$result = \"False\";\n\t} else {\n\t\tfor ($i = 0;\
    \ $i < $count; $i++){\n\t\t\tif ($arr[$i] == \" \"){\n\t\t\t\tif (ctype_alpha($arr[$i-1])){\n\
    \t\t\t\t\t$result = \"True\";\n\t\t\t\t} else {\n\t\t\t\t\t$result = \"False\"\
    ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif ($result == \"\"){\n\t\treturn \"False\"\
    ;\n\t} else {\n\t\treturn $result;\n\t}\n}\n\n$txt1 = \"\";\n$txt2 = \"apple pie\"\
    ;\n$txt3 = \"apple pi e\";\n$txt4 = \"apple pi e \";\necho \"1. \", check_if_last_char_is_a_letter($txt1),\
    \ \"<br>\";\necho \"2. \", check_if_last_char_is_a_letter($txt2), \"<br>\";\n\
    echo \"3. \", check_if_last_char_is_a_letter($txt3), \"<br>\";\necho \"4. \",\
    \ check_if_last_char_is_a_letter($txt4), \"<br>\";", "\tif(strlen($txt) == 0)\
    \ return false;\n\t$pos = strrpos($txt, \" \");\n\t$pos = $pos === false ? 0 :\
    \ $pos + 1;\n\t$last_word = substr($txt, $pos);\n\tif(ctype_alpha($last_word)){\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";", "\t//your code here\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");", "\t$lastCharacter\
    \ = substr($txt, -1);\n\t$result = true;\n\tif(ctype_alpha($lastCharacter)){\n\
    \t\t$result = false;\n\t}\n\tif(!ctype_alpha($lastCharacter)){\n\t\t$result =\
    \ true;\n\t}\n\tif($lastCharacter == \" \"){\n\t\t$result = false;\n\t}\n\tif($txt\
    \ == \"\"){\n\t\t$result = false;\n\t}\n\treturn $result;\n}", "\t$txt = trim($txt);\n\
    \tif ($txt == '') {\n\t\treturn false;\n\t}\n\treturn ctype_alpha(substr($txt,\
    \ -1)) && substr($txt, -2, 1) == ' ';\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";", "    if\
    \ (strlen($txt) == 0) {\n        return false;\n    } else {\n        $txt_last_char\
    \ = substr($txt, -1);\n        if (ctype_alpha($txt_last_char) && $txt_last_char\
    \ != \" \") {\n            return true;\n        } else {\n            return\
    \ false;\n        }\n    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"\\n\";", "\tif(preg_match(\"/[^\\w]\\z/\", $txt)) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\").\"\
    \\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\").\"\\n\";",
  "\t$last=substr($txt,-1);\n\tif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    .\") {\n\t\treturn false;\n\t}elseif ($last==\",\") {\n\t\treturn false;\n\t}elseif\
    \ ($last==\"!\") {\n\t\treturn false;\n\t}elseif ($last==\"?\") {\n\t\treturn\
    \ false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t\
    }elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\t\
    return false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t\
    }elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\t\
    return false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t\
    }elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\t\
    return false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t\
    }elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\t\
    return false;\n\t}elseif ($last==\" \") {\n\t\treturn false;\n\t}elseif ($last==\"\
    \ \") {\n\t\treturn false;\n\t}elseif ($last==\" \") {\n\t\treturn false;", "\t\
    return ctype_alpha(substr($txt, -1));\n}", "\t$str = $txt;\n\t$strArray = explode(\"\
    \ \", $str);\n\t$arrCount = count($strArray);\n\t$count = strlen($strArray[$arrCount-1]);\n\
    \t$count1 = strlen($strArray[$arrCount-2]);\n\t$count2 = strlen($strArray[$arrCount-3]);\n\
    \t$count3 = strlen($strArray[$arrCount-4]);\n\t$count4 = strlen($strArray[$arrCount-5]);\n\
    \t$count5 = strlen($strArray[$arrCount-6]);\n\t$count6 = strlen($strArray[$arrCount-7]);\n\
    \t$count7 = strlen($strArray[$arrCount-8]);\n\t$count8 = strlen($strArray[$arrCount-9]);\n\
    \t$count9 = strlen($strArray[$arrCount-10]);\n\t$count10 = strlen($strArray[$arrCount-11]);\n\
    \t$count11 = strlen($strArray[$arrCount-12]);\n\t$count12 = strlen($strArray[$arrCount-13]);\n\
    \t$count13 = strlen($strArray[$arrCount-14]);\n\t$count14 = strlen($strArray[$arrCount-15]);\n\
    \t$count15 = strlen($strArray[$arrCount-16]);\n\t$count16 = strlen($strArray[$arrCount-17]);\n\
    \t$count17 = strlen($strArray[$arrCount-18]);\n\t$count18 = strlen($strArray[$arrCount-19]);\n\
    \t$count19 = strlen($strArray[$arrCount-20]);\n\t$count20 = strlen($strArray[$arrCount-21]);\n\
    \t$count21 = strlen($strArray[$arrCount-22]);\n\t$count22 = strlen($strArray[$arrCount-23]);\n\
    \t$count23 = strlen($strArray[$arrCount-24]);\n\t$count24 = strlen($strArray[$arrCount-25]);\n\
    \t$count25 = strlen($strArray[$arrCount-26]);\n\t$count26 = strlen($strArray[$arr",
  "  $x = \"abcdefghijklmnopqrstuvwxyz\";\n  $last_index = count($txt)-1;\n  $last_char\
    \ = $txt[$last_index];\n  if (strpos($x, $last_char) === false){\n    return False;\n\
    \  }\n  else {\n    if (strpos($txt, \" \") === false){\n      return True;\n\
    \    }\n    else {\n      return False;\n    }\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\").\"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\
    <br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"\").\"<br>\";", "  $lastChar = substr($txt,\
    \ -1);\n  if(!ctype_alpha($lastChar)) {\n    return false;\n  }\n  $txt = rtrim($txt);\n\
    \  if(!empty($txt)) {\n    $txt = rtrim($txt);\n    $last = substr($txt, -1);\n\
    \    if($last === ' ') {\n      return false;\n    }\n  }\n  return true;\n}",
  "\tif(strlen($txt)==0){\n\t\treturn false;\n\t}\n\t\n\t$count = strlen($txt);\n\t\
    \n\tfor($i=$count-1;$i>=0;$i--){\n\t\tif($txt[$i]==\" \"){\n\t\t\treturn false;\n\
    \t\t}\n\t\tif($txt[$i]!=\" \"){\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");", "    $lastChar =\
    \ substr($txt, -1);\n    if ($lastChar === \" \") {\n        return false;\n \
    \   }\n    return true;\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") . \"<br>\";", "\t$lastChar = substr($txt, -1);\n\tif (ctype_alpha($lastChar)\
    \ && str_word_count($txt) == str_word_count($txt, 0, strlen($txt) - 1)) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}", "\t$txtLength = strlen($txt);\n\
    \tif($txtLength == 0) {\n\t\treturn \"false\";\n\t}\n\t$txtExplode = explode(\"\
    \ \", $txt);\n\t$txtExplodeLength = count($txtExplode);\n\t$lastChar = substr($txtExplode[$txtExplodeLength\
    \ - 1], -1);\n\tif(ord($lastChar) >= 97 && ord($lastChar) <= 122) {\n\t\treturn\
    \ \"true\";\n\t} else {\n\t\treturn \"false\";\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi\
    \ e\");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\n\
    echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\");", "  $last = substr($txt,\
    \ -1);\n  if ($last === ' ') {\n    return false;\n  } else {\n    return ctype_alpha($last);\n\
    \  }\n}", "    $x = \"\";\n    $len = strlen($txt);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        if ($txt[$i] != \" \") {\n            $x .= $txt[$i];\n   \
    \     }\n    }\n    if (strlen($x) > 0) {\n        if (ctype_alpha($x[strlen($x)\
    \ - 1])) {\n            return true;\n        } else {\n            return false;\n\
    \        }\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\")\
    \ . \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"\") . \"<br>\";", "  $last = substr($txt,\
    \ -1);\n  if (ctype_alpha($last) && !ctype_alpha(substr($txt, -2, 1))) {\n   \
    \ return \"True\";\n  } else {\n    return \"False\";\n  }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";", "  if (strlen($txt)>0)\
    \ {\n    $tmp = trim($txt);\n    if (strlen($tmp)>0) {\n      $lastChar = substr($tmp,\
    \ -1);\n      if ($lastChar === ' ') {\n        return false;\n      } else {\n\
    \        return true;\n      }\n    } else {\n      return false;\n    }\n  }\
    \ else {\n    return false;\n  }\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\");", "\treturn (bool) preg_match('/\\s[a-zA-Z]$/', $txt);\n}\n\necho check_if_last_char_is_a_letter(\"\
    apple pie\"); //false\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple\
    \ pi e\"); //true\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple\
    \ pi e \"); //false\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\
    \ //false\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple piE\");\
    \ //true\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi@\"); //false\n\
    echo \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi3\"); //false\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple \"); //false\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple\"); //false\necho \"\\n\";",
  "\treturn !preg_match('/\\w$/', $txt);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? 'true' : 'false';\necho '<br>';\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? 'true' : 'false';\necho '<br>';\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? 'true' : 'false';\necho '<br>';\necho check_if_last_char_is_a_letter(\"\
    \") ? 'true' : 'false';\necho '<br>';", "  return preg_match(\"/[a-z]\\b/i\",\
    \ $txt);\n}", "    $char = substr($txt, -1);\n    if (ctype_alpha($char) && $char\
    \ != ' ') {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\
    \\n\";\necho check_if_last_char_is_a_letter(\"\").\"\\n\";", "  if (empty($txt))\
    \ return false;\n  $arr = str_split($txt);\n  $lastChar = array_pop($arr);\n \
    \ return is_numeric($lastChar) ? false : true;\n}\n", "    $last_char = substr($txt,\
    \ -1);\n    if (ctype_alpha($last_char) && ctype_space(substr($txt, -2, 1))) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho check_if_last_char_is_a_letter(\"\
    apple pi e \");\necho check_if_last_char_is_a_letter(\"\");", "\treturn (ctype_alpha(substr($txt,\
    \ -1)) and (strpos($txt, ' ') !== strlen($txt) - 1));\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    Aa\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"aA\") . \"\\n\";", "\t\
    $str = substr($txt, strlen($txt) - 1);\n\tif (ctype_alpha($str) && !ctype_alpha(substr($txt,\
    \ strlen($txt) - 2, 1))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";", "  $last_char\
    \ = substr($txt, -1);\n  if($last_char == '') return false;\n  return preg_match('/[a-zA-Z]/',\
    \ $last_char) && !preg_match('/\\w/', $last_char);\n}", "\treturn ctype_alpha(substr($txt,\
    \ -1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \");", "    return ctype_alpha(substr($txt, -1));\n}", "\t$last=substr($txt,-1);\n\
    \treturn ctype_alpha($last);\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ).\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pie\").\"\\n\";", "\t\
    return (ctype_alpha(substr($txt, -1)) && !ctype_alpha(substr($txt, -2, 1)));\n\
    }\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \"\
    ) . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\";", "  return\
    \ preg_match(\"/\\b[A-Za-z]\\b$/\", $txt);\n}", "    $last_index = strlen($txt)-1;\n\
    \    if($last_index < 0) return false;\n    if($txt[$last_index] == \" \") return\
    \ false;\n    for($i = $last_index-1; $i >= 0; $i--){\n        if($txt[$i] ==\
    \ \" \") return true;\n    }\n    return false;\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");", "\tif(empty($txt)) {\n\t\treturn false;\n\t} elseif(!empty($txt))\
    \ {\n\t\tif(ctype_alpha(str_split($txt)[strlen($txt) - 1])) {\n\t\t\treturn true;\n\
    \t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") .\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \") . \"\\n\";\n\
    echo check_if_last_char_is_a_letter(\"\") . \"\\n\";", "\treturn preg_match(\"\
    /[a-z]/i\", $txt[strlen($txt) - 1]) && !preg_match(\"/[a-z]/i\", $txt[strlen($txt)\
    \ - 2]);\n}\necho check_if_last_char_is_a_letter(\"apple pie\") ? \"True\" : \"\
    False\"; echo \"<br>\";\necho check_if_last_char_is_a_letter(\"apple pi e\") ?\
    \ \"True\" : \"False\"; echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\" : \"False\"; echo \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\" : \"False\"; echo \"<br>\";", "  $arr = explode(\" \", $txt);\n\
    \  $lastEl = end($arr);\n  if(ctype_alpha($lastEl[strlen($lastEl)-1])) {\n   \
    \ return true;\n  } else {\n    return false;\n  }\n}", "\treturn preg_match(\"\
    /[a-zA-Z]\\s$/\", $txt);\n}\necho check_if_last_char_is_a_letter(\"apple pie\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"true\" : \"false\";\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"true\" : \"false\";\necho \"\\n\";", "  $last = substr($txt, -1);\n  if\
    \ (is_numeric($last)) {\n    return false;\n  } else {\n    if (preg_match(\"\
    /[a-zA-Z]/\", $last)) {\n      return true;\n    } else {\n      return false;\n\
    \    }\n  }\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"<br>\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"a\");\necho \"<br>\"\
    ;\necho check_if_last_char_is_a_letter(\"a \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    a  \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"3\");\necho \"\
    <br>\";\necho check_if_last_char_is_a_letter(\"3 \");\necho \"<br>\";\necho check_if_last_char_is_a_letter(\"\
    3  \");", "    $len = strlen($txt);\n    if ($len == 0) {\n        return false;\n\
    \    }\n    if (ctype_alpha($txt[$len - 1])) {\n        return true;\n    }\n\
    \    return false;\n}\necho check_if_last_char_is_a_letter(\"apple pie\") . \"\
    \\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") . \"\\n\";\necho check_if_last_char_is_a_letter(\"\") . \"\\n\"\
    ;", "\t$last_char = substr($txt, -1);\n\treturn ctype_alpha($last_char) && !ctype_alpha(substr($txt,\
    \ -2, 1));\n}\necho check_if_last_char_is_a_letter(\"apple pie\");\necho \"\\\
    n\";\necho check_if_last_char_is_a_letter(\"apple pi e\");\necho \"\\n\";\necho\
    \ check_if_last_char_is_a_letter(\"apple pi e \");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \");\necho \"\\n\";", "\t// get last character\n\t$last_char = substr($txt, -1);\n\
    \t// find out if last character is letter\n\t$is_letter = ctype_alpha($last_char);\n\
    \t// find out if last character is a letter but not part of a word\n\t$is_part_of_word\
    \ = preg_match('/[^A-Za-z]([A-Za-z])/', $txt);\n\t// evaluate if last character\
    \ is letter and not part of a word\n\tif ($is_letter == true && $is_part_of_word\
    \ == false) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\");\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\"\
    );\necho \"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e \");\necho\
    \ \"\\n\";\necho check_if_last_char_is_a_letter(\"\");\necho \"\\n\";", "    if\
    \ (empty($txt)) return false;\n    $arr = explode(\" \", $txt);\n    $last = array_pop($arr);\n\
    \    return ctype_alpha($last);\n}\necho check_if_last_char_is_a_letter(\"apple\
    \ pie\").\"\\n\";\necho check_if_last_char_is_a_letter(\"apple pi e\").\"\\n\"\
    ;\necho check_if_last_char_is_a_letter(\"apple pi e \").\"\\n\";\necho check_if_last_char_is_a_letter(\"\
    \").\"\\n\";", "\treturn preg_match(\"/\\s[a-zA-Z]$/\", $txt);\n}\necho check_if_last_char_is_a_letter(\"\
    apple pie\") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e\") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    apple pi e \") ? \"True\\n\" : \"False\\n\";\necho check_if_last_char_is_a_letter(\"\
    \") ? \"True\\n\" : \"False\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

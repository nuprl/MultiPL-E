name: HumanEval_147_get_max_triples
language: php
prompt: "<?php\n// You are given a positive integer n. You have to create an integer\
  \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] =\
  \ i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
  \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Input:\
  \ n = 5\n// Output: 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid\
  \ triple is (1, 7, 13).\nfunction get_max_triples($n) {\n"
tests: "function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[]\
    \ = $i * $i - $i + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $triples++;\n                }\n          \
    \  }\n        }\n    }\n    return $triples;\n}\n\necho get_max_triples(5);",
  "    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i -\
    \ $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n\
    \        for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) $result++;\n            }\n        }\n    }\n    return $result;\n\
    }\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i\
    \ - $i + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\necho get_max_triples(5) . PHP_EOL;\necho get_max_triples(10)\
    \ . PHP_EOL;\necho get_max_triples(15) . PHP_EOL;\necho get_max_triples(20) .\
    \ PHP_EOL;\necho get_max_triples(25) . PHP_EOL;\necho get_max_triples(30) . PHP_EOL;\n\
    echo get_max_triples(35) . PHP_EOL;\necho get_max_triples(40) . PHP_EOL;\necho\
    \ get_max_triples(45) . PHP_EOL;\necho get_max_triples(50) . PHP_EOL;\necho get_max_triples(55)\
    \ . PHP_EOL;\necho get_max_triples(60) . PHP_EOL;\necho get_max_triples(65) .\
    \ PHP_EOL;\necho get_max_triples(70) . PHP_EOL;\necho get_max_triples(75) . PHP_EOL;\n\
    echo get_max_triples(80) . PHP_EOL;\necho get_max_triples(85) . PHP_EOL;\necho\
    \ get_max_triples(90) . PHP_EOL;\necho get_max_triples(95) . PHP_EOL;\necho get_max_triples(100)\
    \ . PHP_EOL", "    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n       \
    \ $a[$i] = $i * $i - $i + 1;\n    }\n    $triples = 0;\n    for ($i = 1; $i <=\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n         \
    \   for ($k = $j + 1; $k <= $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $triples++;\n                }\n\
    \            }\n        }\n    }\n    return $triples;\n}\necho get_max_triples(5);",
  "  // Write your code here\n  $a = range(1, $n);\n  $a = array_map(function($n)\
    \ {\n    return $n * $n - $n + 1;\n  }, $a);\n  $max = 1;\n  for ($i = 0; $i <\
    \ $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k =\
    \ $j + 1; $k < $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 === 0)\
    \ {\n          $max++;\n        }\n      }\n    }\n  }\n  return $max;\n}\n\n\
    $num = 5;\necho get_max_triples($num);", "    $cnt = 0;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j\
    \ - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $cnt++;\n    \
    \            }\n            }\n        }\n    }\n    return $cnt;\n}\n$n = 5;\n\
    echo get_max_triples($n);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $max = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $max++;\n                }\n      \
    \      }\n        }\n    }\n    return $max;\n}\n$n = 5;\necho get_max_triples($n)\
    \ . PHP_EOL;", "    // create array\n    $array = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $array[] = $i * $i - $i + 1;\n    }\n    // calculate\n\
    \    $count = 0;\n    for ($i = 0; $i < count($array); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($array); $j++) {\n            for ($k = $j + 1; $k < count($array);\
    \ $k++) {\n                if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0)\
    \ {\n                    $count++;\n                }\n            }\n       \
    \ }\n    }\n    return $count;\n}", "    $num = 0;\n    $arr = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    for ($i\
    \ = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($arr[$i]\
    \ + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $num++;\n          \
    \      }\n            }\n        }\n    }\n    return $num;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\n$result = get_max_triples(5);\necho \"Max triples count: \" .\
    \ $result . \"\\n\";", "    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n \
    \       $arr[] = $i * $i - $i + 1;\n    }\n    print_r($arr);\n    $counter =\
    \ 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($arr); $j++) {\n            for ($k = $j + 1; $k < count($arr); $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $counter++;\n                }\n            }\n        }\n    }\n\
    \    return $counter;\n}\nprint_r(get_max_triples(5));\n", "    $a = [];\n   \
    \ for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n  \
    \  $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n     \
    \           if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $res++;\n\
    \                }\n            }\n        }\n    }\n    return $res;\n}\n$n =\
    \ 5;\necho get_max_triples($n) . PHP_EOL;", "    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $max = 0;\n   \
    \ for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $max++;\n              \
    \  }\n            }\n        }\n    }\n    return $max;\n}\n$result = get_max_triples(5);\n\
    echo $result . \"\\n\";", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    $count = count($a);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            for ($k = $j + 1; $k < $count; $k++) {\n              \
    \  if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $result++;\n\
    \                }\n            }\n        }\n    }\n    return $result;\n}\n\
    echo get_max_triples(10) . PHP_EOL;", "    $a = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $res = 0;\n    for ($i\
    \ = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] +\
    \ $a[$j] + $a[$k]) % 3 == 0) {\n                    $res++;\n                }\n\
    \            }\n        }\n    }\n    return $res;\n}\n", "\t$a = [];\n\tfor ($i\
    \ = 1; $i <= $n; $i++) {\n\t\t$a[] = $i * $i - $i + 1;\n\t}\n\t$count = 0;\n\t\
    for ($i = 0; $i < $n - 2; $i++) {\n\t\tfor ($j = $i + 1; $j < $n - 1; $j++) {\n\
    \t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\necho get_max_triples(5);\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    $count = count($a);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            for ($k = $j + 1; $k < $count; $k++) {\n              \
    \  if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $result++;\n\
    \                }\n            }\n        }\n    }\n    return $result;\n}\n\
    echo get_max_triples(5);", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example: print \"Hello world!\"\
    ;\n    $triples = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3\
    \ == 0) {\n                    $triples++;\n                }\n            }\n\
    \        }\n    }\n    return $triples;\n}", "    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n \
    \   for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n   \
    \             }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ \"get_max_triples(5) : \" . get_max_triples(5) . \"\\n\";\necho \"get_max_triples(7)\
    \ : \" . get_max_triples(7) . \"\\n\";\necho \"get_max_triples(11) : \" . get_max_triples(11)\
    \ . \"\\n\";\necho \"get_max_triples(100) : \" . get_max_triples(100) . \"\\n\"\
    ;", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i\
    \ - $i + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\nprint_r(get_max_triples(5));", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max_triples++;\n                }\n            }\n        }\n    }\n\
    \    return $max_triples;\n}\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(10)\
    \ . \"\\n\";\necho get_max_triples(100) . \"\\n\";", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $max_triples\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return $max_triples;\n\
    }", "  $nums = array();\n  for ($i = 1; $i <= $n; $i++) {\n    $nums[] = $i *\
    \ $i - $i + 1;\n  }\n  $cnt = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n\
    \        if (($nums[$i] + $nums[$j] + $nums[$k]) % 3 == 0) {\n          $cnt++;\n\
    \        }\n      }\n    }\n  }\n  return $cnt;\n}\n\necho get_max_triples(5)\
    \ . PHP_EOL;", "    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[]\
    \ = $i * $i - $i + 1;\n    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $res++;\n                }\n            }\n\
    \        }\n    }\n    return $res;\n}\n\necho get_max_triples(5);", "  $array\
    \ = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $array[] = $i * $i - $i + 1;\n\
    \  }\n  $count = 0;\n  for ($i = 0; $i < count($array); $i++) {\n    for ($j =\
    \ $i + 1; $j < count($array); $j++) {\n      for ($k = $j + 1; $k < count($array);\
    \ $k++) {\n        if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n  \
    \        $count++;\n        }\n      }\n    }\n  }\n  return $count;\n}\n\nprint_r(get_max_triples(5));",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    $n = count($a);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if (($a[$i] + $a[$j])\
    \ % 3 == 0) {\n                for ($k = $j + 1; $k < $n; $k++) {\n          \
    \          if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                      \
    \  $count++;\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return $count;\n}", "\t$x = 1;\n\t$a = [];\n\tfor ($i = 1; $i\
    \ <= $n; $i++) {\n\t\t$a[] = $x;\n\t\t$x = $x + $i * 2 + 1;\n\t}\n\t$n = 0;\n\t\
    for ($i = 0; $i < count($a); $i++) {\n\t\tfor ($j = $i + 1; $j < count($a); $j++)\
    \ {\n\t\t\tfor ($k = $j + 1; $k < count($a); $k++) {\n\t\t\t\tif (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$n++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $n;\n}\n", "    $count = 0;\n    $a = createArray($n);\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0)\n                    $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\n", "    if ($n < 3) return 0;\n    $x = [1, 3, 7, 13, 21];\n\
    \    $y = [3, 9, 21, 39, 63];\n    $z = [7, 21, 51, 99, 161];\n    $t = [3, 9,\
    \ 21, 39, 63];\n    $xIndex = $yIndex = $zIndex = $tIndex = 0;\n    $result =\
    \ 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i == 0) {\n            $x[$i]\
    \ = 1;\n            $y[$i] = 3;\n            $z[$i] = 7;\n            $t[$i] =\
    \ 3;\n        } else if ($i == 1) {\n            $x[$i] = 3;\n            $y[$i]\
    \ = 9;\n            $z[$i] = 21;\n            $t[$i] = 9;\n        } else if ($i\
    \ == 2) {\n            $x[$i] = 7;\n            $y[$i] = 21;\n            $z[$i]\
    \ = 51;\n            $t[$i] = 21;\n        } else {\n            $x[$i] = $x[$i\
    \ - 1] + 2 * $i + 1;\n            $y[$i] = $y[$i - 1] + 2 * $i + 1;\n        \
    \    $z[$i] = $z[$i - 1] + 2 * $i + 1;\n            $t[$i] = $t[$i - 1] + 2 *\
    \ $i + 1;\n        }\n    }\n    for ($i = 3; $i < $n; $i++) {\n        $zIndex\
    \ = $i;\n        for ($j = 2; $j < $i; $j++) {\n            $yIndex = $j;\n  \
    \          for ($k = 1; $k < $j; $k++) {\n                $xIndex = $k;\n    \
    \            if ($t[$i] - $t[$k] < 3) {\n                    break;\n        \
    \        }\n                if (($t[$i]", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = pow($i, 2) - $i + 1;\n   \
    \ }\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $cnt++;\n                }\n            }\n        }\n    }\n    return $cnt;\n\
    }\necho get_max_triples(5);", "    $result = 0;\n    $a = [];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n        \
    \    for ($k = $j + 1; $k <= $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $result++;\n                }\n \
    \           }\n        }\n    }\n    return $result;\n}\necho get_max_triples(5);\n",
  "    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i - 1] = $i\
    \ * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < count($a); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k =\
    \ $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $result++;\n                }\n           \
    \ }\n        }\n    }\n    return $result;\n}\n\necho get_max_triples(5);", " \
    \   $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i *\
    \ $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($array); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k\
    \ = $j + 1; $k < count($array); $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i -\
    \ $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n\
    \        for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n\n$n = 8;\necho get_max_triples($n);",
  "    $a = [1];\n    for ($i = 1; $i < $n; $i++) {\n        $val = $i * $i - $i +\
    \ 1;\n        $a[] = $val;\n    }\n    $res = 0;\n    $count = count($a);\n  \
    \  for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++)\
    \ {\n            for ($k = $j + 1; $k < $count; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $res++;\n              \
    \  }\n            }\n        }\n    }\n    return $res;\n}\n\necho get_max_triples(5)\
    \ . PHP_EOL;", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(3);", "    $result\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j =\
    \ $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\necho get_max_triples(5) . PHP_EOL;", "    $arr = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $result\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for ($j = $i + 1;\
    \ $j < count($arr); $j++) {\n            for ($k = $j + 1; $k < count($arr); $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n", "    $a = array();\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $cnt = 0;\n    for ($i = 1;\
    \ $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n   \
    \         for ($k = $j + 1; $k <= $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    echo \"($a[$i], $a[$j], $a[$k])<br>\"\
    ;\n                    $cnt++;\n                }\n            }\n        }\n\
    \    }\n    return $cnt;\n}", "    $max_triples = 0;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if ((($i * $i - $i + 1) + ($j * $j -\
    \ $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n                    $max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return $max_triples;\n\
    }\n$input = 5;\nprint_r(get_max_triples($input));", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $counter\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $counter++;\n\
    \                }\n            }\n        }\n    }\n    return $counter;\n}\n\
    echo get_max_triples(5) . \"\\n\";", "    $a = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $p = 0;\n    for ($i =\
    \ 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n  \
    \          for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $p++;\n                }\n      \
    \      }\n        }\n    }\n    return $p;\n}\necho get_max_triples(5);", "\n\
    }\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0;\
    \ $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n     \
    \       for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n       \
    \ $array[] = ($i * $i) - $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $result++;\n                }\n\
    \            }\n        }\n    }\n    return $result;\n}\necho get_max_triples(5);",
  "    $max_triples = 0;\n    $a = range(1, $n);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $a[$i] = $a[$i] * $a[$i] - $a[$i] + 1;\n    }\n    echo \"<pre>\"\
    ;\n    print_r($a);\n    echo \"</pre>\";\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $max_triples++;\n                }\n            }\n     \
    \   }\n    }\n    return $max_triples;\n}\n$n = 5;\necho get_max_triples($n);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    $total = count($a);\n    for ($i = 0; $i < $total;\
    \ $i++) {\n        for ($j = $i + 1; $j < $total; $j++) {\n            for ($k\
    \ = $j + 1; $k < $total; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}", "    $arr = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $cnt = 0;\n \
    \   for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $cnt++;\n\
    \                }\n            }\n        }\n    }\n    return $cnt;\n}\n\n$n\
    \ = 5;\necho get_max_triples($n);", "    $a = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i\
    \ = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] +\
    \ $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n              \
    \  }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5)\
    \ . \"\\n\";", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    print_r($a);\n    $count = 0;\n    for ($i =\
    \ 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n  \
    \          for ($k = $j + 1; $k < $n; $k++) {\n                $sum = $a[$i] +\
    \ $a[$j] + $a[$k];\n                if ($sum % 3 == 0) {\n                   \
    \ $count++;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\necho get_max_triples(5) . PHP_EOL;\necho get_max_triples(1000) . PHP_EOL;",
  "    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i\
    \ - $i + 1;\n    }\n    $max_triples = 0;\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k\
    \ <= $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $max_triples++;\n                }\n            }\n     \
    \   }\n    }\n    return $max_triples;\n}\necho get_max_triples(5);", "  $res\
    \ = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i + 1) * ($i\
    \ + 1) - ($i + 1) + 1 + ($j + 1) * ($j + 1) - ($j + 1) + 1 + ($k + 1) * ($k +\
    \ 1) - ($k + 1) + 1 === 0) {\n          $res++;\n        }\n      }\n    }\n \
    \ }\n  return $res;\n}\n$n = 5;\nprint_r(get_max_triples($n));", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5) . \"\\n\";", "    $result = 0;\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n     \
    \           if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n         \
    \           $result++;\n                }\n            }\n        }\n    }\n \
    \   return $result;\n}", "    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $array[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0;\
    \ $i < count($array); $i++) {\n        for ($j = $i + 1; $j < count($array); $j++)\
    \ {\n            for ($k = $j + 1; $k < count($array); $k++) {\n             \
    \   if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(7);", "\t$a = range(1, $n);\n\tfor ($i = 0;\
    \ $i < $n; $i++) {\n\t\t$a[$i] = $a[$i] * $a[$i] - $a[$i] + 1;\n\t}\n\t$total\
    \ = 0;\n\tfor ($i = 0; $i < $n - 2; $i++) {\n\t\tfor ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n\t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$total++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $total;\n}\n\necho get_max_triples(5);", "    $a = [];\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $res = 0;\n\
    \    $len = count($a);\n    for ($i = 0; $i < $len - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $len - 1; $j++) {\n            if (($a[$i] + $a[$j]) % 3 == 0)\
    \ {\n                for ($k = $j + 1; $k < $len; $k++) {\n                  \
    \  if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                        $res++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $res;\n}\n\necho get_max_triples(5);", "    $result = 0;\n    for ($i\
    \ = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        for ($k = $j + 1; $k <= $n; $k++) {\n                if (($i * $i - $i\
    \ + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                   \
    \ $result++;\n                }\n            }\n        }\n    }\n    return $result;\n\
    }\n\n$n = 5;\necho get_max_triples($n);", "    $result = 0;\n    for ($i = 1;\
    \ $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if ((($i*$i - $i + 1) + ($j*$j\
    \ - $j + 1) + ($k*$k - $k + 1)) % 3 == 0) {\n                    $result++;\n\
    \                }\n            }\n        }\n    }\n    return $result;\n}",
  "    $arr = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $arr[$i] =\
    \ $arr[$i] * $arr[$i] - $arr[$i] + 1;\n    }\n    $count = 0;\n    for ($i = 0;\
    \ $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n     \
    \       for ($k = $j + 1; $k < $n; $k++) {\n                if ($arr[$i] + $arr[$j]\
    \ + $arr[$k] % 3 == 0) {\n                    $count++;\n                }\n \
    \           }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\necho get_max_triples(4);", "    // build the\
    \ array of consecutive squares and store the differences in a \n    // separate\
    \ array\n    $a = [];\n    $sqs = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n        $sqs[] = $i * $i;\n    }\n    // for\
    \ each triple, check if their sum is divisible by 3, and if so, add\n    // all\
    \ the possible combinations of the triple to the result array\n    $result = [];\n\
    \    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $result[] = [$a[$i],\
    \ $a[$j], $a[$k]];\n                }\n            }\n        }\n    }\n    //\
    \ loop through the result array and find the max triple, in terms of\n    // the\
    \ sum of their squares\n    $sq_result = [];\n    for ($i = 0; $i < count($result);\
    \ $i++) {\n        $sq_result[] = $sqs[$result[$i][0] - 1] + $sqs[$result[$i][1]\
    \ - 1] + $sqs[$result[$i][2] - 1];\n    }\n    return max($sq_result);\n}\n$n\
    \ = 5;\nprint_r(get_max_triples($n));", "    $arr = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n  \
    \  for ($i = 0; $i < count($arr); $i++) {\n        for ($j = $i + 1; $j < count($arr);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($arr); $k++) {\n         \
    \       if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n                   \
    \ $count++;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\necho get_max_triples(5);", "  $result = 0;\n  $i = 1;\n  $j = 2;\n  $k = 3;\n\
    \  $a = array_fill(1, $n, 0);\n  while ($i < $n) {\n    while ($j < $n) {\n  \
    \    while ($k < $n) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n \
    \         $result++;\n        }\n        $k++;\n      }\n      $j++;\n      $k\
    \ = $j + 1;\n    }\n    $i++;\n    $j = $i + 1;\n    $k = $j + 1;\n  }\n  return\
    \ $result;\n}\n$handle = fopen (\"php://stdin\",\"r\");\nfscanf($handle,\"%d\"\
    ,$n);\n$result = get_max_triples($n);\necho $result . \"\\n\";\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $max++;\n                }\n            }\n        }\n    }\n    return $max;\n\
    }", "    if ($n <= 2) {\n        return 0;\n    }\n    $count = 0;\n    $max =\
    \ $n - 1;\n    $last = $max - 1;\n    $num = 0;\n    $nums = array();\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $num = $i * $i - $i + 1;\n        $nums[]\
    \ = $num;\n    }\n    for ($i = 0; $i < $last; $i++) {\n        for ($j = $i +\
    \ 1; $j < $max; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (($nums[$i] + $nums[$j] + $nums[$k]) % 3 == 0) {\n           \
    \         $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5) . \"\\n\";", "    $count = 0;\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($i * $i - $i + 1\
    \ + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\nprint_r(get_max_triples(5));",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n       \
    \ for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n;\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n\necho \"result: \" . get_max_triples(5) . \"\\n\";\n\
    echo \"result: \" . get_max_triples(7) . \"\\n\";\necho \"result: \" . get_max_triples(8)\
    \ . \"\\n\";\necho \"result: \" . get_max_triples(10) . \"\\n\";\necho \"result:\
    \ \" . get_max_triples(100) . \"\\n\";", "    $a = array();\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $res = 0;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++)\
    \ {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $res++;\n              \
    \  }\n            }\n        }\n    }\n    return $res;\n}\n\n$n = 5;\n$a = array();\n\
    for ($i = 1; $i <= $n; $i++) {\n    $a[$i] = $i * $i - $i + 1;\n}\necho get_max_triples($n)\
    \ . \"<br/>\";\nprint_r($a);", "    if($n < 3) return 0;\n    $dp = array_fill(0,$n,1);\n\
    \    $dp[0] = 1;\n    $dp[1] = 3;\n    $dp[2] = 7;\n    $ans = 0;\n    for($i\
    \ = 3; $i < $n; $i++) {\n        $dp[$i] = $dp[$i-1] + $dp[$i-2] + $dp[$i-3];\n\
    \        if($dp[$i] % 3 == 0) $ans++;\n    }\n    return $ans;\n}\n$n = 5;\nprint_r(get_max_triples($n));\n",
  "    $triples = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n   \
    \             if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3\
    \ == 0) {\n                    $triples++;\n                }\n            }\n\
    \        }\n    }\n    return $triples;\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $sum = 0;\n    for ($i = 0; $i <\
    \ count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n    \
    \        for ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $sum++;\n              \
    \  }\n            }\n        }\n    }\n    print $sum;\n}\nget_max_triples(5);",
  "    $max_triples = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3\
    \ == 0) {\n                    $max_triples++;\n                }\n          \
    \  }\n        }\n    }\n    return $max_triples;\n}\n$n = intval(fgets(STDIN));\n\
    echo get_max_triples($n);\n", "    $max_triples = 0;\n    for ($i = 1; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($i + $j + $k) % 3 == 0) {\n    \
    \                $max_triples++;\n                }\n            }\n        }\n\
    \    }\n    return $max_triples;\n}", "\t$total_triples = 0;\n\t$a = array();\n\
    \tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i] = $i * $i - $i + 1;\n\t}\n\tfor ($i\
    \ = 1; $i <= $n - 2; $i++) {\n\t\tfor ($j = $i + 1; $j <= $n - 1; $j++) {\n\t\t\
    \tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n\t\t\t\t\t$total_triples++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $total_triples;\n}\n\n$n = 5;\n$result = get_max_triples($n);\necho $result;\n",
  "    $max_triples = 0;\n    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k\
    \ <= $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n \
    \                   $max_triples++;\n                }\n            }\n      \
    \  }\n    }\n    return $max_triples;\n}\n\necho get_max_triples(5);", "    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n$n = 5;\necho get_max_triples($n);", "    $triples = 0;\n    for\
    \ ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            for ($k = $j + 1; $k <= $n; $k++) {\n                if (($i * $i\
    \ - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n              \
    \      $triples++;\n                }\n            }\n        }\n    }\n    return\
    \ $triples;\n}\n", "  $arr = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $arr[]\
    \ = $i * $i - $i + 1;\n  }\n  $triples = 0;\n  for ($i = 0; $i < $n - 2; $i++)\
    \ {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k <\
    \ $n; $k++) {\n        if ($arr[$i] + $arr[$j] + $arr[$k] % 3 == 0) {\n      \
    \    $triples++;\n        }\n      }\n    }\n  }\n  return $triples;\n}\n\nprint_r(get_max_triples(5));",
  "    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i\
    \ - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n \
    \       for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($array[$i] + $array[$j] + $array[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n$n = 5;\necho get_max_triples($n);",
  "    $arr = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i *\
    \ $i - $i + 1;\n    }\n    $max_triples = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($arr); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j]\
    \ + $arr[$k]) % 3 == 0) {\n                    $max_triples++;\n             \
    \   }\n            }\n        }\n    }\n    return $max_triples;\n}", "    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5) . PHP_EOL;\necho get_max_triples(10)\
    \ . PHP_EOL;", "\t$a = array();\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i]\
    \ = $i * $i - $i + 1;\n\t}\n\t$count = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\
    \tfor ($j = $i + 1; $j <= $n; $j++) {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++)\
    \ {\n\t\t\t\tif (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$count++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\necho get_max_triples(5);",
  "    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i -\
    \ $i + 1;\n    }\n    $sum = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n\
    \        for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $sum++;\n                }\n            }\n\
    \        }\n    }\n    return $sum;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max_triples++;\n                }\n            }\n        }\n    }\n\
    \    return $max_triples;\n}\n$tests = [\n    [1, 0],\n    [2, 0],\n    [3, 0],\n\
    \    [4, 0],\n    [5, 1],\n    [6, 2],\n    [7, 2],\n    [8, 4],\n    [9, 4],\n\
    \    [10, 6],\n    [11, 6],\n    [12, 10],\n    [13, 10],\n    [14, 12],\n   \
    \ [15, 12],\n    [16, 17],\n    [17, 17],\n    [18, 20],\n    [19, 20],\n    [20,\
    \ 26],\n    [21, 26],\n    [22, 29],\n    [23, 29],\n    [24, 37],\n    [25, 37],\n\
    \    [26, 40],\n    [27, 40],\n    [28, 48],\n    [29, 48],\n    [30, 53],\n \
    \   [31, 53],\n    [32, 61],\n    [33, 61],\n    [34, 64],\n    [35, 64],\n  \
    \  [36, 74],\n    [37, 74],\n    [38, 77],\n    [39, 77],\n    [40, 89],\n   \
    \ [41, 89],\n    [42, 92],\n    [43, 92],\n    [44, 104],\n    [45, 104],\n  \
    \  [46, 109],\n    [47, 109", "  $output = 0;\n  $numbers = [];\n  for ($i = 1;\
    \ $i <= $n; $i++) {\n    $numbers[] = $i * $i - $i + 1;\n  }\n  for ($i = 0; $i\
    \ < $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k\
    \ = $j + 1; $k < $n; $k++) {\n        if (($numbers[$i] + $numbers[$j] + $numbers[$k])\
    \ % 3 === 0) {\n          $output++;\n        }\n      }\n    }\n  }\n  return\
    \ $output;\n}\necho(get_max_triples(5));", "    $array = [];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $array[] = pow($i, 2) - $i + 1;\n    }\n    $max_triples\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if ($array[$i] + $array[$j] + $array[$k] % 3 == 0) {\n                \
    \    $max_triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $max_triples;\n}\n$n = 5;\necho get_max_triples($n);", "    $result =\
    \ 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if ($arr[$i] + $arr[$j] + $arr[$k] % 3\
    \ == 0) {\n                    $result++;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\n$n = 5;\necho get_max_triples($n);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    // echo implode(', ', $a) . PHP_EOL;\n    $max_triples = 0;\n\
    \    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return $max_triples;\n\
    }", "    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3\
    \ == 0) {\n                    $count++;\n                }\n            }\n \
    \       }\n    }\n    return $count;\n}\n", "    // trivial cases\n    if ($n\
    \ < 3) {\n        return 0;\n    }\n    // create array of values\n    $arr =\
    \ array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i\
    \ + 1;\n    }\n    // get value to check\n    $to_check = 0;\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        $to_check += $arr[$i];\n    }\n    $to_check /= 3;\n\
    \    // check for triples\n    $counter = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if ($arr[$i] + $arr[$j] + $arr[$k] ==\
    \ $to_check) {\n                    $counter++;\n                }\n         \
    \   }\n        }\n    }\n    return $counter;\n}\necho \"get_max_triples(5) =\
    \ \" . get_max_triples(5) . \"\\n\";\necho \"get_max_triples(10) = \" . get_max_triples(10)\
    \ . \"\\n\";\necho \"get_max_triples(12) = \" . get_max_triples(12) . \"\\n\";",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $total = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $total++;\n                }\n            }\n    \
    \    }\n    }\n    return $total;\n}\necho get_max_triples(5);", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n    $res = 0;\n    for ($i = 1; $i <\
    \ $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for\
    \ ($k = $j + 1; $k <= $n; $k++) {\n                if (($i * $i - $i + 1 + $j\
    \ * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $res++;\n\
    \                }\n            }\n        }\n    }\n    return $res;\n}", " \
    \   $result = 0;\n    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n     \
    \   $array[] = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if(($array[$i] + $array[$j] + $array[$k])\
    \ % 3 == 0) {\n                    $result++;\n                }\n           \
    \ }\n        }\n    }\n    return $result;\n}\n$n = 5;\nprint_r(get_max_triples($n));\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ $cnt;\n}\n$n = 5;\necho get_max_triples($n);", "    if ($n < 3) return 0;\n\
    \    $sum = 0;\n    for ($i = 2; $i < $n; $i++) {\n        for ($j = 1; $j < $i;\
    \ $j++) {\n            $sum += $j * $j - $j + 1 + $i * $i - $i + 1;\n        }\n\
    \    }\n    return $sum / 3;\n}\n$start = microtime(true);\necho get_max_triples(6);\n\
    $end = microtime(true);\necho \"\\n\";\necho $end - $start;\necho \"\\n\";", " \
    \   $count = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n     \
    \           if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $arr = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $combinations\
    \ = [$arr[0], $arr[1], $arr[2]];\n    for ($i = 3; $i < count($arr); $i++) {\n\
    \        $combinations[] = $arr[$i - 2];\n        $combinations[] = $arr[$i -\
    \ 1];\n        $combinations[] = $arr[$i];\n    }\n    $valid_count = 0;\n   \
    \ for ($i = 0; $i < count($combinations); $i+=3) {\n        if ($combinations[$i]\
    \ + $combinations[$i + 1] + $combinations[$i + 2] % 3 == 0) {\n            $valid_count++;\n\
    \        }\n    }\n    return $valid_count;\n}\n$res = get_max_triples(5);\nprint_r($res);",
  "    // Write your code here\n    $count = 0;\n    $a = range(1, $n);\n    for ($i\
    \ = 0; $i < count($a); $i++) {\n        $a[$i] = $a[$i] * $a[$i] - $a[$i] + 1;\n\
    \    }\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n       \
    \ $arr[] = $i * $i - $i + 1;\n    }\n    // var_dump($arr);\n    $combinations\
    \ = countCombinations($arr);\n    $comb_res = [];\n    for ($i = 0; $i < count($combinations);\
    \ $i++) {\n        $comb_res[] = array_sum($combinations[$i]);\n    }\n    //\
    \ var_dump($comb_res);\n    $count = 0;\n    for ($i = 0; $i < count($comb_res);\
    \ $i++) {\n        if ($comb_res[$i] % 3 == 0) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}\n", "    $triples = 0;\n    $a = [];\n  \
    \  for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n \
    \   for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $triples++;\n \
    \               }\n            }\n        }\n    }\n    return $triples;\n}\n\
    echo get_max_triples(5);", "    $a = array();\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i =\
    \ 1; $i <= $n - 2; $i++) {\n        for ($j = $i + 1; $j <= $n - 1; $j++) {\n\
    \            for ($k = $j + 1; $k <= $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $count = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $len = count($a);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            for ($k =\
    \ $j + 1; $k < $len; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $max\
    \ = 0;\n    $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n        array_push($array,\
    \ $i * $i - $i + 1);\n    }\n    for ($i = 0; $i < count($array); $i++) {\n  \
    \      for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($array); $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $max++;\n                }\n\
    \            }\n        }\n    }\n    return $max;\n}\nprint_r(get_max_triples(5));",
  "    $count = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n     \
    \           if ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1))\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n$n = 5;\necho get_max_triples($n);",
  "  // find the max number at an index k, such that a[i] + a[j] + a[k] is divisible\
    \ by 3\n  // a[i] + a[j] = 3 * x = a[k] + 3 * y\n  // for a given number a[i],\
    \ find the max number in [a[i], a[n]], s.t. a[k] % 3 === (a[i] + 3 * y) % 3\n\
    \  // for the other two numbers in the triple, a[j] = a[i] + 3 * y - a[k]\n  //\
    \ let x = number of elements in a, such that a[k] % 3 === (a[i] + 3 * y) % 3\n\
    \  // sum of all x values will give the number of triples where a[i] + a[j] +\
    \ a[k] is divisible by 3\n  $x_sum = 0;\n  $a = array_fill(1, $n, 0);\n  for ($i\
    \ = 1; $i <= $n; $i++) {\n    $a[$i] = $i * $i - $i + 1;\n  }\n  for ($i = 1;\
    \ $i <= $n; $i++) {\n    $max_k = $n + 1;\n    for ($y = 0; $y < 3; $y++) {\n\
    \      $max_k = min($max_k, find_max_k($a, $i, $y, $n));\n    }\n    $x_sum +=\
    \ $max_k - $i;\n  }\n  return $x_sum;\n}", "    $result = 0;\n    for ($i = 1;\
    \ $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if ((($i * $i - $i + 1) + ($j\
    \ * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n                    $result++;\n\
    \                }\n            }\n        }\n    }\n    return $result;\n}\n\
    echo get_max_triples(5);", "  $a = [];\n  for ($i = 1; $i <= $n; $i++) {\n   \
    \ $a[] = pow($i, 2) - $i + 1;\n  }\n  $cnt = 0;\n  for ($i = 0; $i < $n - 2; $i++)\
    \ {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k <\
    \ $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n          $cnt++;\n\
    \        }\n      }\n    }\n  }\n  return $cnt;\n}\n\nprint_r(get_max_triples(5));",
  "    if ($n < 3) return 0;\n    $count = 0;\n    $arr = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    for ($i = 0;\
    \ $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n     \
    \       for ($k = $j + 1; $k < $n; $k++) {\n                if (($arr[$i] + $arr[$j]\
    \ + $arr[$k]) % 3 == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "\t$count = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n;\
    \ $j++) {\n\t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($i * $i - $i\
    \ + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\t\t\t\t\t$count++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\necho get_max_triples(5);",
  "\t$result = 0;\n\t$a = [];\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i] = $i *\
    \ $i - $i + 1;\n\t}\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tfor ($j = $i + 1; $j\
    \ <= $n; $j++) {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $result;\n}\necho get_max_triples(5);", "    // $arr = [];\n\
    \    // for ($i = 1; $i <= $n; $i++) {\n    //     $arr[] = $i * $i - $i + 1;\n\
    \    // }\n    // $count = 0;\n    // for ($i = 0; $i < $n; $i++) {\n    //  \
    \   for ($j = $i + 1; $j < $n; $j++) {\n    //         for ($k = $j + 1; $k <\
    \ $n; $k++) {\n    //             if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 ==\
    \ 0) {\n    //                 $count++;\n    //             }\n    //       \
    \  }\n    //     }\n    // }\n    // return $count;\n    // $arr = [];\n    //\
    \ for ($i = 1; $i <= $n; $i++) {\n    //     $arr[] = $i * $i - $i + 1;\n    //\
    \ }\n    // $count = 0;\n    // for ($i = 0; $i < $n; $i++) {\n    //     for\
    \ ($j = $i + 1; $j < $n; $j++) {\n    //         for ($k = $j + 1; $k < $n; $k++)\
    \ {\n    //             if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n   \
    \ //                 $count++;\n    //             }\n    //         }\n    //\
    \     }\n    // }\n    // return $count;\n    // $arr = [];\n    // for ($i =\
    \ 1; $i <= $n; $i++) {\n    //     $arr[] = $i * $i - $i + 1;\n    // }\n    //\
    \ $count = 0;\n    // for ($i = 0; $i < $n; $i++) {\n    //     for ($j = $i +\
    \ 1; $j < $n; $j++) {\n    //         for ($k = $j + 1; $k < $n; $k++) {\n   \
    \ //             if (($arr[$i] + $arr[", "\t$results = 0;\n\t$a = array();\n\t\
    $a[0] = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i] = $i * $i - $i + 1;\n\
    \t}\n\tprint_r($a);\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tfor ($j = $i + 1; $j\
    \ <= $n; $j++) {\n\t\t\tif ($a[$i] + $a[$j] <= $a[$n]) {\n\t\t\t\tfor ($k = $j\
    \ + 1; $k <= $n; $k++) {\n\t\t\t\t\tif ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n\
    \t\t\t\t\t\t$results++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $results;\n}\n\necho get_max_triples(5);", "\n}", "    $triples = [];\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $triples[] = [$a[$i],\
    \ $a[$j], $a[$k]];\n                }\n            }\n        }\n    }\n    return\
    \ count($triples);\n}\n$n = 5;\nprint_r(get_max_triples($n));", "    $ans = 0;\n\
    \    $seq = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $seq[] = $i * $i\
    \ - $i + 1;\n    }\n    // var_dump($seq);\n    $k = 0;\n    while ($k < $n) {\n\
    \        $j = $k + 1;\n        while ($j < $n) {\n            $i = $j + 1;\n \
    \           while ($i < $n) {\n                if (($seq[$i] + $seq[$j] + $seq[$k])\
    \ % 3 == 0) {\n                    $ans++;\n                }\n              \
    \  $i++;\n            }\n            $j++;\n        }\n        $k++;\n    }\n\
    \    return $ans;\n}\n$n = 5;\necho get_max_triples($n) . PHP_EOL;", "    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $max_triples = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n  \
    \      for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j +\
    \ 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $max_triples++;\n                }\n      \
    \      }\n        }\n    }\n    return $max_triples;\n}", "    $count = 0;\n \
    \   for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($i * $i\
    \ - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n              \
    \      $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "  $a = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i\
    \ * $i - $i + 1;\n  }\n  $result = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n \
    \   for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++)\
    \ {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n          $result++;\n\
    \        }\n      }\n    }\n  }\n  return $result;\n}\necho get_max_triples(5);",
  "    $result = 0;\n    $arr = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $arr[$i] = $arr[$i] * $arr[$i] - $arr[$i] + 1;\n    }\n    for ($i =\
    \ 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n  \
    \          for ($k = $j + 1; $k < $n; $k++) {\n                if (($arr[$i] +\
    \ $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $result++;\n         \
    \       }\n            }\n        }\n    }\n    return $result;\n}\n", "    $triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $triples++;\n                }\n            }\n        }\n  \
    \  }\n    return $triples;\n}", "    $cnt = 0;\n    $a = array();\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n      \
    \      for ($k = $j + 1; $k <= $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0)\n                    $cnt++;\n            }\n        }\n\
    \    }\n    return $cnt;\n}\necho get_max_triples(5) . \"\\n\";", "  $a = [];\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n  $count\
    \ = 0;\n  $i = 0;\n  $j = 1;\n  $k = 2;\n  $prev_i = null;\n  $prev_j = null;\n\
    \  $prev_k = null;\n  while ($k < $n) {\n    while ($k < $n) {\n      while ($k\
    \ < $n) {\n        if ($prev_i != $i || $prev_j != $j || $prev_k != $k) {\n  \
    \        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            $count++;\n \
    \           $prev_i = $i;\n            $prev_j = $j;\n            $prev_k = $k;\n\
    \          }\n        }\n        $k++;\n      }\n      $j++;\n      $k = $j +\
    \ 1;\n    }\n    $i++;\n    $j = $i + 1;\n    $k = $j + 1;\n  }\n  return $count;\n\
    }\necho get_max_triples(5);", "    $arr = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $max = 0;\n    for ($i = 0;\
    \ $i < count($arr); $i++) {\n        for ($j = $i + 1; $j < count($arr); $j++)\
    \ {\n            for ($k = $j + 1; $k < count($arr); $k++) {\n               \
    \ if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $max++;\n\
    \                }\n            }\n        }\n    }\n    return $max;\n}\n", " \
    \   $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i -\
    \ $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0)\
    \ {\n                    $count++;\n                }\n            }\n       \
    \ }\n    }\n    return $count;\n}\n", "  $a = [];\n  for ($i = 1; $i <= $n; $i++)\
    \ {\n    $a[] = $i * $i - $i + 1;\n  }\n  $max_triples = 0;\n  for ($i = 0; $i\
    \ < $n - 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k\
    \ = $j + 1; $k < $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0)\
    \ {\n          $max_triples++;\n        }\n      }\n    }\n  }\n  return $max_triples;\n\
    }\necho get_max_triples(5) . PHP_EOL;", "    $triples = 0;\n    for ($i = 1; $i\
    \ < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($i + $j + $k) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\n$n = 5;\nprint(get_max_triples($n));", "    $result\
    \ = 0;\n    $arr = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[$i]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for\
    \ ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}", "    //return $n * ($n - 1) * ($n - 2) / 6;\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ $cnt;\n}\n", "\t$arr = [];\n\tfor ($i=1; $i <= $n; $i++) { \n\t\t$arr[] = ($i\
    \ * $i) - $i + 1;\n\t}\n\techo \"\\$arr : \";\n\tvar_dump($arr);\n\t$triples =\
    \ 0;\n\tfor ($i=0; $i < count($arr); $i++) { \n\t\tfor ($j=$i+1; $j < count($arr);\
    \ $j++) { \n\t\t\tfor ($k=$j+1; $k < count($arr); $k++) { \n\t\t\t\tif(($arr[$i]\
    \ + $arr[$j] + $arr[$k]) % 3 == 0) {\n\t\t\t\t\t$triples++;\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $triples;\n}\necho get_max_triples(5);\necho \"\\n\";\n\
    echo get_max_triples(1);\necho \"\\n\";\necho get_max_triples(2);\necho \"\\n\"\
    ;\necho get_max_triples(3);\necho \"\\n\";\necho get_max_triples(4);\necho \"\\\
    n\";\necho get_max_triples(10);\necho \"\\n\";\necho get_max_triples(100);\necho\
    \ \"\\n\";\necho get_max_triples(1000);\necho \"\\n\";", "\t$res = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tfor ($k\
    \ = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($i + 1) * ($i + 1) - ($i + 1) + 1 +\
    \ ($j + 1) * ($j + 1) - ($j + 1) + 1 + ($k + 1) * ($k + 1) - ($k + 1) + 1) % 3\
    \ == 0) {\n\t\t\t\t\t$res++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $res;\n\
    }", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i\
    \ - $i + 1;\n    }\n    $result = 0;\n    $triples = [];\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $triples[] = [$a[$i], $a[$j], $a[$k]];\n\
    \                    $result++;\n                }\n            }\n        }\n\
    \    }\n    // echo \"<pre>\";\n    // print_r($triples);\n    // echo \"</pre>\"\
    ;\n    return $result;\n}\n$n = 5;\necho get_max_triples($n);", "    $cnt = 0;\n\
    \    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i -\
    \ $i + 1;\n    }\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1;\
    \ $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n       \
    \         if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $cnt++;\n\
    \                }\n            }\n        }\n    }\n    return $cnt;\n}\n\necho\
    \ get_max_triples(5);", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example: print \"Hello world!\"\
    ;\n    $count = 0;\n    $a = [];\n    for($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    for($i = 0; $i < $n; $i++) {\n        for($j\
    \ = $i + 1; $j < $n; $j++) {\n            for($k = $j + 1; $k < $n; $k++) {\n\
    \                if(($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\n$result = get_max_triples(5);\necho $result;", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $sum = 0;\n    $count = 0;\n    $mult3 = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        $sum = $a[$i];\n        for ($j = $i + 1; $j < count($a); $j++)\
    \ {\n            $sum += $a[$j];\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                $sum += $a[$k];\n                if ($sum % 3 == 0)\
    \ {\n                    $mult3++;\n                }\n                $sum -=\
    \ $a[$k];\n            }\n            $sum -= $a[$j];\n        }\n    }\n    return\
    \ $mult3;\n}\n\necho get_max_triples(5);\n", "    $k = floor($n / 3);\n    $v1\
    \ = $k * (6 * $k + 3);\n    $v2 = ($k + 1) * (6 * $k + 9);\n    $v3 = ($k + 2)\
    \ * (6 * $k + 15);\n    return floor(($v1 + $v2 + $v3) / 6);\n}\n\n$n = 3;\necho\
    \ get_max_triples($n);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n \
    \       $a[] = $i * $i - $i + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $triples++;\n                }\n\
    \            }\n        }\n    }\n    return $triples;\n}\n$n = 5;\necho get_max_triples($n);",
  "    $a = [1];\n    for ($i = 1; $i < $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n  \
    \      for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $max_triples++;\n                }\n            }\n     \
    \   }\n    }\n    return $max_triples;\n}\n\nprint_r(get_max_triples(5));", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n    \
    \                $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5);", "    $a = array();\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[$i - 1] = $i * $i - $i + 1;\n    }\n\
    \    $total = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $total++;\n                }\n            }\n        }\n    }\n\
    \    return $total;\n}", "    $res = 0;\n    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for\
    \ ($k = $j + 1; $k <= $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $res++;\n                }\n            }\n\
    \        }\n    }\n    return $res;\n}\n$n = 5;\nprint_r(get_max_triples($n));",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $ans = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $ans++;\n                }\n            }\n        }\n    }\n    return $ans;\n\
    }", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i\
    \ - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n;\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5);", "    $a = [1];\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $len = count($a);\n\
    \    $cnt = 0;\n    for ($i = 0; $i < $len - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $len - 1; $j++) {\n            for ($k = $j + 1; $k < $len; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ $cnt;\n}\n\necho get_max_triples(5) . \"\\n\";", "    $arr = array();\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $max_triples\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $max_triples++;\n\
    \                }\n            }\n        }\n    }\n    return $max_triples;\n\
    }\n", "    $a = range(1, $n);\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n", "    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = ($i * $i) - $i + 1;\n  \
    \  }\n    $valid_triples = 0;\n    for ($i = 1; $i <= $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j <= $n - 1; $j++) {\n            for ($k = $j + 1; $k <=\
    \ $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n    \
    \                $valid_triples++;\n                }\n            }\n       \
    \ }\n    }\n    return $valid_triples;\n}\necho get_max_triples(5);", "    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $answer = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) $answer++;\n            }\n        }\n    }\n    return $answer;\n\
    }\n\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(100) . \"\\n\";",
  "  $triples = 0;\n  for ($i = 1; $i < $n - 1; $i++) {\n    for ($j = $i + 1; $j\
    \ < $n; $j++) {\n      for ($k = $j + 1; $k <= $n; $k++) {\n        if (($i *\
    \ $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $triples++;\n\
    \        }\n      }\n    }\n  }\n  return $triples;\n}\necho get_max_triples(5);",
  "    $arr = [1];\n    for ($i = 1; $i < $n; $i++) {\n        $arr[] = $i * $i -\
    \ $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0)\
    \ {\n                    $count++;\n                }\n            }\n       \
    \ }\n    }\n    return $count;\n}\n$n = 5;\nprint_r(get_max_triples($n));", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}\n\necho get_max_triples(5);", "\t$arr = [];\n\tfor\
    \ ($i=1; $i <= $n; $i++) { \n\t\t$arr[] = $i * $i - $i + 1;\n\t}\n\t$result =\
    \ 0;\n\tfor ($i=0; $i < $n-2; $i++) { \n\t\tfor ($j=$i+1; $j < $n-1; $j++) { \n\
    \t\t\tfor ($k=$j+1; $k < $n; $k++) { \n\t\t\t\tif(($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\necho get_max_triples(5);", "    if ($n < 3) {\n        return 0;\n\
    \    }\n    $result = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $arr[] = $i * $i - $i + 1;\n    }\n    // print_r($arr);\n    $sum =\
    \ array_sum($arr);\n    if ($sum % 3 == 0) {\n        $result = $n * ($n - 1)\
    \ * ($n - 2) / 6;\n    } else {\n        $indexArr = [];\n        for ($i = 0;\
    \ $i < $n; $i++) {\n            if ($arr[$i] % 3 == $sum % 3) {\n            \
    \    $indexArr[] = $i;\n            }\n        }\n        // print_r($indexArr);\n\
    \        if (sizeof($indexArr) >= 3) {\n            $result = sizeof($indexArr)\
    \ * ($n - 1) * ($n - 2) / 6;\n        } else if (sizeof($indexArr) == 2) {\n \
    \           $result = $indexArr[0] * ($indexArr[0] - 1) / 2 * ($n - $indexArr[1]\
    \ - 1);\n        }\n    }\n    return $result;\n}", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5) . PHP_EOL;", "    $count = 0;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j\
    \ + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $count++;\n       \
    \         }\n            }\n        }\n    }\n    return $count;\n}", "    $res\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $res++;\n                }\n            }\n        }\n  \
    \  }\n    return $res;\n}\necho get_max_triples(5);", "  $cnt = 0;\n  for ($i\
    \ = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n      for ($k\
    \ = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 + $j * $j - $j + 1\
    \ + $k * $k - $k + 1) % 3 == 0) {\n          $cnt++;\n        }\n      }\n   \
    \ }\n  }\n  return $cnt;\n}\n", "\tif ($n == 0) return 0;\n\t$a = range(1, $n,\
    \ 1);\n\t$b = array_map(function($element) {\n\t\treturn $element * $element -\
    \ $element + 1;\n\t}, $a);\n\t$triples = [];\n\tfor ($i = 0; $i < count($b); $i++)\
    \ {\n\t\tfor ($j = $i + 1; $j < count($b); $j++) {\n\t\t\tfor ($k = $j + 1; $k\
    \ < count($b); $k++) {\n\t\t\t\tif (($b[$i] + $b[$j] + $b[$k]) % 3 == 0) {\n\t\
    \t\t\t\t$triples[] = $b[$i] + $b[$j] + $b[$k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn count($triples);\n}\n", "    $count = 0;\n    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    for ($i\
    \ = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++)\
    \ {\n            for ($k = $j + 1; $k < count($a); $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n   \
    \             }\n            }\n        }\n    }\n    return $count;\n}\n", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n    \
    \    for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\necho get_max_triples(5);", "    $a = [];\n  \
    \  for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n \
    \   $max_triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max_triples++;\n                }\n            }\n        }\n    }\n\
    \    return $max_triples;\n}\n", "  $triples = [];\n  for ($i = 1; $i <= $n; $i++)\
    \ {\n    $a[$i] = $i * $i - $i + 1;\n  }\n  for ($i = 1; $i <= $n; $i++) {\n \
    \   for ($j = $i + 1; $j <= $n; $j++) {\n      for ($k = $j + 1; $k <= $n; $k++)\
    \ {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n          $triples[]\
    \ = [$a[$i], $a[$j], $a[$k]];\n        }\n      }\n    }\n  }\n  return count($triples);\n\
    }\nprint_r(get_max_triples(5));", "    $s = $n * ($n - 1) / 2;\n    $d = 0;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $s += $i * $i - $i + 1;\n       \
    \ if ($s % 3 == 0) {\n            $d++;\n        }\n    }\n    return $d;\n}\n\
    \n$n = readline(\"n: \");\necho(get_max_triples($n));", "    $result = 0;\n  \
    \  $num_of_triples = 0;\n    $diff = 0;\n    $next_pow = 0;\n    $a = [];\n  \
    \  $a[0] = $n;\n    $a[1] = 1;\n    $a[2] = 3;\n    $a[3] = 6;\n    $a[4] = 10;\n\
    \    $a[5] = 15;\n    $a[6] = 21;\n    $a[7] = 28;\n    $a[8] = 36;\n    $a[9]\
    \ = 45;\n    $a[10] = 55;\n    $a[11] = 66;\n    $a[12] = 78;\n    $a[13] = 91;\n\
    \    $a[14] = 105;\n    $a[15] = 120;\n    $a[16] = 136;\n    $a[17] = 153;\n\
    \    $a[18] = 171;\n    $a[19] = 190;\n    $a[20] = 210;\n    $a[21] = 231;\n\
    \    $a[22] = 253;\n    $a[23] = 276;\n    $a[24] = 300;\n    $a[25] = 325;\n\
    \    $a[26] = 351;\n    $a[27] = 378;\n    $a[28] = 406;\n    $a[29] = 435;\n\
    \    $a[30] = 465;\n    $a[31] = 496;\n    $a[32] = 528;\n    $a[33] = 561;\n\
    \    $a[34] = 595;\n    $a[35] = 630;\n    $a[36] = 666;\n    $a[37] = 703;\n\
    \    $a[38] = 741;\n    $a[39] = 780;\n    $a[40] = 820;\n    $a[41] = 861;\n\
    \    $a[42] = 903;\n    $a[43] = 946;\n    $a[44] = 990;\n    $a[45] = 10", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n    \
    \    for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\n$n = 5;\necho get_max_triples($n);", "    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n", "    $res = 0;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k\
    \ * $k - $k + 1) % 3 == 0) {\n                    $res++;\n                }\n\
    \            }\n        }\n    }\n    return $res;\n}\necho get_max_triples(5);\n\
    echo \"<br>\";\necho get_max_triples(8);\necho \"<br>\";\necho get_max_triples(6);",
  "    $ans = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n        \
    \        if ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) %\
    \ 3 == 0) {\n                    $ans++;\n                }\n            }\n \
    \       }\n    }\n    return $ans;\n}\necho get_max_triples(5) . PHP_EOL;\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $res++;\n                }\n            }\n        }\n    }\n    return\
    \ $res;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

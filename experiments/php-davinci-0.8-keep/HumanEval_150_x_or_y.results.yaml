name: HumanEval_150_x_or_y
language: php
results:
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n      if($n % $i == 0) {\n     \
    \     return $y;\n      }\n  }\n  return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9t39l6ex.php:29\n\
    Stack trace:\n#0 /tmp/tmp9t39l6ex.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9t39l6ex.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $n_sqrt = sqrt($n);\n  for ($i = 2; $i <= $n_sqrt; $i++) {\n  \
    \  if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpfbp5jg.php:29\n\
    Stack trace:\n#0 /tmp/tmpkpfbp5jg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkpfbp5jg.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeettg13u.php:15\n\
    Stack trace:\n#0 /tmp/tmpeettg13u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpeettg13u.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t// Write your code here and return the appropriate value \n}\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42zus0wo.php:15\n\
    Stack trace:\n#0 /tmp/tmp42zus0wo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp42zus0wo.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpf5wlk8_4.php:8\nStack trace:\n#0 /tmp/tmpf5wlk8_4.php(16): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpf5wlk8_4.php(20): candidate(7, 34, 12)\n#2 /tmp/tmpf5wlk8_4.php(32):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpf5wlk8_4.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n > 0) {\n    $isPrime = true;\n    for ($i = 2; $i < $n /\
    \ 2; $i++) {\n      if ($n % $i == 0) {\n        $isPrime = false;\n        break;\n\
    \      }\n    }\n    if ($isPrime) {\n      return $x;\n    } else {\n      return\
    \ $y;\n    }\n  } else {\n    return 0;\n  }\n}\n\necho(x_or_y(7, 34, 12) . '<br>');\n\
    echo(x_or_y(15, 8, 5) . '<br>');\necho(x_or_y(15, 5, 0) . '<br>');\necho(x_or_y(2,\
    \ 0, 0) . '<br>');\necho(x_or_y(0, 0, 0) . '<br>');\necho(x_or_y(-2, 0, 0) . '<br>');\n\
    echo(x_or_y(1, 0, 0) . '<br>');\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>5<br>0<br>0<br>0<br>0<br>0<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpeya5jkts.php:46\nStack trace:\n#0 /tmp/tmpeya5jkts.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpeya5jkts.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$i = 2;\n\t$limit = sqrt($n);\n\twhile ($i <= $limit) {\n\t\tif($n\
    \ % $i == 0) {\n\t\t\treturn $y;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $x;\n}\necho\
    \ x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\nfunction candidate(...$args) {\n\
    \    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "345\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0zz97qx.php:33\n\
    Stack trace:\n#0 /tmp/tmpu0zz97qx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu0zz97qx.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp9xew19av.php:8\nStack trace:\n#0 /tmp/tmp9xew19av.php(15): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmp9xew19av.php(19): candidate(7, 34, 12)\n#2 /tmp/tmp9xew19av.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp9xew19av.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$isPrime = True;\n\tif ($n <= 1) {\n\t\t$isPrime = False;\n\t}\n\
    \telse {\n\t\tfor ($i = 2; $i <= $n/2; $i++) {\n\t\t\tif ($n % $i == 0) {\n\t\t\
    \t\t$isPrime = False;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif ($isPrime) {\n\
    \t\treturn $x;\n\t}\n\telse {\n\t\treturn $y;\n\t}\n}\n\necho x_or_y(7, 34, 12);\n\
    echo \"<br>\";\necho x_or_y(15, 8, 5);\necho \"<br>\";\necho x_or_y(10, 8, 5);\n\
    echo \"<br>\";\necho x_or_y(11, 8, 5);\necho \"<br>\";\necho x_or_y(13, 8, 5);\n\
    echo \"<br>\";\necho x_or_y(1, 8, 5);\necho \"<br>\";\necho x_or_y(0, 8, 5);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 34<br>5<br>5<br>8<br>8<br>5<br>5<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // your code here\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8mf42eo.php:15\n\
    Stack trace:\n#0 /tmp/tmpq8mf42eo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpq8mf42eo.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n === 2 || $n === 3) {\n        return $x;\n    }\n    if\
    \ ($n < 2 || $n % 2 === 0 || $n % 3 === 0) {\n        return $y;\n    }\n    $i\
    \ = 5;\n    $w = 2;\n    while ($i * $i <= $n) {\n        if ($n % $i === 0) {\n\
    \            return $y;\n        }\n        $i += $w;\n        $w = 6 - $w;\n\
    \    }\n    return $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t// Write your code here\n\tif ($n == 2 || $n == 3 || $n == 5 ||\
    \ $n == 7 || $n == 11) {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\
    echo x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf84hel86.php:27\n\
    Stack trace:\n#0 /tmp/tmpf84hel86.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf84hel86.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy6h4qu9.php:29\n\
    Stack trace:\n#0 /tmp/tmpuy6h4qu9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuy6h4qu9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // return $x;\n    $isPrime = false;\n    if ($n == 1) {\n  \
    \      $isPrime = false;\n    } else {\n        for ($i = 2; $i < $n; $i++) {\n\
    \            if ($n % $i == 0) {\n                $isPrime = false;\n        \
    \        break;\n            } else {\n                $isPrime = true;\n    \
    \        }\n        }\n    }\n    if ($isPrime) {\n        return $x;\n    } else\
    \ {\n        return $y;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho '<br>';\necho\
    \ x_or_y(15, 8, 5);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmwnr8kq.php:46\n\
    Stack trace:\n#0 /tmp/tmpxmwnr8kq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxmwnr8kq.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpic6wmhbw.php:8\nStack trace:\n#0 /tmp/tmpic6wmhbw.php(16): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpic6wmhbw.php(20): candidate(7, 34, 12)\n#2 /tmp/tmpic6wmhbw.php(32):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpic6wmhbw.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i\
    \ == 0) {\n\t\t\t$prime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($prime) {\n\t\
    \treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56uh6oya.php:35\n\
    Stack trace:\n#0 /tmp/tmp56uh6oya.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp56uh6oya.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Here we use a conditional expression.\n    // It can be replaced\
    \ with an if-else statement.\n    return ($n % 2 == 0) ? $y : $x;\n}\necho \"\
    7, 34, 12 => \" . x_or_y(7, 34, 12) . \"\\n\";\necho \"15, 8, 5 => \" . x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "7, 34, 12 => 34\n15, 8, 5 => 8\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpw5mukhip.php:20\nStack trace:\n#0 /tmp/tmpw5mukhip.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpw5mukhip.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $is_prime = true;\n    if ($n === 1) {\n        $is_prime = false;\n\
    \    } else {\n        for ($i = 2; $i < $n; $i++) {\n            if ($n % $i\
    \ === 0) {\n                $is_prime = false;\n                break;\n     \
    \       }\n        }\n    }\n    return $is_prime ? $x : $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Hint: Look at the modulo operator!\n    // Hint: Use a for\
    \ loop to find whether $n is prime or not.\n    // Hint: The for loop should iterate\
    \ from 2 to $n / 2 \n    // (because if the modulo with any number between 2 and\
    \ $n / 2 \n    // is zero, then $n is not a prime number).\n    // Hint: You should\
    \ return $x if $n is a prime number \n    // and you should return $y otherwise.\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa0tuu2g.php:21\n\
    Stack trace:\n#0 /tmp/tmpaa0tuu2g.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaa0tuu2g.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n > 2 && is_int($n)){\n        $count = 0;\n        for($i\
    \ = 1; $i <= $n; $i++){\n            if($n % $i == 0){\n                $count++;\n\
    \            }\n        }\n        if($count == 2){\n            return $x;\n\
    \        }\n        else{\n            return $y;\n        }\n    }\n    else{\n\
    \        return $y;\n    }\n}\necho x_or_y(7, 34, 12);\necho \"<br>\";\necho x_or_y(15,\
    \ 8, 5);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpridhmcyw.php:43\n\
    Stack trace:\n#0 /tmp/tmpridhmcyw.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpridhmcyw.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijbprz6g.php:29\n\
    Stack trace:\n#0 /tmp/tmpijbprz6g.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpijbprz6g.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $check = false;\n  if ($n <= 2) {\n    $check = true;\n  }\n  else\
    \ {\n    for ($i = 2; $i < $n; $i++) {\n      if ($n % $i == 0) {\n        $check\
    \ = true;\n        break;\n      }\n    }\n  }\n  if ($check) {\n    return $y;\n\
    \  }\n  else {\n    return $x;\n  }\n}\n\nfunction candidate(...$args) {\n   \
    \ return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7f_whn_.php:42\n\
    Stack trace:\n#0 /tmp/tmpi7f_whn_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpi7f_whn_.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    }\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpa00ae7pa.php:8\nStack trace:\n#0 /tmp/tmpa00ae7pa.php(15): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpa00ae7pa.php(19): candidate(7, 34, 12)\n#2 /tmp/tmpa00ae7pa.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpa00ae7pa.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\n\n$a = x_or_y(7, 34, 12);\necho $a;\necho\
    \ \"<br>\";\n$b = x_or_y(15, 8, 5);\necho $b;\nfunction candidate(...$args) {\n\
    \    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6vubrd6.php:34\n\
    Stack trace:\n#0 /tmp/tmpv6vubrd6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv6vubrd6.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // returns $x if $n is prime and $y otherwise\n  // your code goes\
    \ here...\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw020b5xy.php:16\n\
    Stack trace:\n#0 /tmp/tmpw020b5xy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw020b5xy.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n%2==0) {\n        $result = $y;\n    } else {\n        $result\
    \ = $x;\n    }\n    return $result;\n}\n\necho x_or_y(7, 34, 12);\necho \"<br>\"\
    ;\necho x_or_y(15, 8, 5);\necho \"<br>\";\necho x_or_y(9, 0, 2);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>8<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmclr2py.php:27\n\
    Stack trace:\n#0 /tmp/tmprmclr2py.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprmclr2py.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_acrlboj.php:15\n\
    Stack trace:\n#0 /tmp/tmp_acrlboj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_acrlboj.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $result = 0;\n    if(is_prime($n)) {\n        $result = $x;\n\
    \    } else {\n        $result = $y;\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpaf4ao3vg.php:9\nStack trace:\n#0 /tmp/tmpaf4ao3vg.php(17): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpaf4ao3vg.php(21): candidate(7, 34, 12)\n#2 /tmp/tmpaf4ao3vg.php(33):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpaf4ao3vg.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) return $y;\n  $s = sqrt($n);\n  for ($i = 2; $i <=\
    \ $s; $i++) {\n    if ($n % $i == 0) return $y;\n  }\n  return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // write your code here\n    $result = '';\n    if (is_prime($n))\
    \ {\n        $result = $x;\n    } else {\n        $result = $y;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5ywpabgo.php:10\nStack trace:\n#0 /tmp/tmp5ywpabgo.php(19): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmp5ywpabgo.php(23): candidate(7, 34, 12)\n#2 /tmp/tmp5ywpabgo.php(35):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp5ywpabgo.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n)) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpaf9kad1n.php:8\nStack trace:\n#0 /tmp/tmpaf9kad1n.php(16): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpaf9kad1n.php(20): candidate(7, 34, 12)\n#2 /tmp/tmpaf9kad1n.php(32):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpaf9kad1n.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $c = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n %\
    \ $i == 0) {\n            $c += 1;\n        }\n    }\n    if ($c == 2) {\n   \
    \     return $x;\n    } else {\n        return $y;\n    }\n}\n\necho x_or_y(7,\
    \ 34, 12) . PHP_EOL;\necho x_or_y(15, 8, 5) . PHP_EOL;\necho x_or_y(6, 3, 8) .\
    \ PHP_EOL;\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n8\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if($n % $i == 0) {\n \
    \           return $y;\n        } \n    }\n    return $x;\n}\n\necho x_or_y(15,\
    \ 8, 5);\necho \"<br>\";\necho x_or_y(7, 34, 12);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "5<br>34\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxddlh_j.php:32\n\
    Stack trace:\n#0 /tmp/tmplxddlh_j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplxddlh_j.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $prime = false;\n  if ($n <= 1) {\n    $prime = false;\n  } elseif\
    \ ($n <= 3) {\n    $prime = true;\n  } elseif ($n % 2 == 0 || $n % 3 == 0) {\n\
    \    $prime = false;\n  }\n  $i = 5;\n  while ($i * $i <= $n) {\n    if ($n %\
    \ $i == 0 || $n % ($i + 2) == 0) {\n      $prime = false;\n    }\n    $i = $i\
    \ + 6;\n  }\n  $prime = true;\n  if ($prime == true) {\n    return $x;\n  } else\
    \ {\n    return $y;\n  }\n}\necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "348\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkuem3mtg.php:38\n\
    Stack trace:\n#0 /tmp/tmpkuem3mtg.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkuem3mtg.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n == 2 || $n == 3) return $x;\n    if($n == 1 || $n % 2 ==\
    \ 0 || $n % 3 == 0) return $y;\n    $i = 5;\n    $w = 2;\n    while($i * $i <=\
    \ $n) {\n        if($n % $i == 0) return $y;\n        $i += $w;\n        $w =\
    \ 6 - $w;\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $is_prime = true;\n    for ($i = 2; $i < $n; $i++) {\n      \
    \  if ($n % $i == 0) {\n            $is_prime = false;\n            break;\n \
    \       }\n    }\n    if ($is_prime) {\n        return $x;\n    } else {\n   \
    \     return $y;\n    }\n}\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\necho x_or_y(11, 32, 12) . \"\\n\";\necho x_or_y(9, 34, 12)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n32\n12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu29nrs9.php:38\n\
    Stack trace:\n#0 /tmp/tmplu29nrs9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplu29nrs9.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n   if($n > 1) {\n      for($i = 2; $i <= $n/2; $i++) {\n        \
    \ if($n % $i == 0) {\n            return $y;\n         }\n      }\n      return\
    \ $x;\n   } else {\n      return $y;\n   }\n}\n\necho x_or_y(7, 34, 12);\necho\
    \ \"<br />\";\necho x_or_y(15, 8, 5);\necho \"<br />\";\necho x_or_y(31, 8, 5);\n\
    echo \"<br />\";\necho x_or_y(6, 8, 5);\necho \"<br />\";\necho x_or_y(17, 34,\
    \ 8);\necho \"<br />\";\necho x_or_y(13, 34, 8);\necho \"<br />\";\necho x_or_y(1,\
    \ 34, 8);\necho \"<br />\";\necho x_or_y(0, 34, 8);\necho \"<br />\";\necho x_or_y(-1,\
    \ 34, 8);\necho \"<br />\";\necho x_or_y(-4, 34, 8);\necho \"<br />\";\necho x_or_y(-5,\
    \ 34, 8);\necho \"<br />\";\necho x_or_y(-10, 34, 8);\necho \"<br />\";\necho\
    \ x_or_y(-13, 34, 8);\necho \"<br />\";\necho x_or_y(-14, 34, 8);\necho \"<br\
    \ />\";\necho x_or_y(-24, 34, 8);\necho \"<br />\";\necho x_or_y(-28, 34, 8);\n\
    echo \"<br />\";\necho x_or_y(-29, 34, 8);\necho \"<br />\";\necho x_or_y(-33,\
    \ 34, 8);\necho \"<br />\";\necho x_or_y(-34, 34, 8);\necho \"<br />\";\necho\
    \ x_or_y(-35, 34, 8);\necho \"<br />\";\necho x_or_y(-36, 34, 8);\necho \"<br\
    \ />\";\necho x_or_y(-46, 34, 8);\necho\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp26boh3eo.php on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zpo33j1.php:29\n\
    Stack trace:\n#0 /tmp/tmp0zpo33j1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0zpo33j1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $res = $y;\n    if($n%2 != 0) {\n        for($i = 3; $i <= $n;\
    \ $i++) {\n            if($n%$i == 0) {\n                $res = $x;\n        \
    \        break;\n            }\n        }\n    }\n    return $res;\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3wh4n5x.php:25\n\
    Stack trace:\n#0 /tmp/tmpy3wh4n5x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy3wh4n5x.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n// Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm23u8cu5.php:15\n\
    Stack trace:\n#0 /tmp/tmpm23u8cu5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm23u8cu5.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$i = 2;\n\twhile ($i < $n) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $y;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $x;\n}\nfunction candidate(...$args) {\n\
    \    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tjqtyc5.php:30\n\
    Stack trace:\n#0 /tmp/tmp2tjqtyc5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2tjqtyc5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t\
    return $y;\n\t\t}\n\t}\n\treturn $x;\n}\necho x_or_y(8, 5, 7);\necho \"\\n\";\n\
    echo x_or_y(5, 8, 7);\necho \"\\n\";\necho x_or_y(7, 2, 5);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "7\n8\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1ur2bem.php:34\n\
    Stack trace:\n#0 /tmp/tmp_1ur2bem.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_1ur2bem.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n))\n    return $x;\n  else\n    return $y;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp85rl31ad.php:8\nStack trace:\n#0 /tmp/tmp85rl31ad.php(15): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmp85rl31ad.php(19): candidate(7, 34, 12)\n#2 /tmp/tmp85rl31ad.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp85rl31ad.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif($n % 2 == 0 || $n == 1)\n\t\treturn $y;\n\telse {\n\t\tfor($i\
    \ = 3; $i < ceil(sqrt($n)); $i += 2) {\n\t\t\tif($n % $i == 0)\n\t\t\t\treturn\
    \ $y;\n\t\t}\n\t\treturn $x;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpid4z4tdk.php:32\n\
    Stack trace:\n#0 /tmp/tmpid4z4tdk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpid4z4tdk.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n<2) {\n        return $y;\n    }\n    $i = 2;\n    while\
    \ ($i<$n) {\n        if ($n%$i == 0) {\n            return $y;\n        }\n  \
    \      $i++;\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n   \
    \ return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif ($n % 2 == 0) {\n\t\treturn $y;\n\t}\n\telse {\n\t\treturn $x;\n\
    \t}\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuui120mr.php:25\n\
    Stack trace:\n#0 /tmp/tmpuui120mr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuui120mr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) return $x;\n    if ($n % 2 == 0) return $y;\n  \
    \  $c = false;\n    for ($i = 3; $i < sqrt($n); $i+=2) {\n        if ($n % $i\
    \ == 0) {\n            $c = true;\n            break;\n        }\n    }\n    return\
    \ $c ? $y : $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynzi96ro.php:33\n\
    Stack trace:\n#0 /tmp/tmpynzi96ro.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpynzi96ro.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n <= 1) return $y;\n    for ($i = 2; $i < $n; $i++) {\n\
    \        if ($n % $i == 0) return $y;\n    }\n    return $x;\n}\necho x_or_y(7,\
    \ 34, 12);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '34'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t// Only variables can be passed by reference from PHP 5.0.5 onwards\n\
    \t$is_prime = function($number) use(&$is_prime) {\n\t    if ($number == 1) {\n\
    \t        return false;\n\t    }\n\t    \n\t    for ($i = 2; $i <= sqrt($number);\
    \ $i++) {\n\t        if ($number % $i == 0) {\n\t            return false;\n\t\
    \        }\n\t    }\n\t    return true;\n\t};\n\t\n\treturn $is_prime($n) ? $x\
    \ : $y;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\\
    n\";\necho x_or_y(31, 2, 1) . \"\\n\";\necho x_or_y(53, 1, 2) . \"\\n\";\necho\
    \ x_or_y(2, 2, 1) . \"\\n\";\necho x_or_y(3, 2, 1) . \"\\n\";\necho x_or_y(4,\
    \ 2, 1) . \"\\n\";\necho x_or_y(5, 2, 1) . \"\\n\";\necho x_or_y(6, 2, 1) . \"\
    \\n\";\necho x_or_y(7, 2, 1) . \"\\n\";\necho x_or_y(8, 2, 1) . \"\\n\";\necho\
    \ x_or_y(9, 2, 1) . \"\\n\";\necho x_or_y(10, 2, 1) . \"\\n\";\necho x_or_y(11,\
    \ 2, 1) . \"\\n\";\necho x_or_y(12, 2, 1) . \"\\n\";\necho x_or_y(13, 2, 1) .\
    \ \"\\n\";\necho x_or_y(14, 2, 1) . \"\\n\";\necho x_or_y(15, 2, 1) . \"\\n\"\
    ;\necho x_or_y(16, 2, 1) . \"\\n\";\necho x_or_y(17, 2, 1) . \"\\n\";\necho x_or_y(18,\
    \ 2, 1\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1gp0eenw.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$a = 2;\n\t$i = 1;\n\t$b = true;\n\twhile ($a <= sqrt($n)) {\n\t\
    \tif ($n % $a == 0) {\n\t\t\t$b = false;\n\t\t\tbreak;\n\t\t}\n\t\t$a++;\n\t}\n\
    \tif ($b) {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tr15qca.php:37\n\
    Stack trace:\n#0 /tmp/tmp_tr15qca.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_tr15qca.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\treturn $n % 2 != 0 ? $x : $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhqbnr3m.php:16\n\
    Stack trace:\n#0 /tmp/tmpqhqbnr3m.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqhqbnr3m.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n == 2 || $n == 3 || $n == 5 || $n == 7)\n        return\
    \ $x;\n    return $y;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_9e__za.php:20\n\
    Stack trace:\n#0 /tmp/tmpp_9e__za.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpp_9e__za.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7n8kpha.php:29\n\
    Stack trace:\n#0 /tmp/tmpa7n8kpha.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa7n8kpha.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpemjvivw7.php:28\n\
    Stack trace:\n#0 /tmp/tmpemjvivw7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpemjvivw7.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_numeric($n) && is_numeric($x) && is_numeric($y)) {\n   \
    \ $counter = 2;\n    $prime = false;\n    if ($n == 1) {\n      $prime = false;\n\
    \    } else if ($n == 2) {\n      $prime = true;\n    } else {\n      while ($counter\
    \ < $n) {\n        if ($n % $counter == 0) {\n          $prime = false;\n    \
    \      break;\n        } else {\n          $prime = true;\n        }\n       \
    \ $counter++;\n      }\n    }\n    if ($prime) {\n      return $x;\n    } else\
    \ {\n      return $y;\n    }\n  } else {\n    return 'Please enter a number';\n\
    \  }\n}\necho x_or_y(15, 8, 5);\necho '<br>';\necho x_or_y(7, 34, 12);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 5<br>34
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cs3ciw4.php:28\n\
    Stack trace:\n#0 /tmp/tmp2cs3ciw4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2cs3ciw4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsskiqowv.php:28\n\
    Stack trace:\n#0 /tmp/tmpsskiqowv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsskiqowv.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n === 2) return $x;\n    if ($n < 2 || $n % 2 === 0) return\
    \ $y;\n    $top = sqrt($n);\n    for ($i = 3; $i <= $top; $i += 2) {\n       \
    \ if ($n % $i === 0) return $y;\n    }\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if($n < 2) return $y;\n  if($n > 2) {\n    for($i = 2; $i < $n;\
    \ $i++) {\n      if($n % $i == 0) return $y;\n    }\n  }\n  return $x;\n}\n\n\
    echo x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n > 1) {\n        if (is_prime($n)) {\n            return\
    \ $x;\n        } else {\n            return $y;\n        }\n    } else {\n   \
    \     return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpn8jro9n_.php:9\nStack trace:\n#0 /tmp/tmpn8jro9n_.php(20): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpn8jro9n_.php(24): candidate(7, 34, 12)\n#2 /tmp/tmpn8jro9n_.php(36):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpn8jro9n_.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n// ...\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnn88xa3i.php:16\n\
    Stack trace:\n#0 /tmp/tmpnn88xa3i.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnn88xa3i.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n > 3 && $n % 2 === 0) {\n        return $y;\n    }\n  \
    \  if ($n > 3 && $n % 3 === 0) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppp3p3fxv.php:27\n\
    Stack trace:\n#0 /tmp/tmppp3p3fxv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppp3p3fxv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // check for prime\n  for ($i = 2; $i < $n; $i++) {\n    if ($n\
    \ % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpum5l1bsj.php:30\n\
    Stack trace:\n#0 /tmp/tmpum5l1bsj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpum5l1bsj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $is_prime = true;\n    for ($i = 2; $i < $n; $i++) {\n      \
    \  if ($n % $i == 0) {\n            $is_prime = false;\n            break;\n \
    \       }\n    }\n    if ($is_prime) {\n        return $x;\n    } else {\n   \
    \     return $y;\n    }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8znt6rxd.php:34\n\
    Stack trace:\n#0 /tmp/tmp8znt6rxd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8znt6rxd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09nlx2_m.php:32\n\
    Stack trace:\n#0 /tmp/tmp09nlx2_m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp09nlx2_m.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\necho x_or_y(13,\
    \ 14, 15) . \"\\n\";\necho x_or_y(5, 15, 13) . \"\\n\";\necho x_or_y(18, 1, 25)\
    \ . \"\\n\";\necho x_or_y(8, 3, 17) . \"\\n\";\necho x_or_y(3, 12, 1) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n15\n25\n17\n12\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6j09yjk6.php:33\nStack trace:\n#0 /tmp/tmp6j09yjk6.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6j09yjk6.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$check = false;\n\tif ($n > 1) {\n\t\t$check = true;\n\t\tfor ($i\
    \ = 2; $i < $n; $i++) {\n\t\t\tif ($n % $i == 0) {\n\t\t\t\t$check = false;\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn $check ? $x : $y;\n}\n\necho x_or_y(7,\
    \ 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$is_prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n\
    \ % $i == 0) {\n\t\t\t$is_prime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($is_prime)\
    \ {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\necho x_or_y(7, 34,\
    \ 12);\necho \"<br>\";\necho x_or_y(15, 8, 5);\necho \"<br>\";\necho x_or_y(7,\
    \ 11, 12);\necho \"<br>\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>5<br>11<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixc913bz.php:41\n\
    Stack trace:\n#0 /tmp/tmpixc913bz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpixc913bz.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$n = (int)$n;\n\t$is_prime = true;\n\tfor ($i = 2; $i < $n; $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\t$is_prime = false;\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\tif ($is_prime) {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qibpe2y.php:36\n\
    Stack trace:\n#0 /tmp/tmp7qibpe2y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7qibpe2y.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $retval = $y;\n    if (is_prime($n)) {\n        $retval = $x;\n\
    \    }\n    return $retval;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp7vi9cm5f.php:9\nStack trace:\n#0 /tmp/tmp7vi9cm5f.php(16): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmp7vi9cm5f.php(20): candidate(7, 34, 12)\n#2 /tmp/tmp7vi9cm5f.php(32):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp7vi9cm5f.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = function($num) {\n        if ($num < 2) return false;\n\
    \        if ($num == 2) return true;\n        if ($num % 2 == 0) return false;\n\
    \        for ($i = 3; $i <= ceil(sqrt($num)); $i = $i + 2) {\n            if($num\
    \ % $i == 0) return false;\n        }\n        return true;\n    };\n    if ($isPrime($n))\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $result = $y;\n    for ($i = 2; $i <= $n / 2; $i++) {\n     \
    \   if ($n % $i == 0) {\n            $result = $x;\n            break;\n     \
    \   }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_rhwfvy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_rhwfvy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpn_rhwfvy.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if($n == 2) {\n    return $x;\n  }\n\n  for($i = 2; $i < $n; $i++)\
    \ {\n    if($n % $i == 0) {\n      return $y;\n    }\n  }\n\n  return $x;\n}\n\
    \necho x_or_y(7, 34, 12) . PHP_EOL;\necho x_or_y(15, 8, 5) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wok3jq2.php:36\n\
    Stack trace:\n#0 /tmp/tmp6wok3jq2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6wok3jq2.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeuw79464.php:28\n\
    Stack trace:\n#0 /tmp/tmpeuw79464.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeuw79464.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code here.\n    if ($n > 1 && $n < 4) {\n        return\
    \ $x;\n    }\n    elseif ($n%2 == 0 || $n%3 == 0) {\n        return $y;\n    }\n\
    \    else {\n        for ($i = 5; $i < sqrt($n); $i += 6) {\n            if ($n%$i\
    \ == 0 || $n%($i+2) == 0) {\n                return $y;\n            }\n     \
    \   }\n        return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26tjwqj7.php:38\n\
    Stack trace:\n#0 /tmp/tmp26tjwqj7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp26tjwqj7.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n//...\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9lm9ha4.php:15\n\
    Stack trace:\n#0 /tmp/tmpq9lm9ha4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpq9lm9ha4.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_int($n) && $n > 1) {\n        if ($n === 2) {\n      \
    \      return $x;\n        } else {\n            $start = 3;\n            while\
    \ ($start < $n) {\n                if ($n % $start === 0) {\n                \
    \    return $y;\n                }\n                $start += 2;\n           \
    \ }\n            return $x;\n        }\n    } else {\n        return \"Given number\
    \ is not a prime number.\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8csftbz.php:39\n\
    Stack trace:\n#0 /tmp/tmpf8csftbz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpf8csftbz.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n\
    \ % $i == 0) {\n            $sum++;\n        }\n    }\n    if ($sum == 2) {\n\
    \        return $x;\n    } else {\n        return $y;\n    }\n}\necho x_or_y(7,\
    \ 34, 12);\necho \"<br>\";\necho x_or_y(15, 8, 5);\necho \"<br>\";\necho x_or_y(13,\
    \ 24, 13);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 34<br>5<br>24
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $prime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i\
    \ == 0) {\n      $prime = false;\n      break;\n    }\n  }\n  if ($prime) {\n\
    \    return $x;\n  } else {\n    return $y;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcyk4vtxj.php:35\n\
    Stack trace:\n#0 /tmp/tmpcyk4vtxj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcyk4vtxj.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n      if ($n % $i == 0) {\n  \
    \      return $y;\n      }\n    }\n    return $x;\n  }\n  echo x_or_y(15, 8, 5);\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2fo08r7.php:29\n\
    Stack trace:\n#0 /tmp/tmpt2fo08r7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt2fo08r7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code here.\n    // Please start by writing your own is_prime()\
    \ function!\n    return ($n == 2 || $n == 3 || $n == 5 || $n == 7) ? $x : $y;\n\
    }\n\necho x_or_y(7, 34, 12) . PHP_EOL;\necho x_or_y(15, 8, 5) . PHP_EOL;\necho\
    \ x_or_y(25, 5, 8) . PHP_EOL;\necho x_or_y(105, 12, 7) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n8\n7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdy6wv1lt.php:25\n\
    Stack trace:\n#0 /tmp/tmpdy6wv1lt.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdy6wv1lt.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) return $y;\n    if ($n == 2) return $x;\n    for\
    \ ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) return $y;\n    }\n   \
    \ return $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12).\"\\n\";\necho x_or_y(15, 8, 5).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk46ld6cq.php:31\n\
    Stack trace:\n#0 /tmp/tmpk46ld6cq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk46ld6cq.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    }\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp1qo23p8n.php:8\nStack trace:\n#0 /tmp/tmp1qo23p8n.php(15): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmp1qo23p8n.php(19): candidate(7, 34, 12)\n#2 /tmp/tmp1qo23p8n.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp1qo23p8n.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12);\necho x_or_y(15, 8, 5);\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "345\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8noy1k_.php:31\n\
    Stack trace:\n#0 /tmp/tmpw8noy1k_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw8noy1k_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif ($n<2) return $y;\n\tfor ($i=2; $i<=$n/2; $i++) {\n\t\tif ($n%$i==0)\
    \ return $y;\n\t}\n\treturn $x;\n}\n\necho x_or_y(7, 34, 12) . PHP_EOL;\necho\
    \ x_or_y(15, 8, 5) . PHP_EOL;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\treturn $n === prime($n) ? $x : $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmpyr2ivpfg.php:8\n\
    Stack trace:\n#0 /tmp/tmpyr2ivpfg.php(12): x_or_y(7, 34, 12)\n#1 /tmp/tmpyr2ivpfg.php(16):\
    \ candidate(7, 34, 12)\n#2 /tmp/tmpyr2ivpfg.php(28): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpyr2ivpfg.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$ret = 1;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\tif ($n % $i ==\
    \ 0) {\n\t\t\t$ret = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $ret ? $x : $y;\n\
    }\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpig8ulzqu.php:25\n\
    Stack trace:\n#0 /tmp/tmpig8ulzqu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpig8ulzqu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n == 2) {\n        return $x;\n    }\n    if($n == 1) {\n\
    \        return $y;\n    }\n    for($i = 2; $i <= $n/2; $i++) {\n        if($n\
    \ % $i == 0) {\n            return $y;\n        }\n    }\n    return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$isPrime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif($n %\
    \ $i == 0) {\n\t\t\t$isPrime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif($isPrime)\
    \ {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5dmz1nz.php:35\n\
    Stack trace:\n#0 /tmp/tmpa5dmz1nz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa5dmz1nz.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $i = 2;\n  if($n < 2) {\n    return $y;\n  }\n  else {\n    for(;\
    \ $i < $n; $i++) {\n      if($n % $i == 0) {\n        return $y;\n      }\n  \
    \  }\n    return $x;\n  }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $y;\n  } elseif ($n == 2) {\n    return\
    \ $x;\n  } else {\n    $dividers = 0;\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \    if ($n % $i == 0) {\n        $dividers++;\n      }\n    }\n    if ($dividers\
    \ == 2) {\n      return $x;\n    } else {\n      return $y;\n    }\n  }\n}\n\n\
    print_r(x_or_y(7, 34, 12));\nprint_r(x_or_y(15, 8, 5));\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '345'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t\
    return $y;\n\t\t}\n\t}\n\treturn $x;\n}\necho x_or_y(7, 34, 12);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnpllxut.php:29\n\
    Stack trace:\n#0 /tmp/tmpnnpllxut.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnnpllxut.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpy63mxfja.php:8\nStack trace:\n#0 /tmp/tmpy63mxfja.php(16): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpy63mxfja.php(20): candidate(7, 34, 12)\n#2 /tmp/tmpy63mxfja.php(32):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpy63mxfja.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $i = 2;\n  while ($i <= ($n - 1)) {\n    if ($n % $i == 0) {\n\
    \      return $y;\n    }\n    $i++;\n  }\n  return $x;\n}\n$x_or_y = x_or_y(7,\
    \ 34, 12);\necho $x_or_y;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbaw_v74d.php:32\n\
    Stack trace:\n#0 /tmp/tmpbaw_v74d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbaw_v74d.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // If a number $n is divisible by another $d then $n modulo $d\
    \ is 0.\n    // In other words, if $n % $d == 0 then $n is divisible by $d.\n\
    \    // This is a function that checks whether a number $n is divisible by\n \
    \   // any number from 2 to $d (exclusive).\n    function divisible($n, $d) {\n\
    \        if ($d <= 1) {\n            return false;\n        }\n        if ($n\
    \ % $d == 0) {\n            return true;\n        }\n        return divisible($n,\
    \ $d - 1);\n    }\n    if (divisible($n, $n - 1)) {\n        return $y;\n    }\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Cannot redeclare divisible() (previously declared in /tmp/tmp5uw9fcls.php:12)\
    \ in /tmp/tmp5uw9fcls.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // your code here\n    $prime = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103,\
    \ 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191,\
    \ 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277,\
    \ 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379,\
    \ 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467,\
    \ 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587,\
    \ 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677,\
    \ 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797,\
    \ 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907,\
    \ 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n    $primes\
    \ = [];\n    foreach ($prime as $key => $value) {\n    \t$primes[$value] = $value;\n\
    \    }\n    if(isset($primes[$n])) {\n    \treturn $x;\n    } else {\n    \treturn\
    \ $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9ehm85s.php:29\n\
    Stack trace:\n#0 /tmp/tmpw9ehm85s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw9ehm85s.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Check if n is a prime number\n    for ($i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            return $y;\n        }\n    }\n \
    \   return $x;\n}\necho x_or_y(7, 34, 12);\necho '<br>';\necho x_or_y(15, 8, 5);\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pvz00v0.php:32\n\
    Stack trace:\n#0 /tmp/tmp_pvz00v0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_pvz00v0.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n))\n        return $x;\n    else\n        return\
    \ $y;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpal_l194w.php:8\nStack trace:\n#0 /tmp/tmpal_l194w.php(15): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpal_l194w.php(19): candidate(7, 34, 12)\n#2 /tmp/tmpal_l194w.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpal_l194w.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $result = 0;\n  $divisor = 2;\n  while ($divisor < $n) {\n    if\
    \ ($n % $divisor == 0) {\n      return $y;\n    }\n    $divisor++;\n  }\n  return\
    \ $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxp2wwwit.php:31\n\
    Stack trace:\n#0 /tmp/tmpxp2wwwit.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxp2wwwit.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tfor ($i = $n - 1; $i > 1; $i--) {\n\t\tif ($n % $i == 0) return\
    \ $y;\n\t}\n\treturn $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bfclkr1.php:26\n\
    Stack trace:\n#0 /tmp/tmp_bfclkr1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_bfclkr1.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif($n == 1) {\n\t\treturn $y;\n\t} else if($n == 2) {\n\t\treturn\
    \ $x;\n\t} else {\n\t\tfor($i = 2; $i < $n; $i++) {\n\t\t\tif($n % $i == 0) {\n\
    \t\t\t\treturn $y;\n\t\t\t}\n\t\t}\n\t\treturn $x;\n\t}\n}\necho x_or_y(7, 34,\
    \ 12);\necho x_or_y(15, 8, 5);\necho x_or_y(1, 7, 12);\necho x_or_y(2, 5, 7);\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '345125'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $result = ($n == 2 || $n == 3 || $n == 5 || $n == 7) ? $x : $y;\n\
    \  return $result;\n}\n\necho x_or_y(9, 24, 16);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw41j6u0b.php:21\n\
    Stack trace:\n#0 /tmp/tmpw41j6u0b.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw41j6u0b.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $a = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n %\
    \ $i == 0) {\n            $a++;\n        }\n    }\n    if ($a == 2) {\n      \
    \  return $x;\n    } else {\n        return $y;\n    }\n}\n\necho x_or_y(7, 34,\
    \ 12) . \"<br>\";\necho x_or_y(15, 8, 5) . \"<br>\";\necho x_or_y(2, 3, 1) . \"\
    <br>\";\necho x_or_y(9, 1, 1) . \"<br>\";\nfunction candidate(...$args) {\n  \
    \  return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 34<br>5<br>3<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(15,\
    \ 8, 5);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu180rey7.php:30\n\
    Stack trace:\n#0 /tmp/tmpu180rey7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpu180rey7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if($n % 2 == 0) {\n    return $y;\n  }\n  return $x;\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ut0ff4v.php:19\n\
    Stack trace:\n#0 /tmp/tmp6ut0ff4v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6ut0ff4v.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$n = 8;\n\t$x = 34;\n\t$y = 12;\n\treturn (is_prime($n) ? $x :\
    \ $y);\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5a8zv1ro.php:11\nStack trace:\n#0 /tmp/tmp5a8zv1ro.php(15): x_or_y(8,\
    \ 34, 12)\n#1 /tmp/tmp5a8zv1ro.php(19): candidate(7, 34, 12)\n#2 /tmp/tmp5a8zv1ro.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp5a8zv1ro.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bbqpnjw.php:29\n\
    Stack trace:\n#0 /tmp/tmp2bbqpnjw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2bbqpnjw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    }\n    return $y;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp33g07ibi.php:8\nStack trace:\n#0 /tmp/tmp33g07ibi.php(14): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmp33g07ibi.php(18): candidate(7, 34, 12)\n#2 /tmp/tmp33g07ibi.php(30):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp33g07ibi.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n > 0) {\n        $i = 2;\n        $status = true;\n   \
    \     while ($i <= $n / 2) {\n            if ($n % $i == 0) {\n              \
    \  $status = false;\n                break;\n            }\n            $i++;\n\
    \        }\n        if ($status) {\n            return $x;\n        } else {\n\
    \            return $y;\n        }\n    } else {\n        return 0;\n    }\n}\n\
    echo x_or_y(15, 8, 5);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzz0un0sf.php:41\n\
    Stack trace:\n#0 /tmp/tmpzz0un0sf.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzz0un0sf.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $i = 1;\n  $counter = 0;\n  while ($i < $n) {\n    if ($n % $i\
    \ == 0) {\n      $counter++;\n    }\n    $i++;\n  }\n  if ($counter > 1) {\n \
    \   return $y;\n  } else {\n    return $x;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb28871u6.php:36\n\
    Stack trace:\n#0 /tmp/tmpb28871u6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb28871u6.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . PHP_EOL;\necho x_or_y(15,\
    \ 8, 5) . PHP_EOL;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bp8rqzy.php:22\n\
    Stack trace:\n#0 /tmp/tmp5bp8rqzy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5bp8rqzy.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $value = $y;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i\
    \ == 0) {\n      $value = $x;\n      break;\n    }\n  }\n  return $value;\n}\n\
    \necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnh7yt_ge.php:25\n\
    Stack trace:\n#0 /tmp/tmpnh7yt_ge.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnh7yt_ge.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd53cs6m6.php:15\n\
    Stack trace:\n#0 /tmp/tmpd53cs6m6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpd53cs6m6.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // your code here\n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps2t6eet0.php:17\n\
    Stack trace:\n#0 /tmp/tmps2t6eet0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmps2t6eet0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n <= 2) {\n      return $x;\n    }\n    for($i = 2; $i <\
    \ $n; $i++) {\n      if($n % $i == 0) {\n        return $y;\n      }\n    }\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsr09rzz.php:32\n\
    Stack trace:\n#0 /tmp/tmphsr09rzz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphsr09rzz.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t\
    return $y;\n\t\t}\n\t}\n\treturn $x;\n}\n\n$result = x_or_y(7, 34, 12);\nvar_dump($result);\n\
    \n$result = x_or_y(15, 8, 5);\nvar_dump($result);\n\n$result = x_or_y(7, -9, -1);\n\
    var_dump($result);\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(34)\nint(5)\nint(-9)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpawwb1cky.php:38\nStack trace:\n#0 /tmp/tmpawwb1cky.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpawwb1cky.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$isPrime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n %\
    \ $i == 0) {\n\t\t\t$isPrime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $isPrime\
    \ ? $x : $y;\n}\n$result = x_or_y(7, 34, 12);\nvar_dump($result);\n$result = x_or_y(15,\
    \ 8, 5);\nvar_dump($result);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "int(34)\nint(5)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzoh5ozwq.php:34\n\
    Stack trace:\n#0 /tmp/tmpzoh5ozwq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzoh5ozwq.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $number = range(2, ceil($n / 2));\n  $numbers = array_merge($number,\
    \ array($n));\n  $count = count($numbers);\n  for ($i = 0; $i < $count; $i++)\
    \ {\n    if ($n % $numbers[$i] == 0) {\n      return $y;\n    }\n  }\n  return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpup9l30ip.php:24\n\
    Stack trace:\n#0 /tmp/tmpup9l30ip.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpup9l30ip.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  if ($n == 2) {\n    return\
    \ $x;\n  }\n  $limit = ceil(sqrt($n));\n  for ($i = 2; $i <= $limit; $i++) {\n\
    \    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\nprint(x_or_y(7,\
    \ 34, 12) . \"\\n\");\nprint(x_or_y(15, 8, 5) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\necho x_or_y(7, 34,\
    \ 12) . PHP_EOL;\necho x_or_y(15, 8, 5) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4h0p2pz.php:31\n\
    Stack trace:\n#0 /tmp/tmpd4h0p2pz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd4h0p2pz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $result = 0;\n  if ($n % 2 == 0 && $n != 2) {\n    $result = $y;\n\
    \  } else {\n    $result = $x;\n  }\n  return $result;\n}\n\necho x_or_y(7, 34,\
    \ 12).\"\\n\";\necho x_or_y(15, 8, 5).\"\\n\";\necho x_or_y(2, 9, 3).\"\\n\";\n\
    echo x_or_y(5, 2, 1).\"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n9\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejrpeuag.php:27\n\
    Stack trace:\n#0 /tmp/tmpejrpeuag.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpejrpeuag.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    }\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpzn9w01x8.php:8\nStack trace:\n#0 /tmp/tmpzn9w01x8.php(15): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpzn9w01x8.php(19): candidate(7, 34, 12)\n#2 /tmp/tmpzn9w01x8.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpzn9w01x8.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm07hq0sm.php:15\n\
    Stack trace:\n#0 /tmp/tmpm07hq0sm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm07hq0sm.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif (is_prime($n))\n\t\treturn $x;\n\telse\n\t\treturn $y;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbpmo8_pr.php:8\nStack trace:\n#0 /tmp/tmpbpmo8_pr.php(15): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpbpmo8_pr.php(19): candidate(7, 34, 12)\n#2 /tmp/tmpbpmo8_pr.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpbpmo8_pr.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n)) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpejph6az4.php:8\nStack trace:\n#0 /tmp/tmpejph6az4.php(16): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpejph6az4.php(20): candidate(7, 34, 12)\n#2 /tmp/tmpejph6az4.php(32):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpejph6az4.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // code here\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6nxuzb8i.php:15\n\
    Stack trace:\n#0 /tmp/tmp6nxuzb8i.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6nxuzb8i.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$i = 2;\n\t$sqrt_n = sqrt($n);\n\twhile ($i <= $sqrt_n) {\n\t\t\
    if ($n % $i == 0) {\n\t\t\treturn $y;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $x;\n}\n\
    \necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "345\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7n9yk92.php:34\n\
    Stack trace:\n#0 /tmp/tmpl7n9yk92.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpl7n9yk92.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $i = 2;\n  while ($i < $n) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n    $i++;\n  }\n  return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_mhnwisa.php:31\n\
    Stack trace:\n#0 /tmp/tmp_mhnwisa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_mhnwisa.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n <= 1) return $y;\n  for ($i = 2; $i < $n; $i++) {\n    if\
    \ ($n % $i == 0) return $y;\n  }\n  return $x;\n}\n\necho x_or_y(7, 34, 12) .\
    \ \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$sq_n = sqrt($n);\n\tfor ($i = 2; $i <= $sq_n; $i++) {\n\t\tif\
    \ ($n % $i == 0) {\n\t\t\treturn $y;\n\t\t}\n\t}\n\treturn $x;\n}\n\necho x_or_y(7,\
    \ 34, 12).\"\\n\";\necho x_or_y(15, 8, 5).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv3ex887.php:32\n\
    Stack trace:\n#0 /tmp/tmpqv3ex887.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqv3ex887.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t// Prime numbers have only two divisors: 1 and itself.\n\t// If\
    \ a number, smaller than the number itself, \n\t// is a divisor of the number,\
    \ then the number is not prime.\n\t$c = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\
    \t\tif ($n % $i == 0) {\n\t\t\t$c++;\n\t\t}\n\t}\n\tif ($c == 2) {\n\t\treturn\
    \ $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n$n = 7;\n$x = 34;\n$y = 12;\necho x_or_y($n,\
    \ $x, $y);\necho \"<br/>\";\n$n = 15;\n$x = 8;\n$y = 5;\necho x_or_y($n, $x, $y);\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 34<br/>5
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // $n = intval($n);\n    // $x = intval($x);\n    // $y = intval($y);\n\
    \    if($n<2) return $y;\n    if($n==2) return $x;\n    if($n%2==0) return $y;\n\
    \    for($i=3;$i<=(int)sqrt($n);$i+=2)\n        if($n%$i==0) return $y;\n    return\
    \ $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$remainder=array();\n\t$i=2;\n\t$j=0;\n\tif ($n==1) {\n\t\treturn\
    \ $y;\n\t}\n\twhile ($i<$n) {\n\t\t$remainder[$j]=$n%$i;\n\t\tif ($remainder[$j]==0)\
    \ {\n\t\t\treturn $y;\n\t\t}\n\t\t$i++;\n\t\t$j++;\n\t}\n\treturn $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $i = 2;\n    while ($i <= $n/2) {\n        if ($n % $i == 0)\
    \ {\n            return $y;\n        }\n        $i++;\n    }\n    return $x;\n\
    }\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuatyy0cq.php:32\n\
    Stack trace:\n#0 /tmp/tmpuatyy0cq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuatyy0cq.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n\n    for ($i = 2;\
    \ $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n    \
    \    }\n    }\n\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\n\necho x_or_y(7, 34, 12);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7w_hk1s9.php:30\n\
    Stack trace:\n#0 /tmp/tmp7w_hk1s9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7w_hk1s9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if($n % $i == 0) {\n            $isPrime = false;\n            break;\n    \
    \    }\n    }\n    if($isPrime) {\n        return $x;\n    } else {\n        return\
    \ $y;\n    }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprv70xdkd.php:34\n\
    Stack trace:\n#0 /tmp/tmprv70xdkd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprv70xdkd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $result = 0;\n  for ($i = 2; $i < $n / 2; $i++) {\n    if ($n %\
    \ $i == 0) {\n      $result = $y;\n      break;\n    }\n  }\n  if ($result ==\
    \ 0) {\n    $result = $x;\n  }\n  return $result;\n}\necho x_or_y(7, 34, 12) .\
    \ '<br>';\necho x_or_y(15, 8, 5) . '<br>';\necho x_or_y(7, 34, 12) . '<br>';\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>5<br>34<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_70v9fsp.php:36\n\
    Stack trace:\n#0 /tmp/tmp_70v9fsp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_70v9fsp.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59od4z74.php:15\n\
    Stack trace:\n#0 /tmp/tmp59od4z74.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp59od4z74.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $result = 0;\n    $i = 0;\n    for ($i=2; $i < $n; $i++) {\n\
    \        if ($n % $i == 0) {\n            $result = $y;\n            break;\n\
    \        }\n    }\n    if ($result == 0) {\n        $result = $x;\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jkmvdh1.php:34\n\
    Stack trace:\n#0 /tmp/tmp8jkmvdh1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8jkmvdh1.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$arr = array();\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t$arr[$i]\
    \ = $i;\n\t}\n\t$arr[1] = 0;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($arr[$i]\
    \ != 0) {\n\t\t\tfor ($j = $i * $i; $j < $n; $j += $i) {\n\t\t\t\t$arr[$j] = 0;\n\
    \t\t\t}\n\t\t}\n\t}\n\tif ($arr[$n - 1] == 0) {\n\t\treturn $y;\n\t} else {\n\t\
    \treturn $x;\n\t}\n}\necho x_or_y(7, 34, 12);\nfunction candidate(...$args) {\n\
    \    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvr3pskay.php:32\n\
    Stack trace:\n#0 /tmp/tmpvr3pskay.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvr3pskay.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif($n % $i == 0) {\n\t\t\treturn\
    \ $y;\n\t\t}\n\t}\n\treturn $x;\n}\n\necho x_or_y(7, 34, 12) . \"<br>\";\necho\
    \ x_or_y(15, 8, 5) . \"<br>\";\necho x_or_y(43, 8, 5) . \"<br>\";\necho x_or_y(49,\
    \ 8, 5) . \"<br>\";\necho x_or_y(6, 8, 5) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>5<br>8<br>5<br>5<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmprjueos37.php:34\nStack trace:\n#0 /tmp/tmprjueos37.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmprjueos37.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6b53q5js.php:28\n\
    Stack trace:\n#0 /tmp/tmp6b53q5js.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6b53q5js.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2 || $n % 2 == 0) {\n        return $y;\n    }\n   \
    \ $i = 3;\n    while ($i * $i <= $n) {\n        if ($n % $i == 0) {\n        \
    \    return $y;\n        }\n        $i += 2;\n    }\n    return $x;\n}\n\necho\
    \ x_or_y(7, 34, 12), PHP_EOL;\necho x_or_y(15, 8, 5), PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjj7g5ca.php:37\n\
    Stack trace:\n#0 /tmp/tmptjj7g5ca.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptjj7g5ca.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp394c3hd8.php:28\n\
    Stack trace:\n#0 /tmp/tmp394c3hd8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp394c3hd8.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $a = $x;\n    $b = $y;\n    $c = $n;\n    $i = 1;\n    $res =\
    \ 1;\n    while($i<=$c){\n        if($c%$i==0){\n            $res=$res+1;\n  \
    \      }\n        $i++;\n    }\n    if($res==2){\n        return $a;\n    }\n\
    \    else{\n        return $b;\n    }\n}\n\necho x_or_y(7, 34, 12);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8nm6kqk.php:33\n\
    Stack trace:\n#0 /tmp/tmpc8nm6kqk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc8nm6kqk.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwikw07gm.php:34\n\
    Stack trace:\n#0 /tmp/tmpwikw07gm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwikw07gm.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n === 2) return $x;\n  if ($n === 3) return $x;\n  if ($n\
    \ === 5) return $x;\n  if ($n === 7) return $x;\n  if ($n === 11) return $x;\n\
    \  if ($n === 13) return $x;\n  if ($n === 17) return $x;\n  if ($n === 19) return\
    \ $x;\n  if ($n === 23) return $x;\n  if ($n === 29) return $x;\n  if ($n ===\
    \ 31) return $x;\n  if ($n === 37) return $x;\n  if ($n === 41) return $x;\n \
    \ if ($n === 43) return $x;\n  if ($n === 47) return $x;\n  if ($n === 53) return\
    \ $x;\n  if ($n === 59) return $x;\n  if ($n === 61) return $x;\n  if ($n ===\
    \ 67) return $x;\n  if ($n === 71) return $x;\n  if ($n === 73) return $x;\n \
    \ if ($n === 79) return $x;\n  if ($n === 83) return $x;\n  if ($n === 89) return\
    \ $x;\n  if ($n === 97) return $x;\n  return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzhcasyo.php:44\n\
    Stack trace:\n#0 /tmp/tmpjzhcasyo.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjzhcasyo.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  $isPrime = true;\n  for ($i\
    \ = 2; $i <= $n/2; $i++) {\n    if ($n % $i == 0) {\n      $isPrime = false;\n\
    \      break;\n    }\n  }\n  if ($isPrime) {\n    return $x;\n  }\n  return $y;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18zkf945.php:29\n\
    Stack trace:\n#0 /tmp/tmp18zkf945.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp18zkf945.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    }\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpra18srvq.php:8\nStack trace:\n#0 /tmp/tmpra18srvq.php(15): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpra18srvq.php(19): candidate(7, 34, 12)\n#2 /tmp/tmpra18srvq.php(31):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpra18srvq.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // Return the appropriate value\n}\necho x_or_y(7, 34, 12) == 34;\n\
    echo x_or_y(15, 8, 5) == 5;\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7trbxon.php:18\n\
    Stack trace:\n#0 /tmp/tmpx7trbxon.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpx7trbxon.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $result = 0;\n    if (is_numeric($n) && is_numeric($x) && is_numeric($y))\
    \ {\n        $prime = true;\n        if ($n <= 2) {\n            $prime = false;\n\
    \        } else {\n            for ($i = 2; $i < $n; $i++) {\n               \
    \ if ($n % $i == 0) {\n                    $prime = false;\n                 \
    \   break;\n                }\n            }\n        }\n        if ($prime) {\n\
    \            $result = $x;\n        } else {\n            $result = $y;\n    \
    \    }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5_ermjq.php:43\n\
    Stack trace:\n#0 /tmp/tmpo5_ermjq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo5_ermjq.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $i = 2;\n    while ($i <= $n / 2) {\n        if ($n % $i == 0)\
    \ {\n            return $y;\n        }\n        $i++;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ksiz3ux.php:30\n\
    Stack trace:\n#0 /tmp/tmp5ksiz3ux.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5ksiz3ux.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7ugf510.php:29\n\
    Stack trace:\n#0 /tmp/tmpc7ugf510.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpc7ugf510.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 === 0) {\n    return $x;\n  }\n  return $y;\n}\n\n$n\
    \ = rand(1, 100);\n$x = rand(1, 100);\n$y = rand(1, 100);\necho \"n = $n, x =\
    \ $x, y = $y\\n\";\necho \"Result = \" . x_or_y($n, $x, $y) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "n = 2, x = 92, y = 58\nResult = 92\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpqvoyps3b.php:24\nStack trace:\n#0 /tmp/tmpqvoyps3b.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqvoyps3b.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t// TODO: implement this function\n\t$result = true;\n\tfor ($i\
    \ = 2; $i < $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$result = false;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\tif ($result == true) {\n\t\treturn $x;\n\t} else {\n\t\
    \treturn $y;\n\t}\n}\n\necho x_or_y(7, 34, 12) . \"\\n\"; // should print 34\n\
    echo x_or_y(15, 8, 5) . \"\\n\"; // should print 5\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog81tc3a.php:38\n\
    Stack trace:\n#0 /tmp/tmpog81tc3a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpog81tc3a.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if($n<2) return $y;\n  for($i=2; $i<$n; $i++) {\n    if($n%$i===0)\
    \ return $y;\n  }\n  return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // check and return $x if $n is prime, otherwise return $y\n  for\
    \ ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return $y;\n    }\n\
    \  }\n  return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppp6rydkg.php:30\n\
    Stack trace:\n#0 /tmp/tmppp6rydkg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppp6rydkg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n// Function will take a number and check it for prime.\n    function\
    \ isPrime($n) {\n        // If number is <= 1, return false\n        if ($n <=\
    \ 1) {\n            return false;\n        }\n        // If number is 1 or 2,\
    \ return true\n        if ($n <= 3) {\n            return true;\n        }\n \
    \       // If number can be divided by two, return false\n        if ($n % 2 ==\
    \ 0 || $n % 3 == 0) {\n            return false;\n        }\n        for ($i =\
    \ 5; $i * $i <= $n; $i = $i + 6) {\n            if ($n % $i == 0 || $n % ($i +\
    \ 2) == 0) {\n                return false;\n            }\n        }\n      \
    \  return true;\n    }\n    if (isPrime($n)) {\n        return $x;\n    } else\
    \ {\n        return $y;\n    }\n}\necho x_or_y(5, 7, 9);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "7\nFatal error: Cannot redeclare isPrime() (previously declared in /tmp/tmpazu8k9jb.php:9)\
    \ in /tmp/tmpazu8k9jb.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\nprint(x_or_y(7, 34, 12) . \"\\n\");\nprint(x_or_y(15,\
    \ 8, 5) . \"\\n\");\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34fynowl.php:30\n\
    Stack trace:\n#0 /tmp/tmp34fynowl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp34fynowl.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example: print \"Hello world!\";\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfg6jg4c.php:17\n\
    Stack trace:\n#0 /tmp/tmpyfg6jg4c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyfg6jg4c.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n%2 == 0 && $n != 2) {\n        return $y;\n    }\n\n   \
    \ for($i = 3; $i <= sqrt($n); $i++) {\n        if($n%$i == 0) {\n            return\
    \ $y;\n        }\n    }\n\n    return $x;\n}\n\nfunction candidate(...$args) {\n\
    \    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8m_16hlp.php:34\n\
    Stack trace:\n#0 /tmp/tmp8m_16hlp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8m_16hlp.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        } else {\n            return $x;\n        }\n\
    \    }\n}\n\necho x_or_y(7, 34, 12) . '<br>';\necho x_or_y(15, 8, 5) . '<br>';\n\
    \nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34<br>8<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypmel265.php:26\n\
    Stack trace:\n#0 /tmp/tmpypmel265.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpypmel265.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$is_prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n\
    \ % $i == 0) {\n\t\t\t$is_prime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($is_prime)\
    \ {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\necho x_or_y(15, 8, 5);\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfl2_27nb.php:35\n\
    Stack trace:\n#0 /tmp/tmpfl2_27nb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfl2_27nb.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1 || $n == 2) {\n    return $y;\n  }\n  for ($i = 2;\
    \ $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return\
    \ $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xun57yp.php:32\n\
    Stack trace:\n#0 /tmp/tmp9xun57yp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9xun57yp.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code goes here...\n    for ($i = 2; $i < $n; $i++) {\n\
    \        if ($n % $i == 0) return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3tm47qa1.php:28\n\
    Stack trace:\n#0 /tmp/tmp3tm47qa1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3tm47qa1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $prime = true;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $prime = false;\n            break;\n        }\n\
    \    }\n    if ($prime) {\n        return $x;\n    } else {\n        return $y;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxi8wkhza.php:34\n\
    Stack trace:\n#0 /tmp/tmpxi8wkhza.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxi8wkhza.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t// Your code here...\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbn353z5i.php:15\n\
    Stack trace:\n#0 /tmp/tmpbn353z5i.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbn353z5i.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$ret = is_prime($n) ? $x : $y;\n\treturn $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpz2xessyx.php:8\nStack trace:\n#0 /tmp/tmpz2xessyx.php(13): x_or_y(7,\
    \ 34, 12)\n#1 /tmp/tmpz2xessyx.php(17): candidate(7, 34, 12)\n#2 /tmp/tmpz2xessyx.php(29):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpz2xessyx.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception

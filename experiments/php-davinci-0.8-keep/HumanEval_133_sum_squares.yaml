name: HumanEval_133_sum_squares
language: php
prompt: "<?php\n// You are given a list of numbers.\n// You need to return the sum\
  \ of squared numbers in the given list,\n// round each element in the list to the\
  \ upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output should\
  \ be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the\
  \ output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For\
  \ lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n"
tests: "function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0)) !==\
  \ 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4, 4.2,\
  \ 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
  \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
  \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9)) !== 1086) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== 0)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0)) !==\
  \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, 1.0,\
  \ 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $value = ceil($value);\n\
    \    $sum += $value * $value;\n  }\n  return $sum;\n}\n", "    $lst = array_map('ceil',\
    \ $lst);\n    return array_sum(array_map(function($x) {\n        return $x * $x;\n\
    \    }, $lst));\n}\n", "    $answer = 0;\n    foreach ($lst as $value) {\n   \
    \     $answer += ceil($value) * ceil($value);\n    }\n    return $answer;\n}\n\
    \n$lst = [1, 2, 3];\nprint_r(sum_squares($lst));\necho PHP_EOL;\n\n$lst = [1,\
    \ 4, 9];\nprint_r(sum_squares($lst));\necho PHP_EOL;\n\n$lst = [1, 3, 5, 7];\n\
    print_r(sum_squares($lst));\necho PHP_EOL;\n\n$lst = [1.4, 4.2, 0];\nprint_r(sum_squares($lst));\n\
    echo PHP_EOL;\n\n$lst = [-2.4, 1, 1];\nprint_r(sum_squares($lst));\necho PHP_EOL;",
  "  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($x) {\
    \ return $x * $x; }, $lst));\n}\necho sum_squares([1,2,3]);\necho \"\\n\";\necho\
    \ sum_squares([1,4,9]);\necho \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\\
    n\";\necho sum_squares([1.4,4.2,0]);\necho \"\\n\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"\\n\";", "    $sum=0;\n    for($i=0;$i<count($lst);$i++){\n        $sum=$sum+ceil($lst[$i])*ceil($lst[$i]);\n\
    \    }\n  return $sum;\n}", "  $result = 0;\n  foreach ($lst as $item) {\n   \
    \ $ceiling = ceil($item);\n    $result += $ceiling * $ceiling;\n  }\n  return\
    \ $result;\n}", "  $newList = [];\n  $sum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    $newList[] = ceil($lst[$i]);\n  }\n  for ($i = 0; $i < count($newList);\
    \ $i++) {\n    $sum += $newList[$i] * $newList[$i];\n  }\n  return $sum;\n}\n\n\
    echo sum_squares([1, 2, 3]);\necho sum_squares([1, 4, 9]);\necho sum_squares([1,\
    \ 3, 5, 7]);\necho sum_squares([1.4, 4.2, 0]);\necho sum_squares([-2.4, 1, 1]);",
  "  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $value = ceil($value);\n\
    \    $value = $value * $value;\n    $sum += $value;\n  }\n  return $sum;\n}\n\
    echo sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho\
    \ sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\n\
    echo sum_squares([-2.4,1,1]) . \"\\n\";", "  $number = 0;\n  foreach ($lst as\
    \ $n) {\n    $n = ceil($n);\n    $number += $n * $n;\n  }\n  return $number;\n\
    }\n", "  $new_lst = [];\n  foreach ($lst as $num) {\n    $num = ceil($num);\n\
    \    $num = $num * $num;\n    array_push($new_lst, $num);\n  }\n  return array_sum($new_lst);\n\
    }\n\n$answer = sum_squares([1,2,3]);\nprint_r(\"$answer \\n\");\n\n$answer = sum_squares([1,4,9]);\n\
    print_r(\"$answer \\n\");\n\n$answer = sum_squares([1,3,5,7]);\nprint_r(\"$answer\
    \ \\n\");\n\n$answer = sum_squares([1.4,4.2,0]);\nprint_r(\"$answer \\n\");\n\n\
    $answer = sum_squares([-2.4,1,1]);\nprint_r(\"$answer \\n\");", "  $sum = 0;\n\
    \  foreach ($lst as $num) {\n    $sum += ceil($num) * ceil($num);\n  }\n  return\
    \ $sum;\n}\n\necho sum_squares([1,2,3]) . PHP_EOL;\necho sum_squares([1,4,9])\
    \ . PHP_EOL;\necho sum_squares([1,3,5,7]) . PHP_EOL;\necho sum_squares([1.4,4.2,0])\
    \ . PHP_EOL;\necho sum_squares([-2.4,1,1]) . PHP_EOL;", "  $square = [];\n  foreach\
    \ ($lst as $number) {\n    $number = ceil($number);\n    $square[] = $number *\
    \ $number;\n  }\n  return array_sum($square);\n}\n\necho sum_squares([1,2,3]);\n\
    echo \"\\n\";\necho sum_squares([1,4,9]);\necho \"\\n\";\necho sum_squares([1,3,5,7]);\n\
    echo \"\\n\";\necho sum_squares([1.4,4.2,0]);\necho \"\\n\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,4,4]);", "  $sum = 0;\n  for ($i = 0; $i\
    \ < count($lst); $i++) {\n    $sum += ceil($lst[$i]) * ceil($lst[$i]);\n  }\n\
    \  return $sum;\n}\n", "\t$result = 0;\n\tforeach ($lst as $value) {\n\t\t$result\
    \ += pow(ceil($value), 2);\n\t}\n\treturn $result;\n}\n", "    $result = 0;\n\
    \    foreach ($lst as $item) {\n        $item = ceil($item);\n        $result\
    \ += $item ** 2;\n    }\n    return $result;\n}\n", "  $result = 0;\n  foreach\
    \ ($lst as $number) {\n    $result += ceil($number) * ceil($number);\n  }\n  return\
    \ $result;\n}\n\necho sum_squares([1,2,3]) . '<br>';\necho sum_squares([1,4,9])\
    \ . '<br>';\necho sum_squares([1,3,5,7]) . '<br>';\necho sum_squares([1.4,4.2,0])\
    \ . '<br>';\necho sum_squares([-2.4,1,1]) . '<br>';\necho sum_squares([5.5,5.5,5.5])\
    \ . '<br>';\n", "  $newArr = [];\n  foreach ($lst as $value) {\n    array_push($newArr,\
    \ ceil($value));\n  }\n  $finalSum = 0;\n  foreach ($newArr as $value) {\n   \
    \ $newValue = $value * $value;\n    $finalSum += $newValue;\n  }\n  return $finalSum;\n\
    }\n", "\t$total = 0;\n\tforeach ($lst as $key => $value) {\n\t\t$total += ceil($value)\
    \ * ceil($value);\n\t}\n\treturn $total;\n}", "  $list = array_map('ceil', $lst);\n\
    \  return array_sum(array_map(function($number) {\n    return $number * $number;\n\
    \  }, $list));\n}\n\necho sum_squares([1,2,3]) . PHP_EOL;\necho sum_squares([1,4,9])\
    \ . PHP_EOL;\necho sum_squares([1,3,5,7]) . PHP_EOL;\necho sum_squares([1.4,4.2,0])\
    \ . PHP_EOL;\necho sum_squares([-2.4,1,1]) . PHP_EOL;", "  foreach ($lst as $key\
    \ => $value) {\n    $lst[$key] = round($value);\n  }\n  $result = array_sum(array_map(function($value)\
    \ {\n    return $value ** 2;\n  }, $lst));\n  return $result;\n}", "  foreach\
    \ ($lst as $key => $value) {\n    $lst[$key] = ceil($value);\n  }\n  return array_sum(array_map(function($a)\
    \ {\n    return $a ** 2;\n  }, $lst));\n}\n\necho sum_squares([1, 2, 3]) . PHP_EOL;\n\
    echo sum_squares([1, 4, 9]) . PHP_EOL;\necho sum_squares([1, 3, 5, 7]) . PHP_EOL;\n\
    echo sum_squares([1.4, 4.2, 0]) . PHP_EOL;\necho sum_squares([-2.4, 1, 1]) . PHP_EOL;",
  "    $arr = [];\n    foreach ($lst as $l) {\n        array_push($arr, ceil($l) **\
    \ 2);\n    }\n    return array_sum($arr);\n}", "// # code\n  foreach ($lst as\
    \ $key => $value) {\n    if($value % 1 !== 0){\n      $x = ceil($value);\n   \
    \   $arr[] = $x * $x;\n    }\n    else{\n      $arr[] = $value * $value;\n   \
    \ }\n  }\n  $total = array_sum($arr);\n  return $total;\n}", "    $sum=0;\n  \
    \  for($i=0;$i<count($lst);$i++){\n        $sum +=ceil($lst[$i])**2;\n    }\n\
    \    return $sum;\n}", '}', "    $sum = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        $sum += ceil($lst[$i]) * ceil($lst[$i]);\n    }\n    return\
    \ $sum;\n}\n", "  $result = 0;\n  foreach ($lst as $item) {\n    $result += ceil($item)\
    \ * ceil($item);\n  }\n  return $result;\n}", "    $arr = [];\n    foreach ($lst\
    \ as $value) {\n        $arr[] = ceil($value) ** 2;\n    }\n    return array_sum($arr);\n\
    }\necho sum_squares([1, 2, 3]) . '<br>';\necho sum_squares([1, 4, 9]) . '<br>';\n\
    echo sum_squares([1, 3, 5, 7]) . '<br>';\necho sum_squares([1.4, 4.2, 0]) . '<br>';\n\
    echo sum_squares([-2.4, 1, 1]);", "  foreach ($lst as $value) {\n    $value =\
    \ ceil($value);\n    $new_lst[] = $value;\n  }\n  foreach ($new_lst as $value)\
    \ {\n    $squared = $value * $value;\n    $squared_lst[] = $squared;\n  }\n  $sum\
    \ = array_sum($squared_lst);\n  return $sum;\n}\n\n$lst = [1,2,3];\necho sum_squares($lst)\
    \ . PHP_EOL;\n$lst = [1,4,9];\necho sum_squares($lst) . PHP_EOL;\n$lst = [1,3,5,7];\n\
    echo sum_squares($lst) . PHP_EOL;\n$lst = [1.4,4.2,0];\necho sum_squares($lst)\
    \ . PHP_EOL;\n$lst = [-2.4,1,1];\necho sum_squares($lst) . PHP_EOL;", "\n}\n",
  "    $result = 0;\n    foreach ($lst as $item) {\n        $result += ceil($item)\
    \ ** 2;\n    }\n    return $result;\n}\n$lst = [1, 2, 3];\necho(sum_squares($lst));",
  "    return array_sum(array_map(function($n) { return ceil($n) * ceil($n); }, $lst));\n\
    }\n", "  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n\
    \  }\n  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\n", "\t\n}\n$tests = [\n\
    \t[[1,2,3], 14],\n\t[[1,4,9], 98],\n\t[[1,3,5,7], 84],\n\t[[1.4,4.2,0], 29],\n\
    \t[[-2.4,1,1], 6],\n];\n$pass = true;\nforeach ($tests as $test) {\n\tif (sum_squares($test[0])\
    \ !== $test[1]) {\n\t\t$pass = false;\n\t\techo \"Failed on: \" . json_encode($test)\
    \ . \"\\n\";\n\t}\n}\nif ($pass) {\n\techo \"Pass\\n\";\n}", "  $res = 0;\n  foreach\
    \ ($lst as $val) {\n    $res += pow(ceil($val), 2);\n  }\n  return $res;\n}\n\
    echo sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\n\
    echo sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);", "  $lst = array_map('ceil',\
    \ $lst);\n  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += pow($num, 2);\n\
    \  }\n  return $sum;\n}\n\n$lst = [1,2,3];\nprint_r(sum_squares($lst));\n\n$lst\
    \ = [1,4,9];\nprint_r(sum_squares($lst));\n\n$lst = [1,3,5,7];\nprint_r(sum_squares($lst));\n\
    \n$lst = [1.4,4.2,0];\nprint_r(sum_squares($lst));\n\n$lst = [-2.4,1,1];\nprint_r(sum_squares($lst));",
  "  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($x) {\n\
    \    return $x * $x;\n  }, $lst));\n}\n", "  return array_sum(array_map(function($v)\
    \ { return pow($v, 2); }, $lst));\n}\n", "  $result = 0;\n  foreach ($lst as $value)\
    \ {\n    $result += ceil($value) ** 2;\n  }\n  return $result;\n}\n\nprint_r(sum_squares([1,2,3]));\n\
    echo PHP_EOL;\nprint_r(sum_squares([1,4,9]));\necho PHP_EOL;\nprint_r(sum_squares([1,3,5,7]));\n\
    echo PHP_EOL;\nprint_r(sum_squares([1.4,4.2,0]));\necho PHP_EOL;\nprint_r(sum_squares([-2.4,1,1]));\n\
    echo PHP_EOL;", "  $result = 0;\n  foreach ($lst as $value) {\n    $result +=\
    \ ceil($value)*ceil($value);\n  }\n  return $result;\n}\necho sum_squares([1,2,3])\
    \ . \"<br>\";\necho sum_squares([1,4,9]) . \"<br>\";\necho sum_squares([1,3,5,7])\
    \ . \"<br>\";\necho sum_squares([1.4,4.2,0]) . \"<br>\";\necho sum_squares([-2.4,1,1])\
    \ . \"<br>\";\n", "  $sq_sum = 0;\n  foreach ($lst as $item) {\n    $item = ceil($item);\n\
    \    $sq_sum += $item * $item;\n  }\n  return $sq_sum;\n}\n\n$lst = [1,2,3];\n\
    echo sum_squares($lst); // 14\n$lst = [1,4,9];\necho sum_squares($lst); // 98\n\
    $lst = [1,3,5,7];\necho sum_squares($lst); // 84\n$lst = [1.4,4.2,0];\necho sum_squares($lst);\
    \ // 29\n$lst = [-2.4,1,1];\necho sum_squares($lst); // 6", "  $ret = 0;\n  foreach\
    \ ($lst as $i) {\n    $ret += ceil($i) ** 2;\n  }\n  return $ret;\n}\n\necho sum_squares([1,2,3])\
    \ . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7])\
    \ . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1])\
    \ . \"\\n\";", '}', "  $results = array_map('ceil', $lst);\n  $sum = 0;\n  foreach\
    \ ($results as $value) {\n    $sum += $value * $value;\n  }\n  return $sum;\n\
    }\necho sum_squares([1,2,3]);", "  return array_sum(array_map(function($i) {\n\
    \    return ceil($i) * ceil($i);\n  }, $lst));\n}\n", "  $sum = 0;\n  foreach\
    \ ($lst as $item) {\n    $sum += ceil($item) * ceil($item);\n  }\n  return $sum;\n\
    }\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\n\
    echo sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\"\
    ;\necho sum_squares([-2.4,1,1]) . \"\\n\";", "  $output = 0;\n  foreach ($lst\
    \ as $l) {\n    $output += pow(ceil($l), 2);\n  }\n  return $output;\n}\n\necho\
    \ sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\necho \"\\\
    n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";", "  $i = 0;\n  $j\
    \ = 0;\n  foreach ($lst as $key => $value) {\n    $j = ceil($value);\n    $i +=\
    \ $j*$j;\n  }\n  return $i;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho\
    \ sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"\
    <br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"<br>\";\n ?>", "  $sum = 0;\n  foreach ($lst as $value) {\n    $value =\
    \ ceil($value);\n    $squared_value = $value * $value;\n    $sum += $squared_value;\n\
    \  }\n  return $sum;\n}", "  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($x)\
    \ { return $x * $x; }, $lst));\n}", "  $sum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    $sum += ceil($lst[$i]) ** 2;\n  }\n  return $sum;\n}\necho sum_squares([1,\
    \ 2, 3]);", "    $result = 0;\n    $length = count($lst);\n    for ($i = 0; $i\
    \ < $length; $i++) {\n        $result += ceil($lst[$i]) ** 2;\n    }\n    return\
    \ $result;\n}\n", "  $result = 0;\n  foreach ($lst as $value) {\n    $result +=\
    \ (int)$value * (int)$value;\n  }\n  return $result;\n}\necho sum_squares([1,2,3])\
    \ . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7])\
    \ . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1])\
    \ . \"\\n\";\n", "  foreach ($lst as $key => $value) {\n    $val = ceil($value);\n\
    \    $lst[$key] = $val * $val;\n  }\n  return array_sum($lst);\n}\n\nprint_r(sum_squares([1,\
    \ 2, 3]));\necho \"\\n\";\nprint_r(sum_squares([1, 4, 9]));\necho \"\\n\";\nprint_r(sum_squares([1,\
    \ 3, 5, 7]));\necho \"\\n\";\nprint_r(sum_squares([1.4, 4.2, 0]));\necho \"\\\
    n\";\nprint_r(sum_squares([-2.4, 1, 1]));\necho \"\\n\";", "  $lst = array_map(function($n)\
    \ {\n    return ceil($n);\n  }, $lst);\n  $result = 0;\n  foreach ($lst as $num)\
    \ {\n    $result += pow($num, 2);\n  }\n  return $result;\n}\necho sum_squares([1,2,3]);\n\
    echo \"<br />\";\necho sum_squares([1,4,9]);\necho \"<br />\";\necho sum_squares([1,3,5,7]);\n\
    echo \"<br />\";\necho sum_squares([1.4,4.2,0]);\necho \"<br />\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"<br />\";", "  $arr=array();\n  foreach($lst as $value){\n    $arr[]=ceil($value);\n\
    \  }\n  return array_sum(array_map(function($x){return $x*$x;},$arr));\n}", " \
    \ // your code here...\n}\nprint_r(sum_squares([1,2,3])); // 14\nprint_r(sum_squares([1,4,9]));\
    \ // 98\nprint_r(sum_squares([1,3,5,7])); // 84\nprint_r(sum_squares([1.4,4.2,0]));\
    \ // 29\nprint_r(sum_squares([-2.4,1,1])); // 6", "  return array_sum(array_map(function($x)\
    \ { return pow($x, 2); }, array_map('ceil', $lst)));\n}\nprint_r(sum_squares([1,2,3])\
    \ . \"\\n\");\nprint_r(sum_squares([1,4,9]) . \"\\n\");\nprint_r(sum_squares([1,3,5,7])\
    \ . \"\\n\");\nprint_r(sum_squares([1.4,4.2,0]) . \"\\n\");\nprint_r(sum_squares([-2.4,1,1])\
    \ . \"\\n\");", "  return array_sum(array_map('intval', $lst)) ** 2;\n}", "  $new_array\
    \ = [];\n  foreach ($lst as $key => $value) {\n    array_push($new_array, ceil($value));\n\
    \  }\n  $sum = 0;\n  foreach ($new_array as $key => $value) {\n    $sum += $value\
    \ ** 2;\n  }\n  return $sum;\n}\n$lst = [1,2,3];\necho sum_squares($lst);\necho\
    \ \"<br>\";\n$lst = [1,4,9];\necho sum_squares($lst);\necho \"<br>\";\n$lst =\
    \ [1,3,5,7];\necho sum_squares($lst);\necho \"<br>\";\n$lst = [1.4,4.2,0];\necho\
    \ sum_squares($lst);\necho \"<br>\";\n$lst = [-2.4,1,1];\necho sum_squares($lst);\n\
    echo \"<br>\";", "  $result = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n \
    \   $result += ceil($lst[$i]) * ceil($lst[$i]);\n  }\n  return $result;\n}\n\n\
    echo sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\n\
    echo sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\n", "  $sum = 0;\n\
    \  foreach ($lst as $number) {\n    $sum += ceil($number) ** 2;\n  }\n  return\
    \ $sum;\n}\necho sum_squares([1, 2, 3]) . \"<br />\";\necho sum_squares([1, 4,\
    \ 9]) . \"<br />\";\necho sum_squares([1, 3, 5, 7]) . \"<br />\";\necho sum_squares([1.4,\
    \ 4.2, 0]) . \"<br />\";\necho sum_squares([-2.4, 1, 1]) . \"<br />\";", "   \
    \ // your code here\n}\n", "  $result = 0;\n  foreach ($lst as $value) {\n   \
    \ $result += ceil($value) ** 2;\n  }\n  return $result;\n}\n", "  $sqSum = 0;\n\
    \  for ($i = 0; $i < count($lst); $i++) {\n    $lst[$i] = ceil($lst[$i]);\n  \
    \  $sqSum += pow($lst[$i], 2);\n  }\n  return $sqSum;\n}\n\necho sum_squares([1,2,3]);\n\
    echo \"<br>\";\necho sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\n\
    echo \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);",
  "  $sum = 0;\n  foreach ($lst as $n) {\n    $sum += ($n < 0 ? ceil($n) : floor($n))\
    \ ** 2;\n  }\n  return $sum;\n}\n", "    $sum = 0;\n    foreach ($lst as $num)\
    \ {\n        $sum += ceil($num) ** 2;\n    }\n    return $sum;\n}\n\nprint_r(sum_squares([1,\
    \ 2, 3]));\necho '<br>';\nprint_r(sum_squares([1, 4, 9]));\necho '<br>';\nprint_r(sum_squares([1,\
    \ 3, 5, 7]));\necho '<br>';\nprint_r(sum_squares([1.4, 4.2, 0]));\necho '<br>';\n\
    print_r(sum_squares([-2.4, 1, 1]));\necho '<br>';", "  return array_sum(array_map('ceil',\
    \ $lst)) ** 2;\n}\n\nprint_r(sum_squares([1,2,3]) . \"\\n\");\nprint_r(sum_squares([1,4,9])\
    \ . \"\\n\");\nprint_r(sum_squares([1,3,5,7]) . \"\\n\");\nprint_r(sum_squares([1.4,4.2,0])\
    \ . \"\\n\");\nprint_r(sum_squares([-2.4,1,1]) . \"\\n\");", "  $sum = 0;\n  foreach\
    \ ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n  return $sum;\n}\necho\
    \ sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\necho \"<br>\"\
    ;\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\n ?>", "// \treturn array_sum(array_map(function($x)\
    \ { return ceil($x)*ceil($x); }, $lst));\n\t$sum=0;\n\tforeach($lst as $item){\n\
    \t\t$sum+=pow(ceil($item),2);\n\t}\n\treturn $sum;\n}\n\necho sum_squares([1,2,3]);\n\
    echo sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\n\
    echo sum_squares([-2.4,1,1]);", "  //..\n  return array_sum(array_map(function($num){\n\
    \    return pow(ceil($num), 2);\n  }, $lst));\n}\n", "  $tot = 0;\n  foreach($lst\
    \ as $l){\n    $tot += pow(ceil($l),2);\n  }\n  return $tot;\n}\necho sum_squares([1,2,3]);\n\
    echo \"<br>\";\necho sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\n\
    echo \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"<br>\";\necho sum_squares([1,1,1]);\necho \"<br>\";\n ?>", "  $ceiling\
    \ = array_map('ceil', $lst);\n  $pow = array_map('pow', $ceiling, array_fill(0,\
    \ count($ceiling), 2));\n  return array_sum($pow);\n}\n", "  foreach ($lst as\
    \ $key => $value) {\n    $lst[$key] = ceil($value);\n  }\n  return array_sum(array_map(function($number)\
    \ {\n    return $number ** 2;\n  }, $lst));\n}", "  return array_sum(array_map(function($num)\
    \ {\n      return pow(ceil($num), 2);\n  }, $lst));\n}\n\necho sum_squares([1,\
    \ 2, 3]);\necho sum_squares([1, 4, 9]);\necho sum_squares([1, 3, 5, 7]);\necho\
    \ sum_squares([1.4, 4.2, 0]);\necho sum_squares([-2.4, 1, 1]);", "    foreach\
    \ ($lst as $key => $value) {\n        $value = ceil($value);\n        $lst[$key]\
    \ = $value * $value;\n    }\n    return array_sum($lst);\n}\n", "  $sum = 0;\n\
    \  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ($lst[$i] * $lst[$i]);\n\
    \  }\n  return $sum;\n}\n", "  $result = 0;\n  foreach ($lst as $value) {\n  \
    \  $result += pow(ceil($value), 2);\n  }\n  return $result;\n}", "    return array_sum(array_map(function($value)\
    \ {\n        return ($value >= 0) ? ceil($value) ** 2 : floor($value) ** 2;\n\
    \    }, $lst));\n}\n", "  $result = [];\n  foreach ($lst as $number) {\n    $number\
    \ = ceil($number);\n    $number = $number * $number;\n    $result[] = $number;\n\
    \  }\n  $result = array_sum($result);\n  return $result;\n}\necho sum_squares([1,2,3]);",
  "  $lst = array_map(function($x) {\n    return ceil($x);\n  }, $lst);\n  return\
    \ array_sum(array_map(function($x) {\n    return $x*$x;\n  }, $lst));\n}\n$answer\
    \ = sum_squares([1,2,3]);\nprint_r(\"$answer \\n\");\n\n$answer = sum_squares([1,4,9]);\n\
    print_r(\"$answer \\n\");\n\n$answer = sum_squares([1,3,5,7]);\nprint_r(\"$answer\
    \ \\n\");\n\n$answer = sum_squares([1.4,4.2,0]);\nprint_r(\"$answer \\n\");\n\n\
    $answer = sum_squares([-2.4,1,1]);\nprint_r(\"$answer \\n\");", "    $sum = 0;\n\
    \    for ($i = 0; $i < count($lst); $i++) {\n        $sum += pow(ceil($lst[$i]),\
    \ 2);\n    }\n    return $sum;\n}\n\nprint_r(sum_squares([1,2,3]) . \"\\n\");\n\
    print_r(sum_squares([1,4,9]) . \"\\n\");\nprint_r(sum_squares([1,3,5,7]) . \"\\\
    n\");\nprint_r(sum_squares([1.4,4.2,0]) . \"\\n\");\nprint_r(sum_squares([-2.4,1,1])\
    \ . \"\\n\");", "  return array_sum(array_map(function($a) {\n    return pow(ceil($a),\
    \ 2);\n  }, $lst));\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";", "    $result = 0;\n\
    \    foreach ($lst as $item) {\n        $result += ceil($item) ** 2;\n    }\n\
    \    return $result;\n}\n\necho sum_squares([1,2,3]);", "  $num = 0;\n  foreach\
    \ ($lst as $l) {\n    $num += ceil($l)**2;\n  }\n  return $num;\n}\necho sum_squares([1,2,3]);\n\
    echo sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\n\
    echo sum_squares([-2.4,1,1]);", "    $new_lst = [];\n    foreach ($lst as $value)\
    \ {\n        array_push($new_lst, ceil($value));\n    }\n    echo array_sum($new_lst)\
    \ ** 2;\n}\nsum_squares([1,2,3]);\necho \"<br>\";\nsum_squares([1,4,9]);\necho\
    \ \"<br>\";\nsum_squares([1,3,5,7]);\necho \"<br>\";\nsum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\nsum_squares([-2.4,1,1]);", "\tforeach ($lst as $key => $num) {\n\
    \t\t$lst[$key] = ceil($num);\n\t}\n\treturn array_sum(array_map('power', $lst));\n\
    }\n", "  $total = 0;\n  foreach ($lst as $number) {\n    $number = ceil($number);\n\
    \    $total += $number**2;\n  }\n  return $total;\n}\necho sum_squares([1,2,3])\
    \ . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7])\
    \ . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1])\
    \ . \"\\n\";\n ?>", "  $lst = array_map('ceil', $lst);\n  $sum = 0;\n  foreach\
    \ ($lst as $value) {\n    $sum += pow($value, 2);\n  }\n  return $sum;\n}\nprint_r(sum_squares([1,4,9]));\n\
    echo \"\\n\";\nprint_r(sum_squares([1.4,4.2,0]));\necho \"\\n\";\nprint_r(sum_squares([-2.4,1,1]));\n\
    echo \"\\n\";\nprint_r(sum_squares([1,3,5,7]));\necho \"\\n\";\nprint_r(sum_squares([1,2,3]));\n\
    echo \"\\n\";", "\n}\n$arr = [1,2,3];\n$sum_sqrs = 0;\nfor ($i=0; $i < count($arr);\
    \ $i++) {\n  $sum_sqrs += ceil($arr[$i]) ** 2;\n}\necho $sum_sqrs;", "  $arr =\
    \ [];\n  foreach ($lst as $key => $value) {\n    $arr[] = ceil($value) * ceil($value);\n\
    \  }\n  $res = array_sum($arr);\n  return $res;\n}\n$lst = [1,2,3];\necho sum_squares($lst);\n",
  "  foreach ($lst as $n => $v) {\n    $lst[$n] = ceil($v);\n  }\n  return array_sum(array_map(function($v)\
    \ { return $v ** 2; }, $lst));\n}\n$lst = [1,2,3];\necho sum_squares($lst);",
  "  $sum = 0;\n  foreach ($lst as $item) {\n    $sum += (int)ceil($item) ** 2;\n\
    \  }\n  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";", "  return array_sum(array_map(function($v)\
    \ { return ceil($v) * ceil($v); }, $lst));\n}\necho sum_squares([1,2,3]) . \"\\\
    n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\\
    n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1]) .\
    \ \"\\n\";", "//write your code here\n    $n = count($lst);\n    $lst[$n] = 0;\n\
    \    $square = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $int_lst = ceil($lst[$i]);\n\
    \        $square += pow($int_lst, 2);\n    }\n    return $square;\n}\n", "   \
    \ $arr= [];\n    for ($i=0; $i < count($lst); $i++) {\n        $arr[$i] = ceil($lst[$i]);\n\
    \    }\n    $sum = 0;\n    for ($i=0; $i < count($arr); $i++) {\n        $sum\
    \ += $arr[$i]*$arr[$i];\n    }\n    return $sum;\n}\necho sum_squares([1,2,3])\
    \ . '<br>';\necho sum_squares([1,4,9]) . '<br>';\necho sum_squares([1,3,5,7])\
    \ . '<br>';\necho sum_squares([1.4,4.2,0]) . '<br>';\necho sum_squares([-2.4,1,1])\
    \ . '<br>';", "  $squareRoot = 0;\n  $count = 0;\n  $newArray = [];\n  $newArray2\
    \ = [];\n  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $squareRoot =\
    \ ceil($value);\n    $newArray[] = $squareRoot;\n  }\n  foreach ($newArray as\
    \ $key => $value) {\n    $count = $value * $value;\n    $newArray2[] = $count;\n\
    \  }\n  foreach ($newArray2 as $key => $value) {\n    $sum += $value;\n  }\n \
    \ return $sum;\n}", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n\
    \        $sum += (int)ceil($lst[$i]) ** 2;\n    }\n    return $sum;\n}", "  $array_squared\
    \ = array_map('ceil', $lst);\n  $squared = array_map(function($int) {\n    return\
    \ $int*$int;\n  }, $array_squared);\n  return array_sum($squared);\n}\necho sum_squares([1,2,3]).PHP_EOL;\n\
    echo sum_squares([1,4,9]).PHP_EOL;\necho sum_squares([1,3,5,7]).PHP_EOL;\necho\
    \ sum_squares([1.4,4.2,0]).PHP_EOL;\necho sum_squares([-2.4,1,1]).PHP_EOL;\n ?>",
  "  // Write your code here\n  // return the sum of squared numbers in the given\
    \ list\n}", "  $sum = 0;\n  foreach ($lst as $v) {\n    $sum += ceil($v) * ceil($v);\n\
    \  }\n  return $sum;\n}\n\n$test = [1,2,3];\n$res = sum_squares($test);\necho\
    \ \"$res\\n\";\n\n$test = [1,4,9];\n$res = sum_squares($test);\necho \"$res\\\
    n\";\n\n$test = [1,3,5,7];\n$res = sum_squares($test);\necho \"$res\\n\";\n\n\
    $test = [1.4,4.2,0];\n$res = sum_squares($test);\necho \"$res\\n\";\n\n$test =\
    \ [-2.4,1,1];\n$res = sum_squares($test);\necho \"$res\\n\";", "  $result = 0;\n\
    \  foreach ($lst as $number) {\n    $number = (int) ceil($number);\n    $result\
    \ += $number * $number;\n  }\n  return $result;\n}\n", "  $sum = 0;\n  for ($i\
    \ = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i]) ** 2;\n  }\n  return\
    \ $sum;\n}\n", "  $result = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n   \
    \ $result += pow(ceil($lst[$i]), 2);\n  }\n  return $result;\n}", "  // create\
    \ a empty array\n  $arr = [];\n  // create the for loop\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    // Ceiling + Squared\n    $arr[] = ceil($lst[$i]) ** 2;\n  }\n\
    \  // return the sum\n  return array_sum($arr);\n}\necho sum_squares([1, 4, 9]);",
  "  $arr = [];\n  foreach ($lst as $value) {\n    array_push($arr, ceil($value) **\
    \ 2);\n  }\n  return array_sum($arr);\n}", "    foreach ($lst as $key => $value)\
    \ {\n        $lst[$key] = ceil($value);\n    }\n    return array_sum(array_map(function($number)\
    \ {\n        return $number * $number;\n    }, $lst));\n}\n\necho sum_squares([1,\
    \ 2, 3]);\necho \"<br>\";\necho sum_squares([1, 4, 9]);\necho \"<br>\";\necho\
    \ sum_squares([1, 3, 5, 7]);\necho \"<br>\";\necho sum_squares([1.4, 4.2, 0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4, 1, 1]);", "  // your code here\n}", " \
    \ foreach ($lst as $num) {\n    $num = ceil($num);\n    $sum[] = $num * $num;\n\
    \  }\n  $final = array_sum($sum);\n  return $final;\n}\n", "  $result = 0;\n \
    \ foreach ($lst as $v) {\n    $result += ceil($v) ** 2;\n  }\n  return $result;\n\
    }\n\necho sum_squares([1,2,3]);", "  $output = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    $output += ceil($lst[$i]) * ceil($lst[$i]);\n  }\n  return $output;\n\
    }", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum +=\
    \ pow(ceil($lst[$i]), 2);\n    }\n    return $sum;\n}", "    // Write your code\
    \ here\n    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += ceil($number)\
    \ * ceil($number);\n    }\n    return $sum;\n}\n", "  $result = 0;\n  foreach\
    \ ($lst as $key => $value) {\n    $result += ceil($value) ** 2;\n  }\n  return\
    \ $result;\n}", "\t$newArr = [];\n\tforeach ($lst as $num) {\n\t\t$newArr[] =\
    \ ceil($num);\n\t}\n\treturn array_sum(array_map(function($x) {\n\t\treturn $x\
    \ * $x;\n\t}, $newArr));\n}\n\necho sum_squares([1, 2, 3]) . \"<br>\";\necho sum_squares([1,\
    \ 4, 9]) . \"<br>\";\necho sum_squares([1, 3, 5, 7]) . \"<br>\";\necho sum_squares([1.4,\
    \ 4.2, 0]) . \"<br>\";\necho sum_squares([-2.4, 1, 1]) . \"<br>\";", "  $result\
    \ = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $value = ceil($lst[$i]);\n\
    \    $result += $value * $value;\n  }\n  return $result;\n}\n", "  $result = 0;\n\
    \  foreach ($lst as $value) {\n    $result += ceil($value)*ceil($value);\n  }\n\
    \  return $result;\n}\n\necho sum_squares([1,2,3]).\"\\n\";\necho sum_squares([1,4,9]).\"\
    \\n\";\necho sum_squares([1,3,5,7]).\"\\n\";\necho sum_squares([1.4,4.2,0]).\"\
    \\n\";\necho sum_squares([-2.4,1,1]).\"\\n\";", "  $result = 0;\n  foreach ($lst\
    \ as $val) {\n    $result += pow(ceil($val), 2);\n  }\n  return $result;\n}\n\
    echo sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\necho \"\
    <br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);", "  $result = [];\n  for ($i =\
    \ 0; $i < count($lst); $i++) {\n    $result[$i] = ceil($lst[$i]);\n  }\n  $result\
    \ = array_map(function($value) {\n    return $value * $value;\n  }, $result);\n\
    \  return array_sum($result);\n}\necho sum_squares([1, 2, 3]);\necho sum_squares([1,\
    \ 4, 9]);\necho sum_squares([1, 3, 5, 7]);\necho sum_squares([1.4, 4.2, 0]);\n\
    echo sum_squares([-2.4, 1, 1]);", "    $arr = [];\n    foreach ($lst as $item)\
    \ {\n        $arr[] = ceil($item) ** 2;\n    }\n    return array_sum($arr);\n}",
  "    $list = array_map('ceil', $lst);\n    $powerOf2 = [];\n    for ($i = 0; $i\
    \ < count($list); $i++) {\n        $powerOf2[] = pow($list[$i], 2);\n    }\n \
    \   $sum = array_sum($powerOf2);\n    return $sum;\n}", "    $squared_ints = array_map(function($x)\
    \ {\n        return (int) ceil($x);\n    }, $lst);\n    return array_sum(array_map(function($x)\
    \ {\n        return $x ** 2;\n    }, $squared_ints));\n}", "    $sum = 0;\n  \
    \  foreach ($lst as $value) {\n        $value = ceil($value);\n        $sum +=\
    \ pow($value, 2);\n    }\n    return $sum;\n}\necho sum_squares([1,2,3]);", " \
    \ $x = [];\n  foreach ($lst as $key => $value) {\n    $x[] = ceil($value)**2;\n\
    \  }\n  return array_sum($x);\n}\n\necho sum_squares([1,2,3]).PHP_EOL;\necho sum_squares([1,4,9]).PHP_EOL;\n\
    echo sum_squares([1,3,5,7]).PHP_EOL;\necho sum_squares([1.4,4.2,0]).PHP_EOL;\n\
    echo sum_squares([-2.4,1,1]).PHP_EOL;", "  $temp = 0;\n  foreach ($lst as $elem)\
    \ {\n    $elem = ceil($elem);\n    $temp += $elem ** 2;\n  }\n  return $temp;\n\
    }\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);", "  $count = count($lst);\n  $sum_squares\
    \ = 0;\n  for ($i = 0; $i < $count; $i++) {\n    $sum_squares += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $sum_squares;\n}\n", "    return array_sum(array_map(function($v)\
    \ {\n        return ceil($v) ** 2;\n    }, $lst));\n}\necho sum_squares([1,2,3]);\
    \ // 14\necho \"<br>\";\necho sum_squares([1,4,9]); // 98\necho \"<br>\";\necho\
    \ sum_squares([1,3,5,7]); // 84\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\
    \ // 29\necho \"<br>\";\necho sum_squares([-2.4,1,1]); // 6\necho \"<br>\";\n\
    echo sum_squares([-4,4,-4]); // 32\necho \"<br>\";\necho sum_squares([1.1, 2.2,\
    \ 3.3]); // 35\necho \"<br>\";\necho sum_squares([7,8,9]); // 126\necho \"<br>\"\
    ;\necho sum_squares([10,15,3]); // 272\necho \"<br>\";\necho sum_squares([-1,2,3]);\
    \ // 17\necho \"<br>\";\necho sum_squares([-2,-3,-4]); // 29\necho \"<br>\";\n\
    echo sum_squares([-3,-3,-3]); // 27\necho \"<br>\";\necho sum_squares([0,0,0]);\
    \ // 0\necho \"<br>\";\necho sum_squares([1.1, 1.1, 1.1]); // 5\necho \"<br>\"\
    ;\necho sum_squares([1,2,2]); // 10\necho \"<br>\";\necho sum_squares([0.5,1,1.5]);\
    \ // 5\necho \"<br>\";\necho sum_squares([-3,-2,-1]); // 11\necho \"<br>\";\n\
    echo sum_squares([-2,-2,-2]); // 12\necho \"<br>\";\necho sum_squares([-3,-3,-3]);\
    \ // 27\necho \"<br>\";\necho sum_squares([-2,-2,-2,-2]); // 16\necho \"<br>\"\
    ;\necho sum_squares([-1,-1,-1,-1]); // 4\necho \"<", "  // your code\n}", "  \
    \  $sum = 0;\n    foreach ($lst as $value) {\n        $sum += ceil($value) * ceil($value);\n\
    \    }\n    return $sum;\n}\n$lst = [1, 2, 3];\necho 'Input: $lst = [1, 2, 3]';\n\
    echo '<br>Output: ' . sum_squares($lst);\n\necho '<br><br>';\n\n$lst = [1, 4,\
    \ 9];\necho 'Input: $lst = [1, 4, 9]';\necho '<br>Output: ' . sum_squares($lst);\n\
    \necho '<br><br>';\n\n$lst = [1, 3, 5, 7];\necho 'Input: $lst = [1, 3, 5, 7]';\n\
    echo '<br>Output: ' . sum_squares($lst);\n\necho '<br><br>';\n\n$lst = [1.4, 4.2,\
    \ 0];\necho 'Input: $lst = [1.4, 4.2, 0]';\necho '<br>Output: ' . sum_squares($lst);\n\
    \necho '<br><br>';\n\n$lst = [-2.4, 1, 1];\necho 'Input: $lst = [-2.4, 1, 1]';\n\
    echo '<br>Output: ' . sum_squares($lst);", "  $lst2 = [];\n  for ($i=0; $i < count($lst);\
    \ $i++) {\n    $lst2[] = ceil($lst[$i]) ** 2;\n  }\n  return array_sum($lst2);\n\
    }\n\necho sum_squares([1,2,3]) . '<br>';\necho sum_squares([1,4,9]) . '<br>';\n\
    echo sum_squares([1,3,5,7]) . '<br>';\necho sum_squares([1.4,4.2,0]) . '<br>';\n\
    echo sum_squares([-2.4,1,1]) . '<br>';", "  $returnValue = 0;\n  foreach ($lst\
    \ as $key => $value) {\n    $returnValue += ceil($value) ** 2;\n  }\n  return\
    \ $returnValue;\n}\n", "    foreach ($lst as $key => $value) {\n        $lst[$key]\
    \ = ceil($value);\n    }\n    foreach ($lst as $key => $value) {\n        $lst[$key]\
    \ = $value ** 2;\n    }\n    $result = array_sum($lst);\n    return $result;\n\
    }\necho sum_squares([1, 2, 3]) . \"<br>\";\necho sum_squares([1, 4, 9]) . \"<br>\"\
    ;\necho sum_squares([1, 3, 5, 7]) . \"<br>\";\necho sum_squares([1.4, 4.2, 0])\
    \ . \"<br>\";\necho sum_squares([-2.4, 1, 1]) . \"<br>\";", "    $sum = 0;\n \
    \   for ($i = 0; $i < count($lst); $i++) {\n        $sum += ceil($lst[$i]) * ceil($lst[$i]);\n\
    \    }\n    return $sum;\n}\n", "  foreach ($lst as $key => $value) {\n    $lst[$key]\
    \ = ceil($value);\n  }\n  return array_sum(array_map(function($x) {\n    return\
    \ $x ** 2;\n  }, $lst));\n}\nprint_r(sum_squares([1, 2, 3]));\nprint_r(sum_squares([1,\
    \ 4, 9]));\nprint_r(sum_squares([1, 3, 5, 7]));\nprint_r(sum_squares([1.4, 4.2,\
    \ 0]));\nprint_r(sum_squares([-2.4, 1, 1]));", "  $arr = array_map('ceil', $lst);\n\
    \  $sum = 0;\n  foreach ($arr as $item) {\n    $sum += $item**2;\n  }\n  return\
    \ $sum;\n}\necho sum_squares([1,3,5,7]);", "    $lst = array_map('ceil', $lst);\n\
    \    $result = 0;\n    foreach ($lst as $elem) {\n        $result += $elem * $elem;\n\
    \    }\n    return $result;\n}\n", "    $sum=0;\n    foreach($lst as $val){\n\
    \        $sum+=ceil($val)*ceil($val);\n    }\n    return $sum;\n}\n", "  $result\
    \ = [];\n  foreach ($lst as $value) {\n    $value = ceil($value);\n    $result[]\
    \ = $value * $value;\n  }\n  return array_sum($result);\n}", "  $sum = 0;\n  foreach\
    \ ($lst as $key => $val) {\n    $sum += ceil($val) * ceil($val);\n  }\n  return\
    \ $sum;\n}\n\nprint_r(sum_squares([1,2,3]));\nprint_r(sum_squares([1,4,9]));\n\
    print_r(sum_squares([1,3,5,7]));\nprint_r(sum_squares([1.4,4.2,0]));\nprint_r(sum_squares([-2.4,1,1]));\n",
  "  $lst = array_map('ceil', $lst);\n  return array_sum(array_map(function($num)\
    \ { return $num*$num; }, $lst));\n}\necho sum_squares([1,2,3]); // 14\necho sum_squares([1,4,9]);\
    \ // 98\necho sum_squares([1,3,5,7]); // 84\necho sum_squares([1.4,4.2,0]); //\
    \ 29\necho sum_squares([-2.4,1,1]); // 6", "    // Write your code here\n    $squared_numbers\
    \ = array_map(function($a){return ceil($a) * ceil($a);}, $lst);\n    return array_sum($squared_numbers);\n\
    }\n\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\n\
    echo sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);", "  // your code\
    \ here\n  $arr = [];\n  foreach ($lst as $key => $value) {\n    $arr[] = pow(ceil($value),\
    \ 2);\n  }\n  return array_sum($arr);\n}\n$input_lst = [1,2,3];\nprint sum_squares($input_lst);",
  "\n}\n", "    $result = 0;\n    foreach ($lst as $val) {\n        $result += ceil($val)\
    \ ** 2;\n    }\n    return $result;\n}\n\nprint_r(sum_squares([1,2,3])); // 14\n\
    print_r(sum_squares([1,4,9])); // 98\nprint_r(sum_squares([1,3,5,7])); // 84\n\
    print_r(sum_squares([1.4,4.2,0])); // 29\nprint_r(sum_squares([-2.4,1,1])); //\
    \ 6", "    $sum = 0;\n    foreach ($lst as $value) {\n        $sum += pow(ceil($value),\
    \ 2);\n    }\n    return $sum;\n}", "  return array_sum(array_map(function($n)\
    \ { return ceil($n) ** 2; }, $lst));\n}\necho sum_squares([1,2,3]) . \"\\n\";\n\
    echo sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\n\
    echo sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\\
    n\";", "  return (int) array_sum(array_map(function($a) {\n    return ceil($a)\
    \ * ceil($a);\n  }, $lst));\n}\n\necho(sum_squares([1,2,3]) . \"\\n\");\necho(sum_squares([1,4,9])\
    \ . \"\\n\");\necho(sum_squares([1,3,5,7]) . \"\\n\");\necho(sum_squares([1.4,4.2,0])\
    \ . \"\\n\");\necho(sum_squares([-2.4,1,1]) . \"\\n\");", "  $ceil = array_map('ceil',\
    \ $lst);\n  $ans = 0;\n  foreach ($ceil as $v) {\n    $ans += $v * $v;\n  }\n\
    \  return $ans;\n}\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\n ?>", "  return array_sum(array_map(function($v)\
    \ { return ceil($v) ** 2; }, $lst));\n}\n", "  $sum = 0;\n  for ($i = 0; $i <\
    \ count($lst); $i++) {\n    $sum += ceil($lst[$i]) * ceil($lst[$i]);\n  }\n  return\
    \ $sum;\n}\n\necho sum_squares([-2.4,1,1]) . \"<br>\";\necho sum_squares([1.4,4.2,0])\
    \ . \"<br>\";\necho sum_squares([1,3,5,7]) . \"<br>\";\necho sum_squares([1,4,9])\
    \ . \"<br>\";\necho sum_squares([1,2,3]) . \"<br>\";\n", "  $output = 0;\n  foreach\
    \ ($lst as $number) {\n    $number = ceil($number);\n    $output += $number *\
    \ $number;\n  }\n  return $output;\n}", "    return array_sum(array_map('intval',\
    \ array_map('ceil', $lst)));\n}\n", "  $result = 0;\n  foreach ($lst as $number)\
    \ {\n    $number = ceil($number);\n    $result += $number * $number;\n  }\n  return\
    \ $result;\n}\n$lst = [1,2,3];\nprint_r(sum_squares($lst));\necho \"\\n\";\n\n\
    $lst = [1,4,9];\nprint_r(sum_squares($lst));\necho \"\\n\";\n\n$lst = [1,3,5,7];\n\
    print_r(sum_squares($lst));\necho \"\\n\";\n\n$lst = [1.4,4.2,0];\nprint_r(sum_squares($lst));\n\
    echo \"\\n\";\n\n$lst = [-2.4,1,1];\nprint_r(sum_squares($lst));\necho \"\\n\"\
    ;\n", "    $array = array_map(function($val){\n        return ceil($val);\n  \
    \  }, $lst);\n    return array_sum(array_map(function($val){\n        return $val\
    \ * $val;\n    }, $array));\n}", "  $sum = 0;\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    $sum += ceil($lst[$i]) * ceil($lst[$i]);\n  }\n  return $sum;\n\
    }\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\n\
    echo sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);", "    //Add code\
    \ here\n    $array = [];\n    foreach ($lst as $l) {\n        $l = ceil($l);\n\
    \        $array[] = $l * $l;\n    }\n    return array_sum($array);\n}", "    $arr\
    \ = array_map(function($e){\n        return ceil($e);\n    }, $lst);\n    $result\
    \ = array_map(function($e){\n        return $e*$e;\n    }, $arr);\n    return\
    \ array_sum($result);\n}\necho sum_squares([1,2,3]) . \"<br>\";\necho sum_squares([1,4,9])\
    \ . \"<br>\";\necho sum_squares([1,3,5,7]) . \"<br>\";\necho sum_squares([1.4,4.2,0])\
    \ . \"<br>\";\necho sum_squares([-2.4,1,1]) . \"<br>\";", "  $sum = 0;\n  for\
    \ ($i = 0; $i < count($lst); $i++) {\n    $sum += round($lst[$i]);\n  }\n  return\
    \ $sum * $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";", "    $result =\
    \ 0;\n    $length = count($lst);\n    for ($i = 0; $i < $length; $i++) {\n   \
    \     $result += intval(ceil($lst[$i]));\n    }\n    return $result ** 2;\n}\n\
    \necho sum_squares([1, 2, 3]);", "  $count = count($lst);\n  $result = 0;\n  for\
    \ ($i = 0; $i < $count; $i++) {\n    $result += ceil($lst[$i]) ** 2;\n  }\n  return\
    \ $result;\n}\n", "  // Write your code here\n}\necho sum_squares([1,2,3]) . \"\
    \\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\
    \\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1])\
    \ . \"\\n\";", "  $numbers = array_map('ceil', $lst);\n  $sum = 0;\n  foreach\
    \ ($numbers as $number) {\n    $sum += $number ** 2;\n  }\n  return $sum;\n}\n\
    \nprint sum_squares([1,2,3]) . \"\\n\";\nprint sum_squares([1,4,9]) . \"\\n\"\
    ;\nprint sum_squares([1,3,5,7]) . \"\\n\";\nprint sum_squares([1.4,4.2,0]) . \"\
    \\n\";\nprint sum_squares([-2.4,1,1]) . \"\\n\";", "  $arr = array_map('ceil',\
    \ $lst);\n  $count = count($arr);\n  $result = 0;\n  for ($i = 0; $i < $count;\
    \ $i++) {\n    $result += $arr[$i] * $arr[$i];\n  }\n  return $result;\n}\necho\
    \ sum_squares([1, 2, 3]); // 14\necho sum_squares([1, 4, 9]); // 98\necho sum_squares([1,\
    \ 3, 5, 7]); // 84\necho sum_squares([1.4, 4.2, 0]); // 29\necho sum_squares([-2.4,\
    \ 1, 1]); // 6", "  $result = 0;\n  foreach ($lst as $value) {\n    $result +=\
    \ ceil($value) ** 2;\n  }\n  return $result;\n}", "    $sum = 0;\n    foreach\
    \ ($lst as $value) {\n        $sum += ceil($value) ** 2;\n    }\n    return $sum;\n\
    }", "  $nums = array_map('ceil', $lst);\n  foreach ($nums as $num) {\n    $squares[]\
    \ = $num * $num;\n  }\n  $squares = array_sum($squares);\n  return $squares;\n\
    }\necho sum_squares([1,2,3]);\n ?>", "  $squared = array_map(function($number)\
    \ {\n    return ceil($number) ** 2;\n  }, $lst);\n  return array_sum($squared);\n\
    }\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\necho sum_squares([1,3,5,7]);\n\
    echo sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\n", "    $result\
    \ = [];\n    foreach ($lst as $item) {\n        $result[] = ceil($item);\n   \
    \ }\n    return array_sum(array_map(function ($value) {\n        return $value\
    \ * $value;\n    }, $result));\n}\necho sum_squares([1,2,3]) . PHP_EOL;\necho\
    \ sum_squares([1,4,9]) . PHP_EOL;\necho sum_squares([1,3,5,7]) . PHP_EOL;\necho\
    \ sum_squares([1.4,4.2,0]) . PHP_EOL;\necho sum_squares([-2.4,1,1]) . PHP_EOL;",
  "  $lst = array_map('ceil', $lst);\n  $total = 0;\n  foreach ($lst as $val) {\n\
    \    $total += $val * $val;\n  }\n  return $total;\n}\n", "  $newList = [];\n\
    \  foreach ($lst as $number) {\n    $newList[] = ceil($number);\n  }\n  $result\
    \ = 0;\n  foreach ($newList as $number) {\n    $result += $number * $number;\n\
    \  }\n  return $result;\n}\necho sum_squares([1,2,3]) . \"<br>\";\necho sum_squares([1,4,9])\
    \ . \"<br>\";\necho sum_squares([1,3,5,7]) . \"<br>\";\necho sum_squares([1.4,4.2,0])\
    \ . \"<br>\";\necho sum_squares([-2.4,1,1]) . \"<br>\";", "  $a = 0;\n  foreach\
    \ ($lst as $v) {\n    $a += pow(round($v), 2);\n  }\n  return $a;\n}\n\necho sum_squares([1,2,3]);",
  "  // your code here\n}", "  $sum = 0;\n  foreach ($lst as $value) {\n    $sum +=\
    \ ceil($value) * ceil($value);\n  }\n  return $sum;\n}\n\n$lst = [1,2,3];\necho\
    \ \"The sum of \" . implode(\" + \", $lst) . \" is: \" . sum_squares($lst) . \"\
    <br />\";\n$lst = [1,4,9];\necho \"The sum of \" . implode(\" + \", $lst) . \"\
    \ is: \" . sum_squares($lst) . \"<br />\";\n$lst = [1,3,5,7];\necho \"The sum\
    \ of \" . implode(\" + \", $lst) . \" is: \" . sum_squares($lst) . \"<br />\"\
    ;\n$lst = [1.4,4.2,0];\necho \"The sum of \" . implode(\" + \", $lst) . \" is:\
    \ \" . sum_squares($lst) . \"<br />\";\n$lst = [-2.4,1,1];\necho \"The sum of\
    \ \" . implode(\" + \", $lst) . \" is: \" . sum_squares($lst) . \"<br />\";",
  "  foreach ($lst as $key => $value) {\n    $lst[$key] = ceil($value);\n  }\n  return\
    \ array_sum(array_map(function($n) { return $n * $n; }, $lst));\n}\n\necho(sum_squares([1,2,3]));",
  "    $s = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $s += ceil($lst[$i])\
    \ * ceil($lst[$i]);\n    }\n    return $s;\n}", "  $sum = 0;\n  for ($i = 0; $i\
    \ < count($lst); $i++) {\n    $sum += ceil($lst[$i]) ** 2;\n  }\n  return $sum;\n\
    }", "  $result = 0;\n  foreach ($lst as $key => $value) {\n    $result += ceil($value)\
    \ * ceil($value);\n  }\n  return $result;\n}\necho sum_squares([1,2,3]);\necho\
    \ \"\\n\";\necho sum_squares([1,4,9]);\necho \"\\n\";\necho sum_squares([1,3,5,7]);\n\
    echo \"\\n\";\necho sum_squares([1.4,4.2,0]);\necho \"\\n\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"\\n\";", "\t$lst = array_map('ceil', $lst);\n\treturn array_sum(array_map(function($a)\
    \ { return $a * $a; }, $lst));\n}\n$lst = [1,2,3];\necho sum_squares($lst);",
  "  $num = 0;\n  foreach ($lst as $square) {\n    $num += ceil($square);\n  }\n \
    \ return $num * $num;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";", "  foreach ($lst\
    \ as $key => $num) {\n    $lst[$key] = ceil($num);\n  }\n  return array_sum(array_map(function($num)\
    \ { return $num * $num; }, $lst));\n}\necho \"test #1: \". (sum_squares([1,2,3])\
    \ == 14 ? \"pass\\n\" : \"fail\\n\");\necho \"test #2: \". (sum_squares([1,4,9])\
    \ == 98 ? \"pass\\n\" : \"fail\\n\");\necho \"test #3: \". (sum_squares([1,3,5,7])\
    \ == 84 ? \"pass\\n\" : \"fail\\n\");\necho \"test #4: \". (sum_squares([1.4,4.2,0])\
    \ == 29 ? \"pass\\n\" : \"fail\\n\");\necho \"test #5: \". (sum_squares([-2.4,1,1])\
    \ == 6 ? \"pass\\n\" : \"fail\\n\");", "    $array = [];\n    foreach ($lst as\
    \ $key => $value) {\n        $array[] = ceil($value) ** 2;\n    }\n    return\
    \ array_sum($array);\n}\n\necho sum_squares([1, 2, 3]) . \"\\n\";\necho sum_squares([1,\
    \ 4, 9]) . \"\\n\";\necho sum_squares([1, 3, 5, 7]) . \"\\n\";\necho sum_squares([1.4,\
    \ 4.2, 0]) . \"\\n\";\necho sum_squares([-2.4, 1, 1]) . \"\\n\";", "    $numbers\
    \ = array_map(function($number) {\n        return ceil($number);\n    }, $lst);\n\
    \    $numbers = array_map(function($number) {\n        return $number ** 2;\n\
    \    }, $numbers);\n    return array_sum($numbers);\n}", "    $lst = array_map(function($n)\
    \ {\n        return ceil($n);\n    }, $lst);\n    return array_sum(array_map(function($n)\
    \ {\n        return $n * $n;\n    }, $lst));\n}\necho \"Test 1\\n\";\necho sum_squares([1,2,3])\
    \ == 14;\necho \"\\nTest 2\\n\";\necho sum_squares([1,4,9]) == 98;\necho \"\\\
    nTest 3\\n\";\necho sum_squares([1,3,5,7]) == 84;\necho \"\\nTest 4\\n\";\necho\
    \ sum_squares([1.4,4.2,0]) == 29;\necho \"\\nTest 5\\n\";\necho sum_squares([-2.4,1,1])\
    \ == 6;", "  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum +=\
    \ ceil($lst[$i]) ** 2;\n  }\n  return $sum;\n}\n", "  $lst = array_map(function($n)\
    \ {\n    return ceil($n);\n  }, $lst);\n  $sum = 0;\n  foreach ($lst as $n) {\n\
    \    $sum += $n * $n;\n  }\n  return $sum;\n}\n\necho sum_squares([1, 2, 3]);\n\
    echo \"<br>\";\necho sum_squares([1, 4, 9]);\necho \"<br>\";\necho sum_squares([1,\
    \ 3, 5, 7]);\necho \"<br>\";\necho sum_squares([1.4, 4.2, 0]);\necho \"<br>\"\
    ;\necho sum_squares([-2.4, 1, 1]);\necho \"<br>\";\n", "    $result = 0;\n   \
    \ foreach ($lst as $item) {\n        $result += ceil($item) * ceil($item);\n \
    \   }\n    return $result;\n}\n\n$lst = [1,2,3];\necho sum_squares($lst);\n",
  "  return array_sum(array_map(function($x) { return ceil($x) ** 2; }, $lst));\n\
    }\n", "  $sum = 0;\n  foreach ($lst as $value) {\n    $intValue = ceil($value);\n\
    \    $sum += $intValue*$intValue;\n  }\n  return $sum;\n}\necho sum_squares([1,2,3])\
    \ . \"\\n\";\necho sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7])\
    \ . \"\\n\";\necho sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1])\
    \ . \"\\n\";", "\n}", "  $result = 0;\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    $result += ceil($lst[$i]) ** 2;\n  }\n  return $result;\n}\n\necho sum_squares([1,\
    \ 2, 3]);", "    $newArray = [];\n    foreach ($lst as $num) {\n        $num =\
    \ ceil($num);\n        $num *= $num;\n        array_push($newArray, $num);\n \
    \   }\n    return array_sum($newArray);\n}\nprint_r(sum_squares([1,2,3]) . \"\\\
    n\");\nprint_r(sum_squares([1,4,9]) . \"\\n\");\nprint_r(sum_squares([1,3,5,7])\
    \ . \"\\n\");\nprint_r(sum_squares([1.4,4.2,0]) . \"\\n\");\nprint_r(sum_squares([-2.4,1,1])\
    \ . \"\\n\");", "    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n \
    \       $val = ceil($lst[$i]);\n        $sum += $val * $val;\n    }\n    return\
    \ $sum;\n}\n$lst = [1,2,3];\necho sum_squares($lst) . \"\\n\";\n$lst = [1,4,9];\n\
    echo sum_squares($lst) . \"\\n\";\n$lst = [1,3,5,7];\necho sum_squares($lst) .\
    \ \"\\n\";\n$lst = [1.4,4.2,0];\necho sum_squares($lst) . \"\\n\";\n$lst = [-2.4,1,1];\n\
    echo sum_squares($lst) . \"\\n\";", "  $squared = array_map(function($n) {\n \
    \   return pow(ceil($n), 2);\n  }, $lst);\n  return array_sum($squared);\n}",
  "  $result = [];\n  foreach ($lst as $value) {\n    $result[] = ceil($value) **\
    \ 2;\n  }\n  return array_sum($result);\n}", "  $sum = 0;\n  foreach ($lst as\
    \ $value) {\n    $sum += ceil($value) ** 2;\n  }\n  return $sum;\n}\n\nprint sum_squares([1,\
    \ 2, 3]);\nprint sum_squares([1, 4, 9]);\nprint sum_squares([1, 3, 5, 7]);\nprint\
    \ sum_squares([1.4, 4.2, 0]);\nprint sum_squares([-2.4, 1, 1]);", "    return\
    \ array_sum(array_map(function($value) { return pow(ceil($value), 2); }, $lst));\n\
    }", "  $new_arr = [];\n  foreach ($lst as $item) {\n    array_push($new_arr, ceil($item));\n\
    \  }\n  return array_sum(array_map('reduce', $new_arr));\n}", "  $sum = 0;\n \
    \ foreach ($lst as $number) {\n    $sum += pow(ceil($number), 2);\n  }\n  return\
    \ $sum;\n}", "    $arr = array_map(function($a){\n        return ceil($a) * ceil($a);\n\
    \    }, $lst);\n    return array_sum($arr);\n}\necho sum_squares([1,4,9]) . \"\
    <br>\";\necho sum_squares([1,2,3]) . \"<br>\";\necho sum_squares([1,3,5,7]) .\
    \ \"<br>\";\necho sum_squares([1.4,4.2,0]) . \"<br>\";\necho sum_squares([-2.4,1,1])\
    \ . \"<br>\";", "    $arr = [];\n    foreach ($lst as $num) {\n        $arr[]\
    \ = ceil($num) * ceil($num);\n    }\n    return array_sum($arr);\n}\necho \"For\
    \ lst = [1,2,3] the output should be 14: \" . sum_squares([1,2,3]) . PHP_EOL;\n\
    echo \"For lst = [1,4,9] the output should be 98: \" . sum_squares([1,4,9]) .\
    \ PHP_EOL;\necho \"For lst = [1,3,5,7] the output should be 84: \" . sum_squares([1,3,5,7])\
    \ . PHP_EOL;\necho \"For lst = [1.4,4.2,0] the output should be 29: \" . sum_squares([1.4,4.2,0])\
    \ . PHP_EOL;\necho \"For lst = [-2.4,1,1] the output should be 6: \" . sum_squares([-2.4,1,1])\
    \ . PHP_EOL;"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

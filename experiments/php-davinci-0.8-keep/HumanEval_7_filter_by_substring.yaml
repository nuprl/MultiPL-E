name: HumanEval_7_filter_by_substring
language: php
prompt: "<?php\n// Filter an input list of strings only for ones that contain given\
  \ substring\n// >>> filter_by_substring([], 'a')\n// []\n// >>> filter_by_substring(['abc',\
  \ 'bacd', 'cde', 'array'], 'a')\n// ['abc', 'bacd', 'array']\nfunction filter_by_substring($strings,\
  \ $substring) {\n"
tests: "function candidate(...$args) {\n    return filter_by_substring(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
  asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\",\
  \ \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xx\") !== array(\"\
  xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"grunt\", \"trumpet\", \"prune\", \"gruesome\"),\
  \ \"run\") !== array(\"grunt\", \"prune\")) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["\t$out = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$out[] = $string;\n\t\t}\n\t}\n\treturn $out;\n\
    }\n", "    return array_filter($strings, function($s) use ($substring) {\n   \
    \     return strpos($s, $substring) !== false;\n    });\n}\n", "  $result = [];\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\n", "    $out\
    \ = [];\n    foreach ($strings as $s) {\n        if (strpos($s, $substring) !==\
    \ false) {\n            $out[] = $s;\n        }\n    }\n    return $out;\n}\n",
  "  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n",
  "  $results = [];\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $results[] = $string;\n    }\n  }\n  return $results;\n}",
  "    $filtered = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n\n$strings = ['abc', 'bacd', 'cde', 'array'];\n\
    print_r(filter_by_substring($strings, 'a'));", "    $filtered_strings = [];\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered_strings[] = $string;\n        }\n    }\n\
    \    return $filtered_strings;\n}", "    $filtered = [];\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n",
  "    $filtered_strings = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered_strings[] = $string;\n     \
    \   }\n    }\n    return $filtered_strings;\n}\n", "    $filtered = [];\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $substring) !== false)\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }", "\t$result = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $substring)\
    \ !== false) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}", "\t$result = [];\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "    $newArray = [];\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $newArray[] = $string;\n        }\n    }\n    return $newArray;\n}\n",
  "  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n",
  "    $matches = [];\n    for ($i = 0; $i < count($strings); $i++) {\n        if\
    \ (strpos($strings[$i], $substring) !== false) {\n            $matches[] = $strings[$i];\n\
    \        }\n    }\n    return $matches;\n}\n", "\t$filtered = [];\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $new = [];\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $substring) !== false)\
    \ {\n            $new[] = $string;\n        }\n    }\n    return $new;\n}\n",
  "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}", "  $result = [];\n  foreach ($strings as $string) {\n\
    \    if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n\
    \    }\n  }\n  return $result;\n}", "  $result = [];\n  foreach ($strings as $string)\
    \ {\n    if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n\
    \    }\n  }\n  return $result;\n}", "    return array_filter($strings, function($s)\
    \ use ($substring) {\n        return (strpos($s, $substring) !== false);\n   \
    \ });\n}\n", "    $new_strings = [];\n    foreach ($strings as $string) {\n  \
    \      if (strpos($string, $substring) !== false) {\n            $new_strings[]\
    \ = $string;\n        }\n    }\n    return $new_strings;\n}", "\t$filtered = [];\n\
    \tforeach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "  $res\
    \ = [];\n  for($i = 0; $i < count($strings); $i++) {\n    if (strpos($strings[$i],\
    \ $substring) !== false) {\n      $res[] = $strings[$i];\n    }\n  }\n  return\
    \ $res;\n}\n", "\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }", "  return array_filter($strings, function($s) use ($substring) {\n    return\
    \ strpos($s, $substring) !== false;\n  });\n}\n", "  $result = [];\n  foreach\
    \ ($strings as $string) {\n    if (strpos($string, $substring) !== false) {\n\
    \      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    return array_filter($strings, function($s) use ($substring)\
    \ {\n        return strpos($s, $substring) !== false;\n    });\n}\n", "    $filtered\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}", "    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n\n$strings\
    \ = ['abc', 'bacd', 'cde', 'array'];\n$substring = 'a';\n$result = filter_by_substring($strings,\
    \ $substring);\nvar_dump($result);", "  $new_strings = [];\n  foreach ($strings\
    \ as $string) {\n    if (strpos($string, $substring) !== false) {\n      $new_strings[]\
    \ = $string;\n    }\n  }\n  return $new_strings;\n}\n", "\treturn array_filter($strings,\
    \ function($s) use ($substring) {\n\t\treturn strpos($s, $substring) !== false;\n\
    \t});\n}\n", "  $results = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $results[] = $string;\n    }\n  }\n  return\
    \ $results;\n}\n", "  $result = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $result[] = $string;\n    }\n\
    \  }\n  return $result;\n}\n", "    // Fill this out\n}", "    $return_array =\
    \ [];\n    foreach ($strings as $str) {\n        if (strpos($str, $substring)\
    \ !== false) {\n            $return_array[] = $str;\n        }\n    }\n    return\
    \ $return_array;\n}\n", "  $filtered = [];\n  foreach ($strings as $string) {\n\
    \    if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n", "    return array_filter($strings, function($string)\
    \ use ($substring) {\n        return strpos($string, $substring) !== false;\n\
    \    });\n}\n", "    $matches = [];\n    foreach ($strings as $string) {\n   \
    \     if (strpos($string, $substring) !== false) {\n            $matches[] = $string;\n\
    \        }\n    }\n    return $matches;\n}", "    // Your code here\n    $filtered\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}", "    // BEGIN (write your solution here)\n    $res = [];\n \
    \   foreach ($strings as $str) {\n        if (strpos($str, $substring) !== false)\
    \ {\n            $res[] = $str;\n        }\n    }\n    return $res;\n    // END\n\
    }\n", "    $filtered = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n", "    return array_filter($strings, function($string)\
    \ use ($substring) {\n        return strpos($string, $substring) !== false;\n\
    \    });\n}\n", "    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n", " \
    \   $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}", "    $result = [];\n    foreach ($strings as $str) {\n\
    \        if (strpos($str, $substring) !== false) {\n            $result[] = $str;\n\
    \        }\n    }\n    return $result;\n}\n", "    $new_strings = [];\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $substring) !== false)\
    \ {\n            $new_strings[] = $string;\n        }\n    }\n    return $new_strings;\n\
    }\n", "\t$ret = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$ret[] = $string;\n\t\t}\n\t}\n\treturn $ret;\n\
    }\n", "    return array_filter($strings, function($s) use ($substring) {\n   \
    \     return strpos($s, $substring) !== false;\n    });\n}\n", "    $result =\
    \ [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($strings as $str) {\n     \
    \   if (strpos($str, $substring) !== false) {\n            $result[] = $str;\n\
    \        }\n    }\n    return $result;\n}\n", "  $filtered = [];\n  foreach ($strings\
    \ as $string) {\n    if (strpos($string, $substring) !== false) {\n      $filtered[]\
    \ = $string;\n    }\n  }\n  return $filtered;\n}\n", "\t$filtered = [];\n\tforeach\
    \ ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\
    \t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $result\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}", "\t$filtered = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $str;\n\t\t}\n\t}\n\treturn $filtered;\n\
    }\n", "  $filtered = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\n", "    $filtered_strings = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered_strings[]\
    \ = $string;\n        }\n    }\n    return $filtered_strings;\n}", "\treturn array_filter($strings,\
    \ function($str) use ($substring) {\n\t\treturn (stripos($str, $substring) !==\
    \ false);\n\t});\n}\n", "    return array_filter($strings, function($string) use\
    \ ($substring) {\n        return strpos($string, $substring) !== false;\n    });\n\
    }\n", "\treturn array_filter($strings, function($string) use ($substring) {\n\t\
    \treturn strpos($string, $substring) !== false;\n\t});\n}\n\n$modules = scandir(MODULE_DIR);\n\
    $modules = array_filter($modules, function($entry) {\n\treturn $entry[0] !== '.';\n\
    });\n\nif ($_POST) {\n\t$post_data = array_filter($_POST, function($k) {\n\t\t\
    return $k !== 'filter';\n\t}, ARRAY_FILTER_USE_KEY);\n\t$post_data = array_filter($post_data,\
    \ function($v) {\n\t\treturn !empty($v);\n\t});\n\tfile_put_contents(SETTINGS_FILE,\
    \ json_encode($post_data));\n}\n\n$module_config = json_decode(file_get_contents(SETTINGS_FILE),\
    \ true);\n$module_config = array_filter($module_config, function($k) {\n\treturn\
    \ $k !== 'filter';\n}, ARRAY_FILTER_USE_KEY);\n\n$filter = $_POST['filter'] ??\
    \ '';\n$filtered_modules = filter_by_substring($modules, $filter);", "    $result\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}", "\t$result = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n\
    }", "  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n\
    }", "\treturn array_filter($strings, function($value) use ($substring) {\n\t\t\
    return strpos($value, $substring) !== false;\n\t});\n}", "  $result = [];\n  foreach\
    \ ($strings as $string) {\n    if (strpos($string, $substring) !== false) {\n\
    \      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "    $filtered_strings\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered_strings[] = $string;\n        }\n    }\n\
    \    return $filtered_strings;\n}", "\t$output = [];\n\tforeach ($strings as $str)\
    \ {\n\t\tif (strpos($str, $substring) !== false) {\n\t\t\t$output[] = $str;\n\t\
    \t}\n\t}\n\treturn $output;\n}", "  $filtered = [];\n  foreach ($strings as $string)\
    \ {\n    if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n", "  foreach ($strings as $key => $string)\
    \ {\n    if (strpos($string, $substring) === false) {\n      unset($strings[$key]);\n\
    \    }\n  }\n  return $strings;\n}\n", "    return array_filter($strings, function($string)\
    \ use ($substring) {\n        return (strpos($string, $substring) !== false);\n\
    \    });\n}", "    $filtered = [];\n    foreach ($strings as $string) {\n    \
    \    if (stristr($string, $substring)) {\n            $filtered[] = $string;\n\
    \        }\n    }\n    return $filtered;\n}\n", "    return array_filter($strings,\
    \ function($str) use ($substring) {\n        return strpos($str, $substring) !==\
    \ false;\n    });\n}\n", "  return array_filter($strings, function($string) use\
    \ ($substring) {\n    return strpos($string, $substring) !== false;\n  });\n}\n",
  "  $filtered = [];\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n\
    }\n", "    return array_filter($strings, function($string) use ($substring) {\n\
    \        return strpos($string, $substring) !== false;\n    });\n}\n", "    return\
    \ array_filter($strings, function($string) use ($substring) {\n        return\
    \ strpos($string, $substring) !== false;\n    });\n}\n", "    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}\n", "    $filtered = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}", "    $filtered_strings\
    \ = [];\n    foreach ($strings as $str) {\n        if (strpos($str, $substring)\
    \ !== false) {\n            $filtered_strings[] = $str;\n        }\n    }\n  \
    \  return $filtered_strings;\n}\n", "    $result = [];\n    foreach ($strings\
    \ as $key => $string) {\n        if (strpos($string, $substring) !== false) {\n\
    \            $result[] = $string;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n", "    $substring = strtolower($substring);\n\
    \    $filtered = [];\n    foreach ($strings as $str) {\n        if (strpos(strtolower($str),\
    \ $substring) !== false) {\n            $filtered[] = $str;\n        }\n    }\n\
    \    return $filtered;\n}\n", "  $result = [];\n  foreach ($strings as $str) {\n\
    \    if (strpos($str, $substring) !== false) {\n      $result[] = $str;\n    }\n\
    \  }\n  return $result;\n}\n", "\t$result = [];\n\tforeach ($strings as $string)\
    \ {\n\t\tif (stristr($string, $substring)) {\n\t\t\t$result[] = $string;\n\t\t\
    }\n\t}\n\treturn $result;\n}\n", "\t// YOUR IMPLEMENTATION HERE\n\t$answ = array();\n\
    \tforeach ($strings as $str) {\n\t\tif (strpos($str, $substring) !== false) {\n\
    \t\t\tarray_push($answ, $str);\n\t\t}\n\t}\n\treturn $answ;\n}\n", "    $filtered\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "\t$result = [];\n\tforeach ($strings as $string) {\n\t\t\
    if (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\t\t\
    }\n\t}\n\treturn $result;\n}\n", "  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      yield $string;\n    }\n  }\n}\n", "    return\
    \ array_filter($strings, function($string) use ($substring) {\n        return\
    \ stripos($string, $substring) !== false;\n    });\n}\n", "\t$ret = [];\n\tforeach\
    \ ($strings as $s) {\n\t\tif (strpos($s, $substring) !== false) {\n\t\t\t$ret[]\
    \ = $s;\n\t\t}\n\t}\n\treturn $ret;\n}", "\t$result = [];\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$input = [\"abc\", \"bacd\"\
    , \"cde\", \"array\"];\n$input = filter_by_substring($input, \"a\");\nprint_r($input);",
  "    // your code goes here\n}\n", "    return array_filter($strings, function($v)\
    \ use ($substring) {\n        return strpos($v, $substring) !== false;\n    });\n\
    }\n", "\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\t\
    if (strpos($string, $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\
    \t}\n\t}\n\treturn $filtered;\n}\n", "    $result = [];\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $result[] = $string;\n        }\n    }\n    return $result;\n}\n", "  \
    \  $new_array = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $new_array[] = $string;\n        }\n \
    \   }\n    return $new_array;\n}\n", "    $n = count($strings);\n    $result =\
    \ [];\n    for ($i = 0; $i < $n; $i++) {\n        if (strpos($strings[$i], $substring)\
    \ !== false) {\n            $result[] = $strings[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "\treturn array_filter($strings, function($string) use ($substring)\
    \ {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\n", "    $strings\
    \ = array_filter($strings, function($string) use ($substring) {\n        return\
    \ strpos($string, $substring) !== false;\n    });\n    return $strings;\n}\n",
  "    return array_filter($strings, function($a) use ($substring) {\n        return\
    \ strpos($a, $substring) !== false;\n    });\n}\n", "    $filtered = [];\n   \
    \ foreach ($strings as $s) {\n        if (strpos($s, $substring) !== false) {\n\
    \            $filtered[] = $s;\n        }\n    }\n    return $filtered;\n}\n",
  "  foreach ($strings as $item) {\n    if (strpos($item, $substring) !== false) {\n\
    \      $results[] = $item;\n    }\n  }\n  return $results;\n}", "  return array_filter($strings,\
    \ function($string) use ($substring) {\n    return strpos($string, $substring)\
    \ !== false;\n  });\n}", "\treturn array_filter($strings, function($string) use\
    \ ($substring) {\n\t\treturn strpos($string, $substring) !== false;\n\t});\n}\n",
  "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n", "\t$result = [];\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "  return array_filter($strings, function($string)\
    \ use ($substring) {\n    return strpos($string, $substring) !== false;\n  });\n\
    }\n", "    $filtered = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n\n$pairs = [\n    ['abc', 'abc', true],\n    ['xabcd',\
    \ 'abc', true],\n    ['abcd', 'abc', true],\n    ['cabcd', 'abc', true],\n   \
    \ ['xyz', 'abc', false],\n    ['zbc', 'abc', false],\n    ['', 'abc', false],\n\
    \    ['abc', '', true],\n    ['', '', true],\n];\n", "    $result = [];\n    foreach\
    \ ($strings as $value) {\n        if (strpos($value, $substring) !== false) {\n\
    \            $result[] = $value;\n        }\n    }\n    return $result;\n}\n",
  "\treturn array_filter($strings, function($string) use ($substring) {\n\t\treturn\
    \ strpos($string, $substring) !== false;\n\t});\n}", "\treturn array_filter($strings,\
    \ function($string) use ($substring) {\n\t\treturn strpos($string, $substring)\
    \ !== false;\n\t});\n}\n", "    $out = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $out[]\
    \ = $string;\n        }\n    }\n    return $out;\n}", "  $filtered_strings = [];\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $substring) !== false)\
    \ {\n      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }\n", "    return array_filter($strings, function($string) use ($substring) {\n\
    \        return strpos($string, $substring) !== false;\n    });\n}\n", "\treturn\
    \ array_filter($strings, function($string) use ($substring) {\n\t\treturn strpos($string,\
    \ $substring) !== false;\n\t});\n}", "  $result = [];\n  foreach ($strings as\
    \ $string) {\n    if (strpos($string, $substring) !== false) {\n      $result[]\
    \ = $string;\n    }\n  }\n  return $result;\n}\n", "    $strings = array_filter($strings,\
    \ function($s) use ($substring) {\n        return strpos($s, $substring) !== false;\n\
    \    });\n    return $strings;\n}\n", "\t$result = [];\n\tforeach ($strings as\
    \ $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $result;\n}", "  $filtered = [];\n  foreach\
    \ ($strings as $string) {\n    if (strpos($string, $substring) !== false) {\n\
    \      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n", "    $filtered\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    // TODO\n}\n", "    $result = [];\n    foreach ($strings\
    \ as $string) {\n        if (substr_count($string, $substring) > 0) {\n      \
    \      $result[] = $string;\n        }\n    }\n    return $result;\n}\n", "  \
    \  $ret = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $ret[] = $string;\n        }\n    }\n\
    \    return $ret;\n}", "    return array_filter($strings, function($string) use\
    \ ($substring) {\n        return strpos($string, $substring) !== false;\n    });\n\
    }", "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n", "  $filtered = [];\n  foreach ($strings as $s) {\n\
    \    if (strpos($s, $substring) !== false) {\n      $filtered[] = $s;\n    }\n\
    \  }\n  return $filtered;\n}\n", "  $result = [];\n  foreach ($strings as $string)\
    \ {\n    if (strpos($string, $substring) !== false) {\n      $result[] = $string;\n\
    \    }\n  }\n  return $result;\n}", "    return array_filter($strings, function($s)\
    \ use ($substring) {\n        return strpos($s, $substring) !== false;\n    });\n\
    }", "    return array_filter($strings, function($string) use ($substring) {\n\
    \        return strpos($string, $substring) !== false;\n    });\n}\n\nprint_r(filter_by_substring(['abc',\
    \ 'bacd', 'cde', 'array'], 'a'));", "\t$ret = [];\n\tforeach ($strings as $s)\
    \ {\n\t\tif (strpos($s, $substring) !== false) {\n\t\t\t$ret[] = $s;\n\t\t}\n\t\
    }\n\treturn $ret;\n}\n", "\t$ans = [];\n\tforeach ($strings as $string) {\n\t\t\
    if (stristr($string, $substring)) {\n\t\t\t$ans[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $ans;\n}\n", "\t$filtered = [];\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}", "  $result = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $result[] = $string;\n    }\n\
    \  }\n  return $result;\n}\n", "\t$results = [];\n\tforeach ($strings as $string)\
    \ {\n\t\tif (substr_count($string, $substring) > 0) {\n\t\t\t$results[] = $string;\n\
    \t\t}\n\t}\n\treturn $results;\n}\n", "  $new_strings = [];\n  foreach ($strings\
    \ as $string) {\n    if (strpos($string, $substring) !== false) {\n      $new_strings[]\
    \ = $string;\n    }\n  }\n  return $new_strings;\n}\n", "  $result = [];\n  foreach\
    \ ($strings as $string) {\n    if (strpos($string, $substring) !== false) {\n\
    \      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($strings as $key => $value) {\n        if (strpos($value,\
    \ $substring) !== false) {\n            $result[] = $value;\n        }\n    }\n\
    \    return $result;\n}", "\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $substring) !== false) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $filtered;\n}\n", "    return array_filter($strings, function($elem) use ($substring)\
    \ {\n        return strpos($elem, $substring) !== false;\n    });\n}", "    $filtered\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    // your code here\n    return array_filter($strings,\
    \ function($str) use ($substring) {\n        return strpos($str, $substring) !==\
    \ false;\n    });\n}\n", "  $matches = [];\n  foreach ($strings as $string) {\n\
    \    if (strpos($string, $substring) !== false) {\n      $matches[] = $string;\n\
    \    }\n  }\n  return $matches;\n}\n", "    $result = [];\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $result[] = $string;\n        }\n    }\n    return $result;\n}", "  $result\
    \ = [];\n  foreach ($strings as $string) {\n    if (mb_strpos($string, $substring)\
    \ !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}",
  "  $result = [];\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n",
  "    $matches = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $matches[] = $string;\n        }\n   \
    \ }\n    return $matches;\n}\n", "\t$new_array = [];\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$new_array[] = $string;\n\
    \t\t}\n\t}\n\treturn $new_array;\n}\n", "  $filtered_strings = [];\n  foreach\
    \ ($strings as $string) {\n    if (strpos($string, $substring) !== false) {\n\
    \      $filtered_strings[] = $string;\n    }\n  }\n  return $filtered_strings;\n\
    }", "    foreach ($strings as $key => $value) {\n        if (strpos($value, $substring)\
    \ === false) {\n            unset($strings[$key]);\n        }\n    }\n    return\
    \ $strings;\n}\n", "    $result = [];\n    foreach ($strings as $value) {\n  \
    \      if (strpos($value, $substring) !== false) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $filtered = [];\n    foreach\
    \ ($strings as $str) {\n        if (strpos($str, $substring) !== false) {\n  \
    \          $filtered[] = $str;\n        }\n    }\n    return $filtered;\n}\n\n\
    $strings = ['abc', 'bacd', 'cde', 'array'];\n$substring = 'a';\nprint_r(filter_by_substring($strings,\
    \ $substring));", "    return array_filter($strings, function($string) use ($substring)\
    \ {\n        return strpos($string, $substring) !== false;\n    });\n}\n", "\t\
    foreach ($strings as $string) {\n\t\tif (strpos($string, $substring) !== false)\
    \ {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}", "    $res\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $res[] = $string;\n        }\n    }\n    return $res;\n\
    }\n", "  $result = [];\n  foreach ($strings as $item) {\n    if (strpos($item,\
    \ $substring) !== false) {\n      $result[] = $item;\n    }\n  }\n  return $result;\n\
    }\n", "  $new_array = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $new_array[] = $string;\n    }\n  }\n  return\
    \ $new_array;\n}", "    // your code here\n}", "    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}", "    $i = 0;\n    $len = count($strings);\n    $output\
    \ = [];\n    for ($i; $i < $len; $i++) {\n        if (strpos($strings[$i], $substring)\
    \ !== false) {\n            $output[] = $strings[$i];\n        }\n    }\n    return\
    \ $output;\n}\n", "  $result = [];\n  foreach ($strings as $string) {\n    if\
    \ (strpos($string, $substring) !== false) {\n      $result[] = $string;\n    }\n\
    \  }\n  return $result;\n}\n", "  foreach ($strings as $str) {\n    if (strpos($str,\
    \ $substring) !== false) {\n      $res[] = $str;\n    }\n  }\n  return $res;\n\
    }\n", "    $result = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $result[] = $string;\n        }\n    }\n\
    \    return $result;\n}\n\n$input = ['abc', 'bacd', 'cde', 'array'];\n\nvar_dump(filter_by_substring($input,\
    \ 'a'));\nvar_dump(filter_by_substring($input, 'b'));\nvar_dump(filter_by_substring($input,\
    \ 'c'));\nvar_dump(filter_by_substring($input, 'd'));\nvar_dump(filter_by_substring($input,\
    \ 'e'));\nvar_dump(filter_by_substring($input, 'z'));", "    $filtered = [];\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "    $filtered = [];\n    foreach ($strings as $s) {\n   \
    \     if (strpos($s, $substring) !== false) {\n            $filtered[] = $s;\n\
    \        }\n    }\n    return $filtered;\n}", "\t$new_list = [];\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$new_list[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $new_list;\n}\n", "\treturn array_filter($strings,\
    \ function($s) use ($substring) {\n\t\treturn strpos($s, $substring) !== false;\n\
    \t});\n}\n", "    $filtered = [];\n    foreach ($strings as $str) {\n        if\
    \ (strpos($str, $substring) !== false) {\n            $filtered[] = $str;\n  \
    \      }\n    }\n    return $filtered;\n}", "\t$output = [];\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$output[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $output;\n}\n\n$stdin = fopen(\"php://stdin\"\
    , \"r\");\nfscanf($stdin, \"%d\\n\", $strings_count);\n$strings = [];\nfor ($i\
    \ = 0; $i < $strings_count; $i++) {\n\tfscanf($stdin, \"%s\\n\", $strings_item);\n\
    \t$strings[] = $strings_item;\n}\nfscanf($stdin, \"%s\\n\", $substring);\n$result\
    \ = filter_by_substring($strings, $substring);\necho implode(\"\\n\", $result)\
    \ . \"\\n\";\nfclose($stdin);", "    return array_filter($strings, function($s)\
    \ use ($substring) {\n        return strpos($s, $substring) !== false;\n    });\n\
    }\n", "  $matches = [];\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $substring) !== false) {\n      $matches[] = $string;\n    }\n  }\n  return\
    \ $matches;\n}\n", "  $filtered = [];\n  foreach ($strings as $string) {\n   \
    \ if (strpos($string, $substring) !== false) {\n      $filtered[] = $string;\n\
    \    }\n  }\n  return $filtered;\n}\n", "\t$filtered = [];\n\tforeach ($strings\
    \ as $string) {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $filtered = [];\n  \
    \  foreach ($strings as $string) {\n        if (strpos($string, $substring) !==\
    \ false) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "    // TODO\n}\n", "\t$result = [];\n\tforeach ($strings as $string) {\n\
    \t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\
    \t\t}\n\t}\n\treturn $result;\n}", "\t$result = [];\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $substring) !== false) {\n\t\t\t$result[] = $string;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "  // your code here\n}\n", "    $result\
    \ = [];\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)\
    \ !== false) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $filtered_strings = [];\n    foreach ($strings as $string)\
    \ {\n        if (strpos($string, $substring) !== false) {\n            $filtered_strings[]\
    \ = $string;\n        }\n    }\n    return $filtered_strings;\n}", "    return\
    \ array_filter($strings, function($str) use ($substring) {\n        return strpos($str,\
    \ $substring) !== false;\n    });\n}\n", "    $filtered = [];\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $substring) !== false) {\n      \
    \      $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n",
  "  return array_filter($strings, function($string) use ($substring) {\n    return\
    \ strpos($string, $substring) !== false;\n  });\n}\n", "\t$result = [];\n\tforeach\
    \ ($strings as $str) {\n\t\tif (strpos($str, $substring) !== false) {\n\t\t\t\
    $result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    return array_filter($strings,\
    \ function($string) use ($substring) {\n        return strpos($string, $substring)\
    \ !== false;\n    });\n}", "    // your code goes here\n\n    $substr=str_split($substring);\n\
    \    $count=count($substr);\n    $res=[];\n    for($i=0;$i<count($strings);$i++){\n\
    \        $num=0;\n        $temp=str_split($strings[$i]);\n        for($j=0;$j<count($temp);$j++){\n\
    \            if($temp[$j]==$substr[$num]){\n                $num++;\n        \
    \    }\n            if($num==$count){\n                $res[]=$strings[$i];\n\
    \                break;\n            }\n        }\n    }\n    return $res;\n}\n\
    \nfilter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a');", "    $res = [];\n\
    \    foreach ($strings as $str) {\n        if (strpos($str, $substring) !== false)\
    \ {\n            $res[] = $str;\n        }\n    }\n    return $res;\n}\n", " \
    \   return array_filter($strings, function($string) use ($substring) {\n     \
    \   return strpos($string, $substring) !== false;\n    });\n}\n", "  $filtered\
    \ = [];\n  foreach ($strings as $string) {\n    if (strpos($string, $substring)\
    \ !== false) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n\
    }\n", "    $filtered = [];\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $substring) !== false) {\n            $filtered[] = $string;\n        }\n  \
    \  }\n    return $filtered;\n}\n", "    return array_filter($strings, function($s)\
    \ use ($substring) {\n        return strpos($s, $substring) !== false;\n    });\n\
    }", "    $strings = array_filter($strings, function($str) use ($substring) {\n\
    \        return strpos($str, $substring) !== false;\n    });\n    return $strings;\n\
    }\n", "    $arr = [];\n    foreach ($strings as $str) {\n        if (strpos($str,\
    \ $substring) !== false) {\n            $arr[] = $str;\n        }\n    }\n   \
    \ return $arr;\n}", "  return array_filter($strings, function($str) use ($substring)\
    \ {\n    return strpos($str, $substring) !== false;\n  });\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

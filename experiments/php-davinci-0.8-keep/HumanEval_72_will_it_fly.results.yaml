name: HumanEval_72_will_it_fly
language: php
results:
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$bal = function($q){\n\t\t$l = count($q);\n\t\
    \t$l2 = intval($l/2);\n\t\t$bal = true;\n\t\tfor($i=0; $i<$l2; $i++){\n\t\t\t\
    if($q[$i]!=$q[$l-$i-1]){\n\t\t\t\t$bal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\
    }\n\t\treturn $bal;\n\t};\n\t\n\t$sum = function($q){\n\t\t$sum = 0;\n\t\tfor($i=0;\
    \ $i<count($q); $i++){\n\t\t\t$sum+=$q[$i];\n\t\t}\n\t\treturn $sum;\n\t};\n\t\
    \n\treturn $bal($q) && $sum($q)<=$w;\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn $q == array_reverse($q) && array_sum($q)\
    \ <= $w;\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = array_sum($q);\n    if ($sum > $w)\
    \ {\n        return false;\n    }\n    $reverse = array_reverse($q);\n    if ($q\
    \ == $reverse) {\n        return true;\n    }\n    return false;\n}\necho will_it_fly([1,\
    \ 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(array_sum($q) > $w) {\n\t\treturn false;\n\
    \t}\n\tif(array_sum($q) <= $w && $q == array_reverse($q)) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2,\
    \ 3], 1);\necho will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(array_sum($q) <= $w && $q === array_reverse($q))\
    \ {\n\t\treturn 'True';\n\t} else {\n\t\treturn 'False';\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprll8c7rs.php:25\n\
    Stack trace:\n#0 /tmp/tmprll8c7rs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprll8c7rs.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$length = count($q);\n\t$start = 0;\n\t$end\
    \ = $length - 1;\n\t$sum = 0;\n\twhile ($start <= $end) {\n\t\tif ($q[$start]\
    \ == $q[$end]) {\n\t\t\t$sum += $q[$start];\n\t\t\t$start++;\n\t\t\t$end--;\n\t\
    \t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn $sum <= $w;\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\necho will_it_fly([1, 2], 5);\necho will_it_fly([3,\
    \ 2, 3], 1);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = array_sum($q);\n  $check = array_unique($q);\n\
    \  if($sum<=$w && $check==$q){\n    return true;\n  }\n  return false;\n}\necho\
    \ will_it_fly([3, 2, 3], 9);\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytw4d11f.php:28\n\
    Stack trace:\n#0 /tmp/tmpytw4d11f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpytw4d11f.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $len = count($q);\n    $sum = array_sum($q);\n\
    \    $res = array_slice($q, 0, intval($len/2));\n    $rev = array_reverse($res);\n\
    \    return ($sum <= $w && $res == $rev) ? true : false;\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\n\
    echo will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmunb4h7k.php:33\n\
    Stack trace:\n#0 /tmp/tmpmunb4h7k.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmunb4h7k.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if(array_sum($q) > $w){\n    return false;\n\
    \  }\n  if(array_sum($q) <= $w){\n    $str = '';\n    foreach($q as $value){\n\
    \      $str .= $value;\n    }\n    $palindrome = strrev($str);\n    if($str ==\
    \ $palindrome){\n      return true;\n    }else{\n      return false;\n    }\n\
    \  }\n}\necho will_it_fly([3,2,3], 9) . '<br>';\necho will_it_fly([3,2,3], 1)\
    \ . '<br>';\necho will_it_fly([1,2], 5) . '<br>';\necho will_it_fly([3], 5) .\
    \ '<br>';\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif (count($q) == 1) {\n\t\t\treturn true;\n\
    \t\t} else if ($q == $rev) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\
    \t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho\
    \ \"\\n\";\necho will_it_fly([3, 2, 3], 1);\necho \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 9);\necho \"\\n\";\necho will_it_fly([3], 5);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\t$palindrome = false;\n\t$arrayLength\
    \ = count($q);\n\t$maxWeight = $w;\n\tif($arrayLength == 1) {\n\t\t$palindrome\
    \ = true;\n\t}\n\tfor($i = 0; $i < $arrayLength; $i++) {\n\t\t$total += $q[$i];\n\
    \t\tif($i+1 < $arrayLength) {\n\t\t\tif($q[$i] == $q[$arrayLength - $i - 1]) {\n\
    \t\t\t\t$palindrome = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn $palindrome && $total\
    \ <= $maxWeight;\n}\necho will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 1) . \"\\n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3],\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkjviu4a.php:44\n\
    Stack trace:\n#0 /tmp/tmpvkjviu4a.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpvkjviu4a.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$l = 0;\n\t$r = count($q) - 1;\n\t$m = count($q)\
    \ / 2;\n\t$sum = 0;\n\tfor ($i = 0; $i < $m; $i++) {\n\t\tif ($q[$l] !== $q[$r])\
    \ {\n\t\t\treturn false;\n\t\t}\n\t\t$l++;\n\t\t$r--;\n\t}\n\tfor ($i = 0; $i\
    \ < count($q); $i++) {\n\t\t$sum += $q[$i];\n\t}\n\tif ($sum <= $w) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\necho will_it_fly([3,2,3], 9) . \"\\n\";\necho\
    \ will_it_fly([3,2,3], 7) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\tfor ($i=0; $i < count($q); $i++)\
    \ { \n\t\t$total += $q[$i];\n\t}\n\tif($total <= $w){\n\t\tif(count($q) > 1){\n\
    \t\t\t$i = 0;\n\t\t\t$j = count($q) - 1;\n\t\t\twhile($i < $j){\n\t\t\t\tif($q[$i]\
    \ != $q[$j]){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t\t$j--;\n\
    \t\t\t}\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn true;\n\t\t}\n\t}else{\n\
    \t\treturn false;\n\t}\n}\necho will_it_fly([1, 2], 5) ? \"True\" : \"False\"\
    ;\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1) ? \"True\" : \"False\";\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9) ? \"True\" : \"False\";\necho \"<br>\"\
    ;\necho will_it_fly([3], 5) ? \"True\" : \"False\";\necho \"<br>\";\necho will_it_fly([],\
    \ 5) ? \"True\" : \"False\";\necho \"<br>\";\necho will_it_fly([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\
    \ 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\
    \ 83, 84, 85, 86\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8yt521b3.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn ($q === array_reverse($q) && array_sum($q)\
    \ <= $w);\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif ($q == array_reverse($q) && array_sum($q)\
    \ <= $w) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\t$r = 0;\n\t$isBalanced = true;\n\
    \t$arr_count = count($q);\n\t$half_count = floor($arr_count/2);\n\tfor($i = 0;\
    \ $i < $half_count; $i++){\n\t\tif($q[$i] !== $q[$arr_count - $i - 1]){\n\t\t\t\
    $isBalanced = false;\n\t\t}\n\t}\n\tfor($i = 0; $i < $arr_count; $i++){\n\t\t\
    $total += $q[$i];\n\t}\n\tif($total <= $w && $isBalanced){\n\t\t$r = true;\n\t\
    }else{\n\t\t$r = false;\n\t}\n\treturn $r;\n}\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum > $w){\n\t\t\
    return false;\n\t}\n\t$palindrome = array_slice($q, 0, count($q)/2);\n\tfor($i\
    \ = 0; $i < count($palindrome); $i++){\n\t\tif($palindrome[$i] != $q[count($q)-1-$i]){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\necho will_it_fly([1, 2], 5);\n\
    echo will_it_fly([3, 2, 3], 1);\necho will_it_fly([3, 2, 3], 9);\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = array_sum($q);\n    if($sum <= $w &&\
    \ $q == array_reverse($q)){\n        return true;\n    }\n    return false;\n\
    }\necho will_it_fly([1, 2], 5) ? 'true' : 'false';\necho \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 1) ? 'true' : 'false';\necho \"\\n\";\necho will_it_fly([3, 2, 3], 9)\
    \ ? 'true' : 'false';\necho \"\\n\";\necho will_it_fly([3], 5) ? 'true' : 'false';\n\
    echo \"\\n\";\necho will_it_fly([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9g2r7wwh.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum > $w) {\n\t\
    \treturn false;\n\t}\n\t$reverse = array_reverse($q);\n\tif ($q === $reverse)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $arr1 = $q;\n  $arr2 = array_reverse($q);\n\
    \  $sum = array_sum($q);\n  if ($arr1 === $arr2 && $sum <= $w) {\n    return 'True';\n\
    \  }\n  else {\n    return 'False';\n  }\n}\necho will_it_fly([3, 2, 3], 9) .\
    \ PHP_EOL;\necho will_it_fly([1, 2], 5) . PHP_EOL;\necho will_it_fly([3, 2, 3],\
    \ 1) . PHP_EOL;\necho will_it_fly([3], 5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFalse\nFalse\nTrue\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0ktwe1qc.php:33\nStack trace:\n#0 /tmp/tmp0ktwe1qc.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0ktwe1qc.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$q = implode('', $q);\n\tif(strrev($q) == $q){\n\
    \t\tif(array_sum($q) < $w){\n\t\t\treturn 'true';\n\t\t}\n\t}\n\treturn 'false';\n\
    }\necho will_it_fly([1, 2], 5) . '<br>';\necho will_it_fly([3, 2, 3], 1) . '<br>';\n\
    echo will_it_fly([3, 2, 3], 9) . '<br>';\necho will_it_fly([3], 5) . '<br>';\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false<br>\nWarning: array_sum() expects parameter 1 to be array, string\
    \ given in /tmp/tmpkzm7m0up.php on line 16\ntrue<br>\nWarning: array_sum() expects\
    \ parameter 1 to be array, string given in /tmp/tmpkzm7m0up.php on line 16\ntrue<br>\n\
    Warning: array_sum() expects parameter 1 to be array, string given in /tmp/tmpkzm7m0up.php\
    \ on line 16\ntrue<br>\nWarning: array_sum() expects parameter 1 to be array,\
    \ string given in /tmp/tmpkzm7m0up.php on line 16\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpkzm7m0up.php:31\nStack trace:\n#0 /tmp/tmpkzm7m0up.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkzm7m0up.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (count($q) === 1) {\n\t\treturn true;\n\t\
    }\n\t$sum = array_sum($q);\n\tif ($sum > $w) {\n\t\treturn false;\n\t}\n\t$reverse\
    \ = array_reverse($q);\n\tfor ($i = 0; $i < count($q); $i++) {\n\t\tif ($q[$i]\
    \ !== $reverse[$i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\necho\
    \ will_it_fly([3, 2, 3], 1);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$result = [];\n\t$result1 = [];\n\t$counter\
    \ = 0;\n\tfor ($i=0; $i < count($q); $i++) { \n\t\t$sum = array_sum($q);\n\t\t\
    for ($j=0; $j < count($q); $j++) { \n\t\t\tif ($i != $j) {\n\t\t\t\tif ($q[$i]\
    \ == $q[$j]) {\n\t\t\t\t\t$counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tarray_push($result,\
    \ $counter);\n\t\t$counter = 0;\n\t}\n\tfor ($i=0; $i < count($result); $i++)\
    \ { \n\t\tif ($result[$i] == 0) {\n\t\t\tarray_push($result1, \"False\");\n\t\t\
    }\n\t\telse {\n\t\t\tarray_push($result1, \"True\");\n\t\t}\n\t}\n\tif (in_array(\"\
    False\", $result1)) {\n\t\tif ($sum <= $w) {\n\t\t\treturn \"True\";\n\t\t}\n\t\
    \telse {\n\t\t\treturn \"False\";\n\t\t}\n\t}\n\telse {\n\t\tif ($sum <= $w) {\n\
    \t\t\treturn \"True\";\n\t\t}\n\t\telse {\n\t\t\treturn \"False\";\n\t\t}\n\t\
    }\n}\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([1,\
    \ 2], 5);\necho \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True<br>True<br>False<br>True<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwtp1449q.php:67\nStack trace:\n#0 /tmp/tmpwtp1449q.php(75):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwtp1449q.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = array_sum($q);\n  $count = count($q);\n\
    \  $rev_q = [];\n  \n  if($sum > $w){\n    return False;\n  }\n  if($count > 1){\n\
    \    for($i = $count - 1; $i >= 0; $i--){\n      array_push($rev_q, $q[$i]);\n\
    \    }\n    for($i = 0; $i < $count; $i++){\n      if($q[$i] != $rev_q[$i]){\n\
    \        return False;\n      }\n    }\n  }\n  return True;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$q = array_sum($q);\n\tif ($q > $w) {\n\t\t\
    return false;\n\t} elseif ($q <= $w) {\n\t\treturn true;\n\t}\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdig2y_ac.php:28\n\
    Stack trace:\n#0 /tmp/tmpdig2y_ac.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdig2y_ac.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$elements = array_sum($q);\n\t$str=implode(\"\
    \",$q);\n\t$revstr=strrev($str);\n\tif ($elements <= $w && $str === $revstr) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $arrCount = 0;\n    $arrCount = count($q);\n\
    \    $sum = 0;\n    $arrSum = 0;\n    for($i = 0; $i < $arrCount; $i++){\n   \
    \     $sum += $q[$i];\n    }\n    $arrSum = array_sum($q);\n    if($sum <= $w\
    \ && $arrSum == $sum){\n        return \"True\";\n    }else{\n        return \"\
    False\";\n    }\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ocn_zuu.php:34\n\
    Stack trace:\n#0 /tmp/tmp0ocn_zuu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0ocn_zuu.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$q_reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $q_reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$balanced = $q ===\
    \ array_reverse($q);\n\treturn $sum <= $w && $balanced;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (count($q) <= 1) {\n\t\treturn true;\n\t\
    }\n\t$p = count($q) - 1;\n\t$s = 0;\n\tfor ($i = 0; $i < $p; $i++) {\n\t\t$s +=\
    \ $q[$i];\n\t\tif ($s > $w) {\n\t\t\treturn false;\n\t\t}\n\t\t$s += $q[$p - $i];\n\
    \t\tif ($s > $w) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\necho will_it_fly([1,\
    \ 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\\n\";\necho will_it_fly([3,\
    \ 4, 6, 5, 7, 8, 1, 3, 4, 3, 2, 4, 7, 1, 2, 4, 7, 8, 3, 4, 7, 3, 4, 5, 7, 1, 2,\
    \ 4, 7, 8, 3, 4, 7, 3, 4, 5, 7, 1, 2, 4, 7, 8, 3, 4, 7, 3, 4, 5, 7, 1, 2, 4, 7,\
    \ 8, 3, 4, 7, 3, 4, 5, 7, 1, 2, 4, 7, 8, 3, 4, 7, 3, 4, 5, 7, 1, 2, 4, 7, 8, 3,\
    \ 4, 7, 3, 4, 5, 7, 1, 2, 4, 7, 8, 3, 4, 7, 3, 4, 5, 7, 1, 2, 4, 7, 8, 3, 4, 7,\
    \ 3, 4, 5, 7, 1, 2, 4, 7, 8, 3, 4, 7, 3, 4, 5, 7, 1, 2, 4, 7, 8, 3, 4, 7, 3, 4,\
    \ 5, 7, 1, 2, 4, 7, 8, 3, 4, 7, 3, 4, 5, 7, 1\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsitdvk7i.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = array_sum($q);\n    if($sum <= $w &&\
    \ $q === array_reverse($q)){\n        return \"true\";\n    }else{\n        return\
    \ \"false\";\n    }\n}\necho will_it_fly([1, 2], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpe3bqgw.php:27\n\
    Stack trace:\n#0 /tmp/tmpxpe3bqgw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxpe3bqgw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n$sum = 0;\n$a = array_reverse($q);\nfor($i = 0;\
    \ $i < count($q); $i++){\n$sum = $sum + $q[$i];\nif($sum <= $w && $q == $a){\n\
    return \"True\";\n}\n}\nreturn \"False\";\n}\n\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjrct26x.php:30\n\
    Stack trace:\n#0 /tmp/tmpqjrct26x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqjrct26x.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3,\
    \ 2, 3], 1);\necho will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3h0glf4.php:25\n\
    Stack trace:\n#0 /tmp/tmpm3h0glf4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpm3h0glf4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $counter = 1;\n    $len = count($q);\n   \
    \ $total = 0;\n    foreach($q as $item){\n        $total += $item;\n    }\n  \
    \  if($total > $w){\n        return false;\n    }\n    for($i = 0; $i < $len/2;\
    \ $i++){\n        if($q[$i] != $q[$len-$counter]){\n            return false;\n\
    \        }\n        $counter++;\n    }\n    return true;\n}\necho will_it_fly([3,\
    \ 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\\n\";\necho will_it_fly([1,\
    \ 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn (array_sum($q) <= $w);\n}\necho will_it_fly([1,\
    \ 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3, 2, 3], 9);\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tzg39se.php:26\n\
    Stack trace:\n#0 /tmp/tmp1tzg39se.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1tzg39se.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$i = count($q);\n\t\
    if($i > 1){\n\t\tfor($a = 0; $a < $i; $a++){\n\t\t\t$x = $q[$a];\n\t\t\tfor($b\
    \ = $a + 1; $b < $i; $b++){\n\t\t\t\t$y = $q[$b];\n\t\t\t\tif($x == $y){\n\t\t\
    \t\t\tunset($q[$a]);\n\t\t\t\t\tunset($q[$b]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t\tif(empty($q)){\n\t\t\treturn ($sum <= $w) ? \"True\" : \"False\"\
    ;\n\t\t}\n\t}\n\treturn ($sum <= $w) ? \"True\" : \"False\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxkqhrma.php:40\n\
    Stack trace:\n#0 /tmp/tmpcxkqhrma.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcxkqhrma.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if (count($q) == 1) {\n    return true;\n  }\n\
    \  $sum = 0;\n  $i = 0;\n  $j = count($q) - 1;\n  for ($i = 0; $i < count($q);\
    \ $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return false;\n \
    \ }\n  while ($i < $j) {\n    if ($q[$i] != $q[$j]) {\n      return false;\n \
    \   }\n    $i++;\n    $j--;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bz13hgm.php:41\n\
    Stack trace:\n#0 /tmp/tmp2bz13hgm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2bz13hgm.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$left = 0;\n\t$right = sizeof($q) - 1;\n\t\n\
    \twhile ($left < $right) {\n\t\tif ($q[$left] != $q[$right]) {\n\t\t\treturn false;\n\
    \t\t}\n\t\t$left++;\n\t\t$right--;\n\t}\n\treturn array_sum($q) <= $w;\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$rev=array_reverse($q);\n\tif(array_sum($q)>$w\
    \ || $q!=$rev){\n\t\treturn false;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n$even = $q[0];\n$even += $q[count($q)-1];\nif($even\
    \ <= $w){\n    if($q[0] == $q[count($q)-1]){\n        return true;\n    }else{\n\
    \        return false;\n    }\n}else{\n    return false;\n}\n}\nprint_r(will_it_fly([3,\
    \ 2, 3], 9));\nprint_r(will_it_fly([3], 5));\nprint_r(will_it_fly([3, 2, 3], 1));\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f93g9r9.php:36\n\
    Stack trace:\n#0 /tmp/tmp9f93g9r9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9f93g9r9.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$is_balanced = is_palindrome($q);\n\
    \t$will_fly = $sum <= $w && $is_balanced;\n\treturn $will_fly;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpekqxd_zt.php:15\nStack trace:\n#0 /tmp/tmpekqxd_zt.php(21): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpekqxd_zt.php(25): candidate(Array, 9)\n#2 /tmp/tmpekqxd_zt.php(33):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpekqxd_zt.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$len = count($q);\n\t$sum = array_sum($q);\n\
    \t$palindrome = TRUE;\n\tif ($len % 2 == 0) {\n\t\t$i = $len / 2;\n\t\t$n = $len\
    \ / 2;\n\t} else {\n\t\t$i = floor($len / 2);\n\t\t$n = ceil($len / 2);\n\t}\n\
    \twhile ($i > 0) {\n\t\tif ($q[$i - 1] != $q[$n - 1]) {\n\t\t\t$palindrome = FALSE;\n\
    \t\t\tbreak;\n\t\t}\n\t\t$i--;\n\t\t$n++;\n\t}\n\treturn ($sum <= $w && $palindrome);\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53xuwuru.php:40\n\
    Stack trace:\n#0 /tmp/tmp53xuwuru.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp53xuwuru.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = array_sum($q);\n  $reverse = array_reverse($q);\n\
    \  if ($q == $reverse && $sum <= $w) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\necho will_it_fly([1, 2], 5) . PHP_EOL;\necho will_it_fly([3,\
    \ 2, 3], 1) . PHP_EOL;\necho will_it_fly([3, 2, 3], 9) . PHP_EOL;\necho will_it_fly([3],\
    \ 5) . PHP_EOL;\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif ($q == array_reverse($q) && array_sum($q)\
    \ <= $w) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4l6xo22_.php:21\n\
    Stack trace:\n#0 /tmp/tmp4l6xo22_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4l6xo22_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n$sum = array_sum($q);\n$palindrome = array_reverse($q);\n\
    if ($sum <= $w){\n\tif ($q == $palindrome){\n\t\treturn true;\n\t}\n}\nreturn\
    \ false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$left = 0;\n\t$right = count($q) - 1;\n\t$sum\
    \ = 0;\n\twhile ($left < $right) {\n\t\tif ($q[$left] != $q[$right]) {\n\t\t\t\
    return false;\n\t\t}\n\t\t$left++;\n\t\t$right--;\n\t}\n\tfor ($i = 0; $i < count($q);\
    \ $i++) {\n\t\t$sum += $q[$i];\n\t}\n\tif ($sum <= $w) {\n\t\treturn true;\n\t\
    }\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (array_sum($q) <= $w) {\n\t\tif ($q == array_reverse($q))\
    \ {\n\t\t\treturn 'True';\n\t\t} else {\n\t\t\treturn 'False';\n\t\t}\n\t} else\
    \ {\n\t\treturn 'False';\n\t}\n}\necho will_it_fly([3,2,3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg8b248__.php:30\n\
    Stack trace:\n#0 /tmp/tmpg8b248__.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg8b248__.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(array_sum($q) > $w){\n        return false;\n\
    \    }elseif (array_sum($q) <= $w){\n        $reversed_arr = array_reverse($q);\n\
    \        if ($q == $reversed_arr){\n            return true;\n        }else{\n\
    \            return false;\n        }\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$r = array_reverse($q);\n\t$sum = array_sum($q);\n\
    \tif ($sum <= $w && $q == $r) {\n\t\treturn 'True';\n\t} else {\n\t\treturn 'False';\n\
    \t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_7fxktt.php:27\n\
    Stack trace:\n#0 /tmp/tmpw_7fxktt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw_7fxktt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (array_sum($q) <= $w) {\n\t\t$first_half\
    \ = array_slice($q, 0, ceil(count($q) / 2));\n\t\t$second_half = array_slice($q,\
    \ floor(count($q) / 2));\n\t\t$first_half = array_reverse($first_half);\n\t\t\
    if ($first_half == $second_half) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\\\
    n\";\necho will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum <= $w){\n\t\
    \tif(count($q) == 1 || array_reverse($q) == $q){\n\t\t\treturn 'True';\n\t\t}\n\
    \t}\n\treturn 'False';\n}\necho will_it_fly([1, 2], 5); // \u279E False \necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 1); // \u279E False\necho \"<br>\";\n\
    echo will_it_fly([3, 2, 3], 9); // \u279E True\necho \"<br>\";\necho will_it_fly([3],\
    \ 5); // \u279E True\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>True<br>True\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpw_8r6gns.php:34\nStack trace:\n#0 /tmp/tmpw_8r6gns.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpw_8r6gns.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(count($q) == 1) return true;\n\tif(count($q)\
    \ % 2 == 0) return false;\n\t$firstHalf = array_slice($q, 0, count($q) / 2);\n\
    \t$secondHalf = array_slice($q, count($q) / 2 + 1);\n\t$secondHalf = array_reverse($secondHalf);\n\
    \tif(array_sum($q) <= $w && $firstHalf == $secondHalf) return true;\n\treturn\
    \ false;\n}\necho will_it_fly([1, 2], 5) . \"\\n\"; //False\necho will_it_fly([3,\
    \ 2, 3], 1) . \"\\n\"; //False\necho will_it_fly([3, 2, 3], 9) . \"\\n\"; //True\n\
    echo will_it_fly([3], 5) . \"\\n\"; //True\nfunction candidate(...$args) {\n \
    \   return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$weight = 0;\n\t$length = count($q);\n\t$count\
    \ = 0;\n\tfor ($i=0; $i < $length; $i++) { \n\t\t$weight += $q[$i];\n\t\tif ($q[$i]\
    \ == $q[$length - $i - 1]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\tif ($count == $length\
    \ && $weight <= $w) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn \"False\"\
    ;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rkxfifj.php:34\n\
    Stack trace:\n#0 /tmp/tmp5rkxfifj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5rkxfifj.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\tfor ($i=0; $i < count($q); $i++)\
    \ { \n\t\t$total += $q[$i];\n\t}\n\t$reverse = array_reverse($q);\n\t$str = '';\n\
    \t$strRev = '';\n\tfor ($i=0; $i < count($q); $i++) { \n\t\t$str .= $q[$i];\n\t\
    \t$strRev .= $reverse[$i];\n\t}\n\tif ($str == $strRev) {\n\t\treturn $total <=\
    \ $w;\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3,\
    \ 2, 3], 1);\necho will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p1i5wp2.php:21\n\
    Stack trace:\n#0 /tmp/tmp2p1i5wp2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2p1i5wp2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum < $w){\n\t\t\
    return True;\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7pq70qy1.php:27\n\
    Stack trace:\n#0 /tmp/tmp7pq70qy1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7pq70qy1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$test = array_slice($q, 0, floor(count($q)/2));\n\
    \t$test2 = array_slice($q, ceil(count($q)/2));\n\t$test2 = array_reverse($test2);\n\
    \tif ($test == $test2 && array_sum($q) <= $w) {\n\t\treturn True;\n\t} else {\n\
    \t\treturn False;\n\t}\n}\necho will_it_fly([3, 2, 3], 9) . PHP_EOL;\necho will_it_fly([3],\
    \ 5) . PHP_EOL;\necho will_it_fly([1, 2], 5) . PHP_EOL;\necho will_it_fly([3,\
    \ 2, 3], 1) . PHP_EOL;\necho will_it_fly([1, 2, 1], 6) . PHP_EOL;\necho will_it_fly([1,\
    \ 1, 2, 1], 4) . PHP_EOL;\necho will_it_fly([1, 2, 1, 1], 6) . PHP_EOL;\necho\
    \ will_it_fly([1, 1, 2, 1, 1], 7) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n1\n\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $mid = floor(count($q) / 2);\n\
    \    $left = [];\n    $right = [];\n    for ($i = 0; $i < count($q); $i++) {\n\
    \        $sum += $q[$i];\n        if ($i < $mid) {\n            $left[] = $q[$i];\n\
    \        } else {\n            $right[] = $q[$i];\n        }\n    }\n    $right\
    \ = array_reverse($right);\n    return $left == $right && $sum <= $w;\n}\necho\
    \ will_it_fly([1, 2], 5) . PHP_EOL;\necho will_it_fly([3, 2, 3], 1) . PHP_EOL;\n\
    echo will_it_fly([3, 2, 3], 9) . PHP_EOL;\necho will_it_fly([3], 5) . PHP_EOL;\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qishyv6.php:38\n\
    Stack trace:\n#0 /tmp/tmp7qishyv6.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7qishyv6.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$i = 0;\n\t$sum = 0;\n\twhile ($i < count($q))\
    \ {\n\t\t$sum += $q[$i];\n\t\t$i++;\n\t}\n\tif ($sum > $w) {\n\t\treturn false;\n\
    \t}\n\t$i = 0;\n\t$j = count($q) - 1;\n\twhile ($i < $j) {\n\t\tif ($q[$i] !==\
    \ $q[$j]) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t\t$j--;\n\t}\n\treturn true;\n\
    }\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$reverse = array_reverse($q);\n\t$sum = array_sum($q);\n\
    \tif( $q == $reverse && $sum <= $w ) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$length = count($q);\n\t$temp = [];\n\tfor ($i=0;\
    \ $i < $length; $i++) { \n\t\tarray_push($temp, $q[$i]);\n\t}\n\t$k = 0;\n\t$j\
    \ = count($temp)-1;\n\t$flag = false;\n\twhile($k<$j){\n\t\tif($temp[$k]!=$temp[$j]){\n\
    \t\t\t$flag = true;\n\t\t\tbreak;\n\t\t}\n\t\t$k++;\n\t\t$j--;\n\t}\n\t$sum =\
    \ array_sum($q);\n\tif($flag){\n\t\treturn false;\n\t}else{\n\t\tif($sum<=$w){\n\
    \t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n}\necho will_it_fly([3,\
    \ 2, 3], 1);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$rs = array_sum($q);\n\tif ($rs > $w) {\n\t\t\
    return false;\n\t}\n\t$rq = array_reverse($q);\n\t$re = false;\n\tif ($q == $rq)\
    \ {\n\t\t$re = true;\n\t}\n\treturn $re;\n}\necho will_it_fly([1, 2], 5);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $isBalanced = $q === array_reverse($q);\n\
    \    $isInRange = array_sum($q) <= $w;\n    return $isBalanced && $isInRange;\n\
    }\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn is_balanced($q) && array_sum($q) <= $w;\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_balanced()\
    \ in /tmp/tmpjiukg9xr.php:14\nStack trace:\n#0 /tmp/tmpjiukg9xr.php(17): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpjiukg9xr.php(21): candidate(Array, 9)\n#2 /tmp/tmpjiukg9xr.php(29):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpjiukg9xr.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif ($q == array_reverse($q) && array_sum($q)\
    \ <= $w) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho will_it_fly([3,\
    \ 2, 3], 9) . PHP_EOL;\necho will_it_fly([1, 2], 5) . PHP_EOL;\necho will_it_fly([3,\
    \ 2, 3], 1) . PHP_EOL;\necho will_it_fly([3], 5) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(count($q) <= 0) return true;\n\tif($q[0]\
    \ + $q[count($q) - 1] <= $w) {\n\t\t$newArr = array_splice($q, 1, count($q) -\
    \ 2);\n\t\treturn will_it_fly($newArr, $w);\n\t} else {\n\t\treturn false;\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_zq9kgf.php:29\n\
    Stack trace:\n#0 /tmp/tmph_zq9kgf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph_zq9kgf.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$s = 0;\n\t$y = count($q) - 1;\n\t$p = 0;\n\t\
    for ($i = 0; $i < $y; $i++) {\n\t\tif ($q[$i] == $q[$y]) {\n\t\t\t$p++;\n\t\t\
    }\n\t\t$y--;\n\t}\n\tif (count($q) % 2 == 0) {\n\t\tif ($p == count($q) / 2) {\n\
    \t\t\t$n = 1;\n\t\t}\n\t} else {\n\t\tif ($p == ($y + 1) / 2) {\n\t\t\t$n = 1;\n\
    \t\t}\n\t}\n\tforeach ($q as $r) {\n\t\t$s += $r;\n\t}\n\tif ($s <= $w && $n ==\
    \ 1) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn \"False\";\n\t}\n}\necho\
    \ will_it_fly([1, 2], 5).\"<br>\";\necho will_it_fly([3, 2, 3], 1).\"<br>\";\n\
    echo will_it_fly([3, 2, 3], 9).\"<br>\";\necho will_it_fly([3], 5).\"<br>\";\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>True<br>False<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdywke9rv.php:50\nStack trace:\n#0 /tmp/tmpdywke9rv.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdywke9rv.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$firsthalf = array_slice($q, 0, ceil(count($q)/2));\n\
    \t$secondhalf = array_slice($q, floor(count($q)/2));\n\t$summ = array_sum($q);\n\
    \t$secondhalf = array_reverse($secondhalf);\n\tif($summ <= $w && $firsthalf ==\
    \ $secondhalf){\n\t\treturn \"true\";\n\t}else{\n\t\treturn \"false\";\n\t}\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\necho \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false<br>false<br>true<br>true<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmphw51x_5e.php:37\nStack trace:\n#0 /tmp/tmphw51x_5e.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphw51x_5e.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$len = count($q);\n\
    \tfor ($i=0; $i < $len; $i++) { \n\t\tif($q[$i] !== $q[$len -1 - $i]){\n\t\t\t\
    return false;\n\t\t}\n\t}\n\tif($sum <= $w){\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(array_sum($q) > $w){\n\t\treturn false;\n\
    \t}elseif(array_sum($q) <= $w && count($q) <= 2){\n\t\treturn true;\n\t}else{\n\
    \t\t$a = array_reverse($q);\n\t\tif($a === $q){\n\t\t\treturn true;\n\t\t}else{\n\
    \t\t\treturn false;\n\t\t}\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp85s63qa6.php:33\n\
    Stack trace:\n#0 /tmp/tmp85s63qa6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp85s63qa6.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\t$balance = false;\n\tfor ($i=0;\
    \ $i < count($q); $i++) { \n\t\t$total += $q[$i];\n\t}\n\tfor ($j=0; $j < count($q);\
    \ $j++) { \n\t\tif ($q[$j] == $q[count($q)-1-$j]) {\n\t\t\t$balance = true;\n\t\
    \t}\n\t\telse {\n\t\t\t$balance = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($total\
    \ <= $w && $balance == true) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $len = count($q);\n    $sum = array_sum($q);\n\
    \    if ($sum <= $w) {\n        if ($len == 1) {\n            return True;\n \
    \       }\n        $i = 0;\n        while ($i < $len/2) {\n            if ($q[$i]\
    \ == $q[$len - 1 - $i]) {\n                $i++;\n            } else {\n     \
    \           return False;\n            }\n        }\n        return True;\n  \
    \  } else {\n        return False;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(count($q) % 2 == 0){\n        return false;\n\
    \    }\n    $halfway = count($q) / 2;\n    $l = [];\n    $r = [];\n    for($i\
    \ = 0; $i < $halfway; $i++){\n        $l[] = $q[$i];\n    }\n    for($i = $halfway\
    \ + 1; $i < count($q); $i++){\n        $r[] = $q[$i];\n    }\n    $l = array_reverse($l);\n\
    \    if($l == $r){\n        if(array_sum($q) <= $w){\n            return true;\n\
    \        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6pmxacrk.php:39\n\
    Stack trace:\n#0 /tmp/tmp6pmxacrk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp6pmxacrk.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $i = 0;\n    $array = array();\n    $sum =\
    \ 0;\n    for($i = 0; $i < count($q); $i++){\n        $sum += $q[$i];\n      \
    \  array_push($array, $q[$i]);\n    }\n    if($sum <= $w){\n        if($array\
    \ == array_reverse($array)){\n            return true;\n        }\n    }\n   \
    \ return false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (array_sum($q) <= $w && count($q) > 1) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t\
    } else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    echo will_it_fly([3, 2, 3], 1) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpme3u5h6i.php:33\n\
    Stack trace:\n#0 /tmp/tmpme3u5h6i.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpme3u5h6i.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn array_sum($q)<=$w && $q==array_reverse($q);\n\
    }\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\t$index = 0;\n\tfor ($i=0; $i\
    \ < count($q); $i++) { \n\t\t$total += $q[$i];\n\t\tif ($q[$i] == $q[count($q)-1-$i])\
    \ {\n\t\t\t$index += 1;\n\t\t}\n\t}\n\tif ($total > $w) {\n\t\treturn false;\n\
    \t}\n\tif ($index == count($q)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\
    echo will_it_fly([1, 2], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = array_sum($q);\n  if ($sum <= $w && $q\
    \ == array_reverse($q)) {\n    return true;\n  } else {\n    return false;\n \
    \ }\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$palindrome = array_reverse($q);\n\
    \tif($sum <= $w && $q == $palindrome){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho \"<pre>\";\n\tprint_r(will_it_fly([1, 2], 5));\necho \"</pre>\";\necho\
    \ \"<pre>\";\n\tprint_r(will_it_fly([3, 2, 3], 1));\necho \"</pre>\";\necho \"\
    <pre>\";\n\tprint_r(will_it_fly([3, 2, 3], 9));\necho \"</pre>\";\necho \"<pre>\"\
    ;\n\tprint_r(will_it_fly([3], 5));\necho \"</pre>\";\necho \"<pre>\";\n\tprint_r(will_it_fly([7,\
    \ 9, 5, 6, 3, 8, 2, 4, 2, 1], 10));\necho \"</pre>\";\necho \"<pre>\";\n\tprint_r(will_it_fly([4,\
    \ 6, 1, 5, 6, 1, 6, 5, 1, 6], 21));\necho \"</pre>\";\necho \"<pre>\";\n\tprint_r(will_it_fly([-5,\
    \ -6, -1, -5, -6, -1, -6, -5, -1, -6], -10));\necho \"</pre>\";\necho \"<pre>\"\
    ;\n\tprint_r(will_it_fly([-1, 1, -1, 1, -1, 1, -1, 1, -1, 1], -1));\necho \"</pre>\"\
    ;\necho \"<pre>\";\n\tprint_r(will_it_fly([1, 4, 5, 1, 3, 3, 5, 4, 1], 9));\n\
    echo \"</pre>\";\necho \"<pre>\";\n\tprint_r(will_it_fly([6, 3, 6, 3, 6, 3, 6,\
    \ 3, 6, 3], 9));\necho \"</pre>\";\necho \"<pre>\";\n\tprint_r(will_it_fly([8,\
    \ 8, 8, 8, 8, 8, 8,\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfiiem_qe.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w && $q\
    \ === array_reverse($q)) {\n\t\treturn \"True\";\n\t}\n\treturn \"False\";\n}\n\
    echo will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1) . \"\\\
    n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nTrue\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0pr1t9yu.php:29\nStack trace:\n#0 /tmp/tmp0pr1t9yu.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0pr1t9yu.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reversed = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reversed){\n\t\treturn \"True\";\n\t}\n\telse{\n\t\t\
    return \"False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27gmpe_w.php:29\n\
    Stack trace:\n#0 /tmp/tmp27gmpe_w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp27gmpe_w.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\tfor ($i=0; $i < count($q); $i++)\
    \ { \n\t\t$total += $q[$i];\n\t}\n\tif ($total <= $w) {\n\t\treturn True;\n\t\
    }\n\telse {\n\t\treturn False;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\necho\
    \ \"<br>\";\necho will_it_fly([3], 5);\necho \"<br>\";\necho will_it_fly([1, 2],\
    \ 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0pc_388.php:38\n\
    Stack trace:\n#0 /tmp/tmpu0pc_388.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpu0pc_388.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$isBalanced = $q == array_reverse($q);\n\t$is_less_than_max_weight\
    \ = array_sum($q) <= $w;\n\treturn $isBalanced && $is_less_than_max_weight;\n\
    }\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$add = 0;\n\tfor ($i=0; $i < count($q); $i++)\
    \ { \n\t\t$add += $q[$i];\n\t}\n\tif ($add > $w) {\n\t\treturn false;\n\t} else\
    \ {\n\t\t$reverse = array_reverse($q);\n\t\tif ($q == $reverse) {\n\t\t\treturn\
    \ true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\necho will_it_fly([1,\
    \ 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3, 2, 3], 9);\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($q === $reverse){\n\t\tif($sum <= $w){\n\t\t\treturn true;\n\t\t}\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_a_hk3i.php:32\n\
    Stack trace:\n#0 /tmp/tmpg_a_hk3i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg_a_hk3i.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum <= $w){\n\t\
    \tif(count($q) % 2 == 0){\n\t\t\t$middle = count($q) / 2;\n\t\t\t$newArr = array_slice($q,\
    \ $middle);\n\t\t\t$reversed = array_reverse($newArr);\n\t\t\tif($newArr == $reversed){\n\
    \t\t\t\treturn \"True\";\n\t\t\t}\n\t\t}else if(count($q) % 2 == 1){\n\t\t\t$middle\
    \ = floor(count($q) / 2);\n\t\t\t$newArr = array_slice($q, $middle);\n\t\t\t$reversed\
    \ = array_reverse($newArr);\n\t\t\tif($newArr == $reversed){\n\t\t\t\treturn \"\
    True\";\n\t\t\t}\n\t\t}\n\t}\n\treturn \"False\";\n}\necho will_it_fly([1, 2],\
    \ 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True<br>False<br>False<br>True\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppaeht3lf.php:46\nStack trace:\n#0 /tmp/tmppaeht3lf.php(54): test()\n\
    #1 {main}\n  thrown in /tmp/tmppaeht3lf.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$theWeight = 0;\n\t$theMirror = array_reverse($q);\n\
    \tif ($q == $theMirror) {\n\t\tforeach ($q as $value) {\n\t\t\t$theWeight += $value;\n\
    \t\t}\n\t\tif ($theWeight <= $w) {\n\t\t\treturn \"True\";\n\t\t}\n\t}\n\treturn\
    \ \"False\";\n}\necho will_it_fly([3,2,3], 9);\necho \"<br>\";\necho will_it_fly([3,2,3],\
    \ 1);\necho \"<br>\";\necho will_it_fly([1,2], 5);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\necho \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True<br>False<br>False<br>True<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjofk5mrw.php:39\nStack trace:\n#0 /tmp/tmpjofk5mrw.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjofk5mrw.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5); //\u279E False \necho \"<br>\"\
    ;\necho will_it_fly([3, 2, 3], 1); //\u279E False\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 9); //\u279E True\necho \"<br>\";\necho will_it_fly([3], 5); //\u279E\
    \ True\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>True<br>True\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpoudie89a.php:34\nStack trace:\n#0 /tmp/tmpoudie89a.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpoudie89a.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $count=count($q);\n    $rev=array_reverse($q);\n\
    \    $sum=array_sum($q);\n    if ($sum>$w) {\n        return 'False';\n    } elseif\
    \ ($sum<=$w) {\n        for ($i=0; $i < $count; $i++) { \n            if ($q[$i]!=$rev[$i])\
    \ {\n                return 'False';\n            }\n        }\n        return\
    \ 'True';\n    }\n}\necho will_it_fly([3,2,3], 1);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxaqra76a.php:34\n\
    Stack trace:\n#0 /tmp/tmpxaqra76a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxaqra76a.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$arr = array_merge($q,\
    \ array_reverse($q));\n\t$sum1 = array_sum($arr);\n\tif ($sum > $w) {\n\t\treturn\
    \ \"False\";\n\t} elseif ($sum1 == $sum) {\n\t\treturn \"True\";\n\t} else {\n\
    \t\treturn \"False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptk5pmf6x.php:31\n\
    Stack trace:\n#0 /tmp/tmptk5pmf6x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptk5pmf6x.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$isBalanced = [];\n\
    \tforeach ($q as $key => $value) {\n\t\tif($q[$key] === $q[(count($q)-1)-$key])\
    \ {\n\t\t\t$isBalanced[] = true;\n\t\t} else {\n\t\t\t$isBalanced[] = false;\n\
    \t\t}\n\t}\n\treturn ($sum <= $w && in_array(false, $isBalanced) ? false : true);\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br>1<br>1<br>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5balufkh.php:40\n\
    Stack trace:\n#0 /tmp/tmp5balufkh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5balufkh.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$a = 0;\n\t$b = count($q)-1;\n\t$l = count($q);\n\
    \tfor ($i=0; $i < $l/2; $i++) { \n\t\tif ($q[$a] != $q[$b]) {\n\t\t\treturn false;\n\
    \t\t}\n\t\t$a++;\n\t\t$b--;\n\t}\n\t$c = array_sum($q);\n\tif ($c <= $w) {\n\t\
    \treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (array_sum($q) <= $w && $q == array_reverse($q))\
    \ {\n\t\treturn \"True\";\n\t} else {\n\t\treturn \"False\";\n\t}\n}\necho will_it_fly([1,\
    \ 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nTrue\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpp0kbkjyy.php:29\nStack trace:\n#0 /tmp/tmpp0kbkjyy.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmpp0kbkjyy.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$p = $q;\n\t$r = array_reverse($q);\n\tif(array_sum($q)\
    \ <= $w && $p == $r){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n\
    }\necho \"<br>\";\necho will_it_fly([1, 2], 5); // False;\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 1); // False;\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 9); // True;\necho \"<br>\";\necho will_it_fly([3], 5); // True;\necho \"\
    <br>\";\necho will_it_fly([2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz9j0l9ff.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$a=0;\n\t$b=0;\n\t$size = count($q);\n\tfor($i=0;$i<$size;$i++){\n\
    \t\t$a=$a+$q[$i];\n\t}\n\tfor($i=0;$i<$size/2;$i++){\n\t\tif($q[$i]==$q[$size-$i-1]){\n\
    \t\t\t$b=$b+1;\n\t\t}\n\t}\n\tif($b==$size/2 && $a<=$w){\n\t\treturn true;\n\t\
    }else{\n\t\treturn false;\n\t}\n}\necho will_it_fly([1, 2], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_zdr44k.php:37\n\
    Stack trace:\n#0 /tmp/tmpp_zdr44k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpp_zdr44k.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \t$string = implode($q);\n\t$string2 = implode($reverse);\n\tif($sum <= $w &&\
    \ $string == $string2){\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $arr = array_slice($q, 0, count($q)/2);\n\
    \    $arr2 = array_slice($q, count($q)/2, count($q));\n    $arr2 = array_reverse($arr2);\n\
    \    if (array_sum($q) <= $w) {\n        if ($arr == $arr2) {\n            return\
    \ true;\n        } else {\n            return false;\n        }\n    } else {\n\
    \        return false;\n    }\n}\n\n$q = [3,2,3];\n$w = 9;\necho will_it_fly($q,\
    \ $w);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpspmpy_zb.php:36\n\
    Stack trace:\n#0 /tmp/tmpspmpy_zb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpspmpy_zb.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$inverse = array_reverse($q);\n\tif(implode($q)\
    \ == implode($inverse) && array_sum($q) <= $w){\n\t\treturn true;\n\t}else{\n\t\
    \treturn false;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $rev_q = array_reverse($q);\n    $q_sum =\
    \ array_sum($q);\n    if ($q_sum <= $w && $q == $rev_q) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho will_it_fly([1, 2], 5).\"\
    \\n\";\necho will_it_fly([3, 2, 3], 1).\"\\n\";\necho will_it_fly([3, 2, 3], 9).\"\
    \\n\";\necho will_it_fly([3], 5).\"\\n\";\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (array_sum($q) <= $w && $q === array_reverse($q))\
    \ {\n\t\treturn \"True\";\n\t} else {\n\t\treturn \"False\";\n\t}\n}\necho will_it_fly([1,\
    \ 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>True<br>True\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0as8_i9d.php:32\nStack trace:\n#0 /tmp/tmp0as8_i9d.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0as8_i9d.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $qBalance = $q;\n    array_shift($qBalance);\n\
    \    $qBalance = array_reverse($qBalance);\n    $qReverse = array_reverse($q);\n\
    \    array_shift($qReverse);\n    if(array_sum($q) <= $w){\n        if($qBalance\
    \ == $qReverse){\n            return true;\n        }\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgx7od7q.php:31\n\
    Stack trace:\n#0 /tmp/tmpsgx7od7q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsgx7od7q.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$len = count($q);\n\tif($len == 1){\n\t\treturn\
    \ true;\n\t}\n\tfor($i = 0; $i < $len/2; $i++){\n\t\tif($q[$i] != $q[$len-$i-1]){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn array_sum($q) <= $w;\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn array_sum($q) <= $w && array_reverse($q)\
    \ == $q;\n}\necho will_it_fly([1, 2], 5).\"\\n\";\necho will_it_fly([3, 2, 3],\
    \ 1).\"\\n\";\necho will_it_fly([3, 2, 3], 9).\"\\n\";\necho will_it_fly([3],\
    \ 5).\"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif(count($q) > 1) {\n\
    \t\tfor($i = 0; $i < count($q); $i++) {\n\t\t\t$reverse = count($q) - 1 - $i;\n\
    \t\t\tif($q[$i] !== $q[$reverse]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    }\n\tif($sum <= $w) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([1, 2], 5);\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(array_sum($q) <= $w){\n\t\tif(join(\"\",$q)\
    \ == join(\"\",array_reverse($q))){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho\
    \ will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$array = $q;\n\t$right = 0;\n\t$left = count($array)\
    \ - 1;\n\twhile ($left > $right) {\n\t\tif ($array[$left] != $array[$right]) {\n\
    \t\t\treturn False;\n\t\t}\n\t\t$left--;\n\t\t$right++;\n\t}\n\t$sum = array_sum($array);\n\
    \tif ($sum <= $w) {\n\t\treturn True;\n\t}\n\treturn False;\n}\necho will_it_fly([1,\
    \ 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3, 2, 3], 9);\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = array_sum($q);\n\tif($total <= $w &&\
    \ $q == array_reverse($q)){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif(!in_array(0, $q)\
    \ && $sum <= $w) {\n\t\t$rev = array_reverse($q);\n\t\tif($q == $rev) {\n\t\t\t\
    return 'True';\n\t\t} else {\n\t\t\treturn 'False';\n\t\t}\n\t} else {\n\t\treturn\
    \ 'False';\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>True<br>True\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8zf2dvvu.php:38\nStack trace:\n#0 /tmp/tmp8zf2dvvu.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8zf2dvvu.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$palindrome = strrev(implode('', $q));\n\t$sum\
    \ = array_sum($q);\n\tif ($palindrome == implode('', $q) && $sum <= $w) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$fl = false;\n\tif(array_sum($q) <= $w) {\n\t\
    \tif(count($q) == 1 || $q == array_reverse($q)) {\n\t\t\t$fl = true;\n\t\t}\n\t\
    }\n\treturn $fl;\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $pali = $q;\n    $q = array_sum($q);\n   \
    \ $pali = array_reverse($pali);\n    $pali = array_map('strval', $pali);\n   \
    \ $pali = implode($pali);\n    $q = array_sum($q);\n    if ($q <= $w && $pali\
    \ == implode($q)) {\n        return \"True\";\n    } else {\n        return \"\
    False\";\n    }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpirlnzzpy.php\
    \ on line 19\n\nWarning: implode(): Argument must be an array in /tmp/tmpirlnzzpy.php\
    \ on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpirlnzzpy.php:32\n\
    Stack trace:\n#0 /tmp/tmpirlnzzpy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpirlnzzpy.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $len = count($q);\n    $sum = array_sum($q);\n\
    \    if($sum <= $w){\n        if($len == 1){\n            return true;\n     \
    \   }elseif($len % 2 == 0){\n            return false;\n        }else{\n     \
    \       $c = 0;\n            $e = $len-1;\n            for($i=0; $i<$len; $i++){\n\
    \                if($q[$i] == $q[$e]){\n                    $c++;\n          \
    \      }\n                $e--;\n            }\n            if($c == $len){\n\
    \                return true;\n            }else{\n                return false;\n\
    \            }\n        }\n    }else{\n        return false;\n    }\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn 'true';\n\t} else {\n\t\treturn\
    \ 'false';\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ai1o5_y.php:27\n\
    Stack trace:\n#0 /tmp/tmp2ai1o5_y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2ai1o5_y.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $length = count($q);\n    for\
    \ ($i = 0; $i < $length; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return False;\n    } else {\n        if ($length % 2 == 0)\
    \ {\n            $size = $length / 2;\n            for ($i = 0; $i < $size; $i++)\
    \ {\n                if ($q[$i] != $q[$length - $i - 1]) {\n                 \
    \   return False;\n                }\n            }\n        } else {\n      \
    \      $size = ($length - 1) / 2;\n            for ($i = 0; $i < $size; $i++)\
    \ {\n                if ($q[$i] != $q[$length - $i - 1]) {\n                 \
    \   return False;\n                }\n            }\n        }\n    }\n    return\
    \ True;\n}\necho will_it_fly([5, 1, 2, 5], 20);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([1, 2], 5) . PHP_EOL;\necho will_it_fly([3, 2, 3], 1) . PHP_EOL;\n\
    echo will_it_fly([3, 2, 3], 9) . PHP_EOL;\necho will_it_fly([3], 5) . PHP_EOL;\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\treturn $sum <= $w &&\
    \ $q == array_reverse($q);\n}\necho will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 1) . \"\\n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3],\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $q = array_reverse($q);\n    $sum = array_sum($q);\n\
    \    if($sum > $w) {\n        return False;\n    } else {\n        return True;\n\
    \    }\n}\necho will_it_fly([1, 2], 5);\necho \"\\n\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"\\n\";\necho will_it_fly([3, 2, 3], 9);\necho \"\\n\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzz6bgn7n.php:35\n\
    Stack trace:\n#0 /tmp/tmpzz6bgn7n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzz6bgn7n.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$palindrome = array_reverse($q);\n\t$sum = array_sum($q);\n\
    \tif ($q == $palindrome && $sum <= $w) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w && $q\
    \ === array_reverse($q)) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn \"False\"\
    ;\n\t}\n}\necho will_it_fly([1, 2], 5) . \"<br>\";\necho will_it_fly([3, 2, 3],\
    \ 1) . \"<br>\";\necho will_it_fly([3, 2, 3], 9) . \"<br>\";\necho will_it_fly([3],\
    \ 5) . \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>True<br>True<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp46ofizko.php:30\nStack trace:\n#0 /tmp/tmp46ofizko.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp46ofizko.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (array_sum($q) <= $w && $q == array_reverse($q))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(count($q) == 1) {\n        if($q[0] > $w)\
    \ {\n            return false;\n        } else {\n            return true;\n \
    \       }\n    } else {\n        if($q[0] + $q[count($q) - 1] > $w) {\n      \
    \      return false;\n        } else {\n            array_shift($q);\n       \
    \     array_pop($q);\n            return will_it_fly($q, $w);\n        }\n   \
    \ }\n}\n\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho\
    \ will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 262144 bytes) in /tmp/tmptn4rhql7.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$reverse = array_reverse($q);\n\tif (array_sum($q)\
    \ <= $w) {\n\t\tif ($q == $reverse) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$weight = array_sum($q);\n\t$half = ceil(count($q)/2);\n\
    \t$first = array_slice($q, 0, $half);\n\t$second = array_slice($q, -$half);\n\t\
    if ($weight <= $w && $first == array_reverse($second)) {\n\t\treturn true;\n\t\
    }\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3],\
    \ 1);\necho will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$reverse = array_reverse($q);\n\t$sum = array_sum($q);\n\
    \t$max = 0;\n\tif($q === $reverse){\n\t\tif($sum <= $w){\n\t\t\treturn \"True\"\
    ;\n\t\t}\n\t}\n\treturn \"False\";\n}\necho will_it_fly([1,2], 5) . \"\\n\"; //\
    \ False\necho will_it_fly([3,2,3], 1) . \"\\n\"; // False\necho will_it_fly([3,2,3],\
    \ 9) . \"\\n\"; // True\necho will_it_fly([3], 5) . \"\\n\"; // True\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nTrue\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_ofa350j.php:33\nStack trace:\n#0 /tmp/tmp_ofa350j.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_ofa350j.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$weight = 0;\n\t$number = count($q);\n\tfor\
    \ ($i=0; $i < $number; $i++) { \n\t\t$weight += $q[$i];\n\t}\n\tif ($weight <=\
    \ $w) {\n\t\t$first = 0;\n\t\t$last = $number - 1;\n\t\twhile ($first < $last)\
    \ {\n\t\t\tif ($q[$first] != $q[$last]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\
    \t$first++;\n\t\t\t$last--;\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = array_sum($q);\n\tif($sum <= $w && $q\
    \ === array_reverse($q)){\n    return \"True\";\n  }else{\n    return \"False\"\
    ;\n  }\n}\necho will_it_fly([1, 2], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9qj9ycl.php:27\n\
    Stack trace:\n#0 /tmp/tmpj9qj9ycl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpj9qj9ycl.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $str = implode($q);\n    $rev = implode(array_reverse($q));\n\
    \    if($str == $rev && array_sum($q) <= $w){\n        return \"True\";\n    }\n\
    \    else{\n        return \"False\";\n    }\n    \n}\necho will_it_fly([1, 2],\
    \ 5).\"<br>\";\necho will_it_fly([3, 2, 3], 1).\"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 9).\"<br>\";\necho will_it_fly([3], 5).\"<br>\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>True<br>True<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp4m3wuh7n.php:33\nStack trace:\n#0 /tmp/tmp4m3wuh7n.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4m3wuh7n.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$cnt = count($q);\n\tif($cnt == 1){\n\t\tif($q[0]\
    \ <= $w){\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\telse{\n\t\t$sum = 0;\n\t\tfor($i = 0; $i < $cnt; $i++){\n\t\t\t$sum += $q[$i];\n\
    \t\t}\n\t\tif($sum <= $w){\n\t\t\t$mid = floor($cnt/2);\n\t\t\tfor($i = 0; $i\
    \ < $mid; $i++){\n\t\t\t\tif($q[$i] != $q[$cnt-$i-1]){\n\t\t\t\t\treturn false;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\treturn false;\n\
    \t\t}\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"\\n\";\necho will_it_fly([3, 2, 3], 9);\necho \"\\n\";\n\
    echo will_it_fly([3], 5);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$is_balanced = function($arr) {\n\t\t$reversed\
    \ = array_reverse($arr);\n\t\treturn $arr == $reversed;\n\t};\n\t$sum = array_sum($q);\n\
    \treturn $is_balanced($q) && $sum <= $w;\n}\necho will_it_fly([3, 2, 3], 9);\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1,2], 5);\necho \"<br>\";\necho will_it_fly([3,2,3],\
    \ 1);\necho \"<br>\";\necho will_it_fly([3,2,3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\necho \"<br>\";\necho will_it_fly([1,3,3,3,3,3,3,3,3,3,3,1], 5);\necho \"\
    <br>\";\necho will_it_fly([1,3,3,3,3,3,3,3,3,3,3,1], 5);\necho \"<br>\";\necho\
    \ will_it_fly([1,3,3,3,3,3,3,3,3,3,3,1], 5);\necho \"<br>\";\necho will_it_fly([1,3,3,3,3,3,3,3,3,3,3,1],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1<br><br><br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum > $w){\n\t\t\
    return false;\n\t}\n\tif(count($q) > 1){\n\t\t$q_rev = array_reverse($q);\n\t\t\
    if($q == $q_rev){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\treturn\
    \ true;\n}\necho will_it_fly([2, 3, 3], 7);\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$rev = array_reverse($q);\n\tif (array_sum($q)\
    \ <= $w) {\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (count($q) <= 1) return true;\n\t$m = max($q);\n\
    \t$s = array_sum($q);\n\t$q = implode('', $q);\n\t$r = strrev($q);\n\treturn $s\
    \ <= $w && $q == $r;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$result = array_sum($q);\n\tif ($result <= $w)\
    \ {\n\t\t$resultArray = array_reverse($q);\n\t\tif ($resultArray == $q) {\n\t\t\
    \treturn 'True';\n\t\t}\n\t}\n\treturn 'False';\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeprh3qi2.php:29\n\
    Stack trace:\n#0 /tmp/tmpeprh3qi2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpeprh3qi2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $qLength = count($q);\n    if ($qLength ==\
    \ 1) {\n        if ($q[0] <= $w) {\n            return true;\n        } else {\n\
    \            return false;\n        }\n    }\n    $firstEl = $q[0];\n    $lastEl\
    \ = $q[$qLength - 1];\n    $sumOfTheMiddle = 0;\n    for ($i = 1; $i < $qLength\
    \ - 1; $i++) {\n        $sumOfTheMiddle += $q[$i];\n    }\n    if ($firstEl ==\
    \ $lastEl && $firstEl + $lastEl + $sumOfTheMiddle <= $w) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$i = 0;\n\t$sum = 0;\n\twhile (isset($q[$i]))\
    \ {\n\t\t$sum += $q[$i];\n\t\t$i++;\n\t}\n\tif ($sum > $w) {\n\t\treturn false;\n\
    \t}\n\t$isPalindrome = true;\n\tfor ($i = 0; $i < count($q); $i++) {\n\t\tif ($q[$i]\
    \ != $q[count($q) - $i - 1]) {\n\t\t\t$isPalindrome = false;\n\t\t}\n\t}\n\treturn\
    \ $isPalindrome;\n}\necho \"<pre>\";\nprint_r(will_it_fly([3, 2, 3], 1));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(will_it_fly([3, 2, 3], 9));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(will_it_fly([3], 5));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <pre></pre><pre>1</pre><pre>1</pre>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\treturn ($sum <= $w\
    \ && count($q) === array_count_values($q)[$q[0]]);\n}\necho will_it_fly([1, 2],\
    \ 5);\necho \"\\n\";\necho will_it_fly([3, 2, 3], 1);\necho \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 9);\necho \"\\n\";\necho will_it_fly([3], 5);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7u47jr72.php:30\n\
    Stack trace:\n#0 /tmp/tmp7u47jr72.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7u47jr72.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \t\n\tif($sum > $w) {\n\t\treturn \"It will not fly. The sum of its elements is\
    \ larger than the maximum possible weight.\";\n\t} elseif ($q != $rev) {\n\t\t\
    return \"It will not fly. The list is not palindromic.\";\n\t} else {\n\t\treturn\
    \ \"It will fly! The sum of its elements is less than the maximum possible weight,\
    \ and it's balanced (palindromic).\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "It will fly! The sum of its elements is less than the maximum possible\
    \ weight, and it's balanced (palindromic).\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps7sdwm2w.php:31\nStack trace:\n#0 /tmp/tmps7sdwm2w.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps7sdwm2w.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(array_sum($q) > $w) {\n\t\treturn false;\n\
    \t}\n\telseif(array_sum($q) <= $w) {\n\t\t$qr = array_reverse($q);\n\t\tif($qr\
    \ === $q) {\n\t\t\treturn true;\n\t\t}\n\t\telseif($qr !== $q) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w && array_reverse($q)\
    \ == $q) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn $q == array_reverse($q) && array_sum($q)\
    \ <= $w;\n}\necho will_it_fly([1, 2], 5);\necho \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"\\n\";\necho will_it_fly([3, 2, 3], 9);\necho \"\\n\";\n\
    echo will_it_fly([3], 5);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$result = array_sum($q);\n\t$count = count($q);\n\
    \t$value = array_count_values($q);\n\tif($result <= $w){\n\t\tif($count % 2 ==\
    \ 0){\n\t\t\tif(array_key_exists(2, $value)){\n\t\t\t\treturn true;\n\t\t\t}else{\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}else{\n\t\t\tif(array_key_exists(1, $value)){\n\
    \t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    }else{\n\t\treturn false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\"\
    ;\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3],\
    \ 9);\necho \"<br>\";\necho will_it_fly([3], 5);\necho \"<br>\";\necho will_it_fly([4,\
    \ 4, 5, 1, 6, 4, 5, 4, 4], 15);\necho \"<br>\";\necho will_it_fly([4, 4, 4, 4,\
    \ 5, 4, 4, 4, 4], 15);\necho \"<br>\";\necho will_it_fly([3, 2, 1, 0, 5, 6, 7,\
    \ 8, 9], 9);\necho \"<br>\";\necho will_it_fly([1, 2, 3, 4, 5, 6, 7, 8, 9], 19);\n\
    echo \"<br>\";\necho will_it_fly([1, 2, 3, 4, 5, 6, 7, 8, 9], 15);\necho \"<br>\"\
    ;\necho will_it_fly([3, 2, 3], 8);\necho \"<br>\";\necho will_it_fly([], 10);\n\
    echo \"<br>\";\necho will_it_fly([5, 5, 3, 3, 5, 5], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3, 3, 5, 5, 5, 5],\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzc_p1iaf.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $qWeight = 0;\n  for ($i = 0; $i < count($q);\
    \ $i++) {\n    $qWeight += $q[$i];\n  }\n  if ($qWeight <= $w) {\n    $palindrome\
    \ = \"\";\n    for ($i = count($q)-1; $i >= 0; $i--) {\n      $palindrome .= $q[$i];\n\
    \    }\n    $palindrome = (string) $palindrome;\n    $q = (string) implode(\"\"\
    , $q);\n    if ($palindrome == $q) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$q = implode('', $q);\n\t$q = strrev($q);\n\t\
    $q = str_split($q);\n\tif(count($q) == 1) {\n\t\treturn true;\n\t} elseif($q ==\
    \ $q) {\n\t\t$sum = array_sum($q);\n\t\tif($sum <= $w) {\n\t\t\treturn true;\n\
    \t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\
    }\necho will_it_fly([2, 2, 1], 5);\necho will_it_fly([3, 2, 3], 3);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoglubz1_.php:38\n\
    Stack trace:\n#0 /tmp/tmpoglubz1_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpoglubz1_.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum > $w) {\n\t\
    \treturn false;\n\t}\n\t$count = count($q);\n\t$half = floor($count / 2);\n\t\
    $new = array_slice($q, $half);\n\t$rev_arr = array_reverse($new);\n\t$final =\
    \ array_slice($q, 0, $half);\n\t$comparision = array_diff($final, $rev_arr);\n\
    \tif (empty($comparision)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br><br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $r = $q;\n    $r = array_reverse($r);\n  \
    \  if (array_sum($q) > $w) {\n        return false;\n    } else if ($q === $r)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho\
    \ will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\necho will_it_fly([3,\
    \ 2, 3], 1);\necho will_it_fly([1, 2], 5);\nfunction candidate(...$args) {\n \
    \   return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = array_sum($q);\n  $res = array_reverse($q);\n\
    \  if ($sum > $w) {\n    return false;\n  } else if ($q == $res) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\necho will_it_fly([1, 2], 5);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\n ?>\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br>1<br>1function candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$result=false;\n\tif (array_sum($q)<=$w) {\n\
    \t\t$result=true;\n\t}\n\tif (array_reverse($q)==$q) {\n\t\t$result=true;\n\t\
    }\n\treturn $result;\n}\necho will_it_fly([3, 2, 3], 9) ;\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2djrojwd.php:30\n\
    Stack trace:\n#0 /tmp/tmp2djrojwd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2djrojwd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$summ=0;\n\t$i=count($q)-1;\n\tforeach ($q as\
    \ $key => $value) {\n\t\t$summ=$summ+$value;\n\t\tif ($value!=$q[$i]) {\n\t\t\t\
    return False;\n\t\t}\n\t\t$i--;\n\t}\n\tif ($summ<=$w) {\n\t\treturn True;\n\t\
    }\n\telse{\n\t\treturn False;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\"\
    ;\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3],\
    \ 9);\necho \"<br>\";\necho will_it_fly([3], 5);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$q_reverse = array_reverse($q);\n\
    \tif($sum > $w) {\n\t\treturn false;\n\t} else if($q_reverse == $q) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho will_it_fly([1, 2], 5) .\
    \ PHP_EOL;\necho will_it_fly([3, 2, 3], 1) . PHP_EOL;\necho will_it_fly([3, 2,\
    \ 3], 9) . PHP_EOL;\necho will_it_fly([3], 5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(sum($q) <= $w && palindrome($q)){\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum() in /tmp/tmpve7szcrc.php:14\n\
    Stack trace:\n#0 /tmp/tmpve7szcrc.php(20): will_it_fly(Array, 9)\n#1 /tmp/tmpve7szcrc.php(24):\
    \ candidate(Array, 9)\n#2 /tmp/tmpve7szcrc.php(32): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpve7szcrc.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$len = count($q);\n\
    \tif ($sum <= $w && $len <= 100){\n\t\tfor ($i = 0; $i < $len; $i++){\n\t\t\t\
    if ($q[$i] == $q[$len - $i - 1]){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn false;\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3],\
    \ 1);\necho will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlevuk18.php:38\n\
    Stack trace:\n#0 /tmp/tmpxlevuk18.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxlevuk18.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$x = 0;\n\t$y = count($q);\n\tforeach ($q as\
    \ $key => $value) {\n\t\t$x += $value;\n\t}\n\tif ($x <= $w && $x <= ($w*2) &&\
    \ $x%2 == 0) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn \"False\";\n\t}\n\
    }\necho will_it_fly([1, 2], 5).\"<br>\";\necho will_it_fly([3, 2, 3], 1).\"<br>\"\
    ;\necho will_it_fly([3, 2, 3], 9).\"<br>\";\necho will_it_fly([3], 5).\"<br>\"\
    ;\necho will_it_fly([3, 2, 3], 6).\"<br>\";\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False<br>False<br>True<br>False<br>False<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5rvs9y3h.php:35\nStack trace:\n#0 /tmp/tmp5rvs9y3h.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5rvs9y3h.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$reverse = array_reverse($q);\n\t$sum = array_sum($q);\n\
    \tif($q === $reverse && $sum <= $w){\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tm9qslu.php:27\n\
    Stack trace:\n#0 /tmp/tmp4tm9qslu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4tm9qslu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $weight = array_sum($q);\n    $length = count($q);\n\
    \    $palindrome = array_slice($q, 0, $length/2) == array_slice($q, $length%2\
    \ == 0 ? $length/2 : $length/2+1, $length/2);\n    return $weight <= $w && $palindrome;\n\
    }\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = array_sum($q);\n    if($sum <= $w &&\
    \ is_palindrome($q)){\n        return true;\n    }else{\n        return false;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmp9ybpns3d.php:15\nStack trace:\n#0 /tmp/tmp9ybpns3d.php(22): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmp9ybpns3d.php(26): candidate(Array, 9)\n#2 /tmp/tmp9ybpns3d.php(34):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp9ybpns3d.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn array_sum($q)<=$w && $q==array_reverse($q);\n\
    }\necho will_it_fly([3, 2, 3], 9).\"\\n\";\necho will_it_fly([3], 5).\"\\n\";\n\
    echo will_it_fly([1, 2], 5).\"\\n\";\necho will_it_fly([3, 2, 3], 1).\"\\n\";\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$maxWeight = true;\n\t$isBalanced = true;\n\t\
    $sum = 0;\n\tfor ($i=0; $i < count($q); $i++) { \n\t\t$sum += $q[$i];\n\t}\n\t\
    if ($sum > $w) {\n\t\t$maxWeight = false;\n\t}\n\t$reverse = [];\n\tfor ($i=count($q)-1;\
    \ $i >= 0; $i--) { \n\t\tarray_push($reverse, $q[$i]);\n\t}\n\tif ($q != $reverse)\
    \ {\n\t\t$isBalanced = false;\n\t}\n\tif ($maxWeight && $isBalanced) {\n\t\treturn\
    \ \"true\";\n\t}\n\treturn \"false\";\n}\necho will_it_fly([1, 2], 5);\necho \"\
    \\n\";\necho will_it_fly([3, 2, 3], 1);\necho \"\\n\";\necho will_it_fly([3, 2,\
    \ 3], 9);\necho \"\\n\";\necho will_it_fly([3], 5);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\nfalse\ntrue\ntrue\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp1sni2bzq.php:48\nStack trace:\n#0 /tmp/tmp1sni2bzq.php(56): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1sni2bzq.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = array_sum($q);\n    $isBalanced = true;\n\
    \    $len = count($q);\n    $halfLen = ceil($len/2);\n    for($i = 0; $i < $halfLen;\
    \ $i++) {\n        if ($q[$i] != $q[$len-$i-1]) {\n            $isBalanced = false;\n\
    \            break;\n        }\n    }\n    return $sum <= $w && $isBalanced;\n\
    }\necho will_it_fly([3, 2, 3], 9) ? \"True\" : \"False\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum<=$w && $q==$rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$n = count($q);\n\t$sum = array_sum($q);\n\t\
    $is_balance = True;\n\tfor ($i=0; $i < $n/2; $i++) { \n\t\tif ($q[$i] !== $q[$n-$i-1])\
    \ {\n\t\t\t$is_balance = False;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $is_balance\
    \ && $sum <= $w;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$x = array_sum($q);\n\t$y = array_reverse($q);\n\
    \tif ($x <= $w && $q == $y) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([1,\
    \ 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True<br>False<br>False<br>True\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2l2vq475.php:34\nStack trace:\n#0 /tmp/tmp2l2vq475.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2l2vq475.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = array_sum($q);\n    if($sum <= $w &&\
    \ $q == array_reverse($q)) {\n        return true;\n    }\n    return false;\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t}\n\telse {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdstblhv8.php:29\n\
    Stack trace:\n#0 /tmp/tmpdstblhv8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdstblhv8.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$isBalanced = ($q[0] == $q[count($q)-1]);\n\t\
    $sum = array_sum($q);\n\treturn $isBalanced && $sum <= $w;\n}\necho will_it_fly([1,\
    \ 2], 5) . \"<br>\"; // False \necho will_it_fly([3, 2, 3], 1) . \"<br>\"; //\
    \ False\necho will_it_fly([3, 2, 3], 9) . \"<br>\"; // True\necho will_it_fly([3],\
    \ 5) . \"<br>\"; // True\necho will_it_fly([7, 1, 2, 6, 4, 5, 3], 13) . \"<br>\"\
    ; // True\necho will_it_fly([4, 1, 2, 7, 8, 8, 4], 15) . \"<br>\"; // False\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1<br><br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (array_sum($q) > $w) return false;\n\telseif\
    \ (array_sum($q) <= $w && $q == array_reverse($q)) return true;\n\telse return\
    \ false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$arr = [];\n\t$arr1 = [];\n\t$newarr = [];\n\
    \t$newarr1 = [];\n\t$count = count($q);\n\t$sum = array_sum($q);\n\tif($sum<=$w){\n\
    \t\tif($count==1){\n\t\t\treturn \"True\";\n\t\t}\n\t\tfor($i=0;$i<($count/2);$i++){\n\
    \t\t\t$arr[] = $q[$i];\n\t\t}\n\t\t$c = count($arr);\n\t\t$x = ($count/2)-1;\n\
    \t\tfor($j=$count-1;$j>$x;$j--){\n\t\t\t$arr1[] = $q[$j];\n\t\t}\n\t\t$d = count($arr1);\n\
    \t\tfor($p=0;$p<$c;$p++){\n\t\t\t$newarr[] = $arr[$p];\n\t\t}\n\t\tfor($l=$d-1;$l>=0;$l--){\n\
    \t\t\t$newarr1[] = $arr1[$l];\n\t\t}\n\t\t$newarr1 = array_reverse($newarr1);\n\
    \t\tif($newarr==$newarr1){\n\t\t\treturn \"True\";\n\t\t}\n\t\telse{\n\t\t\treturn\
    \ \"False\";\n\t\t}\n\t}\n\telse{\n\t\treturn \"False\";\n\t}\n}\n$q = [3, 2,\
    \ 3];\n$w = 1;\necho will_it_fly($q, $w);\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobfmpazi.php:59\n\
    Stack trace:\n#0 /tmp/tmpobfmpazi.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpobfmpazi.php\
    \ on line 59\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $reverseArr = array_reverse($q);\n    $sum\
    \ = array_sum($q);\n    $middle = count($q) / 2;\n    $answer = false;\n    if\
    \ ($reverseArr == $q && $sum <= $w){\n        $answer = true;\n    }\n    return\
    \ $answer;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (array_sum($q) <= $w && $q === array_reverse($q))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$arr = [];\n\t$sum = 0;\n\tforeach ($q as $value)\
    \ {\n\t\t$sum = $sum + $value;\n\t\tarray_push($arr, $value);\n\t}\n\t$rev = array_reverse($arr);\n\
    \tif ($sum <= $w && $arr == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$isPalindrome = $q\
    \ === array_reverse($q);\n\treturn $sum <= $w && $isPalindrome;\n}\necho will_it_fly([1,\
    \ 2], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $f=0;\n    $sum=0;\n    $len=count($q);\n\
    \    for($i=0;$i<$len;$i++){\n        $sum=$sum+$q[$i];\n    }\n    if($sum<=$w){\n\
    \        for($i=0;$i<$len;$i++){\n            if($q[$i]==$q[$len-$i-1]){\n   \
    \             $f++;\n            }\n        }\n        if($f==$len){\n       \
    \     return \"True\";\n        }\n        else{\n            return \"False\"\
    ;\n        }\n    }\n    else{\n        return \"False\";\n    }\n}\necho will_it_fly([1,\
    \ 2], 5); \necho \"\\n\";\necho will_it_fly([3, 2, 3], 1);\necho \"\\n\";\necho\
    \ will_it_fly([3, 2, 3], 9);\necho \"\\n\";\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nTrue\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpimvtbeum.php:49\nStack trace:\n#0 /tmp/tmpimvtbeum.php(57): test()\n\
    #1 {main}\n  thrown in /tmp/tmpimvtbeum.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $a = array_sum($q);\n    if(in_array($a, $q)\
    \ && $a <= $w){\n        return true;\n    }\n    return false;\n}\necho will_it_fly([1,\
    \ 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\necho\
    \ \"<br>\";\necho will_it_fly([1, 2, 5, 2, 1], 9);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<br><br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpchpjjk3a.php:35\nStack trace:\n#0 /tmp/tmpchpjjk3a.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpchpjjk3a.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = array_sum($q);\n  $reversed = array_reverse($q);\n\
    \  if($q == $reversed && $sum <= $w){\n    return true;\n  }\n  return false;\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br/>\";\necho will_it_fly([3, 2, 3],\
    \ 1);\necho \"<br/>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br/>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br/><br/>1<br/>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(array_sum($q)<=$w && array_sum($q)==array_sum(array_reverse($q))){\n\
    \        return true;\n    }else{\n        return false;\n    }\n}\necho will_it_fly([1,\
    \ 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\necho\
    \ \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbl3h71t9.php:34\n\
    Stack trace:\n#0 /tmp/tmpbl3h71t9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbl3h71t9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif(array_sum($q) <= $w && $q == array_reverse($q))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho will_it_fly([3,\
    \ 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum > $w){\n\t\t\
    return false;\n\t}\n\tif($q === array_reverse($q)){\n\t\treturn true;\n\t}\n\t\
    return false;\n}\necho will_it_fly([3, 2, 3], 9).\"\\n\";\necho will_it_fly([3],\
    \ 5).\"\\n\";\necho will_it_fly([1, 2], 5).\"\\n\";\necho will_it_fly([3, 2, 3],\
    \ 1).\"\\n\";\necho will_it_fly([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\
    \ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,\
    \ 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,\
    \ 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,\
    \ 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,\
    \ 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,\
    \ 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\
    \ 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,\
    \ 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\
    \ 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,\
    \ 188,\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy4jbqfiw.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$bal = $q;\n\t$rev\
    \ = array_reverse($q);\n\tif ($bal == $rev) {\n\t\tif ($sum <= $w) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$len = count($q);\n\t$i = 0;\n\t$s = 0;\n\t\
    while ($i < $len){\n\t\t$s += $q[$i];\n\t\t$i++;\n\t}\n\tif($s <= $w){\n\t\tif($len\
    \ % 2 == 0){\n\t\t\t$j = 0;\n\t\t\t$m = $len / 2;\n\t\t\twhile($j < $m){\n\t\t\
    \t\tif($q[$j] != $q[$len - 1 - $j]){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\
    \t\t$j++;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t$j = 0;\n\t\t$m = ($len - 1)\
    \ / 2;\n\t\twhile($j < $m){\n\t\t\tif($q[$j] != $q[$len - 1 - $j]){\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$palindrome = array_reverse($q);\n\t$sum = array_sum($q);\n\
    \tif(($sum <= $w) && ($q == $palindrome)) {\n\t\treturn \"true\";\n\t} else {\n\
    \t\treturn \"false\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1at_bsdu.php:28\n\
    Stack trace:\n#0 /tmp/tmp1at_bsdu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1at_bsdu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (count($q) === 1) {\n\t\treturn true;\n\t\
    }\n\t$part1 = array_slice($q, 0, count($q) / 2);\n\t$part2 = array_slice($q, count($q)\
    \ / 2);\n\t$part2 = array_reverse($part2);\n\tif ($part1 === $part2) {\n\t\tif\
    \ (array_sum($q) <= $w) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1) . \"\\\
    n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa62a88p.php:36\n\
    Stack trace:\n#0 /tmp/tmpaa62a88p.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpaa62a88p.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn ($q == array_reverse($q) && array_sum($q)\
    \ <= $w) ? true : false;\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n$sum = array_sum($q);\n$reverse = array_reverse($q);\n\
    if($sum <= $w){\n    if($q == $reverse){\n        return \"True\";\n    }\n  \
    \  else {\n        return \"False\";\n    }\n}\nelse {\n    return \"False\";\n\
    }\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq16fz9rp.php:34\n\
    Stack trace:\n#0 /tmp/tmpq16fz9rp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq16fz9rp.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$count = count($q);\n\t$sum = array_sum($q);\n\
    \t$countPalindrome = 0;\n\tfor ($i=0; $i < $count; $i++) { \n\t\tif($q[$i] ==\
    \ $q[$count - $i - 1]){\n\t\t\t$countPalindrome++;\n\t\t}\n\t}\n\treturn ($countPalindrome\
    \ == $count && $sum <= $w) ? true : false;\n}\necho will_it_fly([1, 2], 5);\n\
    echo will_it_fly([3, 2, 3], 1);\necho will_it_fly([3, 2, 3], 9);\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(count($q) === 1){\n        return true;\n\
    \    }\n    $sum = 0;\n    $len = count($q);\n    $left = 0;\n    $right = $len\
    \ - 1;\n    while($left < $right){\n        if($q[$left] !== $q[$right]){\n  \
    \          return false;\n        }\n        $left++;\n        $right--;\n   \
    \ }\n    foreach($q as $num){\n        $sum += $num;\n    }\n    if($sum <= $w){\n\
    \        return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$max_weight = 0;\n\t$arr = array();\n\tforeach\
    \ ($q as $key => $value) {\n\t\t$max_weight += $value;\n\t\t$arr[] = $value;\n\
    \t}\n\tif ($max_weight <= $w && $arr == array_reverse($arr)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t\n}\necho will_it_fly([1, 2], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ppqm9uf.php:22\n\
    Stack trace:\n#0 /tmp/tmp6ppqm9uf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6ppqm9uf.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    $test\
    \ = $q;\n    $test = array_reverse($test);\n    if(array_values($q) === array_values($test)){\n\
    \        for($i = 0; $i < $len; $i++){\n            $sum += $q[$i];\n        }\n\
    \        if($sum <= $w){\n            return true;\n        }\n    }\n    return\
    \ false;\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w && array_values($q)\
    \ === array_reverse($q)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\necho will_it_fly([1,\
    \ 2], 5) . \"\\n\"; // False \necho will_it_fly([3, 2, 3], 1) . \"\\n\"; // False\n\
    echo will_it_fly([3, 2, 3], 9) . \"\\n\"; // True\necho will_it_fly([3], 5) .\
    \ \"\\n\"; // True\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$check = $q;\n\t$reverse\
    \ = array_reverse($q);\n\tif ($sum <= $w && $check == $reverse) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\treturn ($sum <= $w\
    \ && $q == array_reverse($q));\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$x = 0;\n\t$sum = 0;\n\t$arr = [];\n\tfor ($i=0;\
    \ $i < count($q); $i++) { \n\t\tarray_push($arr, $q[$i]);\n\t\t$x++;\n\t}\n\t\
    for ($i=0; $i < count($q); $i++) { \n\t\tif ($arr[$i] != $q[$i]) {\n\t\t\treturn\
    \ False;\n\t\t}\n\t}\n\tfor ($i=0; $i < count($q); $i++) { \n\t\t$sum = $sum +\
    \ $q[$i];\n\t}\n\tif ($sum <= $w) {\n\t\treturn True;\n\t}\n\telse {\n\t\treturn\
    \ False;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br><br>1<br>1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhs5k86o.php:49\n\
    Stack trace:\n#0 /tmp/tmpxhs5k86o.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpxhs5k86o.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $size = count($q);\n    $sum = 0;\n    for\
    \ ($i = 0; $i < $size; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return False;\n    }\n    $left = 0;\n    $right = $size - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return False;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return True;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif(is_numeric($q[0]))\
    \ {\n\t\tif($sum <= $w) {\n\t\t\tif($q == array_reverse($q)) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5)\
    \ . \"\\n\";\necho will_it_fly([3, 2, 3], 1) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $len = count($q);\n    $sum = array_sum($q);\n\
    \    $rev = array_reverse($q);\n    if ($sum <= $w && $q == $rev) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho will_it_fly([3, 2,\
    \ 3], 9);\necho \"<br>\";\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br><br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$pal = $q;\n\t$rev = array_reverse($q);\n\t\
    $sum = array_sum($q);\n\tif ($sum <= $w && $pal == $rev) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho will_it_fly([1, 2], 5) . \"\\n\";\n\
    echo will_it_fly([3, 2, 3], 1) . \"\\n\";\necho will_it_fly([3, 2, 3], 9) . \"\
    \\n\";\necho will_it_fly([3], 5) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$reverse = array_reverse($q);\n\t\tif ($q == $reverse) {\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5) . PHP_EOL;\necho will_it_fly([3,\
    \ 2, 3], 1) . PHP_EOL;\necho will_it_fly([3, 2, 3], 9) . PHP_EOL;\necho will_it_fly([3],\
    \ 5) . PHP_EOL;\necho will_it_fly([1,2,2,1],5) . PHP_EOL;\necho will_it_fly([1,2,2,1],8)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$i = 1;\n\t$length = count($q);\n\twhile ($i\
    \ <= $length){\n\t\tif($q[$i - 1] != $q[$length - $i]){\n\t\t\treturn \"False\"\
    ;\n\t\t}\n\t\t$i++;\n\t}\n\t$sum = array_sum($q);\n\tif($sum <= $w){\n\t\treturn\
    \ \"True\";\n\t}\n\treturn \"False\";\n}\necho will_it_fly([3, 2, 3], 9).\"<br>\"\
    ;\necho will_it_fly([3], 5).\"<br>\";\necho will_it_fly([1, 2], 5).\"<br>\";\n\
    echo will_it_fly([3, 2, 3], 1).\"<br>\";\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True<br>True<br>False<br>False<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy_4s4g8q.php:37\nStack trace:\n#0 /tmp/tmpy_4s4g8q.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy_4s4g8q.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$weight = 0;\n\tfor ($i=0; $i < count($q); $i++)\
    \ { \n\t\t$weight += $q[$i];\n\t}\n\tif ($weight <= $w) {\n\t\t$first = 0;\n\t\
    \t$last = count($q) - 1;\n\t\twhile ($first < $last) {\n\t\t\tif ($q[$first] ==\
    \ $q[$last]) {\n\t\t\t\t$first++;\n\t\t\t\t$last--;\n\t\t\t} else {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([2, 3, 2], 5);\necho \"<br>\";\necho will_it_fly([1,\
    \ 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_103_rounded_avg
language: php
results:
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $aver = round(($n +\
    \ $m) / 2);\n    if ($n > $m) {\n        return -1;\n    } else {\n        return\
    \ decbin($aver);\n    }\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp7soi8f0t.php:29\nStack trace:\n#0 /tmp/tmp7soi8f0t.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7soi8f0t.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = $n;\n\tfor ($i = $n + 1; $i <= $m; $i++) {\n\t\t$sum += $i;\n\
    \t}\n\t$ans = decbin(round($sum / ($m - $n + 1)));\n\treturn \"0b$ans\";\n}\n\
    echo rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7f1j3u5b.php:30\n\
    Stack trace:\n#0 /tmp/tmp7f1j3u5b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7f1j3u5b.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $output = round(($n\
    \ + $m) / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return decbin($output);\n\
    }\necho rounded_avg(1, 5);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp641t2r4a.php:24\n\
    Stack trace:\n#0 /tmp/tmp641t2r4a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp641t2r4a.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return '0b' . decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2ksh_596.php:28\nStack trace:\n#0 /tmp/tmp2ksh_596.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2ksh_596.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $n_array = array();\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $n_array[] = $i;\n    }\n    $avg = array_sum($n_array) / count($n_array);\n\
    \    $avg = round($avg);\n    $avg = decbin($avg);\n    return \"0b{$avg}\";\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxtjpc6k.php:32\n\
    Stack trace:\n#0 /tmp/tmpvxtjpc6k.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvxtjpc6k.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1nzkmms.php:27\n\
    Stack trace:\n#0 /tmp/tmpr1nzkmms.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr1nzkmms.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $result = $m < $n ?\
    \ -1 : bindec(intval(($n + $m) / 2));\n    return sprintf(\"0b%s\", decbin($result));\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b0\n0b1111111111111111111111111111111111111111111111111111111111111111\n\
    0b1\n0b0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxtiuhfn.php:25\n\
    Stack trace:\n#0 /tmp/tmpoxtiuhfn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoxtiuhfn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $sum = round($sum / ($m - $n + 1));\n    return\
    \ decbin($sum);\n}\n\necho rounded_avg(1, 5) . PHP_EOL; // 0b11\necho rounded_avg(7,\
    \ 5) . PHP_EOL; // -1\necho rounded_avg(10, 20) . PHP_EOL; // 0b1111\necho rounded_avg(20,\
    \ 33) . PHP_EOL; // 0b11010\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpg4dbuxs_.php:32\nStack trace:\n#0 /tmp/tmpg4dbuxs_.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg4dbuxs_.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $binary = \"\";\n  \
    \  $sum = 0;\n    $avg = 0;\n    $n = abs($n);\n    $m = abs($m);\n    if ($n\
    \ == $m) {\n        $num = decbin($n);\n        return \"0b$num\";\n    }\n  \
    \  if ($n > $m) {\n        return -1;\n    }\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ $binary = decbin($avg);\n    return \"0b$binary\";\n}\n\n$n = 20;\n$m = 33;\n\
    echo rounded_avg($n, $m);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9le1mv7z.php:42\n\
    Stack trace:\n#0 /tmp/tmp9le1mv7z.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp9le1mv7z.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $avg = round((($n + $m)\
    \ / 2));\n  return $n > $m ? -1 : decbin($avg);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekc96x0l.php:20\n\
    Stack trace:\n#0 /tmp/tmpekc96x0l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpekc96x0l.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11011\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyu179v9o.php:26\n\
    Stack trace:\n#0 /tmp/tmpyu179v9o.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyu179v9o.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$nums = range($n, $m);\n\t$avg = round(array_sum($nums) / count($nums));\n\
    \treturn '0b' . decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpucgkv5co.php:30\nStack trace:\n#0 /tmp/tmpucgkv5co.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpucgkv5co.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $average = round(($n + $m) / 2);\n    return \"0b\" . decbin($average);\n\
    }\n\nprint_r(rounded_avg(10, 20));\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgxnt308.php:25\n\
    Stack trace:\n#0 /tmp/tmpcgxnt308.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcgxnt308.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $min = $n < $m ? $n :\
    \ $m;\n  $max = $n > $m ? $n : $m;\n  $sum = 0;\n  $total = 0;\n  for ($i = $min;\
    \ $i <= $max; $i++) {\n    $sum += $i;\n    $total++;\n  }\n  $avg = round($sum\
    \ / $total);\n  return $avg === 0 ? '0b0' : '0b' . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n0b110\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmptigyzxdg.php:34\nStack trace:\n#0 /tmp/tmptigyzxdg.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmptigyzxdg.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $avg = round(($n + $m)\
    \ / 2);\n  if ($n > $m) {\n    return -1;\n  }\n  return decbin($avg);\n}\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpscquyh5m.php:23\n\
    Stack trace:\n#0 /tmp/tmpscquyh5m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpscquyh5m.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n   $avg = round(($n + $m)\
    \ / 2);\n   if ($n > $m) {\n      return -1;\n   }\n   return base_convert($avg,\
    \ 10, 2);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\
    \\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp9_2sea6v.php:28\nStack trace:\n#0 /tmp/tmp9_2sea6v.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9_2sea6v.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = array_sum(range($n, $m));\n\t$avg = intval(round($sum / ($m\
    \ - $n + 1)));\n\treturn decbin($avg);\n}\nfunction candidate(...$args) {\n  \
    \  return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjp9pdxd.php:24\n\
    Stack trace:\n#0 /tmp/tmpzjp9pdxd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzjp9pdxd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_yf1b9_z.php:28\n\
    Stack trace:\n#0 /tmp/tmp_yf1b9_z.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_yf1b9_z.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $average = floor( ($n + $m) / 2 );\n  return ( decbin($average) );\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4bkn1r_.php:22\n\
    Stack trace:\n#0 /tmp/tmpq4bkn1r_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq4bkn1r_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  \n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplgqa5hdu.php:20\n\
    Stack trace:\n#0 /tmp/tmplgqa5hdu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplgqa5hdu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    return decbin(round(($n + $m) / 2));\n}\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3id_md5i.php:22\n\
    Stack trace:\n#0 /tmp/tmp3id_md5i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3id_md5i.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return \"0b\" . decbin($avg);\n}\nprint_r(rounded_avg(1,\
    \ 5));\nprint_r(rounded_avg(7, 5));\nprint_r(rounded_avg(10, 20));\nprint_r(rounded_avg(20,\
    \ 33));\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11-10b11110b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvvag0qc.php:28\n\
    Stack trace:\n#0 /tmp/tmpsvvag0qc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsvvag0qc.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $average = round(($n + $m) / 2);\n    return decbin($average);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfr65lyp_.php:24\n\
    Stack trace:\n#0 /tmp/tmpfr65lyp_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfr65lyp_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = ($n + $m) * (($m - $n) + 1) / 2;\n  $rounded = round($sum / ($m - $n\
    \ + 1));\n  return \"0b\".decbin($rounded);\n}\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhhxda54.php:24\n\
    Stack trace:\n#0 /tmp/tmpuhhxda54.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuhhxda54.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\t$a = floor(($n + $m) /\
    \ 2);\n\treturn $n > $m ? -1 : decbin($a);\n}\n\necho rounded_avg(1, 5) . '<br>';\n\
    echo rounded_avg(7, 5) . '<br>';\necho rounded_avg(10, 20) . '<br>';\necho rounded_avg(20,\
    \ 33) . '<br>';\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11<br>-1<br>1111<br>11010<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpplyl1602.php:25\nStack trace:\n#0 /tmp/tmpplyl1602.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpplyl1602.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $x = ($n + $m) / 2;\n    $x = round($x);\n    $x\
    \ = decbin($x);\n    return \"0b\" . $x;\n}\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbb6o4lpi.php:27\n\
    Stack trace:\n#0 /tmp/tmpbb6o4lpi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbb6o4lpi.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    if ($n < $m) {\n        return decbin($avg);\n    } else {\n    \
    \    return -1;\n    }\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d_zx47k.php:24\n\
    Stack trace:\n#0 /tmp/tmp5d_zx47k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5d_zx47k.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    $count\
    \ = 0;\n    if ($n > $m) return -1;\n    for ($i = $n; $i <= $m; $i++) {\n   \
    \     $sum += $i;\n        $count++;\n    }\n    $avg = floor($sum / $count);\n\
    \    return '0b' . decbin($avg);\n}\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6tk4why.php:31\n\
    Stack trace:\n#0 /tmp/tmps6tk4why.php(41): test()\n#1 {main}\n  thrown in /tmp/tmps6tk4why.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return \"0b\" . decbin($avg);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6sw6_kva.php:25\n\
    Stack trace:\n#0 /tmp/tmp6sw6_kva.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6sw6_kva.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $array = range($n, $m);\n  $avg = array_sum($array) / count($array);\n\
    \  $avg_rounded = round($avg);\n  return decbin($avg_rounded);\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL; // => \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL; // => -1\necho\
    \ rounded_avg(10, 20) . PHP_EOL; // => \"0b1111\"\necho rounded_avg(20, 33) .\
    \ PHP_EOL; // => \"0b11010\"\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpxxi3aldz.php:30\nStack trace:\n#0 /tmp/tmpxxi3aldz.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxxi3aldz.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $sum = round($sum / ($m - $n + 1));\n  return \"0b\".decbin($sum);\n}\n\
    \necho rounded_avg(1, 5).\"\\n\";\necho rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10,\
    \ 20).\"\\n\";\necho rounded_avg(20, 33).\"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqewgqsmi.php:35\nStack trace:\n#0 /tmp/tmpqewgqsmi.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqewgqsmi.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    if ($n\
    \ > $m) {\n        return -1;\n    } else {\n        for ($i = $n; $i <= $m; $i++)\
    \ {\n            $sum += $i;\n        }\n        $avg = round($sum / $m);\n  \
    \      return decbin($avg);\n    }\n}\necho rounded_avg(1, 5); // 0b11\necho rounded_avg(7,\
    \ 5); // -1\necho rounded_avg(10, 20); // 0b1111\necho rounded_avg(20, 33); //\
    \ 0b11010\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11-110001011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8lvv_ir.php:32\n\
    Stack trace:\n#0 /tmp/tmpm8lvv_ir.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpm8lvv_ir.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = array_sum(range($n, $m));\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpglshxcds.php:24\n\
    Stack trace:\n#0 /tmp/tmpglshxcds.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpglshxcds.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$average = round(($n + $m) / 2);\n\treturn decbin($average);\n}\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp93eyadtt.php:27\nStack trace:\n#0 /tmp/tmp93eyadtt.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp93eyadtt.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return \"0b\" . decbin($avg);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5xp5v5d.php:25\n\
    Stack trace:\n#0 /tmp/tmpo5xp5v5d.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpo5xp5v5d.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $total = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $total +=\
    \ $i;\n    }\n    $answer = round($total / ($m - $n + 1));\n    return \"0b\"\
    \ . decbin($answer);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj9ram4km.php:31\nStack trace:\n#0 /tmp/tmpj9ram4km.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj9ram4km.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $result = round(($n + $m) / 2);\n    return decbin($result);\n\
    }\necho rounded_avg(1, 5) . PHP_EOL; // => \"0b11\"\necho rounded_avg(7, 5) .\
    \ PHP_EOL; // => -1\necho rounded_avg(10, 20) . PHP_EOL; // => \"0b1111\"\necho\
    \ rounded_avg(20, 33) . PHP_EOL; // => \"0b11010\"\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmppr8rfwxd.php:27\nStack trace:\n#0 /tmp/tmppr8rfwxd.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmppr8rfwxd.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $sum /= $m - $n + 1;\n  return decbin(round($sum));\n}\n\necho rounded_avg(1,\
    \ 5);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_6q_j0d.php:29\n\
    Stack trace:\n#0 /tmp/tmp5_6q_j0d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5_6q_j0d.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // Write code here...\n\
    }\n$result = rounded_avg(7, 5);\necho $result;\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yiorltg.php:21\n\
    Stack trace:\n#0 /tmp/tmp1yiorltg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1yiorltg.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    return ($n > $m) ? -1 : decbin($avg);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvj5foie5.php:20\n\
    Stack trace:\n#0 /tmp/tmpvj5foie5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvj5foie5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $average = round(($n + $m) / 2);\n    return '0b'\
    \ . decbin($average);\n}\nprint_r(rounded_avg(1, 5) . PHP_EOL);\nprint_r(rounded_avg(7,\
    \ 5) . PHP_EOL);\nprint_r(rounded_avg(10, 20) . PHP_EOL);\nprint_r(rounded_avg(20,\
    \ 33) . PHP_EOL);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpezv03w1w.php:29\nStack trace:\n#0 /tmp/tmpezv03w1w.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpezv03w1w.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  return decbin(round(($n + $m) / 2));\n}\n\necho rounded_avg(1, 5).\"\\n\";\n\
    echo rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10, 20).\"\\n\";\necho rounded_avg(20,\
    \ 33).\"\\n\";\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpxf9_szzn.php:26\nStack trace:\n#0 /tmp/tmpxf9_szzn.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxf9_szzn.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . base_convert($avg, 10, 2);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\
    \ // => \"0b11\"\necho rounded_avg(7, 5) . \"\\n\"; // => -1\necho rounded_avg(10,\
    \ 20) . \"\\n\"; // => \"0b1111\"\necho rounded_avg(20, 33) . \"\\n\"; // => \"\
    0b11010\"\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4mq13ei0.php:35\nStack trace:\n#0 /tmp/tmp4mq13ei0.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4mq13ei0.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $avg = round(($n + $m)\
    \ / 2);\n  return ($n > $m) ? -1 : base_convert($avg, 10, 2);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp98uwvl3c.php:20\n\
    Stack trace:\n#0 /tmp/tmp98uwvl3c.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp98uwvl3c.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  return decbin(round(($n + $m) / 2));\n}\n\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcfuwf9_g.php:21\n\
    Stack trace:\n#0 /tmp/tmpcfuwf9_g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcfuwf9_g.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n   if ($n > $m) {\n    \
    \  return -1;\n   }\n   $numbers = range($n, $m);\n   $avg = floor(array_sum($numbers)\
    \ / count($numbers));\n   return base_convert($avg, 10, 2);\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11010\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe3_vh7_6.php:29\nStack trace:\n#0 /tmp/tmpe3_vh7_6.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe3_vh7_6.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbw46ehc.php:28\n\
    Stack trace:\n#0 /tmp/tmphbw46ehc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphbw46ehc.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $x = floor(($n + $m)\
    \ / 2);\n    return $n > $m ? -1 : \"0b\" . decbin($x);\n}\n\necho(rounded_avg(1,\
    \ 5) . \"\\n\");\necho(rounded_avg(7, 5) . \"\\n\");\necho(rounded_avg(10, 20)\
    \ . \"\\n\");\necho(rounded_avg(20, 33) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11010\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdzctpct9.php:29\nStack trace:\n#0 /tmp/tmpdzctpct9.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdzctpct9.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) return -1;\n\
    \t$num = floor(($n + $m) / 2);\n\t$bin = decbin($num);\n\treturn \"0b$bin\";\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11010\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp3cb0lqif.php:31\nStack trace:\n#0 /tmp/tmp3cb0lqif.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3cb0lqif.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $avg = ($n + $m) / 2;\n\
    \  if ($n > $m) {\n    return -1;\n  }\n  return decbin(round($avg));\n}\n\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1111\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mz23b6h.php:25\n\
    Stack trace:\n#0 /tmp/tmp6mz23b6h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6mz23b6h.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    if ($n < $m) {\n        return decbin($avg);\n    } elseif ($n >\
    \ $m) {\n        return -1;\n    }\n}\n\necho rounded_avg(20, 33);\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jd32ooh.php:26\n\
    Stack trace:\n#0 /tmp/tmp6jd32ooh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6jd32ooh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $avg = round(($n + $m) / 2);\n  return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppl6s1pvy.php:29\nStack trace:\n#0 /tmp/tmppl6s1pvy.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmppl6s1pvy.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\t// Return -1 if n is greater\
    \ than m.\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t// Add n and m together and\
    \ then divide by 2, rounding to the nearest integer.\n\t$average = round(($n +\
    \ $m) / 2);\n\t// Convert the average to binary, and then return \"0b\" + the\
    \ binary number.\n\treturn \"0b\" . decbin($average);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52_n6cqe.php:28\n\
    Stack trace:\n#0 /tmp/tmp52_n6cqe.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp52_n6cqe.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp1bwnkek2.php:34\nStack trace:\n#0 /tmp/tmp1bwnkek2.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1bwnkek2.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp3s_qkbbw.php:36\nStack trace:\n#0 /tmp/tmp3s_qkbbw.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3s_qkbbw.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    return decbin(round(($n + $m) / 2));\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsafbn97v.php:20\n\
    Stack trace:\n#0 /tmp/tmpsafbn97v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsafbn97v.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return \"0b\".str_pad(decbin($avg), ceil(log($avg,\
    \ 2)), '0', STR_PAD_LEFT);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3cqejdf.php:23\n\
    Stack trace:\n#0 /tmp/tmpw3cqejdf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw3cqejdf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    $count\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    if ($n > $m) {\n        return -1;\n    }\n    return decbin(round($sum\
    \ / $count));\n}\nprint(rounded_avg(1, 5) . \"\\n\");\nprint(rounded_avg(7, 5)\
    \ . \"\\n\");\nprint(rounded_avg(10, 20) . \"\\n\");\nprint(rounded_avg(20, 33)\
    \ . \"\\n\");\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpu_stovmm.php:32\nStack trace:\n#0 /tmp/tmpu_stovmm.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpu_stovmm.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $avg = round(($n + $m)\
    \ / 2);\n  return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n110\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpvwv561cg.php:24\nStack trace:\n#0 /tmp/tmpvwv561cg.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvwv561cg.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    return decbin(round(($n + $m) / 2));\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadzgqxjs.php:20\n\
    Stack trace:\n#0 /tmp/tmpadzgqxjs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpadzgqxjs.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $sum = 0;\n  $count =\
    \ 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n  }\n\
    \  $average = round($sum / $count);\n  if ($average > $m) {\n    return -1;\n\
    \  }\n  return decbin($average);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n\nWarning: Division by zero in /tmp/tmpkpozs3yi.php on line 18\n0\n\
    1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpozs3yi.php:33\n\
    Stack trace:\n#0 /tmp/tmpkpozs3yi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpkpozs3yi.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzegflohd.php:28\n\
    Stack trace:\n#0 /tmp/tmpzegflohd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzegflohd.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $sum = 0;\n  for ($i =\
    \ $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = $sum / ($m - $n + 1);\n\
    \  return decbin(round($avg));\n}\n\necho rounded_avg(1, 5) . \"\\n\"; // \"0b11\"\
    \necho rounded_avg(7, 5) . \"\\n\"; // -1\necho rounded_avg(10, 20) . \"\\n\"\
    ; // \"0b1111\"\necho rounded_avg(20, 33) . \"\\n\"; // \"0b11010\"\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n0\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmps98q3zzi.php:29\nStack trace:\n#0 /tmp/tmps98q3zzi.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmps98q3zzi.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) $sum += $i;\n    $number\
    \ = ceil($sum / ($m - $n + 1));\n    return '0b' . decbin($number);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsyq87dm4.php:26\n\
    Stack trace:\n#0 /tmp/tmpsyq87dm4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsyq87dm4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $average = (int) round(($n + $m) / 2);\n    return\
    \ decbin($average);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp5t5nf3vg.php:28\nStack trace:\n#0 /tmp/tmp5t5nf3vg.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmp5t5nf3vg.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"<br />\";\necho rounded_avg(7, 5) . \"<br />\";\n\
    echo rounded_avg(10, 20) . \"<br />\";\necho rounded_avg(20, 33) . \"<br />\"\
    ;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11<br />-1<br />1111<br />11011<br />\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp3ch7t607.php:27\nStack trace:\n#0 /tmp/tmp3ch7t607.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3ch7t607.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  return decbin(round(($n + $m) / 2));\n}\necho rounded_avg(20, 33);\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjh_cffvc.php:23\n\
    Stack trace:\n#0 /tmp/tmpjh_cffvc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjh_cffvc.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n   $t = 0;\n   if ($n <\
    \ $m) {\n    for ($i = $n; $i <= $m; $i++) {\n      $t += $i;\n    }\n    $t =\
    \ ($t / ($m - $n + 1));\n    $t = round($t);\n    return decbin($t);\n   } else\
    \ {\n    return -1;\n   }\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaw76238l.php:29\n\
    Stack trace:\n#0 /tmp/tmpaw76238l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpaw76238l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  return \"0b\" . decbin(round(($n + $m) / 2));\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd7gfqew.php:24\n\
    Stack trace:\n#0 /tmp/tmpwd7gfqew.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwd7gfqew.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n < $m) {\n\t\t$avg\
    \ = round(($n + $m) / 2);\n\t\treturn base_convert($avg, 10, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_0p3g2y_.php:28\nStack trace:\n#0 /tmp/tmp_0p3g2y_.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_0p3g2y_.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = ($n + $m) / 2;\n\
    \    if ($n > $m) {\n        return -1;\n    } else {\n        return decbin(round($sum));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qfvxnw9.php:25\n\
    Stack trace:\n#0 /tmp/tmp4qfvxnw9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4qfvxnw9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    if ($n\
    \ > $m) {\n        return -1;\n    } else {\n        for ($i = $n; $i <= $m; $i++)\
    \ {\n            $sum += $i;\n        }\n        $avg = round($sum / ($m - $n\
    \ + 1));\n        return decbin($avg);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gnqv2km.php:28\n\
    Stack trace:\n#0 /tmp/tmp_gnqv2km.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_gnqv2km.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $nums = range($n, $m);\n  $avg = round(array_sum($nums) / count($nums));\n\
    \  return '0b' . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsx1shrzz.php:27\n\
    Stack trace:\n#0 /tmp/tmpsx1shrzz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsx1shrzz.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $average = $sum / ($m - $n + 1);\n  $average = round($average);\n  return\
    \ decbin($average);\n}\n\necho rounded_avg(20, 33);\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhqphe29.php:30\n\
    Stack trace:\n#0 /tmp/tmpbhqphe29.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbhqphe29.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $mean = (int) round(($n + $m) / 2);\n  return decbin($mean);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoiwo93cm.php:22\n\
    Stack trace:\n#0 /tmp/tmpoiwo93cm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpoiwo93cm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = array_sum(range($n,\
    \ $m));\n    $avg = round($sum / ($m - $n + 1));\n    if ($n > $m) {\n       \
    \ return -1;\n    }\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2g0uxrcc.php:30\nStack trace:\n#0 /tmp/tmp2g0uxrcc.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2g0uxrcc.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$average = round(($n + $m) / 2);\n\treturn decbin($average);\n}\n\
    print_r(rounded_avg(1, 5));\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgdbmarg.php:24\n\
    Stack trace:\n#0 /tmp/tmpfgdbmarg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfgdbmarg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\t// your code goes here\n\
    \t$mid = ceil(($n + $m) / 2);\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\treturn\
    \ decbin($mid);\n}\n\nprint_r(rounded_avg(10, 20));\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgdd7_ue.php:26\n\
    Stack trace:\n#0 /tmp/tmpcgdd7_ue.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcgdd7_ue.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = (int) ($sum / ($m - $n + 1));\n    return\
    \ '0b' . decbin($avg);\n}\necho rounded_avg(1, 5); // 0b11\necho rounded_avg(7,\
    \ 5); // -1\necho rounded_avg(10, 20); // 0b1111\necho rounded_avg(20, 33); //\
    \ 0b11010\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11-10b11110b11010\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwvju020n.php:35\n\
    Stack trace:\n#0 /tmp/tmpwvju020n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwvju020n.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  $count = 0;\n  for ($i = $n; $i <= $m; $i++) {\n  \
    \  $sum += $i;\n    $count++;\n  }\n  $avg = floor($sum / $count);\n  return \"\
    0b\" . decbin($avg);\n}\n\n$results = [\n  '0b11' => rounded_avg(1, 5),\n  '-1'\
    \ => rounded_avg(7, 5),\n  '0b1111' => rounded_avg(10, 20),\n  '0b11010' => rounded_avg(20,\
    \ 33)\n];\n\nprint_r($results);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0b11] => 0b11\n    [-1] => -1\n    [0b1111] => 0b1111\n\
    \    [0b11010] => 0b11010\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppl1kg5me.php:42\nStack trace:\n#0 /tmp/tmppl1kg5me.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmppl1kg5me.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // Edg\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpydehx1kl.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $total = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $total += $i;\n\
    \  }\n  $avg = round($total / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11011\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpopcajl2k.php:30\n\
    Stack trace:\n#0 /tmp/tmpopcajl2k.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpopcajl2k.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  //base cases\n  if($n\
    \ > $m){\n    return -1;\n  } elseif($n == $m){\n    return \"0b\" . decbin($n);\n\
    \  } else {\n    $sum = 0;\n    //loops through numbers and sums them together\n\
    \    for($i = $n; $i <= $m; $i++){\n      $sum += $i;\n    }\n    //divides the\
    \ sum by how many numbers there are, rounds it and changes it to a binary\n  \
    \  return \"0b\" . decbin(round($sum / ($m - $n + 1)));\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqks45y_n.php:35\n\
    Stack trace:\n#0 /tmp/tmpqks45y_n.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqks45y_n.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return '0b' . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpsqi6m5i7.php:32\nStack trace:\n#0 /tmp/tmpsqi6m5i7.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpsqi6m5i7.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = $n;\n    for ($i = $n+1; $i <= $m; $i++) {\n        $sum +=\
    \ $i;\n    }\n    $avg = round($sum/($m-$n+1));\n    return \"0b\".decbin($avg);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0rhb8a8.php:27\n\
    Stack trace:\n#0 /tmp/tmpz0rhb8a8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz0rhb8a8.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n>$m) {\n    return\
    \ -1;\n  }\n  $res = round(($n+$m)/2);\n  return \"0b\".decbin($res);\n}\necho\
    \ rounded_avg(7, 5);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplusbt15y.php:26\n\
    Stack trace:\n#0 /tmp/tmplusbt15y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplusbt15y.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $rounded_avg = (int) round($sum / ($m - $n + 1));\n  return '0b' . decbin($rounded_avg);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_55mia1.php:29\n\
    Stack trace:\n#0 /tmp/tmpb_55mia1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb_55mia1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $rounded = round(($n + $m) / 2);\n    return decbin($rounded);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbi2cjlz4.php:24\n\
    Stack trace:\n#0 /tmp/tmpbi2cjlz4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbi2cjlz4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $total = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $total += $i;\n    }\n    $average = floor($total / ($m - $n + 1));\n\
    \    return \"0b\" . decbin($average);\n}\nfunction candidate(...$args) {\n  \
    \  return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpus7teesi.php:31\n\
    Stack trace:\n#0 /tmp/tmpus7teesi.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpus7teesi.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  // your code here\n  if($n\
    \ > $m) {\n  \treturn -1;\n  }\n  $avg = ceil(($n + $m) / 2);\n  return decbin($avg);\n\
    }\necho rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrtah028.php:25\n\
    Stack trace:\n#0 /tmp/tmpnrtah028.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnrtah028.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  } else {\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n      $sum\
    \ += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return '0b' . decbin($avg);\n\
    \  }\n}\necho rounded_avg(10, 20);\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeyizlh5q.php:31\n\
    Stack trace:\n#0 /tmp/tmpeyizlh5q.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpeyizlh5q.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    return \"0b\" . decbin(round(($n + $m) / 2));\n}\n\
    \necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpruems5jy.php:29\nStack trace:\n#0 /tmp/tmpruems5jy.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpruems5jy.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $val = round(($n + $m)\
    \ / 2);\n    if ($n > $m) return -1;\n    return \"0b\" . decbin($val);\n}\n\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpfuxq9mjy.php:29\nStack trace:\n#0 /tmp/tmpfuxq9mjy.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfuxq9mjy.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $avg = round(($n + $m) / 2);\n    return \"0b\" . decbin($avg);\n}\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbdcpbk9.php:23\n\
    Stack trace:\n#0 /tmp/tmpmbdcpbk9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmbdcpbk9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $sum = 0;\n  for ($i =\
    \ $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $result = round($sum / ($m -\
    \ $n + 1));\n  return $result > $m ? -1 : \"0b\" . decbin($result);\n}\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rvpmjxe.php:26\n\
    Stack trace:\n#0 /tmp/tmp6rvpmjxe.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6rvpmjxe.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  // Your code here\n}\n\
    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoluep4t_.php:20\n\
    Stack trace:\n#0 /tmp/tmpoluep4t_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoluep4t_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $total = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $total += $i;\n    }\n    $avg = round($total / ($m - $n + 1));\n   \
    \ return decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe85olu2h.php:27\n\
    Stack trace:\n#0 /tmp/tmpe85olu2h.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpe85olu2h.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $result = round(($n +\
    \ $m) / 2);\n  if ($n > $m) {\n    return -1;\n  }\n  return decbin($result);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6nlgjpd.php:23\n\
    Stack trace:\n#0 /tmp/tmp_6nlgjpd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_6nlgjpd.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ '0b' . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3q0irq_9.php:29\n\
    Stack trace:\n#0 /tmp/tmp3q0irq_9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3q0irq_9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $numbers = range($n, $m);\n    $sum = array_sum($numbers);\n    $avg\
    \ = round($sum/count($numbers));\n    return \"0b\".decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL; //=> \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL; //=> -1\necho\
    \ rounded_avg(10, 20) . PHP_EOL; //=> \"0b1111\"\necho rounded_avg(20, 33) . PHP_EOL;\
    \ //=> \"0b11010\"\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaj_owa4s.php:29\nStack trace:\n#0 /tmp/tmpaj_owa4s.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaj_owa4s.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpx29mjnbg.php:33\nStack trace:\n#0 /tmp/tmpx29mjnbg.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpx29mjnbg.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = $n;\n    for ($i = $n; $i < $m; $i++) {\n\
    \        $sum += ++$n;\n    }\n    $rounded = round($sum / ($m - $i + 1));\n \
    \   return '0b' . decbin($rounded);\n}\n\necho rounded_avg(1, 5);\necho PHP_EOL;\n\
    echo rounded_avg(7, 5);\necho PHP_EOL;\necho rounded_avg(10, 20);\necho PHP_EOL;\n\
    echo rounded_avg(20, 33);\necho PHP_EOL;\nfunction candidate(...$args) {\n   \
    \ return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b1111\n-1\n0b10100101\n0b101110011\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0rbc38tj.php:36\nStack trace:\n#0 /tmp/tmp0rbc38tj.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0rbc38tj.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    if ($n\
    \ > $m) return -1;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}\n\
    \necho rounded_avg(10, 20) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1111\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5v2polh1.php:28\n\
    Stack trace:\n#0 /tmp/tmp5v2polh1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5v2polh1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  // your code here\n}\n\
    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zg15bxi.php:20\n\
    Stack trace:\n#0 /tmp/tmp8zg15bxi.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8zg15bxi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"<br />\";\necho rounded_avg(7, 5) . \"<br />\"\
    ;\necho rounded_avg(10, 20) . \"<br />\";\necho rounded_avg(20, 33) . \"<br />\"\
    ;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11<br />-1<br />0b1111<br />0b11011<br />\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpi1goctvw.php:34\nStack trace:\n#0 /tmp/tmpi1goctvw.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi1goctvw.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $average = round(($n + $m) / 2);\n  return \"0b\" . decbin($average);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfacmfvyi.php:25\n\
    Stack trace:\n#0 /tmp/tmpfacmfvyi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfacmfvyi.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return \"0b\" .\
    \ decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9y1a3vr.php:26\n\
    Stack trace:\n#0 /tmp/tmpa9y1a3vr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa9y1a3vr.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  // Your code here\n}\n\
    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6spwzv_.php:20\n\
    Stack trace:\n#0 /tmp/tmpe6spwzv_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe6spwzv_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $result = ($n + $m) / 2;\n    return \"0b\" . decbin(round($result));\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_b6af54p.php:26\n\
    Stack trace:\n#0 /tmp/tmp_b6af54p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_b6af54p.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  \n}\n\necho rounded_avg(1,\
    \ 5); //=> \"0b11\"\necho rounded_avg(7, 5); //=> -1\necho rounded_avg(10, 20);\
    \ //=> \"0b1111\"\necho rounded_avg(20, 33); //=> \"0b11010\"\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm101b3gs.php:24\n\
    Stack trace:\n#0 /tmp/tmpm101b3gs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm101b3gs.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . base_convert($avg, 10, 2);\n}\nprint_r(rounded_avg(1, 5));\nprint_r(rounded_avg(7,\
    \ 5));\nprint_r(rounded_avg(10, 20));\nprint_r(rounded_avg(20, 33));\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11-10b11110b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5w145zgi.php:34\n\
    Stack trace:\n#0 /tmp/tmp5w145zgi.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5w145zgi.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $avg = round(($n + $m)\
    \ / 2);\n  return $n > $m ? -1 : '0b' . decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5), PHP_EOL;\necho rounded_avg(7, 5), PHP_EOL;\necho rounded_avg(10, 20), PHP_EOL;\n\
    echo rounded_avg(20, 33), PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_cyq9vva.php:27\nStack trace:\n#0 /tmp/tmp_cyq9vva.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_cyq9vva.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return \"0b\" . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpecj_f0qj.php:27\nStack trace:\n#0 /tmp/tmpecj_f0qj.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpecj_f0qj.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $result = round(($n +\
    \ $m) / 2);\n  if ($n > $m) return -1;\n  return base_convert($result, 10, 2);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6os_zn6d.php:22\n\
    Stack trace:\n#0 /tmp/tmp6os_zn6d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6os_zn6d.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $total = 0;\n    $count = 0;\n    while ($n <= $m)\
    \ {\n        $total += $n;\n        $count++;\n        $n++;\n    }\n    $avg\
    \ = $total / $count;\n    $rounded = round($avg);\n    return decbin($rounded);\n\
    }\necho rounded_avg(10, 20);\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59aok401.php:33\n\
    Stack trace:\n#0 /tmp/tmp59aok401.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp59aok401.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\t$result = $n>$m ? -1 :\
    \ decbin(round(($n+$m)/2));\n    return \"0b$result\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnir48i5.php:23\n\
    Stack trace:\n#0 /tmp/tmpfnir48i5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfnir48i5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $average = round($sum / ($m - $n + 1));\n   \
    \ return decbin($average);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36pf3vjt.php:27\n\
    Stack trace:\n#0 /tmp/tmp36pf3vjt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp36pf3vjt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t6ikg2z.php:20\n\
    Stack trace:\n#0 /tmp/tmp1t6ikg2z.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1t6ikg2z.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyc8arl6.php:20\n\
    Stack trace:\n#0 /tmp/tmpiyc8arl6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpiyc8arl6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $sum = 0;\n  if ($n <\
    \ $m) {\n    for ($i = $n; $i <= $m; $i++) {\n      $sum += $i;\n    }\n    $avg\
    \ = intval(round($sum / ($m - $n + 1)));\n    return \"0b\" . decbin($avg);\n\
    \  } else if ($n > $m) {\n    return -1;\n  }\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp76pmxchk.php:34\nStack trace:\n#0 /tmp/tmp76pmxchk.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp76pmxchk.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    return $n > $m ? -1 : decbin($avg);\n}\n\necho rounded_avg(1, 5)\
    \ . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\n\
    echo rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpan5aqqsx.php:25\nStack trace:\n#0 /tmp/tmpan5aqqsx.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpan5aqqsx.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $sum = floor($sum / ($m - $n + 1));\n  return decbin($sum);\n}\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11010\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpewxrwls0.php:35\nStack trace:\n#0 /tmp/tmpewxrwls0.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpewxrwls0.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = $sum / ($m - $n + 1);\n  $rounded_avg = round($avg);\n  return\
    \ \"0b\" . decbin($rounded_avg);\n}\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s26tcjc.php:30\n\
    Stack trace:\n#0 /tmp/tmp8s26tcjc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8s26tcjc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\t// Write your code here\n\
    \tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$total = 0;\n\tfor ($i = $n; $i <= $m;\
    \ $i++) {\n\t\t$total += $i;\n\t}\n\t$total /= $m - $n + 1;\n\t$total = round($total);\n\
    \t$return = decbin($total);\n\treturn \"0b\" . $return;\n}\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0u6z6ak.php:33\n\
    Stack trace:\n#0 /tmp/tmpv0u6z6ak.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpv0u6z6ak.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // iterate through all\
    \ numbers in range, round, convert to binary\n    $sum = 0;\n    if ($n <= $m)\
    \ {\n        for ($i = $n; $i <= $m; $i++) {\n            $sum += $i;\n      \
    \  }\n        $avg = round($sum / ($m - $n + 1));\n        $bin = decbin($avg);\n\
    \        return \"0b$bin\";\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps60j7tcp.php:32\n\
    Stack trace:\n#0 /tmp/tmps60j7tcp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmps60j7tcp.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\t$sum = 0;\n\tfor ($i =\
    \ $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\tif ($n > $m) return -1;\n\treturn\
    \ decbin(round($sum / ($m - $n + 1)));\n}\n\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrdxt4b_.php:25\n\
    Stack trace:\n#0 /tmp/tmplrdxt4b_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplrdxt4b_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) $sum += $i;\n  $avg = round($sum\
    \ / ($m - $n + 1));\n  return \"0b\".decbin($avg);\n}\n\nvar_dump(rounded_avg(1,\
    \ 5));\nvar_dump(rounded_avg(7, 5));\nvar_dump(rounded_avg(10, 20));\nvar_dump(rounded_avg(20,\
    \ 33));\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string(4) \"0b11\"\nint(-1)\nstring(6) \"0b1111\"\nstring(7) \"0b11011\"\
    \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2h4rium.php:30\n\
    Stack trace:\n#0 /tmp/tmpa2h4rium.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa2h4rium.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = $sum / ($m - $n + 1);\n    $rounded = round($avg);\n    return\
    \ '0b' . decbin($rounded);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_htn8xo.php:29\n\
    Stack trace:\n#0 /tmp/tmpg_htn8xo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg_htn8xo.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n>$m) return -1;\n\
    \  $result = round(($n+$m)/2);\n  return '0b'.decbin($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperz2q80e.php:24\n\
    Stack trace:\n#0 /tmp/tmperz2q80e.php(36): test()\n#1 {main}\n  thrown in /tmp/tmperz2q80e.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafntjfgn.php:21\n\
    Stack trace:\n#0 /tmp/tmpafntjfgn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpafntjfgn.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = intval(round($sum / ($m - $n + 1)));\n  return \"0b\".decbin($avg);\n}\necho\
    \ rounded_avg(1, 5).\"\\n\";\necho rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10,\
    \ 20).\"\\n\";\necho rounded_avg(20, 33).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8gpnp6od.php:31\nStack trace:\n#0 /tmp/tmp8gpnp6od.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8gpnp6od.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = (int) (($n + $m) / 2);\n    return decbin($avg);\n\
    }\necho rounded_avg(1, 5);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7ogbyt_.php:24\n\
    Stack trace:\n#0 /tmp/tmpn7ogbyt_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpn7ogbyt_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $s = 0;\n  for ($i = $n;\
    \ $i <= $m; $i++) {\n    $s += $i;\n  }\n  if ($n > $m) {\n    return -1;\n  }\n\
    \  else {\n    return decbin(round($s / ($m - $n + 1)));\n  }\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpgzywkdvu.php:32\nStack trace:\n#0 /tmp/tmpgzywkdvu.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgzywkdvu.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n\
    \    return '0b' . decbin($avg);\n}\necho rounded_avg(20, 33);\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfsbvvpy.php:31\n\
    Stack trace:\n#0 /tmp/tmpkfsbvvpy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkfsbvvpy.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $average = round((($n + $m) / 2));\n  return decbin($average);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpbfbggdnt.php:27\nStack trace:\n#0 /tmp/tmpbfbggdnt.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbfbggdnt.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $max = max($n, $m);\n\
    \    $min = min($n, $m);\n    if ($max === $min) {\n        return decbin($max);\n\
    \    }\n    $avg = ($max + $min) / 2;\n    $avg = $avg > floor($avg) ? round($avg)\
    \ : floor($avg);\n    return $max < $min ? -1 : \"0b\" . decbin($avg);\n}\necho\
    \ rounded_avg(20, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(1, 5) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "10100\n0b11011\n0b1111\n0b110\n0b11\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgdsyboz6.php:33\nStack trace:\n#0 /tmp/tmpgdsyboz6.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgdsyboz6.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $result = array_sum(range($n, $m)) / ($m - $n + 1);\n\
    \    $result = round($result);\n    return decbin($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpusroq9dr.php:25\n\
    Stack trace:\n#0 /tmp/tmpusroq9dr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpusroq9dr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $num_sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $num_sum += $i;\n    }\n    $rounded_avg = round($num_sum / ($m -\
    \ $n + 1));\n    return \"0b\" . decbin($rounded_avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34j3logp.php:30\n\
    Stack trace:\n#0 /tmp/tmp34j3logp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp34j3logp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $avg = round(($n + $m) / 2);\n    return \"0b\" . decbin($avg);\n}\n\
    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5p5wi296.php:24\n\
    Stack trace:\n#0 /tmp/tmp5p5wi296.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5p5wi296.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n   if ($n > $m) {\n    \
    \  return -1;\n   }\n   $sum = $n;\n   for ($i = $n; $i < $m; $i++) {\n      $sum\
    \ += $i + 1;\n   }\n   $avg = round($sum / ($m - $n + 1));\n   return \"0b\" .\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnsu88lr_.php:29\n\
    Stack trace:\n#0 /tmp/tmpnsu88lr_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnsu88lr_.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL; // \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL;\
    \ // -1\necho rounded_avg(10, 20) . PHP_EOL; // \"0b1111\"\necho rounded_avg(20,\
    \ 33) . PHP_EOL; // \"0b11010\"\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp39dc8zqa.php:34\nStack trace:\n#0 /tmp/tmp39dc8zqa.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp39dc8zqa.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  } else {\n    return decbin(round(($n + $m) / 2));\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphb8yh9a_.php:24\n\
    Stack trace:\n#0 /tmp/tmphb8yh9a_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphb8yh9a_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $average = round(($n\
    \ + $m) / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return decbin($average);\n\
    }\n\necho(rounded_avg(1, 5) . \"\\n\");\necho(rounded_avg(7, 5) . \"\\n\");\n\
    echo(rounded_avg(10, 20) . \"\\n\");\necho(rounded_avg(20, 33) . \"\\n\");\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpo_jbnqcc.php:28\nStack trace:\n#0 /tmp/tmpo_jbnqcc.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpo_jbnqcc.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return '0b' . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpzio4_aaa.php:30\nStack trace:\n#0 /tmp/tmpzio4_aaa.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzio4_aaa.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  return decbin(round(($n + $m) / 2));\n}\n\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo80m0hnf.php:21\n\
    Stack trace:\n#0 /tmp/tmpo80m0hnf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo80m0hnf.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    if ($n\
    \ > $m) {\n        return -1;\n    }\n    for ($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhk8etmx.php:29\n\
    Stack trace:\n#0 /tmp/tmpyhk8etmx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyhk8etmx.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$count = 0;\n\t$result = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\
    \t\t$result += $i;\n\t\t$count++;\n\t}\n\t$average = round($result / $count);\n\
    \treturn decbin($average);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpyr6pjcpq.php:33\nStack trace:\n#0 /tmp/tmpyr6pjcpq.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyr6pjcpq.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ '0b' . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbt12kvfk.php:29\n\
    Stack trace:\n#0 /tmp/tmpbt12kvfk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbt12kvfk.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return \"0b\" .\
    \ decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazwv0fit.php:26\n\
    Stack trace:\n#0 /tmp/tmpazwv0fit.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpazwv0fit.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbn9wyk0.php:30\n\
    Stack trace:\n#0 /tmp/tmpkbn9wyk0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkbn9wyk0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $binary = decbin(round(($n + $m) / 2));\n    return \"0b$binary\";\n\
    }\necho rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqnoniix.php:24\n\
    Stack trace:\n#0 /tmp/tmpiqnoniix.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpiqnoniix.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = $sum / ($m - $n + 1);\n  $int = floor($avg);\n  $bin = decbin($int);\n\
    \  return \"0b$bin\";\n}\n\nprint rounded_avg(1, 5) . \"\\n\";\nprint rounded_avg(7,\
    \ 5) . \"\\n\";\nprint rounded_avg(10, 20) . \"\\n\";\nprint rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11010\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpl5lyjc_2.php:38\nStack trace:\n#0 /tmp/tmpl5lyjc_2.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpl5lyjc_2.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $avg = round(($n + $m) / 2);\n    return \"0b\" . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\necho rounded_avg(2, 3)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n0b11\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpaickhins.php:28\nStack trace:\n#0 /tmp/tmpaickhins.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaickhins.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = ($n + $m) / 2;\n    $rounded = round($avg);\n\
    \    return decbin($rounded);\n}\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xyynxnb.php:25\n\
    Stack trace:\n#0 /tmp/tmp3xyynxnb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3xyynxnb.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $avg = round((($n + $m) / 2));\n    return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\n\
    echo rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_cxld1m9.php:30\nStack trace:\n#0 /tmp/tmp_cxld1m9.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_cxld1m9.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $res = round(($n + $m) / 2);\n    return decbin($res);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ki7owcj.php:23\n\
    Stack trace:\n#0 /tmp/tmp4ki7owcj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4ki7owcj.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = floor(($n + $m) / 2);\n  return decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL; // \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL; // -1\necho rounded_avg(10,\
    \ 20) . PHP_EOL; // \"0b1111\"\necho rounded_avg(20, 33) . PHP_EOL; // \"0b11010\"\
    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11010\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp7r4tf8kd.php:25\nStack trace:\n#0 /tmp/tmp7r4tf8kd.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7r4tf8kd.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $total = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $total += $i;\n    }\n    $average = $total / ($m - $n + 1);\n    $rounded\
    \ = round($average);\n    return \"0b\" . decbin($rounded);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_p1z86n.php:30\n\
    Stack trace:\n#0 /tmp/tmpw_p1z86n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpw_p1z86n.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) return -1;\n\
    \t$avg = round(($n + $m) / 2);\n\treturn \"0b\". decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpti_8iy2p.php:27\nStack trace:\n#0 /tmp/tmpti_8iy2p.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpti_8iy2p.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return base_convert($avg,\
    \ 10, 2);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lgg4dt6.php:24\n\
    Stack trace:\n#0 /tmp/tmp1lgg4dt6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1lgg4dt6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = array_sum(range($n,\
    \ $m));\n    $avg = $sum / ($m - $n + 1);\n    $rounded = round($avg);\n    return\
    \ $n > $m ? -1 : decbin($rounded);\n}\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2pg3zvj.php:22\n\
    Stack trace:\n#0 /tmp/tmph2pg3zvj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph2pg3zvj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $sum = 0;\n  for ($i =\
    \ $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = (int)round($sum / ($m\
    \ - $n + 1));\n  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"<br>\"\
    ;\necho rounded_avg(7, 5) . \"<br>\";\necho rounded_avg(10, 20) . \"<br>\";\n\
    echo rounded_avg(20, 33) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11<br>0<br>1111<br>11011<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpurt2nq9b.php:29\nStack trace:\n#0 /tmp/tmpurt2nq9b.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpurt2nq9b.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    return decbin(round(($n + $m) / 2));\n}\n\n$examples = [\n    [1, 5],\
    \ // \"0b11\"\n    [7, 5], // -1\n    [10, 20], // \"0b1111\"\n    [20, 33], //\
    \ \"0b11010\"\n];\n\nforeach ($examples as $ex) {\n    echo rounded_avg($ex[0],\
    \ $ex[1]) . \"\\n\";\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpukciq8v2.php:31\nStack trace:\n#0 /tmp/tmpukciq8v2.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpukciq8v2.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) return -1;\n\
    \t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) $sum += $i;\n\t$avg = round($sum\
    \ / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp1d7bppqw.php:31\nStack trace:\n#0 /tmp/tmp1d7bppqw.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1d7bppqw.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    // Enter code here\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnhn0lvj.php:20\n\
    Stack trace:\n#0 /tmp/tmplnhn0lvj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplnhn0lvj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = $sum / ($m - $n + 1);\n  $avg = round($avg);\n  return \"0b\" .\
    \ decbin($avg);\n}\n\necho rounded_avg(7, 5);\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0d_6_r7.php:32\n\
    Stack trace:\n#0 /tmp/tmpx0d_6_r7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpx0d_6_r7.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++) {\n \
    \       $sum += $i;\n        $count++;\n    }\n    $avg = (int) ($sum / $count);\n\
    \    return \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL; // =>\
    \ \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL; // => -1\necho rounded_avg(10, 20)\
    \ . PHP_EOL; // => \"0b1111\"\necho rounded_avg(20, 33) . PHP_EOL; // => \"0b11010\"\
    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11010\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpz28sovy8.php:35\nStack trace:\n#0 /tmp/tmpz28sovy8.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpz28sovy8.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    if ($n\
    \ > $m) {\n        return -1;\n    }\n    for ($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n\
    \    return decbin($sum);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbf6p2ll.php:28\n\
    Stack trace:\n#0 /tmp/tmpkbf6p2ll.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkbf6p2ll.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $avg = floor(($n + $m)\
    \ / 2);\n  return $n > $m ? -1 : \"0b\" . decbin($avg);\n}\n\necho rounded_avg(10,\
    \ 20) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b1111\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_q56gfx.php:26\n\
    Stack trace:\n#0 /tmp/tmp0_q56gfx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0_q56gfx.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $value = floor(($n + $m) / 2);\n  return decbin($value);\n}\n\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11010\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpg6ybgcuu.php:29\nStack trace:\n#0 /tmp/tmpg6ybgcuu.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg6ybgcuu.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = floor(($n + $m) / 2);\n  return base_convert($avg, 10, 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3ta_p1a.php:22\n\
    Stack trace:\n#0 /tmp/tmpg3ta_p1a.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpg3ta_p1a.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    $count\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    $avg = $sum / $count;\n    $rounded = round($avg);\n    return base_convert($rounded,\
    \ 10, 2);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyunw28wx.php:28\n\
    Stack trace:\n#0 /tmp/tmpyunw28wx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyunw28wx.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $total = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $total += $i;\n    }\n    $average = round($total / ($m - $n + 1));\n\
    \    return \"0b\" . decbin($average);\n}\n\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5azx0k87.php:30\n\
    Stack trace:\n#0 /tmp/tmp5azx0k87.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5azx0k87.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $a = ceil(($n + $m) / 2);\n  return '0b' . decbin($a);\n}\n\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3sqzn3c.php:25\n\
    Stack trace:\n#0 /tmp/tmpu3sqzn3c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu3sqzn3c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $round_avg = ceil(($n\
    \ + $m) / 2);\n  if ($n > $m) {\n    return -1;\n  }\n  else {\n    return '0b'\
    \ . decbin($round_avg);\n  }\n}\necho rounded_avg(10, 20);\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2lkop6ok.php:28\n\
    Stack trace:\n#0 /tmp/tmp2lkop6ok.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2lkop6ok.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppejvz633.php:29\n\
    Stack trace:\n#0 /tmp/tmppejvz633.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppejvz633.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $r = round(($n + $m) / 2);\n    return decbin($r);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5uuogjh.php:22\n\
    Stack trace:\n#0 /tmp/tmpy5uuogjh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy5uuogjh.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  } else {\n    return '0b' . decbin(round(($n + $m) / 2));\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgy6gjhjr.php:25\n\
    Stack trace:\n#0 /tmp/tmpgy6gjhjr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgy6gjhjr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzg3l8ik.php:25\n\
    Stack trace:\n#0 /tmp/tmpmzg3l8ik.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmzg3l8ik.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\t$range = range($n, $m);\n\
    \t$avg = intval(array_sum($range) / count($range));\n\treturn decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbkq3zz_a.php:22\n\
    Stack trace:\n#0 /tmp/tmpbkq3zz_a.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbkq3zz_a.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\t$avg = round(($n + $m)\
    \ / 2);\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\treturn decbin($avg);\n}\necho\
    \ rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpmju3h9n2.php:27\nStack trace:\n#0 /tmp/tmpmju3h9n2.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpmju3h9n2.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return decbin($avg);\n}\necho rounded_avg(7,\
    \ 5);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkxfph83.php:22\n\
    Stack trace:\n#0 /tmp/tmpwkxfph83.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwkxfph83.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $avg = round(($n + $m) / 2);\n  return '0b' . decbin($avg);\n}\n\
    echo rounded_avg(10, 20) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b1111\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1e3qv3r8.php:26\n\
    Stack trace:\n#0 /tmp/tmp1e3qv3r8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1e3qv3r8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmprg1c222o.php:31\nStack trace:\n#0 /tmp/tmprg1c222o.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmprg1c222o.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $count = 1;\n  $average = ($n + $m) / 2;\n  $result = floor($average);\n  return\
    \ '0b' . decbin($result);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11010\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqqdxmz65.php:32\nStack trace:\n#0 /tmp/tmpqqdxmz65.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqqdxmz65.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpx_j0f8_0.php:28\nStack trace:\n#0 /tmp/tmpx_j0f8_0.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpx_j0f8_0.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$count = 0;\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t\
    $sum += $i;\n\t\t$count++;\n\t}\n\treturn decbin(round($sum / $count));\n}\necho\
    \ rounded_avg(1, 5);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnbl47oy.php:29\n\
    Stack trace:\n#0 /tmp/tmpxnbl47oy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxnbl47oy.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3pc0ltg.php:26\n\
    Stack trace:\n#0 /tmp/tmpm3pc0ltg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm3pc0ltg.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $sum = round($sum / ($m - $n + 1));\n    return decbin($sum);\n}\n\
    print_r(rounded_avg(1, 5));\nprint_r(rounded_avg(10, 20));\nprint_r(rounded_avg(20,\
    \ 33));\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiw5zp7bq.php:28\n\
    Stack trace:\n#0 /tmp/tmpiw5zp7bq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpiw5zp7bq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = round(($n + $m)\
    \ / 2);\n    if ($n > $m) return -1;\n    return base_convert($avg, 10, 2);\n\
    }\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\n\
    echo rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn6056s0.php:25\n\
    Stack trace:\n#0 /tmp/tmpdn6056s0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdn6056s0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $average = round($sum / ($m - $n + 1));\n   \
    \ return decbin($average);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpgq6pfs7h.php:32\nStack trace:\n#0 /tmp/tmpgq6pfs7h.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgq6pfs7h.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $binary = decbin(round($sum / ($m - $n + 1)));\n\
    \    return \"0b\" . $binary;\n}\necho rounded_avg(20,33);\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9lin5dcg.php:30\n\
    Stack trace:\n#0 /tmp/tmp9lin5dcg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9lin5dcg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  return decbin(round(($n + $m) / 2));\n}\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6nf19rj2.php:20\n\
    Stack trace:\n#0 /tmp/tmp6nf19rj2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6nf19rj2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $count = 0;\n  $sum =\
    \ 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n  }\n\
    \  $sum = round($sum / $count);\n  if ($sum >= 0) {\n    return decbin($sum);\n\
    \  } else {\n    return -1;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwmefotk.php:31\n\
    Stack trace:\n#0 /tmp/tmpnwmefotk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnwmefotk.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $nums = range($n, $m);\n  $avg = round(array_sum($nums) / count($nums));\n\
    \  return \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplj07cq2s.php:26\n\
    Stack trace:\n#0 /tmp/tmplj07cq2s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplj07cq2s.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $avg = $n > $m ? -1\
    \ : $n + (round(($m - $n) / 2) + 1);\n    return '0b' . strval(decbin($avg));\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpne1yh6s0.php:20\n\
    Stack trace:\n#0 /tmp/tmpne1yh6s0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpne1yh6s0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $arr = [];\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $arr[] = $i;\n\
    \    $sum += $i;\n  }\n  $avg = $sum / count($arr);\n  return '0b' . decbin(round($avg));\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4l7q3xc4.php:29\n\
    Stack trace:\n#0 /tmp/tmp4l7q3xc4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4l7q3xc4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $diff = $m - $n;\n  $avg\
    \ = $n + floor($diff / 2);\n  return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljexflqj.php:22\n\
    Stack trace:\n#0 /tmp/tmpljexflqj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpljexflqj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $rounded_avg = round($sum / ($m - $n + 1));\n\
    \    return decbin($rounded_avg);\n}\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkw2mvkp.php:28\n\
    Stack trace:\n#0 /tmp/tmpjkw2mvkp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjkw2mvkp.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $sum = 0;\n  if ($n >\
    \ $m) {\n    return -1;\n  } else {\n    for ($i = $n; $i <= $m; $i++) {\n   \
    \   $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n\
    \  }\n}\necho rounded_avg(10, 20);\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d8h9sd9.php:29\n\
    Stack trace:\n#0 /tmp/tmp5d8h9sd9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5d8h9sd9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception

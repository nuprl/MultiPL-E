name: HumanEval_20_find_closest_elements
language: php
results:
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $length = count($numbers);\n  if ($length < 2) {\n    echo \"there must be\
    \ at least two numbers for comparison.\";\n    return;\n  }\n  $min_distance =\
    \ abs($numbers[0] - $numbers[1]);\n  $min_elements = [$numbers[0], $numbers[1]];\n\
    \  for ($i = 0; $i < $length; $i++) {\n    for ($j = $i + 1; $j < $length; $j++)\
    \ {\n      $distance = abs($numbers[$i] - $numbers[$j]);\n      if ($distance\
    \ < $min_distance) {\n        $min_distance = $distance;\n        $min_elements\
    \ = [$numbers[$i], $numbers[$j]];\n      }\n    }\n  }\n  echo \"(\" . $min_elements[0]\
    \ . \", \" . $min_elements[1] . \")\";\n}\n\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(3.9, 4)\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9waylvq.php:33\n\
    Stack trace:\n#0 /tmp/tmpq9waylvq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq9waylvq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  // Your code here\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnpr94vqj.php:16\n\
    Stack trace:\n#0 /tmp/tmpnpr94vqj.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpnpr94vqj.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_diff = null;\n    $closest_pair = null;\n    $num_count = count($numbers);\n\
    \    for ($i = 0; $i < $num_count - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $num_count; $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($min_diff === null || $diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $closest_pair = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $closest_pair;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpic8e9yj1.php:30\n\
    Stack trace:\n#0 /tmp/tmpic8e9yj1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpic8e9yj1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = array();\n    $sorted_numbers = $numbers;\n    sort($sorted_numbers);\n\
    \    $min_distance = $sorted_numbers[1] - $sorted_numbers[0];\n    $closest[]\
    \ = $sorted_numbers[0];\n    $closest[] = $sorted_numbers[1];\n    for ($i = 1;\
    \ $i < count($sorted_numbers) - 1; $i++) {\n        $distance = $sorted_numbers[$i\
    \ + 1] - $sorted_numbers[$i];\n        if ($distance < $min_distance) {\n    \
    \        $min_distance = $distance;\n            $closest[0] = $sorted_numbers[$i];\n\
    \            $closest[1] = $sorted_numbers[$i + 1];\n        }\n    }\n    return\
    \ $closest;\n}\n\n$result = find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]);\n\
    var_dump($result);\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(2)\n  [1]=>\n  float(2.2)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$min_diff = $numbers[1] - $numbers[0];\n\t$min_pairs = [$numbers[0], $numbers[1]];\n\
    \tfor ($i = 0; $i < count($numbers) - 1; $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($diff <\
    \ $min_diff) {\n\t\t\t\t$min_diff = $diff;\n\t\t\t\t$min_pairs = [$numbers[$i],\
    \ $numbers[$j]];\n\t\t\t}\n\t\t}\n\t}\n\tsort($min_pairs);\n\treturn $min_pairs;\n\
    }\n\n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$num_count = count($numbers);\n\t$closest_elements = array();\n\tfor ($i = 0;\
    \ $i < $num_count - 1; $i++) {\n\t\tfor ($j = $i + 1; $j < $num_count; $j++) {\n\
    \t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\t\t\t$closest_elements[$diff]\
    \ = array($numbers[$i], $numbers[$j]);\n\t\t}\n\t}\n\tksort($closest_elements);\n\
    \t$min_diff = array_shift(array_keys($closest_elements));\n\treturn $closest_elements[$min_diff];\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9gkss6n.php:28\n\
    Stack trace:\n#0 /tmp/tmpa9gkss6n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa9gkss6n.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallest = null;\n    $largest = null;\n    $closest = null;\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($closest === null || $diff < $closest) {\n                $closest = $diff;\n\
    \                $smallest = $numbers[$i];\n                $largest = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $smallest <= $largest ? array($smallest,\
    \ $largest) : array($largest, $smallest);\n}\n\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closestPair = array($numbers[0], $numbers[1]);\n    $closestDistance = abs($numbers[0]\
    \ - $numbers[1]);\n    $size = count($numbers);\n    for ($i = 0; $i < $size;\
    \ $i++) {\n        for ($j = $i + 1; $j < $size; $j++) {\n            $currentDistance\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($currentDistance < $closestDistance)\
    \ {\n                $closestDistance = $currentDistance;\n                $closestPair\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closestPair;\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzd17ake.php:30\n\
    Stack trace:\n#0 /tmp/tmpuzd17ake.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuzd17ake.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_num1 = $numbers[0];\n    $closest_num2 = $numbers[1];\n    $closest_diff\
    \ = abs($closest_num1 - $closest_num2);\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest_diff)\
    \ {\n                $closest_num1 = $numbers[$i];\n                $closest_num2\
    \ = $numbers[$j];\n                $closest_diff = $diff;\n            }\n   \
    \     }\n    }\n    return \"($closest_num1, $closest_num2)\";\n}\n\nassert_options(ASSERT_BAIL,\
    \ 1);\nassert(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) == \"(2.0,\
    \ 2.2)\");\nassert(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]) == \"\
    (2.0, 2.0)\");\necho \"Tests passed\";\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert(find_closest_elements([1, 2, 3, 4, 5, 2.2])\
    \ == '(2.0, 2.2)') failed in /tmp/tmpqxvg9ui2.php on line 26\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $num_length = count($numbers);\n  if ($num_length < 2) {\n    throw new Exception(\"\
    Number list must have at least two items\");\n  }\n  $closest_diff = $numbers[0]\
    \ - $numbers[1];\n  $first_number = $numbers[0];\n  $second_number = $numbers[1];\n\
    \  for ($i = 0; $i < $num_length; $i++) {\n    for ($j = $i + 1; $j < $num_length;\
    \ $j++) {\n      $diff = $numbers[$i] - $numbers[$j];\n      if (abs($diff) <\
    \ abs($closest_diff)) {\n        $closest_diff = $diff;\n        $first_number\
    \ = $numbers[$i];\n        $second_number = $numbers[$j];\n      }\n    }\n  }\n\
    \  return array($first_number, $second_number);\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gof6mi3.php:35\n\
    Stack trace:\n#0 /tmp/tmp9gof6mi3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9gof6mi3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $i = 0;\n    $difference = 100;\n    $n = count($numbers);\n    while ($i\
    \ < $n - 1) {\n        $d = abs($numbers[$i] - $numbers[$i + 1]);\n        if\
    \ ($d < $difference) {\n            $difference = $d;\n            $result = array($numbers[$i],\
    \ $numbers[$i + 1]);\n        }\n        $i++;\n    }\n    return $result;\n}\n\
    echo '<br>', \">>>>\", find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]);\n\
    echo '<br>', \">>>>\", find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]);\n\
    \nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "<br>>>>>Array<br>>>>>Array\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8asxzemj.php:31\nStack trace:\n#0 /tmp/tmp8asxzemj.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8asxzemj.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $numberA = null;\n    $numberB = null;\n    $smallestDifference = PHP_INT_MAX;\n\
    \    foreach ($numbers as $number) {\n        if ($numberA !== null) {\n     \
    \       $difference = abs($number - $numberA);\n            if ($difference <\
    \ $smallestDifference) {\n                $smallestDifference = $difference;\n\
    \                $numberB = $number;\n            }\n        }\n        $numberA\
    \ = $number;\n    }\n    return array($numberA, $numberB);\n}\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wva4hc2.php:29\n\
    Stack trace:\n#0 /tmp/tmp5wva4hc2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5wva4hc2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_distance = PHP_INT_MAX;\n    $pair = array();\n    for ($i = 0; $i <\
    \ count($numbers) - 1; $i++) {\n        $distance = abs($numbers[$i] - $numbers[$i\
    \ + 1]);\n        if ($distance < $min_distance) {\n            $min_distance\
    \ = $distance;\n            $pair = array($numbers[$i], $numbers[$i + 1]);\n \
    \       }\n    }\n    return $pair;\n}\n\nfunction candidate(...$args) {\n   \
    \ return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqjlbod8.php:27\n\
    Stack trace:\n#0 /tmp/tmpxqjlbod8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxqjlbod8.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $last_number = $numbers[0];\n  $min_gap = abs($numbers[1] - $numbers[0]);\n\
    \  $min_first = $numbers[0];\n  $min_second = $numbers[1];\n  for ($i = 1; $i\
    \ < count($numbers); $i++) {\n    $gap = abs($numbers[$i] - $last_number);\n \
    \   if ($gap < $min_gap) {\n      $min_gap = $gap;\n      $min_first = $last_number;\n\
    \      $min_second = $numbers[$i];\n    }\n    $last_number = $numbers[$i];\n\
    \  }\n  return array($min_first, $min_second);\n}\necho \"find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\\n\";\nvar_dump(find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2]));\necho \"find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\\\
    n\";\nvar_dump(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]));\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\narray(2) {\n  [0]=>\n\
    \  float(1)\n  [1]=>\n  float(2)\n}\nfind_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0])\narray(2) {\n  [0]=>\n  float(1)\n  [1]=>\n  float(2)\n}\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp7vtgavoh.php:34\nStack trace:\n\
    #0 /tmp/tmp7vtgavoh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7vtgavoh.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $differences = [];\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n\
    \        $differences[] = $numbers[$i + 1] - $numbers[$i];\n    }\n    $minDifference\
    \ = min($differences);\n    $result = [];\n    for ($i = 0; $i < count($differences);\
    \ $i++) {\n        if ($differences[$i] == $minDifference) {\n            $result[]\
    \ = $numbers[$i];\n            $result[] = $numbers[$i + 1];\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1yogilw.php:29\n\
    Stack trace:\n#0 /tmp/tmpt1yogilw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpt1yogilw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min = $numbers[0];\n    $max = $numbers[0];\n    $diff = 0;\n    $index\
    \ = 0;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i +\
    \ 1; $j < count($numbers); $j++) {\n            if ($numbers[$i] > $numbers[$j])\
    \ {\n                $temp = $numbers[$i];\n                $numbers[$i] = $numbers[$j];\n\
    \                $numbers[$j] = $temp;\n            }\n        }\n    }\n    for\
    \ ($i = 0; $i < count($numbers) - 1; $i++) {\n        if ($numbers[$i + 1] - $numbers[$i]\
    \ < $diff || $diff == 0) {\n            $min = $numbers[$i];\n            $max\
    \ = $numbers[$i + 1];\n            $diff = $numbers[$i + 1] - $numbers[$i];\n\
    \            $index = $i;\n        }\n    }\n    return array($min, $max);\n}\n\
    \n$a = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\necho \"<pre>\";\nprint_r(find_closest_elements($a));\n\
    echo \"</pre>\";\n$a = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\necho \"<pre>\";\n\
    print_r(find_closest_elements($a));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre><pre>Array\n(\n \
    \   [0] => 2\n    [1] => 3\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpmcb80n9_.php:49\nStack trace:\n#0 /tmp/tmpmcb80n9_.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpmcb80n9_.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $closest_number = 999;\n  for ($i = 0; $i < count($numbers); $i++) {\n    for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n      $current_number = abs($numbers[$i]\
    \ - $numbers[$j]);\n      if ($current_number < $closest_number) {\n        $closest_number\
    \ = $current_number;\n        $closest_elements = array($numbers[$i], $numbers[$j]);\n\
    \      }\n    }\n  }\n  return $closest_elements;\n}\n\nvar_dump(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nvar_dump(find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(2)\n  [1]=>\n  float(2.2)\n}\narray(2) {\n\
    \  [0]=>\n  float(2)\n  [1]=>\n  float(2)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpqihkxgfq.php:30\nStack trace:\n#0 /tmp/tmpqihkxgfq.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqihkxgfq.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $num_count = count($numbers);\n  $distance = abs($numbers[1] - $numbers[0]);\n\
    \  $first_num = $numbers[0];\n  $second_num = $numbers[1];\n  for ($i = 0; $i\
    \ < $num_count; $i++) {\n    for ($j = $i + 1; $j < $num_count; $j++) {\n    \
    \  if (abs($numbers[$i] - $numbers[$j]) < $distance) {\n        $distance = abs($numbers[$i]\
    \ - $numbers[$j]);\n        $first_num = $numbers[$i];\n        $second_num =\
    \ $numbers[$j];\n      }\n    }\n  }\n  return [$first_num, $second_num];\n}\n\
    \necho json_encode(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "[2,2.2]\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebv6g73p.php:32\n\
    Stack trace:\n#0 /tmp/tmpebv6g73p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpebv6g73p.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  sort($numbers);\n  $min_diff = null;\n  $closest_elements = array();\n  for\
    \ ($i = 0; $i < count($numbers) - 1; $i++) {\n    $diff = abs($numbers[$i + 1]\
    \ - $numbers[$i]);\n    if ($min_diff === null || $diff < $min_diff) {\n     \
    \ $min_diff = $diff;\n      $closest_elements = array($numbers[$i], $numbers[$i\
    \ + 1]);\n    }\n  }\n  return $closest_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        for ($j = $i + 1;\
    \ $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff <= 2) {\n                return \"$numbers[$i], $numbers[$j]\"\
    ;\n            }\n        }\n    }\n}\n\nprint find_closest_elements([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2]);\nprint find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]);\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1, 21, 2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d7unf97.php:26\n\
    Stack trace:\n#0 /tmp/tmp8d7unf97.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8d7unf97.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $count = count($numbers);\n    $distance = 0;\n    $closest_one = 0;\n  \
    \  $closest_two = 0;\n    $closest_distance = max($numbers) - min($numbers);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        for ($j = 0; $j < $count; $j++)\
    \ {\n            if ($i != $j) {\n                $distance = abs($numbers[$i]\
    \ - $numbers[$j]);\n                if ($distance < $closest_distance) {\n   \
    \                 $closest_distance = $distance;\n                    $closest_one\
    \ = $numbers[$i];\n                    $closest_two = $numbers[$j];\n        \
    \        }\n            }\n        }\n    }\n    return array($closest_one, $closest_two);\n\
    }\necho '<pre>';\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\n\
    echo '</pre>';\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp_ihlb3wt.php:38\nStack trace:\n#0 /tmp/tmp_ihlb3wt.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_ihlb3wt.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $l = count($numbers);\n  for ($i = 0; $i < $l; $i++) {\n    for ($j = $i +\
    \ 1; $j < $l; $j++) {\n      $diff = abs($numbers[$i] - $numbers[$j]);\n     \
    \ if ($diff < 0.001) {\n        return [$numbers[$i], $numbers[$j]];\n      }\n\
    \    }\n  }\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rl8nw65.php:25\n\
    Stack trace:\n#0 /tmp/tmp2rl8nw65.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2rl8nw65.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_pair = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    return $min_pair;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqxzfu0y.php:29\n\
    Stack trace:\n#0 /tmp/tmpmqxzfu0y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmqxzfu0y.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_pair = [$numbers[0], $numbers[1]];\n    $closest_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    foreach (range(0, count($numbers) - 2) as $i) {\n     \
    \   foreach (range($i + 1, count($numbers) - 1) as $j) {\n            $diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest_diff) {\n\
    \                $closest_pair = [$numbers[$i], $numbers[$j]];\n             \
    \   $closest_diff = $diff;\n            }\n        }\n    }\n    sort($closest_pair);\n\
    \    return $closest_pair;\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  // your code here\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1cz99fk.php:16\n\
    Stack trace:\n#0 /tmp/tmpu1cz99fk.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpu1cz99fk.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    // Shortest distance between any two numbers (must be at least 1.0)\n   \
    \ $shortest_distance = 1.0;\n    $shortest_two_elements = array();\n    // Loop\
    \ through all numbers and find the first pair with the shortest distance.\n  \
    \  // We don't care if there are multiple pairs with the same shortest distance\n\
    \    // as we'll return the first pair found.\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $distance = abs($numbers[$i] - $numbers[$j]);\n            if ($distance <\
    \ $shortest_distance) {\n                $shortest_distance = $distance;\n   \
    \             $shortest_two_elements = array($numbers[$i], $numbers[$j]);\n  \
    \          }\n        }\n    }\n    return $shortest_two_elements;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfsp86i6.php:33\n\
    Stack trace:\n#0 /tmp/tmpyfsp86i6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyfsp86i6.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $number_count = count($numbers);\n    if ($number_count < 2) {\n        return\
    \ null;\n    }\n\n    $smallest_difference = PHP_INT_MAX;\n    $smallest_index\
    \ = 0;\n    $second_smallest_index = 0;\n    for ($index = 0; $index < $number_count\
    \ - 1; $index++) {\n        $difference = abs($numbers[$index] - $numbers[$index\
    \ + 1]);\n        if ($difference < $smallest_difference) {\n            $smallest_difference\
    \ = $difference;\n            $smallest_index = $index;\n            $second_smallest_index\
    \ = $index + 1;\n        }\n    }\n\n    return array($numbers[$smallest_index],\
    \ $numbers[$second_smallest_index]);\n}\n\nfunction candidate(...$args) {\n  \
    \  return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_mnke2h.php:35\n\
    Stack trace:\n#0 /tmp/tmpn_mnke2h.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn_mnke2h.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \tif (empty($numbers)) {\n\t\treturn array();\n\t}\n\n\t$min_delta = 100;\n\t\
    $best_one = null;\n\t$best_two = null;\n\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++) {\n\t\t\t$delta =\
    \ abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($delta < $min_delta) {\n\t\t\t\t\
    $min_delta = $delta;\n\t\t\t\t$best_one = $numbers[$i];\n\t\t\t\t$best_two = $numbers[$j];\n\
    \t\t\t}\n\t\t}\n\t}\n\n\treturn array($best_one, $best_two);\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5faiwkya.php:37\n\
    Stack trace:\n#0 /tmp/tmp5faiwkya.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5faiwkya.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallest_distance = abs($numbers[0] - $numbers[1]);\n    $return_value =\
    \ [$numbers[0], $numbers[1]];\n    foreach ($numbers as $i => $number) {\n   \
    \     if (!isset($numbers[$i + 1])) {\n            break;\n        }\n       \
    \ $distance = abs($number - $numbers[$i + 1]);\n        if ($distance <= $smallest_distance)\
    \ {\n            $smallest_distance = $distance;\n            $return_value =\
    \ [$number, $numbers[$i + 1]];\n        }\n    }\n    return $return_value;\n\
    }\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_lkb9m1.php:29\n\
    Stack trace:\n#0 /tmp/tmpk_lkb9m1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk_lkb9m1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (!is_array($numbers)) {\n        return false;\n    }\n\n    $num_l =\
    \ count($numbers);\n    if ($num_l < 2) {\n        return false;\n    }\n\n  \
    \  $closest_elements = [];\n    $min_diff = false;\n    $min_diff_pairs = [];\n\
    \n    for ($i = 0; $i < $num_l; $i++) {\n        for ($j = $i + 1; $j < $num_l;\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($min_diff === false || $diff < $min_diff) {\n                $min_diff =\
    \ $diff;\n                $min_diff_pairs = [];\n                $min_diff_pairs[]\
    \ = [$numbers[$i], $numbers[$j]];\n            } elseif ($diff == $min_diff) {\n\
    \                $min_diff_pairs[] = [$numbers[$i], $numbers[$j]];\n         \
    \   }\n        }\n    }\n\n    if (count($min_diff_pairs) == 1) {\n        $closest_elements\
    \ = $min_diff_pairs[0];\n    } else {\n        foreach ($min_diff_pairs as $pair)\
    \ {\n            if ($pair[0] < $pair[1]) {\n                $closest_elements\
    \ = $pair;\n                break;\n            }\n        }\n    }\n\n    return\
    \ $closest_elements;\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnohiden.php:55\n\
    Stack trace:\n#0 /tmp/tmplnohiden.php(61): test()\n#1 {main}\n  thrown in /tmp/tmplnohiden.php\
    \ on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) < 2) return false;\n    $closest_pair = array(abs($numbers[0]\
    \ - $numbers[1]), $numbers[0], $numbers[1]);\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $current_diff = abs($numbers[$i] - $numbers[$j]);\n            if ($current_diff\
    \ < $closest_pair[0]) {\n                $closest_pair = array($current_diff,\
    \ $numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return array($closest_pair[1],\
    \ $closest_pair[2]);\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybrrqqlh.php:27\n\
    Stack trace:\n#0 /tmp/tmpybrrqqlh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpybrrqqlh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $numbers_length = count($numbers);\n  $min = INF;\n  $index_1 = 0;\n  $index_2\
    \ = 1;\n  for ($i = 0; $i < $numbers_length; $i++) {\n    for ($j = $i + 1; $j\
    \ < $numbers_length; $j++) {\n      $distance = abs($numbers[$i] - $numbers[$j]);\n\
    \      if ($distance < $min) {\n        $min = $distance;\n        $index_1 =\
    \ $i;\n        $index_2 = $j;\n      }\n    }\n  }\n  if ($numbers[$index_1] <\
    \ $numbers[$index_2]) {\n    return array($numbers[$index_1], $numbers[$index_2]);\n\
    \  } else {\n    return array($numbers[$index_2], $numbers[$index_1]);\n  }\n\
    }\n\n$array = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nvar_dump(find_closest_elements($array));\n\
    $array = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\nvar_dump(find_closest_elements($array));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(2)\n  [1]=>\n  float(2.2)\n}\narray(2) {\n\
    \  [0]=>\n  float(2)\n  [1]=>\n  float(2)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min = PHP_INT_MAX;\n    $result = array();\n    $length = count($numbers);\n\
    \    for ($i = 0; $i < $length - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff == 0) {\n            $result = array($numbers[$i],\
    \ $numbers[$i + 1]);\n            break;\n        }\n        if ($diff < $min)\
    \ {\n            $min = $diff;\n            $result = array($numbers[$i], $numbers[$i\
    \ + 1]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfnkswx0.php:32\n\
    Stack trace:\n#0 /tmp/tmpdfnkswx0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdfnkswx0.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i == 0) {\n    \
    \        $min = abs($numbers[$i + 1] - $numbers[$i]);\n            $result = array(abs($numbers[$i\
    \ + 1] - $numbers[$i]), $numbers[$i], $numbers[$i + 1]);\n        } else {\n \
    \           if ($min > abs($numbers[$i + 1] - $numbers[$i])) {\n             \
    \   $min = abs($numbers[$i + 1] - $numbers[$i]);\n                $result = array(abs($numbers[$i\
    \ + 1] - $numbers[$i]), $numbers[$i], $numbers[$i + 1]);\n            }\n    \
    \    }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp2vfc84.php:28\n\
    Stack trace:\n#0 /tmp/tmpsp2vfc84.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsp2vfc84.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $temp_min = 1e9;\n  $elements = array();\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $min = 1e9;\n    for ($j = $i + 1; $j < count($numbers); $j++)\
    \ {\n      $diff = abs($numbers[$i] - $numbers[$j]);\n      if ($diff <= $min)\
    \ {\n        $min = $diff;\n        $elements = array($numbers[$i], $numbers[$j]);\n\
    \      }\n    }\n    if ($min < $temp_min) {\n      $temp_min = $min;\n    }\n\
    \  }\n  return $elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n\
    var_dump(find_closest_elements($numbers));\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0);\nvar_dump(find_closest_elements($numbers));\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(5)\n  [1]=>\n  float(2.2)\n}\narray(2) {\n\
    \  [0]=>\n  float(5)\n  [1]=>\n  float(2)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpvy7rgl1q.php:36\nStack trace:\n#0 /tmp/tmpvy7rgl1q.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvy7rgl1q.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_distance = PHP_INT_MAX;\n    $closest_elements = [];\n    for ($i =\
    \ 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i == $j) continue;\n            $current_distance\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($current_distance < $min_distance)\
    \ {\n                $min_distance = $current_distance;\n                $closest_elements\
    \ = [$numbers[$i], $numbers[$j]];\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpur3uaf6a.php:29\n\
    Stack trace:\n#0 /tmp/tmpur3uaf6a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpur3uaf6a.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $minDistance = 0;\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = 0; $j < count($numbers); $j++) {\n            if\
    \ ($i != $j) {\n                $distance = abs($numbers[$i] - $numbers[$j]);\n\
    \                if ($distance < $minDistance || $minDistance == 0) {\n      \
    \              $minDistance = $distance;\n                    $result = array($numbers[$i],\
    \ $numbers[$j]);\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nvar_dump(find_closest_elements($numbers));\n\
    \n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\nvar_dump(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(2)\n  [1]=>\n  float(2.2)\n}\narray(2) {\n\
    \  [0]=>\n  float(2)\n  [1]=>\n  float(3)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpj_b55o5z.php:36\nStack trace:\n#0 /tmp/tmpj_b55o5z.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpj_b55o5z.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $len = count($numbers);\n  $smaller = min($numbers[0], $numbers[1]);\n  $larger\
    \ = max($numbers[0], $numbers[1]);\n  for ($i = 1; $i < $len - 1; $i++) {\n  \
    \  if ($numbers[$i + 1] - $numbers[$i] < $larger - $smaller) {\n      $smaller\
    \ = $numbers[$i];\n      $larger = $numbers[$i + 1];\n    }\n  }\n  return array($smaller,\
    \ $larger);\n}\n\n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpc5aits0s.php:28\nStack trace:\n#0 /tmp/tmpc5aits0s.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpc5aits0s.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallestDiff = 0;\n    $closestNumbers = [];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff <= $smallestDiff\
    \ || $smallestDiff == 0) {\n                $smallestDiff = $diff;\n         \
    \       $closestNumbers = [$numbers[$i], $numbers[$j]];\n            }\n     \
    \   }\n    }\n    asort($closestNumbers);\n    return $closestNumbers;\n}\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzigjeroh.php:29\n\
    Stack trace:\n#0 /tmp/tmpzigjeroh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzigjeroh.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = array();\n    $num_numbers = count($numbers);\n    $min_distance\
    \ = abs($numbers[0] - $numbers[1]);\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    for ($i = 0; $i < $num_numbers - 1; $i++) {\n        for\
    \ ($j = $i + 1; $j < $num_numbers; $j++) {\n            $distance = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($distance < $min_distance) {\n           \
    \     $min_distance = $distance;\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n            }\n        }\n    }\n\
    \    return $closest;\n}\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest\
    \ = find_closest_elements($numbers);\necho \"Closest elements: \" . $closest[0]\
    \ . \", \" . $closest[1] . \"<br>\";\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Closest elements: 2, 2.2<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0m2kny8p.php:36\nStack trace:\n#0 /tmp/tmp0m2kny8p.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0m2kny8p.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) < 2) {\n        return false;\n    }\n    $difference\
    \ = PHP_INT_MAX;\n    $match1 = 0;\n    $match2 = 0;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $temp = abs($numbers[$i] - $numbers[$j]);\n            if ($temp < $difference)\
    \ {\n                $difference = $temp;\n                $match1 = $numbers[$i];\n\
    \                $match2 = $numbers[$j];\n            }\n        }\n    }\n  \
    \  return array($match1, $match2);\n}\n$a = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n\
    print_r(find_closest_elements($a));\necho \"<br>\";\n$b = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0);\nprint_r(find_closest_elements($b));\necho \"<br>\";\n$c = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0);\nprint_r(find_closest_elements($c));\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n<br>Array\n(\n    [0] => 2\n\
    \    [1] => 2\n)\n<br>Array\n(\n    [0] => 1\n    [1] => 2\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp0j5viha7.php:41\nStack trace:\n\
    #0 /tmp/tmp0j5viha7.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0j5viha7.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $first = $numbers[0];\n    $second = $numbers[1];\n    $closest = abs($first\
    \ - $second);\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            $compare\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($compare < $closest) {\n\
    \                $closest = $compare;\n                $first = $numbers[$i];\n\
    \                $second = $numbers[$j];\n            }\n        }\n    }\n  \
    \  echo \"($first, $second)<br>\";\n}\nfind_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]);\nfind_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]);\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(2, 2.2)<br>(2, 2)<br>(3.9, 4)<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp9bw64wi9.php:32\nStack trace:\n#0 /tmp/tmp9bw64wi9.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9bw64wi9.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t//to find closest elements we need at least 2 elements\n\tif (count($numbers)\
    \ < 2) {\n\t\tthrow new Exception('List needs to be longer than one element');\n\
    \t}\n\t// set the initial difference to a large value\n\t$difference = $numbers[0]\
    \ + $numbers[1];\n\t$smallest = $numbers[0];\n\t$largest = $numbers[1];\n\tfor\
    \ ($i = 0; $i < count($numbers); $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n\t\t\t//calculate the difference between the two elements\n\t\t\t$new_difference\
    \ = abs($numbers[$i] - $numbers[$j]);\n\t\t\t//if the difference is 0 return the\
    \ two numbers\n\t\t\tif ($new_difference == 0) {\n\t\t\t\treturn array($numbers[$i],\
    \ $numbers[$j]);\n\t\t\t}\n\t\t\t//if the difference is lower than the current\
    \ difference set it to be the new difference\n\t\t\tif ($new_difference < $difference)\
    \ {\n\t\t\t\t$difference = $new_difference;\n\t\t\t\t$smallest = $numbers[$i];\n\
    \t\t\t\t$largest = $numbers[$j];\n\t\t\t}\n\t\t}\n\t}\n\treturn array($smallest,\
    \ $largest);\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxewyvf0p.php:41\n\
    Stack trace:\n#0 /tmp/tmpxewyvf0p.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxewyvf0p.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $max = null;\n    $min = null;\n    foreach ($numbers as $i => $number) {\n\
    \        if ($i === 0) {\n            $max = $number;\n            $min = $number;\n\
    \        } else {\n            if ($number > $max) {\n                $max = $number;\n\
    \            }\n            if ($number < $min) {\n                $min = $number;\n\
    \            }\n        }\n    }\n    return array($min, $max);\n}\n\n$test_values\
    \ = array(\n    array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2),\n    array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0),\n);\n\nforeach ($test_values as $test_value) {\n    echo '$test_value:\
    \ ' . implode(', ', $test_value) . \"\\n\";\n    echo 'find_closest_elements($test_value):\
    \ ' . implode(', ', find_closest_elements($test_value)) . \"\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "$test_value: 1, 2, 3, 4, 5, 2.2\nfind_closest_elements($test_value): 1,\
    \ 5\n$test_value: 1, 2, 3, 4, 5, 2\nfind_closest_elements($test_value): 1, 5\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_zpd96f.php:41\nStack\
    \ trace:\n#0 /tmp/tmpn_zpd96f.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpn_zpd96f.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $minDiff = abs($numbers[0] - $numbers[1]);\n    $minDiffIndex = 0;\n    for\
    \ ($i = 1; $i < count($numbers) - 1; $i++) {\n        $newDiff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($newDiff < $minDiff) {\n            $minDiff\
    \ = $newDiff;\n            $minDiffIndex = $i;\n        }\n    }\n    return [$numbers[$minDiffIndex],\
    \ $numbers[$minDiffIndex + 1]];\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprz4ugel7.php:27\n\
    Stack trace:\n#0 /tmp/tmprz4ugel7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprz4ugel7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    sort($numbers);\n    $differences = array();\n    $res = array();\n    for\
    \ ($i = 0; $i < sizeof($numbers); $i++) {\n        if ($i == sizeof($numbers)\
    \ - 1) {\n            $differences[$i] = null;\n        } else {\n           \
    \ $differences[$i] = abs($numbers[$i + 1] - $numbers[$i]);\n        }\n    }\n\
    \    $min = min($differences);\n    for ($i = 0; $i < sizeof($differences); $i++)\
    \ {\n        if ($differences[$i] == $min) {\n            $res[] = $numbers[$i];\n\
    \            $res[] = $numbers[$i + 1];\n        }\n    }\n    return $res;\n\
    }\n\necho \"<pre>\";\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2]));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 5\n    [1] => \n)\n</pre><pre>Array\n(\n    [0]\
    \ => 2\n    [1] => 2\n    [2] => 5\n    [3] => \n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmphpfjvn25.php:41\nStack trace:\n#0 /tmp/tmphpfjvn25.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphpfjvn25.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $len = count($numbers);\n    $min_diff = abs($numbers[0] - $numbers[1]);\n\
    \    $min_diff_elements = [$numbers[0], $numbers[1]];\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_diff_elements = [$numbers[$i], $numbers[$j]];\n\
    \            }\n        }\n    }\n    return $min_diff_elements;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpks_zz4xz.php:30\n\
    Stack trace:\n#0 /tmp/tmpks_zz4xz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpks_zz4xz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_distance = PHP_INT_MAX;\n    $pair = [$numbers[0], $numbers[1]];\n \
    \   $count = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n       \
    \ for ($j = $i + 1; $j < $count; $j++) {\n            $distance = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($distance < $min_distance) {\n           \
    \     $min_distance = $distance;\n                $pair = [$numbers[$i], $numbers[$j]];\n\
    \            }\n        }\n    }\n    sort($pair);\n    return $pair;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = array(NULL, NULL);\n    $current_min = NULL;\n    sort($numbers);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i == 0) {\n    \
    \        $closest[0] = $numbers[$i];\n            $closest[1] = $numbers[$i +\
    \ 1];\n            $current_min = abs($numbers[$i] - $numbers[$i + 1]);\n    \
    \    } else if ($i == count($numbers) - 1) {\n            if (abs($numbers[$i]\
    \ - $numbers[$i - 1]) < $current_min) {\n                $closest[0] = $numbers[$i\
    \ - 1];\n                $closest[1] = $numbers[$i];\n            }\n        }\
    \ else {\n            if (abs($numbers[$i] - $numbers[$i - 1]) < $current_min)\
    \ {\n                $closest[0] = $numbers[$i - 1];\n                $closest[1]\
    \ = $numbers[$i];\n                $current_min = abs($numbers[$i] - $numbers[$i\
    \ - 1]);\n            } else if (abs($numbers[$i] - $numbers[$i + 1]) < $current_min)\
    \ {\n                $closest[0] = $numbers[$i];\n                $closest[1]\
    \ = $numbers[$i + 1];\n                $current_min = abs($numbers[$i] - $numbers[$i\
    \ + 1]);\n            }\n        }\n    }\n    return $closest;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $min = PHP_INT_MAX;\n  $closest = array();\n  for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n    $a = $numbers[$i];\n    $b = $numbers[$i + 1];\n    $diff\
    \ = abs($a - $b);\n    if ($diff < $min) {\n      $min = $diff;\n      $closest\
    \ = array($a, $b);\n    }\n  }\n  return $closest;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1dgodm9.php:29\n\
    Stack trace:\n#0 /tmp/tmpl1dgodm9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpl1dgodm9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) < 2) {\n        return;\n    }\n    $closest_elements\
    \ = [$numbers[0], $numbers[1]];\n    $closest_distance = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $distance = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($distance < $closest_distance) {\n                $closest_elements\
    \ = [$numbers[$i], $numbers[$j]];\n                $closest_distance = $distance;\n\
    \            }\n        }\n    }\n    sort($closest_elements);\n    return $closest_elements;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$size = count($numbers);\n\t$distance = abs($numbers[1] - $numbers[0]);\n\t\
    $closest = array($numbers[0], $numbers[1]);\n\tfor ($i = 1; $i < $size; $i++)\
    \ {\n\t\tif (abs($numbers[$i + 1] - $numbers[$i]) < $distance) {\n\t\t\t$distance\
    \ = abs($numbers[$i + 1] - $numbers[$i]);\n\t\t\t$closest = array($numbers[$i],\
    \ $numbers[$i + 1]);\n\t\t}\n\t}\n\treturn $closest;\n}\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3k8loas.php:26\n\
    Stack trace:\n#0 /tmp/tmp_3k8loas.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_3k8loas.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) < 2) {\n        return false;\n    }\n    $closest_distance\
    \ = $numbers[1] - $numbers[0];\n    $closest_pair = array();\n    foreach ($numbers\
    \ as $key => $number) {\n        $distance = $number - $numbers[$key-1];\n   \
    \     if ($distance < $closest_distance) {\n            $closest_distance = $distance;\n\
    \            $closest_pair = array($numbers[$key-1], $number);\n        }\n  \
    \  }\n    return $closest_pair;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmgt2z8j.php:29\n\
    Stack trace:\n#0 /tmp/tmpcmgt2z8j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcmgt2z8j.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $numbers_size = count($numbers);\n  $element_1 = null;\n  $element_2 = null;\n\
    \  $min_diff = null;\n  for ($i = 0; $i < $numbers_size; $i++) {\n    for ($j\
    \ = $i + 1; $j < $numbers_size; $j++) {\n      $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \      if ($diff < $min_diff || $min_diff === null) {\n        $min_diff = $diff;\n\
    \        $element_1 = $numbers[$i];\n        $element_2 = $numbers[$j];\n    \
    \  }\n    }\n  }\n  return ($element_1 < $element_2) ? array($element_1, $element_2)\
    \ : array($element_2, $element_1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    // We can use the fact that the index of an array is stored in the associative\
    \ array in PHP,\n    // so we can iterate through an associative array and get\
    \ the indexes. If we sort the array\n    // by value and then iterate through\
    \ the keys of the sorted array, we will have the same\n    // ordering as the\
    \ original, but with values instead of indexes.\n    // Then we can just compare\
    \ neighbors of the keys array and get the best result, which is\n    // O(n log\
    \ n), and we can save the resulting keys in an array.\n    $keys = array_keys($numbers);\n\
    \    asort($numbers);\n    $result = array($keys[0], $keys[1]);\n    $closest\
    \ = abs($numbers[$keys[0]] - $numbers[$keys[1]]);\n    for ($i = 1; $i < count($keys)\
    \ - 1; $i++) {\n        $diff = abs($numbers[$keys[$i]] - $numbers[$keys[$i +\
    \ 1]]);\n        if ($diff < $closest) {\n            $closest = $diff;\n    \
    \        $result = array($keys[$i], $keys[$i + 1]);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7z3zhtkz.php:34\n\
    Stack trace:\n#0 /tmp/tmp7z3zhtkz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7z3zhtkz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $shortest_distance = $numbers[0] - $numbers[1];\n    $shortest_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = 0; $j < count($numbers); $j++) {\n            if ($i !== $j) {\n         \
    \       $distance = abs($numbers[$i] - $numbers[$j]);\n                if ($distance\
    \ < $shortest_distance) {\n                    $shortest_distance = $distance;\n\
    \                    $shortest_pair = array($numbers[$i], $numbers[$j]);\n   \
    \             }\n            }\n        }\n    }\n    if ($shortest_pair[0] >\
    \ $shortest_pair[1]) {\n        return array($shortest_pair[1], $shortest_pair[0]);\n\
    \    }\n    return $shortest_pair;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07hgw975.php:33\n\
    Stack trace:\n#0 /tmp/tmp07hgw975.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp07hgw975.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_distance = PHP_INT_MAX;\n    for ($i = 0; $i < count($numbers) -\
    \ 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n      \
    \      $distance = abs($numbers[$i] - $numbers[$j]);\n            if ($distance\
    \ < $closest_distance) {\n                $closest_distance = $distance;\n   \
    \             $closest_pair = [$numbers[$i], $numbers[$j]];\n            }\n \
    \       }\n    }\n    return $closest_pair;\n}\n\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf67s12tb.php:30\n\
    Stack trace:\n#0 /tmp/tmpf67s12tb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf67s12tb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smaller = 0;\n    $larger = 1;\n    $smaller_diff = abs($numbers[$smaller]\
    \ - $numbers[$larger]);\n    $larger_diff = $smaller_diff;\n    for ($i = 0; $i\
    \ < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $smaller_diff) {\n                $smaller = $i;\n             \
    \   $larger = $j;\n                $smaller_diff = $diff;\n                $larger_diff\
    \ = $diff;\n            } elseif ($diff == $smaller_diff) {\n                $smaller\
    \ = $i;\n                $larger = $j;\n                $larger_diff = $diff;\n\
    \            }\n        }\n    }\n    return array($numbers[$smaller], $numbers[$larger]);\n\
    }\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwb8fxjye.php:36\n\
    Stack trace:\n#0 /tmp/tmpwb8fxjye.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwb8fxjye.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $result = array();\n    // sort the array\n    sort($numbers);\n    // $numbers\
    \ = [1.0, 2.0, 2.0, 2.2, 3.0, 4.0, 5.0]\n    $min_diff = abs($numbers[0] - $numbers[1]);\n\
    \    $result = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   if (abs($numbers[$i] - $numbers[$j]) < $min_diff) {\n                $min_diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n                $result = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $result;\n}\n\n\
    $numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$result = find_closest_elements($numbers);\n\
    print_r($result);\necho '<br>';\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\
    $result = find_closest_elements($numbers);\nprint_r($result);\necho '<br>';\n\
    $numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 6.0);\n$result = find_closest_elements($numbers);\n\
    print_r($result);\necho '<br>';\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n<br>Array\n(\n    [0] => 2\n\
    \    [1] => 2\n)\n<br>Array\n(\n    [0] => 1\n    [1] => 2\n)\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \tasort($numbers);\n\t$closest = array_slice($numbers, 0, 2);\n\t$smallest_diff\
    \ = abs($closest[0] - $closest[1]);\n\tfor ($i = 0; $i < count($numbers) - 1;\
    \ $i++) {\n\t\t$diff = abs($numbers[$i] - $numbers[$i + 1]);\n\t\tif ($diff <\
    \ $smallest_diff) {\n\t\t\t$smallest_diff = $diff;\n\t\t\t$closest = array_slice($numbers,\
    \ $i, 2);\n\t\t}\n\t}\n\treturn $closest;\n}\n\nassert(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]) == [2.0, 2.2]);\nassert(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]) == [2.0, 2.0]);\n\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: assert(): assert(find_closest_elements([1, 2, 3, 4, 5, 2.2])\
    \ == [2, 2.2]) failed in /tmp/tmpcap6eckp.php on line 22\n\nWarning: assert():\
    \ assert(find_closest_elements([1, 2, 3, 4, 5, 2]) == [2, 2]) failed in /tmp/tmpcap6eckp.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcap6eckp.php:30\n\
    Stack trace:\n#0 /tmp/tmpcap6eckp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcap6eckp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (!is_array($numbers)) {\n        throw new InvalidArgumentException('Input\
    \ should be an array');\n    }\n    if (count($numbers) < 2) {\n        throw\
    \ new LengthException('Input array should have a length of at least 2');\n   \
    \ }\n    sort($numbers);\n    $first = $numbers[0];\n    $second = $numbers[1];\n\
    \    $min_diff = abs($first - $second);\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        $current_diff = abs($numbers[$i] - $numbers[$i + 1]);\n\
    \        if ($current_diff < $min_diff) {\n            $min_diff = $current_diff;\n\
    \            $first = $numbers[$i];\n            $second = $numbers[$i + 1];\n\
    \        }\n    }\n    return array($first, $second);\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\nlist($first, $second) = find_closest_elements($numbers);\n\
    print \"The closest numbers are $first and $second\\n\";\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0);\nlist($first, $second) = find_closest_elements($numbers);\n\
    print \"The closest numbers are $first and $second\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The closest numbers are 2 and 2.2\nThe closest numbers are 2 and 2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $num = count($numbers);\n    $i = 0;\n    $min_diff = abs($numbers[$i] -\
    \ $numbers[$i + 1]);\n    $small = $numbers[$i];\n    $big = $numbers[$i + 1];\n\
    \    $i++;\n    for ($i; $i < $num - 1; $i++) {\n        $temp = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($temp < $min_diff) {\n            $min_diff\
    \ = $temp;\n            $small = $numbers[$i];\n            $big = $numbers[$i\
    \ + 1];\n        }\n    }\n    return array($small, $big);\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbcbh15q.php:32\n\
    Stack trace:\n#0 /tmp/tmpfbcbh15q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfbcbh15q.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  if (count($numbers) <= 1) return null;\n  if (count($numbers) == 2) return\
    \ $numbers;\n  $values = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    for ($j = $i + 1; $j < count($numbers); $j++) {\n      $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n      $values[] = [$numbers[$i], $numbers[$j], $diff];\n \
    \   }\n  }\n  usort($values, function($a, $b) {\n    return $a[2] - $b[2];\n \
    \ });\n  return [$values[0][0], $values[0][1]];\n}\n\n$test_cases = array(\n \
    \ array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2),\n  array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0),\n\
    \  array(1.0, 1.0, 1.0, 1.0, 1.0, 1.0),\n  array(1.0, 0.0, 1.0, 0.0, 1.0, 0.0),\n\
    \  array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0),\n  array(0.0, 0.0, 0.0, 0.0, 0.0, 0.0),\n\
    \  array(),\n  array(1),\n  array(1, 2),\n  array(1, 2, 3, 4, 5, 10),\n  array(1,\
    \ 2, 3, 4, 5, 9),\n  array(1, 2, 3, 4, 5, 7)\n);\n\nforeach ($test_cases as $test_case)\
    \ {\n  echo \"Input: \" . implode(\", \", $test_case) . \"\\n\";\n  echo \"Output:\
    \ \" . implode(\", \", find_closest_elements($test_case)) . \"\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Input: 1, 2, 3, 4, 5, 2.2\nOutput: 1, 2\nInput: 1, 2, 3, 4, 5, 2\nOutput:\
    \ 2, 2\nInput: 1, 1, 1, 1, 1, 1\nOutput: 1, 1\nInput: 1, 0, 1, 0, 1, 0\nOutput:\
    \ 1, 1\nInput: 0, 1, 0, 1, 0, 1\nOutput: 0, 0\nInput: 0, 0, 0, 0, 0, 0\nOutput:\
    \ 0, 0\nInput: \n\nWarning: implode(): Invalid arguments passed in /tmp/tmp07ds_r9j.php\
    \ on line 41\nOutput: \nInput: 1\n\nWarning: implode(): Invalid arguments passed\
    \ in /tmp/tmp07ds_r9j.php on line 41\nOutput: \nInput: 1, 2\nOutput: 1, 2\nInput:\
    \ 1, 2, 3, 4, 5, 10\nOutput: 1, 2\nInput: 1, 2, 3, 4, 5, 9\nOutput: 1, 2\nInput:\
    \ 1, 2, 3, 4, 5, 7\nOutput: 1, 2\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp07ds_r9j.php:48\nStack trace:\n#0 /tmp/tmp07ds_r9j.php(55): test()\n\
    #1 {main}\n  thrown in /tmp/tmp07ds_r9j.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = array(array(1,0),array(1,0));\n    $number = count($numbers);\n\
    \    $i = 0;\n    while ($i < $number - 1) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $closest[0][0]) {\n            $closest[0][0]\
    \ = $diff;\n            $closest[0][1] = $i;\n        }\n        $i++;\n    }\n\
    \    return array($numbers[$closest[0][1]], $numbers[$closest[0][1] + 1]);\n}\n\
    \nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpbq0gfx3c.php:31\nStack trace:\n#0 /tmp/tmpbq0gfx3c.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbq0gfx3c.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closestDiff = null;\n    $closestIndex1 = null;\n    $closestIndex2 = null;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($closestDiff === null || $diff < $closestDiff) {\n          \
    \      $closestDiff = $diff;\n                $closestIndex1 = $i;\n         \
    \       $closestIndex2 = $j;\n            }\n        }\n    }\n    if ($numbers[$closestIndex1]\
    \ < $numbers[$closestIndex2]) {\n        return [$numbers[$closestIndex1], $numbers[$closestIndex2]];\n\
    \    } else {\n        return [$numbers[$closestIndex2], $numbers[$closestIndex1]];\n\
    \    }\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $num_0 = $numbers[0];\n    $num_1 = $numbers[1];\n    $distance = abs($num_0\
    \ - $num_1);\n    $lower = $num_0;\n    $higher = $num_1;\n    if ($num_0 > $num_1)\
    \ {\n        $lower = $num_1;\n        $higher = $num_0;\n    }\n    for ($i =\
    \ 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i == $j) {\n                continue;\n          \
    \  }\n            $curr_distance = abs($numbers[$i] - $numbers[$j]);\n       \
    \     if ($curr_distance < $distance) {\n                $distance = $curr_distance;\n\
    \                $lower = $numbers[$i];\n                $higher = $numbers[$j];\n\
    \            }\n        }\n    }\n    return array($lower, $higher);\n}\necho\
    \ find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])[0];\necho find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])[1];\necho find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0])[0];\necho find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "22.222\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn2gt00xr.php:43\n\
    Stack trace:\n#0 /tmp/tmpn2gt00xr.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpn2gt00xr.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $diffs = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diffs[] = abs($numbers[$i]\
    \ - $numbers[$j]);\n        }\n    }\n    $diff_min = min($diffs);\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) == $diff_min) {\n\
    \                return [$numbers[$i], $numbers[$j]];\n            }\n       \
    \ }\n    }\n}\n\n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp57dg89js.php:33\nStack trace:\n#0 /tmp/tmp57dg89js.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp57dg89js.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) < 2) {\n        return false;\n    }\n    $closest_pair\
    \ = array($numbers[0], $numbers[1]);\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $current_diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($current_diff < $closest_diff) {\n                $closest_diff\
    \ = $current_diff;\n                $closest_pair = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $closest_pair;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgaso3a44.php:32\n\
    Stack trace:\n#0 /tmp/tmpgaso3a44.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgaso3a44.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_diff = INF;\n    $i = 0;\n    $n = count($numbers);\n    while ($i <\
    \ $n - 1) {\n        $diff = abs($numbers[$i] - $numbers[$i + 1]);\n        if\
    \ ($diff < $min_diff) {\n            $min_diff = $diff;\n            $min_i =\
    \ $i;\n        }\n        $i++;\n    }\n    return [$numbers[$min_i], $numbers[$min_i\
    \ + 1]];\n}\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp3nk4fm78.php:29\nStack trace:\n#0 /tmp/tmp3nk4fm78.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3nk4fm78.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    sort($numbers);\n    $min = $numbers[1] - $numbers[0];\n    $close = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        if (($i\
    \ + 1) < count($numbers)) {\n            $current = $numbers[$i + 1] - $numbers[$i];\n\
    \            if ($current < $min) {\n                $min = $current;\n      \
    \          $close = array($numbers[$i], $numbers[$i + 1]);\n            }\n  \
    \      }\n    }\n    return $close;\n}\nprint_r(find_closest_elements([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$pairs = array();\n\t$result = array();\n\t$min = INF;\n\tfor ($i = 0; $i <\
    \ count($numbers); $i++) {\n\t\t$pairs[$i] = array();\n\t\tfor ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\
    \t\t\t$pairs[$i][$j] = $diff;\n\t\t\tif ($diff < $min) {\n\t\t\t\t$min = $diff;\n\
    \t\t\t\t$result = array($numbers[$i], $numbers[$j]);\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $result;\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppwn6iopn.php:32\n\
    Stack trace:\n#0 /tmp/tmppwn6iopn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppwn6iopn.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$smallest = $numbers[0];\n\t$next_smallest = $numbers[1];\n\tforeach ($numbers\
    \ as $idx=>$num) {\n\t\tif ($idx>1) {\n\t\t\tif ($num < $smallest) {\n\t\t\t\t\
    $next_smallest = $smallest;\n\t\t\t\t$smallest = $num;\n\t\t\t} elseif ($num <\
    \ $next_smallest) {\n\t\t\t\t$next_smallest = $num;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ [$smallest, $next_smallest];\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhfakd_x.php:29\n\
    Stack trace:\n#0 /tmp/tmpyhfakd_x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyhfakd_x.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    // Sort numbers\n    sort($numbers);\n    // Loop over list, comparing each\
    \ number to its neighbour and the minimum difference found so far\n    $min_diff\
    \ = abs($numbers[0] - $numbers[1]);\n    $min_elements = array($numbers[0], $numbers[1]);\n\
    \    for ($i = 1; $i < count($numbers) - 1; $i++) {\n        $current_diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($current_diff < $min_diff) {\n           \
    \ $min_diff = $current_diff;\n            $min_elements = array($numbers[$i],\
    \ $numbers[$i + 1]);\n        }\n    }\n    return $min_elements;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = [\n        \"diff\" => abs($numbers[0] - $numbers[1]),\n     \
    \   \"nums\" => [$numbers[0], $numbers[1]]\n    ];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest[\"\
    diff\"]) {\n                $closest[\"diff\"] = $diff;\n                $closest[\"\
    nums\"] = [$numbers[$i], $numbers[$j]];\n            }\n        }\n    }\n   \
    \ return $closest[\"nums\"];\n}\n\necho \"find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2]) : \";\nvar_dump(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2]));\necho \"find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]) : \";\n\
    var_dump(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]));\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) : array(2) {\n  [0]=>\n\
    \  float(2)\n  [1]=>\n  float(2.2)\n}\nfind_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]) : array(2) {\n  [0]=>\n  float(2)\n  [1]=>\n  float(2)\n}\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp7hlbc__3.php:35\nStack trace:\n\
    #0 /tmp/tmp7hlbc__3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7hlbc__3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $difference = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $difference) {\n                $difference = abs($numbers[$i]\
    \ - $numbers[$j]);\n                $result = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $result;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp2w7xg62x.php:31\nStack trace:\n#0 /tmp/tmp2w7xg62x.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2w7xg62x.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $n = count($numbers);\n    $min = $numbers[0] + $numbers[1];\n    $i = 0;\n\
    \    $j = 1;\n    for ($j = 1; $j < $n; $j++) {\n        for ($i = 0; $i < $j;\
    \ $i++) {\n            $sum = $numbers[$i] + $numbers[$j];\n            if (abs($sum)\
    \ < abs($min)) {\n                $min = $sum;\n                $imin = $i;\n\
    \                $jmin = $j;\n            }\n        }\n    }\n    return array($numbers[$imin],\
    \ $numbers[$jmin]);\n}\n\n$myArray = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nvar_dump(find_closest_elements($myArray));\n\
    $myArray = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\nvar_dump(find_closest_elements($myArray));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  NULL\n  [1]=>\n  NULL\n}\narray(2) {\n  [0]=>\n\
    \  NULL\n  [1]=>\n  NULL\n}\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpsxdkaia4.php:35\nStack trace:\n#0 /tmp/tmpsxdkaia4.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpsxdkaia4.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $num_numbers = count($numbers);\n    if ($num_numbers < 2) {\n        return\
    \ array();\n    }\n    $closest_pair = array($numbers[0], $numbers[1]);\n    $closest_diff\
    \ = abs($numbers[0] - $numbers[1]);\n    for ($first = 0; $first < $num_numbers\
    \ - 1; $first++) {\n        for ($second = $first + 1; $second < $num_numbers;\
    \ $second++) {\n            $diff = abs($numbers[$first] - $numbers[$second]);\n\
    \            if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n\
    \                $closest_pair = array($numbers[$first], $numbers[$second]);\n\
    \            }\n        }\n    }\n    return $closest_pair;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppr2tdzqf.php:33\n\
    Stack trace:\n#0 /tmp/tmppr2tdzqf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppr2tdzqf.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$closest_dif = $numbers[1] - $numbers[0];\n\t$closest_pair = array($numbers[0],\
    \ $numbers[1]);\n\t$len = count($numbers);\n\tfor ($i = 0; $i < $len - 1; $i++)\
    \ {\n\t\t$dif = $numbers[$i + 1] - $numbers[$i];\n\t\tif ($dif < $closest_dif)\
    \ {\n\t\t\t$closest_dif = $dif;\n\t\t\t$closest_pair = array($numbers[$i], $numbers[$i\
    \ + 1]);\n\t\t}\n\t}\n\treturn $closest_pair;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3bq8jn98.php:27\n\
    Stack trace:\n#0 /tmp/tmp3bq8jn98.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3bq8jn98.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) < 2) {\n        return null;\n    }\n    $min = PHP_INT_MAX;\n\
    \    $ret = null;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $curr_diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($curr_diff < $min) {\n                $min\
    \ = $curr_diff;\n                $ret = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    return $ret;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_vfr_7dk.php:34\nStack trace:\n#0 /tmp/tmp_vfr_7dk.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_vfr_7dk.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \tsort($numbers);\n\t$closest_diff = abs($numbers[0] - $numbers[1]);\n\t$closest_numbers\
    \ = [$numbers[0], $numbers[1]];\n\tfor ($i = 0; $i < count($numbers) - 1; $i++)\
    \ {\n\t\t$diff = abs($numbers[$i] - $numbers[$i + 1]);\n\t\tif ($diff < $closest_diff)\
    \ {\n\t\t\t$closest_diff = $diff;\n\t\t\t$closest_numbers = [$numbers[$i], $numbers[$i\
    \ + 1]];\n\t\t}\n\t}\n\treturn $closest_numbers;\n}\n\necho implode(', ', find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\necho \"\\n\";\necho implode(', ', find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]));\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2, 2.2\n2, 2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$i = 0;\n\t$min_distance = $numbers[1] - $numbers[0];\n\t$min_pair = array($numbers[0],\
    \ $numbers[1]);\n\twhile ($i < count($numbers) - 1) {\n\t\t$distance = $numbers[$i\
    \ + 1] - $numbers[$i];\n\t\tif ($distance < $min_distance) {\n\t\t\t$min_distance\
    \ = $distance;\n\t\t\t$min_pair = array($numbers[$i], $numbers[$i + 1]);\n\t\t\
    }\n\t\t$i += 1;\n\t}\n\treturn $min_pair;\n}\n\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n    [1] => 2.2\n)\nArray\n(\n    [0] => 5\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_dklv2_.php:30\n\
    Stack trace:\n#0 /tmp/tmp4_dklv2_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4_dklv2_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallest = 0;\n    $biggest = 1;\n    $difference = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i != $j) {\n                $check = abs($numbers[$i]\
    \ - $numbers[$j]);\n                if ($check < $difference) {\n            \
    \        $smallest = $i;\n                    $biggest = $j;\n               \
    \     $difference = $check;\n                }\n            }\n        }\n   \
    \ }\n    if ($numbers[$smallest] < $numbers[$biggest]) {\n        return [$numbers[$smallest],\
    \ $numbers[$biggest]];\n    } else {\n        return [$numbers[$biggest], $numbers[$smallest]];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $closest_elements = array();\n  $closest_elements[0] = $numbers[0];\n  $closest_elements[1]\
    \ = $numbers[1];\n  for ($i = 0; $i < count($numbers); $i++) {\n    for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n      if (abs($numbers[$i] - $numbers[$j])\
    \ < abs($closest_elements[0] - $closest_elements[1])) {\n        $closest_elements[0]\
    \ = $numbers[$i];\n        $closest_elements[1] = $numbers[$j];\n      }\n   \
    \ }\n  }\n  return $closest_elements;\n}\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]));\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp955_hz1u.php:31\n\
    Stack trace:\n#0 /tmp/tmp955_hz1u.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp955_hz1u.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_two = array($numbers[0], $numbers[1]);\n    $min_gap = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 1; $i < count($numbers) - 1; $i++) {\n      \
    \  $gap = abs($numbers[$i] - $numbers[$i + 1]);\n        if ($gap < $min_gap)\
    \ {\n            $min_gap = $gap;\n            $closest_two = array($numbers[$i],\
    \ $numbers[$i + 1]);\n        }\n    }\n    return $closest_two;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n\n$closest_two = find_closest_elements($numbers);\n\
    echo \"(\" . $closest_two[0] . \", \" . $closest_two[1] . \")\";\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(1, 2)\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh35if31.php:31\n\
    Stack trace:\n#0 /tmp/tmpxh35if31.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxh35if31.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $count = count($numbers);\n    if ($count < 2) {\n        return null;\n\
    \    }\n    $closest_elements = array($numbers[0], $numbers[1]);\n    $closest_diff\
    \ = abs($numbers[0] - $numbers[1]);\n    for ($i = 0; $i < $count; $i++) {\n \
    \       for ($j = $i + 1; $j < $count; $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $closest_diff) {\n               \
    \ $closest_diff = $diff;\n                $closest_elements = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $closest_elements;\n\
    }\n\n$test = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nvar_dump(find_closest_elements($test));\n\
    $test = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\nvar_dump(find_closest_elements($test));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(2)\n  [1]=>\n  float(2.2)\n}\narray(2) {\n\
    \  [0]=>\n  float(2)\n  [1]=>\n  float(2)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpokrzm1ch.php:37\nStack trace:\n#0 /tmp/tmpokrzm1ch.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpokrzm1ch.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n   \
    \     for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $closest[0] || count($closest) ==\
    \ 0) {\n                $closest = array($diff, $numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return array($closest[1], $closest[2]);\n\
    }\n\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpl36mntjf.php:28\nStack trace:\n#0 /tmp/tmpl36mntjf.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpl36mntjf.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    // Sorting the numbers\n    sort($numbers);\n    $closest = [$numbers[0],\
    \ $numbers[1]];\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    // Finding\
    \ the closest two numbers\n    for ($i = 0; $i < count($numbers); $i++) {\n  \
    \      for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $closest = [$numbers[$i], $numbers[$j]];\n       \
    \     }\n        }\n    }\n    return $closest;\n}\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    // your code here\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6zs4_nw5.php:16\n\
    Stack trace:\n#0 /tmp/tmp6zs4_nw5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp6zs4_nw5.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $smallestDiff = INF;\n  $closest_elements = [];\n  foreach ($numbers as $i\
    \ => $x) {\n    foreach ($numbers as $j => $y) {\n      if ($j <= $i) continue;\n\
    \      $diff = abs($x - $y);\n      if ($diff < $smallestDiff) {\n        $smallestDiff\
    \ = $diff;\n        $closest_elements = [$x, $y];\n      }\n    }\n  }\n  sort($closest_elements);\n\
    \  return $closest_elements;\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $min_diff = 0;\n  $result = array();\n  $numbers_length = count($numbers);\n\
    \  for ($i = 0; $i < $numbers_length; $i++) {\n    for ($j = $i + 1; $j < $numbers_length;\
    \ $j++) {\n      $diff = abs($numbers[$i] - $numbers[$j]);\n      if ($i == 0\
    \ && $j == 1) {\n        $min_diff = $diff;\n        $result = array($numbers[$i],\
    \ $numbers[$j]);\n      } elseif ($diff < $min_diff) {\n        $min_diff = $diff;\n\
    \        $result = array($numbers[$i], $numbers[$j]);\n      }\n    }\n  }\n \
    \ return $result;\n}\n\n$result = find_closest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2));\nprint_r($result);\necho PHP_EOL;\n$result = find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0));\nprint_r($result);\necho PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nArray\n(\n    [0] => 2\n \
    \   [1] => 2\n)\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpflqm6zle.php:39\n\
    Stack trace:\n#0 /tmp/tmpflqm6zle.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpflqm6zle.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  // This is the current closest.\n  $current_closest = abs($numbers[0] - $numbers[1]);\n\
    \  $current_closest_pair = array($numbers[0], $numbers[1]);\n  // Now we have\
    \ to check all the pairs.\n  for ($i = 0; $i < count($numbers) - 1; $i++) {\n\
    \    for ($j = $i + 1; $j < count($numbers); $j++) {\n      $distance = abs($numbers[$i]\
    \ - $numbers[$j]);\n      if ($distance < $current_closest) {\n        $current_closest\
    \ = $distance;\n        $current_closest_pair = array($numbers[$i], $numbers[$j]);\n\
    \      }\n    }\n  }\n  return $current_closest_pair;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_pair = find_closest_elements($numbers);\n\
    echo(\"(\" . $closest_pair[0] . \", \" . $closest_pair[1] . \")\");\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(2, 2.2)\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjq8o5v3.php:35\n\
    Stack trace:\n#0 /tmp/tmpmjq8o5v3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmjq8o5v3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $smallestDiff = INF;\n  $closestNumbers = [null, null];\n  for ($i = 0; $i\
    \ < count($numbers); $i++) {\n    for ($j = $i + 1; $j < count($numbers); $j++)\
    \ {\n      $diff = abs($numbers[$i] - $numbers[$j]);\n      if ($diff < $smallestDiff)\
    \ {\n        $smallestDiff = $diff;\n        $closestNumbers = [$numbers[$i],\
    \ $numbers[$j]];\n      }\n    }\n  }\n  return $closestNumbers;\n}\n\necho \"\
    find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\\n\";\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\necho \"\\n\";\necho \"find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\\n\";\nprint_r(find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0]));\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\nArray\n(\n    [0]\
    \ => 2\n    [1] => 2.2\n)\n\nfind_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n\
    Array\n(\n    [0] => 2\n    [1] => 2\n)\n\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpo_rk93bd.php:35\nStack trace:\n#0 /tmp/tmpo_rk93bd.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo_rk93bd.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \tsort($numbers);\n\n\t// make list of differences between elements\n\t$diffs\
    \ = array();\n\tfor ($i = 0; $i < sizeof($numbers) - 1; $i++) {\n\t\t$diffs[]\
    \ = abs($numbers[$i] - $numbers[$i + 1]);\n\t}\n\n\t// find minimum difference\
    \ in list\n\t$min_diff = min($diffs);\n\n\t// find position of minimum difference\n\
    \t$min_pos = array_search($min_diff, $diffs);\n\n\t// find elements with closest\
    \ difference\n\t$closest_elements = array();\n\t$closest_elements[] = $numbers[$min_pos];\n\
    \t$closest_elements[] = $numbers[$min_pos + 1];\n\n\treturn $closest_elements;\n\
    }\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $n = count($numbers);\n    $closest = [$numbers[0], $numbers[1]];\n    $smallest\
    \ = abs($numbers[0] - $numbers[1]);\n    for ($i = 0; $i < $n - 1; $i++) {\n \
    \       $curr = abs($numbers[$i] - $numbers[$i + 1]);\n        if ($curr < $smallest)\
    \ {\n            $smallest = $curr;\n            $closest = [$numbers[$i], $numbers[$i\
    \ + 1]];\n        }\n    }\n    sort($closest);\n    return $closest;\n}\n\nvar_dump(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nvar_dump(find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(1)\n  [1]=>\n  float(2)\n}\narray(2) {\n \
    \ [0]=>\n  float(1)\n  [1]=>\n  float(2)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpccqccbzv.php:31\nStack trace:\n#0 /tmp/tmpccqccbzv.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpccqccbzv.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallest = 0;\n    $larger = 0;\n    $closest = $numbers[1] - $numbers[0];\n\
    \    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++) {\n        for\
    \ ($j = $i + 1; $j < $len; $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $closest) {\n                $closest = $diff;\n    \
    \            $smallest = $numbers[$i];\n                $larger = $numbers[$j];\n\
    \            }\n        }\n    }\n    return array($smallest, $larger);\n}\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__sqtxet.php:31\n\
    Stack trace:\n#0 /tmp/tmp__sqtxet.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp__sqtxet.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $minimum = -1;\n    $pair = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $x = $numbers[$i];\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $y = $numbers[$j];\n            $diff = abs($x - $y);\n\
    \            if ($minimum == -1 || $diff < $minimum) {\n                $minimum\
    \ = $diff;\n                $pair = array($x, $y);\n            }\n        }\n\
    \    }\n    return $pair;\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ev_ay6m.php:30\n\
    Stack trace:\n#0 /tmp/tmp6ev_ay6m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6ev_ay6m.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $curr_diff = floatval(abs($numbers[0] - $numbers[1]));\n    $res = [$numbers[0],\
    \ $numbers[1]];\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = floatval(abs($numbers[$i]\
    \ - $numbers[$j]));\n            if ($diff < $curr_diff) {\n                $curr_diff\
    \ = $diff;\n                $res = [$numbers[$i], $numbers[$j]];\n           \
    \ }\n        }\n    }\n    sort($res);\n    return $res;\n}\n$numbers = [1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2];\nprint_r(find_closest_elements($numbers));\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $first = $numbers[0];\n  $second = null;\n  $diff = null;\n  for ($i = 1; $i\
    \ < count($numbers); $i++) {\n    $current_diff = abs($numbers[$i] - $first);\n\
    \    if ($current_diff < $diff || $diff === null) {\n      $diff = $current_diff;\n\
    \      $second = $numbers[$i];\n    }\n  }\n  return $first < $second ? [$first,\
    \ $second] : [$second, $first];\n}\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomibo2on.php:26\n\
    Stack trace:\n#0 /tmp/tmpomibo2on.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpomibo2on.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min = INF;\n    $pair = null;\n    for ($i = 0; $i < count($numbers) - 1;\
    \ $i++) {\n        $distance = abs($numbers[$i] - $numbers[$i + 1]);\n       \
    \ if ($distance < $min) {\n            $min = $distance;\n            $pair =\
    \ [$numbers[$i], $numbers[$i + 1]];\n        }\n    }\n    sort($pair);\n    return\
    \ $pair;\n}\necho implode(', ', find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1, 2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqfwuuxn.php:28\n\
    Stack trace:\n#0 /tmp/tmpgqfwuuxn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgqfwuuxn.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $abs_diff = abs($numbers[0] - $numbers[1]);\n    $closest_elements = [$numbers[0],\
    \ $numbers[1]];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            $new_abs_diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($new_abs_diff < $abs_diff)\
    \ {\n                $abs_diff = $new_abs_diff;\n                $closest_elements\
    \ = [$numbers[$i], $numbers[$j]];\n            }\n        }\n    }\n    if ($closest_elements[0]\
    \ > $closest_elements[1]) {\n        $temp = $closest_elements[0];\n        $closest_elements[0]\
    \ = $closest_elements[1];\n        $closest_elements[1] = $temp;\n    }\n    return\
    \ $closest_elements;\n}\n\n$list = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\n$list2 = [1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0];\nprint_r(find_closest_elements($list));\nprint_r(find_closest_elements($list2));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) == 2) {\n        return array($numbers[0], $numbers[1]);\n\
    \    }\n    sort($numbers);\n    $min_diff = $numbers[1] - $numbers[0];\n    $a\
    \ = $numbers[0];\n    $b = $numbers[1];\n    for ($i = 1; $i < count($numbers)\
    \ - 1; $i++) {\n        $diff = $numbers[$i + 1] - $numbers[$i];\n        if ($diff\
    \ < $min_diff) {\n            $min_diff = $diff;\n            $a = $numbers[$i];\n\
    \            $b = $numbers[$i + 1];\n        }\n    }\n    return array($a, $b);\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) < 2) {\n        throw new InvalidArgumentException(\"\
    Input must have at least two elements\");\n    }\n    $minimum = $numbers[0];\n\
    \    $maximum = $numbers[0];\n    $minimum_found = False;\n    $maximum_found\
    \ = False;\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $max_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        if\
    \ (!$minimum_found) {\n            if ($numbers[$i] < $minimum) {\n          \
    \      $minimum = $numbers[$i];\n            }\n            if ($numbers[$i] ==\
    \ $minimum) {\n                $minimum_found = True;\n            }\n       \
    \ }\n        if (!$maximum_found) {\n            if ($numbers[$i] > $maximum)\
    \ {\n                $maximum = $numbers[$i];\n            }\n            if ($numbers[$i]\
    \ == $maximum) {\n                $maximum_found = True;\n            }\n    \
    \    }\n        if ($minimum_found && $maximum_found) {\n            break;\n\
    \        }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $minimum) {\n            if (abs($numbers[$i] - $minimum) <\
    \ $min_diff) {\n                $min_diff = abs($numbers[$i] - $minimum);\n  \
    \          }\n        }\n        if ($numbers[$i] > $maximum) {\n            if\
    \ (abs($numbers[$i] - $maximum) < $max_diff) {\n                $max_diff = abs($numbers[$i]\
    \ - $maximum);\n            }\n        }\n    }\n    if ($min_diff > $max_diff)\
    \ {\n        if ($minimum > $maximum) {\n            return array($maximum, $minimum);\n\
    \        } else {\n            return array($minimum, $maximum);\n        }\n\
    \    } else {\n        if ($minimum > $\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo9cmare7.php on line 59\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    sort($numbers);\n    $minDiff = INF;\n    $closest = [0, 0];\n    $len =\
    \ count($numbers);\n    for ($i = 0; $i < $len - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $minDiff) {\n            $minDiff\
    \ = $diff;\n            $closest = [$numbers[$i], $numbers[$i + 1]];\n       \
    \ }\n    }\n    return $closest;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_elements = array();\n    $closest_elements_diff = $numbers[1] -\
    \ $numbers[0];\n    $elements_count = count($numbers);\n    for ($i = 0; $i <\
    \ $elements_count; $i++) {\n        for ($j = $i + 1; $j < $elements_count; $j++)\
    \ {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff\
    \ < $closest_elements_diff) {\n                $closest_elements_diff = $diff;\n\
    \                $closest_elements = array($numbers[$i], $numbers[$j]);\n    \
    \        }\n        }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(\n\
    \    array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2),\n    array(1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0)\n);\n\nforeach ($numbers as $number) {\n    echo \"(\" . join(\", \", find_closest_elements($number))\
    \ . \")<br>\";\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "(2, 2.2)<br>(2, 2)<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp0kdugs_e.php:38\nStack trace:\n#0 /tmp/tmp0kdugs_e.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0kdugs_e.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (!count($numbers)) {\n        return false;\n    }\n    sort($numbers);\n\
    \    $best_numbers = array_slice($numbers, 0, 2);\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        $current_numbers = array_slice($numbers, $i, 2);\n   \
    \     if (abs($current_numbers[0] - $current_numbers[1]) < abs($best_numbers[0]\
    \ - $best_numbers[1])) {\n            $best_numbers = $current_numbers;\n    \
    \    }\n    }\n    return $best_numbers;\n}\n$data = array(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2), array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0));\nforeach ($data as $numbers)\
    \ {\n    print_r(find_closest_elements($numbers));\n}\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_diff = INF;\n    $closest_pair = null;\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n    \
    \        $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min_diff)\
    \ {\n                $min_diff = $diff;\n                $closest_pair = [$numbers[$i],\
    \ $numbers[$j]];\n            }\n        }\n    }\n    return $closest_pair;\n\
    }\n\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpvfxwyic_.php:30\nStack trace:\n#0 /tmp/tmpvfxwyic_.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvfxwyic_.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_distance = PHP_INT_MAX;\n\
    \    $min_index = 0;\n    $max_index = 0;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($min > $numbers[$i]) {\n            $min = $numbers[$i];\n\
    \            $min_index = $i;\n        }\n        if ($max < $numbers[$i]) {\n\
    \            $max = $numbers[$i];\n            $max_index = $i;\n        }\n \
    \       if (abs($numbers[$i] - $numbers[$i + 1]) < $min_distance) {\n        \
    \    $min_distance = abs($numbers[$i] - $numbers[$i + 1]);\n            $min_index\
    \ = $i;\n            $max_index = $i + 1;\n        }\n    }\n    return array($numbers[$min_index],\
    \ $numbers[$max_index]);\n}\n\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 5\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpny7d6axj.php:39\n\
    Stack trace:\n#0 /tmp/tmpny7d6axj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpny7d6axj.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min = 99999;\n    $pair = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = 0; $j < count($numbers); $j++) {\n            if\
    \ ($j == $i) {\n                continue;\n            }\n            $abs_diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($abs_diff < $min) {\n \
    \               $min = $abs_diff;\n                $pair = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $pair;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0p29wbf.php:32\n\
    Stack trace:\n#0 /tmp/tmpd0p29wbf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd0p29wbf.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $length = count($numbers);\n    $min = INFINITY;\n    $min_pair = [$numbers[0],\
    \ $numbers[1]];\n    for ($i = 0; $i < $length - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $min) {\n            $min = $diff;\n\
    \            $min_pair = [$numbers[$i], $numbers[$i + 1]];\n        }\n    }\n\
    \    return $min_pair;\n}\n\nvar_dump(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]));\nvar_dump(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: Use of undefined constant INFINITY - assumed 'INFINITY' (this\
    \ will throw an Error in a future version of PHP) in /tmp/tmpzj2nj9jn.php on line\
    \ 10\narray(2) {\n  [0]=>\n  float(1)\n  [1]=>\n  float(2)\n}\n\nWarning: Use\
    \ of undefined constant INFINITY - assumed 'INFINITY' (this will throw an Error\
    \ in a future version of PHP) in /tmp/tmpzj2nj9jn.php on line 10\narray(2) {\n\
    \  [0]=>\n  float(1)\n  [1]=>\n  float(2)\n}\n\nWarning: Use of undefined constant\
    \ INFINITY - assumed 'INFINITY' (this will throw an Error in a future version\
    \ of PHP) in /tmp/tmpzj2nj9jn.php on line 10\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzj2nj9jn.php:29\nStack trace:\n#0 /tmp/tmpzj2nj9jn.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzj2nj9jn.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $cur_min = null;\n    $min_pair = array();\n    sort($numbers);\n    for\
    \ ($i = 0; $i < count($numbers) - 1; $i++) {\n        $dist = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($cur_min === null || $dist < $cur_min) {\n\
    \            $cur_min = $dist;\n            $min_pair = array($numbers[$i], $numbers[$i\
    \ + 1]);\n        }\n    }\n    return $min_pair;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$min_pair = find_closest_elements($numbers);\necho\
    \ \"Smallest number pair: $min_pair[0], $min_pair[1]\";\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'Smallest number pair: 2, 2.2'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $smallest = $numbers[0];\n  $smallest_distance = NULL;\n  $largest = $numbers[0];\n\
    \  $largest_distance = NULL;\n  $smallest_key = 0;\n  $largest_key = 0;\n  $array_count\
    \ = count($numbers);\n  for ($i = 0; $i < $array_count; $i++) {\n    if ($numbers[$i]\
    \ < $smallest) {\n      $smallest = $numbers[$i];\n      $smallest_key = $i;\n\
    \    }\n    if ($numbers[$i] > $largest) {\n      $largest = $numbers[$i];\n \
    \     $largest_key = $i;\n    }\n  }\n  for ($i = 0; $i < $array_count; $i++)\
    \ {\n    if ($i != $smallest_key) {\n      $current_distance = abs($smallest -\
    \ $numbers[$i]);\n      if (!isset($smallest_distance) || $current_distance <\
    \ $smallest_distance) {\n        $smallest_distance = $current_distance;\n   \
    \   }\n    }\n    if ($i != $largest_key) {\n      $current_distance = abs($largest\
    \ - $numbers[$i]);\n      if (!isset($largest_distance) || $current_distance <\
    \ $largest_distance) {\n        $largest_distance = $current_distance;\n     \
    \ }\n    }\n  }\n  if ($smallest_distance < $largest_distance) {\n    $result\
    \ = array();\n    $result[0] = $smallest;\n    $result[1] = $smallest + $smallest_distance;\n\
    \    return $result;\n  }\n  else {\n    $result = array();\n    $result[0] =\
    \ $largest - $largest_distance;\n    $result[1] = $largest;\n    return $result;\n\
    \  }\n}\necho \"The smallest difference is between \" . find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])[0] . \" and \" . find_\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp15v3f211.php on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    // I guess you should use 'foreach' instead of 'for', or even use this\n\
    \    // 'array_reduce' thing below. But I decided to write a 'for' loop, because\n\
    \    // I wanted to.\n    $length = count($numbers);\n    $min_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    $closest_elements = array($numbers[0], $numbers[1]);\n\
    \    for ($i = 0; $i < $length - 1; $i++) {\n        for ($j = $i + 1; $j < $length;\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $min_diff) {\n                $min_diff = $diff;\n             \
    \   $closest_elements = array($numbers[$i], $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest_elements;\n}\n\necho \"Solution 1: \";\n\
    $x = find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]);\nprint_r($x);\necho\
    \ \"\\n\";\necho \"Solution 2: \";\n$x = find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0]);\nprint_r($x);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Solution 1: Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nSolution 2: Array\n\
    (\n    [0] => 2\n    [1] => 2\n)\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpn5xo7f8c.php:42\nStack trace:\n#0 /tmp/tmpn5xo7f8c.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpn5xo7f8c.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    // find the smallest difference between two numbers in the list\n    $smallest_difference\
    \ = $numbers[1] - $numbers[0];\n    $smallest_numbers = [];\n    // loop through\
    \ each number and the next\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n\
    \        // calculate the difference between each number and the next\n      \
    \  $difference = $numbers[$i + 1] - $numbers[$i];\n        // if the difference\
    \ is smaller than the smallest difference, save these numbers as the new closest\n\
    \        if ($difference < $smallest_difference) {\n            $smallest_difference\
    \ = $difference;\n            $smallest_numbers = [$numbers[$i], $numbers[$i +\
    \ 1]];\n        }\n    }\n    // return the smallest numbers\n    return $smallest_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqque_yoi.php:31\n\
    Stack trace:\n#0 /tmp/tmpqque_yoi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqque_yoi.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_numbers = [PHP_INT_MAX, PHP_INT_MAX];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $current_closest_numbers = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($current_closest_numbers < abs($closest_numbers[0] - $closest_numbers[1]))\
    \ {\n                $closest_numbers = [$numbers[$i], $numbers[$j]];\n      \
    \      }\n        }\n    }\n    return $closest_numbers;\n}\n\n$numbers = [1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2];\n\necho (find_closest_elements($numbers)[0] . ', '\
    \ . find_closest_elements($numbers)[1]);\nfunction candidate(...$args) {\n   \
    \ return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "9223372036854775807, 9223372036854775807\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpjntlfrx6.php:29\nStack trace:\n#0 /tmp/tmpjntlfrx6.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjntlfrx6.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    if (count($numbers) < 2) {\n        return null;\n    }\n    $differences\
    \ = array();\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        $differences[]\
    \ = abs($numbers[$i] - $numbers[$i + 1]);\n    }\n    $minDifference = min($differences);\n\
    \    for ($i = 0; $i < count($differences); $i++) {\n        if ($differences[$i]\
    \ == $minDifference) {\n            return array($numbers[$i], $numbers[$i + 1]);\n\
    \        }\n    }\n}\n$testArray = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$testArray2\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\necho json_encode(find_closest_elements($testArray))\
    \ . PHP_EOL;\necho json_encode(find_closest_elements($testArray2)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "[1,2]\n[1,2]\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrm3k4yd.php:33\n\
    Stack trace:\n#0 /tmp/tmpkrm3k4yd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkrm3k4yd.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_distance = false;\n    $closest_numbers = array();\n    $last_number\
    \ = false;\n    foreach ($numbers as $number) {\n        if ($last_number ===\
    \ false) {\n            $last_number = $number;\n            continue;\n     \
    \   }\n        $distance = abs($number - $last_number);\n        if ($closest_distance\
    \ === false || $distance < $closest_distance) {\n            $closest_distance\
    \ = $distance;\n            $closest_numbers = array($last_number, $number);\n\
    \        }\n        $last_number = $number;\n    }\n    return $closest_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnurbo2jw.php:33\n\
    Stack trace:\n#0 /tmp/tmpnurbo2jw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnurbo2jw.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$elements = [];\n\t$count = count($numbers);\n\tif ($count > 1) {\n\t\t$first_element\
    \ = $numbers[0];\n\t\t$second_element = $numbers[1];\n\t\t$diff = abs($first_element\
    \ - $second_element);\n\t\tfor ($i = 0; $i < $count; $i++) {\n\t\t\tfor ($j =\
    \ $i + 1; $j < $count; $j++) {\n\t\t\t\t$diff_1 = abs($numbers[$i] - $numbers[$j]);\n\
    \t\t\t\tif ($diff_1 < $diff) {\n\t\t\t\t\t$diff = $diff_1;\n\t\t\t\t\t$first_element\
    \ = $numbers[$i];\n\t\t\t\t\t$second_element = $numbers[$j];\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t\tif ($first_element > $second_element) {\n\t\t\t$elements = [$second_element,\
    \ $first_element];\n\t\t} else {\n\t\t\t$elements = [$first_element, $second_element];\n\
    \t\t}\n\t}\n\treturn $elements;\n}\n\n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\n\
    $elements = find_closest_elements($numbers);\nif (count($elements) > 0) {\n\t\
    echo \"(\" . $elements[0] . \", \" . $elements[1] . \")\";\n} else {\n\techo \"\
    No elements!\";\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: (2, 2.2)
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $diff = max($numbers) - min($numbers);\n  $result = [min($numbers), max($numbers)];\n\
    \  foreach ($numbers as $index => $number) {\n    if ($index + 1 >= count($numbers))\
    \ {\n      continue;\n    }\n    $next = $numbers[$index + 1];\n    $next_diff\
    \ = abs($number - $next);\n    if ($next_diff < $diff) {\n      $diff = $next_diff;\n\
    \      $result = [$number, $next];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphh8k3_hz.php:31\n\
    Stack trace:\n#0 /tmp/tmphh8k3_hz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphh8k3_hz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min = array_shift($numbers);\n    $max = array_shift($numbers);\n    $secondMin\
    \ = $min;\n    $secondMax = $max;\n    foreach ($numbers as $number) {\n     \
    \   if ($number < $min) {\n            $secondMin = $min;\n            $min =\
    \ $number;\n        } elseif ($number < $secondMin) {\n            $secondMin\
    \ = $number;\n        } elseif ($number > $max) {\n            $secondMax = $max;\n\
    \            $max = $number;\n        } elseif ($number > $secondMax) {\n    \
    \        $secondMax = $number;\n        }\n    }\n    if ($min == $secondMin &&\
    \ $max == $secondMax) {\n        return array($min, $max);\n    }\n    $d1 = $max\
    \ - $min;\n    $d2 = $secondMax - $secondMin;\n    if ($d1 < $d2) {\n        return\
    \ array($min, $max);\n    } else {\n        return array($secondMin, $secondMax);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9wpx3gf.php:42\n\
    Stack trace:\n#0 /tmp/tmpi9wpx3gf.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpi9wpx3gf.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $len = count($numbers);\n    $d = -1;\n    $i = 0;\n    $j = 0;\n    $result\
    \ = [];\n    while ($i < $len && $j < $len) {\n        $k = $numbers[$j] - $numbers[$i];\n\
    \        if ($d == -1 || abs($k) < $d) {\n            $d = abs($k);\n        \
    \    $result = [$numbers[$i], $numbers[$j]];\n        }\n        if ($i == $j\
    \ - 1) {\n            $j++;\n        } else {\n            $i++;\n        }\n\
    \    }\n    return $result;\n}\n\n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\n\
    echo \"find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) = \";\nvar_dump(find_closest_elements($numbers));\n\
    \n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0, 2.0];\necho \"find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]) = \";\nvar_dump(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) = array(2) {\n  [0]=>\n\
    \  float(1)\n  [1]=>\n  float(1)\n}\nfind_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]) = array(2) {\n  [0]=>\n  float(1)\n  [1]=>\n  float(1)\n}\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpmi_n_8xa.php:41\nStack trace:\n\
    #0 /tmp/tmpmi_n_8xa.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmi_n_8xa.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$closest = array();\n\t$smallest = null;\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++) {\n\t\t\t$diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($smallest === null || $diff < $smallest)\
    \ {\n\t\t\t\t$smallest = $diff;\n\t\t\t\t$closest = array($numbers[$i], $numbers[$j]);\n\
    \t\t\t}\n\t\t}\n\t}\n\tsort($closest);\n\treturn $closest;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $closest = [$numbers[0], $numbers[1]];\n  $closest_distance = abs($numbers[0]\
    \ - $numbers[1]);\n  for ($i = 0; $i < count($numbers); $i++) {\n    for ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n      $distance = abs($numbers[$i] -\
    \ $numbers[$j]);\n      if ($distance < $closest_distance) {\n        $closest\
    \ = [$numbers[$i], $numbers[$j]];\n        $closest_distance = $distance;\n  \
    \    }\n    }\n  }\n  return $closest;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgm687euv.php:29\n\
    Stack trace:\n#0 /tmp/tmpgm687euv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgm687euv.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $differences = array();\n  $number_length = count($numbers);\n  for ($i = 0;\
    \ $i < $number_length; $i++) {\n    for ($j = 0; $j < $number_length; $j++) {\n\
    \      if ($i == $j) {\n        $differences[$i][$j] = null;\n      } else {\n\
    \        $differences[$i][$j] = abs($numbers[$i] - $numbers[$j]);\n      }\n \
    \   }\n  }\n  $pairs = array();\n  for ($row = 0; $row < $number_length; $row++)\
    \ {\n    $minimum = min($differences[$row]);\n    for ($column = 0; $column <\
    \ $number_length; $column++) {\n      if ($differences[$row][$column] == $minimum)\
    \ {\n        $pairs[] = array($numbers[$row], $numbers[$column]);\n      }\n \
    \   }\n  }\n  $smallest_pair = $pairs[0];\n  foreach ($pairs as $pair) {\n   \
    \ if ($pair[0] < $smallest_pair[0]) {\n      $smallest_pair = $pair;\n    }\n\
    \  }\n  return $smallest_pair;\n}\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtp290li.php:42\n\
    Stack trace:\n#0 /tmp/tmpwtp290li.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpwtp290li.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $length = count($numbers);\n    if ($length == 2) {\n        return array($numbers[0],\
    \ $numbers[1]);\n    }\n    $min = $numbers[1] - $numbers[0];\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 1; $i < $length - 1; $i++) {\n        $current\
    \ = $numbers[$i + 1] - $numbers[$i];\n        if ($current < $min) {\n       \
    \     $min = $current;\n            $result = array($numbers[$i], $numbers[$i\
    \ + 1]);\n        }\n    }\n    return $result;\n}\n\nvar_dump(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nvar_dump(find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(5)\n  [1]=>\n  float(2.2)\n}\narray(2) {\n\
    \  [0]=>\n  float(5)\n  [1]=>\n  float(2)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmppibiad5v.php:32\nStack trace:\n#0 /tmp/tmppibiad5v.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppibiad5v.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallest_difference = 0;\n    $closest_pair = array();\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($difference < $smallest_difference || $i == 0) {\n               \
    \ $smallest_difference = $difference;\n                $closest_pair = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_pair);\n\
    \    return $closest_pair;\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  // Your code here.\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnq05gge.php:16\n\
    Stack trace:\n#0 /tmp/tmpxnq05gge.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxnq05gge.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $numbers = array_unique($numbers);\n  sort($numbers);\n  $difference = null;\n\
    \  $closest = [];\n  foreach($numbers as $index => $number) {\n    if ($index\
    \ == 0) {\n      $difference = abs($number - $numbers[$index + 1]);\n      $closest\
    \ = [$number, $numbers[$index + 1]];\n    } else {\n      $next = abs($number\
    \ - $numbers[$index + 1]);\n      if ($next <= $difference) {\n        $difference\
    \ = $next;\n        $closest = [$number, $numbers[$index + 1]];\n      }\n   \
    \ }\n  }\n  return $closest;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuyv_up4g.php:36\n\
    Stack trace:\n#0 /tmp/tmpuyv_up4g.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuyv_up4g.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $first = array_shift($numbers);\n    $closest = array_reduce($numbers, function($closest,\
    \ $number) use ($first) {\n        if (abs($number - $first) < abs($closest[0]\
    \ - $closest[1])) {\n            return array($first, $number);\n        } else\
    \ {\n            return $closest;\n        }\n    }, array($first, array_shift($numbers)));\n\
    \    if ($closest[0] > $closest[1]) {\n        list($closest[0], $closest[1])\
    \ = array($closest[1], $closest[0]);\n    }\n    return $closest;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmg1b4qb.php:28\n\
    Stack trace:\n#0 /tmp/tmprmg1b4qb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprmg1b4qb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    sort($numbers);\n    $length = count($numbers);\n    $diff = abs($numbers[0]\
    \ - $numbers[1]);\n    $closest = array($numbers[0], $numbers[1]);\n    for ($i\
    \ = 1; $i < $length; $i++) {\n        $cur_diff = abs($numbers[$i] - $numbers[$i\
    \ + 1]);\n        if ($cur_diff < $diff) {\n            $diff = $cur_diff;\n \
    \           $closest = array($numbers[$i], $numbers[$i + 1]);\n        }\n   \
    \ }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n\
    print_r(find_closest_elements($numbers));\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0);\nprint_r(find_closest_elements($numbers));\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $min = $numbers[0];\n  $max = $numbers[0];\n  $num = count($numbers);\n  for\
    \ ($i = 1; $i < $num; $i++) {\n    if ($numbers[$i] < $min) {\n      $min = $numbers[$i];\n\
    \    }\n    if ($numbers[$i] > $max) {\n      $max = $numbers[$i];\n    }\n  }\n\
    \  if ($min == $max) {\n    return $min;\n  }\n  return array($min, $max);\n}\n\
    \nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 5\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamzfydh1.php:33\n\
    Stack trace:\n#0 /tmp/tmpamzfydh1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpamzfydh1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $a = 0;\n    $b = 1;\n    $diff = $numbers[$b] - $numbers[$a];\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$j] - $numbers[$i]) < $diff) {\n     \
    \           $a = $i;\n                $b = $j;\n                $diff = abs($numbers[$j]\
    \ - $numbers[$i]);\n            }\n        }\n    }\n    if ($numbers[$a] > $numbers[$b])\
    \ {\n        return array($numbers[$b], $numbers[$a]);\n    } else {\n       \
    \ return array($numbers[$a], $numbers[$b]);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $nearest = array(0, 1);\n    $distance = (float) PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $current = abs($numbers[$i] - $numbers[$j]);\n        \
    \    if ($current < $distance) {\n                $distance = $current;\n    \
    \            $nearest = array($i, $j);\n            }\n        }\n    }\n    return\
    \ array($numbers[$nearest[0]], $numbers[$nearest[1]]);\n}\necho implode(', ',\
    \ find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "2, 2.2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8gfrd3pf.php:29\n\
    Stack trace:\n#0 /tmp/tmp8gfrd3pf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8gfrd3pf.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $distance = $numbers[1] - $numbers[0];\n  $first = $numbers[0];\n  $second\
    \ = $numbers[1];\n  for ($i = 0; $i < count($numbers) - 1; $i++) {\n    $new_distance\
    \ = $numbers[$i + 1] - $numbers[$i];\n    if ($new_distance < $distance) {\n \
    \     $distance = $new_distance;\n      $first = $numbers[$i];\n      $second\
    \ = $numbers[$i + 1];\n    }\n  }\n  return [$first, $second];\n}\necho find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])[0] . ' and ' . find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])[1] . ' are the closest numbers. ';\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "5 and 2.2 are the closest numbers. \nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpa6p7fpnb.php:28\nStack trace:\n#0 /tmp/tmpa6p7fpnb.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpa6p7fpnb.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $closest = abs($numbers[0] - $numbers[1]);\n  $i1 = 0;\n  $i2 = 1;\n  $max_index\
    \ = count($numbers) - 1;\n  for ($i = 0; $i < $max_index; $i++) {\n    for ($j\
    \ = $i + 1; $j <= $max_index; $j++) {\n      $current = abs($numbers[$i] - $numbers[$j]);\n\
    \      if ($current < $closest) {\n        $closest = $current;\n        $i1 =\
    \ $i;\n        $i2 = $j;\n      }\n    }\n  }\n  return [$numbers[$i1], $numbers[$i2]];\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxbklf1u.php:32\n\
    Stack trace:\n#0 /tmp/tmpuxbklf1u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuxbklf1u.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_pair = [$numbers[0], $numbers[1]];\n    $min_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $closest_pair = [$numbers[$i], $numbers[$j]];\n  \
    \          }\n        }\n    }\n    return $closest_pair;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqx7zzzlv.php:29\n\
    Stack trace:\n#0 /tmp/tmpqx7zzzlv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqx7zzzlv.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $closest_diff = 0;\n  $closest_elements = null;\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    for ($j = $i + 1; $j < count($numbers); $j++) {\n      $diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n      if ($closest_elements == null || $diff\
    \ < $closest_diff) {\n        $closest_diff = $diff;\n        $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n      }\n    }\n  }\n  return $closest_elements;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28ryviqp.php:29\n\
    Stack trace:\n#0 /tmp/tmp28ryviqp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp28ryviqp.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $numbers_count = count($numbers);\n  $closest_pair = array();\n  $min_gap =\
    \ abs($numbers[0] - $numbers[1]);\n  for ($i = 0; $i < $numbers_count; $i++) {\n\
    \    for ($j = $i + 1; $j < $numbers_count; $j++) {\n      $gap = abs($numbers[$i]\
    \ - $numbers[$j]);\n      if ($gap < $min_gap) {\n        $min_gap = $gap;\n \
    \       $closest_pair = array($numbers[$i], $numbers[$j]);\n      }\n    }\n \
    \ }\n  return $closest_pair;\n}\n\nprint_r(find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdupzm00v.php:32\n\
    Stack trace:\n#0 /tmp/tmpdupzm00v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdupzm00v.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = [PHP_INT_MAX, PHP_INT_MAX];\n    $diff = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $d = abs($numbers[$i] - $numbers[$j]);\n            if\
    \ ($d < $diff) {\n                $diff = $d;\n                $closest = [$numbers[$i],\
    \ $numbers[$j]];\n            }\n        }\n    }\n    return $closest;\n}\n\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6k2qs5w.php:29\n\
    Stack trace:\n#0 /tmp/tmpt6k2qs5w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt6k2qs5w.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $lowest_num = $numbers[0];\n    $lowest_num_index = 0;\n    $lowest_difference\
    \ = $numbers[1] - $numbers[0];\n    $lowest_difference_index = 1;\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        $difference = $numbers[$i] - $lowest_num;\n\
    \        if ($difference < $lowest_difference) {\n            $lowest_difference\
    \ = $difference;\n            $lowest_difference_index = $i;\n        }\n    \
    \    if ($numbers[$i] < $lowest_num) {\n            $lowest_num = $numbers[$i];\n\
    \            $lowest_num_index = $i;\n        }\n    }\n    if ($lowest_num_index\
    \ == $lowest_difference_index) {\n        return array($lowest_num, $lowest_num);\n\
    \    }\n    return array($lowest_num, $numbers[$lowest_difference_index]);\n}\n\
    \nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptyyimkzq.php:35\n\
    Stack trace:\n#0 /tmp/tmptyyimkzq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptyyimkzq.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $min_distance = $numbers[1] - $numbers[0];\n  $min_index = 0;\n  $length =\
    \ count($numbers);\n  for ($i = 1; $i < $length - 1; $i++) {\n    $distance =\
    \ $numbers[$i + 1] - $numbers[$i];\n    if ($distance < $min_distance) {\n   \
    \   $min_distance = $distance;\n      $min_index = $i;\n    }\n  }\n  return array($numbers[$min_index],\
    \ $numbers[$min_index + 1]);\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi4vsf843.php:27\n\
    Stack trace:\n#0 /tmp/tmpi4vsf843.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpi4vsf843.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_diff = PHP_INT_MAX;\n    $closest_elements = array();\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest_elements = array($numbers[$i], $numbers[$j]);\n         \
    \   }\n        }\n    }\n    sort($closest_elements);\n    return $closest_elements;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $length = count($numbers);\n    if($length == 2) {\n        return array($numbers[0],\
    \ $numbers[1]);\n    }\n\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n\
    \    $closest_elements = array($numbers[0], $numbers[1]);\n\n    for($i = 1; $i\
    \ < $length; $i++) {\n        for($j = $i + 1; $j < $length; $j++) {\n       \
    \     $current_diff = abs($numbers[$i] - $numbers[$j]);\n            if($current_diff\
    \ < $closest_diff) {\n                $closest_diff = $current_diff;\n       \
    \         $closest_elements = array($numbers[$i], $numbers[$j]);\n           \
    \ }\n        }\n    }\n\n    return $closest_elements;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\necho \"Input numbers: \";\necho implode(\", \", $numbers);\n\
    echo \"<br>\";\n\n$closest_elements = find_closest_elements($numbers);\necho \"\
    Closest elements: \";\necho implode(\", \", $closest_elements);\necho \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Input numbers: 1, 2, 3, 4, 5, 2.2<br>Closest elements: 2, 2.2<br>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmppo7ee7h7.php:45\nStack trace:\n\
    #0 /tmp/tmppo7ee7h7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmppo7ee7h7.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $first_num = $numbers[0];\n    $second_num = $numbers[1];\n    $diff = abs($first_num\
    \ - $second_num);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $diff) {\n                $first_num = $numbers[$i];\n   \
    \             $second_num = $numbers[$j];\n                $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            }\n        }\n    }\n    return array($first_num,\
    \ $second_num);\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzqlf4d1.php:30\n\
    Stack trace:\n#0 /tmp/tmpnzqlf4d1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnzqlf4d1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_pair = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   if (abs($numbers[$i] - $numbers[$j]) < abs($closest_pair[0] - $closest_pair[1]))\
    \ {\n                $closest_pair = array($numbers[$i], $numbers[$j]);\n    \
    \        }\n        }\n    }\n    return $closest_pair;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0am0w35t.php:26\n\
    Stack trace:\n#0 /tmp/tmp0am0w35t.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0am0w35t.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \tsort($numbers);\n\t$min_diff = $numbers[1] - $numbers[0];\n\t$max_min = $numbers[0];\n\
    \t$min_max = $numbers[1];\n\tfor ($i = 1; $i < count($numbers) - 1; $i++) {\n\t\
    \t$current_diff = $numbers[$i + 1] - $numbers[$i];\n\t\tif ($current_diff < $min_diff)\
    \ {\n\t\t\t$min_diff = $current_diff;\n\t\t\t$max_min = $numbers[$i];\n\t\t\t\
    $min_max = $numbers[$i + 1];\n\t\t}\n\t}\n\treturn array($max_min, $min_max);\n\
    }\n\n$my_array = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($my_array));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $count = count($numbers);\n    $closest = abs($numbers[0] - $numbers[1]);\n\
    \    $num1 = $numbers[0];\n    $num2 = $numbers[1];\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $closest) {\n                $closest = abs($numbers[$i] -\
    \ $numbers[$j]);\n                $num1 = $numbers[$i];\n                $num2\
    \ = $numbers[$j];\n            }\n        }\n    }\n    return array($num1, $num2);\n\
    }\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\
    echo PHP_EOL;\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\nprint_r(find_closest_elements($numbers));\n\
    echo PHP_EOL;\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nArray\n(\n    [0] => 2\n \
    \   [1] => 2\n)\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lao97f7.php:38\n\
    Stack trace:\n#0 /tmp/tmp_lao97f7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_lao97f7.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallest_difference = abs($numbers[0] - $numbers[1]);\n    $smallest_number\
    \ = $numbers[0];\n    $largest_number = $numbers[1];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $difference = abs($numbers[$i] - $numbers[$j]);\n            if ($difference\
    \ < $smallest_difference) {\n                $smallest_difference = $difference;\n\
    \                $smallest_number = $numbers[$i];\n                $largest_number\
    \ = $numbers[$j];\n            }\n        }\n    }\n    return array($smallest_number,\
    \ $largest_number);\n}\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzgdnlfvy.php:31\nStack trace:\n#0 /tmp/tmpzgdnlfvy.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzgdnlfvy.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    sort($numbers);\n    $closest = array_fill(0,2,0);\n    $diff = null;\n \
    \   for ($i = 0; $i < count($numbers) - 1; $i++) {\n        $new_diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff === null || $new_diff < $diff) {\n \
    \           $diff = $new_diff;\n            $closest[0] = $numbers[$i];\n    \
    \        $closest[1] = $numbers[$i + 1];\n        }\n    }\n    return $closest;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $count = count($numbers);\n    if ($count < 2) {\n        return FALSE;\n\
    \    }\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $closest_elements\
    \ = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < $count; $i++) {\n\
    \        for ($j = $i + 1; $j < $count; $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $closest_elements = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    if ($closest_elements[0] > $closest_elements[1])\
    \ {\n        $tmp = $closest_elements[0];\n        $closest_elements[0] = $closest_elements[1];\n\
    \        $closest_elements[1] = $tmp;\n    }\n    return $closest_elements;\n\
    }\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \tsort($numbers);\n\t$smallest = $numbers[0];\n\t$largest = $numbers[1];\n\t$diff\
    \ = $largest - $smallest;\n\tforeach ($numbers as $key => $value) {\n\t\tif ($key\
    \ === 0) {\n\t\t\tcontinue;\n\t\t}\n\t\t$tempDiff = $value - $numbers[$key - 1];\n\
    \t\tif ($tempDiff < $diff) {\n\t\t\t$diff = $tempDiff;\n\t\t\t$smallest = $numbers[$key\
    \ - 1];\n\t\t\t$largest = $value;\n\t\t}\n\t}\n\treturn array($smallest, $largest);\n\
    }\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]));\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    sort($numbers);\n    $diffs = [];\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        $diffs[] = $numbers[$i + 1] - $numbers[$i];\n    }\n \
    \   $index = array_search(min($diffs), $diffs);\n    return [$numbers[$index],\
    \ $numbers[$index + 1]];\n}\n\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $length = count($numbers);\n    $min = abs($numbers[0] - $numbers[1]);\n\
    \    $ret = [$numbers[0], $numbers[1]];\n    for ($i = 0; $i < $length - 1; $i++)\
    \ {\n        for ($j = $i + 1; $j < $length; $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min) {\n                $min = $diff;\n\
    \                $ret = [$numbers[$i], $numbers[$j]];\n            }\n       \
    \ }\n    }\n    return $ret;\n}\n\nprint_r(find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4j2gsrm.php:32\n\
    Stack trace:\n#0 /tmp/tmpq4j2gsrm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpq4j2gsrm.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $len = count($numbers);\n    $min_diff = 99999;\n    $min_a = 0;\n    $min_b\
    \ = 0;\n    for ($i = 0; $i < $len - 1; $i++) {\n        for ($j = $i + 1; $j\
    \ < $len; $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n   \
    \         if ($diff < $min_diff) {\n                $min_diff = $diff;\n     \
    \           $min_a = $numbers[$i];\n                $min_b = $numbers[$j];\n \
    \           }\n        }\n    }\n    return [$min_a, $min_b];\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqi0ebguz.php:32\n\
    Stack trace:\n#0 /tmp/tmpqi0ebguz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqi0ebguz.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min = 10000000;\n    $min_pair = [];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $temp = abs($numbers[$i] - $numbers[$j]);\n            if ($temp < $min) {\n\
    \                $min = $temp;\n                $min_pair = [$numbers[$i], $numbers[$j]];\n\
    \            }\n        }\n    }\n    if ($min_pair[0] > $min_pair[1]) {\n   \
    \     $min_pair = [$min_pair[1], $min_pair[0]];\n    }\n    return $min_pair;\n\
    }\necho \"Finding the closest pair of numbers from a given list...\\n\";\n$numbers\
    \ = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\necho \"Given numbers: \" . implode(\", \"\
    , $numbers) . \"\\n\";\n$output = find_closest_elements($numbers);\necho \"Result:\
    \ \" . implode(\", \", $output) . \"\\n\";\n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0];\necho \"Given numbers: \" . implode(\", \", $numbers) . \"\\n\";\n$output\
    \ = find_closest_elements($numbers);\necho \"Result: \" . implode(\", \", $output)\
    \ . \"\\n\";\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Finding the closest pair of numbers from a given list...\nGiven numbers:\
    \ 1, 2, 3, 4, 5, 2.2\nResult: 2, 2.2\nGiven numbers: 1, 2, 3, 4, 5, 2\nResult:\
    \ 2, 2\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $numbers = array_unique($numbers);\n    $min = $numbers[0];\n    $max = $numbers[0];\n\
    \    $min_distance = null;\n    $elements = array();\n    foreach ($numbers as\
    \ $k => $value) {\n        if ($k == 0) {\n            continue;\n        }\n\
    \        $distance = abs($value - $numbers[$k - 1]);\n        if ($min_distance\
    \ === null || $distance < $min_distance) {\n            $min_distance = $distance;\n\
    \            $elements = array(\n                'from' => $numbers[$k - 1],\n\
    \                'to' => $value\n            );\n        }\n    }\n    return\
    \ $elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$result =\
    \ find_closest_elements($numbers);\nprint_r($result);\necho \"<br/>\";\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n$result = find_closest_elements($numbers);\n\
    print_r($result);\necho \"<br/>\";\n\n$numbers = array(0.0, 1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 6.0, 7.0, 8.0, 9.0, 8.1, 7.1, 6.1, 5.1, 4.1, 3.1, 2.1, 1.1, 0.1);\n$result\
    \ = find_closest_elements($numbers);\nprint_r($result);\necho \"<br/>\";\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [from] => 1\n    [to] => 2\n)\n<br/>Array\n(\n    [from]\
    \ => 1\n    [to] => 2\n)\n<br/>Array\n(\n    [from] => 9\n    [to] => 8.1\n)\n\
    <br/>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7paku8y.php:50\n\
    Stack trace:\n#0 /tmp/tmpn7paku8y.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpn7paku8y.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$closest_elements = array();\n\tforeach ($numbers as $number) {\n\t\tforeach\
    \ ($numbers as $element) {\n\t\t\tif ($number != $element) {\n\t\t\t\t$difference\
    \ = abs($number - $element);\n\t\t\t\tif (!array_key_exists($difference, $closest_elements))\
    \ {\n\t\t\t\t\t$closest_elements[$difference] = array($number, $element);\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\tksort($closest_elements);\n\t$closest_elements =\
    \ array_values($closest_elements);\n\treturn $closest_elements[0];\n}\necho '<pre>';\n\
    print_r(find_closest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)));\necho '</pre>';\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "<pre>\nWarning: array_key_exists(): The first argument should be either\
    \ a string or an integer in /tmp/tmpa7zyjtvm.php on line 14\n\nWarning: array_key_exists():\
    \ The first argument should be either a string or an integer in /tmp/tmpa7zyjtvm.php\
    \ on line 14\n\nWarning: array_key_exists(): The first argument should be either\
    \ a string or an integer in /tmp/tmpa7zyjtvm.php on line 14\n\nWarning: array_key_exists():\
    \ The first argument should be either a string or an integer in /tmp/tmpa7zyjtvm.php\
    \ on line 14\n\nWarning: array_key_exists(): The first argument should be either\
    \ a string or an integer in /tmp/tmpa7zyjtvm.php on line 14\n\nWarning: array_key_exists():\
    \ The first argument should be either a string or an integer in /tmp/tmpa7zyjtvm.php\
    \ on line 14\n\nWarning: array_key_exists(): The first argument should be either\
    \ a string or an integer in /tmp/tmpa7zyjtvm.php on line 14\n\nWarning: array_key_exists():\
    \ The first argument should be either a string or an integer in /tmp/tmpa7zyjtvm.php\
    \ on line 14\n\nWarning: array_key_exists(): The first argument should be either\
    \ a string or an integer in /tmp/tmpa7zyjtvm.php on line 14\n\nWarning: array_key_exists():\
    \ The first argument should be either a string or an integer in /tmp/tmpa7zyjtvm.php\
    \ on line 14\n\nWarning: array_key_exists(): The first argument should be either\
    \ a string or an integer in /tmp/tmpa7zyjtvm.php on line 14\n\nWarning: array_key_exists():\
    \ The first argument should be either a string or an integer in /tmp/tmpa7zyjtvm.php\
    \ on line 14\n\nWarning: array_key_exists(): The first argument should be either\
    \ a string or an integer in /tmp/tmpa7zyjtvm.php on line 14\n\nWarning: array_key_exists():\
    \ The first argument should be either a string or an integer in /tmp/tmpa7zyjtvm.php\
    \ on line 14\n\nWarning: array_key_exists(): The first argument should be either\
    \ a string or an integer in /tmp/tmpa7zyjtvm.php on line 14\n\nWarning: array_key_exists():\
    \ The first argument should be either a string or an integer in /tmp/tmpa7zyjtvm.php\
    \ on line 14\n\nWarning: array_key_exists(): The first argument should be "
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $minDiff = INF;\n    $minPair = array(0, 0);\n    $len = count($numbers);\n\
    \    for ($i = 0; $i < $len - 1; $i++) {\n        for ($j = $i + 1; $j < $len;\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $minDiff) {\n                $minDiff = $diff;\n               \
    \ $minPair = array($numbers[$i], $numbers[$j]);\n            }\n        }\n  \
    \  }\n    return $minPair;\n}\n\nprint_r(find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2)));\nprint_r(find_closest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0)));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7aslqsu.php:32\n\
    Stack trace:\n#0 /tmp/tmpi7aslqsu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi7aslqsu.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $max_diff = abs($numbers[0] - $numbers[1]);\n    $num1 = $numbers[0];\n \
    \   $num2 = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n   \
    \     for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $max_diff) {\n                $max_diff\
    \ = $diff;\n                $num1 = $numbers[$i];\n                $num2 = $numbers[$j];\n\
    \            }\n        }\n    }\n    return \"($num1, $num2)\";\n}\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lsoel0w.php:29\n\
    Stack trace:\n#0 /tmp/tmp_lsoel0w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_lsoel0w.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_2 = array();\n    $smallest_diff = NULL;\n    for ($x = 0; $x <\
    \ count($numbers) - 1; $x++) {\n        for ($y = $x + 1; $y < count($numbers);\
    \ $y++) {\n            $diff = abs($numbers[$x] - $numbers[$y]);\n           \
    \ if ($smallest_diff === NULL || $diff < $smallest_diff) {\n                $smallest_diff\
    \ = $diff;\n                $closest_2 = array($numbers[$x], $numbers[$y]);\n\
    \            }\n        }\n    }\n    sort($closest_2);\n    return $closest_2;\n\
    }\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $a = null;\n    $b = null;\n    $closest = null;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = 0; $j < count($numbers); $j++) {\n            if\
    \ ($i != $j) {\n                $current = abs($numbers[$i] - $numbers[$j]);\n\
    \                if ($closest === null || $current < $closest) {\n           \
    \         $closest = $current;\n                    $a = $numbers[$i];\n     \
    \               $b = $numbers[$j];\n                }\n            }\n       \
    \ }\n    }\n    if ($a > $b) {\n        $temp = $a;\n        $a = $b;\n      \
    \  $b = $temp;\n    }\n    return array($a, $b);\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $length = count($numbers);\n    $diff = abs($numbers[0] - $numbers[1]);\n\
    \    $pair = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $diff) {\n                $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \                $pair = array($numbers[$i], $numbers[$j]);\n            }\n \
    \       }\n    }\n    return $pair;\n}\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uou3i1n.php:28\n\
    Stack trace:\n#0 /tmp/tmp4uou3i1n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4uou3i1n.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$index1=0;\n\t$index2=1;\n\t$dif=$numbers[$index2]-$numbers[$index1];\n\tfor\
    \ ($i=0; $i < count($numbers)-1; $i++) { \n\t\tif ($numbers[$i+1]-$numbers[$i]<$dif)\
    \ {\n\t\t\t$index1=$i;\n\t\t\t$index2=$i+1;\n\t\t\t$dif=$numbers[$index2]-$numbers[$index1];\n\
    \t\t}\n\t}\n\treturn array($numbers[$index1],$numbers[$index2]);\n}\n\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 5\n    [1] => 2.2\n)\nArray\n(\n    [0] => 5\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44sgf6uf.php:29\n\
    Stack trace:\n#0 /tmp/tmp44sgf6uf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp44sgf6uf.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  if (count($numbers) < 2) {\n    return;\n  }\n  $min_diff = PHP_INT_MAX;\n\
    \  $smallest = NULL;\n  $biggest = NULL;\n  $count = count($numbers);\n  for ($i\
    \ = 0; $i < $count; $i++) {\n    for ($j = $i + 1; $j < $count; $j++) {\n    \
    \  $diff = abs($numbers[$i] - $numbers[$j]);\n      if ($diff < $min_diff) {\n\
    \        $min_diff = $diff;\n        $smallest = $numbers[$i];\n        $biggest\
    \ = $numbers[$j];\n      }\n    }\n  }\n  return [$smallest, $biggest];\n}\n\n\
    print_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprz7v_dyc.php:37\n\
    Stack trace:\n#0 /tmp/tmprz7v_dyc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprz7v_dyc.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    assert(count($numbers) >= 2);\n    $closest = NULL;\n    for ($i = 0; $i\
    \ < count($numbers) - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($closest === NULL || $diff < $closest[0]) {\n                $closest =\
    \ array($diff, $numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n\
    \    return array($closest[1], $closest[2]);\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6d_cfdo1.php:28\n\
    Stack trace:\n#0 /tmp/tmp6d_cfdo1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6d_cfdo1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $low = 0;\n  $high = count($numbers) - 1;\n  $diff = $numbers[$high] - $numbers[$low];\n\
    \  while ($low < $high) {\n    if ($numbers[$high] - $numbers[$low] < $diff) {\n\
    \      $diff = $numbers[$high] - $numbers[$low];\n    }\n    $low++;\n    $high--;\n\
    \  }\n  return array($numbers[$low], $numbers[$high]);\n}\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 4\n    [1] => 3\n)\nArray\n(\n    [0] => 4\n    [1]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbkrofpk8.php:28\n\
    Stack trace:\n#0 /tmp/tmpbkrofpk8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbkrofpk8.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_pair = array(0, 1);\n    $smallest_difference = $numbers[1] - $numbers[0];\n\
    \    $numbers_length = count($numbers);\n    if ($numbers_length < 2) {\n    \
    \    return false;\n    }\n    for ($i = 0; $i < $numbers_length; $i++) {\n  \
    \      for ($j = $i + 1; $j < $numbers_length; $j++) {\n            $difference\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($difference < $smallest_difference)\
    \ {\n                $smallest_difference = $difference;\n                $closest_pair\
    \ = array($i, $j);\n            }\n        }\n    }\n    return array($numbers[$closest_pair[0]],\
    \ $numbers[$closest_pair[1]]);\n}\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n\
    $closest_pair = find_closest_elements($numbers);\nprint \"($closest_pair[0], $closest_pair[1])\\\
    n\";\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n$closest_pair = find_closest_elements($numbers);\n\
    print \"($closest_pair[0], $closest_pair[1])\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "(2, 2.2)\n(2, 2)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6a4zcdxt.php:38\n\
    Stack trace:\n#0 /tmp/tmp6a4zcdxt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6a4zcdxt.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $closest_diff = false;\n  $closest_elements = false;\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    for ($j = $i + 1; $j < count($numbers); $j++) {\n      $diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n      if ($closest_diff === false || $diff\
    \ < $closest_diff) {\n        $closest_diff = $diff;\n        $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n      }\n    }\n  }\n  return $closest_elements;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkahgzrmi.php:29\n\
    Stack trace:\n#0 /tmp/tmpkahgzrmi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkahgzrmi.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest_diff = $numbers[1] - $numbers[0];\n    $closest_elements = [$numbers[0],\
    \ $numbers[1]];\n    for ($i = 1; $i < count($numbers) - 1; $i++) {\n        $diff\
    \ = $numbers[$i + 1] - $numbers[$i];\n        if ($diff < $closest_diff) {\n \
    \           $closest_diff = $diff;\n            $closest_elements = [$numbers[$i],\
    \ $numbers[$i + 1]];\n        }\n    }\n    return $closest_elements;\n}\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfk4xnh1n.php:25\n\
    Stack trace:\n#0 /tmp/tmpfk4xnh1n.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpfk4xnh1n.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $length = count($numbers);\n  $diff = NULL;\n  $first_element = NULL;\n  $second_element\
    \ = NULL;\n  for ($i = 0; $i < $length; $i++) {\n    for ($j = $i + 1; $j < $length;\
    \ $j++) {\n      $temp_diff = abs($numbers[$i] - $numbers[$j]);\n      if (!$diff\
    \ || $temp_diff < $diff) {\n        $diff = $temp_diff;\n        $first_element\
    \ = $numbers[$i];\n        $second_element = $numbers[$j];\n      }\n    }\n \
    \ }\n  return \"({$first_element}, {$second_element})\";\n}\n\necho find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]);\necho find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]);\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "(2, 2.2)(3, 4)\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qdfllu1.php:33\n\
    Stack trace:\n#0 /tmp/tmp_qdfllu1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_qdfllu1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_distance = 0;\n    $closest_elements = array();\n    for ($i = 0; $i\
    \ < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $distance = abs($numbers[$i] - $numbers[$j]);\n       \
    \     if ($min_distance == 0 || $distance < $min_distance) {\n               \
    \ $min_distance = $distance;\n                $closest_elements = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $closest_elements;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu4st5ly5.php:29\n\
    Stack trace:\n#0 /tmp/tmpu4st5ly5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu4st5ly5.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $numbers = array_unique($numbers); // remove duplicates\n  sort($numbers);\n\
    \n  $differences = array();\n  for ($i = 0; $i < count($numbers) - 1; $i++) {\n\
    \    $differences[] = abs($numbers[$i] - $numbers[$i + 1]);\n  }\n\n  $min = min($differences);\n\
    \  $min_index = array_search($min, $differences);\n\n  return array($numbers[$min_index],\
    \ $numbers[$min_index + 1]);\n}\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9k_5wtoy.php:30\n\
    Stack trace:\n#0 /tmp/tmp9k_5wtoy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9k_5wtoy.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $smallest = INF;\n  $results = [];\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    for ($j = $i + 1; $j < count($numbers); $j++) {\n      $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n      if ($diff < $smallest) {\n        $smallest = $diff;\n\
    \        $results = [$numbers[$i], $numbers[$j]];\n      }\n    }\n  }\n  sort($results);\n\
    \  return $results;\n}\n\necho find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2]);\necho \"<br>\";\necho find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]);\necho \"<br>\";\necho find_closest_elements([1.0, 3.0, 4.0, 5.0, 2.0]);\n\
    echo \"<br>\";\necho find_closest_elements([1.0, 2.0, 3.0, 2.2]);\necho \"<br>\"\
    ;\necho find_closest_elements([1.0, 2.0, 3.0, 2.0]);\necho \"<br>\";\necho find_closest_elements([1.0,\
    \ 2.0, 3.0, 1.0]);\necho \"<br>\";\necho find_closest_elements([1.0, 2.0, 3.0,\
    \ 1.2]);\necho \"<br>\";\necho find_closest_elements([1.0, 2.0, 3.0, 1.1]);\n\
    echo \"<br>\";\necho find_closest_elements([1.0, 2.0, 3.0, 1.01]);\necho \"<br>\"\
    ;\necho find_closest_elements([1.0, 2.0, 3.0, 1.001]);\necho \"<br>\";\necho find_closest_elements([1.0,\
    \ 2.0,\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpffix83vg.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_distance = $numbers[1] - $numbers[0];\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 1; $i < count($numbers) - 1; $i++) {\n        $this_pair\
    \ = array($numbers[$i], $numbers[$i + 1]);\n        $this_distance = $numbers[$i\
    \ + 1] - $numbers[$i];\n        if ($this_distance < $min_distance) {\n      \
    \      $min_distance = $this_distance;\n            $min_pair = $this_pair;\n\
    \        }\n    }\n    return $min_pair;\n}\n\n$test1 = find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2));\n$test2 = find_closest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0));\n\nprint 'test1 = ' . $test1[0] . \", \" . $test1[1] . \"\\\
    n\";\nprint 'test2 = ' . $test2[0] . \", \" . $test2[1] . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "test1 = 5, 2.2\ntest2 = 5, 2\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmph2podk2v.php:33\nStack trace:\n#0 /tmp/tmph2podk2v.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmph2podk2v.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $result = array();\n    $numbers_length = count($numbers);\n    $minimum_difference\
    \ = NULL;\n    for ($i = 0; $i < $numbers_length; $i++) {\n        for ($j = $i\
    \ + 1; $j < $numbers_length; $j++) {\n            $current_difference = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($minimum_difference === NULL || $current_difference\
    \ < $minimum_difference) {\n                $minimum_difference = $current_difference;\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tiqzvru.php:30\n\
    Stack trace:\n#0 /tmp/tmp7tiqzvru.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7tiqzvru.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    sort($numbers);\n    $closest_elements = [$numbers[0], $numbers[1]];\n  \
    \  $difference = abs($numbers[0] - $numbers[1]);\n    for ($i = 1; $i < count($numbers)\
    \ - 1; $i++) {\n        $current_difference = abs($numbers[$i] - $numbers[$i +\
    \ 1]);\n        if ($current_difference < $difference) {\n            $difference\
    \ = $current_difference;\n            $closest_elements = [$numbers[$i], $numbers[$i\
    \ + 1]];\n        }\n    }\n    return $closest_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = array(abs($numbers[0] - $numbers[1]), $numbers[0], $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $closest[0]) {\n                $closest = array(abs($numbers[$i] - $numbers[$j]),\
    \ $numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return ($closest[1]\
    \ > $closest[2]) ? array($closest[2], $closest[1]) : array($closest[1], $closest[2]);\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $lowest;\n    $lowest_key;\n    $lowest_key_two;\n    $lowest_two;\n    $lowest_two_key;\n\
    \    $lowest_two_key_two;\n    foreach ($numbers as $key => $number) {\n     \
    \   if (!isset($lowest)) {\n            $lowest = $number;\n            $lowest_key\
    \ = $key;\n        } else {\n            if (!isset($lowest_two)) {\n        \
    \        $lowest_two = $number;\n                $lowest_two_key = $key;\n   \
    \         } else {\n                if (!isset($lowest_two_key_two)) {\n     \
    \               $lowest_two_key_two = $key;\n                }\n             \
    \   if ($number < $lowest_two) {\n                    $lowest_two = $number;\n\
    \                    $lowest_two_key = $key;\n                }\n            }\n\
    \            if ($number < $lowest) {\n                $lowest = $number;\n  \
    \              $lowest_key = $key;\n            }\n        }\n    }\n    if ($lowest_key_two\
    \ === $lowest_two_key) {\n        $lowest_two_key = $lowest_two_key_two;\n   \
    \ }\n    return (array($lowest, $lowest_two));\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35m7lfsj.php:49\n\
    Stack trace:\n#0 /tmp/tmp35m7lfsj.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp35m7lfsj.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $num1 = 0;\n    $num2 = 0;\n    $num1Index = 0;\n    $num2Index = 0;\n  \
    \  $diff = 0;\n    $absDiff = 0;\n    $len = count($numbers);\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        $num1 = $numbers[$i];\n        for ($j = 0; $j <\
    \ $len; $j++) {\n            $num2 = $numbers[$j];\n            if ($i != $j)\
    \ {\n                $diff = $num1 - $num2;\n                $absDiff = abs($diff);\n\
    \                if ($absDiff < $minDiff) {\n                    $minDiff = $absDiff;\n\
    \                    $num1Index = $i;\n                    $num2Index = $j;\n\
    \                }\n            }\n        }\n    }\n    return array($numbers[$num1Index],\
    \ $numbers[$num2Index]);\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppxf4rdnx.php:39\n\
    Stack trace:\n#0 /tmp/tmppxf4rdnx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmppxf4rdnx.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$length = count($numbers);\n\t$smallest = $numbers[0];\n\t$largest = $numbers[0];\n\
    \t$smallestIndex = 0;\n\t$largestIndex = 0;\n\t$distance = 0;\n\t$closestDistance\
    \ = 0;\n\t$closestSmallest = 0;\n\t$closestLargest = 0;\n\tfor ($i = 0; $i < $length;\
    \ $i++) {\n\t\tif ($numbers[$i] < $smallest) {\n\t\t\t$smallest = $numbers[$i];\n\
    \t\t\t$smallestIndex = $i;\n\t\t}\n\t\tif ($numbers[$i] > $largest) {\n\t\t\t\
    $largest = $numbers[$i];\n\t\t\t$largestIndex = $i;\n\t\t}\n\t}\n\tfor ($i = 0;\
    \ $i < $length; $i++) {\n\t\tif ($i == $smallestIndex) {\n\t\t\tcontinue;\n\t\t\
    }\n\t\t$distance = $smallest - $numbers[$i];\n\t\tif ($distance < 0) {\n\t\t\t\
    $distance = $distance * -1;\n\t\t}\n\t\tif ($distance < $closestDistance || $closestDistance\
    \ == 0) {\n\t\t\t$closestDistance = $distance;\n\t\t\t$closestSmallest = $smallest;\n\
    \t\t\t$closestLargest = $numbers[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i < $length;\
    \ $i++) {\n\t\tif ($i == $largestIndex) {\n\t\t\tcontinue;\n\t\t}\n\t\t$distance\
    \ = $largest - $numbers[$i];\n\t\tif ($distance < 0) {\n\t\t\t$distance = $distance\
    \ * -1;\n\t\t}\n\t\tif ($distance < $closestDistance || $closestDistance == 0)\
    \ {\n\t\t\t$closestDistance = $distance;\n\t\t\t$closestSmallest = $numbers[$i];\n\
    \t\t\t$closestLargest\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpigpp8apa.php on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$numCount = count($numbers);\n\tif ($numCount < 2) {\n\t\treturn -1;\n\t}\n\t\
    $closest = array($numbers[0], $numbers[1]);\n\t$closestDiff = abs($numbers[0]\
    \ - $numbers[1]);\n\tfor ($i = 0; $i < $numCount - 1; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $numCount; $j++) {\n\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\
    \t\t\tif ($diff < $closestDiff) {\n\t\t\t\t$closest = array($numbers[$i], $numbers[$j]);\n\
    \t\t\t\t$closestDiff = $diff;\n\t\t\t}\n\t\t}\n\t}\n\tsort($closest);\n\treturn\
    \ $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\
    \nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $count_num = count($numbers);\n  $min_dif = $numbers[1] - $numbers[0];\n  $arr_res\
    \ = [$numbers[0], $numbers[1]];\n  for ($i = 0; $i < $count_num; $i++) {\n   \
    \ for ($j = 0; $j < $count_num; $j++) {\n      if ($i != $j) {\n        $dif =\
    \ abs($numbers[$i] - $numbers[$j]);\n        if ($dif < $min_dif) {\n        \
    \  $min_dif = $dif;\n          $arr_res = [$numbers[$i], $numbers[$j]];\n    \
    \    }\n      }\n    }\n  }\n  return $arr_res;\n}\necho json_encode(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])) . \"\\n\";\necho json_encode(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "[2,2.2]\n[2,2]\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7440cq5.php:33\n\
    Stack trace:\n#0 /tmp/tmpl7440cq5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl7440cq5.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $m = PHP_INT_MAX;\n    $res = array();\n    $low = 0;\n    $high = 1;\n \
    \   while ($high < count($numbers)) {\n        $d = abs($numbers[$low] - $numbers[$high]);\n\
    \        if ($d < $m) {\n            $m = $d;\n            $res = array($numbers[$low],\
    \ $numbers[$high]);\n        }\n        $low++;\n        $high++;\n    }\n   \
    \ return $res;\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpglqkp65w.php:31\n\
    Stack trace:\n#0 /tmp/tmpglqkp65w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpglqkp65w.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$min_diff = $numbers[1] - $numbers[0];\n\t$min_elements = array($numbers[0],\
    \ $numbers[1]);\n\tfor ($i = 1; $i < count($numbers) - 1; $i++) {\n\t\t$diff =\
    \ $numbers[$i + 1] - $numbers[$i];\n\t\tif ($diff < $min_diff) {\n\t\t\t$min_diff\
    \ = $diff;\n\t\t\t$min_elements = array($numbers[$i], $numbers[$i + 1]);\n\t\t\
    }\n\t}\n\treturn $min_elements;\n}\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bc5zj56.php:25\n\
    Stack trace:\n#0 /tmp/tmp_bc5zj56.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_bc5zj56.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $size = count($numbers);\n    $minimum = array_fill(0, $size, 0);\n    $maximum\
    \ = array_fill(0, $size, 0);\n    $minimum[0] = $numbers[0];\n    $maximum[0]\
    \ = $numbers[0];\n    for ($i = 1; $i < $size; $i++) {\n        $minimum[$i] =\
    \ min($minimum[$i - 1], $numbers[$i]);\n        $maximum[$i] = max($maximum[$i\
    \ - 1], $numbers[$i]);\n    }\n    $closest = $maximum[0] - $minimum[0];\n   \
    \ $pair = array($minimum[0], $maximum[0]);\n    for ($i = 1; $i < $size; $i++)\
    \ {\n        if ($maximum[$i] - $minimum[$i] < $closest) {\n            $closest\
    \ = $maximum[$i] - $minimum[$i];\n            $pair = array($minimum[$i], $maximum[$i]);\n\
    \        }\n    }\n    return $pair;\n}\n\nfunction candidate(...$args) {\n  \
    \  return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kiqow0s.php:34\n\
    Stack trace:\n#0 /tmp/tmp8kiqow0s.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8kiqow0s.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $array = array_slice($numbers, 0, -1);\n  $min_diff = abs($numbers[0] - $numbers[1]);\n\
    \  $min_elements = array($numbers[0], $numbers[1]);\n  foreach ($array as $i =>\
    \ $item) {\n    $current_diff = abs($numbers[$i + 1] - $item);\n    if ($current_diff\
    \ < $min_diff) {\n      $min_diff = $current_diff;\n      $min_elements = array($item,\
    \ $numbers[$i + 1]);\n    }\n  }\n  return $min_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xm05mbu.php:28\n\
    Stack trace:\n#0 /tmp/tmp5xm05mbu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5xm05mbu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    // initialize variables\n    $diff = null;\n    $closest_numbers = [];\n\
    \    // sort list of numbers\n    sort($numbers);\n    // loop through list of\
    \ numbers\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        // determine\
    \ difference between current and next number\n        $current_diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        // if this is the first difference determined\n\
    \        if ($diff === null) {\n            // set this difference as the minimum\
    \ difference\n            $diff = $current_diff;\n            // and add the two\
    \ corresponding numbers to the list of closest numbers\n            $closest_numbers\
    \ = [$numbers[$i], $numbers[$i + 1]];\n        } else {\n            // if this\
    \ difference is smaller than the current minimum difference\n            if ($current_diff\
    \ < $diff) {\n                // set it as the minimum difference\n          \
    \      $diff = $current_diff;\n                // and add the two corresponding\
    \ numbers to the list of closest numbers\n                $closest_numbers = [$numbers[$i],\
    \ $numbers[$i + 1]];\n            }\n        }\n    }\n    // return list of closest\
    \ numbers\n    return $closest_numbers;\n}\n\n$tests = [\n    [[1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2], [2.0, 2.2]],\n    [[1.0, 2.0, 3.0, 4.0, 5.0, 2.0], [2.0, 2.0]],\n\
    \    [[1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 3.2], [3.1, 3.2]],\n    [[1.1, 2.1, 3.1,\
    \ 4.1, 5.1, 6.1, 3.1], [3.1, 3.1]],\n    [[1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 3.0],\
    \ [2.1, 3.0]],\n   \nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8uqzj612.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = abs($numbers[0] - $numbers[1]);\n    $n1 = $numbers[0];\n    $n2\
    \ = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $closest) {\n                $closest = abs($numbers[$i] -\
    \ $numbers[$j]);\n                $n1 = $numbers[$i];\n                $n2 = $numbers[$j];\n\
    \            }\n        }\n    }\n    return array($n1, $n2);\n}\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgl5nco2c.php:29\n\
    Stack trace:\n#0 /tmp/tmpgl5nco2c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgl5nco2c.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallestDiff = abs($numbers[0] - $numbers[1]);\n    $result = [$numbers[0],\
    \ $numbers[1]];\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = 0; $j < count($numbers); $j++) {\n            if ($i != $j) {\n          \
    \      $diff = abs($numbers[$i] - $numbers[$j]);\n                if ($diff <\
    \ $smallestDiff) {\n                    $smallestDiff = $diff;\n             \
    \       $result = [$numbers[$i], $numbers[$j]];\n                }\n         \
    \   }\n        }\n    }\n    return $result;\n}\n\nprint_r(find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcy18rer0.php:33\n\
    Stack trace:\n#0 /tmp/tmpcy18rer0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcy18rer0.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $length = count($numbers);\n    if ($length < 2) {\n        return FALSE;\n\
    \    }\n    $closest_elements = array(\n        abs($numbers[0] - $numbers[1]),\n\
    \        $numbers[0],\n        $numbers[1]\n    );\n    for ($i = 0; $i < $length\
    \ - 1; $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            $diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest_elements[0])\
    \ {\n                $closest_elements = array($diff, $numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $closest_elements[1] > $closest_elements[2]\
    \ ? array($closest_elements[2], $closest_elements[1]) : array($closest_elements[1],\
    \ $closest_elements[2]);\n}\n\nvar_dump(find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2]));\nvar_dump(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  float(2)\n  [1]=>\n  float(2.2)\n}\narray(2) {\n\
    \  [0]=>\n  float(2)\n  [1]=>\n  float(2)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $min_diff = null;\n    $elements = null;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($min_diff === null\
    \ || $diff < $min_diff) {\n                $min_diff = $diff;\n              \
    \  $elements = [$numbers[$i], $numbers[$j]];\n            }\n        }\n    }\n\
    \    return $elements;\n}\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7n6dbhwn.php:29\n\
    Stack trace:\n#0 /tmp/tmp7n6dbhwn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7n6dbhwn.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $elements = [null, null];\n    $smallest = abs($numbers[0] - $numbers[1]);\n\
    \    $index = 0;\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n       \
    \ $distance = abs($numbers[$i] - $numbers[$i + 1]);\n        if ($distance < $smallest)\
    \ {\n            $smallest = $distance;\n            $index = $i;\n        }\n\
    \    }\n    $elements[0] = $numbers[$index];\n    $elements[1] = $numbers[$index\
    \ + 1];\n    return $elements;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygzs7ll0.php:30\n\
    Stack trace:\n#0 /tmp/tmpygzs7ll0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpygzs7ll0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    sort($numbers);\n    $result = array();\n    $n = count($numbers);\n    $min_distance\
    \ = abs($numbers[0] - $numbers[1]);\n    $result[] = $numbers[0];\n    $result[]\
    \ = $numbers[1];\n    for ($i = 1; $i < $n - 1; $i++) {\n        $distance = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($distance < $min_distance) {\n           \
    \ $min_distance = $distance;\n            $result[0] = $numbers[$i];\n       \
    \     $result[1] = $numbers[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\necho \"Given number list\
    \ is \";\nprint_r($numbers);\n$result = find_closest_elements($numbers);\necho\
    \ \"The closest element pair is \";\nprint_r($result);\n\necho \"<br>\";\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\necho \"Given number list is \";\nprint_r($numbers);\n\
    $result = find_closest_elements($numbers);\necho \"The closest element pair is\
    \ \";\nprint_r($result);\n\necho \"<br>\";\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 6.0);\necho \"Given number list is \";\nprint_r($numbers);\n$result\
    \ = find_closest_elements($numbers);\necho \"The closest element pair is \";\n\
    print_r($result);\n\necho \"<br>\";\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 0.0);\necho \"Given number list is \";\nprint_r($numbers);\n$result = find_closest_elements($numbers);\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Given number list is Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n\
    \    [3] => 4\n    [4] => 5\n    [5] => 2.2\n)\nThe closest element pair is Array\n\
    (\n    [0] => 2\n    [1] => 2.2\n)\n<br>Given number list is Array\n(\n    [0]\
    \ => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 2\n\
    )\nThe closest element pair is Array\n(\n    [0] => 2\n    [1] => 2\n)\n<br>Given\
    \ number list is Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] =>\
    \ 4\n    [4] => 5\n    [5] => 6\n)\nThe closest element pair is Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n<br>Given number list is Array\n(\n    [0] => 1\n\
    \    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 0\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $smallest_difference = null;\n    $closest_elements = null;\n    $n = count($numbers);\n\
    \    for ($i = 0; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++)\
    \ {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($difference < $smallest_difference || $smallest_difference === null) {\n\
    \                $smallest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\nprint_r(find_closest_elements([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2]));\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]));\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = abs($numbers[0] - $numbers[1]);\n    $closest_elements = array($numbers[0],\
    \ $numbers[1]);\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            $distance\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($distance < $closest) {\n\
    \                $closest = $distance;\n                $closest_elements = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $closest_elements;\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppc1ycs0m.php:30\n\
    Stack trace:\n#0 /tmp/tmppc1ycs0m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppc1ycs0m.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$minDiff = INF;\n\t$minNums = [$numbers[0], $numbers[1]];\n\t$len = count($numbers);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\
    \t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($diff < $minDiff) {\n\
    \t\t\t\t$minDiff = $diff;\n\t\t\t\t$minNums = [$numbers[$i], $numbers[$j]];\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $minNums;\n}\n\n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2];\n$numbers = [1.0, 2.0, 3.0, 4.0, 5.0, 2.0];\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpbqlz37ds.php:33\nStack trace:\n#0 /tmp/tmpbqlz37ds.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbqlz37ds.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \  $diff = 0;\n  $count = count($numbers);\n  $closest = array();\n  for ($i =\
    \ 0; $i < $count; $i++) {\n    for ($j = 0; $j < $count; $j++) {\n      if ($i\
    \ == $j) continue;\n      $new_diff = abs($numbers[$i] - $numbers[$j]);\n    \
    \  if ($diff == 0 || $new_diff < $diff) {\n        $diff = $new_diff;\n      \
    \  $closest = array($numbers[$i], $numbers[$j]);\n      }\n    }\n  }\n  return\
    \ $closest;\n}\n\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]));\n\
    echo \"<br/>\";\nprint_r(find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]));\n\
    echo \"<br/>\";\nprint_r(find_closest_elements([1.0, 3.2, 3.1, 3.2, 4.0, 5.0,\
    \ 2.0]));\necho \"<br/>\";\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n<br/>Array\n(\n    [0] => 2\n\
    \    [1] => 3\n)\n<br/>Array\n(\n    [0] => 3.2\n    [1] => 3.1\n)\n<br/>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpobcdm24o.php:38\nStack trace:\n\
    #0 /tmp/tmpobcdm24o.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpobcdm24o.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = array();\n    $min_diff = abs($numbers[0] - $numbers[1]);\n  \
    \  for ($i = 0; $i < count($numbers) - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $min_diff) {\n            $min_diff\
    \ = $diff;\n            $closest = array($numbers[$i], $numbers[$i + 1]);\n  \
    \      }\n    }\n    return $closest;\n}\n\n$test_data = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\necho \"find_closest_elements(\" . implode(\", \", $test_data)\
    \ . \") = (\". find_closest_elements($test_data)[0] . \", \" . find_closest_elements($test_data)[1]\
    \ . \")\\n\";\n$test_data = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\necho \"find_closest_elements(\"\
    \ . implode(\", \", $test_data) . \") = (\". find_closest_elements($test_data)[0]\
    \ . \", \" . find_closest_elements($test_data)[1] . \")\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "find_closest_elements(1, 2, 3, 4, 5, 2.2) = (, )\nfind_closest_elements(1,\
    \ 2, 3, 4, 5, 2) = (, )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w5o9t90.php:31\n\
    Stack trace:\n#0 /tmp/tmp1w5o9t90.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1w5o9t90.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $closest = [0, 0];\n    $delta = $numbers[1] - $numbers[0];\n    foreach($numbers\
    \ as $i => $number) {\n        if($i + 1 < count($numbers)) {\n            $new_delta\
    \ = $numbers[$i + 1] - $number;\n            if($new_delta < $delta) {\n     \
    \           $delta = $new_delta;\n                $closest = [$number, $numbers[$i\
    \ + 1]];\n            }\n        }\n    }\n    return $closest;\n}\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqagfo0k.php:27\n\
    Stack trace:\n#0 /tmp/tmpxqagfo0k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxqagfo0k.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \t$closest = [$numbers[0], $numbers[1]];\n\t$distance = abs($numbers[0] - $numbers[1]);\n\
    \tfor ($i = 0; $i < count($numbers); $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n\t\t\tif (abs($numbers[$i] - $numbers[$j]) < $distance) {\n\t\t\t\t\
    $closest = [$numbers[$i], $numbers[$j]];\n\t\t\t\t$distance = abs($numbers[$i]\
    \ - $numbers[$j]);\n\t\t\t}\n\t\t}\n\t}\n\tsort($closest);\n\treturn $closest;\n\
    }\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a supplied list of numbers (of length at least two) select\
    \ and return two that are the closest to each\n// other and return them in order\
    \ (smaller number, larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2])\n// (2.0, 2.2)\n// >>> find_closest_elements([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0])\n// (2.0, 2.0)\nfunction find_closest_elements($numbers) {\n\
    \    $first = $numbers[0];\n    $second = $numbers[1];\n    $diff = abs($first\
    \ - $second);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $new_diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($new_diff < $diff) {\n                $diff\
    \ = $new_diff;\n                $first = $numbers[$i];\n                $second\
    \ = $numbers[$j];\n            }\n        }\n    }\n    return array($first, $second);\n\
    }\n\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5ce9rtd.php:31\n\
    Stack trace:\n#0 /tmp/tmps5ce9rtd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps5ce9rtd.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception

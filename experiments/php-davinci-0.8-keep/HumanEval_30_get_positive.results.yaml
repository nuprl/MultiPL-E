name: HumanEval_30_get_positive
language: php
results:
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            $result[] = $l[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // your code goes here\n    $r = [];\n    foreach ($l as $value) {\n       \
    \ if ($value > 0) {\n            $r[] = $value;\n        }\n    }\n    return\
    \ $r;\n}\necho '<pre>';\nprint_r(get_positive([-1, 2, -4, 5, 6]));\necho '</pre>';\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$p\
    \ = [];\n\tforeach ($l as $i) {\n\t\tif ($i > 0)\n\t\t\t$p[] = $i;\n\t}\n\treturn\
    \ $p;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $newl = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] >\
    \ 0) {\n            array_push($newl, $l[$i]);\n        }\n    }\n    return $newl;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$result\
    \ = array();\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tif ($l[$i] > 0) {\n\t\
    \t\tarray_push($result, $l[$i]);\n\t\t}\n\t}\n\treturn $result;\n}\n\n$l = array(-1,\
    \ 2, -4, 5, 6);\n$result = get_positive($l);\nprint_r($result);\n\necho '<br>';\n\
    \n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n$result = get_positive($l);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n<br>Array\n(\n \
    \   [0] => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5]\
    \ => 123\n    [6] => 1\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $i) {\n        if ($i > 0) {\n            $res[]\
    \ = $i;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $pos\
    \ = [];\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] > 0) {\n     \
    \ array_push($pos, $l[$i]);\n    }\n  }\n  return $pos;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n     \
    \       $result[] = $item;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$l\
    \ = array_filter($l, function($v) {\n\t\treturn $v > 0;\n\t});\n\treturn $l;\n\
    }\nprint_r(get_positive([-1, 2, -4, 5, 6]));\necho \"<br>\";\nprint_r(get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\necho \"<br>\";\necho \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\n<br>Array\n(\n \
    \   [0] => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8]\
    \ => 123\n    [9] => 1\n)\n<br><br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppz6n5xhe.php:24\nStack trace:\n#0 /tmp/tmppz6n5xhe.php(30): test()\n\
    #1 {main}\n  thrown in /tmp/tmppz6n5xhe.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $r\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $r[] = $item;\n\
    \    }\n  }\n  return $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$res\
    \ = array();\n\tforeach ($l as $key => $value) {\n\t\tif ($value > 0)\n\t\t\t\
    $res[] = $value;\n\t}\n\treturn $res;\n}\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $p = [];\n    foreach ($l as $x) {\n        if ($x > 0) {\n            $p[]\
    \ = $x;\n        }\n    }\n    return $p;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ Write your code here.\n  $result = [];\n  for ($i = 0; $i < count($l); $i++)\
    \ {\n    if ($l[$i] > 0) {\n      array_push($result, $l[$i]);\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvcw4xrti.php:16\n\
    Stack trace:\n#0 /tmp/tmpvcw4xrti.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpvcw4xrti.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($item) {\n        return $item > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wp0gj5u.php:18\n\
    Stack trace:\n#0 /tmp/tmp6wp0gj5u.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6wp0gj5u.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\treturn\
    \ array_filter($l, function($value) {\n\t\treturn $value > 0;\n\t});\n}\nprint_r(get_positive([-1,\
    \ 2, -4, 5, 6]));\nprint_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8] => 123\n\
    \    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bnvqy0m.php:20\n\
    Stack trace:\n#0 /tmp/tmp_bnvqy0m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_bnvqy0m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $e) {\n        if ($e > 0) {\n            $res[]\
    \ = $e;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppab2t_sw.php:16\n\
    Stack trace:\n#0 /tmp/tmppab2t_sw.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppab2t_sw.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $new_l\
    \ = [];\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] > 0) {\n     \
    \ array_push($new_l, $l[$i]);\n    }\n  }\n  return $new_l;\n}\n\nprint_r(get_positive([-1,\
    \ 2, -4, 5, 6]));\necho \"<br />\";\nprint_r(get_positive([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10]));\necho \"<br />\";\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n<br />Array\n(\n\
    \    [0] => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5]\
    \ => 123\n    [6] => 1\n)\n<br />"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $n = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n          \
    \  $n[] = $item;\n        }\n    }\n    return $n;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgv2huqpx.php:16\n\
    Stack trace:\n#0 /tmp/tmpgv2huqpx.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpgv2huqpx.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $number) {\n        if ($number > 0) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$ret\
    \ = array();\n\tforeach ($l as $x) {\n\t\tif ($x > 0) {\n\t\t\t$ret[] = $x;\n\t\
    \t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $newlist = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            array_push($newlist, $l[$i]);\n        }\n    }\n    return\
    \ $newlist;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $retval = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n\
    \            $retval[] = $item;\n        }\n    }\n    return $retval;\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n}\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddvj3_zq.php:14\n\
    Stack trace:\n#0 /tmp/tmpddvj3_zq.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpddvj3_zq.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn7gdus0.php:16\n\
    Stack trace:\n#0 /tmp/tmpkn7gdus0.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpkn7gdus0.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$ret\
    \ = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$ret[] = $n;\n\t\
    \t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $myarray = array();\n    foreach ($l as $value) {\n        if ($value > 0) {\n\
    \            array_push($myarray, $value);\n        }\n    }\n    return $myarray;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($value) {\n        return $value > 0;\n   \
    \ });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbxonr5qk.php:18\n\
    Stack trace:\n#0 /tmp/tmpbxonr5qk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbxonr5qk.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$res\
    \ = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0)\n\t\t\t$res[] = $v;\n\t\
    }\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$res\
    \ = array();\n\tforeach ($l as $value) {\n\t\tif ($value > 0) {\n\t\t\t$res[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $numbers = array();\n    foreach ($l as $number) {\n        if ($number > 0)\
    \ {\n            array_push($numbers, $number);\n        }\n    }\n    return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $list\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $list[] = $item;\n\
    \    }\n  }\n  return $list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $new = [];\n    foreach ($l as $val) {\n        if ($val > 0) {\n          \
    \  $new[] = $val;\n        }\n    }\n    return $new;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t//\
    \ TODO\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97lggc8g.php:16\n\
    Stack trace:\n#0 /tmp/tmp97lggc8g.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp97lggc8g.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$arr\
    \ = array();\n\tforeach ($l as $key => $value) {\n\t\tif ($value > 0) {\n\t\t\t\
    $arr[] = $value;\n\t\t}\n\t}\n\treturn $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($i) {\n    return $i > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4pyef3q.php:18\n\
    Stack trace:\n#0 /tmp/tmpq4pyef3q.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpq4pyef3q.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ write your code here\n  $output = [];\n  foreach ($l as $x) {\n    if ($x >\
    \ 0) {\n      $output[] = $x;\n    }\n  }\n  return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $i) {\n        if ($i > 0) {\n         \
    \   $positive[] = $i;\n        }\n    }\n    return $positive;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$pos\
    \ = [];\n\tforeach ($l as $e) {\n\t\tif ($e > 0) {\n\t\t\t$pos[] = $e;\n\t\t}\n\
    \t}\n\treturn $pos;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$res\
    \ = array();\n\tforeach ($l as $e) {\n\t\tif ($e > 0) {\n\t\t\t$res[] = $e;\n\t\
    \t}\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$new_list\
    \ = [];\n\tforeach ($l as $e) {\n\t\tif ($e > 0) {\n\t\t\t$new_list[] = $e;\n\t\
    \t}\n\t}\n\treturn $new_list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $v) {\n        if ($v > 0) {\n           \
    \ $result[] = $v;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($a) {\n        return $a > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6n7piif.php:18\n\
    Stack trace:\n#0 /tmp/tmpl6n7piif.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpl6n7piif.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            $result[] = $l[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ Write code here ...\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpravaxlh4.php:16\n\
    Stack trace:\n#0 /tmp/tmpravaxlh4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpravaxlh4.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $number) {\n        if ($number > 0) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $new\
    \ = [];\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] > 0) {\n     \
    \ array_push($new, $l[$i]);\n    }\n  }\n  return $new;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($el) {\n        return $el > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57xvpprf.php:18\n\
    Stack trace:\n#0 /tmp/tmp57xvpprf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp57xvpprf.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccru1pxg.php:16\n\
    Stack trace:\n#0 /tmp/tmpccru1pxg.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpccru1pxg.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ Fill in the function\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92zb5g9w.php:16\n\
    Stack trace:\n#0 /tmp/tmp92zb5g9w.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp92zb5g9w.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$ret\
    \ = array();\n\tforeach ($l as $e) {\n\t\tif ($e > 0) {\n\t\t\t$ret[] = $e;\n\t\
    \t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplc__9b8l.php:16\n\
    Stack trace:\n#0 /tmp/tmplc__9b8l.php(22): test()\n#1 {main}\n  thrown in /tmp/tmplc__9b8l.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzvag6gs.php:18\n\
    Stack trace:\n#0 /tmp/tmpwzvag6gs.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwzvag6gs.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\tif\
    \ (count($l) == 0) {\n\t\treturn array();\n\t}\n\t$head = $l[0];\n\t$tail = array_slice($l,\
    \ 1);\n\tif ($head > 0) {\n\t\treturn array_merge(array($head), get_positive($tail));\n\
    \t} else {\n\t\treturn get_positive($tail);\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($v) {\n    return $v > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwjf5ju.php:18\n\
    Stack trace:\n#0 /tmp/tmpdzwjf5ju.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdzwjf5ju.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\tif(empty($l))\
    \ return $l;\n\tif($l[0] > 0) {\n\t\t$l2 = get_positive(array_slice($l, 1));\n\
    \t\tarray_unshift($l2, $l[0]);\n\t\treturn $l2;\n\t} else {\n\t\treturn get_positive(array_slice($l,\
    \ 1));\n\t}\n}\n\necho \"<pre>\";\nprint_r(get_positive([-1, 2, -4, 5, 6]));\n\
    print_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\necho \"</pre>\"\
    ;\n\necho \"<br />\";\necho \"<br />\";\necho \"<br />\";\necho \"<br />\";\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n\
    \    [0] => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5]\
    \ => 123\n    [6] => 1\n)\n</pre><br /><br /><br /><br />"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgjrgcwy.php:18\n\
    Stack trace:\n#0 /tmp/tmpfgjrgcwy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpfgjrgcwy.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\treturn\
    \ array_filter($l, function($n) {\n\t\treturn $n > 0;\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp056b793w.php:18\n\
    Stack trace:\n#0 /tmp/tmp056b793w.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp056b793w.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $v) {\n        if ($v > 0) {\n         \
    \   $positive[] = $v;\n        }\n    }\n    return $positive;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($i) {\n        return $i > 0;\n    });\n}\n\
    \nprint_r(get_positive([-1, 2, -4, 5, 6]));\nprint_r(get_positive([5, 3, -5, 2,\
    \ -3, 3, 9, 0, 123, 1, -10]));\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8] => 123\n\
    \    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1uywjav.php:20\n\
    Stack trace:\n#0 /tmp/tmpi1uywjav.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi1uywjav.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$output\
    \ = array();\n\tforeach ($l as $val) {\n\t\tif ($val > 0) {\n\t\t\t$output[] =\
    \ $val;\n\t\t}\n\t}\n\treturn $output;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $result\
    \ = [];\n  foreach ($l as $key => $value) {\n    if ($value > 0) {\n      $result[]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprq2jnpn2.php:16\n\
    Stack trace:\n#0 /tmp/tmprq2jnpn2.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprq2jnpn2.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $e) {\n        if ($e > 0) {\n            $res[]\
    \ = $e;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($number) {\n        return $number > 0;\n \
    \   });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51ulus3i.php:18\n\
    Stack trace:\n#0 /tmp/tmp51ulus3i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp51ulus3i.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positives\
    \ = [];\n  foreach ($l as $num) {\n    if ($num > 0) {\n      $positives[] = $num;\n\
    \    }\n  }\n  return $positives;\n}\n\n$l = [-1, 2, -4, 5, 6];\nprint_r(get_positive($l));\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $num) {\n        if ($num > 0) {\n          \
    \  $res[] = $num;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwidzeqc4.php:16\n\
    Stack trace:\n#0 /tmp/tmpwidzeqc4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwidzeqc4.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $e) {\n        if ($e > 0) {\n            $res[]\
    \ = $e;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $result\
    \ = [];\n  foreach ($l as $x) {\n    if ($x > 0) {\n      $result[] = $x;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            $result[] = $l[$i];\n        }\n    }\n    return $result;\n\
    }\nprint_r(get_positive([-1, 2, -4, 5, 6]));\nprint_r(get_positive([5, 3, -5,\
    \ 2, -3, 3, 9, 0, 123, 1, -10]));\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 123\n\
    \    [6] => 1\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ if ($l == NULL) {\n        return $l;\n    } else {\n        if ($l[0] > 0)\
    \ {\n            return array_merge([$l[0]], get_positive(array_slice($l, 1)));\n\
    \        } else {\n            return get_positive(array_slice($l, 1));\n    \
    \    }\n    }\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ TODO\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pvky_hx.php:16\n\
    Stack trace:\n#0 /tmp/tmp0pvky_hx.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp0pvky_hx.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $e) {\n        if ($e > 0) {\n            $res[]\
    \ = $e;\n        }\n    }\n    return $res;\n}\n$l = [-1, 2, -4, 5, 6];\n$res\
    \ = get_positive($l);\nprint_r($res);\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            $result[] = $l[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) { return $x > 0; });\n}\nprint_r(get_positive([-1,\
    \ 2, -4, 5, 6]));\nprint_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8] => 123\n\
    \    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukhb4pae.php:17\n\
    Stack trace:\n#0 /tmp/tmpukhb4pae.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpukhb4pae.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $new_l\
    \ = [];\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] > 0) {\n     \
    \ array_push($new_l, $l[$i]);\n    }\n  }\n  return $new_l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n     \
    \       $result[] = $item;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // BEGIN (write your solution here)\n    $positives = [];\n    foreach ($l as\
    \ $el) {\n        if ($el > 0) {\n            $positives[] = $el;\n        }\n\
    \    }\n    return $positives;\n    // END\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\tif\
    \ ($l == []) {\n\t\treturn [];\n\t} else if ($l[0] < 0) {\n\t\t$result = get_positive(array_slice($l,\
    \ 1));\n\t} else {\n\t\t$result = array_merge([$l[0]], get_positive(array_slice($l,\
    \ 1)));\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2ugrhav.php:24\n\
    Stack trace:\n#0 /tmp/tmpt2ugrhav.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt2ugrhav.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$output\
    \ = array();\n\t$size = count($l);\n\tfor ($i = 0; $i < $size; $i++){\n\t\tif\
    \ ($l[$i] >= 0){\n\t\t\tarray_push($output, $l[$i]);\n\t\t}\n\t}\n\treturn $output;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkryal5k1.php:24\n\
    Stack trace:\n#0 /tmp/tmpkryal5k1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkryal5k1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\treturn\
    \ array_filter($l, function($x) {\n\t\treturn $x > 0;\n\t});\n}\n\necho 'get_positive([-1,\
    \ 2, -4, 5, 6]) = ';\nvar_dump(get_positive([-1, 2, -4, 5, 6]));\necho 'get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]) = ';\nvar_dump(get_positive([5, 3, -5,\
    \ 2, -3, 3, 9, 0, 123, 1, -10]));\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "get_positive([-1, 2, -4, 5, 6]) = array(3) {\n  [1]=>\n  int(2)\n  [3]=>\n\
    \  int(5)\n  [4]=>\n  int(6)\n}\nget_positive([5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]) = array(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [3]=>\n  int(2)\n\
    \  [5]=>\n  int(3)\n  [6]=>\n  int(9)\n  [8]=>\n  int(123)\n  [9]=>\n  int(1)\n\
    }\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcck_26ro.php:23\n\
    Stack trace:\n#0 /tmp/tmpcck_26ro.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcck_26ro.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $pos = array();\n    foreach ($l as $x) {\n        if ($x > 0) {\n         \
    \   $pos[] = $x;\n        }\n    }\n    return $pos;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ Your code here\n  return array_filter($l, function($x) {\n    return $x > 0;\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxyzudu2u.php:19\n\
    Stack trace:\n#0 /tmp/tmpxyzudu2u.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxyzudu2u.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $pos_list = [];\n    foreach ($l as $num) {\n        if ($num > 0) {\n     \
    \       array_push($pos_list, $num);\n        }\n    }\n    return $pos_list;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) {\n        return $x > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphmnlowq.php:18\n\
    Stack trace:\n#0 /tmp/tmpphmnlowq.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpphmnlowq.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return filter_numbers($l, function($x) { return $x > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function filter_numbers()\
    \ in /tmp/tmpbj61tm0i.php:8\nStack trace:\n#0 /tmp/tmpbj61tm0i.php(12): get_positive(Array)\n\
    #1 /tmp/tmpbj61tm0i.php(16): candidate(Array)\n#2 /tmp/tmpbj61tm0i.php(22): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbj61tm0i.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $res\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $res[] = $item;\n\
    \    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp22l88fhv.php:16\n\
    Stack trace:\n#0 /tmp/tmp22l88fhv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp22l88fhv.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$r\
    \ = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$r[] = $n;\n\t\t\
    }\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $result\
    \ = [];\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] > 0) {\n     \
    \ $result[] = $l[$i];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $ret\
    \ = [];\n  for($i = 0; $i < count($l); $i++){\n    if($l[$i] > 0){\n      $ret[]\
    \ = $l[$i];\n    }\n  }\n  return $ret;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // Write your code here\n    $arr = [];\n    foreach ($l as $value) {\n    \
    \    if ($value > 0) {\n            $arr[] = $value;\n        }\n    }\n    return\
    \ $arr;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n        \
    \    $res[] = $item;\n        }\n    }\n    return $res;\n}\n\nprint_r(get_positive([-1,\
    \ 2, -4, 5, 6]));\nprint_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 123\n\
    \    [6] => 1\n)\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) {\n        return $v > 0;\n    });\n}\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45suo1dw.php:17\n\
    Stack trace:\n#0 /tmp/tmp45suo1dw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp45suo1dw.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $p = array();\n    foreach ($l as $i) {\n        if ($i > 0) {\n           \
    \ $p[] = $i;\n        }\n    }\n    return $p;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $number) {\n        if ($number > 0) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$r\
    \ = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$r[] = $v;\n\t\t\
    }\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $ret\
    \ = [];\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] > 0) {\n     \
    \ $ret[] = $l[$i];\n    }\n  }\n  return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $number) {\n        if ($number > 0) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    $l = [-1, 2, -4, 5, 6];\nvar_dump(get_positive($l));\necho PHP_EOL;\n\n$l = [5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\nvar_dump(get_positive($l));\necho PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(6)\n}\n\
    \narray(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n\
    \  int(3)\n  [4]=>\n  int(9)\n  [5]=>\n  int(123)\n  [6]=>\n  int(1)\n}\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgflq92nv.php:16\n\
    Stack trace:\n#0 /tmp/tmpgflq92nv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpgflq92nv.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $ret\
    \ = [];\n  foreach ($l as $i) {\n    if ($i > 0) {\n      $ret[] = $i;\n    }\n\
    \  }\n  return $ret;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $v) {\n        if ($v > 0) {\n           \
    \ $result[] = $v;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\treturn\
    \ array_filter($l, function($num) {\n\t\treturn $num > 0;\n\t});\n}\n\necho \"\
    1.\\n\";\nprint_r(get_positive([-1, 2, -4, 5, 6]));\necho \"\\n\";\nprint_r(get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1.\nArray\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\n\nArray\n(\n\
    \    [0] => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8]\
    \ => 123\n    [9] => 1\n)\n\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpkr89ur9d.php:24\nStack trace:\n#0 /tmp/tmpkr89ur9d.php(30): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkr89ur9d.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $result\
    \ = [];\n  foreach ($l as $n) {\n    if ($n > 0) {\n      $result[] = $n;\n  \
    \  }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n   \
    \         $result[] = $value;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n     \
    \       $result[] = $item;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$pos\
    \ = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$pos[] = $n;\n\t\
    \t}\n\t}\n\treturn $pos;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\treturn\
    \ array_filter($l, function($x) {\n\t\treturn $x > 0;\n\t});\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvvbibri.php:18\n\
    Stack trace:\n#0 /tmp/tmpgvvbibri.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgvvbibri.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // Your code here\n    return array_filter($l, function($e) { return $e > 0;\
    \ });\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3m48kn2w.php:16\n\
    Stack trace:\n#0 /tmp/tmp3m48kn2w.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp3m48kn2w.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $new\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $new[] = $item;\n\
    \    }\n  }\n  return $new;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // your code here.\n    $res = [];\n    foreach ($l as $val) {\n        if ($val\
    \ > 0) {\n            $res[] = $val;\n        }\n    }\n    return $res;\n}\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$out\
    \ = array();\n\tforeach ($l as $item) {\n\t\tif ($item > 0) {\n\t\t\t$out[] =\
    \ $item;\n\t\t}\n\t}\n\treturn $out;\n}\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $res\
    \ = [];\n  foreach ($l as $x) {\n    if ($x > 0) {\n      $res[] = $x;\n    }\n\
    \  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // Write your code here\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9pz34z69.php:16\n\
    Stack trace:\n#0 /tmp/tmp9pz34z69.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9pz34z69.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $a = [];\n    foreach ($l as $e) {\n        if ($e > 0) {\n            $a[]\
    \ = $e;\n        }\n    }\n    return $a;\n}\nprint_r(get_positive([-1, 2, -4,\
    \ 5, 6]));\nprint_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n\n\
    echo '</br>';\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 123\n\
    \    [6] => 1\n)\n</br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdwyeypl.php:18\n\
    Stack trace:\n#0 /tmp/tmpfdwyeypl.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpfdwyeypl.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) {\n        return $x > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcg73px4.php:18\n\
    Stack trace:\n#0 /tmp/tmptcg73px4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptcg73px4.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$r\
    \ = array();\n\tforeach ($l as $i) {\n\t\tif ($i > 0) {\n\t\t\t$r[] = $i;\n\t\t\
    }\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //YOUR\
    \ CODE GOES HERE\n  // $l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n  //\
    \ $n = count($l);\n  // for ($i = 0; $i < $n; $i++) {\n  //   if ($l[$i] < 0)\
    \ {\n  //     unset($l[$i]);\n  //   }\n  // }\n  // return $l;\n  // Refactor:\n\
    \  // filter out all the negatives\n  $positive = array_filter($l, function($n)\
    \ {\n    return $n > 0;\n  });\n  return $positive;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u4vybcd.php:29\n\
    Stack trace:\n#0 /tmp/tmp6u4vybcd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6u4vybcd.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $n\
    \ = [];\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $n[] = $v;\n    }\n\
    \  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) { return $n > 0; });\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83icbwtz.php:15\n\
    Stack trace:\n#0 /tmp/tmp83icbwtz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp83icbwtz.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t//\
    \ TODO\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3jm0xim.php:16\n\
    Stack trace:\n#0 /tmp/tmpu3jm0xim.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpu3jm0xim.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($n) { return $n > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmsibjph.php:16\n\
    Stack trace:\n#0 /tmp/tmprmsibjph.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprmsibjph.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positives\
    \ = [];\n  foreach ($l as $n) {\n    if ($n > 0) {\n      $positives[] = $n;\n\
    \    }\n  }\n  return $positives;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $r\
    \ = [];\n  foreach ($l as $i) {\n    if ($i > 0)\n      $r[] = $i;\n  }\n  return\
    \ $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $l = array_filter($l, function($x) {\n        return $x > 0;\n    });\n    return\
    \ $l;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sg216al.php:19\n\
    Stack trace:\n#0 /tmp/tmp_sg216al.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_sg216al.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) {\n        return $x > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt6auijs.php:18\n\
    Stack trace:\n#0 /tmp/tmpgt6auijs.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgt6auijs.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($a) {\n        return $a > 0;\n    });\n}\n\
    print_r(get_positive([-1, 2, -4, 5, 6]));\nprint_r(get_positive([5, 3, -5, 2,\
    \ -3, 3, 9, 0, 123, 1, -10]));\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8] => 123\n\
    \    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ysky77p.php:19\n\
    Stack trace:\n#0 /tmp/tmp3ysky77p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3ysky77p.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $ret\
    \ = [];\n  foreach ($l as $x) {\n    if ($x > 0) {\n      $ret[] = $x;\n    }\n\
    \  }\n  return $ret;\n}\n\necho 'get_positive([-1, 2, -4, 5, 6]) === ';\nvar_dump(get_positive([-1,\
    \ 2, -4, 5, 6]));\necho 'get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\
    \ === ';\nvar_dump(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "get_positive([-1, 2, -4, 5, 6]) === array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n\
    \  int(5)\n  [2]=>\n  int(6)\n}\nget_positive([5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10]) === array(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(9)\n  [5]=>\n  int(123)\n  [6]=>\n  int(1)\n\
    }\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $p = [];\n    foreach ($l as $i) {\n        if ($i > 0) {\n            $p[]\
    \ = $i;\n        }\n    }\n    return $p;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$n\
    \ = [];\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$n[] = $v;\n\t\t}\n\t\
    }\n\treturn $n;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n     \
    \       $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list\
    \ = [-1, 2, -4, 5, 6];\necho \"get_positive($list) = \" . implode(', ', get_positive($list))\
    \ . \"\\n\";\n\n$list = [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\necho \"get_positive($list)\
    \ = \" . implode(', ', get_positive($list)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "get_positive(Array) = 2, 5, 6\nget_positive(Array) = 5, 3, 2, 3, 9, 123,\
    \ 1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $res\
    \ = [];\n  for($i = 0; $i < count($l); $i++) {\n    if($l[$i] > 0) {\n      $res[]\
    \ = $l[$i];\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t//\
    \ Code here...\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvv2_oov.php:16\n\
    Stack trace:\n#0 /tmp/tmpfvv2_oov.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpfvv2_oov.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$arr\
    \ = array();\n\t$i = 0;\n\twhile ($i < count($l)) {\n\t\tif ($l[$i] > 0) {\n\t\
    \t\t$arr[] = $l[$i];\n\t\t}\n\t\t$i++;\n\t}\n\treturn $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // TODO: Write your code here\n    $res = [];\n    foreach ($l as $num) {\n\
    \        if ($num > 0) {\n            $res[] = $num;\n        }\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $new_list = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            array_push($new_list, $l[$i]);\n        }\n    }\n    return\
    \ $new_list;\n}\n$list = [-1, 2, -4, 5, 6];\nvar_dump(get_positive($list));\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(6)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\tif\
    \ ($l == []) {\n\t\treturn [];\n\t} else {\n\t\tif ($l[0] < 0) {\n\t\t\treturn\
    \ get_positive(array_slice($l, 1));\n\t\t} else {\n\t\t\treturn array_merge([$l[0]],\
    \ get_positive(array_slice($l, 1)));\n\t\t}\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl06f194z.php:25\n\
    Stack trace:\n#0 /tmp/tmpl06f194z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl06f194z.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$r\
    \ = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$r[] = $v;\n\t\t\
    }\n\t}\n\treturn $r;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $newlist = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n    \
    \        $newlist[] = $item;\n        }\n    }\n    return $newlist;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $v) {\n        if ($v > 0) {\n            $res[]\
    \ = $v;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $arr = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n      \
    \      $arr[] = $value;\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\necho \"<p>\"\
    .json_encode(get_positive([-1, 2, -4, 5, 6])).\"</p>\";\necho \"<p>\".json_encode(get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])).\"</p>\";\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<p>{\"1\":2,\"3\":5,\"4\":6}</p><p>{\"0\":5,\"1\":3,\"3\":2,\"5\":3,\"\
    6\":9,\"8\":123,\"9\":1}</p>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp1k_j7nl1.php:20\nStack trace:\n#0 /tmp/tmp1k_j7nl1.php(26): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1k_j7nl1.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$ret\
    \ = array();\n\tforeach ($l as $k => $v) {\n\t\tif ($v > 0) {\n\t\t\t$ret[] =\
    \ $v;\n\t\t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdkur1bx.php:17\n\
    Stack trace:\n#0 /tmp/tmppdkur1bx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmppdkur1bx.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2p1ro7o.php:16\n\
    Stack trace:\n#0 /tmp/tmpj2p1ro7o.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpj2p1ro7o.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$result\
    \ = array();\n\tforeach ($l as $element) {\n\t\tif ($element > 0) {\n\t\t\t$result[]\
    \ = $element;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($num) {\n        return $num > 0;\n    });\n\
    }\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1gtyjr5.php:17\n\
    Stack trace:\n#0 /tmp/tmpm1gtyjr5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpm1gtyjr5.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb21u18g2.php:15\n\
    Stack trace:\n#0 /tmp/tmpb21u18g2.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpb21u18g2.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $pos_list = [];\n    foreach ($l as $num) {\n        if ($num > 0) {\n     \
    \       array_push($pos_list, $num);\n        }\n    }\n    return $pos_list;\n\
    }\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $v) {\n        if ($v > 0) {\n            $res[]\
    \ = $v;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $answer\
    \ = [];\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] > 0) {\n     \
    \ array_push($answer, $l[$i]);\n    }\n  }\n  return $answer;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $result\
    \ = [];\n  foreach ($l as $num) {\n    if ($num > 0) {\n      $result[] = $num;\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\nprint_r(get_positive([-1,\
    \ 2, -4, 5, 6]));\nprint_r(get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8] => 123\n\
    \    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsr0gzqp.php:19\n\
    Stack trace:\n#0 /tmp/tmpjsr0gzqp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjsr0gzqp.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // YOUR CODE HERE\n    return array_filter($l, function($var) { return $var\
    \ > 0; });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1i67q8bl.php:17\n\
    Stack trace:\n#0 /tmp/tmp1i67q8bl.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1i67q8bl.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$ret\
    \ = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$ret[] = $v;\n\t\
    \t}\n\t}\n\treturn $ret;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$a\
    \ = array();\n\tforeach ($l as $k => $v) {\n\t\tif ($v > 0) {\n\t\t\t$a[] = $v;\n\
    \t\t}\n\t}\n\treturn $a;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $p = array();\n    foreach ($l as $e) {\n        if ($e > 0) {\n           \
    \ $p[] = $e;\n        }\n    }\n    return $p;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ckxmkna.php:16\n\
    Stack trace:\n#0 /tmp/tmp1ckxmkna.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1ckxmkna.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($n) {\n        return $n > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgq5ully.php:18\n\
    Stack trace:\n#0 /tmp/tmpmgq5ully.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmgq5ully.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$positive\
    \ = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$positive[] = $v;\n\
    \t\t}\n\t}\n\treturn $positive;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $n) {\n        if ($n > 0) {\n           \
    \ $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\n$l = [-1, 2,\
    \ -4, 5, 6];\nvar_dump(get_positive($l));\n$l = [5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10];\nvar_dump(get_positive($l));\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [1]=>\n  int(2)\n  [3]=>\n  int(5)\n  [4]=>\n  int(6)\n}\n\
    array(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [3]=>\n  int(2)\n  [5]=>\n\
    \  int(3)\n  [6]=>\n  int(9)\n  [8]=>\n  int(123)\n  [9]=>\n  int(1)\n}\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp_60ktzb_.php:22\nStack trace:\n\
    #0 /tmp/tmp_60ktzb_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_60ktzb_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzayzz3_.php:16\n\
    Stack trace:\n#0 /tmp/tmplzayzz3_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmplzayzz3_.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($v) {\n        return $v > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bfv9axw.php:18\n\
    Stack trace:\n#0 /tmp/tmp9bfv9axw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9bfv9axw.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\treturn\
    \ array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8tugt6z.php:16\n\
    Stack trace:\n#0 /tmp/tmpa8tugt6z.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpa8tugt6z.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $res = [];\n    foreach ($l as $i) {\n        if ($i > 0)\n            $res[]\
    \ = $i;\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n   \
    \         $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$l\
    \ = [-1, 2, -4, 5, 6];\necho \"Function 1: \" . PHP_EOL;\necho \"Input: \" . PHP_EOL;\n\
    print_r($l);\necho \"Output: \" . PHP_EOL;\nprint_r(get_positive($l));\necho PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Function 1: \nInput: \nArray\n(\n    [0] => -1\n    [1] => 2\n    [2] =>\
    \ -4\n    [3] => 5\n    [4] => 6\n)\nOutput: \nArray\n(\n    [0] => 2\n    [1]\
    \ => 5\n    [2] => 6\n)\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($x) { return $x > 0; });\n}\n\nprint_r(get_positive([-1,\
    \ 2, -4, 5, 6]));\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpo3d8ctjw.php:18\nStack trace:\n#0 /tmp/tmpo3d8ctjw.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo3d8ctjw.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $l1 = array();\n    foreach ($l as $i) {\n        if ($i > 0) {\n          \
    \  array_push($l1, $i);\n        }\n    }\n    return $l1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $result\
    \ = [];\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $result[] = $item;\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$l\
    \ = array_filter($l, function($val) {\n\t\treturn $val > 0;\n\t});\n\treturn $l;\n\
    }\n$arr = array(-1, 2, -4, 5, 6);\nvar_dump(get_positive($arr));\n$arr = array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\nvar_dump(get_positive($arr));\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [1]=>\n  int(2)\n  [3]=>\n  int(5)\n  [4]=>\n  int(6)\n}\n\
    array(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [3]=>\n  int(2)\n  [5]=>\n\
    \  int(3)\n  [6]=>\n  int(9)\n  [8]=>\n  int(123)\n  [9]=>\n  int(1)\n}\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp6i_em01y.php:23\nStack trace:\n\
    #0 /tmp/tmp6i_em01y.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6i_em01y.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($n) {\n        return $n > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7in8i3e.php:18\n\
    Stack trace:\n#0 /tmp/tmpq7in8i3e.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpq7in8i3e.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // Write your code here\n    $arr = [];\n    foreach ($l as $v) {\n        if\
    \ ($v > 0) {\n            $arr[] = $v;\n        }\n    }\n    return $arr;\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positives = [];\n    foreach ($l as $num) {\n        if ($num > 0) {\n    \
    \        $positives[] = $num;\n        }\n    }\n    return $positives;\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $r\
    \ = [];\n  foreach ($l as $e) {\n    if ($e > 0) {\n      $r[] = $e;\n    }\n\
    \  }\n  return $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($i) { return $i > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6fmcj1wk.php:16\n\
    Stack trace:\n#0 /tmp/tmp6fmcj1wk.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp6fmcj1wk.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $v) {\n        if ($v > 0) {\n           \
    \ $result[] = $v;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $list = [];\n    foreach ($l as $number) {\n        if ($number > 0) {\n   \
    \         $list[] = $number;\n        }\n    }\n    return $list;\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$result\
    \ = array();\n\tforeach ($l as $key => $val) {\n\t\tif ($val > 0) {\n\t\t\t$result[]\
    \ = $val;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$l = array(-1, 2, -4, 5, 6);\n\
    var_dump(get_positive($l));\n\n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n\
    var_dump(get_positive($l));\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(6)\n}\n\
    array(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n\
    \  int(3)\n  [4]=>\n  int(9)\n  [5]=>\n  int(123)\n  [6]=>\n  int(1)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $p = [];\n    foreach ($l as $i) {\n        if ($i > 0) {\n            $p[]\
    \ = $i;\n        }\n    }\n    return $p;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, function($i) {\n    return $i > 0;\n  });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2j23wizo.php:18\n\
    Stack trace:\n#0 /tmp/tmp2j23wizo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2j23wizo.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  return\
    \ array_filter($l, \"is_positive\");\n}\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_positive' not found or invalid function name in /tmp/tmp1pvwa11n.php on\
    \ line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pvwa11n.php:15\n\
    Stack trace:\n#0 /tmp/tmp1pvwa11n.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp1pvwa11n.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    foreach ($l as $el) {\n        if ($el > 0) {\n         \
    \   $result[] = $el;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmblxxvwi.php:15\n\
    Stack trace:\n#0 /tmp/tmpmblxxvwi.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmblxxvwi.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $l1 = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] > 0)\
    \ {\n            $l1[] = $l[$i];\n        }\n    }\n    return $l1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $out = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n        \
    \    $out[] = $item;\n        }\n    }\n    return $out;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\treturn\
    \ array_filter($l, function($n) { return $n > 0; });\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_36ev3x.php:16\n\
    Stack trace:\n#0 /tmp/tmp6_36ev3x.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp6_36ev3x.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$new_array\
    \ = [];\n\tforeach ($l as $value) {\n\t\tif ($value > 0) {\n\t\t\t$new_array[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $new_array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $positive = [];\n    foreach ($l as $number) {\n        if ($number > 0) {\n\
    \            $positive[] = $number;\n        }\n    }\n    return $positive;\n\
    }\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            $result[] = $l[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ $result = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            $result[] = $l[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$new\
    \ = [];\n\tforeach ($l as $key => $value) {\n\t\tif ($value > 0) {\n\t\t\t$new[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $new;\n}\n\necho '<pre>';\nprint_r(get_positive([-1,\
    \ 2, -4, 5, 6]));\necho '</pre>';\n\necho '<pre>';\nprint_r(get_positive([5, 3,\
    \ -5, 2, -3, 3, 9, 0, 123, 1, -10]));\necho '</pre>';\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n</pre><pre>Array\n\
    (\n    [0] => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5]\
    \ => 123\n    [6] => 1\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n  $positives\
    \ = [];\n  foreach ($l as $n) {\n    if ($n > 0) {\n      $positives[] = $n;\n\
    \    }\n  }\n  return $positives;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ return array_filter($l, function($value) {\n        return $value > 0;\n   \
    \ });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6sod186o.php:18\n\
    Stack trace:\n#0 /tmp/tmp6sod186o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6sod186o.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n\t$r\
    \ = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$r[] = $v;\n\t\t\
    }\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return only positive numbers in the list.\n// >>> get_positive([-1,\
    \ 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive($l) {\n   \
    \ // Write your code here.\n    $result = [];\n    foreach ($l as $value) {\n\
    \        if ($value > 0) {\n            $result[] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nvar_dump(get_positive([-1, 2, -4, 5, 6]));\nvar_dump(get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]));\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(6)\n}\n\
    array(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n\
    \  int(3)\n  [4]=>\n  int(9)\n  [5]=>\n  int(123)\n  [6]=>\n  int(1)\n}\n"
  stderr: ''
  exit_code: 0
  status: OK

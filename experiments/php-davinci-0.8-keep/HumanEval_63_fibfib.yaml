name: HumanEval_63_fibfib
language: php
prompt: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n//\
  \ fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n// Please\
  \ write a function to efficiently compute the n-th element of the fibfib number\
  \ sequence.\n// >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n\
  // 24\nfunction fibfib($n) {\n"
tests: "function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n \
  \   if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
  \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
  \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if ($n == 0) {\n        return 0;\n    } else if ($n == 1) {\n\
    \        return 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n\
    \        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\
    echo fibfib(5) . PHP_EOL;\necho fibfib(8) . PHP_EOL;\necho fibfib(14) . PHP_EOL;",
  "  if($n==0) {\n    return 0;\n  } else if($n==1) {\n    return 0;\n  } else if($n==2)\
    \ {\n    return 1;\n  } else {\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    \  }\n}\n\necho fibfib(2).\"\\n\";\necho fibfib(5).\"\\n\";\necho fibfib(8).\"\
    \\n\";", "    if($n <= 1) {\n        return 0;\n    }\n    if($n == 2) {\n   \
    \     return 1;\n    }\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }\necho fibfib(5);", "    $numbers = array(0, 0, 1);\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $numbers[$i % 3] = $numbers[($i - 1) % 3] + $numbers[($i -\
    \ 2) % 3] + $numbers[($i - 3) % 3];\n    }\n    return $numbers[$n % 3];\n}\n\n\
    echo fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\"\
    ;", "\n}\n", "\n}\n\n$testCase = 'fibfib(1)';\n$expected = 0;\n$output = fibfib(1);\n\
    if ($output === $expected) {\n    echo '<br>' . $testCase . ' passed';\n} else\
    \ {\n    echo '<br>' . $testCase . ' failed';\n}\n\n$testCase = 'fibfib(5)';\n\
    $expected = 4;\n$output = fibfib(5);\nif ($output === $expected) {\n    echo '<br>'\
    \ . $testCase . ' passed';\n} else {\n    echo '<br>' . $testCase . ' failed';\n\
    }\n\n$testCase = 'fibfib(8)';\n$expected = 24;\n$output = fibfib(8);\nif ($output\
    \ === $expected) {\n    echo '<br>' . $testCase . ' passed';\n} else {\n    echo\
    \ '<br>' . $testCase . ' failed';\n}", "    $fibs = [0, 0, 1];\n    if ($n < 3)\
    \ {\n        return $fibs[$n];\n    }\n    for ($i = 3; $i <= $n; $i++) {\n  \
    \      $fibs[$i] = $fibs[$i - 1] + $fibs[$i - 2] + $fibs[$i - 3];\n    }\n   \
    \ return $fibs[$n];\n}\necho fibfib(0) . PHP_EOL;\necho fibfib(1) . PHP_EOL;\n\
    echo fibfib(2) . PHP_EOL;\necho fibfib(3) . PHP_EOL;\necho fibfib(4) . PHP_EOL;\n\
    echo fibfib(5) . PHP_EOL;\necho fibfib(6) . PHP_EOL;\necho fibfib(7) . PHP_EOL;\n\
    echo fibfib(8) . PHP_EOL;\necho fibfib(9) . PHP_EOL;\necho fibfib(10) . PHP_EOL;\n\
    echo fibfib(11) . PHP_EOL;\necho fibfib(12) . PHP_EOL;\necho fibfib(13) . PHP_EOL;\n\
    echo fibfib(14) . PHP_EOL;\necho fibfib(15) . PHP_EOL;\necho fibfib(16) . PHP_EOL;\n\
    echo fibfib(17) . PHP_EOL;\necho fibfib(18) . PHP_EOL;\necho fibfib(19) . PHP_EOL;\n\
    echo fibfib(20) . PHP_EOL;\necho fibfib(21) . PHP_EOL;\necho fibfib(22) . PHP_EOL;\n\
    echo fibfib(23) . PHP_EOL;\necho fibfib(24) . PHP_EOL;\necho fibfib(25) . PHP_EOL;\n\
    echo fibfib(26) . PHP_EOL;\necho fibfib(27) . PHP_EOL;\necho fibfib(", "    if($n\
    \ == 0) {\n        return 0;\n    } else if($n == 1) {\n        return 0;\n  \
    \  } else if($n == 2) {\n        return 1;\n    } else {\n        return fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n    }\n}\necho fibfib(8);", "    if ($n == 0)\
    \ {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n\
    \    if ($n == 2) {\n        return 1;\n    }\n    $prev3 = 0;\n    $prev2 = 0;\n\
    \    $prev1 = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $sum = $prev1 +\
    \ $prev2 + $prev3;\n        $prev3 = $prev2;\n        $prev2 = $prev1;\n     \
    \   $prev1 = $sum;\n    }\n    return $sum;\n}\n", "    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 1; $i < $n; $i++) {\n        $d = $c;\n        $c\
    \ = $c + $b + $a;\n        $a = $b;\n        $b = $d;\n    }\n    return $c;\n\
    }\n\necho \"fibfib(0) = \".fibfib(0).\"\\n\";\necho \"fibfib(1) = \".fibfib(1).\"\
    \\n\";\necho \"fibfib(2) = \".fibfib(2).\"\\n\";\necho \"fibfib(3) = \".fibfib(3).\"\
    \\n\";\necho \"fibfib(4) = \".fibfib(4).\"\\n\";\necho \"fibfib(5) = \".fibfib(5).\"\
    \\n\";\necho \"fibfib(6) = \".fibfib(6).\"\\n\";\necho \"fibfib(7) = \".fibfib(7).\"\
    \\n\";\necho \"fibfib(8) = \".fibfib(8).\"\\n\";\necho \"fibfib(9) = \".fibfib(9).\"\
    \\n\";\necho \"fibfib(10) = \".fibfib(10).\"\\n\";\necho \"fibfib(11) = \".fibfib(11).\"\
    \\n\";\necho \"fibfib(12) = \".fibfib(12).\"\\n\";\necho \"fibfib(13) = \".fibfib(13).\"\
    \\n\";\necho \"fibfib(14) = \".fibfib(14).\"\\n\";\necho \"fibfib(15) = \".fibfib(15).\"\
    \\n\";\necho \"fibfib(16) = \".fibfib(16).\"\\n\";\necho \"fibfib(17) = \".fibfib(17).\"\
    \\n\";\necho \"fibfib(18) = \".fibfib(18).\"\\n\";\necho \"fib", "    // TODO\n\
    }", "    $arr = array(0, 0, 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $arr[$i]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return $arr[$i - 1];\n\
    }\n$arr = array(1, 5, 8);\nforeach ($arr as $value) {\n    echo fibfib($value)\
    \ . PHP_EOL;\n}", "  if ($n == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n  \
    \  return 0;\n  }\n  if ($n == 2) {\n    return 1;\n  }\n  $f1 = 0;\n  $f2 = 0;\n\
    \  $f3 = 1;\n  for ($i = 3; $i <= $n; $i++) {\n    $f = $f1 + $f2 + $f3;\n   \
    \ $f1 = $f2;\n    $f2 = $f3;\n    $f3 = $f;\n  }\n  return $f;\n}\necho fibfib(0)\
    \ . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(40) . \"\\n\";", "    $a\
    \ = [0, 0, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $a[$i] = $a[$i - 1]\
    \ + $a[$i - 2] + $a[$i - 3];\n    }\n    return $a[$n];\n}", "    if($n === 0)\
    \ {\n        return 0;\n    }\n    if($n === 1) {\n        return 0;\n    }\n\
    \    if($n === 2) {\n        return 1;\n    }\n    $n2 = 0;\n    $n1 = 0;\n  \
    \  $n0 = 1;\n    for($i = 3; $i <= $n; $i++) {\n        $sum = $n2 + $n1 + $n0;\n\
    \        $n2 = $n1;\n        $n1 = $n0;\n        $n0 = $sum;\n    }\n    return\
    \ $sum;\n}\n", "    if($n == 0) {\n        return 0;\n    } else if($n == 1) {\n\
    \        return 0;\n    } else if($n == 2) {\n        return 1;\n    } else {\n\
    \        return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n    }\n}\n", "  \
    \  if ($n == 0) {\n        return 0;\n    } else if ($n == 1) {\n        return\
    \ 0;\n    } else if ($n == 2) {\n        return 1;\n    }\n    $fib = array(0,\
    \ 0, 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i - 1]\
    \ + $fib[$i - 2] + $fib[$i - 3];\n    }\n    return $fib[$n];\n}\n\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\n", "    $zero\
    \ = 0;\n    $one = 0;\n    $two = 1;\n    if ($n == 0) {\n        return $zero;\n\
    \    } elseif ($n == 1) {\n        return $one;\n    } elseif ($n == 2) {\n  \
    \      return $two;\n    } else {\n        for ($i = 3; $i <= $n; $i++) {\n  \
    \          $temp = $zero + $one + $two;\n            $zero = $one;\n         \
    \   $one = $two;\n            $two = $temp;\n        }\n        return $two;\n\
    \    }\n}", "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n\
    \        return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\necho fibfib(1);\necho\
    \ \"\\n\";\necho fibfib(5);\necho \"\\n\";\necho fibfib(8);\necho \"\\n\";", " \
    \   $arr = [0, 0, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $arr[$i] =\
    \ $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return $arr[$n];\n}\n\
    echo fibfib(8);", "    if ($n <= 1) {\n        return 0;\n    } else if ($n ==\
    \ 2) {\n        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(8);", "\n}", "    $a = 0;\n\
    \    $b = 0;\n    $c = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $d = $a\
    \ + $b + $c;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n  \
    \  return $c;\n}\n", "\tif ($n === 0) {\n\t\treturn 0;\n\t} else if ($n === 1)\
    \ {\n\t\treturn 0;\n\t} else if ($n === 2) {\n\t\treturn 1;\n\t}\n\treturn fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\nprint fibfib(1) . \"\\n\";\nprint\
    \ fibfib(5) . \"\\n\";\nprint fibfib(8) . \"\\n\";", "  if ($n <= 1) {\n    return\
    \ 0;\n  } else if ($n == 2) {\n    return 1;\n  } else {\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n  }\n}\n", "  $result = 0;\n  if ($n\
    \ === 0) {\n    return 0;\n  }\n  else if ($n === 1) {\n    return 0;\n  }\n \
    \ else if ($n === 2) {\n    return 1;\n  }\n  else {\n    $result = fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n  }\n  return $result;\n}", "    if ($n <= 1)\
    \ return 0;\n    if ($n == 2) return 1;\n    $a = 0;\n    $b = 0;\n    $c = 1;\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $a = $b;\n        $b = $c;\n    \
    \    $c = $a + $b + $c;\n    }\n    return $c;\n}\n", "    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b + $c;\n    }\n    return $a;\n}\nfibfib(5);", "\t\
    if ($n < 3) {\n\t\treturn $n - 1;\n\t}\n\t$a = $b = $c = 0;\n\tfor ($i = 3; $i\
    \ <= $n; $i++) {\n\t\t$c = $a + $b + $c;\n\t\t$a = $b;\n\t\t$b = $c;\n\t}\n\t\
    return $c;\n}\n", "\tif ($n == 0) return 0;\n\tif ($n == 1) return 0;\n\tif ($n\
    \ == 2) return 1;\n\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n}", " \
    \   $a = 0;\n    $b = 0;\n    $c = 1;\n    if ($n === 0) {\n        return $a;\n\
    \    }\n    if ($n === 1) {\n        return $b;\n    }\n    if ($n === 2) {\n\
    \        return $c;\n    }\n    $d = 0;\n    for ($i = 2; $i < $n; $i++) {\n \
    \       $d = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n\
    \    }\n    return $d;\n}\necho fibfib(1);\necho \"\\n\";\necho fibfib(5);\necho\
    \ \"\\n\";\necho fibfib(8);\necho \"\\n\";\n", "  // TODO: Implemeent this function\
    \ to compute the fibfib function.\n  if ($n == 0) {\n    return 0;\n  } else if\
    \ ($n == 1) {\n    return 0;\n  } else if ($n == 2) {\n    return 1;\n  } else\
    \ {\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n  }\n}", "    if\
    \ ($n <= 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return 1;\n\
    \    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\necho\
    \ fibfib(5);", "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1)\
    \ {\n        return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n\
    \    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}", "    $fibfib\
    \ = array();\n    $fibfib[0] = 0;\n    $fibfib[1] = 0;\n    $fibfib[2] = 1;\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i\
    \ - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\necho fibfib(4);\n\
    echo \"\\n\";\n", "    $prev = 0;\n    $prev_prev = 0;\n    $prev_prev_prev =\
    \ 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($i == 0) {\n            $curr\
    \ = 0;\n        } else if ($i == 1) {\n            $curr = 0;\n        } else\
    \ if ($i == 2) {\n            $curr = 1;\n        } else {\n            $curr\
    \ = $prev + $prev_prev + $prev_prev_prev;\n        }\n        $prev_prev_prev\
    \ = $prev_prev;\n        $prev_prev = $prev;\n        $prev = $curr;\n    }\n\
    \    return $curr;\n}", "    if ($n < 3) {\n        return $n - 1;\n    }\n\n\
    \    $cache = array(0, 0, 1);\n    $i = 3;\n    while ($i <= $n) {\n        $cache[$i\
    \ % 3] = $cache[($i - 1) % 3] + $cache[($i - 2) % 3] + $cache[($i - 3) % 3];\n\
    \        $i++;\n    }\n\n    return $cache[($i - 1) % 3];\n}\n", "    $arr = [0,\
    \ 0, 1];\n    $i = 3;\n    while ($i <= $n) {\n        $arr[$i] = $arr[$i - 1]\
    \ + $arr[$i - 2] + $arr[$i - 3];\n        $i++;\n    }\n    return $arr[$i - 1];\n\
    }", "\tif ($n === 0) {\n\t\treturn 0;\n\t}\n\tif ($n === 1) {\n\t\treturn 0;\n\
    \t}\n\tif ($n === 2) {\n\t\treturn 1;\n\t}\n\tif ($n > 2) {\n\t\treturn fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n\t}\n}\n\necho fibfib(8) . PHP_EOL;",
  "  $f = [0, 0, 1];\n  if ($n < count($f)) {\n    return $f[$n];\n  }\n\n  $res =\
    \ 0;\n  for ($i = 3; $i <= $n; $i++) {\n    $res = $f[0] + $f[1] + $f[2];\n  \
    \  $f[0] = $f[1];\n    $f[1] = $f[2];\n    $f[2] = $res;\n  }\n\n  return $res;\n\
    }\n\n$res = fibfib(8);\nvar_dump($res);\necho \"\\n\";", "    $first = 0;\n  \
    \  $second = 0;\n    $third = 1;\n    $result = 0;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        $result = $first + $second + $third;\n        $first = $second;\n\
    \        $second = $third;\n        $third = $result;\n    }\n    return $result;\n\
    }\necho fibfib(3) . \"\\n\";", "  if ($n == 0) return 0;\n  if ($n == 1) return\
    \ 0;\n  if ($n == 2) return 1;\n  $x = 0;\n  $y = 0;\n  $z = 1;\n  for ($i = 0;\
    \ $i < $n - 2; $i++) {\n    $x = $y;\n    $y = $z;\n    $z = $x + $y + $z;\n \
    \ }\n  return $z;\n}\necho fibfib(1);\necho \"\\n\";\necho fibfib(5);\necho \"\
    \\n\";\necho fibfib(8);\necho \"\\n\";\n", "  if ($n < 2) {\n    return 0;\n \
    \ }\n  if ($n == 2) {\n    return 1;\n  }\n  $a = $b = $c = 0;\n  for ($i = 2;\
    \ $i < $n; $i++) {\n    $a = $b;\n    $b = $c;\n    $c = $a + $b + $c;\n  }\n\
    \  return $c;\n}\n", "  if ($n < 3) return $n - 1;\n  return fibfib($n - 1) +\
    \ fibfib($n - 2) + fibfib($n - 3);\n}\n\necho fibfib(1) . PHP_EOL;\necho fibfib(5)\
    \ . PHP_EOL;\necho fibfib(8) . PHP_EOL;", "    if ($n < 2) {\n        return 0;\n\
    \    } else if ($n == 2) {\n        return 1;\n    } else {\n        return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}", "\tif ($n == 0) {\n\t\t\
    return 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 0;\n\t}\n\tif ($n == 2) {\n\t\treturn\
    \ 1;\n\t}\n\t$res = 0;\n\t$last1 = 0;\n\t$last2 = 1;\n\t$last3 = 0;\n\tfor ($i\
    \ = 2; $i < $n; $i++) {\n\t\t$res = $last1 + $last2 + $last3;\n\t\t$last3 = $last2;\n\
    \t\t$last2 = $last1;\n\t\t$last1 = $res;\n\t}\n\treturn $res;\n}\necho fibfib(5).\"\
    \\n\";\necho fibfib(8).\"\\n\";\necho fibfib(1).\"\\n\";", "    if ($n == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if\
    \ ($n == 2) {\n        return 1;\n    }\n    $n0 = 0;\n    $n1 = 0;\n    $n2 =\
    \ 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $n0 = $n1;\n        $n1 = $n2;\n\
    \        $n2 = $n1 + $n0 + $n2;\n    }\n    return $n2;\n}\necho fibfib(1) . \"\
    <br>\";\necho fibfib(5) . \"<br>\";\necho fibfib(8) . \"<br>\";", "    $last_three\
    \ = [0, 0, 1];\n    for ($i = 2; $i < $n; $i++) {\n        $last_three = [$last_three[1],\
    \ $last_three[2], $last_three[0] + $last_three[1] + $last_three[2]];\n    }\n\
    \    return $last_three[2];\n}\n", "    if ($n <= 0) return 0;\n    if ($n <=\
    \ 2) return $n - 1;\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n -\
    \ 3);\n}\n\n$start = microtime(true);\necho fibfib(100);\n$end = microtime(true);\n\
    echo \"\\n\";\necho $end - $start;", "    if ($n == 0) {\n        return 0;\n\
    \    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n   \
    \     return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n - 2)\
    \ + fibfib($n - 3);\n    }\n}\n", "    if ($n == 0) return 0;\n    if ($n == 1)\
    \ return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}", "    if ($n == 0) return 0;\n    if ($n == 1) return 0;\n\
    \    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }\nvar_dump(fibfib(8));", "    if ($n == 0) {\n        return 0;\n    }\n    if\
    \ ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return 1;\n\
    \    }\n    $n1 = 0;\n    $n2 = 0;\n    $n3 = 1;\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        $tmp = $n1 + $n2 + $n3;\n        $n1 = $n2;\n        $n2 = $n3;\n\
    \        $n3 = $tmp;\n    }\n    return $n3;\n}\necho fibfib(5) . \"\\n\";\necho\
    \ fibfib(8) . \"\\n\";", "  // Your code here...\n  return $n;\n}\n\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "\tif ($n\
    \ == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 0;\n\t}\n\tif ($n\
    \ == 2) {\n\t\treturn 1;\n\t}\n\t$last_three_sum = 1;\n\t$fib_1 = 0;\n\t$fib_2\
    \ = 1;\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$last_three_sum = $fib_1 + $fib_2\
    \ + $last_three_sum;\n\t\t$fib_1 = $fib_2;\n\t\t$fib_2 = $last_three_sum;\n\t\
    }\n\treturn $last_three_sum;\n}\n\necho fibfib(1).\"\\n\";\necho fibfib(5).\"\\\
    n\";\necho fibfib(8).\"\\n\";", "    $fibfibN = 0;\n    if ($n == 0) {\n     \
    \   $fibfibN = 0;\n    } else if ($n == 1) {\n        $fibfibN = 0;\n    } else\
    \ if ($n == 2) {\n        $fibfibN = 1;\n    } else {\n        $fibfibN = fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n    }\n    return $fibfibN;\n}\necho(fibfib(5));",
  "    if ($n == 0) return 0;\n    else if ($n == 1) return 0;\n    else if ($n ==\
    \ 2) return 1;\n    else return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }\n", "\tif ($n < 3) return $n-1;\n\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }", "\t//TODO\n}", "\t$result = 0;\n\tif ($n > 2) {\n\t\t$a = 0;\n\t\t$b = 0;\n\
    \t\t$c = 1;\n\t\tfor ($i = 2; $i < $n; $i++) {\n\t\t\t$result = $a + $b + $c;\n\
    \t\t\t$a = $b;\n\t\t\t$b = $c;\n\t\t\t$c = $result;\n\t\t}\n\t} elseif ($n ==\
    \ 2) {\n\t\t$result = 1;\n\t}\n\treturn $result;\n}\necho fibfib(2);\n", "\t$arr\
    \ = array(0, 0, 1);\n\tif($n <= 2) return $arr[$n];\n\tfor($i = 3; $i <= $n; $i++)\
    \ {\n\t\t$arr[$i] = $arr[$i-1] + $arr[$i-2] + $arr[$i-3];\n\t}\n\treturn $arr[$n];\n\
    }\n\necho fibfib(1).\"\\n\";\necho fibfib(5).\"\\n\";\necho fibfib(8).\"\\n\";",
  "    if ($n <= 0) {\n        return 0;\n    }\n    $arr = [0, 0, 1];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $arr[$i] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ - 3];\n    }\n    return $arr[$i - 1];\n}\n\necho fibfib(8);", "    $sequence\
    \ = [0, 0, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $sequence[$i] = $sequence[$i\
    \ - 1] + $sequence[$i - 2] + $sequence[$i - 3];\n    }\n    return $sequence[$n];\n\
    }\n", "  $array = [0, 0, 1];\n  if ($n <= 0) {\n    return $array[0];\n  } else\
    \ if ($n <= 2) {\n    return $array[$n];\n  }\n  for ($i = 3; $i <= $n; $i++)\
    \ {\n    $array[$i] = $array[$i - 1] + $array[$i - 2] + $array[$i - 3];\n  }\n\
    \  return $array[$n];\n}\necho fibfib(3) . PHP_EOL;\necho fibfib(5) . PHP_EOL;\n\
    echo fibfib(8) . PHP_EOL;\necho fibfib(11) . PHP_EOL;\necho fibfib(14) . PHP_EOL;\n\
    echo fibfib(17) . PHP_EOL;\n", "\tif ($n == 0) {\n\t\treturn 0;\n\t} else if ($n\
    \ == 1) {\n\t\treturn 0;\n\t} else if ($n == 2) {\n\t\treturn 1;\n\t} else {\n\
    \t\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\t}\n}\necho fibfib(1);\n\
    echo \"\\n\";\necho fibfib(5);\necho \"\\n\";\necho fibfib(8);\necho \"\\n\";",
  "    if ($n == 0) return 0;\n    if ($n == 1) return 0;\n    if ($n == 2) return\
    \ 1;\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n}\n", "    if ($n\
    \ == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n \
    \   }\n    if ($n == 2) {\n        return 1;\n    }\n    $a = $b = $c = 0;\n \
    \   for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b + $c;\n        $a = $b;\n\
    \        $b = $c;\n    }\n    return $c;\n}\necho fibfib(1) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\n", "    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n", "    if ($n == 0) return 0;\n    if ($n ==\
    \ 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n", "  return fibfib_helper($n, 0, 0, 1);\n}\n", "\tif($n\
    \ == 0 || $n == 1) {\n\t\treturn 0;\n\t}\n\telse if($n == 2) {\n\t\treturn 1;\n\
    \t}\n\telse {\n\t\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\t}\n}\n\
    print fibfib(1);\nprint \"\\n\";\nprint fibfib(5);\nprint \"\\n\";\nprint fibfib(8);\n\
    print \"\\n\";\n", "  if($n==0){\n    return 0;\n  }\n  if($n==1){\n    return\
    \ 0;\n  }\n  if($n==2){\n    return 1;\n  }\n  $sequence = array(0,0,1);\n  for($i=2;$i<$n;$i++){\n\
    \    $sequence[$i+1] = $sequence[$i]+$sequence[$i-1]+$sequence[$i-2];\n  }\n \
    \ return $sequence[$n];\n}\necho fibfib(5);\necho fibfib(8);", "\tif($n <= 2)\
    \ return $n-1;\n\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n}\n\nprint_r(fibfib(1).\"\
    \\n\");\nprint_r(fibfib(5).\"\\n\");\nprint_r(fibfib(8).\"\\n\");", "  if ($n\
    \ < 0) return -1;\n  $a = 0;\n  $b = 0;\n  $c = 1;\n  $i = 2;\n  while ($i <=\
    \ $n) {\n    $d = $a + $b + $c;\n    $a = $b;\n    $b = $c;\n    $c = $d;\n  \
    \  $i++;\n  }\n  return $d;\n}\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\
    \\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8) .\
    \ \"\\n\";", "    if ($n < 0) return -1;\n    if ($n <= 1) return 0;\n    if ($n\
    \ == 2) return 1;\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $d;\n    }\n    return $d;\n}\necho fibfib(1).\"\\n\";\necho fibfib(5).\"\
    \\n\";\necho fibfib(8).\"\\n\";", "    $cache = [0, 0, 1];\n    for ($i = 3; $i\
    \ <= $n; $i++) {\n        $cache[$i] = $cache[$i - 1] + $cache[$i - 2] + $cache[$i\
    \ - 3];\n    }\n    return $cache[$i - 1];\n}\n\necho fibfib(5);", "  $num1 =\
    \ 0;\n  $num2 = 0;\n  $num3 = 1;\n  $count = 0;\n  $result = 0;\n  if ($n == 0)\
    \ {\n    return 0;\n  }\n  while ($count < $n - 1) {\n    $result = $num1 + $num2\
    \ + $num3;\n    $num1 = $num2;\n    $num2 = $num3;\n    $num3 = $result;\n   \
    \ $count++;\n  }\n  return $result;\n}\necho fibfib(10);", "    $fib = [0, 0,\
    \ 1];\n    if ($n == 0) {\n        return $fib[0];\n    } elseif ($n == 1) {\n\
    \        return $fib[1];\n    } elseif ($n == 2) {\n        return $fib[2];\n\
    \    }\n    for ($i = 3; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i - 1] +\
    \ $fib[$i - 2] + $fib[$i - 3];\n    }\n    return $fib[$n];\n}\necho fibfib(5);",
  "    $fib1 = 0;\n    $fib2 = 0;\n    $fib3 = 1;\n    for ($i = 2; $i <= $n; $i++)\
    \ {\n        $fib1 = $fib2;\n        $fib2 = $fib3;\n        $fib3 = $fib1 + $fib2\
    \ + $fib3;\n    }\n    return $fib3;\n}\necho \"fibfib(0) = \".fibfib(0).\"\\\
    n\";\necho \"fibfib(1) = \".fibfib(1).\"\\n\";\necho \"fibfib(2) = \".fibfib(2).\"\
    \\n\";\necho \"fibfib(3) = \".fibfib(3).\"\\n\";\necho \"fibfib(4) = \".fibfib(4).\"\
    \\n\";\necho \"fibfib(5) = \".fibfib(5).\"\\n\";\necho \"fibfib(6) = \".fibfib(6).\"\
    \\n\";\necho \"fibfib(7) = \".fibfib(7).\"\\n\";\necho \"fibfib(8) = \".fibfib(8).\"\
    \\n\";\necho \"fibfib(9) = \".fibfib(9).\"\\n\";\necho \"fibfib(10) = \".fibfib(10).\"\
    \\n\";", "  $table = array(0, 0, 1);\n  for ($i = 3; $i <= $n; $i++) {\n    $table[$i]\
    \ = $table[$i - 1] + $table[$i - 2] + $table[$i - 3];\n  }\n  return $table[$i\
    \ - 1];\n}\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "\t$fibs =\
    \ array(0, 0, 1);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$fibs[$i] = $fibs[$i-1]\
    \ + $fibs[$i-2] + $fibs[$i-3];\n\t}\n\treturn $fibs[$n];\n}\necho fibfib(1).\"\
    \\n\";\necho fibfib(5).\"\\n\";\necho fibfib(8).\"\\n\";", "    if ($n <= 0) {\n\
    \        return 0;\n    }\n    $f1 = 0;\n    $f2 = 0;\n    $f3 = 1;\n    for ($i\
    \ = 2; $i <= $n; $i++) {\n        $f1 = $f2;\n        $f2 = $f3;\n        $f3\
    \ = $f1 + $f2 + $f3;\n    }\n    return $f3;\n}\necho fibfib(1) . \"\\n\";\necho\
    \ fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";\n", "    $fn = 0;\n    $f0 =\
    \ 0;\n    $f1 = 0;\n    $f2 = 1;\n    if ($n < 3) {\n        $fn = $n - 1;\n \
    \   } else {\n        for ($i = 3; $i <= $n; $i++) {\n            $fn = $f0 +\
    \ $f1 + $f2;\n            $f0 = $f1;\n            $f1 = $f2;\n            $f2\
    \ = $fn;\n        }\n    }\n    return $fn;\n}\n", "    if ($n <= 1) {\n     \
    \   return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\necho fibfib(4) . \"\\\
    n\";\n", "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n \
    \       return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a\
    \ = 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 2; $i < $n; $i++) {\n        $d\
    \ = $c + $b + $a;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n\
    \    return $c;\n}\n", "\tif($n == 0) {\n\t\treturn 0;\n\t} else if($n == 1) {\n\
    \t\treturn 0;\n\t} else if($n == 2) {\n\t\treturn 1;\n\t}\n\t$dp = [0, 0, 1];\n\
    \tfor($i = 3; $i <= $n; $i++) {\n\t\t$dp[$i % 3] = $dp[($i-1) % 3] + $dp[($i-2)\
    \ % 3] + $dp[($i-3) % 3];\n\t}\n\treturn $dp[$n % 3];\n}\n\nfibfib(1);\n", " \
    \   if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return\
    \ 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    $n_3 = 0;\n   \
    \ $n_2 = 0;\n    $n_1 = 1;\n    $r = 0;\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $r = $n_1 + $n_2 + $n_3;\n        $n_3 = $n_2;\n        $n_2 = $n_1;\n\
    \        $n_1 = $r;\n    }\n    return $r;\n}\n", "    if ($n < 3) {\n       \
    \ return $n - 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\n$fh = fopen($argv[1], \"r\");\nwhile (!feof($fh)) {\n    $test =\
    \ trim(fgets($fh));\n    if ($test != \"\") {\n        echo fibfib($test) . \"\
    \\n\";\n    }\n}\nfclose($fh);", "  if ($n == 0) return 0;\n  if ($n == 1) return\
    \ 0;\n  if ($n == 2) return 1;\n  return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }\n\nfor ($i = 0; $i < 10; $i++) {\n  echo fibfib($i) . \"\\n\";\n}", "  // Fill\
    \ this in.\n}\n\necho fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";", "  // Your code here...\n}\n", "    if ($n === 0) {\n        return\
    \ 0;\n    }\n    if ($n === 1) {\n        return 0;\n    }\n    if ($n === 2)\
    \ {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(1) . PHP_EOL;\necho fibfib(5) . PHP_EOL;\necho fibfib(8)\
    \ . PHP_EOL;", "    if ($n == 0) return 0;\n    if ($n == 1) return 0;\n    if\
    \ ($n == 2) return 1;\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 3;\
    \ $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $d;\n    }\n    return $d;\n}\necho fibfib(0).\"\\n\";\n\
    echo fibfib(1).\"\\n\";\necho fibfib(2).\"\\n\";\necho fibfib(5).\"\\n\";\necho\
    \ fibfib(8).\"\\n\";", "\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\
    \t\treturn 0;\n\t}\n\tif ($n == 2) {\n\t\treturn 1;\n\t}\n\t$i = 2;\n\t$a = 0;\n\
    \t$b = 0;\n\t$c = 1;\n\twhile ($i < $n) {\n\t\t$d = $a + $b + $c;\n\t\t$a = $b;\n\
    \t\t$b = $c;\n\t\t$c = $d;\n\t\t$i++;\n\t}\n\treturn $d;\n}\necho fibfib(0) .\
    \ \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3)\
    \ . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(50)\
    \ . \"\\n\";", "    if ($n === 0) {\n        return 0;\n    }\n    if ($n ===\
    \ 1) {\n        return 0;\n    }\n    if ($n === 2) {\n        return 1;\n   \
    \ }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}", "    $fibfib_map\
    \ = [0, 0, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $fibfib_map[$i] =\
    \ $fibfib_map[$i - 1] + $fibfib_map[$i - 2] + $fibfib_map[$i - 3];\n    }\n  \
    \  return $fibfib_map[$n];\n}", "\n}", "  if($n <= 1) {\n    return 0;\n  }\n\
    \  else if($n == 2) {\n    return 1;\n  }\n  else {\n    return fibfib($n-1) +\
    \ fibfib($n-2) + fibfib($n-3);\n  }\n}\necho fibfib(1) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";", "  $fib_arr = [0, 0, 1];\n  for ($i\
    \ = 3; $i <= $n; $i++) {\n    $fib_arr[$i] = $fib_arr[$i - 1] + $fib_arr[$i -\
    \ 2] + $fib_arr[$i - 3];\n  }\n  return $fib_arr[$n];\n}\necho fibfib(5) . \"\\\
    n\";\necho fibfib(8) . \"\\n\";\necho fibfib(1) . \"\\n\";", "    if ($n <= 0)\
    \ {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n\
    \    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n}\necho fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\\
    n\";\necho fibfib(8) . \"\\n\";\n", "    if ($n < 2) {\n        return 0;\n  \
    \  } else if ($n == 2) {\n        return 1;\n    } else {\n        return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}", "    //this should be set\
    \ to the first three numbers of the sequence\n    $fibs = [0, 0, 1];\n    //if\
    \ $n is greater than 3 then \n    if ($n >= 3) {\n        //iterate over the fib\
    \ sequence, starting at 3\n        for ($i = 3; $i <= $n; $i++) {\n          \
    \  //add the previous three numbers and push to the fib sequence\n           \
    \ $fibs[] = array_sum(array_slice($fibs, -3));\n        }\n    }\n    //return\
    \ the last element in the fib sequence\n    return end($fibs);\n}\n\nvar_dump(fibfib(1));\n\
    var_dump(fibfib(5));\nvar_dump(fibfib(8));", "    if ($n < 2) {\n        return\
    \ 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n        return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n", "    if($n ==\
    \ 0) {\n        return 0;\n    }\n    if($n == 1) {\n        return 0;\n    }\n\
    \    if($n == 2) {\n        return 1;\n    }\n    $res = 0;\n    $f1 = 0;\n  \
    \  $f2 = 0;\n    $f3 = 1;\n    for($i = 3; $i < $n + 1; $i++) {\n        $res\
    \ = $f1 + $f2 + $f3;\n        $f1 = $f2;\n        $f2 = $f3;\n        $f3 = $res;\n\
    \    }\n    return $res;\n}\necho fibfib(1).\"\\n\";\necho fibfib(5).\"\\n\";\n\
    echo fibfib(8).\"\\n\";", "    $a = 0;\n    $b = 0;\n    $c = 1;\n    if ($n ==\
    \ 0) {\n        return $a;\n    }\n    if ($n == 1) {\n        return $b;\n  \
    \  }\n    if ($n == 2) {\n        return $c;\n    }\n    for ($i = 2; $i < $n;\
    \ $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n  \
    \      $c = $d;\n    }\n    return $d;\n}", "    // Your code here\n}", "    if($n\
    \ < 2) {\n        return 0;\n    }\n    if($n == 2) {\n        return 1;\n   \
    \ }\n    $fib1 = 0;\n    $fib2 = 0;\n    $fib3 = 1;\n    $fibn = 0;\n    for($i\
    \ = 3; $i <= $n; $i++) {\n        $fibn = $fib1 + $fib2 + $fib3;\n        $fib1\
    \ = $fib2;\n        $fib2 = $fib3;\n        $fib3 = $fibn;\n    }\n    return\
    \ $fibn;\n}\necho fibfib(8);\necho PHP_EOL;\n", "  if ($n < 2) return 0;\n  if\
    \ ($n == 2) return 1;\n  return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }\necho fibfib(0).\"\\n\";\necho fibfib(1).\"\\n\";\necho fibfib(2).\"\\n\";\n\
    echo fibfib(3).\"\\n\";\necho fibfib(4).\"\\n\";\necho fibfib(5).\"\\n\";\necho\
    \ fibfib(6).\"\\n\";\necho fibfib(7).\"\\n\";\necho fibfib(8).\"\\n\";\necho fibfib(9).\"\
    \\n\";\necho fibfib(10).\"\\n\";\n", "    if ($n === 0) {\n        return 0;\n\
    \    } else if ($n === 1) {\n        return 0;\n    } else if ($n === 2) {\n \
    \       return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i =\
    \ 0; $i < $n - 2; $i++) {\n        $a = $b;\n        $b = $c;\n        $c = $a\
    \ + $b + $c;\n    }\n    return $c;\n}\necho fibfib(5).\"\\n\";", "\tif ($n <=\
    \ 0) {\n\t\treturn 0;\n\t} else if ($n == 1) {\n\t\treturn 0;\n\t} else if ($n\
    \ == 2) {\n\t\treturn 1;\n\t} else {\n\t\treturn fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n\t}\n}\necho fibfib(1);\necho \"\\n\";\necho fibfib(5);\necho\
    \ \"\\n\";\necho fibfib(8);\necho \"\\n\";", "    $result = 0;\n    $fibNumbers\
    \ = array(0, 0, 1);\n    if ($n == 0) return 0;\n    if ($n == 1) return 0;\n\
    \    if ($n == 2) return 1;\n    $result = 0;\n    $i = 3;\n    while ($i <= $n)\
    \ {\n        $result = $fibNumbers[0] + $fibNumbers[1] + $fibNumbers[2];\n   \
    \     $fibNumbers[0] = $fibNumbers[1];\n        $fibNumbers[1] = $fibNumbers[2];\n\
    \        $fibNumbers[2] = $result;\n        $i++;\n    }\n    return $result;\n\
    }\n$n = 5;\necho fibfib($n);", "    if($n <= 0) {\n        return 0;\n    }\n\
    \    if($n == 1) {\n        return 0;\n    }\n    if($n == 2) {\n        return\
    \ 1;\n    }\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n}\necho fibfib(5);\n\
    echo \"\\n\";\necho fibfib(8);\necho \"\\n\";\n", "    if ($n <= 1) {\n      \
    \  return 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n   \
    \     return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\necho\
    \ fibfib(1);\necho \"\\n\";\necho fibfib(5);\necho \"\\n\";\necho fibfib(8);\n\
    echo \"\\n\";\necho fibfib(3);\necho \"\\n\";\necho fibfib(10);\necho \"\\n\"\
    ;\necho fibfib(11);\necho \"\\n\";\n", "\tif($n==0)\n\t\treturn 0;\n\tif($n==1)\n\
    \t\treturn 0;\n\tif($n==2)\n\t\treturn 1;\n\treturn fibfib($n-1)+fibfib($n-2)+fibfib($n-3);\n\
    }\necho fibfib(1).\"\\n\";\necho fibfib(5).\"\\n\";\necho fibfib(8).\"\\n\";\n",
  "    if ($n == 0) {\n        return 0;\n    } else if ($n == 1) {\n        return\
    \ 0;\n    } else if ($n == 2) {\n        return 1;\n    }\n    $p = 0;\n    $q\
    \ = 0;\n    $r = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $ret = $p + $q\
    \ + $r;\n        $p = $q;\n        $q = $r;\n        $r = $ret;\n    }\n    return\
    \ $ret;\n}\necho fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";", "  // Implemenation here\n}", "    if ($n < 2) return 0;\n    if\
    \ ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }\n", "\tif($n == 0) {\n\t\treturn 0;\n\t}\n\telse if($n == 1) {\n\t\treturn 0;\n\
    \t}\n\telse if($n == 2) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n\t}\n}\necho fibfib(8);\necho \"\\n\";", " \
    \   if($n < 3) {\n        return ($n > 0) ? 0 : 1;\n    }\n    $fibs = [0,0,1];\n\
    \    for($i = 3; $i <= $n; $i++) {\n        $fibs[$i] = $fibs[$i-1] + $fibs[$i-2]\
    \ + $fibs[$i-3];\n    }\n    return $fibs[$n];\n}\n\necho fibfib(1) . \"\\n\"\
    ;\necho fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "    if ($n < 0) return\
    \ -1;\n    if ($n == 0) return 0;\n    if ($n == 1) return 0;\n    if ($n == 2)\
    \ return 1;\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n  \
    \      $c = $d;\n    }\n    return $d;\n}\necho fibfib(5);", "    if ($n < 3)\
    \ {\n        return $n-1;\n    }\n    $fibfib = [0, 0, 1];\n    for ($i = 3; $i\
    \ <= $n; $i++) {\n        $fibfib[2] = $fibfib[0] + $fibfib[1] + $fibfib[2];\n\
    \        $fibfib[0] = $fibfib[1];\n        $fibfib[1] = $fibfib[2] - $fibfib[0]\
    \ - $fibfib[1];\n    }\n    return $fibfib[2];\n}\necho fibfib(8);\necho '<br>';\n\
    echo fibfib(5);\necho '<br>';\necho fibfib(1);\necho '<br>';\necho fibfib(2);\n\
    echo '<br>';\necho fibfib(3);\necho '<br>';\necho fibfib(4);\necho '<br>';\necho\
    \ fibfib(6);\necho '<br>';\necho fibfib(7);\necho '<br>';\necho fibfib(9);\necho\
    \ '<br>';\necho fibfib(10);\necho '<br>';\necho fibfib(11);\necho '<br>';\necho\
    \ fibfib(12);\necho '<br>';\necho fibfib(13);\necho '<br>';\necho fibfib(14);\n\
    echo '<br>';\necho fibfib(15);\necho '<br>';\necho fibfib(16);\necho '<br>';\n\
    echo fibfib(17);\necho '<br>';\necho fibfib(18);\necho '<br>';\necho fibfib(19);\n\
    echo '<br>';\necho fibfib(20);\necho '<br>';\necho fibfib(21);\necho '<br>';\n\
    echo fibfib(22);\necho '<br>';\necho fibfib(23);\necho '<br>';\necho fibfib",
  "    if($n == 0) return 0;\n    if($n == 1) return 0;\n    if($n == 2) return 1;\n\
    \    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n}", "    if($n == 0)\
    \ {\n        return 0;\n    }\n    if($n == 1) {\n        return 0;\n    }\n \
    \   if($n == 2) {\n        return 1;\n    }\n    if($n > 2) {\n        return\
    \ fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n    }\n}\n", "    if ($n <= 0)\
    \ {\n        return 0;\n    }\n    if ($n <= 2) {\n        return 1;\n    }\n\
    \    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n", "  if ($n\
    \ < 3) {\n    return $n - 1;\n  }\n\n  $cache = [0, 0, 1];\n  for ($i = 3; $i\
    \ <= $n; $i++) {\n    $cache[$i] = $cache[$i - 1] + $cache[$i - 2] + $cache[$i\
    \ - 3];\n  }\n\n  return $cache[$i - 1];\n}\n\necho fibfib(1) . \"\\n\";\necho\
    \ fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    $fib = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $fib =\
    \ $a + $b + $c;\n        $a = $b;\n        $b = $c;\n        $c = $fib;\n    }\n\
    \    return $fib;\n}\n\n$n = 5;\necho fibfib($n);", "    if ($n == 0) return 0;\n\
    \    if ($n == 1) return 0;\n    if ($n == 2) return 1;\n    $a = 0;\n    $b =\
    \ 0;\n    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b +\
    \ $c;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return\
    \ $d;\n}\n", "\t// TODO: Implement me!\n}", "    if ($n < 2) return 0;\n    if\
    \ ($n == 2) return 1;\n    $f = array(0, 0, 1);\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        $f[$i] = $f[$i - 1] + $f[$i - 2] + $f[$i - 3];\n    }\n    return\
    \ $f[$i - 1];\n}", "    $arr = [0, 0, 1];\n    if ($n < 3) {\n        return $arr[$n];\n\
    \    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\necho\
    \ fibfib(5);", "\tif($n == 0) {\n\t\treturn 0;\n\t} else if($n == 1) {\n\t\treturn\
    \ 0;\n\t} else if($n == 2) {\n\t\treturn 1;\n\t} else {\n\t\treturn fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n\t}\n}\necho fibfib(1).\"\\n\";\necho fibfib(5).\"\
    \\n\";\necho fibfib(8).\"\\n\";\n", "  if ($n < 0) return -1;\n  if ($n == 0)\
    \ return 0;\n  if ($n == 1) return 0;\n  if ($n == 2) return 1;\n  $n1 = 1;\n\
    \  $n2 = 1;\n  $n3 = 2;\n  for ($i = 3; $i <= $n; $i++) {\n    $tmp = $n1 + $n2\
    \ + $n3;\n    $n1 = $n2;\n    $n2 = $n3;\n    $n3 = $tmp;\n  }\n  return $n3;\n\
    }\nvar_dump(fibfib(1));\nvar_dump(fibfib(5));\nvar_dump(fibfib(8));", "    if\
    \ ($n <= 1) {\n        return 0;\n    } else if ($n == 2) {\n        return 1;\n\
    \    } else {\n        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n\
    \    }\n}\n", "  $previous = [0, 0, 1];\n  $result = 0;\n  for ($i = 2; $i < $n;\
    \ $i++) {\n    $result = $previous[0] + $previous[1] + $previous[2];\n    array_shift($previous);\n\
    \    array_push($previous, $result);\n  }\n  return $result;\n}\n", "    if ($n\
    \ <= 1) {\n        return 0;\n    } else if ($n == 2) {\n        return 1;\n \
    \   } else {\n        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n\
    \    }\n}\n", "    if ($n < 2) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\necho fibfib(8) . PHP_EOL;\necho fibfib(0) .\
    \ PHP_EOL;\necho fibfib(2) . PHP_EOL;\n", "  $cache = array();\n  return helper($n,\
    \ $cache);\n}\n", "    $a = [0, 0, 1];\n    if ($n <= 2) {\n        return $a[$n];\n\
    \    }\n    for ($i = 3; $i <= $n; $i++) {\n        $a[$i] = $a[$i - 1] + $a[$i\
    \ - 2] + $a[$i - 3];\n    }\n    return $a[$n];\n}\necho fibfib(5);", "    $n--;\n\
    \    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 0; $i < $n; $i++) {\n  \
    \      $d = $c;\n        $c = $a + $b + $c;\n        $a = $b;\n        $b = $d;\n\
    \    }\n    return $c;\n}\n", "    $result = 0;\n    if ($n <= 2) {\n        return\
    \ $n-1;\n    } else {\n        $result = fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    \    }\n    return $result;\n}\necho fibfib(10);", "    $fib = array(0, 0, 1);\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i\
    \ - 2] + $fib[$i - 3];\n    }\n    return $fib[$n];\n}", "    $nums = [0, 0, 1];\n\
    \    if ($n < 3) {\n        return $nums[$n];\n    }\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $nums[$i] = $nums[$i - 1] + $nums[$i - 2] + $nums[$i - 3];\n\
    \    }\n    return $nums[$n];\n}\necho fibfib(8);\necho \"\\n\";", "    if ($n\
    \ == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n \
    \   }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1)\
    \ + fibfib($n - 2) + fibfib($n - 3);\n}\necho fibfib(5);", "    if ($n === 0)\
    \ {\n        return 0;\n    } else if ($n === 1) {\n        return 0;\n    } else\
    \ if ($n === 2) {\n        return 1;\n    } else {\n        return fibfib($n -\
    \ 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n", "\tif ($n == 0) {\n\t\t\
    return 0;\n\t} else if ($n == 1) {\n\t\treturn 0;\n\t} else if ($n == 2) {\n\t\
    \treturn 1;\n\t} else {\n\t\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    \t}\n}\nprint(fibfib(8));", "    if ($n == 0) return 0;\n    if ($n == 1) return\
    \ 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }\n\necho fibfib(1).\"\\n\";\necho fibfib(5).\"\\n\";\necho fibfib(8).\"\\n\"\
    ;\n", "    if ($n === 0) {\n        return 0;\n    } else if ($n === 1) {\n  \
    \      return 0;\n    } else if ($n === 2) {\n        return 1;\n    } else {\n\
    \        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n",
  "\tif ($n < 3) return $n - 1;\n\treturn fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n", "\tif ($n < 3) {\n\t\treturn $n - 1;\n\t} else {\n\t\treturn fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n\t}\n}\n\necho fibfib(1) . PHP_EOL;\n\
    echo fibfib(5) . PHP_EOL;\necho fibfib(8) . PHP_EOL;", "    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 0;\n    if ($n == 2) return 1;\n    $f0 = 0;\n \
    \   $f1 = 0;\n    $f2 = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $f3 =\
    \ $f0 + $f1 + $f2;\n        $f0 = $f1;\n        $f1 = $f2;\n        $f2 = $f3;\n\
    \    }\n    return $f3;\n}\n", "\tif ($n < 3) {\n\t\treturn $n;\n\t}\n\t\n\t$prev1\
    \ = 0;\n\t$prev2 = 1;\n\t$prev3 = 1;\n\t$fibfib = 0;\n\tfor ($i = 3; $i <= $n;\
    \ $i++) {\n\t\t$fibfib = $prev1 + $prev2 + $prev3;\n\t\t$prev1 = $prev2;\n\t\t\
    $prev2 = $prev3;\n\t\t$prev3 = $fibfib;\n\t}\n\treturn $fibfib;\n}\n\necho \"\
    fibfib(1) = \" . fibfib(1) . \"\\n\";\necho \"fibfib(5) = \" . fibfib(5) . \"\\\
    n\";\necho \"fibfib(8) = \" . fibfib(8) . \"\\n\";\n", "    if ($n < 0) {\n  \
    \      throw new \\InvalidArgumentException('$n must be positive');\n    }\n \
    \   $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     $d = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n\
    \    }\n    return $a;\n}\necho fibfib(10);\necho \"\\n\";", "  if ($n == 0) {\n\
    \    return 0;\n  }\n  if ($n == 1) {\n    return 0;\n  }\n  if ($n == 2) {\n\
    \    return 1;\n  }\n  return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n\
    }\n\necho fibfib(8);\necho \"\\n\";", "    if ($n <= 1) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1)\
    \ + fibfib($n - 2) + fibfib($n - 3);\n}\necho fibfib(5);", "  if ($n == 0) return\
    \ 0;\n  if ($n == 1) return 0;\n  if ($n == 2) return 1;\n  return fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n}\n\necho fibfib(1) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";", "    $fibfib = [];\n    $fibfib[0] =\
    \ 0;\n    $fibfib[1] = 0;\n    $fibfib[2] = 1;\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i - 2] + $fibfib[$i - 3];\n\
    \    }\n    return $fibfib[$n];\n}\n\necho fibfib(4);", "\tif ($n == 0) {\n\t\t\
    return 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 0;\n\t}\n\tif ($n == 2) {\n\t\treturn\
    \ 1;\n\t}\n\tif ($n > 2) {\n\t\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    \t}\n}", "  if($n == 0 || $n == 1) {\n    return 0;\n  }\n  if($n == 2) {\n  \
    \  return 1;\n  }\n  $nth = 0;\n  $first = 0;\n  $second = 0;\n  $third = 1;\n\
    \  for($i = 3; $i <= $n; $i++) {\n    $nth = $first + $second + $third;\n    $first\
    \ = $second;\n    $second = $third;\n    $third = $nth;\n  }\n  return $nth;\n\
    }\necho fibfib(5);", "    if ($n < 2) return 0;\n    if ($n == 2) return 1;\n\
    \    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n}\n\necho fibfib(1);\n\
    echo fibfib(5);\necho fibfib(8);\n", "    if($n == 0) return 0;\n    if($n ==\
    \ 1) return 0;\n    if($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\necho fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\n\";\n\
    echo fibfib(8) . \"\\n\";", "    if ($n === 0) {\n        return 0;\n    } else\
    \ if ($n === 1) {\n        return 0;\n    } else if ($n === 2) {\n        return\
    \ 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n    }\n}\n\necho fibfib(1) . PHP_EOL;\necho fibfib(5) . PHP_EOL;\necho\
    \ fibfib(8) . PHP_EOL;", "    if ($n < 3) {\n        return $n - 1;\n    }\n \
    \   return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}", "\tif ($n ==\
    \ 0) {\n\t\treturn 0;\n\t}\n\tif ($n == 1) {\n\t\treturn 0;\n\t}\n\tif ($n ==\
    \ 2) {\n\t\treturn 1;\n\t}\n\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    }\n", "  if($n == 0) {\n    return 0;\n  }\n  if($n == 1) {\n    return 0;\n \
    \ }\n  if($n == 2) {\n    return 1;\n  }\n  return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\nvar_dump(fibfib(1));\nvar_dump(fibfib(5));\nvar_dump(fibfib(8));\n",
  "    $array = [0, 0, 1];\n    if ($n <= 2) {\n        return $array[$n];\n    }\
    \ else {\n        for ($i = 3; $i <= $n; $i++) {\n            $array[$i] = $array[$i\
    \ - 1] + $array[$i - 2] + $array[$i - 3];\n        }\n        return $array[$n];\n\
    \    }\n}\n", "    if ($n <= 1) {\n        return 0;\n    } else if ($n == 2)\
    \ {\n        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n\
    \ - 2) + fibfib($n - 3);\n    }\n}\n", "    if ($n == 0) return 0;\n    if ($n\
    \ == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\necho fibfib(0); // 0\necho fibfib(1); // 0\necho fibfib(2);\
    \ // 1\necho fibfib(5); // 4\necho fibfib(8); // 24", "  if ($n <= 1) {\n    return\
    \ 0;\n  } else if ($n == 2) {\n    return 1;\n  }\n  $thirdLast = 0;\n  $secondLast\
    \ = 0;\n  $last = 1;\n  for ($i = 3; $i <= $n; $i++) {\n    $current = $last +\
    \ $secondLast + $thirdLast;\n    $thirdLast = $secondLast;\n    $secondLast =\
    \ $last;\n    $last = $current;\n  }\n  return $current;\n}\n", "  if ($n == 0)\
    \ {\n    return 0;\n  } else if ($n == 1) {\n    return 0;\n  } else if ($n ==\
    \ 2) {\n    return 1;\n  } else {\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\
    \  }\n}\n\necho fibfib(1) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";", "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1)\
    \ {\n        return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n\
    \    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\necho fibfib(5);\n\
    echo fibfib(8);\necho fibfib(9);\necho fibfib(1);", "\tif($n == 0) {\n\t\treturn\
    \ 0;\n\t}\n\tif($n == 1) {\n\t\treturn 0;\n\t}\n\tif($n == 2) {\n\t\treturn 1;\n\
    \t}\n\tif($n > 2) {\n\t\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\t\
    }\n}\n$fibfib = fibfib(5);\necho $fibfib . \"\\n\";", "    if ($n == 0) return\
    \ 0;\n    if ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n}\n$n = 1;\necho fibfib($n) . \"\\n\";\n$n =\
    \ 5;\necho fibfib($n) . \"\\n\";\n$n = 8;\necho fibfib($n) . \"\\n\";", "  $arr\
    \ = [0, 0, 1];\n  if ($n < 3) {\n    return $arr[$n];\n  }\n  for ($i = 3; $i\
    \ <= $n; $i++) {\n    $arr[$i] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n\
    \  }\n  return $arr[$n];\n}\n", "    if ($n < 2) {\n        return 0;\n    }\n\
    \    if ($n == 2) {\n        return 1;\n    }\n    $result = 2;\n    $cache =\
    \ [0, 0, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $cache[$i%3] = $cache[($i-1)%3]\
    \ + $cache[($i-2)%3] + $cache[($i-3)%3];\n        $result = $cache[$i%3];\n  \
    \  }\n    return $result;\n}\n\nprint_r(fibfib(1) . \"\\n\");\nprint_r(fibfib(5)\
    \ . \"\\n\");\nprint_r(fibfib(8) . \"\\n\");", "    //Your code here\n}\n", " \
    \   if ($n < 3) return $n - 1;\n    $n1 = 0;\n    $n2 = 1;\n    $n3 = 1;\n   \
    \ for ($i = 3; $i <= $n; $i++) {\n        $tmp = $n1 + $n2 + $n3;\n        $n1\
    \ = $n2;\n        $n2 = $n3;\n        $n3 = $tmp;\n    }\n    return $n3;\n}\n",
  "\n}", "    $prev1 = $prev2 = $prev3 = 0;\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        if ($i == 1) {\n            $temp = 0;\n        } else if ($i == 2) {\n\
    \            $temp = 1;\n        } else {\n            $temp = $prev1 + $prev2\
    \ + $prev3;\n        }\n        $prev3 = $prev2;\n        $prev2 = $prev1;\n \
    \       $prev1 = $temp;\n    }\n    return $temp;\n}\n\necho fibfib(0) . \"\\\
    n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(5) . \"\
    \\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(55) . \"\\n\";\necho fibfib(89)\
    \ . \"\\n\";\necho fibfib(144) . \"\\n\";\necho fibfib(233) . \"\\n\";\necho fibfib(377)\
    \ . \"\\n\";\necho fibfib(610) . \"\\n\";\necho fibfib(987) . \"\\n\";\necho fibfib(1597)\
    \ . \"\\n\";\necho fibfib(2584) . \"\\n\";\necho fibfib(4181) . \"\\n\";\necho\
    \ fibfib(6765) . \"\\n\";\necho fibfib(10946) . \"\\n\";\necho fibfib(17711) .\
    \ \"\\n\";\necho fibfib(28657) . \"\\n\";\necho fibfib(46368) . \"\\n\";\necho\
    \ fibfib(75025) . \"\\n\";\necho fibfib(121393) . \"\\n\";\necho fibfib(196418)\
    \ . \"\\n\";\necho fibfib(317811) . \"\\n\";\necho fibfib(514229) . \"\\n\";\n\
    echo fibfib(832040) . \"\\n\";\necho fibfib(1346269) . \"\\n", "    $fibfib =\
    \ array(0, 0, 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i\
    \ - 1] + $fibfib[$i - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n\
    }\necho fibfib(1) . PHP_EOL;\necho fibfib(5) . PHP_EOL;\necho fibfib(8) . PHP_EOL;\n\
    echo fibfib(8) . PHP_EOL;\necho fibfib(8) . PHP_EOL;\n", "    $b = $c = 0;\n \
    \   $a = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $a = $b + $c + $a;\n\
    \        $c = $b;\n        $b = $a - $b - $c;\n    }\n    return $a;\n}\n", " \
    \   if ($n == 0) {\n        return 0;\n    }\n    else if ($n == 1) {\n      \
    \  return 0;\n    }\n    else if ($n == 2) {\n        return 1;\n    }\n    else\
    \ {\n        return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n    }\n}\n\n\
    echo fibfib(1);\necho PHP_EOL;\necho fibfib(5);\necho PHP_EOL;\necho fibfib(8);\n\
    echo PHP_EOL;", "    $n1 = 0;\n    $n2 = 0;\n    $n3 = 1;\n    $n4 = 0;\n    $temp\
    \ = 1;\n    while ($temp <= $n) {\n        $n4 = $n1 + $n2 + $n3;\n        $n1\
    \ = $n2;\n        $n2 = $n3;\n        $n3 = $n4;\n        $temp++;\n    }\n  \
    \  return $n4;\n}\necho fibfib(8) . PHP_EOL;", "\t$n=array();\n\tfor($i=0;$i<=$n;$i++){\n\
    \t\tif($i<2){\n\t\t\t$n[$i]=0;\n\t\t}elseif($i==2){\n\t\t\t$n[$i]=1;\n\t\t}else{\n\
    \t\t\t$n[$i]=$n[$i-1]+$n[$i-2]+$n[$i-3];\n\t\t}\n\t}\n\treturn $n[$n];\n}\necho\
    \ fibfib(1);\necho fibfib(5);\necho fibfib(8);", "  $fibs = array(0, 0, 1);\n\
    \  for ($i = 3; $i <= $n; $i++) {\n    $fibs[$i % 3] = $fibs[($i - 1) % 3] + $fibs[($i\
    \ - 2) % 3] + $fibs[($i - 3) % 3];\n  }\n  return $fibs[$n % 3];\n}\necho fibfib(8);",
  "  if($n == 0) return 0;\n  if($n == 1) return 0;\n  if($n == 2) return 1;\n  return\
    \ fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n}\necho fibfib(1) . \"\\n\";\n\
    echo fibfib(5) . \"\\n\";\necho fibfib(8) . \"\\n\";", "    $fibs = [0, 0, 1];\n\
    \    if ($n < 3) {\n        return $fibs[$n];\n    }\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $fibs[$i] = $fibs[$i - 1] + $fibs[$i - 2] + $fibs[$i - 3];\n\
    \    }\n    return $fibs[$n];\n}\n\nprint_r(fibfib(5));", "    $ary = array(0,\
    \ 0, 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $ary[$i] = $ary[$i - 1]\
    \ + $ary[$i - 2] + $ary[$i - 3];\n    }\n    return $ary[$i - 1];\n}\necho fibfib(1),\
    \ \"\\n\";\necho fibfib(5), \"\\n\";\necho fibfib(8), \"\\n\";\n", "  //return\
    \ the nth fibfib number\n}", "    $seq = [0, 0, 1];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $seq[$i] = $seq[$i - 1] + $seq[$i - 2] + $seq[$i - 3];\n  \
    \  }\n    return $seq[$n];\n}\n$expected = [0, 0, 1, 1, 2, 4, 7, 13, 24, 44, 81,\
    \ 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513, 35890, 66012, 121415, 223317,\
    \ 410744, 755476, 1389537, 2555757, 4700770, 8646064, 15902591, 29249425, 53798080,\
    \ 98950096, 181997601, 334745777, 615693474, 1132436852, 2082876103];\nfor ($i\
    \ = 0; $i < count($expected); $i++) {\n    if (fibfib($i) != $expected[$i]) {\n\
    \        echo \"Failed on '$i' with value \" . fibfib($i) . \"\\n\";\n       \
    \ break;\n    }\n}\necho \"Done\";", "  if ($n < 0) return false;\n  if ($n <\
    \ 2) return 0;\n  if ($n < 3) return 1;\n  $arr = [0,0,1];\n  for ($i = 3; $i\
    \ <= $n; $i++) {\n    $arr[$i] = $arr[$i-1] + $arr[$i-2] + $arr[$i-3];\n  }\n\
    \  return $arr[$n];\n}\nprint_r(fibfib(1) . PHP_EOL);\nprint_r(fibfib(5) . PHP_EOL);\n\
    print_r(fibfib(8) . PHP_EOL);", "    if ($n == 0) return 0;\n    if ($n == 1)\
    \ return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\necho fibfib(5);", "    $fib = [0, 0, 1];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2] + $fib[$i\
    \ - 3];\n    }\n    return $fib[$n];\n}\necho fibfib(1).PHP_EOL;\necho fibfib(5).PHP_EOL;\n\
    echo fibfib(8).PHP_EOL;", "\t$a = 0;\n\t$b = 0;\n\t$c = 1;\n\tif ($n == 0) {\n\
    \t\treturn $a;\n\t}\n\tif ($n == 1) {\n\t\treturn $b;\n\t}\n\tif ($n == 2) {\n\
    \t\treturn $c;\n\t}\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\t$d = $a + $b + $c;\n\
    \t\t$a = $b;\n\t\t$b = $c;\n\t\t$c = $d;\n\t}\n\treturn $d;\n}", "  if ($n < 3)\
    \ return $n == 1 ? 0 : 1;\n  $a = 0;\n  $b = 0;\n  $c = 1;\n  for ($i = 3; $i\
    \ <= $n; $i++) {\n    $d = $a + $b + $c;\n    $a = $b;\n    $b = $c;\n    $c =\
    \ $d;\n  }\n  return $d;\n}\n", "    if ($n == 0) {\n        return 0;\n    }\n\
    \    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return\
    \ 1;\n    }\n    $n1 = 0;\n    $n2 = 0;\n    $n3 = 1;\n    for ($i = 3; $i <=\
    \ $n; $i++) {\n        $n1 = $n2;\n        $n2 = $n3;\n        $n3 = $n1 + $n2\
    \ + $n3;\n    }\n    return $n3;\n}\n\nfibfib(1);\nfibfib(5);\nfibfib(8);", " \
    \   $result = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $result = $result\
    \ + countfib($i);\n    }\n    return $result;\n}\n", "    $a=0;\n    $b=0;\n \
    \   $c=1;\n    $d=0;\n    for($i=0;$i<$n;$i++){\n        $a=$b;\n        $b=$c;\n\
    \        $c=$d;\n        $d=$a+$b+$c;\n    }\n    return $d;\n}\necho fibfib(8).\"\
    \\n\";", "\tif ($n === 0) {\n\t\treturn 0;\n\t} else if ($n === 1) {\n\t\treturn\
    \ 0;\n\t} else if ($n === 2) {\n\t\treturn 1;\n\t} else {\n\t\treturn fibfib($n-1)\
    \ + fibfib($n-2) + fibfib($n-3);\n\t}\n}\necho fibfib(5);", "  $fibfib = array(0,\
    \ 0, 1);\n  for ($i = 3; $i <= $n; $i++) {\n    $fibfib[$i] = $fibfib[$i - 1]\
    \ + $fibfib[$i - 2] + $fibfib[$i - 3];\n  }\n  return $fibfib[$n];\n}\n", "  \
    \  if ($n === 0) {\n        return 0;\n    } else if ($n === 1) {\n        return\
    \ 0;\n    } else if ($n === 2) {\n        return 1;\n    } else {\n        return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

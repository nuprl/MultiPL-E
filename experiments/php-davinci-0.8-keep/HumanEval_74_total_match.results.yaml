name: HumanEval_74_total_match
language: php
results:
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst_total1 = 0;\n\t$lst_total2 = 0;\n\tforeach ($lst1 as $value) {\n\t\
    \t$lst_total1 += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst_total2\
    \ += strlen($value);\n\t}\n\tif ($lst_total1 < $lst_total2) {\n\t\treturn $lst1;\n\
    \t} elseif ($lst_total1 > $lst_total2) {\n\t\treturn $lst2;\n\t} else {\n\t\t\
    return $lst1;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2',\
    \ '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$length1 = sizeof($lst1);\n\t$length2 = sizeof($lst2);\n\t$length1 == 0\
    \ ? $total1 = 0 : $total1 = 0;\n\t$length2 == 0 ? $total2 = 0 : $total2 = 0;\n\
    \tif ($length1 == 0 && $length2 == 0) {\n\t\treturn [];\n\t} elseif ($length1\
    \ == 0) {\n\t\treturn $lst2;\n\t} elseif ($length2 == 0) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\tfor ($i = 0; $i < $length1; $i++) {\n\t\t\t$total1 += strlen($lst1[$i]);\n\
    \t\t}\n\t\tfor ($i = 0; $i < $length2; $i++) {\n\t\t\t$total2 += strlen($lst2[$i]);\n\
    \t\t}\n\t\tif ($total1 > $total2) {\n\t\t\treturn $lst2;\n\t\t} elseif ($total1\
    \ < $total2) {\n\t\t\treturn $lst1;\n\t\t} else {\n\t\t\treturn $lst1;\n\t\t}\n\
    \t}\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjysz4txv.php:50\n\
    Stack trace:\n#0 /tmp/tmpjysz4txv.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjysz4txv.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $total1 = 0;\n  $total2 = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n\
    \    $total1 += strlen($lst1[$i]);\n  }\n  for ($i = 0; $i < count($lst2); $i++)\
    \ {\n    $total2 += strlen($lst2[$i]);\n  }\n  if ($total1 > $total2) {\n    return\
    \ $lst2;\n  } else {\n    return $lst1;\n  }\n}\necho total_match(['4'], ['1',\
    \ '2', '3', '4', '5']);\necho \"<br/>\";\necho total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']);\necho \"<br/>\";\necho total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']);\necho \"<br/>\";\necho total_match(['hi', 'admin'], ['hI', 'hi',\
    \ 'hi']);\necho \"<br/>\";\necho total_match([], []);\necho \"<br/>\";\n\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br/>Array<br/>Array<br/>Array<br/>Array<br/>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $word) {\n\t\t$sum1 += strlen($word);\n\
    \t}\n\tforeach ($lst2 as $word) {\n\t\t$sum2 += strlen($word);\n\t}\n\tif ($sum1\
    \ < $sum2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcyx7atvs.php:37\n\
    Stack trace:\n#0 /tmp/tmpcyx7atvs.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpcyx7atvs.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total_chars1 = 0;\n    $total_chars2 = 0;\n    foreach ($lst1 as $word)\
    \ {\n        $total_chars1 += strlen($word);\n    }\n    foreach ($lst2 as $word)\
    \ {\n        $total_chars2 += strlen($word);\n    }\n    if ($total_chars1 ==\
    \ $total_chars2) {\n        return $lst1;\n    } else if ($total_chars1 < $total_chars2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$len1 = count($lst1);\n\t$len2 = count($lst2);\n\tif ($len1 == 0 && $len2\
    \ == 0) {\n\t\treturn [];\n\t}\n\tif ($len1 == $len2) {\n\t\treturn $lst1;\n\t\
    }\n\tif ($len1 < $len2) {\n\t\t$len = $len1;\n\t\t$lst = $lst1;\n\t} else {\n\t\
    \t$len = $len2;\n\t\t$lst = $lst2;\n\t}\n\t$result = $lst;\n\tfor ($i = 0; $i\
    \ < $len; $i++) {\n\t\t$result[$i] = strlen($lst[$i]);\n\t}\n\treturn $result;\n\
    }\n\n$test_case = [\n\t['hi', 'admin'],\n\t['hI', 'Hi']\n];\n\n$test_result =\
    \ total_match($test_case[0], $test_case[1]);\n\nvar_dump($test_result);\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(2) {\n  [0]=>\n  string(2) \"hi\"\n  [1]=>\n  string(5) \"admin\"\
    \n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9_t0w3u.php:48\n\
    Stack trace:\n#0 /tmp/tmpq9_t0w3u.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpq9_t0w3u.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum = 0;\n    $sum2 = 0;\n    foreach($lst1 as $val) {\n        $sum\
    \ += strlen($val);\n    }\n    foreach($lst2 as $val) {\n        $sum2 += strlen($val);\n\
    \    }\n    if($sum < $sum2) {\n        return $lst1;\n    } else {\n        return\
    \ $lst2;\n    }\n}\necho '<pre>';\nprint_r(total_match(['4'], ['1', '2', '3',\
    \ '4', '5']));\necho '</pre>';\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpothux047.php:40\nStack trace:\n#0 /tmp/tmpothux047.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpothux047.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t\
    $sum1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\
    \t$sum2 += strlen($lst2[$i]);\n\t}\n\tif ($sum1 <= $sum2) {\n\t\treturn $lst1;\n\
    \t}\n\telse{\n\t\treturn $lst2;\n\t}\n}\n\nfunction candidate(...$args) {\n  \
    \  return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1 = implode(\"\", $lst1);\n\t$lst2 = implode(\"\", $lst2);\n\tif (strlen($lst1)\
    \ < strlen($lst2)){\n\t\treturn $lst1;\n\t} elseif (strlen($lst1) > strlen($lst2)){\n\
    \t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\necho total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']);\necho \"<br>\";\necho total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho total_match(['4'], ['1',\
    \ '2', '3', '4', '5']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "hIHi<br>hiadmin<br>hIhihi<br>4\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppgx7h6li.php:34\nStack trace:\n#0 /tmp/tmppgx7h6li.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmppgx7h6li.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $totalChars1 = 0;\n    $totalChars2 = 0;\n    foreach($lst1 as $item){\n\
    \        $totalChars1 += strlen($item);\n    }\n    foreach($lst2 as $item){\n\
    \        $totalChars2 += strlen($item);\n    }\n    if($totalChars1 === $totalChars2){\n\
    \        return $lst1;\n    } else if($totalChars1 < $totalChars2){\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho \"Exercise 9: total_match<br>\"\
    ;\nprint_r(total_match([], []));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\necho \"<br>\";\nprint_r(total_match(['4'], ['1', '2',\
    \ '3', '4', '5']));\necho \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Exercise 9: total_match<br>Array\n(\n)\n<br>Array\n(\n    [0] => hI\n \
    \   [1] => Hi\n)\n<br>Array\n(\n    [0] => hi\n    [1] => admin\n)\n<br>Array\n\
    (\n    [0] => hI\n    [1] => hi\n    [2] => hi\n)\n<br>Array\n(\n    [0] => 4\n\
    )\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$x = 0;\n\t$y = 0;\n\tforeach ($lst1 as $item) {\n\t\t$x += strlen($item);\n\
    \t}\n\tforeach ($lst2 as $item) {\n\t\t$y += strlen($item);\n\t}\n\treturn $x\
    \ < $y ? $lst1 : $lst2;\n}\necho \"<pre>\";\nprint_r(total_match(['4'], ['1',\
    \ '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args) {\n \
    \   return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpuy2eepxi.php:36\nStack trace:\n#0 /tmp/tmpuy2eepxi.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuy2eepxi.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$str1 = '';\n\t$str2 = '';\n\tforeach ($lst1 as $value) {\n\t\t$str1 =\
    \ $str1 . $value;\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$str2 = $str2 . $value;\n\
    \t}\n\tif (strlen($str1) < strlen($str2)) {\n\t\treturn $lst1;\n\t} else {\n\t\
    \treturn $lst2;\n\t}\n}\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpq3k_93vk.php:38\nStack trace:\n#0 /tmp/tmpq3k_93vk.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpq3k_93vk.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $sum1 = 0;\n  $sum2 = 0;\n  for ($i=0; $i < count($lst1); $i++) { \n  \
    \  $sum1 += strlen($lst1[$i]);\n  }\n  for ($i=0; $i < count($lst2); $i++) { \n\
    \    $sum2 += strlen($lst2[$i]);\n  }\n  if ($sum1 < $sum2) {\n    return $lst1;\n\
    \  }\n  else {\n    return $lst2;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_gv9thz.php:39\n\
    Stack trace:\n#0 /tmp/tmpv_gv9thz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpv_gv9thz.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$str1 = implode(\"\", $lst1);\n\t$str2 = implode(\"\", $lst2);\n\treturn\
    \ (strlen($str1) >= strlen($str2)) ? $lst1 : $lst2;\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n\
    \    [0] => hi\n    [1] => hi\n    [2] => admin\n    [3] => project\n)\n</pre><pre>Array\n\
    (\n    [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => 1\n   \
    \ [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmptvi54j89.php:37\nStack trace:\n\
    #0 /tmp/tmptvi54j89.php(47): test()\n#1 {main}\n  thrown in /tmp/tmptvi54j89.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = $count2 = 0;\n    foreach ($lst1 as $str) {\n        $count1\
    \ += strlen($str);\n    }\n    foreach ($lst2 as $str) {\n        $count2 += strlen($str);\n\
    \    }\n    if ($count1 < $count2) {\n        return $lst1;\n    } else {\n  \
    \      return $lst2;\n    }\n}\necho \"total_match([], []) =>\"; print_r(total_match([],\
    \ [])); echo \"<br>\";\necho \"total_match(['hi', 'admin'], ['hI', 'Hi']) =>\"\
    ; print_r(total_match(['hi', 'admin'], ['hI', 'Hi'])); echo \"<br>\";\necho \"\
    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) =>\"; print_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project'])); echo \"<br>\";\necho \"total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) =>\"; print_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi'])); echo \"<br>\";\necho \"total_match(['4'], ['1', '2', '3', '4',\
    \ '5']) =>\"; print_r(total_match(['4'], ['1', '2', '3', '4', '5'])); echo \"\
    <br>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "total_match([], []) =>Array\n(\n)\n<br>total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']) =>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n<br>total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) =>Array\n(\n    [0] => hi\n    [1] => admin\n\
    )\n<br>total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) =>Array\n(\n    [0] =>\
    \ hI\n    [1] => hi\n    [2] => hi\n)\n<br>total_match(['4'], ['1', '2', '3',\
    \ '4', '5']) =>Array\n(\n    [0] => 4\n)\n<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmps1h9giyk.php:41\nStack trace:\n#0 /tmp/tmps1h9giyk.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps1h9giyk.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$count1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$count2 += strlen($lst2[$i]);\n\t}\n\tif ($count1 < $count2) {\n\t\t\
    return $lst1;\n\t}\n\telse if ($count1 > $count2) {\n\t\treturn $lst2;\n\t}\n\t\
    else if ($count1 == $count2) {\n\t\treturn $lst1;\n\t}\n}\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n<br>Array\n(\n    [0] => hi\n\
    \    [1] => admin\n)\n<br>Array\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\n<br>Array\n(\n    [0] => 4\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $first_length = 0;\n    $second_length = 0;\n    foreach ($lst1 as $item)\
    \ {\n        $first_length += strlen($item);\n    }\n    foreach ($lst2 as $item)\
    \ {\n        $second_length += strlen($item);\n    }\n    if ($first_length <\
    \ $second_length) {\n        return $lst1;\n    } else {\n        return $lst2;\n\
    \    }\n}\necho implode(\", \", total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"\\n\";\necho implode(\", \", total_match(['hi', 'admin'], ['hi', 'hi',\
    \ 'admin', 'project']));\necho \"\\n\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"\\n\";\necho implode(\", \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "hI, Hi\nhi, admin\nhI, hi, hi\n4\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpi242797d.php:45\nStack trace:\n#0 /tmp/tmpi242797d.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi242797d.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total_len1 = 0;\n\t$total_len2 = 0;\n\tforeach ($lst1 as $key => $val)\
    \ {\n\t\t$total_len1 += strlen($val);\n\t}\n\tforeach ($lst2 as $key => $val)\
    \ {\n\t\t$total_len2 += strlen($val);\n\t}\n\tif ($total_len1 > $total_len2) {\n\
    \t\treturn $lst2;\n\t}\n\treturn $lst1;\n}\n\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total = 0;\n\t$total2 = 0;\n\t$i = 0;\n\t$j = 0;\n\tfor ($i = 0; $i <\
    \ count($lst1); $i++) {\n\t\t$total += strlen($lst1[$i]);\n\t}\n\tfor ($j = 0;\
    \ $j < count($lst2); $j++) {\n\t\t$total2 += strlen($lst2[$j]);\n\t}\n\tif ($total\
    \ < $total2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho\
    \ \"\\nquestion3\\n\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    print_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\nprint_r(total_match(['4'], ['1', '2', '3',\
    \ '4', '5']));\necho \"\\n========================================\\n\";\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nquestion3\nArray\n(\n    [0] => hI\n    [1] => Hi\n)\nArray\n(\n    [0]\
    \ => hi\n    [1] => admin\n)\nArray\n(\n    [0] => hI\n    [1] => hi\n    [2]\
    \ => hi\n)\nArray\n(\n    [0] => 4\n)\n\n========================================\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkm2xhxr.php:45\nStack\
    \ trace:\n#0 /tmp/tmpxkm2xhxr.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxkm2xhxr.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1 = array_map('strlen', $lst1);\n    $lst2 = array_map('strlen',\
    \ $lst2);\n    $sum1 = array_sum($lst1);\n    $sum2 = array_sum($lst2);\n    return\
    \ $sum1 > $sum2 ? $lst2 : $lst1;\n  }\n  // Write a function that accepts two\
    \ parameters (a string and a character) \n  // and returns an array of the words\
    \ from the string without the given character.\n  // Examples\n  // removeChar(\"\
    the quick brown fox jumps over the lazy dog\", \"o\")\n  // \u279E [\"th\", \"\
    quick\", \"brwn\", \"fx\", \"jmps\", \"ver\", \"the\", \"lazy\", \"dg\"]\n  //\
    \ removeChar(\"steal my girl\", \"e\")\n  // \u279E [\"stahl\", \"my\", \"girl\"\
    ]\n  // removeChar(\"treat\", \"t\")\n  // \u279E [\"rea\"]\n  // Note\n  // For\
    \ each word, output it as an array.\n  function removeChar($str, $char) {\n  \
    \  $result = [];\n    $words = explode(' ', $str);\n    foreach($words as $w){\n\
    \      $result[] = str_replace($char, '', $w);\n    }\n    return $result;\n \
    \ }\n  // Write a function that takes in a string, reverses the 'casing' of that\
    \ string, and returns the \"reversed-casing\" string.\n  // Examples\n  // reverseCase(\"\
    Happy Birthday\") \u279E \"hAPPY bIRTHDAY\"\n  // reverseCase(\"MANY THANKS\"\
    ) \u279E \"many thanks\"\n  // reverseCase(\"sPoNtAnEoUs\") \u279E \"SpOnTaNeOuS\"\
    \n  // Notes\n  // The input will always be a string.\n  // There will always\
    \ be at least one character in the input string.\n  function reverseCase($str)\
    \ {\n    $result = '';\n    for($i = 0; $i < strlen($str); $i++){\n      $c =\
    \ substr($str, $i, 1);\n     \nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1j9oqzv4.php on line 66\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $total1 = 0;\n  $total2 = 0;\n  foreach($lst1 as $x) {\n    $total1 +=\
    \ strlen($x);\n  }\n  foreach($lst2 as $x) {\n    $total2 += strlen($x);\n  }\n\
    \  if($total1 == $total2) {\n    return $lst1;\n  }\n  else if($total1 < $total2)\
    \ {\n    return $lst1;\n  }\n  else {\n    return $lst2;\n  }\n}\necho implode(',\
    \ ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(',\
    \ ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"\
    <br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total_lst1 = 0;\n\t$total_lst2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++)\
    \ { \n\t\t$total_lst1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$total_lst2 += strlen($lst2[$i]);\n\t}\n\tif ($total_lst1 < $total_lst2)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp5fosm74p.php:49\nStack trace:\n\
    #0 /tmp/tmp5fosm74p.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp5fosm74p.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $list1 = 0;\n  $list2 = 0;\n  $str1 = \"\";\n  $str2 = \"\";\n  for ($i\
    \ = 0; $i < count($lst1); $i++) {\n    $str1 = $lst1[$i];\n    $list1 += strlen($str1);\n\
    \  }\n  for ($i = 0; $i < count($lst2); $i++) {\n    $str2 = $lst2[$i];\n    $list2\
    \ += strlen($str2);\n  }\n  if ($list1 < $list2) {\n    return $lst1;\n  } else\
    \ if ($list1 > $list2) {\n    return $lst2;\n  } else {\n    return $lst1;\n \
    \ }\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$n = count($lst1);\n\t$m = count($lst2);\n\t$list_1 = 0;\n\t$list_2 = 0;\n\
    \tfor ($i=0; $i < $n; $i++) { \n\t\t$list_1 += strlen($lst1[$i]);\n\t}\n\tfor\
    \ ($i=0; $i < $m; $i++) { \n\t\t$list_2 += strlen($lst2[$i]);\n\t}\n\tif ($list_1\
    \ < $list_2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\n$lst1\
    \ = ['2', '2', '2'];\n$lst2 = ['2', '2', '2', '2'];\necho \"<pre>\";\nprint_r(total_match($lst1,\
    \ $lst2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2\n    [2] => 2\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmps55ynm60.php:44\nStack trace:\n\
    #0 /tmp/tmps55ynm60.php(49): test()\n#1 {main}\n  thrown in /tmp/tmps55ynm60.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $totalChar1 = 0;\n    $totalChar2 = 0;\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        $totalChar1 += strlen($lst1[$i]);\n    }\n    for ($i = 0;\
    \ $i < count($lst2); $i++) {\n        $totalChar2 += strlen($lst2[$i]);\n    }\n\
    \    if ($totalChar1 < $totalChar2) {\n        return $lst1;\n    } else if ($totalChar1\
    \ > $totalChar2) {\n        return $lst2;\n    } else {\n        return $lst1;\n\
    \    }\n}\n\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4',\
    \ '5']));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  if (count($lst1) === 0) {\n    return [];\n  }\n  $lst1Total = array_reduce($lst1,\
    \ function($acc, $word) {\n    return $acc + strlen($word);\n  }, 0);\n  $lst2Total\
    \ = array_reduce($lst2, function($acc, $word) {\n    return $acc + strlen($word);\n\
    \  }, 0);\n  if ($lst1Total === $lst2Total) {\n    return $lst1;\n  }\n  return\
    \ $lst1Total < $lst2Total ? $lst1 : $lst2;\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi'])).PHP_EOL;\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project'])).PHP_EOL;\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi'])).PHP_EOL;\necho implode(\", \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5'])).PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "hI, Hi\nhi, admin\nhI, hi, hi\n4\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$first = $second = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t$first\
    \ += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\t$second\
    \ += strlen($lst2[$i]);\n\t}\n\tif ($first < $second) {\n\t\treturn $lst1;\n\t\
    } else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsfcgxtew.php:39\nStack trace:\n#0 /tmp/tmpsfcgxtew.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsfcgxtew.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    if(sizeof($lst1) < sizeof($lst2)){\n        return $lst1;\n    }\n  \
    \  else if(sizeof($lst1) > sizeof($lst2)){\n        return $lst2;\n    }\n   \
    \ else{\n        return $lst1;\n    }\n}\necho total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0eb088l.php:29\n\
    Stack trace:\n#0 /tmp/tmpl0eb088l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl0eb088l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$chars1 = 0;\n\t$chars2 = 0;\n\tif(empty($lst1) || empty($lst2)){\n\t\t\
    return [];\n\t}\n\tforeach($lst1 as $index1 => $item1){\n\t\t$chars1 += strlen($item1);\n\
    \t}\n\tforeach($lst2 as $index2 => $item2){\n\t\t$chars2 += strlen($item2);\n\t\
    }\n\tif($chars1 < $chars2){\n\t\treturn $lst1;\n\t}elseif($chars1 > $chars2){\n\
    \t\treturn $lst2;\n\t}else{\n\t\treturn $lst1;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $item) {\n\t\t$sum1 += strlen($item);\n\
    \t}\n\tforeach ($lst2 as $item) {\n\t\t$sum2 += strlen($item);\n\t}\n\treturn\
    \ $sum1 <= $sum2 ? $lst1 : $lst2;\n}\nprint_r(total_match(['4'], ['1', '2', '3',\
    \ '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => 4\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = array_sum(array_map('strlen', $lst1));\n    $total2 = array_sum(array_map('strlen',\
    \ $lst2));\n    return $total1 < $total2 ? $lst1 : $lst2;\n}\necho total_match(['4'],\
    \ ['1', '2', '3', '4', '5']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbg3bdh43.php:28\n\
    Stack trace:\n#0 /tmp/tmpbg3bdh43.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbg3bdh43.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = strlen(implode($lst1));\n    $total2 = strlen(implode($lst2));\n\
    \    if ($total1 < $total2) {\n        return $lst1;\n    } elseif ($total1 >\
    \ $total2) {\n        return $lst2;\n    } else {\n        return $lst1;\n   \
    \ }\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = array_reduce($lst1, function($count, $value) {\n        return\
    \ $count + strlen($value);\n    }, 0);\n    $count2 = array_reduce($lst2, function($count,\
    \ $value) {\n        return $count + strlen($value);\n    }, 0);\n    return $count1\
    \ < $count2 ? $lst1 : $lst2;\n}\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    print_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\nprint_r(total_match(['4'], ['1', '2', '3',\
    \ '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\nArray\n(\n    [0] => hi\n  \
    \  [1] => admin\n)\nArray\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n)\n\
    Array\n(\n    [0] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp814kqd4p.php:35\nStack trace:\n#0 /tmp/tmp814kqd4p.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp814kqd4p.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$len1 = array_sum(array_map('strlen', $lst1));\n\t$len2 = array_sum(array_map('strlen',\
    \ $lst2));\n\tif ($len1 == $len2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn\
    \ $len1 < $len2 ? $lst1 : $lst2;\n\t}\n}\necho '<pre>';\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi',\
    \ 'admin', 'project']));\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    print_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho '</pre>';\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\nArray\n(\n    [0] => hi\n\
    \    [1] => admin\n)\nArray\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\nArray\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $sum = 0;\n  $sum2 = 0;\n  for($i = 0; $i < count($lst1); $i++) {\n   \
    \ $sum += strlen($lst1[$i]);\n  }\n  for($i = 0; $i < count($lst2); $i++) {\n\
    \    $sum2 += strlen($lst2[$i]);\n  }\n  if($sum < $sum2) {\n    return $lst1;\n\
    \  } else {\n    return $lst2;\n  }\n}\necho total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7pbzejg.php:38\n\
    Stack trace:\n#0 /tmp/tmpy7pbzejg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy7pbzejg.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $word){\n      \
    \  $total1 += strlen($word);\n    }\n    foreach($lst2 as $word){\n        $total2\
    \ += strlen($word);\n    }\n    if($total1 < $total2){\n        return $lst1;\n\
    \    }\n    return $lst2;\n  }\n  echo \"<h3> Question 20 </h3>\";\n  echo total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']);\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<h3> Question 20 </h3>Array\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvi1y2srx.php:39\nStack trace:\n#0 /tmp/tmpvi1y2srx.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvi1y2srx.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $v) {\n\t\t$count1 +=\
    \ strlen($v);\n\t}\n\tforeach ($lst2 as $v) {\n\t\t$count2 += strlen($v);\n\t\
    }\n\tif ($count1 === $count2) {\n\t\treturn $lst1;\n\t}\n\tif ($count1 < $count2)\
    \ {\n\t\treturn $lst1;\n\t}\n\treturn $lst2;\n}\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum1 = 0;\n    $sum2 = 0;\n    foreach($lst1 as $l1) {\n        $sum1\
    \ += strlen($l1);\n    }\n    foreach($lst2 as $l2) {\n        $sum2 += strlen($l2);\n\
    \    }\n    if($sum1 < $sum2) {\n        return $lst1;\n    } else {\n       \
    \ return $lst2;\n    }\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojf5oc9o.php:38\n\
    Stack trace:\n#0 /tmp/tmpojf5oc9o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpojf5oc9o.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$length1 = 0;\n\t$length2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) {\
    \ \n\t\t$length1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$length2 += strlen($lst2[$i]);\n\t}\n\tif ($length1 < $length2) {\n\t\
    \treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg34i6b7i.php:38\n\
    Stack trace:\n#0 /tmp/tmpg34i6b7i.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpg34i6b7i.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tfor ($i=0; $i < count($lst1); $i++)\
    \ { \n\t\t$lst1_total += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$lst2_total += strlen($lst2[$i]);\n\t}\n\tif ($lst1_total > $lst2_total)\
    \ {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = $total2 = 0;\n    foreach ($lst1 as $value) {\n        $total1\
    \ += strlen($value);\n    }\n    foreach ($lst2 as $value) {\n        $total2\
    \ += strlen($value);\n    }\n    if ($total1 == $total2) {\n        return $lst1;\n\
    \    } elseif ($total1 < $total2) {\n        return $lst1;\n    } else {\n   \
    \     return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n$arr1 = 0;\n$arr2 = 0;\nforeach($lst1 as $value){\n    $arr1 += strlen($value);\n\
    }\nforeach($lst2 as $value){\n    $arr2 += strlen($value);\n}\nif($arr1 < $arr2){\n\
    \    return $lst1;\n}else{\n    return $lst2;\n}\n}\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "hI, Hi\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaq27g0rz.php:38\n\
    Stack trace:\n#0 /tmp/tmpaq27g0rz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpaq27g0rz.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    // your code here...\n    $count1 = 0;\n    $count2 = 0;\n    for ($i=0;\
    \ $i < count($lst1); $i++) { \n        $count1 = $count1 + strlen($lst1[$i]);\n\
    \    }\n    for ($i=0; $i < count($lst2); $i++) { \n        $count2 = $count2\
    \ + strlen($lst2[$i]);\n    }\n    if ($count1 < $count2) {\n        return $lst1;\n\
    \    }\n    else if ($count1 > $count2) {\n        return $lst2;\n    }\n    else\
    \ if ($count1 === $count2) {\n        return $lst1;\n    }\n}\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => 4\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$x = strlen(implode(\"\", $lst1));\n\t$y = strlen(implode(\"\", $lst2));\n\
    \tif ($x == $y) {\n\t\treturn $lst1;\n\t} else if ($x < $y) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho implode(\",\", total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\necho implode(\",\", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    ,\", total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho\
    \ implode(\",\", total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"<br>\"\
    ;\necho implode(\",\", total_match(['4'], ['4']));\necho \"<br>\";\necho implode(\"\
    ,\", total_match(['a', 'b', 'c'], ['a', 'b', 'c']));\necho \"<br>\";\necho implode(\"\
    ,\", total_match(['a', 'b', 'c'], ['a', 'b', 'c', 'd']));\necho \"<br>\";\necho\
    \ implode(\",\", total_match(['a', 'b', 'c'], ['a', 'b', 'c', 'd', 'e']));\necho\
    \ \"<br>\";\necho implode(\",\", total_match(['a', 'b', 'c'], ['a', 'b', 'c',\
    \ 'd', 'e', 'f']));\necho \"<br>\";\necho implode(\",\", total_match(['a', 'b',\
    \ 'c'], ['a', 'b', 'c', 'd', 'e', 'f', 'g']));\necho \"<br>\";\necho implode(\"\
    ,\", total_match(['a', 'b', 'c'], ['a', 'b', '\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpak3xm94x.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1 = implode(\"\", $lst1);\n    $lst2 = implode(\"\", $lst2);\n  \
    \  $lst1 = strlen($lst1);\n    $lst2 = strlen($lst2);\n    if ($lst1 == $lst2)\
    \ {\n        return $lst1;\n    } else if ($lst1 < $lst2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7853x40.php:30\n\
    Stack trace:\n#0 /tmp/tmp_7853x40.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_7853x40.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total_lst1 = 0;\n    $total_lst2 = 0;\n    foreach($lst1 as $lst1_item)\
    \ {\n        $total_lst1 += strlen($lst1_item);\n    }\n    foreach($lst2 as $lst2_item)\
    \ {\n        $total_lst2 += strlen($lst2_item);\n    }\n    return $total_lst1\
    \ < $total_lst2 ? $lst1 : $lst2;\n}\necho \"Total Characters:\" . total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) . \"<br>\";\necho \"Total Characters:\" . total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']) . \"<br>\";\necho \"Total Characters:\"\
    \ . total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) . \"<br>\";\necho \"Total\
    \ Characters:\" . total_match(['4'], ['1', '2', '3', '4', '5']) . \"<br>\";\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Total Characters:Array<br>Total Characters:Array<br>Total Characters:Array<br>Total\
    \ Characters:Array<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5196e92.php:37\n\
    Stack trace:\n#0 /tmp/tmpi5196e92.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpi5196e92.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t$sum += strlen($lst1[$i]);\n\
    \t}\n\t$sum2 = 0;\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\t$sum2 += strlen($lst2[$i]);\n\
    \t}\n\tif ($sum < $sum2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7oor2cws.php:37\n\
    Stack trace:\n#0 /tmp/tmp7oor2cws.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7oor2cws.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    $output = [];\n    for ($i = 0; $i\
    \ < count($lst1); $i++) {\n        $total1 += strlen($lst1[$i]);\n    }\n    for\
    \ ($i = 0; $i < count($lst2); $i++) {\n        $total2 += strlen($lst2[$i]);\n\
    \    }\n    if ($total1 < $total2) {\n        $output = $lst1;\n    } else if\
    \ ($total1 > $total2) {\n        $output = $lst2;\n    } else {\n        $output\
    \ = $lst1;\n    }\n    return $output;\n}\necho \"The result is \".total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: The result is Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    foreach($lst1 as $l1) {\n       \
    \ $count1 += strlen($l1);\n    }\n    foreach($lst2 as $l2) {\n        $count2\
    \ += strlen($l2);\n    }\n    if($count1 < $count2) {\n        return $lst1;\n\
    \    } else if($count1 > $count2) {\n        return $lst2;\n    } else {\n   \
    \     return $lst1;\n    }\n}\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sumLst1 = 0;\n\t$sumLst2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$sumLst1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$sumLst2 += strlen($value);\n\
    \t}\n\tif ($sumLst1 < $sumLst2) {\n\t\treturn $lst1;\n\t}\n\telse if ($sumLst1\
    \ > $sumLst2) {\n\t\treturn $lst2;\n\t}\n\telse {\n\t\treturn $lst1;\n\t}\n}\n\
    echo \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi',\
    \ 'admin', 'project']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\tif(empty($lst1) && empty($lst2)) {\n\t\treturn [];\n\t}\n\t$firstStr =\
    \ implode(\"\", $lst1);\n\t$secondStr = implode(\"\", $lst2);\n\tif(strlen($firstStr)\
    \ < strlen($secondStr)) {\n\t\treturn $lst1;\n\t} else if(strlen($firstStr) >\
    \ strlen($secondStr)) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t\
    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match([],\
    \ []));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre><pre>Array\n\
    (\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1Str = implode(\"\", $lst1);\n\t$lst2Str = implode(\"\", $lst2);\n\t\
    if (strlen($lst1Str) < strlen($lst2Str)) {\n\t\treturn $lst1;\n\t} elseif (strlen($lst1Str)\
    \ > strlen($lst2Str)) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t\
    }\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"\
    ), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $match = [];\n    if (count($lst1) > count($lst2)) {\n        $match\
    \ = $lst2;\n    } else {\n        $match = $lst1;\n    }\n    return $match;\n\
    }\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => hi\n    [1] => admin\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpizoaovds.php:27\nStack trace:\n#0 /tmp/tmpizoaovds.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpizoaovds.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n    $size_of_lst1 = count($lst1);\n\
    \    $size_of_lst2 = count($lst2);\n    for ($i = 0; $i < $size_of_lst1; $i++)\
    \ {\n        $lst1_total += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < $size_of_lst2;\
    \ $i++) {\n        $lst2_total += strlen($lst2[$i]);\n    }\n    if ($lst1_total\
    \ < $lst2_total) {\n        return $lst1;\n    } else {\n        return $lst2;\n\
    \    }\n}\necho '<pre>';\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    print_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\nprint_r(total_match(['4'], ['1', '2', '3',\
    \ '4', '5']));\necho '</pre>';\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\nArray\n(\n    [0] => hi\n\
    \    [1] => admin\n)\nArray\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\nArray\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpx40vvk3y.php:46\nStack trace:\n#0 /tmp/tmpx40vvk3y.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpx40vvk3y.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = strlen(implode($lst1));\n    $count2 = strlen(implode($lst2));\n\
    \    if ($count1 > $count2) {\n        return $lst2;\n    } else {\n        return\
    \ $lst1;\n    }\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum1 = 0;\n    $sum2 = 0;\n    foreach($lst1 as $item) {\n        $sum1\
    \ += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $sum2 += strlen($item);\n\
    \    }\n    if($sum1 > $sum2) {\n        return $lst2;\n    }\n    else {\n  \
    \      return $lst1;\n    }\n}\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"<br>\";\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\necho implode(\", \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\tif(count($lst1) < count($lst2)){\n\t\treturn $lst1;\n\t} else if(count($lst1)\
    \ > count($lst2)){\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\n\
    echo total_match(['hi', 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']);\necho \"<br>\";\necho total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho total_match(['4'], ['1',\
    \ '2', '3', '4', '5']);\necho \"<br>\";\necho total_match([], []);\necho \"<br>\"\
    ;\necho total_match(['1', '2', '3', '4', '5'], ['4']);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array<br>Array<br>Array<br>Array<br>Array<br>Array\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmplr4neyt4.php:37\nStack trace:\n#0 /tmp/tmplr4neyt4.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplr4neyt4.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$newLst1 = [];\n\t$newLst2 = [];\n\tforeach ($lst1 as $value) {\n\t\tarray_push($newLst1,\
    \ strlen($value));\n\t}\n\tforeach ($lst2 as $value) {\n\t\tarray_push($newLst2,\
    \ strlen($value));\n\t}\n\t$totalLst1 = array_sum($newLst1);\n\t$totalLst2 = array_sum($newLst2);\n\
    \tif ($totalLst1 > $totalLst2) {\n\t\treturn $lst2;\n\t}\n\telseif ($totalLst1\
    \ < $totalLst2) {\n\t\treturn $lst1;\n\t}\n\telse {\n\t\treturn $lst1;\n\t}\n\
    }\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t\
    $sum1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\
    \t$sum2 += strlen($lst2[$i]);\n\t}\n\tif ($sum1 == $sum2) {\n\t\treturn $lst1;\n\
    \t} else if ($sum1 < $sum2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\tif (count($lst1) + strlen(implode($lst1)) === count($lst2) + strlen(implode($lst2)))\
    \ {\n\t\treturn $lst1;\n\t}\n\tif (count($lst1) + strlen(implode($lst1)) > count($lst2)\
    \ + strlen(implode($lst2))) {\n\t\treturn $lst2;\n\t}\n\tif (count($lst1) + strlen(implode($lst1))\
    \ < count($lst2) + strlen(implode($lst2))) {\n\t\treturn $lst1;\n\t}\n}\necho\
    \ \"<pre>\";\n\tprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5u07tobq.php:35\nStack trace:\n#0 /tmp/tmp5u07tobq.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5u07tobq.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $string_lst1 = join('', $lst1);\n    $string_lst2 = join('', $lst2);\n\
    \    if (strlen($string_lst1) === strlen($string_lst2)) {\n        return $lst1;\n\
    \    } elseif (strlen($string_lst1) < strlen($string_lst2)) {\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho '<pre>';\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho '</pre>';\necho '<pre>';\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho '</pre>';\necho '<pre>';\n\
    print_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho '</pre>';\necho\
    \ '<pre>';\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho '</pre>';\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $l1) {\n\t\t$total1 +=\
    \ strlen($l1);\n\t}\n\tforeach ($lst2 as $l2) {\n\t\t$total2 += strlen($l2);\n\
    \t}\n\tif ($total1 < $total2) {\n\t\treturn $lst1;\n\t} elseif ($total1 > $total2)\
    \ {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_sum = 0;\n\t$lst2_sum = 0;\n\tfor ($i=0; $i < count($lst1); $i++)\
    \ { \n\t\t$lst1_sum += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$lst2_sum += strlen($lst2[$i]);\n\t}\n\tif ($lst1_sum > $lst2_sum)\
    \ {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\n\necho '<pre>';\n\
    var_dump(total_match([], []));\necho '</pre>';\n\necho '<pre>';\nvar_dump(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho '</pre>';\n\necho '<pre>';\nvar_dump(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho '</pre>';\n\necho '<pre>';\n\
    var_dump(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho '</pre>';\n\n\
    echo '<pre>';\nvar_dump(total_match(['4'], ['1', '2', '3', '4', '5']));\necho\
    \ '</pre>';\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>array(0) {\n}\n</pre><pre>array(2) {\n  [0]=>\n  string(2) \"hI\"\n\
    \  [1]=>\n  string(2) \"Hi\"\n}\n</pre><pre>array(2) {\n  [0]=>\n  string(2) \"\
    hi\"\n  [1]=>\n  string(5) \"admin\"\n}\n</pre><pre>array(3) {\n  [0]=>\n  string(2)\
    \ \"hI\"\n  [1]=>\n  string(2) \"hi\"\n  [2]=>\n  string(2) \"hi\"\n}\n</pre><pre>array(1)\
    \ {\n  [0]=>\n  string(1) \"4\"\n}\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $i) {\n\t\t$sum1 += strlen($i);\n\
    \t}\n\tforeach ($lst2 as $i) {\n\t\t$sum2 += strlen($i);\n\t}\n\tif ($sum1 < $sum2)\
    \ {\n\t\treturn $lst1;\n\t}\n\treturn $lst2;\n}\necho '<pre>';\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho '</pre>';\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp900oou03.php:39\nStack trace:\n#0 /tmp/tmp900oou03.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp900oou03.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $word) {\n     \
    \   $total1 += strlen($word);\n    }\n    foreach($lst2 as $word) {\n        $total2\
    \ += strlen($word);\n    }\n    if($total1 > $total2) {\n        return $lst2;\n\
    \    }\n    else {\n        return $lst1;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $word) {\n     \
    \   $total1 += strlen($word);\n    }\n    foreach($lst2 as $word) {\n        $total2\
    \ += strlen($word);\n    }\n    if($total1 == $total2) {\n        return $lst1;\n\
    \    } elseif($total1 < $total2) {\n        return $lst1;\n    } else {\n    \
    \    return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $lst1Total = 0;\n  $lst2Total = 0;\n  foreach($lst1 as $item) {\n    $lst1Total\
    \ += strlen($item);\n  }\n  foreach($lst2 as $item) {\n    $lst2Total += strlen($item);\n\
    \  }\n  if($lst1Total == $lst2Total) {\n    return $lst1;\n  } else if($lst1Total\
    \ < $lst2Total) {\n    return $lst1;\n  } else {\n    return $lst2;\n  }\n}\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $len1 = 0;\n    $len2 = 0;\n    foreach($lst1 as $val){\n        $len1\
    \ += strlen($val);\n    }\n    foreach($lst2 as $val){\n        $len2 += strlen($val);\n\
    \    }\n    if($len1 > $len2){\n        return $lst2;\n    }\n    return $lst1;\n\
    }\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"\
    ), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $value) {\n    \
    \    $total1 += strlen($value);\n    }\n    foreach($lst2 as $value) {\n     \
    \   $total2 += strlen($value);\n    }\n    if($total1 == $total2) {\n        return\
    \ $lst1;\n    }\n    else if($total1 < $total2) {\n        return $lst1;\n   \
    \ }\n    else {\n        return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1 = str_split(implode($lst1));\n\t$lst2 = str_split(implode($lst2));\n\
    \t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $item) {\n\t\t$total1 += strlen($item);\n\
    \t}\n\tforeach ($lst2 as $item) {\n\t\t$total2 += strlen($item);\n\t}\n\tif ($total1\
    \ == $total2) {\n\t\treturn $lst1;\n\t} elseif ($total1 < $total2) {\n\t\treturn\
    \ $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho implode(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "hIHi\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdbye0yb.php:36\n\
    Stack trace:\n#0 /tmp/tmpmdbye0yb.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpmdbye0yb.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $list1Count = 0;\n    $list2Count = 0;\n    foreach($lst1 as $item){\n\
    \        $list1Count += strlen($item);\n    }\n    foreach($lst2 as $item){\n\
    \        $list2Count += strlen($item);\n    }\n    return $list1Count > $list2Count\
    \ ? $lst2 : $lst1;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57pbmyk0.php:19\n\
    Stack trace:\n#0 /tmp/tmp57pbmyk0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp57pbmyk0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    if (count($lst1) == 0 && count($lst2) == 0) {\n        return [];\n \
    \   }\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $sum1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $sum2 += strlen($lst2[$i]);\n    }\n    if ($sum1 < $sum2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ '<pre>';\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho '</pre>';\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpe0chknox.php:43\nStack trace:\n#0 /tmp/tmpe0chknox.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpe0chknox.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum1 = 0;\n    $sum2 = 0;\n    foreach ($lst1 as $val) {\n        $sum1\
    \ += strlen($val);\n    }\n    foreach ($lst2 as $val) {\n        $sum2 += strlen($val);\n\
    \    }\n    if ($sum1 < $sum2) {\n        return $lst1;\n    } elseif ($sum1 >\
    \ $sum2) {\n        return $lst2;\n    } else {\n        return $lst1;\n    }\n\
    }\n$result = total_match(['hi', 'admin'], ['hI', 'Hi']);\nprint_r($result);\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $length1 = 0;\n    $length2 = 0;\n    foreach ($lst1 as $str) {\n   \
    \     $length1 += strlen($str);\n    }\n    foreach ($lst2 as $str) {\n      \
    \  $length2 += strlen($str);\n    }\n    if ($length1 < $length2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\n\n$lst1 = [];\n$lst2\
    \ = [];\necho \"Array1: \";\nvar_dump($lst1);\necho \"Array2: \";\nvar_dump($lst2);\n\
    echo \"The result of two array: \";\nvar_dump(total_match($lst1, $lst2));\necho\
    \ \"-----------------------\\n\";\n\n$lst1 = ['hi', 'admin'];\n$lst2 = ['hI',\
    \ 'Hi'];\necho \"Array1: \";\nvar_dump($lst1);\necho \"Array2: \";\nvar_dump($lst2);\n\
    echo \"The result of two array: \";\nvar_dump(total_match($lst1, $lst2));\necho\
    \ \"-----------------------\\n\";\n\n$lst1 = ['hi', 'admin'];\n$lst2 = ['hi',\
    \ 'hi', 'admin', 'project'];\necho \"Array1: \";\nvar_dump($lst1);\necho \"Array2:\
    \ \";\nvar_dump($lst2);\necho \"The result of two array: \";\nvar_dump(total_match($lst1,\
    \ $lst2));\necho \"-----------------------\\n\";\n\n$lst1 = ['hi', 'admin'];\n\
    $lst2 = ['hI', 'hi', 'hi'];\necho \"Array1: \";\nvar_dump($lst1);\necho \"Array2:\
    \ \";\nvar_dump($lst2);\necho \"The result of two array: \";\nvar_dump(total_match($lst1,\
    \ $lst2));\necho \"-----------------------\\n\";\n\n$lst1 = ['4'];\n$\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyvvaguv4.php on line 69\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $count1 = 0;\n  $count2 = 0;\n  foreach($lst1 as $item){\n    $count1 +=\
    \ strlen($item);\n  }\n  foreach($lst2 as $item){\n    $count2 += strlen($item);\n\
    \  }\n  if($count1 < $count2){\n    return $lst1;\n  } else if($count1 > $count2){\n\
    \    return $lst2;\n  } else {\n    return $lst1;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$str_length1 = strlen(implode($lst1));\n\t$str_length2 = strlen(implode($lst2));\n\
    \t\n\tif ($str_length1 > $str_length2) {\n\t\treturn $lst2;\n\t} elseif ($str_length1\
    \ < $str_length2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\n\
    \necho '<h2>TOTAL MATCH</h2>';\necho '<h3>Test 1: </h3>';\n$lst1 = array();\n\
    $lst2 = array();\nvar_dump(total_match($lst1, $lst2));\necho '<h3>Test 2: </h3>';\n\
    $lst1 = array('hi', 'admin');\n$lst2 = array('hI', 'Hi');\nvar_dump(total_match($lst1,\
    \ $lst2));\necho '<h3>Test 3: </h3>';\n$lst1 = array('hi', 'admin');\n$lst2 =\
    \ array('hi', 'hi', 'admin', 'project');\nvar_dump(total_match($lst1, $lst2));\n\
    echo '<h3>Test 4: </h3>';\n$lst1 = array('hi', 'admin');\n$lst2 = array('hI',\
    \ 'hi', 'hi');\nvar_dump(total_match($lst1, $lst2));\necho '<h3>Test 5: </h3>';\n\
    $lst1 = array('4');\n$lst2 = array('1', '2', '3', '4', '5');\nvar_dump(total_match($lst1,\
    \ $lst2));\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<h2>TOTAL MATCH</h2><h3>Test 1: </h3>array(0) {\n}\n<h3>Test 2: </h3>array(2)\
    \ {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2) \"Hi\"\n}\n<h3>Test 3:\
    \ </h3>array(2) {\n  [0]=>\n  string(2) \"hi\"\n  [1]=>\n  string(5) \"admin\"\
    \n}\n<h3>Test 4: </h3>array(3) {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2)\
    \ \"hi\"\n  [2]=>\n  string(2) \"hi\"\n}\n<h3>Test 5: </h3>array(1) {\n  [0]=>\n\
    \  string(1) \"4\"\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $lst1_total = 0;\n  $lst2_total = 0;\n  foreach($lst1 as $value) {\n  \
    \  $lst1_total += strlen($value);\n  }\n  foreach($lst2 as $value) {\n    $lst2_total\
    \ += strlen($value);\n  }\n  if($lst1_total < $lst2_total) {\n    return $lst1;\n\
    \  }\n  return $lst2;\n}\necho implode(\", \", total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\necho \"<br />\";\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"<br />\";\necho implode(\", \",\
    \ total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"<br />\";\necho implode(\"\
    , \", total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"<br />\";\necho\
    \ implode(\", \", total_match([], []));\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "hI, Hi<br />hi, admin<br />hI, hi, hi<br />4<br />\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp5u988oye.php:45\nStack trace:\n#0 /tmp/tmp5u988oye.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5u988oye.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_length = count(array_map('strlen', $lst1));\n\t$lst2_length = count(array_map('strlen',\
    \ $lst2));\n\treturn $lst1_length < $lst2_length ? $lst1 : $lst2;\n}\necho '<pre>';\n\
    print_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\nArray\n(\n    [0] => hi\n\
    \    [1] => admin\n)\nArray\n(\n    [0] => hi\n    [1] => admin\n)\nArray\n(\n\
    \    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxr75mka6.php:32\n\
    Stack trace:\n#0 /tmp/tmpxr75mka6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxr75mka6.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n$count1 = strlen(implode($lst1));\n$count2 = strlen(implode($lst2));\nif\
    \ ($count1 > $count2) {\nreturn $lst2;\n} elseif ($count1 == $count2) {\nreturn\
    \ $lst1;\n} else {\nreturn $lst1;\n}\n}\necho total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$count1 = $count1 + strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$count2 = $count2 + strlen($lst2[$i]);\n\t}\n\tif ($count1 < $count2)\
    \ {\n\t\treturn $lst1;\n\t}\n\telse if ($count1 > $count2) {\n\t\treturn $lst2;\n\
    \t}\n\telse {\n\t\treturn $lst1;\n\t}\n}\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\necho \"<br>\";\nprint_r(total_match(['4'], ['1', '2',\
    \ '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n<br>Array\n(\n    [0] => hi\n\
    \    [1] => admin\n)\n<br>Array\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\n<br>Array\n(\n    [0] => 4\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$countlst1 = 0;\n\t$countlst2 = 0;\n\t$lstmin = [];\n\tforeach ($lst1 as\
    \ $val1) {\n\t\tfor ($i=0; $i < strlen($val1); $i++) { \n\t\t\t$countlst1++;\n\
    \t\t}\n\t}\n\tforeach ($lst2 as $val2) {\n\t\tfor ($i=0; $i < strlen($val2); $i++)\
    \ { \n\t\t\t$countlst2++;\n\t\t}\n\t}\n\tif ($countlst1 < $countlst2) {\n\t\t\
    $lstmin = $lst1;\n\t} else {\n\t\t$lstmin = $lst2;\n\t}\n\treturn $lstmin;\n}\n\
    echo implode(\" \", total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\"\
    ;\necho implode(\" \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\necho implode(\" \", total_match(['hi', 'admin'], ['hI', 'hi',\
    \ 'hi']));\necho \"<br>\";\necho implode(\" \", total_match(['4'], ['1', '2',\
    \ '3', '4', '5']));\necho \"<br>\";\necho implode(\" \", total_match(['4'], ['1',\
    \ '2', '3', '4', '5']));\necho \"<br>\";\necho implode(\" \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"<br>\";\necho implode(\" \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"<br>\";\necho implode(\" \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"<br>\";\necho implode(\" \", total_match(['4'],\
    \ ['1', '2', '3', '4', '\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpirjw6ujy.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $string1 = implode(\"\", $lst1);\n    $string2 = implode(\"\", $lst2);\n\
    \    $count1 = strlen($string1);\n    $count2 = strlen($string2);\n    if ($count1\
    \ == $count2) {\n        return $lst1;\n    }\n    else if ($count1 < $count2)\
    \ {\n        return $lst1;\n    }\n    else {\n        return $lst2;\n    }\n\
    }\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    //TODO: write code here \n    $res = \"\";\n    $sum1 = 0;\n    $sum2\
    \ = 0;\n    foreach($lst1 as $item){\n        $sum1 += strlen($item);\n    }\n\
    \    foreach($lst2 as $item){\n        $sum2 += strlen($item);\n    }\n    if($sum1\
    \ < $sum2){\n        $res = $lst1;\n    }else{\n        $res = $lst2;\n    }\n\
    \    return $res;\n}\n$result = total_match(['hi', 'admin'], ['hI', 'Hi']);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpydk_pgin.php:43\nStack trace:\n#0 /tmp/tmpydk_pgin.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpydk_pgin.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$list1=count(str_split(implode($lst1)));\n\t$list2=count(str_split(implode($lst2)));\n\
    \tif($list1 < $list2){\n\t\treturn $lst1;\n\t}elseif($list1 > $list2){\n\t\treturn\
    \ $lst2;\n\t}else{\n\t\treturn $lst1;\n\t}\n}\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 < $total2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ \"w1: \";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\"\
    ;\necho \"w2: \";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"<br>\";\necho \"w3: \";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\necho \"<br>\";\necho \"w4: \";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "w1: Array\n(\n    [0] => hI\n    [1] => Hi\n)\n<br>w2: Array\n(\n    [0]\
    \ => hi\n    [1] => admin\n)\n<br>w3: Array\n(\n    [0] => hI\n    [1] => hi\n\
    \    [2] => hi\n)\n<br>w4: Array\n(\n    [0] => 4\n)\n<br>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp2u4m0f2w.php:49\nStack trace:\n#0 /tmp/tmp2u4m0f2w.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2u4m0f2w.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $newList = [];\n  foreach($lst1 as $word){\n    array_push($newList, strlen($word));\n\
    \  }\n  foreach($lst2 as $word){\n    array_push($newList, strlen($word));\n \
    \ }\n  $newList = array_count_values($newList);\n  return $newList;\n}\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi',\
    \ 'admin', 'project']));\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    print_r(total_match(['4'], ['1', '2', '3', '4', '5']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [2] => 3\n    [5] => 1\n)\nArray\n(\n    [2] => 3\n    [5]\
    \ => 2\n    [7] => 1\n)\nArray\n(\n    [2] => 4\n    [5] => 1\n)\nArray\n(\n \
    \   [1] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4wn7mff.php:32\n\
    Stack trace:\n#0 /tmp/tmpo4wn7mff.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo4wn7mff.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 < $total2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ '<pre>';\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho '</pre>';\n\
    \nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmps_m6rcs8.php:41\nStack trace:\n#0 /tmp/tmps_m6rcs8.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps_m6rcs8.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lista1 = \"\";\n\t$lista2 = \"\";\n\tforeach ($lst1 as $value) {\n\t\t\
    $lista1 = $lista1.$value;\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lista2 = $lista2.$value;\n\
    \t}\n\tif (strlen($lista1) > strlen($lista2)) {\n\t\treturn $lst2;\n\t}\n\telseif\
    \ (strlen($lista1) < strlen($lista2)) {\n\t\treturn $lst1;\n\t}\n\telse {\n\t\t\
    return $lst1;\n\t}\n}\n$lst1 = [\"4\"];\n$lst2 = [\"1\", \"2\", \"3\", \"4\",\
    \ \"5\"];\necho \"Lista 1: \";\nvar_dump($lst1);\necho \"Lista 2: \";\nvar_dump($lst2);\n\
    echo \"Lista con menos caracteres: \";\nvar_dump(total_match($lst1, $lst2));\n\
    echo \"<br><br>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Lista 1: array(1) {\n  [0]=>\n  string(1) \"4\"\n}\nLista 2: array(5) {\n\
    \  [0]=>\n  string(1) \"1\"\n  [1]=>\n  string(1) \"2\"\n  [2]=>\n  string(1)\
    \ \"3\"\n  [3]=>\n  string(1) \"4\"\n  [4]=>\n  string(1) \"5\"\n}\nLista con\
    \ menos caracteres: array(1) {\n  [0]=>\n  string(1) \"4\"\n}\n<br><br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\tif(count($lst1) == 0 || count($lst2) == 0) {\n\t\treturn [];\n\t}\n\t\n\
    \t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach($lst1 as $lst) {\n\t\t$sum1 += strlen($lst);\n\
    \t}\n\tforeach($lst2 as $lst) {\n\t\t$sum2 += strlen($lst);\n\t}\n\t\n\tif($sum1\
    \ == $sum2) {\n\t\treturn $lst1;\n\t}\n\t\n\treturn $sum1 < $sum2 ? $lst1 : $lst2;\n\
    }\n\necho \"<pre>\";\n\tprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_tot = 0;\n    $lst2_tot = 0;\n    foreach($lst1 as $word) {\n \
    \       $lst1_tot += strlen($word);\n    }\n    foreach($lst2 as $word) {\n  \
    \      $lst2_tot += strlen($word);\n    }\n    if($lst1_tot > $lst2_tot) {\n \
    \       return $lst2;\n    } else {\n        return $lst1;\n    }\n}\necho total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 == $total2)\
    \ {\n        return $lst1;\n    } else if ($total1 < $total2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\n$lst1 = ['hi', 'admin'];\n\
    $lst2 = ['hI', 'Hi'];\necho total_match($lst1, $lst2);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum1 = 0;\n    $sum2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $sum1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $sum2 += strlen($lst2[$i]);\n    }\n    if ($sum1 > $sum2)\
    \ {\n        return $lst2;\n    } else {\n        return $lst1;\n    }\n}\necho\
    \ \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"\
    </pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = $count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1 += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\t}\n\tif\
    \ ($count1 > $count2) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t\
    }\n}\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\necho\
    \ \"<br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"<br>\";\necho implode(', ', total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"<br>\";\necho implode(', ', total_match([], []));\n\
    echo \"<br>\";\necho \"<br>\";\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 4<br>hI, hi, hi<br>hi, admin<br>hI, Hi<br><br><br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $char1 = 0;\n    $char2 = 0;\n    foreach($lst1 as $str) {\n        $char1\
    \ += strlen($str);\n    }\n    foreach($lst2 as $str) {\n        $char2 += strlen($str);\n\
    \    }\n    if($char1 <= $char2) {\n        return $lst1;\n    } else {\n    \
    \    return $lst2;\n    }\n}\necho implode(', ', total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $n1 = 0;\n    $n2 = 0;\n    foreach($lst1 as $v) {\n        $n1 += strlen($v);\n\
    \    }\n    foreach($lst2 as $v) {\n        $n2 += strlen($v);\n    }\n    if($n1\
    \ < $n2) {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n\
    }\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpleq30tfi.php:41\nStack trace:\n#0 /tmp/tmpleq30tfi.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpleq30tfi.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$count1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$count2 += strlen($lst2[$i]);\n\t}\n\tif ($count1 === $count2) {\n\t\
    \treturn $lst1;\n\t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t}\n\tif\
    \ ($count1 > $count2) {\n\t\treturn $lst2;\n\t}\n}\necho \"total_match([], [])\
    \ \u279E []\";\necho \"<br>\";\necho \"total_match(['hi', 'admin'], ['hI', 'Hi'])\
    \ \u279E ['hI', 'Hi']\";\necho \"<br>\";\necho \"total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\";\necho \"<br>\";\n\
    echo \"total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\"\
    ;\necho \"<br>\";\necho \"total_match(['4'], ['1', '2', '3', '4', '5']) \u279E\
    \ ['4']\";\necho \"<br>\";\necho \"total_match([], []) \u279E []\";\necho \"<br>\"\
    ;\necho \"total_match(['hi', 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\";\n\
    echo \"<br>\";\necho \"total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \ \u279E ['hi', 'admin']\";\necho \"<br>\";\necho \"total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\";\necho \"<br>\";\necho\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm3jfsrh9.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $word) {\n\t\t\
    $lst1_total += strlen($word);\n\t}\n\tforeach ($lst2 as $word) {\n\t\t$lst2_total\
    \ += strlen($word);\n\t}\n\tif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9dcc98ag.php:37\n\
    Stack trace:\n#0 /tmp/tmp9dcc98ag.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9dcc98ag.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $firstList = 0;\n    $secondList = 0;\n    foreach($lst1 as $word){\n\
    \        $firstList += strlen($word);\n    }\n    foreach($lst2 as $word){\n \
    \       $secondList += strlen($word);\n    }\n    return $firstList <= $secondList\
    \ ? $lst1 : $lst2;\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$length1 = 0;\n\t$length2 = 0;\n\t$result = [];\n\tforeach ($lst1 as $index\
    \ => $lst) {\n\t\t$length1 += strlen($lst);\n\t}\n\tforeach ($lst2 as $index =>\
    \ $lst) {\n\t\t$length2 += strlen($lst);\n\t}\n\tif ($length1 < $length2) {\n\t\
    \t$result = $lst1;\n\t} else {\n\t\t$result = $lst2;\n\t}\n\treturn $result;\n\
    }\necho implode(\" \", total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"<br>\"\
    ;\necho implode(\" \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\necho implode(\" \", total_match(['hi', 'admin'], ['hI', 'hi',\
    \ 'hi']));\necho \"<br>\";\necho implode(\" \", total_match(['4'], ['1', '2',\
    \ '3', '4', '5']));\necho \"<br>\";\necho implode(\" \", total_match(['2'], ['1',\
    \ '2', '3', '4', '5']));\necho \"<br>\";\necho implode(\" \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    \ \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"\
    <br>\";\necho implode(\" \", total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"<br>\";\necho implode(\" \", total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\" \", total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\necho implode(\"\
    \ \", total_match(['\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv5lva9fz.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_count = 0;\n    $lst2_count = 0;\n\tforeach ($lst1 as $item) {\n\
    \        $lst1_count += strlen($item);\n    }\n    foreach ($lst2 as $item) {\n\
    \        $lst2_count += strlen($item);\n    }\n    if ($lst1_count < $lst2_count)\
    \ {\n        return $lst1;\n    } elseif ($lst1_count > $lst2_count) {\n     \
    \   return $lst2;\n    } else {\n        return $lst1;\n    }\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"</pre>\";\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $key => $value) {\n\t\t$sum\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $key => $value) {\n\t\t$sum2 +=\
    \ strlen($value);\n\t}\n\tif ($sum < $sum2) {\n\t\treturn $lst1;\n\t} else {\n\
    \t\treturn $lst2;\n\t}\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvfaxmsx.php:38\n\
    Stack trace:\n#0 /tmp/tmpxvfaxmsx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxvfaxmsx.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $item) {\n\t\t$sum1 += strlen($item);\n\
    \t}\n\tforeach ($lst2 as $item) {\n\t\t$sum2 += strlen($item);\n\t}\n\tif ($sum1\
    \ == $sum2) {\n\t\treturn $lst1;\n\t} else if ($sum1 < $sum2) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi',\
    \ 'admin', 'project']));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\necho \"<br>\";\nprint_r(total_match(['4'], ['1', '2',\
    \ '3', '4', '5']));\necho \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n<br>Array\n(\n    [0] => hi\n\
    \    [1] => admin\n)\n<br>Array\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\n<br>Array\n(\n    [0] => 4\n)\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1 as $item) {\n\t\t\
    $lst1_total += strlen($item);\n\t}\n\tforeach ($lst2 as $item) {\n\t\t$lst2_total\
    \ += strlen($item);\n\t}\n\tif ($lst1_total === $lst2_total) {\n\t\treturn $lst1;\n\
    \t} elseif ($lst1_total < $lst2_total) {\n\t\treturn $lst1;\n\t} else {\n\t\t\
    return $lst2;\n\t}\n}\necho '<pre>';\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi'])); // ['hI', 'Hi']\necho '</pre>';\necho '<pre>';\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project'])); // ['hi', 'admin']\necho '</pre>';\n\
    echo '<pre>';\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])); // ['hI',\
    \ 'hi', 'hi']\necho '</pre>';\necho '<pre>';\nprint_r(total_match(['4'], ['1',\
    \ '2', '3', '4', '5'])); // ['4']\necho '</pre>';\n\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1chars = array_reduce($lst1, function($sum, $item) {\n\t\treturn $sum\
    \ + strlen($item);\n\t});\n\t$lst2chars = array_reduce($lst2, function($sum, $item)\
    \ {\n\t\treturn $sum + strlen($item);\n\t});\n\treturn $lst1chars <= $lst2chars\
    \ ? $lst1 : $lst2;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $count1 = 0;\n  $count2 = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n\
    \    $count1 += strlen($lst1[$i]);\n  }\n  for ($i = 0; $i < count($lst2); $i++)\
    \ {\n    $count2 += strlen($lst2[$i]);\n  }\n  if ($count1 < $count2) {\n    return\
    \ $lst1;\n  } else if ($count1 > $count2) {\n    return $lst2;\n  } else {\n \
    \   return $lst1;\n  }\n}\necho \"Question 1: \";\nvar_dump(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</br>\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Question 1: array(2) {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2)\
    \ \"Hi\"\n}\n</br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t// your code here\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0x6hqxb.php:19\n\
    Stack trace:\n#0 /tmp/tmpk0x6hqxb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk0x6hqxb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  if (count($lst1) == 0 && count($lst2) == 0) {\n    return [];\n  }\n  $total1\
    \ = 0;\n  $total2 = 0;\n  foreach ($lst1 as $word) {\n    $total1 += strlen($word);\n\
    \  }\n  foreach ($lst2 as $word) {\n    $total2 += strlen($word);\n  }\n  if ($total1\
    \ == $total2) {\n    return $lst1;\n  }\n  return $total1 < $total2 ? $lst1 :\
    \ $lst2;\n}\necho var_dump(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho\
    \ var_dump(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo var_dump(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho var_dump(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "array(2) {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2) \"Hi\"\n\
    }\narray(2) {\n  [0]=>\n  string(2) \"hi\"\n  [1]=>\n  string(5) \"admin\"\n}\n\
    array(3) {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2) \"hi\"\n  [2]=>\n\
    \  string(2) \"hi\"\n}\narray(1) {\n  [0]=>\n  string(1) \"4\"\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  if (count($lst1) == 0) {\n    return [];\n  }\n  $total1 = 0;\n  $total2\
    \ = 0;\n  foreach ($lst1 as $word) {\n    $total1 += strlen($word);\n  }\n  foreach\
    \ ($lst2 as $word) {\n    $total2 += strlen($word);\n  }\n  if ($total1 < $total2)\
    \ {\n    return $lst1;\n  } else {\n    return $lst2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfsj3onw.php:41\n\
    Stack trace:\n#0 /tmp/tmpnfsj3onw.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnfsj3onw.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count_lst1 = 0;\n    $count_lst2 = 0;\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        $count_lst1 += strlen($lst1[$i]);\n    }\n    for ($i = 0;\
    \ $i < count($lst2); $i++) {\n        $count_lst2 += strlen($lst2[$i]);\n    }\n\
    \    if ($count_lst1 < $count_lst2) {\n        return $lst1;\n    } else {\n \
    \       return $lst2;\n    }\n}\necho \"<pre>\";\nvar_dump(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>array(2) {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2) \"Hi\"\
    \n}\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavgemeuy.php:40\n\
    Stack trace:\n#0 /tmp/tmpavgemeuy.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpavgemeuy.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $total1 = 0;\n  $total2 = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n\
    \    $total1 += strlen($lst1[$i]);\n  }\n  for ($i = 0; $i < count($lst2); $i++)\
    \ {\n    $total2 += strlen($lst2[$i]);\n  }\n  if ($total1 < $total2) {\n    return\
    \ $lst1;\n  } else {\n    return $lst2;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_x3w243q.php:37\n\
    Stack trace:\n#0 /tmp/tmp_x3w243q.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_x3w243q.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $str1 = \"\";\n    $str2 = \"\";\n    foreach($lst1 as $v){\n       \
    \ $str1 = $str1.$v;\n    }\n    foreach($lst2 as $v){\n        $str2 = $str2.$v;\n\
    \    }\n    if(strlen($str1)>strlen($str2))\n        return $lst2;\n    elseif(strlen($str1)<strlen($str2))\n\
    \        return $lst1;\n    else\n        return $lst1;\n  }\necho \"<pre>\";\n\
    print_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count = 0;\n\tforeach ($lst1 as $key => $value) {\n\t\t$count += strlen($value);\n\
    \t}\n\t$count2 = 0;\n\tforeach ($lst2 as $key => $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count == $count2) {\n\t\treturn $lst1;\n\t} elseif ($count < $count2)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => 4\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_count = 0;\n\t$lst2_count = 0;\n\t$result = [];\n\t\n\tforeach ($lst1\
    \ as $key => $value) {\n\t\t$lst1_count += strlen($value);\n\t}\n\tforeach ($lst2\
    \ as $key => $value) {\n\t\t$lst2_count += strlen($value);\n\t}\n\tif ($lst1_count\
    \ > $lst2_count) {\n\t\t$result = $lst2;\n\t} elseif ($lst1_count < $lst2_count)\
    \ {\n\t\t$result = $lst1;\n\t} else {\n\t\t$result = $lst1;\n\t}\n\treturn $result;\n\
    }\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    foreach($lst1 as $item) {\n     \
    \   $count1 += strlen($item);\n    }\n    foreach($lst2 as $item) {\n        $count2\
    \ += strlen($item);\n    }\n    if($count1 == $count2) {\n        return $lst1;\n\
    \    }\n    if($count1 < $count2) {\n        return $lst1;\n    }\n    return\
    \ $lst2;\n}\necho \"total_match([], [])  --> \";\nvar_dump(total_match([], []));\n\
    echo \"<br />total_match(['hi', 'admin'], ['hI', 'Hi'])  --> \";\nvar_dump(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br />total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project'])  --> \";\nvar_dump(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"<br />total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi'])  --> \";\nvar_dump(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"<br />total_match(['4'], ['1', '2', '3', '4', '5'])  --> \";\nvar_dump(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "total_match([], [])  --> array(0) {\n}\n<br />total_match(['hi', 'admin'],\
    \ ['hI', 'Hi'])  --> array(2) {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2)\
    \ \"Hi\"\n}\n<br />total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\
    \  --> array(2) {\n  [0]=>\n  string(2) \"hi\"\n  [1]=>\n  string(5) \"admin\"\
    \n}\n<br />total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])  --> array(3) {\n\
    \  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2) \"hi\"\n  [2]=>\n  string(2)\
    \ \"hi\"\n}\n<br />total_match(['4'], ['1', '2', '3', '4', '5'])  --> array(1)\
    \ {\n  [0]=>\n  string(1) \"4\"\n}\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1Sum = 0;\n    $lst2Sum = 0;\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        $lst1Sum += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i\
    \ < count($lst2); $i++) {\n        $lst2Sum += strlen($lst2[$i]);\n    }\n   \
    \ if ($lst1Sum <= $lst2Sum) {\n        return $lst1;\n    } else {\n        return\
    \ $lst2;\n    }\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $reduce1 = array_reduce($lst1, function($carry, $item) {\n        return\
    \ $carry + strlen($item);\n    }, 0);\n    $reduce2 = array_reduce($lst2, function($carry,\
    \ $item) {\n        return $carry + strlen($item);\n    }, 0);\n    return $reduce1\
    \ <= $reduce2 ? $lst1 : $lst2;\n}\necho '<pre>';\nprint_r(total_match(['4'], ['1',\
    \ '2', '3', '4', '5']));\necho '</pre>';\n\nfunction candidate(...$args) {\n \
    \   return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2 += strlen($value);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} elseif ($count1 == $count2)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t\n}\necho implode(', ',total_match(['hi', 'admin'], ['hI', 'Hi'])).PHP_EOL;\n\
    echo implode(', ',total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])).PHP_EOL;\n\
    echo implode(', ',total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])).PHP_EOL;\n\
    echo implode(', ',total_match(['4'], ['1', '2', '3', '4', '5'])).PHP_EOL;\necho\
    \ implode(', ',total_match([], [])).PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: implode(): Invalid arguments passed in /tmp/tmpugm3v8yd.php\
    \ on line 14\n\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpugm3v8yd.php\
    \ on line 15\n\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpugm3v8yd.php\
    \ on line 16\n\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpugm3v8yd.php\
    \ on line 17\n\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpugm3v8yd.php\
    \ on line 18\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpugm3v8yd.php:24\n\
    Stack trace:\n#0 /tmp/tmpugm3v8yd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpugm3v8yd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = array_sum(array_map('strlen', $lst1));\n\t$sum2 = array_sum(array_map('strlen',\
    \ $lst2));\n\treturn $sum1 === $sum2 ? $lst1 : ($sum1 < $sum2 ? $lst1 : $lst2);\n\
    }\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $chars1 = 0;\n    $chars2 = 0;\n    foreach($lst1 as $x) {\n        $chars1\
    \ += strlen($x);\n    }\n    foreach($lst2 as $x) {\n        $chars2 += strlen($x);\n\
    \    }\n    if($chars1 < $chars2) {\n        return $lst1;\n    } else {\n   \
    \     return $lst2;\n    }\n}\necho \"Test 1: \";\nvar_dump(total_match([], []));\n\
    echo \"Test 2: \";\nvar_dump(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho\
    \ \"Test 3: \";\nvar_dump(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"Test 4: \";\nvar_dump(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo \"Test 5: \";\nvar_dump(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Test 1: array(0) {\n}\nTest 2: array(2) {\n  [0]=>\n  string(2) \"hI\"\n\
    \  [1]=>\n  string(2) \"Hi\"\n}\nTest 3: array(2) {\n  [0]=>\n  string(2) \"hi\"\
    \n  [1]=>\n  string(5) \"admin\"\n}\nTest 4: array(3) {\n  [0]=>\n  string(2)\
    \ \"hI\"\n  [1]=>\n  string(2) \"hi\"\n  [2]=>\n  string(2) \"hi\"\n}\nTest 5:\
    \ array(1) {\n  [0]=>\n  string(1) \"4\"\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0bzcas6r.php:47\nStack trace:\n#0 /tmp/tmp0bzcas6r.php(52):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0bzcas6r.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$sum1 += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$sum2 += strlen($value);\n\t}\n\tif ($sum1\
    \ < $sum2) {\n\t\treturn $lst1;\n\t}\n\tif ($sum1 == $sum2) {\n\t\treturn $lst1;\n\
    \t}\n\tif ($sum1 > $sum2) {\n\t\treturn $lst2;\n\t}\n}\necho total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_total = 0;\n    $lst2_total = 0;\n\tforeach ($lst1 as $word) {\n\
    \        $lst1_total += strlen($word);\n    }\n    foreach ($lst2 as $word) {\n\
    \        $lst2_total += strlen($word);\n    }\n    if ($lst1_total < $lst2_total)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm96108bg.php:38\n\
    Stack trace:\n#0 /tmp/tmpm96108bg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpm96108bg.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    foreach($lst1 as $str) {\n      \
    \  $count1 += strlen($str);\n    }\n    foreach($lst2 as $str) {\n        $count2\
    \ += strlen($str);\n    }\n    if($count1 > $count2) {\n        return $lst2;\n\
    \    } else if($count1 < $count2) {\n        return $lst1;\n    } else {\n   \
    \     return $lst1;\n    }\n}\necho implode(\", \", total_match(['hi', 'admin'],\
    \ ['hI', 'Hi'])).PHP_EOL;\necho implode(\", \", total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project'])).PHP_EOL;\necho implode(\", \", total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi'])).PHP_EOL;\necho implode(\", \", total_match(['4'],\
    \ ['1', '2', '3', '4', '5'])).PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "hI, Hi\nhi, admin\nhI, hi, hi\n4\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $result1 = 0;\n    $result2 = 0;\n    foreach ($lst1 as $value) {\n \
    \       $result1 += strlen($value);\n    }\n    foreach ($lst2 as $value) {\n\
    \        $result2 += strlen($value);\n    }\n    if ($result1 == $result2) {\n\
    \        return $lst1;\n    }\n    if ($result1 < $result2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 > $total2)\
    \ {\n        return $lst2;\n    } else if ($total1 < $total2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst1;\n    }\n}\necho \"<pre>\";\nvar_dump(total_match([],\
    \ []));\necho \"</pre>\";\necho \"<pre>\";\nvar_dump(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nvar_dump(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nvar_dump(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nvar_dump(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>array(0) {\n}\n</pre><pre>array(2) {\n  [0]=>\n  string(2) \"hI\"\n\
    \  [1]=>\n  string(2) \"Hi\"\n}\n</pre><pre>array(2) {\n  [0]=>\n  string(2) \"\
    hi\"\n  [1]=>\n  string(5) \"admin\"\n}\n</pre><pre>array(3) {\n  [0]=>\n  string(2)\
    \ \"hI\"\n  [1]=>\n  string(2) \"hi\"\n  [2]=>\n  string(2) \"hi\"\n}\n</pre><pre>array(1)\
    \ {\n  [0]=>\n  string(1) \"4\"\n}\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\tif (count($lst1) == 0) return [];\n\t$count1 = 0;\n\tforeach ($lst1 as\
    \ $item) {\n\t\t$count1 += strlen($item);\n\t}\n\t$count2 = 0;\n\tforeach ($lst2\
    \ as $item) {\n\t\t$count2 += strlen($item);\n\t}\n\tif ($count1 > $count2) return\
    \ $lst2;\n\telse if ($count1 < $count2) return $lst1;\n\telse return $lst1;\n\
    }\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$counter1 = 0;\n\t$counter2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$counter1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$counter2 += strlen($value);\n\
    \t}\n\tif ($counter1 < $counter2) {\n\t\treturn $lst1;\n\t} elseif ($counter1\
    \ > $counter2) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\necho\
    \ total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$num1 = 0;\n\t$num2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t\
    $num1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\
    \t$num2 += strlen($lst2[$i]);\n\t}\n\tif ($num1 < $num2) {\n\t\treturn $lst1;\n\
    \t}\n\treturn $lst2;\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpdrxcg8ul.php:48\nStack trace:\n\
    #0 /tmp/tmpdrxcg8ul.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpdrxcg8ul.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total_count1 = 0;\n\t$total_count2 = 0;\n\tfor ($i=0; $i < count($lst1);\
    \ $i++) { \n\t\t$total_count1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$total_count2 += strlen($lst2[$i]);\n\t}\n\tif ($total_count1\
    \ < $total_count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n\
    }\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"\\n\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"\\n\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"\\n\";\nprint_r(total_match(['4'], ['1',\
    \ '2', '3', '4', '5']));\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n\nArray\n(\n    [0] => hi\n\
    \    [1] => admin\n)\n\nArray\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\n\nArray\n(\n    [0] => 4\n)\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqzo1me0n.php:45\nStack trace:\n#0 /tmp/tmpqzo1me0n.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqzo1me0n.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t\
    $sum1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\
    \t$sum2 += strlen($lst2[$i]);\n\t}\n\tif ($sum1 > $sum2) {\n\t\treturn $lst2;\n\
    \t}\n\telseif ($sum1 < $sum2) {\n\t\treturn $lst1;\n\t}\n\telse {\n\t\treturn\
    \ $lst1;\n\t}\n}\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1_sum = 0;\n    $lst2_sum = 0;\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        $lst1_sum += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i\
    \ < count($lst2); $i++) {\n        $lst2_sum += strlen($lst2[$i]);\n    }\n  \
    \  if ($lst1_sum < $lst2_sum) {\n        return $lst1;\n    } else {\n       \
    \ return $lst2;\n    }\n}\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho\
    \ \"<br>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"\
    <br>\";\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n<br>Array\n(\n    [0] => hi\n\
    \    [1] => admin\n)\n<br>Array\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\n<br>Array\n(\n    [0] => 4\n)\n<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpz7h0dugf.php:46\nStack trace:\n#0 /tmp/tmpz7h0dugf.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz7h0dugf.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $firstTotal = 0;\n  $secondTotal = 0;\n  $output = [];\n  foreach($lst1\
    \ as $string) {\n    $firstTotal += strlen($string);\n  }\n  foreach($lst2 as\
    \ $string) {\n    $secondTotal += strlen($string);\n  }\n  if($firstTotal < $secondTotal)\
    \ {\n    $output = $lst1;\n  } else {\n    $output = $lst2;\n  }\n  return $output;\n\
    }\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68jyiphq.php:39\n\
    Stack trace:\n#0 /tmp/tmp68jyiphq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp68jyiphq.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    if(empty($lst1) && empty($lst2)) return $lst1;\n    if(empty($lst1))\
    \ return $lst2;\n    if(empty($lst2)) return $lst1;\n    $total1 = 0;\n    $total2\
    \ = 0;\n    foreach($lst1 as $str) {\n        $total1 += strlen($str);\n    }\n\
    \    foreach($lst2 as $str) {\n        $total2 += strlen($str);\n    }\n    if($total1\
    \ < $total2) return $lst1;\n    if($total2 < $total1) return $lst2;\n    return\
    \ $lst1;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4786t0vk.php:39\n\
    Stack trace:\n#0 /tmp/tmp4786t0vk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4786t0vk.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $number1 = 0;\n  $number2 = 0;\n  foreach ($lst1 as $lst) {\n    $number1\
    \ += strlen($lst);\n  }\n  foreach ($lst2 as $lst) {\n    $number2 += strlen($lst);\n\
    \  }\n  if ($number1 > $number2) {\n    return $lst2;\n  } else {\n    return\
    \ $lst1;\n  }\n}\necho '<br>'.total_match(['hi', 'admin'], ['hI', 'Hi']);\necho\
    \ '<br>'.total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']);\necho\
    \ '<br>'.total_match(['hi', 'admin'], ['hI', 'hi', 'hi']);\necho '<br>'.total_match(['4'],\
    \ ['1', '2', '3', '4', '5']);\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: <br>Array<br>Array<br>Array<br>Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $combined1 = strlen(implode(\"\", $lst1));\n  $combined2 = strlen(implode(\"\
    \", $lst2));\n  if ($combined1 < $combined2) {\n    return $lst1;\n  } else {\n\
    \    return $lst2;\n  }\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmrtf0fm.php:32\n\
    Stack trace:\n#0 /tmp/tmprmrtf0fm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprmrtf0fm.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $counter1 = 0;\n    $counter2 = 0;\n    for ($i = 0; $i < count($lst1);\
    \ $i++) {\n        $counter1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i\
    \ < count($lst2); $i++) {\n        $counter2 += strlen($lst2[$i]);\n    }\n  \
    \  if ($counter1 < $counter2) {\n        return $lst1;\n    } else {\n       \
    \ return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpxhrb1qig.php:49\nStack trace:\n\
    #0 /tmp/tmpxhrb1qig.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpxhrb1qig.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1len = 0;\n\t$lst2len = 0;\n\tforeach ($lst1 as $str) {\n\t\t$lst1len\
    \ += strlen($str);\n\t}\n\tforeach ($lst2 as $str) {\n\t\t$lst2len += strlen($str);\n\
    \t}\n\tif ($lst1len <= $lst2len) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn\
    \ $lst2;\n\t}\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total_lst1 = 0;\n\t$total_lst2 = 0;\n\tif (count($lst1) == 0 && count($lst2)\
    \ == 0) {\n\t\treturn $lst1;\n\t}\n\tforeach ($lst1 as $key => $value) {\n\t\t\
    $total_lst1 += strlen($value);\n\t}\n\tforeach ($lst2 as $key => $value) {\n\t\
    \t$total_lst2 += strlen($value);\n\t}\n\tif ($total_lst1 < $total_lst2) {\n\t\t\
    return $lst1;\n\t} elseif ($total_lst1 > $total_lst2) {\n\t\treturn $lst2;\n\t\
    } else {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$total1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$total2 += strlen($lst2[$i]);\n\t}\n\tif ($total1 < $total2) {\n\t\t\
    return $lst1;\n\t} elseif ($total1 > $total2) {\n\t\treturn $lst2;\n\t} else {\n\
    \t\treturn $lst1;\n\t}\n}\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho\
    \ \"<br>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"\
    <br>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n<br>Array\n(\n    [0] => hi\n\
    \    [1] => admin\n)\n<br>Array\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\n<br>Array\n(\n    [0] => 4\n)\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $count1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $count2 += strlen($lst2[$i]);\n    }\n    if ($count1 > $count2)\
    \ {\n        return $lst2;\n    } else if ($count1 < $count2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst1;\n    }\n}\necho total_match(['4'],\
    \ ['1', '2', '3', '4', '5']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_tot = count_chars_lst($lst1);\n\t$lst2_tot = count_chars_lst($lst2);\n\
    \tif ($lst1_tot == $lst2_tot) return $lst1;\n\treturn $lst1_tot < $lst2_tot ?\
    \ $lst1 : $lst2;\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_chars_lst()\
    \ in /tmp/tmpt4cgy2cw.php:12\nStack trace:\n#0 /tmp/tmpt4cgy2cw.php(19): total_match(Array,\
    \ Array)\n#1 /tmp/tmpt4cgy2cw.php(23): candidate(Array, Array)\n#2 /tmp/tmpt4cgy2cw.php(34):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpt4cgy2cw.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $count1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $count2 += strlen($lst2[$i]);\n    }\n    if ($count1 > $count2)\
    \ {\n        return $lst2;\n    } else {\n        return $lst1;\n    }\n}\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = array_sum(array_map('strlen', $lst1));\n\t$sum2 = array_sum(array_map('strlen',\
    \ $lst2));\n\tif ($sum1 == $sum2) {\n\t\treturn $lst1;\n\t} else if ($sum1 < $sum2)\
    \ {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho json_encode(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: '["hI","Hi"]'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $count1 = $count2 = 0;\n  for ($i=0; $i < count($lst1); $i++) { \n    $count1\
    \ += strlen($lst1[$i]);\n  }\n  for ($i=0; $i < count($lst2); $i++) { \n    $count2\
    \ += strlen($lst2[$i]);\n  }\n  if ($count1 > $count2) {\n    return $lst2;\n\
    \  } else {\n    return $lst1;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$count1\
    \ = $count1 + strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$count2\
    \ = $count2 + strlen($value);\n\t}\n\tif ($count1 == $count2) {\n\t\treturn $lst1;\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $num1 = strlen(implode($lst1));\n    $num2 = strlen(implode($lst2));\n\
    \    if ($num1 == $num2) {\n        return $lst1;\n    } else if ($num1 < $num2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $word) {\n\t\t$total1\
    \ += strlen($word);\n\t}\n\tforeach ($lst2 as $word) {\n\t\t$total2 += strlen($word);\n\
    \t}\n\tif ($total1 > $total2) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\
    \t}\n}\necho \"<pre>\";\n\tprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\n\tprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\n\tprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\n\tprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 == $total2)\
    \ {\n        return $lst1;\n    } else if ($total1 < $total2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho '<pre>';\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho '</pre>';\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1Total = 0;\n    $lst2Total = 0;\n    foreach($lst1 as $lst1Str)\
    \ {\n        $lst1Total += strlen($lst1Str);\n    }\n    foreach($lst2 as $lst2Str)\
    \ {\n        $lst2Total += strlen($lst2Str);\n    }\n    return $lst1Total < $lst2Total\
    \ ? $lst1 : $lst2;\n}\n\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp3k0j0oup.php:35\nStack trace:\n#0 /tmp/tmp3k0j0oup.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3k0j0oup.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$count1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$count2 += strlen($lst2[$i]);\n\t}\n\tif ($count1 > $count2) {\n\t\t\
    return $lst2;\n\t}\n\telse {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total_chars1 = 0;\n\t$total_chars2 = 0;\n\tfor ($i=0; $i < count($lst1);\
    \ $i++) { \n\t\t$total_chars1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$total_chars2 += strlen($lst2[$i]);\n\t}\n\tif ($total_chars1\
    \ < $total_chars2) {\n\t\treturn $lst1;\n\t}\n\telseif ($total_chars1 == $total_chars2)\
    \ {\n\t\treturn $lst1;\n\t}\n\telse {\n\t\treturn $lst2;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $sum1 = 0;\n  $sum2 = 0;\n  for ($i=0; $i < count($lst1); $i++) { \n  \
    \  $sum1 += strlen($lst1[$i]);\n  }\n  for ($i=0; $i < count($lst2); $i++) { \n\
    \    $sum2 += strlen($lst2[$i]);\n  }\n  if ($sum1 <= $sum2) {\n    return $lst1;\n\
    \  } else {\n    return $lst2;\n  }\n}\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = 0;\n\t$count2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$count1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$count2 += strlen($lst2[$i]);\n\t}\n\treturn $count1 < $count2 ? $lst1\
    \ : $lst2;\n}\n\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpobjtp0wz.php:49\nStack trace:\n\
    #0 /tmp/tmpobjtp0wz.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpobjtp0wz.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total += strlen($value);\n\
    \t}\n\t$totals = 0;\n\tforeach ($lst2 as $value) {\n\t\t$totals += strlen($value);\n\
    \t}\n\tif ($total < $totals) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho\
    \ total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']);\necho \"<br>\"\
    ;\necho total_match(['hi', 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho\
    \ total_match(['4'], ['1', '2', '3', '4', '5']);\necho \"<br>\";\necho total_match([],\
    \ []);\nfunction candidate(...$args) {\n    return total_match(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"\
    admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array<br>Array<br>Array<br>Array<br>Array\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmptoxoldwq.php:46\nStack trace:\n#0 /tmp/tmptoxoldwq.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptoxoldwq.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$length1 = count_chars(implode($lst1));\n\t$length2 = count_chars(implode($lst2));\n\
    \tif ($length1 < $length2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\necho '<pre>';\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hi\n    [1] => admin\n)\n</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmppy10457y.php:32\nStack trace:\n\
    #0 /tmp/tmppy10457y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppy10457y.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $val){\n       \
    \ $total1 += strlen($val);\n    }\n    foreach($lst2 as $val){\n        $total2\
    \ += strlen($val);\n    }\n    if($total1 < $total2){\n        return $lst1;\n\
    \    }elseif($total1 > $total2){\n        return $lst2;\n    }else{\n        return\
    \ $lst1;\n    }\n}\necho total_match(['4'], ['1', '2', '3', '4', '5']);\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$result = [];\n\t$lst1_total = 0;\n\t$lst2_total = 0;\n\tforeach ($lst1\
    \ as $lst1_value) {\n\t\t$lst1_total += strlen($lst1_value);\n\t}\n\tforeach ($lst2\
    \ as $lst2_value) {\n\t\t$lst2_total += strlen($lst2_value);\n\t}\n\tif ($lst1_total\
    \ < $lst2_total) {\n\t\t$result = $lst1;\n\t} elseif ($lst1_total > $lst2_total)\
    \ {\n\t\t$result = $lst2;\n\t} else {\n\t\t$result = $lst1;\n\t}\n\treturn $result;\n\
    }\n\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"\
    <br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"<br>\";\necho implode(', ', total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\necho \"<br>\";\necho implode(', ', total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$result1 = 0;\n\t$result2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$result1\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$result2 += strlen($value);\n\
    \t}\n\tif ($result1 < $result2) {\n\t\treturn $lst1;\n\t}\n\telse {\n\t\treturn\
    \ $lst2;\n\t}\n}\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\nArray\n(\n    [0] => hi\n  \
    \  [1] => admin\n)\nArray\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n)\n\
    Array\n(\n    [0] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpyth_v3g9.php:42\nStack trace:\n#0 /tmp/tmpyth_v3g9.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyth_v3g9.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $val) {\n\t\t$sum1 += strlen($val);\n\
    \t}\n\tforeach ($lst2 as $val) {\n\t\t$sum2 += strlen($val);\n\t}\n\tif ($sum1\
    \ < $sum2) {\n\t\treturn $lst1;\n\t} elseif ($sum1 > $sum2) {\n\t\treturn $lst2;\n\
    \t} else {\n\t\treturn $lst1;\n\t}\n}\necho total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1Sum = 0;\n\t$lst2Sum = 0;\n\tforeach ($lst1 as $word) {\n\t\t$lst1Sum\
    \ += strlen($word);\n\t}\n\tforeach ($lst2 as $word) {\n\t\t$lst2Sum += strlen($word);\n\
    \t}\n\tif ($lst1Sum > $lst2Sum) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\
    \t}\n}\n\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total_1 = 0;\n    $total_2 = 0;\n    foreach($lst1 as $val) {\n    \
    \    $total_1 += strlen($val);\n    }\n    foreach($lst2 as $val) {\n        $total_2\
    \ += strlen($val);\n    }\n    if($total_1 < $total_2) {\n        return $lst1;\n\
    \    }\n    return $lst2;\n}\necho \"<pre>\";\nprint_r(total_match(['4'], ['1',\
    \ '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args) {\n \
    \   return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmppufawwk4.php:39\nStack trace:\n#0 /tmp/tmppufawwk4.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppufawwk4.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1_len = 0;\n\t$lst2_len = 0;\n\tforeach ($lst1 as $value) {\n\t\t$lst1_len\
    \ += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t$lst2_len += strlen($value);\n\
    \t}\n\tif ($lst1_len < $lst2_len) {\n\t\treturn $lst1;\n\t} elseif ($lst1_len\
    \ > $lst2_len) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho '<br>';\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo '<br>';\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\n\
    echo '<br>';\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo '<br>';\necho implode(', ', total_match(['4'], ['4']));\necho '<br>';\necho\
    \ implode(', ', total_match(['4'], ['2']));\necho '<br>';\necho implode(', ',\
    \ total_match(['4'], ['3']));\necho '<br>';\necho implode(', ', total_match(['4'],\
    \ ['5']));\necho '<br>';\necho implode(', ', total_match(['4'], ['3', '5']));\n\
    echo '<br>';\necho implode(', ', total_match(['4'], ['1', '2', '3', '5']));\n\
    echo '<br>';\necho implode(', ', total_match(['4'], ['1', '2', '3', '4', '5'\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppwrhna0b.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    for ($i = 0; $i < count($lst1); $i++)\
    \ {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 < $total2)\
    \ {\n        return $lst1;\n    } else {\n        return $lst2;\n    }\n}\necho\
    \ implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "hI, Hi\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3104zjua.php:38\n\
    Stack trace:\n#0 /tmp/tmp3104zjua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3104zjua.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $count1 = 0;\n  $count2 = 0;\n  foreach($lst1 as $str1) {\n    $count1\
    \ += strlen($str1);\n  }\n  foreach($lst2 as $str2) {\n    $count2 += strlen($str2);\n\
    \  }\n  if($count1 == $count2) {\n    return $lst1;\n  }\n  elseif($count1 < $count2)\
    \ {\n    return $lst1;\n  }\n  else {\n    return $lst2;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tforeach ($lst1 as $v) {\n\t\t$total1 +=\
    \ strlen($v);\n\t}\n\tforeach ($lst2 as $v) {\n\t\t$total2 += strlen($v);\n\t\
    }\n\treturn $total1 < $total2 ? $lst1 : $lst2;\n}\necho '<pre>';\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho '</pre>';\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpdrwe5my1.php:36\nStack trace:\n#0 /tmp/tmpdrwe5my1.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdrwe5my1.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $totalStrLength1 = strlen(implode($lst1));\n    $totalStrLength2 = strlen(implode($lst2));\n\
    \    return $totalStrLength1 > $totalStrLength2 ? $lst2 : $lst1;\n}\necho \"<pre>\"\
    ;\nvar_dump(total_match(['hi', 'admin'], ['hI', 'Hi'])); // [\"hI\", \"Hi\"]\n\
    var_dump(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])); // [\"\
    hi\", \"admin\"]\nvar_dump(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\
    \ // [\"hI\", \"hi\", \"hi\"]\nvar_dump(total_match(['4'], ['1', '2', '3', '4',\
    \ '5'])); // [\"4\"]\necho \"</pre>\";\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>array(2) {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2) \"Hi\"\
    \n}\narray(2) {\n  [0]=>\n  string(2) \"hi\"\n  [1]=>\n  string(5) \"admin\"\n\
    }\narray(3) {\n  [0]=>\n  string(2) \"hI\"\n  [1]=>\n  string(2) \"hi\"\n  [2]=>\n\
    \  string(2) \"hi\"\n}\narray(1) {\n  [0]=>\n  string(1) \"4\"\n}\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1 = $lst1 == [] ? [0] : $lst1;\n    $lst2 = $lst2 == [] ? [0] : $lst2;\n\
    \    $sum1 = array_sum(array_map('strlen', $lst1));\n    $sum2 = array_sum(array_map('strlen',\
    \ $lst2));\n    return $sum1 <= $sum2 ? $lst1 : $lst2;\n}\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpkfhacj3o.php:26\nStack trace:\n#0 /tmp/tmpkfhacj3o.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkfhacj3o.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$n1 = 0;\n\t$n2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t$n1\
    \ += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\t$n2\
    \ += strlen($lst2[$i]);\n\t}\n\tif ($n1 == $n2) {\n\t\treturn $lst1;\n\t}\n\t\
    elseif ($n1 < $n2) {\n\t\treturn $lst1;\n\t}\n\telse {\n\t\treturn $lst2;\n\t\
    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi',\
    \ 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $str) {\n      \
    \  $total1 += strlen($str);\n    }\n    foreach($lst2 as $str) {\n        $total2\
    \ += strlen($str);\n    }\n    if($total1 > $total2) {\n        return $lst2;\n\
    \    } else {\n        return $lst1;\n    }\n}\necho implode(', ', total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$length1 = 0;\n\t$length2 = 0;\n\t$shortestList = [];\n\t$shortListChars\
    \ = 0;\n\t$longestList = [];\n\t$longListChars = 0;\n\t\n\tforeach ($lst1 as $val)\
    \ {\n\t\t$length1 += strlen($val);\n\t}\n\tforeach ($lst2 as $val) {\n\t\t$length2\
    \ += strlen($val);\n\t}\n\tif ($length1 < $length2) {\n\t\t$shortestList = $lst1;\n\
    \t\t$shortListChars = $length1;\n\t\t$longestList = $lst2;\n\t\t$longListChars\
    \ = $length2;\n\t} elseif ($length1 > $length2) {\n\t\t$shortestList = $lst2;\n\
    \t\t$shortListChars = $length2;\n\t\t$longestList = $lst1;\n\t\t$longListChars\
    \ = $length1;\n\t} else {\n\t\t$shortestList = $lst1;\n\t\t$shortListChars = $length1;\n\
    \t\t$longestList = $lst2;\n\t\t$longListChars = $length2;\n\t}\n\t\n\t$newList\
    \ = [];\n\tforeach ($longestList as $val) {\n\t\tif (strlen($val) < $shortListChars)\
    \ {\n\t\t\tarray_push($newList, $val);\n\t\t}\n\t}\n\tif (empty($newList)) {\n\
    \t\treturn $shortestList;\n\t} else {\n\t\treturn $newList;\n\t}\n}\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"<br>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"<br>\";\nprint_r(total_match(['4'],\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn1tvvir7.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\tif(count($lst1)==0 && count($lst2)==0) return [];\n\t$lst1_count=total_count($lst1);\n\
    \t$lst2_count=total_count($lst2);\n\tif($lst1_count<$lst2_count) return $lst1;\n\
    \telse return $lst2;\n}\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function total_count()\
    \ in /tmp/tmptjovx5t7.php:13\nStack trace:\n#0 /tmp/tmptjovx5t7.php(19): total_match(Array,\
    \ Array)\n#1 /tmp/tmptjovx5t7.php(24): candidate(Array, Array)\n#2 /tmp/tmptjovx5t7.php(34):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmptjovx5t7.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum1 = 0;\n    $sum2 = 0;\n    foreach($lst1 as $item){\n        $sum1\
    \ += strlen($item);\n    }\n    foreach($lst2 as $item){\n        $sum2 += strlen($item);\n\
    \    }\n    if($sum1 == $sum2){\n        return $lst1;\n    }else if($sum1 < $sum2){\n\
    \        return $lst1;\n    }else if($sum1 > $sum2){\n        return $lst2;\n\
    \    }\n}\necho implode(', ', total_match(['hi', 'admin'], ['hI', 'Hi']));\necho\
    \ \"<br>\";\necho implode(', ', total_match(['hi', 'admin'], ['hi', 'hi', 'admin',\
    \ 'project']));\necho \"<br>\";\necho implode(', ', total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']));\necho \"<br>\";\necho implode(', ', total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: hI, Hi<br>hi, admin<br>hI, hi, hi<br>4
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$total1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$total2 += strlen($lst2[$i]);\n\t}\n\tif ($total1 < $total2) {\n\t\t\
    return $lst1;\n\t} else {\n\t\treturn $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\n\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpnteqmeui.php:52\nStack trace:\n\
    #0 /tmp/tmpnteqmeui.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpnteqmeui.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\n}\necho total_match(['hi', 'admin'], ['hI', 'Hi']);\necho total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']);\necho total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']);\necho total_match(['4'], ['1', '2', '3', '4', '5']);\n\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2x_5ff3.php:24\n\
    Stack trace:\n#0 /tmp/tmpi2x_5ff3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi2x_5ff3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\tforeach ($lst1 as $key => $value) {\n\t\t$sum1 += strlen($value);\n\
    \t}\n\t$sum2 = 0;\n\tforeach ($lst2 as $key => $value) {\n\t\t$sum2 += strlen($value);\n\
    \t}\n\treturn $sum1 >= $sum2 ? $lst1 : $lst2;\n}\necho '<pre>';\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho '</pre>';\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hi\n    [1] => admin\n)\n</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpzoupcz_w.php:31\nStack trace:\n\
    #0 /tmp/tmpzoupcz_w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzoupcz_w.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total = 0;\n\tforeach ($lst1 as $value) {\n\t\t$total += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$total -= strlen($value);\n\t}\n\treturn\
    \ $total >= 0 ? $lst1 : $lst2;\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\nfunction candidate(...$args) {\n\
    \    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hi\n    [1] => admin\n)\n</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpmuxk0yfx.php:30\nStack trace:\n\
    #0 /tmp/tmpmuxk0yfx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmuxk0yfx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$count1 = $count2 = 0;\n\t$res = [];\n\tforeach ($lst1 as $val) {\n\t\t\
    $count1 += strlen($val);\n\t}\n\tforeach ($lst2 as $val) {\n\t\t$count2 += strlen($val);\n\
    \t}\n\tif ($count1 < $count2) {\n\t\treturn $lst1;\n\t} elseif ($count1 > $count2)\
    \ {\n\t\treturn $lst2;\n\t} else {\n\t\treturn $lst1;\n\t}\n}\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'hi', 'hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$str1 = implode(\"\", $lst1);\n\t$str2 = implode(\"\", $lst2);\n\t$len1\
    \ = strlen($str1);\n\t$len2 = strlen($str2);\n\tif ($len1 < $len2) {\n\t\treturn\
    \ $lst1;\n\t} elseif ($len1 > $len2) {\n\t\treturn $lst2;\n\t} else {\n\t\treturn\
    \ $lst1;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total_length_of_lst1 = 0;\n    foreach($lst1 as $item) {\n        $total_length_of_lst1\
    \ += strlen($item);\n    }\n    $total_length_of_lst2 = 0;\n    foreach($lst2\
    \ as $item) {\n        $total_length_of_lst2 += strlen($item);\n    }\n    if($total_length_of_lst1\
    \ > $total_length_of_lst2) {\n        return $lst2;\n    } else {\n        return\
    \ $lst1;\n    }\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1Count = countChars($lst1);\n    $lst2Count = countChars($lst2);\n\
    \    if ($lst1Count > $lst2Count) {\n        return $lst2;\n    } else if ($lst1Count\
    \ == $lst2Count) {\n        return $lst1;\n    } else {\n        return $lst1;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countChars()\
    \ in /tmp/tmpnrq2gaij.php:12\nStack trace:\n#0 /tmp/tmpnrq2gaij.php(24): total_match(Array,\
    \ Array)\n#1 /tmp/tmpnrq2gaij.php(28): candidate(Array, Array)\n#2 /tmp/tmpnrq2gaij.php(39):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpnrq2gaij.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$chars1 = 0;\n\t$chars2 = 0;\n\t$final;\n\tfor ($i=0; $i < count($lst1);\
    \ $i++) { \n\t\t$chars1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2);\
    \ $i++) { \n\t\t$chars2 += strlen($lst2[$i]);\n\t}\n\tif ($chars1 == $chars2)\
    \ {\n\t\t$final = $lst1;\n\t}\n\telseif ($chars1 < $chars2) {\n\t\t$final = $lst1;\n\
    \t}\n\telse {\n\t\t$final = $lst2;\n\t}\n\treturn $final;\n}\necho '<pre>';\n\
    print_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\necho '</pre>';\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t\
    $sum1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\
    \t$sum2 += strlen($lst2[$i]);\n\t}\n\tif ($sum1 < $sum2) {\n\t\treturn $lst1;\n\
    \t} else {\n\t\treturn $lst2;\n\t}\n}\necho implode(', ', total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "hI, Hi\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5z9lf5gn.php:38\n\
    Stack trace:\n#0 /tmp/tmp5z9lf5gn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5z9lf5gn.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $count1 = 0;\n    $count2 = 0;\n    foreach($lst1 as $n) {\n        $count1\
    \ += strlen($n);\n    }\n    foreach($lst2 as $n) {\n        $count2 += strlen($n);\n\
    \    }\n    if($count1 < $count2) {\n        return $lst1;\n    } else {\n   \
    \     return $lst2;\n    }\n}\n\necho implode(\", \", total_match(['4'], ['1',\
    \ '2', '3', '4', '5']));\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6ag966d.php:39\n\
    Stack trace:\n#0 /tmp/tmpf6ag966d.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpf6ag966d.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$str_length1 = 0;\n\t$str_length2 = 0;\n\tforeach ($lst1 as $value) {\n\
    \t\t$str_length1 += strlen($value);\n\t}\n\tforeach ($lst2 as $value) {\n\t\t\
    $str_length2 += strlen($value);\n\t}\n\treturn $str_length1 > $str_length2 ? $lst2\
    \ : $lst1;\n}\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total1 = 0;\n\t$total2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\
    \t\t$total1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++)\
    \ { \n\t\t$total2 += strlen($lst2[$i]);\n\t}\n\tif ($total1 < $total2) {\n\t\t\
    return $lst1;\n\t}\n\telse {\n\t\treturn $lst2;\n\t}\n}\n\n$lst1 = ['4'];\n$lst2\
    \ = ['1', '2', '3', '4', '5'];\nvar_dump(total_match($lst1, $lst2));\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(1) {\n  [0]=>\n  string(1) \"4\"\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpmwyuc60i.php:42\nStack trace:\n#0 /tmp/tmpmwyuc60i.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmwyuc60i.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$c1 = array_sum(array_map('strlen', $lst1));\n\t$c2 = array_sum(array_map('strlen',\
    \ $lst2));\n\tif ($c1 < $c2) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn $lst2;\n\
    \t}\n}\n\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpfh7y7vmn.php:35\nStack trace:\n#0 /tmp/tmpfh7y7vmn.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfh7y7vmn.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $lst1 = array_map(\"strlen\", $lst1);\n    $lst2 = array_map(\"strlen\"\
    , $lst2);\n    if (array_sum($lst1) < array_sum($lst2)) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 2\n    [1] => 5\n)\n</pre><pre>Array\n(\n    [0] => 2\n    [1] => 2\n\
    \    [2] => 2\n)\n</pre><pre>Array\n(\n    [0] => 1\n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp0qyrqdwl.php:38\nStack trace:\n#0 /tmp/tmp0qyrqdwl.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0qyrqdwl.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $arr1 = [];\n    foreach ($lst1 as $key => $value) {\n        $arr1[]\
    \ = strlen($value);\n    }\n    $arr2 = [];\n    foreach ($lst2 as $key => $value)\
    \ {\n        $arr2[] = strlen($value);\n    }\n    $num1 = array_sum($arr1);\n\
    \    $num2 = array_sum($arr2);\n    if ($num1 > $num2) {\n        return $lst2;\n\
    \    } elseif ($num1 < $num2) {\n        return $lst1;\n    } else {\n       \
    \ return $lst1;\n    }\n}\necho total_match(['4'], ['1', '2', '3', '4', '5']);\n\
    function candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"\
    hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$lst1CharNum = 0;\n\t$lst2CharNum = 0;\n\tfor($i = 0; $i < count($lst1);\
    \ $i++) {\n\t\t$lst1CharNum += strlen($lst1[$i]);\n\t}\n\tfor($i = 0; $i < count($lst2);\
    \ $i++) {\n\t\t$lst2CharNum += strlen($lst2[$i]);\n\t}\n\tif($lst1CharNum == $lst2CharNum)\
    \ {\n\t\treturn $lst1;\n\t}\n\tif($lst1CharNum < $lst2CharNum) {\n\t\treturn $lst1;\n\
    \t}\n\tif($lst1CharNum > $lst2CharNum) {\n\t\treturn $lst2;\n\t}\n}\n\necho total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']);\necho \"<br>\";\necho total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']);\necho \"<br>\";\necho total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']);\necho \"<br>\";\necho total_match(['4'], ['1',\
    \ '2', '3', '4', '5']);\necho \"<br>\";\necho total_match([], []);\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>Array<br>Array<br>Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $str1 = implode($lst1);\n    $str2 = implode($lst2);\n    $len1 = strlen($str1);\n\
    \    $len2 = strlen($str2);\n    if ($len1 < $len2) {\n        return $lst1;\n\
    \    } else {\n        return $lst2;\n    }\n}\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 4\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0sn89o6f.php:36\nStack trace:\n#0 /tmp/tmp0sn89o6f.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0sn89o6f.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$chars_one = 0;\n\t$chars_two = 0;\n\tforeach ($lst1 as $str) {\n\t\t$chars_one\
    \ += strlen($str);\n\t}\n\tforeach ($lst2 as $str) {\n\t\t$chars_two += strlen($str);\n\
    \t}\n\tif ($chars_one < $chars_two) {\n\t\treturn $lst1;\n\t} else {\n\t\treturn\
    \ $lst2;\n\t}\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match(['4'],\
    \ ['1', '2', '3', '4', '5']));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(total_match([],\
    \ []));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre><pre>Array\n(\n \
    \   [0] => hi\n    [1] => admin\n)\n</pre><pre>Array\n(\n    [0] => hI\n    [1]\
    \ => hi\n    [2] => hi\n)\n</pre><pre>Array\n(\n    [0] => 4\n)\n</pre><pre>Array\n\
    (\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj2x5lir.php:56\n\
    Stack trace:\n#0 /tmp/tmpbj2x5lir.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpbj2x5lir.php\
    \ on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $sum1 = 0;\n    foreach($lst1 as $word){\n        $sum1 += strlen($word);\n\
    \    }\n    $sum2 = 0;\n    foreach($lst2 as $word){\n        $sum2 += strlen($word);\n\
    \    }\n    if($sum1 === $sum2){\n        return $lst1;\n    }\n    elseif($sum1\
    \ < $sum2){\n        return $lst1;\n    }\n    else{\n        return $lst2;\n\
    \    }\n}\necho \"Expected result is []: \" . total_match([], []) . \"\\n\";\n\
    echo \"Expected result is ['hI', 'Hi']: \" . total_match(['hi', 'admin'], ['hI',\
    \ 'Hi']) . \"\\n\";\necho \"Expected result is ['hi', 'admin']: \" . total_match(['hi',\
    \ 'admin'], ['hi', 'hi', 'admin', 'project']) . \"\\n\";\necho \"Expected result\
    \ is ['hI', 'hi', 'hi']: \" . total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\
    \ . \"\\n\";\necho \"Expected result is ['4']: \" . total_match(['4'], ['1', '2',\
    \ '3', '4', '5']) . \"\\n\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Expected result is []: Array\nExpected result is ['hI', 'Hi']: Array\n\
    Expected result is ['hi', 'admin']: Array\nExpected result is ['hI', 'hi', 'hi']:\
    \ Array\nExpected result is ['4']: Array\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $total = 0;\n  $total2 = 0;\n  for($i = 0; $i < count($lst1); $i++) {\n\
    \    $total += strlen($lst1[$i]);\n  }\n  for($i = 0; $i < count($lst2); $i++)\
    \ {\n    $total2 += strlen($lst2[$i]);\n  }\n  if($total < $total2) {\n    return\
    \ $lst1;\n  } else {\n    return $lst2;\n  }\n}\necho total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvos11tw.php:38\n\
    Stack trace:\n#0 /tmp/tmpdvos11tw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdvos11tw.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $length1 = count($lst1);\n    $length2 = count($lst2);\n    $sum1 = 0;\n\
    \    $sum2 = 0;\n    for ($i = 0; $i < $length1; $i++) {\n        $sum1 += strlen($lst1[$i]);\n\
    \    }\n    for ($i = 0; $i < $length2; $i++) {\n        $sum2 += strlen($lst2[$i]);\n\
    \    }\n    if ($sum1 < $sum2) {\n        return $lst1;\n    } else if ($sum1\
    \ > $sum2) {\n        return $lst2;\n    } else {\n        return $lst1;\n   \
    \ }\n}\n$lst1 = ['hi', 'admin'];\n$lst2 = ['hI', 'Hi'];\nprint_r(total_match($lst1,\
    \ $lst2));\necho \"<br>\";\n\n$lst1 = ['hi', 'admin'];\n$lst2 = ['hi', 'hi', 'admin',\
    \ 'project'];\nprint_r(total_match($lst1, $lst2));\necho \"<br>\";\n\n$lst1 =\
    \ ['hi', 'admin'];\n$lst2 = ['hI', 'hi', 'hi'];\nprint_r(total_match($lst1, $lst2));\n\
    echo \"<br>\";\n\n$lst1 = ['4'];\n$lst2 = ['1', '2', '3', '4', '5'];\nprint_r(total_match($lst1,\
    \ $lst2));\necho \"<br>\";\n\n$lst1 = [];\n$lst2 = [];\nprint_r(total_match($lst1,\
    \ $lst2));\necho \"<br>\";\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "Array\n(\n    [0] => hI\n    [1] => Hi\n)\n<br>Array\n(\n    [0] => hi\n\
    \    [1] => admin\n)\n<br>Array\n(\n    [0] => hI\n    [1] => hi\n    [2] => hi\n\
    )\n<br>Array\n(\n    [0] => 4\n)\n<br>Array\n(\n)\n<br>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n  $num1 = 0;\n  $num2 = 0;\n  $result = [];\n  foreach($lst1 as $item) {\n\
    \    $num1 += strlen($item);\n  }\n  foreach($lst2 as $item) {\n    $num2 += strlen($item);\n\
    \  }\n  if($num1 < $num2) {\n    $result = $lst1;\n  } else {\n    $result = $lst2;\n\
    \  }\n  return $result;\n}\necho \"func 1\\n\";\necho \"<br>\";\nprint_r(total_match([],\
    \ []));\necho \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'Hi']));\n\
    echo \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']));\n\
    echo \"<br>\";\nprint_r(total_match(['hi', 'admin'], ['hI', 'hi', 'hi']));\necho\
    \ \"<br>\";\nprint_r(total_match(['4'], ['1', '2', '3', '4', '5']));\necho \"\
    <br>\";\necho \"<br>\";\necho \"<br>\";\n\nfunction candidate(...$args) {\n  \
    \  return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "func 1\n<br>Array\n(\n)\n<br>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n\
    <br>Array\n(\n    [0] => hi\n    [1] => admin\n)\n<br>Array\n(\n    [0] => hI\n\
    \    [1] => hi\n    [2] => hi\n)\n<br>Array\n(\n    [0] => 4\n)\n<br><br><br>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpizg2k2rb.php:54\nStack\
    \ trace:\n#0 /tmp/tmpizg2k2rb.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpizg2k2rb.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tforeach ($lst1 as $value) {\n\t\t$sum1 += strlen($value);\n\
    \t}\n\tforeach ($lst2 as $value) {\n\t\t$sum2 += strlen($value);\n\t}\n\tif ($sum1\
    \ == $sum2) {\n\t\treturn $lst1;\n\t}\n\tif ($sum1 < $sum2) {\n\t\treturn $lst1;\n\
    \t}\n\treturn $lst2;\n}\necho \"<pre>\";\nprint_r(total_match(['hi', 'admin'],\
    \ ['hI', 'Hi']));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return\
    \ total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => hI\n    [1] => Hi\n)\n</pre>"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n    $total1 = 0;\n    $total2 = 0;\n    foreach($lst1 as $value) {\n    \
    \    $total1 += strlen($value);\n    }\n    foreach($lst2 as $value) {\n     \
    \   $total2 += strlen($value);\n    }\n    if($total1 < $total2) {\n        return\
    \ $lst1;\n    } else {\n        return $lst2;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return total_match(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hi\", \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"4\"),\
    \ array(\"1\", \"2\", \"3\", \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\",\
    \ \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\"\
    )) !== array(\"hI\", \"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\"\
    )) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(), array(\"this\")) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\"), array()) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybv5l0zc.php:37\n\
    Stack trace:\n#0 /tmp/tmpybv5l0zc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpybv5l0zc.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$total_chars_lst1 = 0;\n\t$total_chars_lst2 = 0;\n\tfor ($i=0; $i < count($lst1);\
    \ $i++) { \n\t\t$total_chars_lst1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i\
    \ < count($lst2); $i++) { \n\t\t$total_chars_lst2 += strlen($lst2[$i]);\n\t}\n\
    \tif ($total_chars_lst1 == $total_chars_lst2) {\n\t\treturn $lst1;\n\t}\n\tif\
    \ ($total_chars_lst1 < $total_chars_lst2) {\n\t\treturn $lst1;\n\t}\n\tif ($total_chars_lst1\
    \ > $total_chars_lst2) {\n\t\treturn $lst2;\n\t}\n}\n\necho total_match(['4'],\
    \ ['1', '2', '3', '4', '5']);\nfunction candidate(...$args) {\n    return total_match(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\",\
    \ \"admin\"), array(\"hi\", \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\", \"admin\", \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\"\
    , \"4\", \"5\")) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"\
    hI\", \"Hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"\
    hi\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(), array(\"\
    this\")) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\"), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: Array
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that accepts two lists of strings and returns\
    \ the list that has \n// total number of chars in the all strings of the list\
    \ less than the other list.\n// if the two lists have the same number of chars,\
    \ return the first list.\n// Examples\n// total_match([], []) \u279E []\n// total_match(['hi',\
    \ 'admin'], ['hI', 'Hi']) \u279E ['hI', 'Hi']\n// total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) \u279E ['hi', 'admin']\n// total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n// total_match(['4'],\
    \ ['1', '2', '3', '4', '5']) \u279E ['4']\nfunction total_match($lst1, $lst2)\
    \ {\n\t$sum1 = 0;\n\t$sum2 = 0;\n\tfor ($i=0; $i < count($lst1); $i++) { \n\t\t\
    $sum1 += strlen($lst1[$i]);\n\t}\n\tfor ($i=0; $i < count($lst2); $i++) { \n\t\
    \t$sum2 += strlen($lst2[$i]);\n\t}\n\tif ($sum1 == $sum2) {\n\t\treturn $lst1;\n\
    \t}\n\telse if ($sum1 > $sum2) {\n\t\treturn $lst2;\n\t}\n\telse if ($sum1 < $sum2)\
    \ {\n\t\treturn $lst1;\n\t}\n}\necho \"total_match([], []) should return [].\\\
    n\";\n$ans = total_match([], []);\necho \"Output: \";\nprint_r($ans);\necho \"\
    \\n\\n\";\n\necho \"total_match(['hi', 'admin'], ['hI', 'Hi']) should return ['hI',\
    \ 'Hi'].\\n\";\n$ans = total_match(['hi', 'admin'], ['hI', 'Hi']);\necho \"Output:\
    \ \";\nprint_r($ans);\necho \"\\n\\n\";\n\necho \"total_match(['hi', 'admin'],\
    \ ['hi', 'hi', 'admin', 'project']) should return ['hi', 'admin'].\\n\";\n$ans\
    \ = total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']);\necho \"Output:\
    \ \";\nprint_r($ans);\necho \"\\n\\n\";\n\necho \"total_match(['hi', 'admin'],\
    \ ['hI', 'hi', 'hi']) should return ['hI', 'hi', 'hi'].\\n\";\n$ans = total_match(['hi',\
    \ 'admin'], ['hI', 'hi', 'hi']);\necho \"Output: \";\nprint_r($ans);\necho \"\\\
    n\\n\";\n\necho \"total_match(['4'], ['1', '2', '3', '4', '5']) should\nfunction\
    \ candidate(...$args) {\n    return total_match(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\",\
    \ \"hi\")) !== array(\"hi\", \"hi\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"hi\", \"admin\"), array(\"hi\", \"hi\", \"admin\"\
    , \"project\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"4\"), array(\"1\", \"2\", \"3\", \"4\", \"5\"\
    )) !== array(\"4\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    hi\", \"admin\"), array(\"hI\", \"Hi\")) !== array(\"hI\", \"Hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hi\")) !== array(\"hI\", \"hi\", \"hi\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"hi\", \"admin\"),\
    \ array(\"hI\", \"hi\", \"hii\")) !== array(\"hi\", \"admin\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(), array(\"this\")) !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"this\"),\
    \ array()) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl47n3ji8.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception

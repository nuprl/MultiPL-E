name: HumanEval_140_fix_spaces
language: php
prompt: "<?php\n// Given a string text, replace all spaces in it with underscores,\
  \ \n// and if a string has more than 2 consecutive spaces, \n// then replace all\
  \ consecutive spaces with - \n// fix_spaces(\"Example\") == \"Example\"\n// fix_spaces(\"\
  Example 1\") == \"Example_1\"\n// fix_spaces(\" Example 2\") == \"_Example_2\"\n\
  // fix_spaces(\" Example   3\") == \"_Example-3\"\nfunction fix_spaces($text) {\n"
tests: "function candidate(...$args) {\n    return fix_spaces(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"Example\") !== \"Example\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Mudasir Hanif \") !== \"Mudasir_Hanif_\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Yellow Yellow\
  \  Dirty  Fellow\") !== \"Yellow_Yellow__Dirty__Fellow\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Exa   mple\") !== \"Exa-mple\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"   Exa 1 2 2 mple\") !==\
  \ \"-Exa_1_2_2_mple\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $arr = explode(\" \", $text);\n    $last = count($arr) - 1;\n \
    \   foreach ($arr as $key => $value) {\n        if ($value) {\n            if\
    \ ($key == 0) {\n                $res .= $value;\n            } elseif ($key ==\
    \ $last) {\n                $res .= \"_$value\";\n            } else {\n     \
    \           $res .= \"_$value\";\n            }\n        } else {\n          \
    \  if ($key == 0) {\n                $res .= \"_\";\n            } elseif ($key\
    \ == $last) {\n                $res .= \"_\";\n            } else {\n        \
    \        $res .= \"-\";\n            }\n        }\n    }\n    return $res;\n}\n",
  "    return preg_replace('/\\s{2,}/', '-', str_replace(' ', '_', $text));\n}\n",
  "\treturn str_replace('  ', '-', str_replace(' ', '_', $text));\n}\n\necho fix_spaces(\"\
    Example 1\");\necho \"\\n\";\necho fix_spaces(\" Example 2\");\necho \"\\n\";\n\
    echo fix_spaces(\" Example   3\");\necho \"\\n\";\n", "\t$text = trim($text);\n\
    \t$text = str_replace(' ', '_', $text);\n\t$text = preg_replace('/[_]{2,}/', '-',\
    \ $text);\n\treturn $text;\n}\n$text = \"  Example   3\";\necho fix_spaces($text);\n\
    echo \"<br />\";\necho preg_replace('/[_]{2,}/', '-', $text);\necho \"<br />\"\
    ;\necho preg_replace('/ {2,}/', '-', $text);", "    // your code here\n}", "\t\
    return preg_replace('/ {2,}/', '-', str_replace(' ', '_', trim($text)));\n}\n",
  "    $count = substr_count($text, '  ');\n    if ($count >= 1) {\n        $text\
    \ = str_replace('  ', '-', $text);\n    }\n    $text = str_replace(' ', '_', $text);\n\
    \    return $text;\n}\n", "    return str_replace([\" \", \"  \"], [\"_\", \"\
    -\"], $text);\n}\n", "\t$result = str_replace(' ', '_', $text);\n\t$result = str_replace('__',\
    \ '-', $result);\n\treturn $result;\n}", "    return preg_replace('/\\s+/', '-',\
    \ str_replace(' ', '_', trim($text)));\n}\n", "    $text_result = '';\n    $len\
    \ = strlen($text);\n    $i = 0;\n    $space_count = 0;\n    while ($i < $len)\
    \ {\n        if ($text[$i] == ' ') {\n            $space_count++;\n          \
    \  if ($space_count == 1) {\n                $text_result .= '_';\n          \
    \  } else if ($space_count == 2) {\n                $text_result .= '-';\n   \
    \         }\n        } else {\n            $text_result .= $text[$i];\n      \
    \      $space_count = 0;\n        }\n        $i++;\n    }\n    return $text_result;\n\
    }\n\necho fix_spaces(\"Example 1\") . PHP_EOL;\necho fix_spaces(\" Example 2\"\
    ) . PHP_EOL;\necho fix_spaces(\" Example   3\") . PHP_EOL;\n", "  return preg_replace('/\
    \ +/', '-', preg_replace('/ /', '_', $text));\n}\n", "\t$newText = str_replace(\"\
    \ \", \"_\", $text);\n\t$newText = str_replace(\"_ _\", \"-\", $newText);\n\t\
    $newText = str_replace(\"__\", \"_\", $newText);\n\treturn $newText;\n}", "  \
    \  $text = str_replace(' ', '_', $text);\n    $text = str_replace('_ ', '_', $text);\n\
    \    $text = str_replace('__', '-', $text);\n    return $text;\n}\necho fix_spaces(\"\
    Example\");\necho \"<br>\";\necho fix_spaces(\"Example 1\");\necho \"<br>\";\n\
    echo fix_spaces(\" Example 2\");\necho \"<br>\";\necho fix_spaces(\" Example \
    \  3\");", "    $text = str_replace(' ', '_', $text);\n    $text = str_replace('__',\
    \ '-', $text);\n    return str_replace('___', '-', $text);\n}\necho fix_spaces(\"\
    Example\").\"\\n\";\necho fix_spaces(\"Example 1\").\"\\n\";\necho fix_spaces(\"\
    \ Example 2\").\"\\n\";\necho fix_spaces(\" Example   3\").\"\\n\";\n", "    return\
    \ str_replace('   ', '-', str_replace(' ', '_', trim($text)));\n}", "    return\
    \ preg_replace(\"/ {2,}/\", '-', preg_replace(\"/ /\", '_', $text));\n}\necho\
    \ fix_spaces(\"Example  1\") . PHP_EOL;\necho fix_spaces(\" Example   3\") . PHP_EOL;\n",
  "    return preg_replace('/[ ]+/', '_', $text);\n}\necho fix_spaces(\"Example\"\
    ) . \"\\n\";\necho fix_spaces(\"Example 1\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 2\") . \"\\n\";\necho fix_spaces(\" Example   3\") . \"\\n\";\n", "    $text\
    \ = trim($text);\n    $text = str_replace(' ', '_', $text);\n    $text = preg_replace('/_+/',\
    \ '-', $text);\n    return $text;\n}\necho fix_spaces(\"Example 1\"); // Example_1\n\
    echo \"\\n\";\necho fix_spaces(\" Example 2\"); // _Example_2\necho \"\\n\";\n\
    echo fix_spaces(\" Example   3\"); // _Example-3\necho \"\\n\";\necho fix_spaces(\"\
    Example\"); // Example\necho \"\\n\";\necho fix_spaces(\" Example  \"); // _Example\n\
    echo \"\\n\";\necho fix_spaces(\" Example   \"); // _Example\necho \"\\n\";",
  "    return preg_replace(\"/\\s+/\", \"-\", preg_replace(\"/\\s/\", \"_\", $text));\n\
    }\necho fix_spaces(\"Example\");\necho fix_spaces(\"Example 1\");\necho fix_spaces(\"\
    \ Example 2\");\necho fix_spaces(\" Example   3\");", "    return str_replace(['\
    \  ', ' '], ['-', '_'], $text);\n}\n", "    $text = str_replace(' ', '_', $text);\n\
    \    $text = str_replace('__', '-', $text);\n    return $text;\n}\necho fix_spaces(\"\
    \ Example   3\");\n", "    return preg_replace('/ +/', '-', preg_replace('/ /',\
    \ '_', trim($text)));\n}\n", "    return preg_replace('/ {2,}/', '-', preg_replace('/\
    \ /', '_', $text));\n}\n\n$text = \"Example   3\";\necho fix_spaces($text);",
  "\treturn preg_replace('/( |\\s{2,})/', '$1-', $text);\n}\n", "    return preg_replace('/\
    \ {2,}/', '-', preg_replace('/ /', '_', $text));\n}", "    $text = str_replace('\
    \ ', '_', $text);\n    $text = str_replace('__', '-', $text);\n    return $text;\n\
    }\n", "    return preg_replace('/\\s{2,}/', '-', $text);\n}\n", "    $text = preg_replace('/\
    \ {2,}/', '-', $text);\n    $text = preg_replace('/ /', '_', $text);\n    return\
    \ $text;\n}\n", "    // some code here\n}\n", "    $text = preg_replace('/ {2,}/',\
    \ '-', $text);\n    $text = preg_replace('/ /', '_', $text);\n    return $text;\n\
    }\n", "\t$patterns = [\n\t\t'/ {2,}/',\n\t\t'/ /'\n\t];\n\t$replacements = [\n\
    \t\t'-',\n\t\t'_'\n\t];\n\treturn preg_replace($patterns, $replacements, $text);\n\
    }\n\necho fix_spaces(\"Example\") . PHP_EOL;\necho fix_spaces(\"Example 1\") .\
    \ PHP_EOL;\necho fix_spaces(\" Example 2\") . PHP_EOL;\necho fix_spaces(\" Example\
    \   3\") . PHP_EOL;", "    $text = trim($text);\n    $text = str_replace('  ',\
    \ ' - ', $text);\n    $text = str_replace(' ', '_', $text);\n    return $text;\n\
    }\n\necho fix_spaces(\" Example   3\");", "    return preg_replace('/\\s{2,}/',\
    \ '-', str_replace(' ', '_', $text));\n}\n\necho fix_spaces(\"Example\") . \"\\\
    n\";\necho fix_spaces(\"Example 1\") . \"\\n\";\necho fix_spaces(\" Example 2\"\
    ) . \"\\n\";\necho fix_spaces(\" Example   3\") . \"\\n\";", "    return str_replace(array('\
    \  ', ' '), array('-', '_'), $text);\n}\necho fix_spaces(\"Example 1\") . '<br>';\n\
    echo fix_spaces(\" Example 2\") . '<br>';\necho fix_spaces(\" Example   3\") .\
    \ '<br>';\n", "    // TODO: Implement me!\n    return;\n}", "    return preg_replace(\"\
    / {2,}/\", \"-\", preg_replace(\"/ /\", \"_\", $text));\n}\n", "    return preg_replace('/(\\\
    s{2,})| /', '$1-', $text);\n}\necho fix_spaces(\"Example\") . \"\\n\";\necho fix_spaces(\"\
    Example 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\"\
    \ Example   3\") . \"\\n\";", "    return trim(preg_replace('/( ){2,}/', '-',\
    \ preg_replace('/ /', '_', $text)));\n}\n", "    $arr = explode(\" \", $text);\n\
    \    $result = \"\";\n    foreach ($arr as $word) {\n        if ($word !== \"\"\
    ) {\n            $result .= $word . \"_\";\n        }\n    }\n    $result = substr($result,\
    \ 0, -1);\n    $result = preg_replace(\"/_+/\", \"-\", $result);\n    return $result;\n\
    }\nprint_r(fix_spaces(\"Example 1\"));", "    // your code here\n}\necho fix_spaces(\"\
    Example\") == \"Example\";\necho fix_spaces(\"Example 1\") == \"Example_1\";\n\
    echo fix_spaces(\" Example 2\") == \"_Example_2\";\necho fix_spaces(\" Example\
    \   3\") == \"_Example-3\";", "    return preg_replace(\"/\\s{2,}/\", '-', str_replace('\
    \ ', '_', $text));\n}\n\n$spaces = \"example   3\";\necho fix_spaces($spaces)\
    \ . \"\\n\";", "    $text = preg_replace('/\\s+/', '-', $text);\n    $text = str_replace('\
    \ ', '_', $text);\n    return $text;\n}\n", "    return preg_replace('/ {3,}/',\
    \ '-', str_replace(' ', '_', trim($text)));\n}\n", "    $text = preg_replace('/\\\
    s+/', '-', $text);\n    $text = str_replace(' ', '_', $text);\n    return $text;\n\
    }\n\n$response = fix_spaces(\"Example\");\necho $response;", "  return preg_replace(\"\
    /\\s{2,}/\", '-', str_replace(' ', '_', $text));\n}\n\necho fix_spaces(\"Example\"\
    );\necho fix_spaces(\"Example 1\");\necho fix_spaces(\" Example 2\");\necho fix_spaces(\"\
    \ Example   3\");\n", "    return preg_replace(\"/ {2,}/\", \"-\", preg_replace(\"\
    / /\", \"_\", $text));\n}\n", "    //TODO: Implement this function\n}\n", "  \
    \  return preg_replace('/(\\s+)/', '_', trim($text));\n}\necho fix_spaces(\" Example\
    \   3\");", "\t$text = preg_replace('/\\s+/', '_', $text);\n\t$text = preg_replace('/_/',\
    \ '-', $text, 1);\n\treturn $text;\n}\n\necho fix_spaces(\" Example   3\") . \"\
    <br>\";", "\t$str_array = str_split($text);\n\tfor ($i = 0; $i < count($str_array);\
    \ $i++) {\n\t\tif ($str_array[$i] == \" \") {\n\t\t\t$str_array[$i] = \"_\";\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < count($str_array) - 1; $i++) {\n\t\tif ($str_array[$i]\
    \ == \"_\" && $str_array[$i+1] == \"_\") {\n\t\t\t$str_array[$i] = \"-\";\n\t\t\
    }\n\t}\n\t$text = implode($str_array);\n\treturn $text;\n}\n", "  return preg_replace(\"\
    /\\s+/\", '_', $text);\n}\n", "    $spaces = array(\" \", \"  \", \"   \");\n\
    \    $underscores = array(\"_\", \"_\", \"-\");\n    return str_replace($spaces,\
    \ $underscores, $text);\n}\n\necho fix_spaces(\"Example   3\");", "    $text =\
    \ str_replace(' ', '_', $text);\n    $text = str_replace('__', '-', $text);\n\
    \    return $text;\n}\n\necho fix_spaces(\"Example 1\");", "  $result = '';\n\
    \  $previous = '';\n  $count = 0;\n  $len = strlen($text);\n  for ($i = 0; $i\
    \ < $len; $i++) {\n    $char = $text[$i];\n    if ($char == ' ') {\n      if ($previous\
    \ == ' ') {\n        $count++;\n        if ($count > 2) {\n          $result .=\
    \ '-';\n        } else {\n          $result .= '_';\n        }\n      } else {\n\
    \        $result .= '_';\n        $count = 1;\n      }\n    } else {\n      $result\
    \ .= $char;\n      $count = 0;\n    }\n    $previous = $char;\n  }\n  return $result;\n\
    }\n", "\t$matching = [];\n\tpreg_match_all('/( {2,})/', $text, $matching);\n\t\
    if(count($matching[0]) != 0) {\n\t\tforeach($matching[0] as $match) {\n\t\t\t\
    $text = str_replace($match, '-', $text);\n\t\t}\n\t}\n\treturn str_replace(' ',\
    \ '_', $text);\n}\n", "\n}\n", "    $text = str_replace('  ', '-', $text);\n \
    \   $text = str_replace(' ', '_', $text);\n    return $text;\n}\n", "    return\
    \ preg_replace(\"/ {2,}/\", \"-\", preg_replace(\"/ +/\", \"_\", $text));\n}",
  "    return preg_replace(\"/ +/\", \"_\", trim($text));\n}", "    $result = \"\"\
    ;\n    $space_count = 0;\n    for ($i = 0; $i < strlen($text); $i++) {\n     \
    \   if ($text[$i] == \" \") {\n            $space_count++;\n            if ($space_count\
    \ == 2) {\n                $result .= \"-\";\n            }\n        } else {\n\
    \            $space_count = 0;\n            $result .= $text[$i];\n        }\n\
    \    }\n    return $result;\n}\necho fix_spaces(\"Example 1\") . \"\\n\"; // Example_1\n\
    echo fix_spaces(\" Example 2\") . \"\\n\"; // _Example_2\necho fix_spaces(\" Example\
    \   3\") . \"\\n\"; // _Example-3", "    $text = trim($text);\n    $text = str_replace('\
    \ ', '_', $text);\n    $text = preg_replace('/_+/', '-', $text);\n    return $text;\n\
    }\n$text = 'Example   3';\necho fix_spaces($text) . PHP_EOL;\n", "    return preg_replace('/\\\
    s+/', '_', $text);\n}", "    return preg_replace('/\\s+/', '_', trim($text));\n\
    }\n\necho fix_spaces(\"Example 3\");", "    return preg_replace(\"/[ ]+/\", \"\
    \ \", preg_replace(\"/ +/\", \"_\", trim($text)));\n}\n\necho fix_spaces(\"Example\"\
    ) . \"<br/>\";\necho fix_spaces(\"Example 1\") . \"<br/>\";\necho fix_spaces(\"\
    \ Example 2\") . \"<br/>\";\necho fix_spaces(\" Example   3\") . \"<br/>\";",
  "    \n    return $result;\n}", "    return preg_replace('/(\\s{2,})/', '-', preg_replace('/\\\
    s/', '_', $text));\n}\necho fix_spaces(\" Example   3\");", "    return preg_replace('/\\\
    s+/', '_', $text);\n}\n", "    $text = preg_replace('/ /', '_', $text);\n    $text\
    \ = preg_replace('/   /', '-', $text);\n    return $text;\n}\n\necho fix_spaces(\"\
    Example\").\"\\n\";\necho fix_spaces(\"Example 1\").\"\\n\";\necho fix_spaces(\"\
    \ Example 2\").\"\\n\";\necho fix_spaces(\" Example   3\").\"\\n\";", "    $result\
    \ = preg_replace('/[\\s]{2,}/', '-', $text);\n    $result = preg_replace('/[\\\
    s]/', '_', $result);\n    return $result;\n}\n\necho fix_spaces(\"Example\").\"\
    \\n\";\necho fix_spaces(\"Example 1\").\"\\n\";\necho fix_spaces(\" Example 2\"\
    ).\"\\n\";\necho fix_spaces(\" Example   3\").\"\\n\";", "\treturn preg_replace('/\\\
    s{2,}/', '-', str_replace(' ', '_', $text));\n}\n", "    $pattern = '# +#';\n\
    \    $replace = '_';\n    $text = preg_replace($pattern, $replace, $text);\n \
    \   $pattern = '#_+#';\n    $replace = '-';\n    $text = preg_replace($pattern,\
    \ $replace, $text);\n    return $text;\n}", "  return preg_replace('/\\s{2,}/',\
    \ '-', str_replace(' ', '_', $text));\n}\n", "    return preg_replace(\"/\\s{2,}/\"\
    , \"-\", str_replace(\" \", \"_\", $text));\n}\n", "\treturn preg_replace(\"/\\\
    s{2,}/\", '-', preg_replace(\"/\\s/\", '_', $text));\n}\n", "    return str_replace(['\
    \ ', '  '], ['_', '-'], $text);\n}\n\necho fix_spaces(\"Example\") . PHP_EOL;\n\
    echo fix_spaces(\"Example 1\") . PHP_EOL;\necho fix_spaces(\" Example 2\") . PHP_EOL;\n\
    echo fix_spaces(\" Example   3\") . PHP_EOL;", "    $text = str_replace(' ', '_',\
    \ $text);\n    $text = str_replace('__', '-', $text);\n    return $text;\n}\n",
  "    $result = '';\n    $count_space = 0;\n    for ($i = 0; $i < strlen($text);\
    \ $i++) {\n        if ($text[$i] === ' ') {\n            $count_space++;\n   \
    \         if ($count_space > 2) {\n                $result = rtrim($result, '_');\n\
    \                $result .= '-';\n            } else {\n                $result\
    \ .= '_';\n            }\n        } else {\n            $result .= $text[$i];\n\
    \            $count_space = 0;\n        }\n    }\n    return $result;\n}\n", " \
    \   return preg_replace(\"/ +/\", \"-\", preg_replace(\"/ {2,}/\", \" \", preg_replace(\"\
    / /\", \"_\", $text)));\n}\n", "    $text=str_replace(\" \",\"_\",$text);\n  \
    \  $text=str_replace(\"_ \",\"-\",$text);\n    $text=str_replace(\"_-_\",\"-\"\
    ,$text);\n    return $text;\n}\n\necho fix_spaces(\"Example\");\necho fix_spaces(\"\
    Example 1\");\necho fix_spaces(\" Example 2\");\necho fix_spaces(\" Example  \
    \ 3\");", "    return preg_replace(\"/\\s+/\", '-', str_replace(' ', '_', $text));\n\
    }", "    return preg_replace('/ {2,}/', '-', str_replace(' ', '_', trim($text)));\n\
    }", "    return preg_replace('/ {2,}/', '-', preg_replace('/ /', '_', $text));\n\
    }\n", "    $pattern = \"/\\s{2,}/\";\n    $text = preg_replace($pattern, \"-\"\
    , $text);\n    $text = str_replace(\" \", \"_\", $text);\n    return $text;\n\
    }\n", "    return preg_replace('/\\s{2,}/', '-', str_replace(' ', '_', $text));\n\
    }\n\necho fix_spaces(\"Example\") . \"\\n\"; // Example\necho fix_spaces(\"Example\
    \ 1\") . \"\\n\"; // Example_1\necho fix_spaces(\" Example 2\") . \"\\n\"; //\
    \ _Example_2\necho fix_spaces(\" Example   3\") . \"\\n\"; // _Example-3", "\t\
    // $text = str_replace(' ', '_', $text);\n\t$text = str_replace('   ', '-', $text);\n\
    \t$text = str_replace('  ', '-', $text);\n\t$text = str_replace(' ', '_', $text);\n\
    \treturn $text;\n}\n\necho fix_spaces(\"Example\");\necho \"<br>\";\necho fix_spaces(\"\
    Example 1\");\necho \"<br>\";\necho fix_spaces(\" Example 2\");\necho \"<br>\"\
    ;\necho fix_spaces(\" Example   3\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \   3\");\necho \"<br>\";\n", "  return preg_replace('/\\s+/', '_', $text);\n\
    }\n\necho fix_spaces(\" Example   3\");\n\n", "  // Write code here\n  return\
    \ preg_replace(\"/(\\s{2,})/\", \"-\", preg_replace(\"/\\s/\", \"_\", $text));\n\
    }\necho fix_spaces(\" Example   3\");", "  return preg_replace('/ {2,}/', '-',\
    \ preg_replace('/ /', '_', $text));\n}", "  return preg_replace('/\\s\\s+/', '-',\
    \ str_replace(' ', '_', $text));\n}\n", "    $replaced = preg_replace('/\\s{2,}/',\
    \ '-', $text);\n    return str_replace(' ', '_', $replaced);\n}\n", "    return\
    \ preg_replace('/\\s{2,}/', '-', str_replace(' ', '_', $text));\n}\necho fix_spaces(\"\
    Example\") . \"\\n\";\necho fix_spaces(\"Example 1\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 2\") . \"\\n\";\necho fix_spaces(\" Example   3\") . \"\\n\";\n", " \
    \ $str = preg_replace('/ +/', ' ', $text);\n  $str = preg_replace('/\\s{2,}/',\
    \ '-', $str);\n  $str = str_replace(' ', '_', $str);\n  return $str;\n}\n", " \
    \   return preg_replace('/\\s+/', '-', str_replace(' ', '_', trim($text)));\n\
    }\n", "    $result = str_replace(' ', '_', $text);\n    return preg_replace('/[_]{2,}/',\
    \ '-', $result);\n}\n", "\t$text = str_replace(' ', '_', $text);\n\treturn str_replace('__',\
    \ '-', $text);\n}\n", "    $text = str_replace(' ', '_', $text);\n    return preg_replace('/(_){2,}/',\
    \ '-', $text);\n}\n", "  $text = trim($text);\n  $text = str_replace(' ', '_',\
    \ $text);\n  return preg_replace('/[_]{2,}/', '-', $text);\n}\n", "    return\
    \ preg_replace(\"/ +/\", \"-\", preg_replace(\"/ /\", \"_\", $text));\n}\n\n$text\
    \ = \"Example 1\";\n$result = fix_spaces($text);\necho \"text: $text | result:\
    \ $result\\n\";\n\n$text = \" Example 2\";\n$result = fix_spaces($text);\necho\
    \ \"text: $text | result: $result\\n\";\n\n$text = \" Example   3\";\n$result\
    \ = fix_spaces($text);\necho \"text: $text | result: $result\\n\";\n\n$text =\
    \ \" A\";\n$result = fix_spaces($text);\necho \"text: $text | result: $result\\\
    n\";\n\n$text = \"  A\";\n$result = fix_spaces($text);\necho \"text: $text | result:\
    \ $result\\n\";\n\n$text = \"A  \";\n$result = fix_spaces($text);\necho \"text:\
    \ $text | result: $result\\n\";\n\n$text = \"A\";\n$result = fix_spaces($text);\n\
    echo \"text: $text | result: $result\\n\";\n", "    $text = trim($text);\n   \
    \ $text = str_replace('  ', ' ', $text);\n    $text = str_replace(' ', '_', $text);\n\
    \    $text = str_replace('__', '-', $text);\n    return $text;\n}\n", "\t$a =\
    \ array(\" \");\n\t$b = array(\"_\");\n\t$new = str_replace($a, $b, $text);\n\t\
    return $new;\n}\necho fix_spaces(\" Example   3\");\necho \"<br/>\";\n", "\treturn\
    \ str_replace('  ', '-', str_replace(' ', '_', $text));\n}\n\necho fix_spaces(\"\
    Example\");\necho \"\\n\";\necho fix_spaces(\"Example 1\");\necho \"\\n\";\necho\
    \ fix_spaces(\" Example 2\");\necho \"\\n\";\necho fix_spaces(\" Example   3\"\
    );\necho \"\\n\";", "    $text = trim($text);\n    $text = str_replace(' ', '_',\
    \ $text);\n    $text = preg_replace('/_{2,}/', '-', $text);\n    return $text;\n\
    }\n", "    return preg_replace('/ {3,}/', '-', preg_replace('/ /', '_', $text));\n\
    }\n", "    $text = preg_replace('/\\s+/', '_', $text);\n    $text = str_replace('\
    \ ', '_', $text);\n    return $text;\n}", "    $text = str_replace('  ', '-',\
    \ $text);\n    $text = str_replace(' ', '_', $text);\n    return $text;\n}\n",
  "\t\n\t$regex = '/\\s+/';\n\t$replacement = '_';\n\t$result = preg_replace($regex,\
    \ $replacement, $text);\n\t$result = str_replace(\"_\", \"-\", $result);\n\t\n\
    \treturn $result;\n}", "\t$t = str_replace(' ', '_', $text);\n\treturn preg_replace('/[_]{2,}/',\
    \ '-', $t);\n}\necho fix_spaces(\"Example\");\necho '<br/>';\necho fix_spaces(\"\
    Example 1\");\necho '<br/>';\necho fix_spaces(\" Example 2\");\necho '<br/>';\n\
    echo fix_spaces(\" Example   3\");\necho '<br/>';\necho fix_spaces(\"  Example\
    \   3  \");\necho '<br/>';\necho fix_spaces(\"  Example   3  4\");\necho '<br/>';\n\
    echo fix_spaces(\"  Example   3   4\");\necho '<br/>';\necho fix_spaces(\"  Example\
    \   3   4  5\");\necho '<br/>';\necho fix_spaces(\"  Example   3   4   5\");\n\
    echo '<br/>';\necho fix_spaces(\"Example   3   4   5\");\necho '<br/>';\necho\
    \ fix_spaces(\"Exampl3   4   5\");\necho '<br/>';\necho fix_spaces(\"Exampl4 \
    \  5\");\necho '<br/>';\necho fix_spaces(\"Exampl5\");\necho '<br/>';\necho fix_spaces(\"\
    Exampl5     6\");\necho '<br/>';\necho fix_spaces(\"Exampl5  6\");\necho '<br/>';\n\
    echo fix_spaces(\"Exampl5   6\");\necho '<br/>';\necho fix_spaces(\"Exampl5  \
    \  6\");\necho '<br/>';\necho fix_spaces(\"Exampl5     6     7\");\necho '<br/>';\n\
    echo fix_spaces(\"Exampl5  6  7\");\necho '<br/>';\necho fix_spaces(\"Exampl5\
    \   6   7\");\necho '<br/>';\necho fix_spaces(\"Exampl5    6    7\");\necho '<br/>';\n\
    echo fix_spaces(\"Exampl5     6     7      8\");\necho '<br/>';\necho fix_spaces(\"\
    Ex", "    $arr = explode(\" \", $text);\n    $new_arr = [];\n    $i = 0;\n   \
    \ foreach ($arr as $word) {\n        if ($word != \"\") {\n            $new_arr[$i]\
    \ = $word;\n            $i++;\n        }\n    }\n    $answer = implode(\"_\",\
    \ $new_arr);\n    $answer = str_replace(\"__\", \"-\", $answer);\n    return $answer;\n\
    }\necho fix_spaces(\" Example   3\").\"\\n\";", "    // your code here\n}\n",
  "    // your code here\n}\n", "    if (strpos($text, '  ') !== false) {\n      \
    \  return str_replace('  ', '-', fix_spaces(str_replace(' ', '_', $text)));\n\
    \    } else {\n        return str_replace(' ', '_', $text);\n    }\n}\n", "\t\
    $text = preg_replace('/\\s{2,}/', '_', $text);\n\t$text = preg_replace('/\\s/',\
    \ '-', $text);\n\treturn $text;\n}\nprint fix_spaces(\"Example\") . \"<br>\";\n\
    print fix_spaces(\"Example 1\") . \"<br>\";\nprint fix_spaces(\" Example 2\")\
    \ . \"<br>\";\nprint fix_spaces(\" Example   3\") . \"<br>\";\n", "  if(empty($text))\
    \ {\n    return '';\n  }\n  return preg_replace('/(\\s{2,})/', '-', str_replace('\
    \ ', '_', $text));\n}\necho fix_spaces(\"Example\"); echo \"<br>\";\necho fix_spaces(\"\
    Example 1\"); echo \"<br>\";\necho fix_spaces(\" Example 2\"); echo \"<br>\";\n\
    echo fix_spaces(\" Example   3\"); echo \"<br>\";", "    return preg_replace('#\\\
    s{2,}#', '-', str_replace(' ', '_', $text));\n}\n$text = \"Example\";\necho fix_spaces($text);\n\
    echo \"\\n\";\n$text = \"Example 1\";\necho fix_spaces($text);\necho \"\\n\";\n\
    $text = \" Example 2\";\necho fix_spaces($text);\necho \"\\n\";\n$text = \" Example\
    \   3\";\necho fix_spaces($text);\necho \"\\n\";", "    if (strpos($text, '  ')\
    \ !== false) {\n        $text = str_replace('  ', '-', $text);\n    }\n    return\
    \ str_replace(' ', '_', $text);\n}\n", "    $text = str_replace(' ', '_', $text);\n\
    \    while(strpos($text, '__') !== false) {\n        $text = str_replace('__',\
    \ '_', $text);\n    }\n    while(strpos($text, '__') !== false) {\n        $text\
    \ = str_replace('__', '_', $text);\n    }\n    while(strpos($text, '__') !== false)\
    \ {\n        $text = str_replace('__', '_', $text);\n    }\n    while(strpos($text,\
    \ '__') !== false) {\n        $text = str_replace('__', '_', $text);\n    }\n\
    \    while(strpos($text, '_ _') !== false) {\n        $text = str_replace('_ _',\
    \ '-', $text);\n    }\n    return $text;\n}\n\necho fix_spaces(\"Example   3\"\
    );", "    $text = trim($text);\n    $text = str_replace(' ', '_', $text);\n  \
    \  $text = preg_replace('/[_]{2,}/', '-', $text);\n    return $text;\n}", "  \
    \  return preg_replace('/ +/', '-', preg_replace('/ /', '_', trim($text)));\n\
    }\n\necho fix_spaces(\"Example\") . \"\\n\";\necho fix_spaces(\"Example 1\") .\
    \ \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\" Example\
    \   3\") . \"\\n\";\n", "    return preg_replace(\"/\\s{3,}/\", \"-\", preg_replace(\"\
    /\\s+/\", \"_\", $text));\n}\n", "  // your code goes here\n}\n", "  return preg_replace(\"\
    /\\s{2,}/\", \"-\", str_replace(\" \", \"_\", $text));\n}", "    return preg_replace(\"\
    /(\\s|\\s{2,})/\", \"-\", $text);\n}\necho fix_spaces(\"Example 1\").\"\\n\";\n\
    echo fix_spaces(\" Example 2\").\"\\n\";\necho fix_spaces(\" Example   3\").\"\
    \\n\";\n", "\t$text = str_replace(' ', '_', $text);\n\t$text = str_replace('__',\
    \ '-', $text);\n\t$text = str_replace('__', '-', $text);\n\treturn $text;\n}\n\
    \necho fix_spaces(\"Example 1\");", "    $text = trim($text); //trim spaces at\
    \ the beginning and end of a string\n    $text = preg_replace('/\\s\\s+/', '-',\
    \ $text); //we replace 2 or more spaces with -\n    $text = str_replace(' ', '_',\
    \ $text); //we replace each space with _\n    return $text;\n}\n", "  return preg_replace('/(?<!\
    \ )\\s{2,}/', '-', str_replace(' ', '_', $text));\n}\n", "\treturn preg_replace('/\\\
    s{2,}/','_',str_replace(' ','_',$text));\n}\n", "  return preg_replace('/(\\s{2,})|(\\\
    s)/', '-', $text);\n}\n", "    $new_text = preg_replace('/[ ]+/', '-', $text);\n\
    \    $new_text = preg_replace('/[ ]/', '_', $new_text);\n    return $new_text;\n\
    }\n\necho fix_spaces(\"Example\") . \"<br>\";\necho fix_spaces(\"Example 1\")\
    \ . \"<br>\";\necho fix_spaces(\" Example 2\") . \"<br>\";\necho fix_spaces(\"\
    \ Example   3\") . \"<br>\";", "    $text = trim($text);\n    $text = str_replace('\
    \ ', '_', $text);\n    $text = preg_replace('/_+/', '-', $text);\n    return $text;\n\
    }", "    return preg_replace('!\\s+!', '-', str_replace(' ', '_', trim($text)));\n\
    }\n", "    $fixedText = str_replace(' ', '_', $text);\n    $fixedText = str_replace('__',\
    \ '-', $fixedText);\n    return $fixedText;\n}\n", "    $array = explode(\" \"\
    , $text);\n    $result = '';\n    foreach ($array as $key => $value) {\n     \
    \   if ($value != \"\") {\n            if ($key == 0) {\n                $result\
    \ .= $value;\n            } else if ($key > 0 && $array[$key - 1] != \"\") {\n\
    \                $result .= '_' . $value;\n            } else {\n            \
    \    $result .= '-' . $value;\n            }\n        }\n    }\n    return $result;\n\
    }\n\necho fix_spaces(\"Example\"); // Example\necho '<br>';\necho fix_spaces(\"\
    Example 1\"); // Example_1\necho '<br>';\necho fix_spaces(\" Example 2\"); //\
    \ _Example_2\necho '<br>';\necho fix_spaces(\" Example   3\"); // _Example-3\n\
    echo '<br>';\necho fix_spaces(\"   5   Example   3\"); // -5--Example-3\necho\
    \ '<br>';\necho fix_spaces(\"\"); // -5--Example-3\necho '<br>';\necho fix_spaces(\"\
    \   \"); // -5--Example-3\necho '<br>';\necho fix_spaces(\" \"); // -5--Example-3\n\
    echo '<br>';\necho fix_spaces(\"     \"); // -5--Example-3\necho '<br>';\necho\
    \ fix_spaces(\"   5   Example   3   \"); // -5--Example-3", "    $search = array(\"\
    \  \", \" \");\n    $replace = array(\"-\", \"_\");\n    return str_replace($search,\
    \ $replace, $text);\n}\n", "    if (empty($text)) {\n        return \"\";\n  \
    \  }\n\n    $words = explode(\" \", $text);\n    $fixedText = \"\";\n    $wordCount\
    \ = 0;\n    foreach ($words as $word) {\n        if (empty($word)) {\n       \
    \     $wordCount++;\n            continue;\n        }\n\n        if ($wordCount\
    \ > 2) {\n            $fixedText .= \"-\";\n        } else if ($wordCount > 0)\
    \ {\n            $fixedText .= \"_\";\n        }\n\n        $fixedText .= $word;\n\
    \        $wordCount = 0;\n    }\n\n    return $fixedText;\n}\n\n$s = \"a bc  d\
    \  ef  ghi  j  klm  nop  q  rst  uv  wxyz\";\necho fix_spaces($s) . \"\\n\";\n\
    \n$s = \"abc d  ef\";\necho fix_spaces($s) . \"\\n\";\n\n$s = \"a   bc\";\necho\
    \ fix_spaces($s) . \"\\n\";\n\n$s = \"   abc\";\necho fix_spaces($s) . \"\\n\"\
    ;\n\n$s = \"\";\necho fix_spaces($s) . \"\\n\";\n\n$s = \"      \";\necho fix_spaces($s)\
    \ . \"\\n\";\n\n$s = \"      a\";\necho fix_spaces($s) . \"\\n\";\n\n$s = \"a\
    \      \";\necho fix_spaces($s) . \"\\n\";\n\n$s = \"a    b    c    d    e\";\n\
    echo fix_spaces($s) . \"\\n\";\n\n$s = \"a    b    c    d    e      \";\necho\
    \ fix_spaces($s) . \"\\n\";\n\n$s = \"a    b    c    d    e      f\";\necho fix_spaces($s)\
    \ . \"\\n\";\n\n$s = \"a    b    c    d    e      f            \";\necho fix_spaces($s)\
    \ . \"\\n\";\n\n$s = \"a    b    c    d    e      f            g\";\necho fix_spaces($s)",
  "    $result = \"\";\n    for ($i = 0; $i < strlen($text); $i++) {\n        if ($text[$i]\
    \ === \" \") {\n            $result .= \"_\";\n        } else {\n            $result\
    \ .= $text[$i];\n        }\n    }\n    $result = str_replace(\"__\", \"-\", $result);\n\
    \    return $result;\n}\necho fix_spaces(\"Example\") . PHP_EOL;\necho fix_spaces(\"\
    Example 1\") . PHP_EOL;\necho fix_spaces(\" Example 2\") . PHP_EOL;\necho fix_spaces(\"\
    \ Example   3\") . PHP_EOL;\necho fix_spaces(\"Example   4\") . PHP_EOL;", "\t\
    return preg_replace('/\\s{2,}/', '-', preg_replace('/\\s/', '_', $text));\n}\n\
    \necho fix_spaces(\"Example   3\");", "    $patterns = [\"/  /\", \"/ /\"];\n\
    \    $replacements = [\"-\", \"_\"];\n    $fixed = preg_replace($patterns, $replacements,\
    \ $text);\n    return $fixed;\n}\n", "    $text = preg_replace('/\\s+/', '-',\
    \ $text);\n    $text = preg_replace('/^\\-/', '', $text);\n    $text = preg_replace('/\\\
    -/', '_', $text);\n    return $text;\n}\n\nvar_dump(fix_spaces(\"Example\"));\n\
    var_dump(fix_spaces(\"Example 1\"));\nvar_dump(fix_spaces(\" Example 2\"));\n\
    var_dump(fix_spaces(\" Example   3\"));", "    $arr = explode(\" \", $text);\n\
    \    return implode(\"_\", $arr);\n}\necho fix_spaces(\"Example\") . \"\\n\";\n\
    echo fix_spaces(\"Example 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\
    \\n\";\necho fix_spaces(\" Example   3\") . \"\\n\";", "    $text = preg_replace('/\
    \ /', '_', $text);\n    $text = preg_replace('/_{2,}/', '-', $text);\n    return\
    \ $text;\n}\n", "    return preg_replace('/\\s{2,}/', '-', str_replace(' ', '_',\
    \ $text));\n}\n", "    $result = '';\n    $lastChar = '';\n    for ($i = 0; $i\
    \ < strlen($text); $i++) {\n        $char = $text[$i];\n        if ($char == '\
    \ ') {\n            if ($lastChar == ' ') {\n                $result .= '-';\n\
    \            } else {\n                $result .= '_';\n            }\n      \
    \  } else {\n            $result .= $char;\n        }\n        $lastChar = $char;\n\
    \    }\n    return $result;\n}\n", "    $result = preg_replace(\"/\\s{2,}/\",\
    \ \"-\", $text);\n    $result = preg_replace(\"/\\s/\", \"_\", $result);\n   \
    \ return $result;\n}\n$result = fix_spaces(\"Example\");\necho \"result is $result\\\
    n\";\n$result = fix_spaces(\"Example 1\");\necho \"result is $result\\n\";\n$result\
    \ = fix_spaces(\" Example 2\");\necho \"result is $result\\n\";\n$result = fix_spaces(\"\
    \ Example   3\");\necho \"result is $result\\n\";\n", "\treturn preg_replace('/\
    \ {2,}/', '-', str_replace(' ', '_', trim($text)));\n}\n", "    if ($text == \"\
    \ \"){\n        return \"_\";\n    }\n    else {\n        $split_text = explode(\"\
    \ \", $text);\n        $new_text = [];\n        foreach ($split_text as $word)\
    \ {\n            if ($word !== \"\") {\n                array_push($new_text,\
    \ $word);\n            }\n        }\n        $fixed_text = implode(\"_\", $new_text);\n\
    \        return $fixed_text;\n    }\n}\n", "\t\n\t$text = trim($text);\n\t\n\t\
    // $text = preg_replace('/\\s+/', '-', $text);\n\t$text = preg_replace('/\\s+/',\
    \ '_', $text);\n\treturn $text;\n}\n", "    if (!is_string($text)) {\n       \
    \ return false;\n    }\n    $res = $text;\n    $count = substr_count($text, '\
    \  ');\n    if ($count > 0) {\n        $res = preg_replace('/\\s+/', '-', $text);\n\
    \    } else {\n        $res = str_replace(' ', '_', $text);\n    }\n    return\
    \ $res;\n}\necho fix_spaces(\"Example\") . \"\\n\";\necho fix_spaces(\"Example\
    \ 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\"\
    \ Example   3\") . \"\\n\";", "    $text = str_replace(' ', '_', $text);\n   \
    \ $text = str_replace('__', '-', $text);\n    return $text;\n}\n", "    return\
    \ preg_replace(\"/[ ]{2,}/\", \"-\", str_replace(\" \", \"_\", $text));\n}\n",
  "    $spaces_replaced = preg_replace('/\\s+/', ' ', $text);\n    $spaces_replaced\
    \ = str_replace(' ', '_', $spaces_replaced);\n    return str_replace('_ ', '-',\
    \ $spaces_replaced);\n}\n\necho fix_spaces(\" \");", "    return preg_replace('/\\\
    s+/', '-', trim(str_replace(' ', '_', $text)));\n}\n\necho fix_spaces(\"Example\"\
    ) . \"\\n\";\necho fix_spaces(\"Example 1\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 2\") . \"\\n\";\necho fix_spaces(\" Example   3\") . \"\\n\";\n", "    $text\
    \ = preg_replace('/\\s+/', '_', $text);\n    $text = preg_replace('/_{2,}/', '-',\
    \ $text);\n    return $text;\n}\n\nprint(fix_spaces(\"Example\") . \"\\n\");\n\
    print(fix_spaces(\"Example 1\") . \"\\n\");\nprint(fix_spaces(\" Example 2\")\
    \ . \"\\n\");\nprint(fix_spaces(\" Example   3\") . \"\\n\");", "    $newText\
    \ = preg_replace('/\\s{2,}/', '-', $text);\n    $newText = str_replace(' ', '_',\
    \ $newText);\n    return $newText;\n}\n\nprint fix_spaces(\"Example\") . \"\\\
    n\";\nprint fix_spaces(\"Example 1\") . \"\\n\";\nprint fix_spaces(\" Example\
    \ 2\") . \"\\n\";\nprint fix_spaces(\" Example   3\") . \"\\n\";\n", "    return\
    \ preg_replace('/\\s{2,}/', '-', preg_replace('/\\s/', '_', $text));\n}\n", "\t\
    return preg_replace(\"/[ ]{2,}/\", \"-\", str_replace(\" \", \"_\", $text));\n\
    }\n\necho fix_spaces(\"Example\") . PHP_EOL;\necho fix_spaces(\"Example 1\") .\
    \ PHP_EOL;\necho fix_spaces(\" Example 2\") . PHP_EOL;\necho fix_spaces(\" Example\
    \   3\") . PHP_EOL;", "    $temp = preg_replace('/\\s{2,}/', '-', $text);\n  \
    \  return preg_replace('/\\s/', '_', $temp);\n}\n\nvar_dump(fix_spaces(\"Example\"\
    ));\nvar_dump(fix_spaces(\"Example 1\"));\nvar_dump(fix_spaces(\" Example 2\"\
    ));\nvar_dump(fix_spaces(\" Example   3\"));\n", "    $text = str_replace(' ',\
    \ '_', $text);\n    return str_replace('__', '-', $text);\n}\n", "    return str_replace('\
    \  ', '-', str_replace(' ', '_', trim($text)));\n}\n", "    $text = trim($text);\n\
    \    $text = str_replace(' ', '_', $text);\n    $text = preg_replace('/_+/', '-',\
    \ $text);\n    return $text;\n}\n", "    return preg_replace(\"/(  +)| /\", \"\
    $1-\", $text);\n}\n", "    $k = str_replace(\" \", \"_\", $text);\n    $v = str_replace(\"\
    \  \", \"-\", $k);\n    return $v;\n}\necho fix_spaces(\"Example 1\") . \"<br>\"\
    ;\necho fix_spaces(\" Example 2\") . \"<br>\";\necho fix_spaces(\" Example   3\"\
    ) . \"<br>\";\n", "    $text = preg_replace('/\\s+/', '_', $text);\n    $text\
    \ = preg_replace('/\\s_/', '_', $text);\n    $text = preg_replace('/_\\s/', '_',\
    \ $text);\n    $text = preg_replace('/\\s-/', '-', $text);\n    $text = preg_replace('/-\\\
    s/', '-', $text);\n    return $text;\n}\n\n$text = \"Example 1\";\necho fix_spaces($text);",
  "    $text = str_replace(' ', '_', $text);\n    $text = str_replace('__', '-', $text);\n\
    \    return $text;\n}", "  $pattern = '/[\\s]{2,}/';\n  $replacement = '-';\n\
    \  $text = preg_replace($pattern, $replacement, $text);\n  $text = preg_replace('/\\\
    s/', '_', $text);\n  return $text;\n}\necho fix_spaces(\"Example 1\") . PHP_EOL;\n\
    echo fix_spaces(\" Example 2\") . PHP_EOL;\necho fix_spaces(\" Example   3\")\
    \ . PHP_EOL;\necho fix_spaces(\"Example\") . PHP_EOL;\n", "  $arr_text = str_split($text);\n\
    \  $output = \"\";\n  $counter = 0;\n  foreach ($arr_text as $char) {\n    if\
    \ ($char == \" \") {\n      $counter++;\n      if ($counter == 1) {\n        $output\
    \ .= \"_\";\n      } else if ($counter > 2) {\n        $output .= \"-\";\n   \
    \   }\n    } else {\n      $output .= $char;\n      $counter = 0;\n    }\n  }\n\
    \  return $output;\n}\n", "\n}\n", "    return preg_replace(\"/\\s{2,}/\", \"\
    -\", preg_replace(\"/\\s/\", \"_\", $text));\n}\n", "    return preg_replace(\"\
    /\\s{2,}/\", \"-\", str_replace(\" \", \"_\", $text));\n}\n", "    $str = str_replace('\
    \  ', '-', $text);\n    $str = str_replace(' ', '_', $str);\n    return $str;\n\
    }\n", "    $result = preg_replace(\"/\\s+/\", \"-\", $text);\n    return $result;\n\
    }\n\n$result = fix_spaces(\"Example   3\");\necho $result;", "\t$text = str_replace('\
    \ ', '_', $text);\n\treturn str_replace('__', '-', $text);\n}\n", "  $text = str_replace('\
    \  ', '-', $text);\n  $text = str_replace(' ', '_', $text);\n  return $text;\n\
    }", "    return preg_replace('/\\s{2,}/', '-', preg_replace('/\\s/', '_', $text));\n\
    }\necho fix_spaces(\"Example   3\");", "    return str_replace('  ', '-', preg_replace('/\\\
    s+/', '_', $text));\n}\n", "    $arr = str_split($text);\n    $result = '';\n\
    \    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ == ' ') {\n            $count++;\n            if ($count == 2) {\n         \
    \       $result .= '-';\n            }\n        } else {\n            $count =\
    \ 0;\n            $result .= $arr[$i];\n        }\n    }\n    return $result;\n\
    }\n\necho fix_spaces(\"Example 1\") . '<br>';\necho fix_spaces(\" Example 2\"\
    ) . '<br>';\necho fix_spaces(\" Example   3\") . '<br>';\n", "    return preg_replace('/\
    \ {2,}/', '-', str_replace(' ', '_', trim($text)));\n}\n", "    return preg_replace(\"\
    /[ ]{2,}/\", \"-\", str_replace(\" \", \"_\", $text));\n}\n\necho fix_spaces(\"\
    Example\");\necho PHP_EOL;\necho fix_spaces(\"Example 1\");\necho PHP_EOL;\necho\
    \ fix_spaces(\" Example 2\");\necho PHP_EOL;\necho fix_spaces(\" Example   3\"\
    );\necho PHP_EOL;", "\n}\n", "  return str_replace(' ', '_', preg_replace('/\\\
    s+/', '-', trim($text)));\n}\necho fix_spaces(\"Example\").\"\\n\";\necho fix_spaces(\"\
    Example 1\").\"\\n\";\necho fix_spaces(\" Example 2\").\"\\n\";\necho fix_spaces(\"\
    \ Example   3\").\"\\n\";\n", "    $arr = preg_split('/(\\s)/', $text, -1, PREG_SPLIT_DELIM_CAPTURE);\n\
    \    $prev = \"\";\n    foreach ($arr as $key => $value) {\n        if ($prev\
    \ == \" \" && $value == \" \") {\n            $arr[$key] = \"-\";\n        } else\
    \ if ($value == \" \") {\n            $arr[$key] = \"_\";\n        }\n       \
    \ $prev = $value;\n    }\n    return implode(\"\", $arr);\n}", "    $text = preg_replace('/\\\
    s/', '_', $text);\n    $text = preg_replace('/_+/', '-', $text);\n    return $text;\n\
    }\n\necho fix_spaces(\"Example\").\"\\n\";\necho fix_spaces(\"Example 1\").\"\\\
    n\";\necho fix_spaces(\" Example 2\").\"\\n\";\necho fix_spaces(\" Example   3\"\
    ).\"\\n\";\n", "\treturn preg_replace(\"/\\s{2,}/\", \" \", str_replace(\" \"\
    , \"_\", $text));\n}", "    return str_replace(array(' ', '  '), array('_', '-'),\
    \ $text);\n}\n\n$text = 'example  1';\necho fix_spaces($text);", "    return preg_replace('/[\
    \ ]{2,}/', '-', str_replace(' ', '_', $text));\n}", "    $text = str_replace('\
    \ ', '_', $text);\n    $text = str_replace('__', '-', $text);\n    return $text;\n\
    }\n$text = \" Example   3\";\nprint $text . '<br>';\nprint fix_spaces($text);",
  "    $newText = str_replace('  ', '-', $text);\n    $finalText = str_replace(' ',\
    \ '_', $newText);\n    return $finalText;\n}", "  $text = preg_replace('/(\\s)/',\
    \ '_', $text);\n  $text = preg_replace('/(\\s{2,})/', '-', $text);\n  return $text;\n\
    }\n", "    $text = str_replace(' ', '_', $text);\n    $text = str_replace('__',\
    \ '-', $text);\n    return $text;\n}\n", "    $text = preg_replace('/\\s/', '_',\
    \ $text);\n    $text = preg_replace('/_{2,}/', '-', $text);\n    return $text;\n\
    }", "    return preg_replace('/\\s\\s+/', '-', $text);\n}\n", "  $new_text = \"\
    \";\n  $prev = \"\";\n  $count = 0;\n  for ($i = 0; $i < strlen($text); $i++)\
    \ {\n    if ($text[$i] === \" \") {\n      if ($prev === \" \") {\n        $count++;\n\
    \        if ($count === 2) {\n          $new_text .= \"-\";\n        }\n     \
    \ } else {\n        $new_text .= \"_\";\n        $count = 1;\n      }\n    } else\
    \ {\n      $new_text .= $text[$i];\n      $count = 0;\n    }\n    $prev = $text[$i];\n\
    \  }\n  return $new_text;\n}\necho fix_spaces(\"Example\");\necho \"\\n\";\necho\
    \ fix_spaces(\"Example 1\");\necho \"\\n\";\necho fix_spaces(\" Example 2\");\n\
    echo \"\\n\";\necho fix_spaces(\" Example   3\");\necho \"\\n\";", "    return\
    \ preg_replace(\"/\\s{2,}/\", \"-\", preg_replace(\"/\\s/\", \"_\", $text));\n\
    }", "    return preg_replace('/ +/', '_', trim($text));\n}\n", "    $regex = '/\\\
    s+/';\n    $replace = '_';\n    return preg_replace($regex, $replace, $text);\n\
    }", "  return preg_replace('/ {2,}/', '-', str_replace(' ', '_', trim($text)));\n\
    }\n", "    $res = str_replace(' ', '_', $text);\n    $res = str_replace('__',\
    \ '-', $res);\n    return $res;\n}", "    return preg_replace('/\\s{2,}/', '-',\
    \ $text);\n}\n", "    return preg_replace('/( ){3,}/', '-', preg_replace('/ /',\
    \ '_', $text));\n}\n\necho fix_spaces(\"Example\").\"\\n\";\necho fix_spaces(\"\
    Example 1\").\"\\n\";\necho fix_spaces(\" Example 2\").\"\\n\";\necho fix_spaces(\"\
    \ Example   3\").\"\\n\";", "    $str = '';\n    $str_arr = str_split($text);\n\
    \    $prev_space = false;\n    $space_count = 0;\n    foreach ($str_arr as $char)\
    \ {\n        if ($char == ' ') {\n            if ($prev_space) {\n           \
    \     $space_count++;\n            } else {\n                $prev_space = true;\n\
    \                $space_count = 1;\n            }\n        } else {\n        \
    \    if ($prev_space) {\n                if ($space_count > 2) {\n           \
    \         $str .= '-';\n                } else {\n                    for ($i\
    \ = 0; $i < $space_count; $i++) {\n                        $str .= '_';\n    \
    \                }\n                }\n                $prev_space = false;\n\
    \                $space_count = 0;\n            }\n            $str .= $char;\n\
    \        }\n    }\n    if ($prev_space) {\n        if ($space_count > 2) {\n \
    \           $str .= '-';\n        } else {\n            for ($i = 0; $i < $space_count;\
    \ $i++) {\n                $str .= '_';\n            }\n        }\n    }\n   \
    \ return $str;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

{
  "name": "HumanEval_11_string_xor",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Input are two strings a and b consisting only of 1s and 0s.\n    // Perform binary XOR on these inputs and return result also as a string.\n    // >>> StringXor((\"010\"), (\"110\"))\n    // (\"100\")\n    public static string StringXor(string a, string b) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringXor((\"111000\"), (\"101010\")).Equals((\"010010\")));\n    Debug.Assert(StringXor((\"1\"), (\"1\")).Equals((\"0\")));\n    Debug.Assert(StringXor((\"0101\"), (\"0000\")).Equals((\"0101\")));\n    }\n\n}\n",
  "completions": [
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(new string[] {
    "        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).Select(x => (char)(x + '0')).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int len = a.Length;\n        if (len != b.Length)\n            throw new Exception(\"Input strings must be of equal length\");\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a[i] - '0';\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[len];\n        for (int i = 0; i < len; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1') {\n                result = result ^ 1;\n            }\n        }\n        return result.ToString();",
    "        int i, j, k;\n        int[] ai = new int[a.Length()];\n        int[] bi = new int[b.Length()];\n        for (i = 0; i < a.Length(); i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (i = 0; i < b.Length(); i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length()];\n        for (i = 0; i < a.Length(); i++) {\n            for (j = 0; j < b.Length(); j++) {\n                result[i] = result[i] ^ (ai[i] & bi[j]);\n            }\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        if (a == null || b == null)\n            throw new ArgumentNullException(\"a and b cannot be null\");\n        if (a.Length != b.Length)\n            throw new ArgumentException(\"a and b must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < a.Length; i++) {\n            result = result ^ (a[i] - '0') ^ (b[i] - '0');\n        }\n        return String.Format(\"{0}\", result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            res[i] = ai[i] ^ bi[i];\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)(x + '0')).ToList());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int i, j;\n        int len = a.Length;\n        if (len != b.Length)\n            throw new Exception(\"Input strings must be of equal length\");\n        string result = \"\";\n        for (i = 0; i < len; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result += '1';\n            else if (a[i] == '0' && b[i] == '0')\n                result += '0';\n            else\n                throw new Exception(\"Input strings must be of equal length\");\n        }\n        return result;",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        int carry = 0;\n        for (int i = 0; i < resultLength; i++) {\n            int aChar = a[i] - '0';\n            int bChar = b[i] - '0';\n            int sum = aChar ^ bChar ^ carry;\n            carry = sum / 2;\n            sum = sum % 2;\n            result[i] = sum + '0';\n        }\n        if (carry != 0) {\n            result[resultLength] = carry + '0';\n        }\n        return result.ToString();",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] r = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            r[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", r);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int a_len = a.Length;\n        int b_len = b.Length;\n        if (a_len != b_len)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < a_len; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n        }\n        return result.ToString(\"B\");",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Strings must be of equal length\");\n        }\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            result = result ^ (int)a[i] ^ (int)b[i];\n        }\n        return BitConverter.ToString(result);",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n        }\n        return (result == 0 ? \"0\" : \"1\");",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Strings must be of equal length\");\n        int resultLength = aLength;\n        int i = 0;\n        int j = 0;\n        char[] result = new char[resultLength];\n        while (i < aLength && j < bLength) {\n            if (a[i] == '1' && b[j] == '1') {\n                result[i + j] = '1';\n                j++;\n            }\n            else if (a[i] == '0' && b[j] == '0') {\n                result[i + j] = '0';\n                j++;\n            }\n            else {\n                result[i + j] = '0';\n                i++;\n                j++;\n            }\n        }\n        while (i < aLength) {\n            result[i + j] = '0';\n            i++;\n        }\n        while (j < bLength) {\n            result[i + j] = '0';\n            j++;\n        }\n        return new string(result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => \"1\" + x + \"0\").ToList());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        int aIndex = 0;\n        int bIndex = 0;\n        int result = 0;\n        while (aIndex < aLength && bIndex < bLength) {\n            if (a[aIndex] == '1' && b[bIndex] == '1') {\n                result = result ^ 1;\n            }\n            aIndex++;\n            bIndex++;\n        }\n        while (aIndex < aLength) {\n            if (a[aIndex] == '1') {\n                result = result ^ 1;\n            }\n            aIndex++;\n        }\n        while (bIndex < bLength) {\n            if (b[bIndex] == '1') {\n                result = result ^ 1;\n            }\n            bIndex++;\n        }\n        return (char)(result + 48);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            res[i] = ai[i] ^ bi[i];\n        string res_str = \"\";\n        for (int i = 0; i < res.Length; i++)\n            res_str += (char)(res[i] + '0');\n        return res_str;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        int maxLength = Math.Max(aLength, bLength);\n        char[] result = new char[maxLength];\n        for (int i = 0; i < maxLength; i++) {\n            result[i] = (char)((a[i] == '1' && b[i] == '1') ? '1' : '0');\n        }\n        return new string(result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            result[i] = ai[i] ^ bi[i];\n        string resultString = \"\";\n        for (int i = 0; i < a.Length; i++)\n            resultString += (char)(result[i] + '0');\n        return resultString;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        // Write your code here\n        int a_len = a.Length;\n        int b_len = b.Length;\n        if (a_len != b_len)\n            return \"\";\n        int result = 0;\n        for (int i = 0; i < a_len; i++) {\n            result = result ^ (a[i] - '0') ^ (b[i] - '0');\n        }\n        return String.Format(\"{0:b}\", result);",
    "        if (a == null || b == null)\n            throw new Exception(\"Input strings cannot be null.\");\n        if (a.Length != b.Length)\n            throw new Exception(\"Input strings must be of equal length.\");\n        if (a.Length == 0)\n            return \"\";\n        int n = a.Length;\n        int[] ai = new int[n];\n        int[] bi = new int[n];\n        for (int i = 0; i < n; i++) {\n            ai[i] = a[i] - '0';\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[n];\n        for (int i = 0; i < n; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1') {\n                result = result ^ 1;\n            }\n        }\n        return result.ToString();",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(res).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\",\", Enumerable.Of(res).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(res).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            result = result ^ (a[i] - '0') ^ (b[i] - '0');\n        }\n        return result.ToString();",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            result[i] = ai[i] ^ bi[i];\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int len = a.Length;\n        if (len != b.Length)\n            throw new Exception(\"Strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < len; i++) {\n            result = result ^ (int)a[i] ^ (int)b[i];\n        }\n        return BitConverter.ToString(result);",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < aLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        string res_str = \"\";\n        for (int i = 0; i < res.Length; i++) {\n            res_str += (char)(res[i] + '0');\n        }\n        return res_str;",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            result = result ^ (a[i] - '0') ^ (b[i] - '0');\n        }\n        return String.Format(\"{0:b}\", result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(new string[] {
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result[i] = '1';\n            else if (a[i] == '1' && b[i] == '0')\n                result[i] = '0';\n            else if (a[i] == '0' && b[i] == '1')\n                result[i] = '0';\n            else if (a[i] == '0' && b[i] == '0')\n                result[i] = '0';\n        }\n        return string(result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).ToArray());",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        string result = \"\";\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1') {\n                result += '1';\n            }\n            else if (a[i] == '0' && b[i] == '0') {\n                result += '0';\n            }\n            else {\n                throw new Exception(\"Input strings must be of equal length\");\n            }\n        }\n        return result;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        string res_str = \"\";\n        for (int i = 0; i < res.Length; i++) {\n            res_str += (char)(res[i] + '0');\n        }\n        return res_str;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            result[i] = ai[i] ^ bi[i];\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int i, j, k;\n        int len_a = a.Length;\n        int len_b = b.Length;\n        int len = len_a > len_b ? len_a : len_b;\n        int[] a_int = new int[len];\n        int[] b_int = new int[len];\n        for (i = 0; i < len; i++) {\n            a_int[i] = a[i] - '0';\n            b_int[i] = b[i] - '0';\n        }\n        int[] result = new int[len];\n        for (i = 0; i < len; i++) {\n            result[i] = a_int[i] ^ b_int[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result += 1;\n        }\n        return BitConverter.ToString(result);",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => \"1\" + (x > 1 ? \"0\" : \"\")));",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        int carry = 0;\n        for (int i = 0; i < resultLength; i++) {\n            int aChar = a[i] - '0';\n            int bChar = b[i] - '0';\n            int sum = aChar ^ bChar ^ carry;\n            carry = sum / 2;\n            sum %= 2;\n            result[i] = sum + '0';\n        }\n        if (carry != 0) {\n            result.Insert(0, carry + '0');\n        }\n        return result.ToString();",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        int aIndex = 0;\n        int bIndex = 0;\n        int result = 0;\n        while (aIndex < aLength && bIndex < bLength) {\n            if (a[aIndex] == '1' && b[bIndex] == '1') {\n                result = result ^ 1;\n            }\n            aIndex++;\n            bIndex++;\n        }\n        while (aIndex < aLength) {\n            if (a[aIndex] == '1') {\n                result = result ^ 1;\n            }\n            aIndex++;\n        }\n        while (bIndex < bLength) {\n            if (b[bIndex] == '1') {\n                result = result ^ 1;\n            }\n            bIndex++;\n        }\n        return result == 0 ? \"0\" : \"1\";",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n            else if (a[i] == '0' && b[i] == '0')\n                result = result ^ 0;\n            else\n                throw new Exception(\"Input strings must be of equal length\");\n        }\n        return result.ToString();",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        int aIndex = 0;\n        int bIndex = 0;\n        int result = 0;\n        while (aIndex < aLength && bIndex < bLength) {\n            if (a[aIndex] == '1' && b[bIndex] == '1') {\n                result = result ^ 1;\n            }\n            aIndex++;\n            bIndex++;\n        }\n        while (aIndex < aLength) {\n            if (a[aIndex] == '1') {\n                result = result ^ 1;\n            }\n            aIndex++;\n        }\n        while (bIndex < bLength) {\n            if (b[bIndex] == '1') {\n                result = result ^ 1;\n            }\n            bIndex++;\n        }\n        return result == 0 ? \"0\" : \"1\";",
    "        int ai = 0, bi = 0;\n        int ai_len = a.Length;\n        int bi_len = b.Length;\n        int result_len = Math.Max(ai_len, bi_len);\n        char[] result = new char[result_len];\n        while (ai < ai_len && bi < bi_len) {\n            if (a[ai] == '1' && b[bi] == '1') {\n                result[ai + bi] = '1';\n            }\n            else {\n                result[ai + bi] = '0';\n            }\n            ai++;\n            bi++;\n        }\n        while (ai < ai_len) {\n            result[ai] = '0';\n            ai++;\n        }\n        while (bi < bi_len) {\n            result[bi] = '0';\n            bi++;\n        }\n        return new string(result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\", \", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\",\", string.Format(\"{0:X}\", res));",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        int carry = 0;\n        for (int i = 0; i < aLength; i++) {\n            int aChar = a[i] - '0';\n            int bChar = b[i] - '0';\n            int sum = aChar ^ bChar ^ carry;\n            carry = sum / 2;\n            sum = sum % 2;\n            result[i] = sum + '0';\n        }\n        if (carry != 0)\n            result[resultLength - 1] = carry + '0';\n        return result.ToString();",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        // Write your code here\n        int[] a_int = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            a_int[i] = a[i] - '0';\n        }\n        int[] b_int = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            b_int[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = a_int[i] ^ b_int[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(res).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            res[i] = ai[i] ^ bi[i];\n        return string.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        string result = \"\";\n        for (int i = 0; i < resultLength; i++) {\n            int aChar = a[i] - '0';\n            int bChar = b[i] - '0';\n            int resultChar = aChar ^ bChar;\n            result += resultChar + '0';\n        }\n        return result;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int a_len = a.Length;\n        int b_len = b.Length;\n        if (a_len != b_len)\n            throw new Exception(\"Strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < a_len; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n        }\n        return BitConverter.ToString(result);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            result[i] = ai[i] ^ bi[i];\n        string resultString = \"\";\n        for (int i = 0; i < a.Length; i++)\n            resultString += (char)(result[i] + '0');\n        return resultString;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).OrderBy(x => x).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int i, j, k;\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (i = 0; i < a.Length; i++) {\n            for (j = 0; j < b.Length; j++) {\n                res[i] += (ai[i] ^ bi[j]) % 2;\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for (i = 0; i < res.Length; i++) {\n            sb.Append(res[i]);\n        }\n        return sb.ToString();",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(new string[] {
    "        // Write your code here\n        int len = a.Length;\n        if (len != b.Length)\n            throw new Exception(\"Input strings must be of equal length\");\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            ai[i] = a[i] - '0';\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[len];\n        for (int i = 0; i < len; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return Convert.ToString(res);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int i, j;\n        string result = \"\";\n        for (i = 0; i < a.Length; i++) {\n            for (j = 0; j < b.Length; j++) {\n                if (a[i] == '1' && b[j] == '1') {\n                    result += '1';\n                }\n                else if (a[i] == '1' && b[j] == '0') {\n                    result += '0';\n                }\n                else if (a[i] == '0' && b[j] == '1') {\n                    result += '0';\n                }\n                else if (a[i] == '0' && b[j] == '0') {\n                    result += '0';\n                }\n            }\n        }\n        return result;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] a_int = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            a_int[i] = a[i] - '0';\n        int[] b_int = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            b_int[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            result[i] = a_int[i] ^ b_int[i];\n        return string.Join(\"\", result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)(a[i] ^ b[i]));\n        }\n        return new string(result);",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        string result = \"\";\n        for (int i = 0; i < resultLength; i++) {\n            int aChar = a[i] - '0';\n            int bChar = b[i] - '0';\n            int resultChar = aChar ^ bChar;\n            resultChar = resultChar + '0';\n            result += resultChar;\n        }\n        return result;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)(x + '0')).ToArray());",
    "        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            res[i] = ai[i] ^ bi[i];\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\",\", Enumerable.Of(res).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int ai = 0, bi = 0;\n        int ai_len = a.Length;\n        int bi_len = b.Length;\n        int result = 0;\n        while (ai < ai_len && bi < bi_len) {\n            if (a[ai] == '1') {\n                result |= 1 << bi;\n            }\n            ai++; bi++;\n        }\n        return BitConverter.ToString(result);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", result);",
    "        int i, j, k, l;\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        for (i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (i = 0; i < a.Length; i++) {\n            for (j = 0; j < b.Length; j++) {\n                result[i] = result[i] ^ bi[j] ^ ai[i];\n            }\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", result);",
    "        int ai, bi;\n        int ai_len = a.Length;\n        int bi_len = b.Length;\n        int ai_pos = 0;\n        int bi_pos = 0;\n        int ai_bit = 0;\n        int bi_bit = 0;\n        int ai_bit_len = 0;\n        int bi_bit_len = 0;\n        int ai_bit_pos = 0;\n        int bi_bit_pos = 0;\n        int ai_bit_mask = 1;\n        int bi_bit_mask = 1;\n        int ai_bit_mask_len = 0;\n        int bi_bit_mask_len = 0;\n        int ai_bit_mask_pos = 0;\n        int bi_bit_mask_pos = 0;\n        int ai_bit_mask_len_pos = 0;\n        int bi_bit_mask_len_pos = 0;\n        int ai_bit_mask_len_pos_len = 0;\n        int bi_bit_mask_len_pos_len = 0;\n        int ai_bit_mask_len_pos_pos = 0;\n        int bi_bit_mask_len_pos_pos = 0;\n        int ai_bit_mask_len_pos_pos_len = 0;\n        int bi_bit_mask_len_pos_pos_len = 0;\n        int ai_bit_mask_len_pos_pos_pos = 0;\n        int bi_bit_mask_len_pos_pos_pos = 0;\n        int ai_bit_mask_len_pos_pos_pos_len = 0;\n        int bi_bit_mask_len_pos_pos_pos_len = 0;\n        int ai_bit_mask_len_pos_pos_pos_pos = 0;\n        int bi_bit_mask_len_pos_pos_pos_pos = 0;\n        int ai_bit_mask_len_pos_pos_pos_pos_len = 0;\n        int bi_bit_mask_len_pos_pos_pos_pos_len = 0;\n        int ai_bit_mask",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)(x + '0')).ToArray());",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        int carry = 0;\n        for (int i = 0; i < aLength; i++) {\n            int aChar = a[i] - '0';\n            int bChar = b[i] - '0';\n            int sum = aChar ^ bChar ^ carry;\n            carry = sum / 2;\n            sum = sum % 2;\n            result[i] = sum + '0';\n        }\n        while (carry != 0) {\n            result[resultLength - 1] = carry + '0';\n            carry = carry / 2;\n            resultLength++;\n        }\n        return string.Join(\"\", result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Strings must be of equal length\");\n        }\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            result = result ^ (int)a[i] ^ (int)b[i];\n        }\n        return BitConverter.ToString(result);",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of same length\");\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < aLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)(x + '0')).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int i, j, k, l;\n        int[] ai = new int[a.Length()];\n        int[] bi = new int[b.Length()];\n        for (i = 0; i < a.Length(); i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (i = 0; i < b.Length(); i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length()];\n        for (i = 0; i < a.Length(); i++) {\n            for (j = 0; j < b.Length(); j++) {\n                result[i] = result[i] ^ (ai[i] ^ bi[j]);\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for (i = 0; i < result.Length; i++) {\n            sb.Append(result[i]);\n        }\n        return sb.ToString();",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(res).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n        }\n        return result.ToString();",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).ToArray());",
    "        int i, j, k;\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (i = 0; i < a.Length; i++) {\n            for (j = 0; j < b.Length; j++) {\n                result[i] += (ai[i] ^ bi[j]) % 2;\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for (i = 0; i < a.Length; i++) {\n            sb.Append(result[i]);\n        }\n        return sb.ToString();",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            res[i] = ai[i] ^ bi[i];\n        return string.Join(\",\", Enumerable.Of(res).ToArray());",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        int[] aInts = new int[aLength];\n        int[] bInts = new int[bLength];\n        for (int i = 0; i < aLength; i++) {\n            aInts[i] = a[i] - '0';\n        }\n        for (int i = 0; i < bLength; i++) {\n            bInts[i] = b[i] - '0';\n        }\n        int[] resultInts = new int[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            resultInts[i] = aInts[i] ^ bInts[i];\n        }\n        string result = \"\";\n        for (int i = 0; i < resultLength; i++) {\n            result += resultInts[i];\n        }\n        return result;",
    "        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)(((int)a[i] ^ (int)b[i]) & 0xFF);\n        }\n        return new string(result);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\", \", Enumerable.Of(result).Select(x => (char)(x + '0')).ToList());",
    "        // Write your code here\n        int[] a_int = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            a_int[i] = a[i] - '0';\n        int[] b_int = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            b_int[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = a_int[i] ^ b_int[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => \"1\" + x + \"0\").ToArray());",
    "        // Write your code here\n        int a_len = a.Length;\n        int b_len = b.Length;\n        if (a_len != b_len)\n            throw new Exception(\"Input strings must be of same length\");\n        int result = 0;\n        for (int i = 0; i < a_len; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result++;\n            else if (a[i] == '0' && b[i] == '0')\n                result++;\n            else\n                throw new Exception(\"Input strings must be of same length\");\n        }\n        return (new string(Int32.ToString(result)));",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n            else if (a[i] == '0' && b[i] == '0')\n                result = result ^ 0;\n            else\n                throw new Exception(\"Input strings must be binary\");\n        }\n        return result.ToString();",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int i, j, k, l;\n        int m = a.Length;\n        int n = b.Length;\n        int[] ai = new int[m];\n        int[] bi = new int[n];\n        for (i = 0; i < m; i++) {\n            ai[i] = a[i] - '0';\n        }\n        for (i = 0; i < n; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[m + n];\n        for (i = 0; i < m; i++) {\n            for (j = 0; j < n; j++) {\n                result[i + j] = ai[i] ^ bi[j];\n            }\n        }\n        for (i = 0; i < m + n; i++) {\n            result[i] = result[i] + '0';\n        }\n        return String.Join(\"\", result);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            result[i] = ai[i] ^ bi[i];\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToList());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n        }\n        return (result == 0 ? \"0\" : \"1\");",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\",\", Enumerable.Of(result).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n        }\n        return result.ToString();",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of<string>(result).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        int aIndex = 0;\n        int bIndex = 0;\n        int result = 0;\n        while (aIndex < aLength && bIndex < bLength) {\n            if (a[aIndex] == '1' && b[bIndex] == '1') {\n                result = result ^ 1;\n            }\n            aIndex++;\n            bIndex++;\n        }\n        return result == 0 ? \"0\" : \"1\";",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        int maxLength = Math.Max(aLength, bLength);\n        int[] aArray = new int[maxLength];\n        int[] bArray = new int[maxLength];\n        for (int i = 0; i < maxLength; i++) {\n            aArray[i] = a[i] - '0';\n            bArray[i] = b[i] - '0';\n        }\n        int[] resultArray = new int[maxLength];\n        for (int i = 0; i < maxLength; i++) {\n            resultArray[i] = aArray[i] ^ bArray[i];\n        }\n        string result = \"\";\n        for (int i = 0; i < maxLength; i++) {\n            result += (char)(resultArray[i] + '0');\n        }\n        return result;",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            res[i] = ai[i] ^ bi[i];\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n        }\n        return result.ToString();",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)(x + '0')).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of same length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < resultLength; i++) {\n            result[i] = (char)((int)a[i] ^ (int)b[i]);\n        }\n        return new string(result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        string resultString = \"\";\n        for (int i = 0; i < result.Length; i++) {\n            resultString += (char)(result[i] + '0');\n        }\n        return resultString;",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            result[i] = ai[i] ^ bi[i];\n        return string.Join(\",\", string.Format(\"{0:X}\", result));",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", result);",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            result = result ^ (int)a[i] ^ (int)b[i];\n        }\n        return BitConverter.ToString(result);",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength) {\n            throw new Exception(\"Input strings must be of equal length\");\n        }\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < aLength; i++) {\n            result[i] = (char)(((int)a[i] ^ (int)b[i]) & 0xFF);\n        }\n        return new string(result);",
    "        // Write your code here\n        int len = a.Length;\n        if (len != b.Length)\n            throw new Exception(\"Input strings must be of equal length\");\n        int[] ai = new int[len];\n        int[] bi = new int[len];\n        for (int i = 0; i < len; i++) {\n            if (a[i] == '1')\n                ai[i] = 1;\n            else\n                ai[i] = 0;\n            if (b[i] == '1')\n                bi[i] = 1;\n            else\n                bi[i] = 0;\n        }\n        int[] res = new int[len];\n        for (int i = 0; i < len; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return BitConverter.ToString(res);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] result = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            result[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(result).Select(x => (char)('0' + x)).ToArray());",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        int resultLength = aLength > bLength ? aLength : bLength;\n        int i = 0;\n        int j = 0;\n        int k = 0;\n        int carry = 0;\n        int result = 0;\n        while (i < aLength && j < bLength) {\n            if (a[i] == '1' && b[j] == '1') {\n                result = result ^ 1;\n            }\n            else if (a[i] == '0' && b[j] == '0') {\n                result = result ^ 0;\n            }\n            else {\n                carry = 1;\n            }\n            i++;\n            j++;\n            k++;\n        }\n        while (i < aLength) {\n            if (a[i] == '1') {\n                result = result ^ 1;\n            }\n            else {\n                carry = 1;\n            }\n            i++;\n        }\n        while (j < bLength) {\n            if (b[j] == '1') {\n                result = result ^ 1;\n            }\n            else {\n                carry = 1;\n            }\n            j++;\n        }\n        if (carry == 1) {\n            result = result ^ 1;\n        }\n        StringBuilder resultBuilder = new StringBuilder(resultLength);\n        for (int l = resultLength - 1; l >= 0; l--) {\n            resultBuilder.Append(result % 2);\n            result = result / 2;\n        }\n        return resultBuilder.ToString();",
    "        int i, j, k;\n        int lenA = a.Length;\n        int lenB = b.Length;\n        int len = lenA > lenB ? lenA : lenB;\n        char[] result = new char[len];\n        for (i = 0; i < len; i++) {\n            result[i] = '0';\n        }\n        for (i = 0; i < lenA; i++) {\n            if (a[i] == '1') {\n                for (j = 0; j < lenB; j++) {\n                    if (b[j] == '1') {\n                        result[i + j] = '1';\n                    }\n                }\n            }\n        }\n        return new string(result);",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\",\", Enumerable.Of(res).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return string.Join(\"\", Enumerable.Of(res).OrderBy(x => x).ToArray());",
    "        // Write your code here\n        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++)\n            ai[i] = a[i] - '0';\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++)\n            bi[i] = b[i] - '0';\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).ToArray());",
    "        int[] ai = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            ai[i] = a[i] - '0';\n        }\n        int[] bi = new int[b.Length];\n        for (int i = 0; i < b.Length; i++) {\n            bi[i] = b[i] - '0';\n        }\n        int[] res = new int[a.Length];\n        for (int i = 0; i < a.Length; i++) {\n            res[i] = ai[i] ^ bi[i];\n        }\n        return String.Join(\"\", Enumerable.Of(res).Select(x => (char)('0' + x)).ToArray());",
    "        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int resultLength = aLength;\n        char[] result = new char[resultLength];\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result[i] = '1';\n            else if (a[i] == '0' && b[i] == '0')\n                result[i] = '0';\n            else\n                throw new Exception(\"Input strings must be of equal length\");\n        }\n        return string(result);",
    "        int ai = 0, bi = 0;\n        int ai_len = a.Length;\n        int bi_len = b.Length;\n        int result = 0;\n        while (ai < ai_len && bi < bi_len) {\n            if (a[ai] == '1') {\n                result |= 1;\n            }\n            if (b[bi] == '1') {\n                result |= 2;\n            }\n            ai++;\n            bi++;\n        }\n        return (new stringBuilder(a.Length)).Append(result).ToString();",
    "        // Write your code here\n        int aLength = a.Length;\n        int bLength = b.Length;\n        if (aLength != bLength)\n            throw new Exception(\"Input strings must be of equal length\");\n        int result = 0;\n        for (int i = 0; i < aLength; i++) {\n            if (a[i] == '1' && b[i] == '1')\n                result = result ^ 1;\n        }\n        return BitConverter.ToString(result);"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
name: HumanEval_102_choose_num
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // This function takes two positive numbers x and y and returns\
  \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
  \ If \n    // there's no such number, then the function should return -1.\n    //\
  \ For example:\n    // >>> ChooseNum((12L), (15L))\n    // (14L)\n    // >>> ChooseNum((13L),\
  \ (12L))\n    // (-1L)\n    public static long ChooseNum(long x, long y) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ChooseNum((12L),\
  \ (15L)) == (14L));\n    Debug.Assert(ChooseNum((13L), (12L)) == (-1L));\n    Debug.Assert(ChooseNum((33L),\
  \ (12354L)) == (12354L));\n    Debug.Assert(ChooseNum((5234L), (5233L)) == (-1L));\n\
  \    Debug.Assert(ChooseNum((6L), (29L)) == (28L));\n    Debug.Assert(ChooseNum((27L),\
  \ (10L)) == (-1L));\n    Debug.Assert(ChooseNum((7L), (7L)) == (-1L));\n    Debug.Assert(ChooseNum((546L),\
  \ (546L)) == (546L));\n    }\n\n}\n"
completions: ["        // Your code here\n        long result = -1;\n        if (x\
    \ > y)\n            return result;\n        long low = x;\n        long high =\
    \ y;\n        long mid = (low + high) / 2;\n        while (low <= high) {\n  \
    \          if (mid % 2 == 0) {\n                result = mid;\n              \
    \  break;\n            }\n            if (mid < x)\n                low = mid\
    \ + 1;\n            else if (mid > y)\n                high = mid - 1;\n     \
    \       else\n                return result;\n            mid = (low + high) /\
    \ 2;\n        }\n        return result;", "        if (x > y)\n            return\
    \ -1;\n        long n = x;\n        while (n <= y) {\n            if (n % 2 ==\
    \ 0)\n                return n;\n            n += 1;\n        }\n        return\
    \ -1;", "        // Write your code here\n        if (x > y)\n            return\
    \ -1;\n        long l = x;\n        long r = y;\n        long mid = (l + r) /\
    \ 2;\n        while (l <= r) {\n            if (mid % 2 == 0) {\n            \
    \    if (mid == x || mid == y)\n                    return mid;\n            \
    \    else\n                    return -1;\n            }\n            if (mid\
    \ < x)\n                l = mid + 1;\n            else if (mid > y)\n        \
    \        r = mid - 1;\n            else\n                return -1;\n        \
    \    mid = (l + r) / 2;\n        }\n        return -1;", "        long result\
    \ = -1;\n        if (x > y) {\n            throw new Exception(\"ChooseNum: x\
    \ must be <= y\");\n        }\n        if (x == y) {\n            return x;\n\
    \        }\n        if (x % 2 == 0) {\n            result = x;\n        }\n  \
    \      else {\n            result = y;\n        }\n        return result;", " \
    \       if (x > y)\n            return -1;\n        long num = 0;\n        while\
    \ (x <= y) {\n            num = num * 2 + 1;\n            x = x * 2 + 1;\n   \
    \     }\n        return num;", "        // Write your code here\n        long\
    \ max = (long) Math.pow(2, (int) Math.log(y - x + 1) / Math.log(2));\n       \
    \ long min = max - 1;\n        for (long i = max; i >= min; i--) {\n         \
    \   if (x <= i && i <= y) {\n                return i;\n            }\n      \
    \  }\n        return -1;", "        if (x > y)\n            throw new Exception(\"\
    ChooseNum: x > y\");\n        if (x == y)\n            return x;\n        long\
    \ max = x + y;\n        long min = x - y;\n        long mid = 0;\n        while\
    \ (min < max) {\n            mid = (min + max) / 2;\n            if (mid % 2 ==\
    \ 0)\n                max = mid;\n            else\n                min = mid\
    \ + 1;\n        }\n        return max;", "        if (x > y)\n            throw\
    \ new ArgumentOutOfRangeException(\"x\");\n        if (x == y)\n            return\
    \ x;\n        long max = (x + y) / 2;\n        long min = max - 1;\n        while\
    \ (min <= max) {\n            long mid = (min + max) / 2;\n            if (mid\
    \ % 2 == 0 && mid >= x && mid <= y)\n                return mid;\n           \
    \ if (mid < x)\n                min = mid + 1;\n            else if (mid > y)\n\
    \                max = mid - 1;\n            else\n                throw new ArgumentException(\"\
    x and y are equal\");\n        }\n        return -1;", "        if (x > y)\n \
    \           throw new Exception(\"ChooseNum: x > y\");\n        if (x == y)\n\
    \            return x;\n        if (x == 0)\n            return -1;\n        if\
    \ (y == 0)\n            return -1;\n        if (x == 1)\n            return 2;\n\
    \        if (y == 1)\n            return 2;\n        if (x == 2)\n           \
    \ return 4;\n        if (y == 2)\n            return 4;\n        if (x == 3)\n\
    \            return 6;\n        if (y == 3)\n            return 6;\n        if\
    \ (x == 4)\n            return 8;\n        if (y == 4)\n            return 8;\n\
    \        if (x == 5)\n            return 10;\n        if (y == 5)\n          \
    \  return 10;\n        if (x == 6)\n            return 12;\n        if (y == 6)\n\
    \            return 12;\n        if (x == 7)\n            return 14;\n       \
    \ if (y == 7)\n            return 14;\n        if (x == 8)\n            return\
    \ 16;\n        if (y == 8)\n            return 16;\n        if (x == 9)\n    \
    \        return 18;\n        if (y == 9)\n            return 18;\n        if (x\
    \ == 10)\n            return 20;\n        if (y == 10)\n            return 20;\n\
    \        if (x == 11)\n            return 22;\n        if (y == 11)\n        \
    \    return 22;\n        if (x == 12)\n            return 24;\n        if (y ==\
    \ 12)\n            return 24;\n        if (x == 13)\n            return 26;\n\
    \        if (y == 13)\n            return 26;\n        if (x == 14)\n        \
    \    return 28;\n        if (y == 14)\n            return 28;\n        if (x ==\
    \ 15)\n            return 30;\n        if (y == 15)\n            return 30;\n\
    \        if (x == 16)\n            return 32;\n        if (y == 16)\n        \
    \    return 32;\n        if (x == 17)\n            return 34;\n        if (y ==\
    \ 17)\n            return 34;\n        if (x == 18)\n", "        long max = x\
    \ - y;\n        long min = x;\n        long mid = (max + min) / 2;\n        while\
    \ (min <= max) {\n            if (mid % 2 == 0) {\n                return mid;\n\
    \            }\n            if (mid < x) {\n                min = mid + 1;\n \
    \           }\n            else {\n                max = mid - 1;\n          \
    \  }\n            mid = (max + min) / 2;\n        }\n        return -1;", "  \
    \      long result = -1;\n        // Your code here\n        return result;",
  "        // Write your code here\n        if (x > y)\n            return -1;\n \
    \       long max = x;\n        long min = y;\n        long mid = (max + min) /\
    \ 2;\n        while (max - min > 1) {\n            if (mid % 2 == 0) {\n     \
    \           max = mid;\n            }\n            else {\n                min\
    \ = mid;\n            }\n            mid = (max + min) / 2;\n        }\n     \
    \   return max;", "        // Write your code here\n        if (x > y) {\n   \
    \         return -1;\n        }\n        long result = x;\n        for (long i\
    \ = x + 1; i <= y; i++) {\n            if (i % 2 == 0) {\n                result\
    \ = i;\n            }\n        }\n        return result;", "        if (x > y)\n\
    \            throw new Exception(\"ChooseNum: x > y\");\n        long result =\
    \ -1;\n        for (long i = x; i <= y; i += 2) {\n            if (i > y)\n  \
    \              break;\n            if (i == y)\n                result = i;\n\
    \        }\n        return result;", "        // Write your code here\n      \
    \  if (x > y)\n            return -1;\n        long max = x;\n        long min\
    \ = y;\n        while (max - min > 1) {\n            long mid = (max + min) /\
    \ 2;\n            if (mid % 2 == 0) {\n                max = mid;\n          \
    \  }\n            else {\n                min = mid;\n            }\n        }\n\
    \        return max;", "        long num = -1;\n        if (x > y) {\n       \
    \     throw new Exception(\"ChooseNum: x > y\");\n        }\n        if (x ==\
    \ y) {\n            return x;\n        }\n        if (x < 2) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            num = x;\n        }\n\
    \        else {\n            num = x + 1;\n        }\n        while (num < y)\
    \ {\n            if (num % 2 == 0) {\n                num += 2;\n            }\n\
    \            else {\n                num += 1;\n            }\n        }\n   \
    \     return num;", "        if (x > y)\n            throw new Exception(\"ChooseNum:\
    \ x > y\");\n        if (x == y)\n            return x;\n        long num = x\
    \ + y;\n        if (num % 2 == 0)\n            return num;\n        else\n   \
    \         return -1;", "        long result = -1;\n        if (x > y) {\n    \
    \        throw new Exception(\"ChooseNum: x > y\");\n        }\n        if (x\
    \ == y) {\n            return x;\n        }\n        if (x < 2) {\n          \
    \  return -1;\n        }\n        if (x % 2 == 0) {\n            result = x;\n\
    \        }\n        else {\n            result = x + 1;\n        }\n        if\
    \ (result > y) {\n            return -1;\n        }\n        return result;",
  "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"x\");\n\
    \        if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        long result = -1;\n        for (long i = x; i <= y; i += 2) {\n\
    \            if (i > y)\n                break;\n            result = i;\n   \
    \     }\n        return result;", "        // Write your code here\n        if\
    \ (x > y)\n            return -1;\n        long result = x;\n        for (long\
    \ i = x + 1; i <= y; i++) {\n            if (i % 2 == 0) {\n                result\
    \ = i;\n                break;\n            }\n        }\n        return result;",
  "        long max = Math.Max(x, y);\n        long min = Math.Min(x, y);\n      \
    \  if (min % 2 == 0) {\n            return min;\n        }\n        else {\n \
    \           return -1;\n        }", "        long result = -1;\n        // Your\
    \ code here\n        if (x > y) {\n            return result;\n        }\n   \
    \     if (x == y) {\n            return x;\n        }\n        if (x < y) {\n\
    \            return result;\n        }\n        long i = x;\n        while (i\
    \ <= y) {\n            if (i % 2 == 0) {\n                result = i;\n      \
    \          break;\n            }\n            i++;\n        }\n        return\
    \ result;", "        // Write your code here\n        return -1;", "        if\
    \ (x > y)\n            return -1;\n        long n = x;\n        while (n <= y)\
    \ {\n            if (n % 2 == 0)\n                return n;\n            n +=\
    \ 2;\n        }\n        return -1;", "        // Write your code here\n     \
    \   return -1;", "        long max = (y - x) + 1;\n        long num = -1;\n  \
    \      for (long i = x; i <= y; i++) {\n            if (i % 2 == 0 && i <= max)\
    \ {\n                num = i;\n                max = i;\n            }\n     \
    \   }\n        return num;", "        // Your code here\n        return -1;",
  "        if (x > y)\n            throw new Exception(\"ChooseNum: x must be <= y\"\
    );\n        if (x == y)\n            return x;\n        long num = x + (y - x)\
    \ / 2;\n        if (num % 2 == 0)\n            return num;\n        else\n   \
    \         return -1;", "        if (x > y)\n            return -1;\n        long\
    \ result = -1;\n        for (long i = x; i <= y; i += 2) {\n            if (i\
    \ > y)\n                break;\n            if (i > x && i % 2 == 0) {\n     \
    \           result = i;\n                break;\n            }\n        }\n  \
    \      return result;", "        // Write your code here\n        long max = -1;\n\
    \        for (long i = x; i <= y; i += 2) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;", "     \
    \   long result = -1;\n        if (x > y) {\n            throw new Exception(\"\
    ChooseNum: x must be <= y\");\n        }\n        if (x == y) {\n            return\
    \ x;\n        }\n        if (x == 1) {\n            return 2;\n        }\n   \
    \     if (x == 2) {\n            return 2;\n        }\n        if (x % 2 == 0)\
    \ {\n            result = x;\n        }\n        else {\n            result =\
    \ x + 1;\n        }\n        if (result > y) {\n            return result;\n \
    \       }\n        if (result < x) {\n            return result;\n        }\n\
    \        if (result == x) {\n            return result;\n        }\n        if\
    \ (result == y) {\n            return result;\n        }\n        return result;",
  "        // Write your code here\n        if (x > y) return -1;\n        long max\
    \ = x;\n        for (long i = x + 1; i <= y; i++) {\n            if (i % 2 ==\
    \ 0) {\n                max = i;\n            }\n        }\n        return max;",
  "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"x\");\n\
    \        if (x < 0)\n            throw new ArgumentOutOfRangeException(\"x\");\n\
    \        if (y < 0)\n            throw new ArgumentOutOfRangeException(\"y\");\n\
    \        long num = -1;\n        for (long i = x; i <= y; i += 2) {\n        \
    \    if (i >= x && i <= y) {\n                num = i;\n                break;\n\
    \            }\n        }\n        return num;", "        long result = -1;\n\
    \        if (x > y) {\n            throw new Exception(\"ChooseNum: x must be\
    \ less than or equal to y\");\n        }\n        if (x == y) {\n            return\
    \ x;\n        }\n        if (x == y + 1) {\n            return y;\n        }\n\
    \        if (x % 2 == 0) {\n            result = x;\n        }\n        else {\n\
    \            result = y;\n        }\n        if (result < x) {\n            result\
    \ = -1;\n        }\n        return result;", "        if (x > y)\n           \
    \ throw new Exception(\"ChooseNum: x > y\");\n        if (x == y)\n          \
    \  return x;\n        long result = -1;\n        for (long i = x; i <= y; i +=\
    \ 2) {\n            if (i > y)\n                break;\n            if (i > x\
    \ && i % 2 == 0)\n                result = i;\n        }\n        return result;",
  "        if (x > y)\n            return -1;\n        long num = x;\n        while\
    \ (num <= y) {\n            if (num % 2 == 0)\n                return num;\n \
    \           num += 1;\n        }\n        return -1;", "        if (x > y)\n \
    \           throw new ArgumentOutOfRangeException(\"x\");\n        if (x < 0 ||\
    \ y < 0)\n            throw new ArgumentOutOfRangeException(\"x and y\");\n  \
    \      long num = 0;\n        for (long i = x; i <= y; i += 2)\n            num\
    \ = Math.Max(num, i);\n        return num;", "        long result = -1;\n    \
    \    if (x > y) {\n            throw new Exception(\"ChooseNum: x > y\");\n  \
    \      }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x < 2) {\n            return -1;\n        }\n        if (x % 2 == 0) {\n  \
    \          result = x;\n        }\n        else {\n            result = x - 1;\n\
    \        }\n        while (result < y) {\n            result += 2;\n        }\n\
    \        return result;", "        if (x > y)\n            throw new Exception(\"\
    ChooseNum: x > y\");\n        if (x == y)\n            return x;\n        if (x\
    \ == 0)\n            return -1;\n        if (y == 0)\n            return -1;\n\
    \        long num = 0;\n        while (x <= y) {\n            num = x;\n     \
    \       x = x + 2;\n        }\n        return num;", "        if (x > y)\n   \
    \         return -1;\n        long num = 0;\n        while (x <= y) {\n      \
    \      num = num * 2 + 1;\n            x = x * 2 + 1;\n        }\n        return\
    \ num;", "        // Write your code here\n        if (x > y)\n            return\
    \ -1;\n        long result = 0;\n        long i = x;\n        while (i <= y) {\n\
    \            if (i % 2 == 0) {\n                result = i;\n                break;\n\
    \            }\n            i++;\n        }\n        return result;", "      \
    \  if (x > y) {\n            throw new ArgumentOutOfRangeException(\"x\");\n \
    \       }\n        if (x < 0 || y < 0) {\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        }\n        if (x == y) {\n            return x;\n        }\n  \
    \      long num = 0;\n        while (x <= y) {\n            num = x;\n       \
    \     x = x + 2;\n        }\n        return num;", "        long n = (x - 1) /\
    \ 2;\n        while (n <= y / 2) {\n            if (n % 2 == 0) {\n          \
    \      return n;\n            }\n            n++;\n        }\n        return -1;",
  "        if (x > y) {\n            throw new ArgumentOutOfRangeException(\"x\");\n\
    \        }\n        if (x < 0 || y < 0) {\n            throw new ArgumentOutOfRangeException(\"\
    x and y\");\n        }\n        if (x == y) {\n            return x;\n       \
    \ }\n        long max = x + y;\n        long min = x - y;\n        if (max % 2\
    \ == 0) {\n            return max;\n        }\n        if (min % 2 == 0) {\n \
    \           return min;\n        }\n        return -1;", "        // Your code\
    \ here\n        return -1;", "        // Write your code here\n        long max\
    \ = x;\n        if (y > x) {\n            max = y;\n        }\n        long result\
    \ = -1;\n        for (long i = x; i <= max; i += 2) {\n            if (i <= y)\
    \ {\n                result = i;\n            }\n        }\n        return result;",
  "        if (x > y)\n            return -1;\n        if (x == y)\n            return\
    \ x;\n        long max = x + y;\n        long min = x - y;\n        long mid =\
    \ (max + min) / 2;\n        if (mid % 2 == 0)\n            return mid;\n     \
    \   if (mid < x)\n            return ChooseNum(mid + 1, y);\n        else\n  \
    \          return ChooseNum(x, mid - 1);", "        long num = -1;\n        if\
    \ (x > y) {\n            throw new Exception(\"Invalid range\");\n        }\n\
    \        if (x == y) {\n            return x;\n        }\n        if (x % 2 ==\
    \ 0) {\n            num = x;\n        }\n        else {\n            num = y;\n\
    \        }\n        while (num >= x && num <= y) {\n            if (num % 2 ==\
    \ 0) {\n                return num;\n            }\n            num += 2;\n  \
    \      }\n        return num;", "        if (x > y) {\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        }\n        if (x == y) {\n            return x;\n        }\n  \
    \      long max = x + y;\n        long min = x - y;\n        if (min < 0) {\n\
    \            min = 0;\n        }\n        if (max < 0) {\n            max = 0;\n\
    \        }\n        long mid = 0;\n        while (min <= max) {\n            mid\
    \ = (min + max) / 2;\n            if (mid % 2 == 0) {\n                if (mid\
    \ >= x && mid <= y) {\n                    return mid;\n                }\n  \
    \              else {\n                    max = mid - 1;\n                }\n\
    \            }\n            else {\n                min = mid + 1;\n         \
    \   }\n        }\n        return -1;", "        if (x > y)\n            throw\
    \ new ArgumentOutOfRangeException(\"x\");\n        if (x == y)\n            return\
    \ x;\n        long num = x + y;\n        if (num % 2 == 0)\n            return\
    \ num;\n        else\n            return -1;", "        if (x > y)\n         \
    \   return -1;\n        long max = (x + y) / 2;\n        long min = max - 1;\n\
    \        while (min <= max) {\n            long mid = min + (max - min) / 2;\n\
    \            if (mid % 2 == 0 && mid >= x && mid <= y)\n                return\
    \ mid;\n            if (mid < x)\n                min = mid + 1;\n           \
    \ else if (mid > y)\n                max = mid - 1;\n            else\n      \
    \          return -1;\n        }\n        return -1;", "        if (x > y)\n \
    \           return -1;\n        long max = x + y;\n        long min = x - y;\n\
    \        if (max % 2 == 0)\n            return max;\n        if (min % 2 == 0)\n\
    \            return min;\n        if (max % 2 == 1)\n            return max -\
    \ 1;\n        if (min % 2 == 1)\n            return min + 1;\n        return -1;",
  "        // Write your code here\n        return -1;", "        long max = (y -\
    \ x) / 2;\n        long result = -1;\n        for (long i = x; i <= y; i++) {\n\
    \            if (i % 2 == 0 && i <= max) {\n                result = i;\n    \
    \            max = i - 1;\n            }\n        }\n        return result;",
  "        // Write your code here\n        if (x > y)\n            return -1;\n \
    \       long max = x;\n        long min = y;\n        while (max >= min) {\n \
    \           long mid = (max + min) / 2;\n            if (mid % 2 == 0)\n     \
    \           max = mid;\n            else\n                min = mid + 1;\n   \
    \     }\n        return max;", "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        if (x == y)\n            return x;\n        if (x < 0 || y < 0)\n\
    \            throw new ArgumentOutOfRangeException(\"x and y\");\n        long\
    \ l = x - 1;\n        long r = y + 1;\n        while (l < r) {\n            long\
    \ m = (l + r) / 2;\n            if (m % 2 == 0)\n                r = m;\n    \
    \        else\n                l = m + 1;\n        }\n        return l;", "  \
    \      // Write your code here\n        return -1;", "        long max = (x >\
    \ y) ? x : y;\n        long min = (x > y) ? y : x;\n        long mid = (x + y)\
    \ / 2;\n        if (mid % 2 == 0) {\n            return mid;\n        }\n    \
    \    if (mid < max) {\n            return ChooseNum(mid + 1, max);\n        }\n\
    \        if (mid > min) {\n            return ChooseNum(min, mid - 1);\n     \
    \   }\n        return -1;", "        // Write your code here\n        if (x >\
    \ y)\n            return -1;\n        long result = -1;\n        long i = x;\n\
    \        while (i <= y) {\n            if (i % 2 == 0) {\n                result\
    \ = i;\n                break;\n            }\n            i++;\n        }\n \
    \       return result;", "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        if (x == y)\n            return x;\n        long n = x + y;\n \
    \       if (n % 2 == 0)\n            return n;\n        else\n            return\
    \ -1;", "        if (x > y) {\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        }\n        if (x < 0 || y < 0) {\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        }\n        long num = 0;\n        while (x <= y) {\n          \
    \  num = x;\n            x = x + 2;\n        }\n        return num;", "      \
    \  // Write your code here\n        long max = x;\n        long min = y;\n   \
    \     if (x > y) {\n            max = y;\n            min = x;\n        }\n  \
    \      long mid = (max + min) / 2;\n        while (max - min > 1) {\n        \
    \    if (mid % 2 == 0) {\n                max = mid;\n            }\n        \
    \    else {\n                min = mid;\n            }\n            mid = (max\
    \ + min) / 2;\n        }\n        if (mid % 2 == 0) {\n            return mid;\n\
    \        }\n        else {\n            return -1;\n        }", "        // Write\
    \ your code here\n        long max = -1;\n        for (long i = x; i <= y; i +=\
    \ 2) {\n            if (i > max) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        long max = (long)Math.pow(2, 63) -\
    \ 1;\n        if (x > max || y > max)\n            return -1;\n        long min\
    \ = Math.min(x, y);\n        long max_even = min + 1;\n        while (max_even\
    \ <= max) {\n            if (max_even % 2 == 0 && max_even <= max)\n         \
    \       return max_even;\n            max_even += 2;\n        }\n        return\
    \ -1;", "        // Write your code here\n        return -1;", "        if (x\
    \ > y)\n            throw new Exception(\"ChooseNum: x > y\");\n        if (x\
    \ == y)\n            return x;\n        long max = x + y;\n        if (max % 2\
    \ == 0)\n            return max;\n        else\n            return -1;", "   \
    \     // Write your code here\n        long l = x;\n        long r = y;\n    \
    \    long mid = (l + r) / 2;\n        while (l <= r) {\n            if (mid %\
    \ 2 == 0) {\n                return mid;\n            }\n            if (mid <\
    \ x) {\n                l = mid + 1;\n            }\n            else {\n    \
    \            r = mid - 1;\n            }\n            mid = (l + r) / 2;\n   \
    \     }\n        return -1;", "        if (x > y) {\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        }\n        if (x == y) {\n            return x;\n        }\n  \
    \      long num = 0;\n        while (x <= y) {\n            num = x;\n       \
    \     x = x + 2;\n        }\n        return num;", "        if (x > y)\n     \
    \       throw new ArgumentOutOfRangeException(\"x\");\n        if (x < 0 || y\
    \ < 0)\n            throw new ArgumentOutOfRangeException(\"y\");\n        if\
    \ (x == y)\n            return x;\n        long num = 0;\n        while (x <=\
    \ y) {\n            num = x;\n            x = x + 2;\n        }\n        return\
    \ num;", "        // Write your code here\n        return -1;", "        if (x\
    \ > y)\n            return -1;\n        long num = x;\n        while (num <= y)\
    \ {\n            if (num % 2 == 0)\n                return num;\n            num\
    \ += 1;\n        }\n        return -1;", "        // Write your code here\n  \
    \      if (x > y)\n            return -1;\n        long result = -1;\n       \
    \ for (long i = x; i <= y; i += 2) {\n            if (i >= x && i <= y) {\n  \
    \              result = i;\n                break;\n            }\n        }\n\
    \        return result;", "        // Write your code here\n        long result\
    \ = -1;\n        if (x > y) {\n            return result;\n        }\n       \
    \ long max = x - y + 1;\n        for (long i = x; i <= max; i++) {\n         \
    \   if (i % 2 == 0) {\n                result = i;\n                break;\n \
    \           }\n        }\n        return result;", "        // Write your code\
    \ here\n        long max = -1;\n        for (long i = x; i <= y; i++) {\n    \
    \        if (i % 2 == 0 && i > max) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        if (x > y) {\n            throw new\
    \ Exception(\"ChooseNum: x > y\");\n        }\n        if (x == y) {\n       \
    \     return x;\n        }\n        long result = -1;\n        long i = x;\n \
    \       while (i <= y) {\n            if (i % 2 == 0) {\n                result\
    \ = i;\n                break;\n            }\n            i += 1;\n        }\n\
    \        return result;", "        // Write your code here\n        if (x > y)\
    \ return -1;\n        long num = x;\n        while (num <= y) {\n            if\
    \ (num % 2 == 0) {\n                return num;\n            }\n            num\
    \ += 2;\n        }\n        return -1;", "        long result = -1;\n        if\
    \ (x > y) {\n            throw new Exception(\"ChooseNum: x must be <= y\");\n\
    \        }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x == 0) {\n            return 0;\n        }\n        if (x == 1) {\n      \
    \      return 2;\n        }\n        if (x == 2) {\n            return 2;\n  \
    \      }\n        if (x == 3) {\n            return 4;\n        }\n        if\
    \ (x == 4) {\n            return 4;\n        }\n        if (x == 5) {\n      \
    \      return 6;\n        }\n        if (x == 6) {\n            return 6;\n  \
    \      }\n        if (x == 7) {\n            return 8;\n        }\n        if\
    \ (x == 8) {\n            return 8;\n        }\n        if (x == 9) {\n      \
    \      return 10;\n        }\n        if (x == 10) {\n            return 10;\n\
    \        }\n        if (x == 11) {\n            return 12;\n        }\n      \
    \  if (x == 12) {\n            return 12;\n        }\n        if (x == 13) {\n\
    \            return 14;\n        }\n        if (x == 14) {\n            return\
    \ 14;\n        }\n        if (x == 15) {\n            return 16;\n        }\n\
    \        if (x == 16) {\n            return 16;\n        }\n        if (x == 17)\
    \ {\n            return 18;\n        }\n        if (x == 18) {\n            return\
    \ 18;\n        }\n        if (x == 19) {\n            return 20;\n        }\n\
    \        if (x == 20) {\n            return 20;\n        }\n        if (x == 21)\
    \ {\n            return 22;\n        }\n        if (x == 22) {\n            return\
    \ 22;\n        }\n        if (x == 23) {\n            return 24;\n        }\n\
    \        if (x == 24) {\n            return 24;\n        }\n        if (x == 25)\
    \ {\n            return 26;\n        }\n        if (x == 26) {\n            return\
    \ 26;\n        }\n        ", "        if (x > y)\n            throw new Exception(\"\
    ChooseNum: x > y\");\n        if (x < 0 || y < 0)\n            throw new Exception(\"\
    ChooseNum: x < 0 || y < 0\");\n        if (x == 0 || y == 0)\n            throw\
    \ new Exception(\"ChooseNum: x == 0 || y == 0\");\n        if (x == y)\n     \
    \       throw new Exception(\"ChooseNum: x == y\");\n        if (x > y)\n    \
    \        throw new Exception(\"ChooseNum: x > y\");\n        if (x == y)\n   \
    \         throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n \
    \           throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"ChooseNum: x == y\");\n        if (x == y)\n\
    \            throw new Exception(\"", "        // Your code here\n        return\
    \ -1;", "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        if (x == y)\n            return x;\n        long n = x;\n     \
    \   while (n <= y)\n            n += 2;\n        return n - 2;", "        // Write\
    \ your code here\n        long max = x;\n        long min = y;\n        if (x\
    \ > y) {\n            max = y;\n            min = x;\n        }\n        long\
    \ mid = (max + min) / 2;\n        while (max - min > 1) {\n            if (mid\
    \ % 2 == 0) {\n                max = mid;\n            }\n            else {\n\
    \                min = mid;\n            }\n            mid = (max + min) / 2;\n\
    \        }\n        if (mid % 2 == 0) {\n            return mid;\n        }\n\
    \        else {\n            return -1;\n        }", "        // Your code here\n\
    \        return -1;", "        long result = -1;\n        if (x > y) {\n     \
    \       throw new Exception(\"ChooseNum: x > y\");\n        }\n        if (x ==\
    \ y) {\n            return x;\n        }\n        if (x == 0) {\n            return\
    \ -1;\n        }\n        if (x == 1) {\n            return 2;\n        }\n  \
    \      if (x % 2 == 0) {\n            result = x;\n        }\n        if (x %\
    \ 2 == 1) {\n            result = x + 1;\n        }\n        if (result == -1)\
    \ {\n            return -1;\n        }\n        if (result > y) {\n          \
    \  return -1;\n        }\n        return result;", "        // Write your code\
    \ here\n        if (x > y)\n            return -1;\n        long max = x;\n  \
    \      for (long i = x + 1; i <= y; i++) {\n            if (i % 2 == 0) {\n  \
    \              if (i > max)\n                    max = i;\n            }\n   \
    \     }\n        return max;", "        long result = -1;\n        if (x > y)\
    \ {\n            throw new ArgumentOutOfRangeException(\"x\");\n        }\n  \
    \      if (x < 0 || y < 0) {\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        }\n        if (x == y) {\n            return x;\n        }\n  \
    \      if (x == 0) {\n            return 0;\n        }\n        if (y == 0) {\n\
    \            return 0;\n        }\n        if (x > y) {\n            return -1;\n\
    \        }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x == y - 1) {\n            return y;\n        }\n        if (x == y + 1) {\n\
    \            return y;\n        }\n        if (x == y - 2) {\n            return\
    \ y - 2;\n        }\n        if (x == y + 2) {\n            return y + 2;\n  \
    \      }\n        if (x == y - 3) {\n            return y - 3;\n        }\n  \
    \      if (x == y + 3) {\n            return y + 3;\n        }\n        if (x\
    \ == y - 4) {\n            return y - 4;\n        }\n        if (x == y + 4) {\n\
    \            return y + 4;\n        }\n        if (x == y - 5) {\n           \
    \ return y - 5;\n        }\n        if (x == y + 5) {\n            return y +\
    \ 5;\n        }\n        if (x == y - 6) {\n            return y - 6;\n      \
    \  }\n        if (x == y + 6) {\n            return y + 6;\n        }\n      \
    \  if (x == y - 7) {\n            return y - 7;\n        }\n        if (x == y\
    \ + 7) {\n            return y + 7;\n        }\n        if (x == y - 8) {\n  \
    \          return y - 8;\n        }\n        if (x == y + 8) {\n            return\
    \ y + 8;\n        }\n        if (x == y - 9) {\n            return y - 9;\n  \
    \      }\n        if (x == y + 9) {\n            return", "        // Write your\
    \ code here\n        return -1;", "        // Write your code here\n        return\
    \ -1;", "        // Write your code here\n        return -1;", "        if (x\
    \ > y)\n            throw new ArgumentOutOfRangeException(\"x\");\n        if\
    \ (x < 0)\n            throw new ArgumentOutOfRangeException(\"x\");\n       \
    \ if (y < 0)\n            throw new ArgumentOutOfRangeException(\"y\");\n    \
    \    if (x == y)\n            return x;\n        if (x == 0)\n            return\
    \ -1;\n        if (y == 0)\n            return -1;\n        if (x == 1)\n    \
    \        return 2;\n        if (y == 1)\n            return 2;\n        if (x\
    \ == 2)\n            return 4;\n        if (y == 2)\n            return 4;\n \
    \       if (x == 3)\n            return 6;\n        if (y == 3)\n            return\
    \ 6;\n        if (x == 4)\n            return 8;\n        if (y == 4)\n      \
    \      return 8;\n        if (x == 5)\n            return 10;\n        if (y ==\
    \ 5)\n            return 10;\n        if (x == 6)\n            return 12;\n  \
    \      if (y == 6)\n            return 12;\n        if (x == 7)\n            return\
    \ 14;\n        if (y == 7)\n            return 14;\n        if (x == 8)\n    \
    \        return 16;\n        if (y == 8)\n            return 16;\n        if (x\
    \ == 9)\n            return 18;\n        if (y == 9)\n            return 18;\n\
    \        if (x == 10)\n            return 20;\n        if (y == 10)\n        \
    \    return 20;\n        if (x == 11)\n            return 22;\n        if (y ==\
    \ 11)\n            return 22;\n        if (x == 12)\n            return 24;\n\
    \        if (y == 12)\n            return 24;\n        if (x == 13)\n        \
    \    return 26;\n        if (y == 13)\n            return 26;\n        if (x ==\
    \ 14)\n            return 28;\n        if (y == 14)\n            return 28;\n\
    \        if (x == 15)\n            return 30;\n        if (y == 15)\n        \
    \    return 30;\n        if (x == 16)\n            return 32;\n        if (y ==\
    \ 16)\n", "        if (x > y)\n            throw new Exception(\"ChooseNum: x\
    \ > y\");\n        if (x == y)\n            return x;\n        long i = x;\n \
    \       while (i <= y) {\n            if (i % 2 == 0)\n                return\
    \ i;\n            i++;\n        }\n        return -1;", "        if (x > y) {\n\
    \            throw new ArgumentOutOfRangeException(\"x\");\n        }\n      \
    \  if (x < 0 || y < 0) {\n            throw new ArgumentOutOfRangeException(\"\
    x and y\");\n        }\n        long num = 0;\n        while (x <= y) {\n    \
    \        if (x % 2 == 0) {\n                num = x;\n                break;\n\
    \            }\n            x += 1;\n        }\n        return num;", "      \
    \  // Write your code here\n        if (x > y)\n            return -1;\n     \
    \   long result = x;\n        for (long i = x + 1; i <= y; i++) {\n          \
    \  if (i % 2 == 0) {\n                result = i;\n            }\n        }\n\
    \        return result;", "        if (x > y)\n            return -1;\n      \
    \  long num = x;\n        while (num <= y) {\n            if (num % 2 == 0)\n\
    \                return num;\n            num += 2;\n        }\n        return\
    \ -1;", "        if (x > y)\n            return -1;\n        long num = x;\n \
    \       while (num <= y) {\n            if (num % 2 == 0)\n                return\
    \ num;\n            num += 1;\n        }\n        return -1;", "        if (x\
    \ > y) {\n            throw new Exception(\"Invalid range\");\n        }\n   \
    \     long num = -1;\n        for (long i = x; i <= y; i += 2) {\n           \
    \ if (i > y) {\n                break;\n            }\n            num = i;\n\
    \        }\n        return num;", "        if (x > y) {\n            throw new\
    \ ArgumentOutOfRangeException(\"x\");\n        }\n        if (x < 0 || y < 0)\
    \ {\n            throw new ArgumentOutOfRangeException(\"y\");\n        }\n  \
    \      long result = -1;\n        for (long i = x; i <= y; i += 2) {\n       \
    \     if (i > y) {\n                break;\n            }\n            result\
    \ = i;\n        }\n        return result;", "        long result = -1;\n     \
    \   if (x > y) {\n            throw new Exception(\"ChooseNum: x > y\");\n   \
    \     }\n        if (x == y) {\n            return x;\n        }\n        if (x\
    \ == 1) {\n            return 2;\n        }\n        if (x == 2) {\n         \
    \   return 2;\n        }\n        if (x % 2 == 0) {\n            result = x;\n\
    \        }\n        if (y % 2 == 0) {\n            result = y;\n        }\n  \
    \      if (x > y) {\n            result = y;\n        }\n        if (x > y) {\n\
    \            result = x;\n        }\n        return result;", "        if (x >\
    \ y)\n            throw new Exception(\"ChooseNum: x > y\");\n        if (x ==\
    \ y)\n            return x;\n        long max = (x > y) ? x : y;\n        long\
    \ min = (x > y) ? y : x;\n        long mid = min + (max - min) / 2;\n        if\
    \ (mid % 2 == 0)\n            return mid;\n        else\n            return -1;",
  "        // Write your code here\n        long max = (y - x) / 2;\n        long\
    \ result = -1;\n        for (long i = x; i <= y; i += 2) {\n            if (i\
    \ <= max) {\n                result = i;\n                max = i - 1;\n     \
    \       }\n        }\n        return result;", "        if (x > y)\n         \
    \   return -1;\n        long result = -1;\n        for (long i = x; i <= y; i\
    \ += 2) {\n            if (i % 2 == 0) {\n                result = i;\n      \
    \          break;\n            }\n        }\n        return result;", "      \
    \  if (x > y)\n            throw new ArgumentOutOfRangeException(\"x\");\n   \
    \     if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        if (x == y)\n            return x;\n        long i = x;\n     \
    \   while (i <= y) {\n            if (i % 2 == 0)\n                return i;\n\
    \            i++;\n        }\n        return -1;", "        long result = -1;\n\
    \        // Your code goes here\n        return result;", "        // Write your\
    \ code here\n        if (x > y)\n            return -1;\n        long l = x -\
    \ 1;\n        long r = y + 1;\n        while (l < r) {\n            long m = (l\
    \ + r) / 2;\n            if (m % 2 == 0)\n                r = m;\n           \
    \ else\n                l = m + 1;\n        }\n        return l;", "        if\
    \ (x > y)\n            throw new Exception(\"ChooseNum: x > y\");\n        if\
    \ (x == y)\n            return x;\n        if (x == 0)\n            return -1;\n\
    \        if (x == 1)\n            return 2;\n        if (x % 2 == 0)\n       \
    \     return x;\n        if (y % 2 == 0)\n            return -1;\n        long\
    \ num = x + y;\n        if (num % 2 == 0)\n            return num;\n        return\
    \ -1;", "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        long result = -1;\n        for (long i = x; i <= y; i += 2) {\n\
    \            if (i > y)\n                break;\n            if (i >= x && i <=\
    \ y && result < i)\n                result = i;\n        }\n        return result;",
  "        if (x > y)\n            return -1;\n        long result = -1;\n       \
    \ long i = x;\n        while (i <= y) {\n            if (i % 2 == 0) {\n     \
    \           result = i;\n                break;\n            }\n            i++;\n\
    \        }\n        return result;", "        // Write your code here\n      \
    \  long max = (long)Math.pow(2, 63) - 1;\n        long min = 0;\n        long\
    \ mid = (max + min) / 2;\n        while (x > mid || y < mid) {\n            if\
    \ (x > mid) {\n                min = mid;\n                mid = (max + min) /\
    \ 2;\n            }\n            else {\n                max = mid;\n        \
    \        mid = (max + min) / 2;\n            }\n        }\n        if (x == mid)\
    \ {\n            return mid;\n        }\n        else if (y == mid) {\n      \
    \      return mid;\n        }\n        else {\n            return -1;\n      \
    \  }", "        if (x > y)\n            throw new Exception(\"ChooseNum: x > y\"\
    );\n        if (x == y)\n            return x;\n        long n = x + y;\n    \
    \    if (n % 2 == 0)\n            return n;\n        else\n            return\
    \ -1;", "        if (x > y) return -1;\n        long result = -1;\n        for\
    \ (long i = x; i <= y; i += 2) {\n            if (i % 2 == 0) {\n            \
    \    result = i;\n                break;\n            }\n        }\n        return\
    \ result;", "        if (x > y)\n            return -1;\n        long max = (x\
    \ + y) / 2;\n        for (long i = x; i <= max; i++) {\n            if (i % 2\
    \ == 0 && i <= y)\n                return i;\n        }\n        return -1;",
  "        // Write your code here\n        long max = x;\n        long min = y;\n\
    \        if (x > y) {\n            max = y;\n            min = x;\n        }\n\
    \        for (long i = min; i <= max; i++) {\n            if (i % 2 == 0 && i\
    \ >= x && i <= y) {\n                return i;\n            }\n        }\n   \
    \     return -1;", "        if (x > y)\n            throw new Exception(\"ChooseNum:\
    \ x > y\");\n        if (x == y)\n            return x;\n        long num = -1;\n\
    \        for (long i = x; i <= y; i += 2) {\n            if (i > y)\n        \
    \        break;\n            num = i;\n        }\n        return num;", "    \
    \    if (x > y)\n            return -1;\n        long x_low = Math.Max(x, 2);\n\
    \        long x_high = Math.Min(x, y);\n        long y_low = Math.Max(2, y);\n\
    \        long y_high = Math.Min(y, x);\n        long num = 0;\n        for (long\
    \ i = x_low; i <= x_high; i++) {\n            for (long j = y_low; j <= y_high;\
    \ j++) {\n                if (i * j > num)\n                    num = i * j;\n\
    \            }\n        }\n        return num;", "        if (x > y)\n       \
    \     return -1;\n        long num = x;\n        while (num <= y) {\n        \
    \    if (num % 2 == 0)\n                return num;\n            num += 2;\n \
    \       }\n        return -1;", "        // Write your code here\n        return\
    \ -1;", "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        long num = -1;\n        for (long i = x; i <= y; i += 2) {\n  \
    \          if (i > y)\n                break;\n            num = i;\n        }\n\
    \        return num;", "        // Write your code here\n        long result =\
    \ -1;\n        if (x > y) {\n            return result;\n        }\n        long\
    \ low = x;\n        long high = y;\n        while (low <= high) {\n          \
    \  long mid = (low + high) / 2;\n            if (mid % 2 == 0) {\n           \
    \     result = mid;\n                high = mid - 1;\n            }\n        \
    \    else {\n                low = mid + 1;\n            }\n        }\n      \
    \  return result;", "        if (x > y)\n            return -1;\n        long\
    \ max = x - y + 1;\n        long num = -1;\n        for (long i = x; i <= y; i++)\
    \ {\n            if (i % 2 == 0 && i <= max) {\n                num = i;\n   \
    \             max = i;\n            }\n        }\n        return num;", "    \
    \    if (x > y)\n            throw new ArgumentOutOfRangeException(\"x\");\n \
    \       if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        long num = -1;\n        for (long i = x; i <= y; i += 2) {\n  \
    \          if (i > y)\n                break;\n            num = i;\n        }\n\
    \        return num;", "        if (x > y) {\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        }\n        if (x < 0 || y < 0) {\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        }\n        long num = 0;\n        for (long i = x; i <= y; i +=\
    \ 2) {\n            num = i;\n        }\n        return num;", "        if (x\
    \ > y)\n            throw new Exception(\"ChooseNum: x > y\");\n        long num\
    \ = -1;\n        for (long i = x; i <= y; i += 2) {\n            if (i > y)\n\
    \                break;\n            if (i > x && num < i)\n                num\
    \ = i;\n        }\n        return num;", "        // Write your code here\n  \
    \      return -1;", "        if (x > y)\n            throw new Exception(\"ChooseNum:\
    \ x must be <= y\");\n        if (x == y)\n            return x;\n        long\
    \ num = x + (y - x) / 2;\n        if (num % 2 == 0)\n            return num;\n\
    \        return -1;", "        long result = -1;\n        if (x > y) {\n     \
    \       throw new Exception(\"ChooseNum: x > y\");\n        }\n        if (x ==\
    \ y) {\n            return x;\n        }\n        if (x == 0) {\n            return\
    \ -1;\n        }\n        if (x == 1) {\n            return 2;\n        }\n  \
    \      if (x % 2 == 0) {\n            result = x;\n        }\n        if (x %\
    \ 2 == 1) {\n            result = x + 1;\n        }\n        if (result == -1)\
    \ {\n            return -1;\n        }\n        if (result > y) {\n          \
    \  return -1;\n        }\n        return result;", "        if (x > y)\n     \
    \       throw new Exception(\"ChooseNum: x > y\");\n        if (x == y)\n    \
    \        return x;\n        long n = x;\n        while (n <= y) {\n          \
    \  if (n % 2 == 0)\n                return n;\n            n += 2;\n        }\n\
    \        return -1;", "        long result = -1;\n        if (x > y) {\n     \
    \       throw new Exception(\"ChooseNum: x > y\");\n        }\n        if (x ==\
    \ y) {\n            return x;\n        }\n        if (x < 2) {\n            return\
    \ -1;\n        }\n        if (x % 2 == 0) {\n            result = x;\n       \
    \ }\n        else {\n            result = x + 1;\n        }\n        if (result\
    \ > y) {\n            return -1;\n        }\n        return result;", "      \
    \  if (x > y)\n            throw new ArgumentOutOfRangeException(\"x\");\n   \
    \     if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        long result = -1;\n        for (long i = x; i <= y; i += 2) {\n\
    \            if (i > y)\n                break;\n            result = i;\n   \
    \     }\n        return result;", "        long num = -1;\n        if (x > y)\
    \ {\n            throw new ArgumentOutOfRangeException(\"x\");\n        }\n  \
    \      if (x == y) {\n            return x;\n        }\n        if (x < 2) {\n\
    \            return -1;\n        }\n        if (x % 2 == 0) {\n            num\
    \ = x;\n        }\n        else {\n            num = x + 1;\n        }\n     \
    \   while (num <= y) {\n            if (num % 2 == 0) {\n                num =\
    \ num + 1;\n            }\n            else {\n                num = num + 2;\n\
    \            }\n        }\n        return num;", "        if (x > y)\n       \
    \     return -1;\n        long num = 0;\n        while (x <= y) {\n          \
    \  num = num * 2 + 1;\n            x = x * 2 + 1;\n        }\n        return num;",
  "        if (x > y)\n            throw new Exception(\"x must be less than or equal\
    \ to y\");\n        if (x == y)\n            return x;\n        long num = -1;\n\
    \        long x_start = x;\n        long y_start = y;\n        while (x_start\
    \ <= y_start) {\n            if (x_start % 2 == 0) {\n                num = x_start;\n\
    \                break;\n            }\n            x_start++;\n        }\n  \
    \      return num;", "        // Write your code here\n        if (x > y)\n  \
    \          return -1;\n        long max = (long)Math.sqrt(y);\n        for (long\
    \ i = x; i <= max; i++) {\n            if (i % 2 == 0 && i <= y)\n           \
    \     return i;\n        }\n        return -1;", "        if (x > y)\n       \
    \     throw new Exception(\"ChooseNum: x > y\");\n        if (x == y)\n      \
    \      return x;\n        long result = -1;\n        for (long i = x; i <= y;\
    \ i += 2) {\n            if (i > y)\n                break;\n            if (i\
    \ > x && i % 2 == 0) {\n                result = i;\n                break;\n\
    \            }\n        }\n        return result;", "        if (x > y)\n    \
    \        throw new ArgumentOutOfRangeException(\"x\");\n        if (x < 0 || y\
    \ < 0)\n            throw new ArgumentOutOfRangeException(\"y\");\n        if\
    \ (x == y)\n            return x;\n        long max = (x > y) ? x : y;\n     \
    \   long min = (x > y) ? y : x;\n        long mid = min + (max - min) / 2;\n \
    \       while (mid % 2 == 0)\n            mid /= 2;\n        if (mid == x || mid\
    \ == y)\n            return mid;\n        if (mid > max)\n            return -1;\n\
    \        if (mid < min)\n            return -1;\n        return mid;", "     \
    \   if (x > y)\n            return -1;\n        long num = x;\n        while (num\
    \ <= y) {\n            if (num % 2 == 0)\n                return num;\n      \
    \      num += 1;\n        }\n        return -1;", "        // Write your code\
    \ here\n        if (x > y)\n            return -1;\n        long max = x;\n  \
    \      long min = y;\n        long mid = (max + min) / 2;\n        while (max\
    \ - min > 1) {\n            if (mid * mid > x * y)\n                max = mid;\n\
    \            else\n                min = mid;\n            mid = (max + min) /\
    \ 2;\n        }\n        return max * max;", "        long result = -1;\n    \
    \    if (x > y) {\n            throw new Exception(\"ChooseNum: x > y\");\n  \
    \      }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x < 2) {\n            return -1;\n        }\n        if (x % 2 == 0) {\n  \
    \          result = x;\n        }\n        else {\n            result = x - 1;\n\
    \        }\n        while (result <= y) {\n            if (result % 2 == 0) {\n\
    \                return result;\n            }\n            result += 2;\n   \
    \     }\n        return result;", "        // Write your code here\n        if\
    \ (x > y)\n            return -1;\n        if (x == y)\n            return x;\n\
    \        long max = x;\n        for (long i = x + 1; i <= y; i++) {\n        \
    \    if (i % 2 == 0) {\n                if (i > max)\n                    max\
    \ = i;\n            }\n        }\n        return max;", "        // Write your\
    \ code here\n        if (x > y) return -1;\n        long max = (x + y) / 2;\n\
    \        long i = x;\n        while (i <= max) {\n            if (i % 2 == 0)\
    \ return i;\n            i++;\n        }\n        return -1;", "        // Write\
    \ your code here\n        return -1;", "        // Write your code here\n    \
    \    long max = x;\n        long min = y;\n        if (x > y) {\n            max\
    \ = y;\n            min = x;\n        }\n        long mid = (max + min) / 2;\n\
    \        while (max - min > 1) {\n            if (mid % 2 == 0) {\n          \
    \      max = mid;\n            }\n            else {\n                min = mid;\n\
    \            }\n            mid = (max + min) / 2;\n        }\n        if (mid\
    \ % 2 == 0) {\n            return mid;\n        }\n        else {\n          \
    \  return -1;\n        }", "        // Write your code here\n        return -1;",
  "        if (x > y)\n            throw new Exception(\"ChooseNum: x > y\");\n  \
    \      if (x == y)\n            return x;\n        long n = x;\n        while\
    \ (n <= y) {\n            if (n % 2 == 0)\n                return n;\n       \
    \     n += 2;\n        }\n        return -1;", "        if (x > y)\n         \
    \   throw new ArgumentOutOfRangeException(\"x\");\n        if (x == y)\n     \
    \       return x;\n        if (x == 0)\n            return -1;\n        if (y\
    \ == 0)\n            return -1;\n        if (x == 1)\n            return 2;\n\
    \        if (y == 1)\n            return 2;\n        if (x == 2)\n           \
    \ return 4;\n        if (y == 2)\n            return 4;\n        if (x == 3)\n\
    \            return 6;\n        if (y == 3)\n            return 6;\n        if\
    \ (x == 4)\n            return 8;\n        if (y == 4)\n            return 8;\n\
    \        if (x == 5)\n            return 10;\n        if (y == 5)\n          \
    \  return 10;\n        if (x == 6)\n            return 12;\n        if (y == 6)\n\
    \            return 12;\n        if (x == 7)\n            return 14;\n       \
    \ if (y == 7)\n            return 14;\n        if (x == 8)\n            return\
    \ 16;\n        if (y == 8)\n            return 16;\n        if (x == 9)\n    \
    \        return 18;\n        if (y == 9)\n            return 18;\n        if (x\
    \ == 10)\n            return 20;\n        if (y == 10)\n            return 20;\n\
    \        if (x == 11)\n            return 22;\n        if (y == 11)\n        \
    \    return 22;\n        if (x == 12)\n            return 24;\n        if (y ==\
    \ 12)\n            return 24;\n        if (x == 13)\n            return 26;\n\
    \        if (y == 13)\n            return 26;\n        if (x == 14)\n        \
    \    return 28;\n        if (y == 14)\n            return 28;\n        if (x ==\
    \ 15)\n            return 30;\n        if (y == 15)\n            return 30;\n\
    \        if (x == 16)\n            return 32;\n        if (y == 16)\n        \
    \    return 32;\n        if (x == 17)\n            return 34;\n        if (y ==\
    \ 17)\n            return 34;\n        if (x == 18)\n            ", "        if\
    \ (x > y)\n            throw new Exception(\"ChooseNum: x > y\");\n        if\
    \ (x == y)\n            return x;\n        long l = x;\n        long r = y;\n\
    \        while (l < r) {\n            long m = (l + r) / 2;\n            if (m\
    \ % 2 == 0)\n                r = m;\n            else\n                l = m +\
    \ 1;\n        }\n        return r;", "        // Write your code here\n      \
    \  if (x > y)\n            return -1;\n        long max = x;\n        long min\
    \ = y;\n        long mid = (x + y) / 2;\n        while (max - min > 1) {\n   \
    \         if (mid % 2 == 0) {\n                max = mid;\n            }\n   \
    \         else {\n                min = mid;\n            }\n            mid =\
    \ (max + min) / 2;\n        }\n        return max;", "        if (x > y)\n   \
    \         throw new Exception(\"ChooseNum: x > y\");\n        if (x == y)\n  \
    \          return x;\n        if (x == 0)\n            return -1;\n        if\
    \ (x == 1)\n            return 2;\n        if (x % 2 == 0)\n            return\
    \ x;\n        if (y % 2 == 0)\n            return -1;\n        long max = (y -\
    \ x) / 2;\n        long mid = x + max;\n        if (mid > y)\n            return\
    \ -1;\n        return mid;", "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        if (x == y)\n            return x;\n        long max = x + y;\n\
    \        long min = x - y;\n        if (max % 2 == 0)\n            return max;\n\
    \        if (min % 2 == 0)\n            return min;\n        if (max % 2 == 1)\n\
    \            return max - 1;\n        if (min % 2 == 1)\n            return min\
    \ + 1;\n        return -1;", "        long result = -1;\n        if (x > y) {\n\
    \            throw new Exception(\"ChooseNum: x must be less than or equal to\
    \ y\");\n        }\n        if (x == y) {\n            return x;\n        }\n\
    \        if (x % 2 == 0) {\n            result = x;\n        }\n        else {\n\
    \            result = y;\n        }\n        return result;", "        // Write\
    \ your code here\n        if (x > y) return -1;\n        long result = x;\n  \
    \      while (x <= y) {\n            if (x % 2 == 0) {\n                result\
    \ = x;\n                break;\n            }\n            x += 1;\n        }\n\
    \        return result;", "        // Write your code here\n        if (x > y)\
    \ {\n            return -1;\n        }\n        long max = (y - x) / 2;\n    \
    \    long mid = x + max;\n        if (mid % 2 == 0) {\n            return mid;\n\
    \        }\n        else {\n            return -1;\n        }", "        if (x\
    \ > y) return -1;\n        if (x == y) return x;\n        long num = x;\n    \
    \    while (num <= y) {\n            if (num % 2 == 0) return num;\n         \
    \   num += 2;\n        }\n        return -1;", "        // Write your code here\n\
    \        long max = (long) Math.pow(2, (int) Math.log(y - x + 1));\n        for\
    \ (long i = max; i >= 2; i--) {\n            if (x <= i && i <= y) {\n       \
    \         return i;\n            }\n        }\n        return -1;", "        if\
    \ (x > y)\n            throw new Exception(\"ChooseNum: x must be <= y\");\n \
    \       if (x == y)\n            return x;\n        long num = -1;\n        for\
    \ (long i = x; i <= y; i += 2)\n            if (i >= x && i <= y)\n          \
    \      num = i;\n        return num;", "        long result = -1;\n        long\
    \ i = x;\n        while (i <= y) {\n            if (i % 2 == 0) {\n          \
    \      result = i;\n                break;\n            }\n            i++;\n\
    \        }\n        return result;", "        // Write your code here\n      \
    \  return -1;", "        // Write your code here\n        if (x > y) return -1;\n\
    \        long max = (x + y) / 2;\n        for (long i = x; i <= max; i++) {\n\
    \            if (i % 2 == 0) return i;\n        }\n        return -1;", "    \
    \    // Your code here\n        return -1;", "        long result = -1;\n    \
    \    if (x > y) {\n            throw new Exception(\"Invalid input\");\n     \
    \   }\n        if (x == y) {\n            return x;\n        }\n        if (x\
    \ % 2 == 0) {\n            result = x;\n        }\n        else {\n          \
    \  result = x + 1;\n        }\n        if (result > y) {\n            result =\
    \ -1;\n        }\n        return result;", "        if (x > y)\n            throw\
    \ new ArgumentOutOfRangeException(\"x\");\n        if (x == y)\n            return\
    \ x;\n        long result = -1;\n        for (long i = x; i <= y; i += 2) {\n\
    \            if (i > y)\n                break;\n            if (i > x && i %\
    \ 2 == 0) {\n                result = i;\n                break;\n           \
    \ }\n        }\n        return result;", "        if (x > y)\n            throw\
    \ new Exception(\"ChooseNum: x must be less than or equal to y\");\n        if\
    \ (x == y)\n            return x;\n        long num = -1;\n        for (long i\
    \ = x; i <= y; i += 2) {\n            if (i > y)\n                break;\n   \
    \         if (num == -1 || i > num)\n                num = i;\n        }\n   \
    \     return num;", "        // Write your code here\n        return -1;", " \
    \       // Your code here\n        long max = (long) Math.sqrt(y);\n        for\
    \ (long i = x; i <= max; i++) {\n            if (i % 2 == 0) {\n             \
    \   return i;\n            }\n        }\n        return -1;", "        // Write\
    \ your code here\n        if (x > y)\n            return -1;\n        long max\
    \ = x - 1;\n        long min = y + 1;\n        long mid = (max + min) / 2;\n \
    \       while (max - min > 1) {\n            if (mid % 2 == 0) {\n           \
    \     if (mid > x)\n                    max = mid;\n                else\n   \
    \                 min = mid;\n            }\n            else {\n            \
    \    if (mid > x)\n                    max = mid;\n                else\n    \
    \                min = mid;\n            }\n            mid = (max + min) / 2;\n\
    \        }\n        return max;", "        if (x > y) {\n            return -1;\n\
    \        }\n        long max = x;\n        for (long i = x + 1; i <= y; i++) {\n\
    \            if (i % 2 == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        // Write your code here\n        if (x\
    \ > y)\n            return -1;\n        if (x == y)\n            return x;\n \
    \       long max = x;\n        long min = y;\n        while (max >= min) {\n \
    \           long mid = (max + min) / 2;\n            if (mid % 2 == 0) {\n   \
    \             max = mid;\n            }\n            else {\n                min\
    \ = mid + 1;\n            }\n        }\n        return max;", "        if (x >\
    \ y)\n            throw new Exception(\"ChooseNum: x > y\");\n        if (x ==\
    \ y)\n            return x;\n        if (x == y - 1)\n            return y;\n\
    \        if (x == y + 1)\n            return -1;\n        if (x % 2 == 0)\n  \
    \          return x;\n        if (y % 2 == 0)\n            return -1;\n      \
    \  long mid = x + (y - x) / 2;\n        if (mid % 2 == 0)\n            return\
    \ mid;\n        else\n            return -1;", "        // Write your code here\n\
    \        if (x > y)\n            return -1;\n        long result = x;\n      \
    \  while (result < y) {\n            result += 2;\n        }\n        return result;",
  "        long result = -1;\n        if (x > y) {\n            throw new Exception(\"\
    ChooseNum: x > y\");\n        }\n        if (x == y) {\n            return x;\n\
    \        }\n        if (x < 2) {\n            return -1;\n        }\n        if\
    \ (x % 2 == 0) {\n            result = x;\n        }\n        else {\n       \
    \     result = x + 1;\n        }\n        if (result > y) {\n            return\
    \ -1;\n        }\n        return result;", "        if (x > y)\n            return\
    \ -1;\n        if (x == y)\n            return x;\n        long num = x + y;\n\
    \        if (num % 2 == 0)\n            return num;\n        else\n          \
    \  return -1;", "        long max = (y - x) / 2;\n        long min = x + max;\n\
    \        for (long i = max; i >= min; i--) {\n            if (IsEven(i) && IsInRange(x,\
    \ y, i)) {\n                return i;\n            }\n        }\n        return\
    \ -1;", "        // Write your code here\n        if (x > y)\n            return\
    \ -1;\n        long result = -1;\n        for (long i = x; i <= y; i += 2) {\n\
    \            if (i > y)\n                break;\n            if (i > x && i %\
    \ 2 == 0) {\n                result = i;\n                break;\n           \
    \ }\n        }\n        return result;", "        if (x > y)\n            throw\
    \ new ArgumentOutOfRangeException(\"x\");\n        if (x == y)\n            return\
    \ x;\n        long max = x + y;\n        long min = x - y;\n        if (max %\
    \ 2 == 0)\n            return max;\n        if (min % 2 == 0)\n            return\
    \ min;\n        return -1;", "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        long max = (long)Math.pow(2, Math.Ceiling(Math.Log(y - x + 1) /\
    \ Math.Log(2)));\n        long min = max - 1;\n        if (min < x)\n        \
    \    return -1;\n        if (min > y)\n            return -1;\n        if (min\
    \ == x && max == y)\n            return max;\n        long mid = min + (max -\
    \ min) / 2;\n        if (mid == x)\n            return mid;\n        if (mid ==\
    \ y)\n            return mid;\n        if (mid > x && mid < y)\n            return\
    \ mid;\n        if (mid < x && mid > y)\n            return mid;\n        return\
    \ -1;", "        long result = -1;\n        if (x > y) {\n            throw new\
    \ Exception(\"ChooseNum: x must be less than or equal to y\");\n        }\n  \
    \      if (x == y) {\n            return x;\n        }\n        if (x == 0) {\n\
    \            return -1;\n        }\n        if (x == 1) {\n            return\
    \ 2;\n        }\n        if (x == 2) {\n            return 2;\n        }\n   \
    \     if (x % 2 == 0) {\n            result = x;\n        }\n        if (x % 2\
    \ == 1) {\n            result = x + 1;\n        }\n        if (result == -1) {\n\
    \            return -1;\n        }\n        if (result > y) {\n            return\
    \ -1;\n        }\n        return result;", "        // Write your code here\n\
    \        long max = (long)Math.sqrt(y);\n        for (long i = x; i <= max; i++)\
    \ {\n            if (i % 2 == 0 && i <= y) {\n                return i;\n    \
    \        }\n        }\n        return -1;", "        if (x > y)\n            throw\
    \ new ArgumentOutOfRangeException(\"x\");\n        if (x < 0 || y < 0)\n     \
    \       throw new ArgumentOutOfRangeException(\"y\");\n        long max = (long)Math.pow(2,\
    \ Math.Ceiling(Math.Log(y - x + 1) / Math.Log(2)));\n        if (max < 2)\n  \
    \          return -1;\n        long result = x;\n        while (result < y) {\n\
    \            result += max;\n        }\n        return result;", "        if (x\
    \ > y)\n            return -1;\n        long num = x;\n        while (num <= y)\
    \ {\n            if (num % 2 == 0)\n                return num;\n            num\
    \ += 1;\n        }\n        return -1;", "        if (x > y)\n            return\
    \ -1;\n        long num = x;\n        while (num <= y) {\n            if (num\
    \ % 2 == 0) {\n                return num;\n            }\n            num++;\n\
    \        }\n        return -1;", "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        if (x == y)\n            return x;\n        long i = x;\n     \
    \   while (i <= y) {\n            if (i % 2 == 0)\n                return i;\n\
    \            i += 2;\n        }\n        return -1;", "        // Write your code\
    \ here\n        if (x > y) {\n            return -1;\n        }\n        if (x\
    \ == y) {\n            return x;\n        }\n        long max = (y - x) / 2;\n\
    \        long mid = x + max;\n        if (mid > y) {\n            return -1;\n\
    \        }\n        if (mid == y) {\n            return mid;\n        }\n    \
    \    return ChooseNum(mid + 1, y);", "        // Write your code here\n      \
    \  if (x > y)\n            return -1;\n        long num = x;\n        while (num\
    \ <= y) {\n            if (num % 2 == 0)\n                return num;\n      \
    \      num += 2;\n        }\n        return -1;", "        // Your code here\n\
    \        return -1;", "        // Write your code here\n        if (x > y)\n \
    \           return -1;\n        long i = x;\n        while (i <= y) {\n      \
    \      if (i % 2 == 0)\n                return i;\n            i++;\n        }\n\
    \        return -1;", "        if (x > y)\n            return -1;\n        long\
    \ i = x;\n        while (i <= y) {\n            if (i % 2 == 0)\n            \
    \    return i;\n            i += 2;\n        }\n        return -1;", "       \
    \ if (x > y)\n            throw new ArgumentOutOfRangeException(\"x\");\n    \
    \    if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        if (x == y)\n            return x;\n        long num = -1;\n  \
    \      for (long i = x; i <= y; i += 2) {\n            if (i > y)\n          \
    \      break;\n            if (num == -1 || i > num)\n                num = i;\n\
    \        }\n        return num;", "        // Write your code here\n        long\
    \ result = -1;\n        if (x > y)\n            return result;\n        long low\
    \ = x;\n        long high = y;\n        while (low <= high) {\n            long\
    \ mid = (low + high) / 2;\n            if (mid % 2 == 0) {\n                result\
    \ = mid;\n                high = mid - 1;\n            }\n            else {\n\
    \                low = mid + 1;\n            }\n        }\n        return result;",
  "        if (x > y)\n            throw new ArgumentOutOfRangeException(\"x\");\n\
    \        if (x < 0 || y < 0)\n            throw new ArgumentOutOfRangeException(\"\
    y\");\n        if (x == y)\n            return x;\n        long i = x;\n     \
    \   while (i <= y) {\n            if (i % 2 == 0)\n                return i;\n\
    \            i += 2;\n        }\n        return -1;", "        // Write your code\
    \ here\n        return -1;", "        // Write your code here\n        if (x >\
    \ y)\n            return -1;\n        long low = x;\n        long high = y;\n\
    \        long mid = (low + high) / 2;\n        while (low <= high) {\n       \
    \     if (mid % 2 == 0) {\n                if (mid >= x && mid <= y)\n       \
    \             return mid;\n                else\n                    low = mid\
    \ + 1;\n            }\n            else {\n                if (mid >= x && mid\
    \ < y)\n                    return mid;\n                else\n              \
    \      high = mid - 1;\n            }\n            mid = (low + high) / 2;\n \
    \       }\n        return -1;", "        // Write your code here\n        if (x\
    \ > y) return -1;\n        long num = x;\n        while (num <= y) {\n       \
    \     if (num % 2 == 0) {\n                return num;\n            }\n      \
    \      num += 2;\n        }\n        return -1;", "        if (x > y)\n      \
    \      throw new Exception(\"ChooseNum: x > y\");\n        if (x == y)\n     \
    \       return x;\n        long num = x + y;\n        if (num % 2 == 0)\n    \
    \        return num;\n        return -1;", "        // Write your code here\n\
    \        return -1;", "        // Write your code here\n        long result =\
    \ -1;\n        if (x > y) {\n            return result;\n        }\n        long\
    \ low = x;\n        long high = y;\n        while (low <= high) {\n          \
    \  long mid = (low + high) / 2;\n            if (mid % 2 == 0) {\n           \
    \     result = mid;\n                high = mid - 1;\n            }\n        \
    \    else {\n                low = mid + 1;\n            }\n        }\n      \
    \  return result;", "        if (x > y)\n            return -1;\n        long\
    \ max = x;\n        long min = y;\n        long mid = (max + min) / 2;\n     \
    \   while (max - min > 1) {\n            if (mid * mid > x * y)\n            \
    \    max = mid;\n            else\n                min = mid;\n            mid\
    \ = (max + min) / 2;\n        }\n        return mid * mid;", "        if (x >\
    \ y) {\n            throw new ArgumentOutOfRangeException(\"x\");\n        }\n\
    \        if (x < 0 || y < 0) {\n            throw new ArgumentOutOfRangeException(\"\
    x\");\n        }\n        if (x == y) {\n            return -1;\n        }\n \
    \       long num = 0;\n        while (x <= y) {\n            num = x;\n      \
    \      x += 2;\n        }\n        return num;", "        if (x > y)\n       \
    \     return -1;\n        long num = 0;\n        while (x <= y) {\n          \
    \  num = num * 2 + 1;\n            x = x * 2 + 1;\n        }\n        return num;",
  "        long num = -1;\n        if (x > y) {\n            return num;\n       \
    \ }\n        if (x == y) {\n            return x;\n        }\n        if (x <\
    \ 0 || y < 0) {\n            return num;\n        }\n        if (x > y) {\n  \
    \          return num;\n        }\n        if (x == y) {\n            return x;\n\
    \        }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x == y) {\n            return x;\n        }\n        if (x == y) {\n      \
    \      return x;\n        }\n        if (x == y) {\n            return x;\n  \
    \      }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x == y) {\n            return x;\n        }\n        if (x == y) {\n      \
    \      return x;\n        }\n        if (x == y) {\n            return x;\n  \
    \      }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x == y) {\n            return x;\n        }\n        if (x == y) {\n      \
    \      return x;\n        }\n        if (x == y) {\n            return x;\n  \
    \      }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x == y) {\n            return x;\n        }\n        if (x == y) {\n      \
    \      return x;\n        }\n        if (x == y) {\n            return x;\n  \
    \      }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x == y) {\n            return x;\n        }\n        if (x == y) {\n      \
    \      return x;\n        }\n        if (x == y) {\n            return x;\n  \
    \      }\n        if (x == y) {\n            return x;\n        }\n        if\
    \ (x == y) {\n            return x;\n        }\n        if (x == y) {\n      \
    \      return x;\n        }\n        if (x == y) {\n            return x;\n  \
    \      }\n        if (x == y)", "        if (x > y)\n            throw new Exception(\"\
    ChooseNum: x > y\");\n        if (x == y)\n            return x;\n        if (x\
    \ < 2 || y < 2)\n            return -1;\n        long i = 2;\n        while (i\
    \ <= y) {\n            if (i % 2 == 0 && i <= x && i >= y)\n                return\
    \ i;\n            i += 2;\n        }\n        return -1;", "        // Write your\
    \ code here\n        long max = x;\n        long min = y;\n        if (x > y)\
    \ {\n            max = y;\n            min = x;\n        }\n        long mid =\
    \ (max + min) / 2;\n        while (mid > min) {\n            if (mid % 2 == 0)\
    \ {\n                return mid;\n            }\n            mid = mid - 1;\n\
    \        }\n        return -1;", "        // Your code here\n        if (x > y)\n\
    \            return -1;\n        long result = 0;\n        for (long i = x; i\
    \ <= y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n \
    \               break;\n            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

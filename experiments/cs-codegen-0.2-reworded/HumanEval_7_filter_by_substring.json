{
  "name": "HumanEval_7_filter_by_substring",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterBySubstring((new List<string>()), (\"john\")).Equals((new List<string>())));\n    Debug.Assert(FilterBySubstring((new List<string>(new string[]{(string)\"xxx\", (string)\"asd\", (string)\"xxy\", (string)\"john doe\", (string)\"xxxAAA\", (string)\"xxx\"})), (\"xxx\")).Equals((new List<string>(new string[]{(string)\"xxx\", (string)\"xxxAAA\", (string)\"xxx\"}))));\n    Debug.Assert(FilterBySubstring((new List<string>(new string[]{(string)\"xxx\", (string)\"asd\", (string)\"aaaxxy\", (string)\"john doe\", (string)\"xxxAAA\", (string)\"xxx\"})), (\"xx\")).Equals((new List<string>(new string[]{(string)\"xxx\", (string)\"aaaxxy\", (string)\"xxxAAA\", (string)\"xxx\"}))));\n    Debug.Assert(FilterBySubstring((new List<string>(new string[]{(string)\"grunt\", (string)\"trumpet\", (string)\"prune\", (string)\"gruesome\"})), (\"run\")).Equals((new List<string>(new string[]{(string)\"grunt\", (string)\"prune\"}))));\n    }\n\n}\n",
  "completions": [
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n",
    "        return strings.Where(x => x.Contains(substring));",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        return strings.Where(s => s.Contains(substring));",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> filtered = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                filtered.Add(s);\n            }\n        }\n        return filtered;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Find the first string in the input list that contains the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"abc\"\n    public static string FirstBySubstring(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                return s;\n            }\n        }\n        return \"\";\n    }\n\n    // Find the last string in the input list that contains the given substring\n    // >>> LastBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> LastBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"array\"\n    public static string LastBySubstring(List<string> strings, string substring) {\n        int lastIndex = strings.Count - 1;\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                lastIndex = strings.IndexOf(s);\n            }\n        }\n        return strings[lastIndex];\n    }\n\n    // Find the first string in the input list that does not contain the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"bacd\"\n    public static string FirstByNotSubstring(List<string> strings, string substring",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        return strings.Where(s => s.Contains(substring));",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Find the first string in a list that contains a given substring\n    // >>> FirstStringContainingSubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstStringContainingSubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"abc\"\n    public static string FirstStringContainingSubstring(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                return s;\n        }\n        return \"\";\n    }\n\n    // Find the last string in a list that contains a given substring\n    // >>> LastStringContainingSubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> LastStringContainingSubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"array\"\n    public static string LastStringContainingSubstring(List<string> strings, string substring) {\n        int lastIndex = strings.Count - 1;\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                return s;\n        }\n        return strings[lastIndex];\n    }\n\n    // Find the first string in a list that does not contain a given substring\n    // >>> FirstStringNotContainingSubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstStringNotContainingSubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"bacd\"\n    public static string FirstStringNotContainingSubstring(List<string> strings, string substring) {\n        foreach (string",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> filtered = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                filtered.Add(s);\n            }\n        }\n        return filtered;\n    }\n\n    // Find the index of the first occurrence of a substring in a string\n    // >>> IndexOfSubstring(\"abc\", \"a\")\n    // 0\n    // >>> IndexOfSubstring(\"abc\", \"b\")\n    // 1\n    // >>> IndexOfSubstring(\"abc\", \"c\")\n    // 2\n    // >>> IndexOfSubstring(\"abc\", \"d\")\n    // -1\n    public static int IndexOfSubstring(string str, string substring) {\n        int index = -1;\n        int i = 0;\n        while (i < str.Length && index == -1) {\n            if (str[i] == substring[0]) {\n                int j = 0;\n                while (j < substring.Length && i + j < str.Length && str[i + j] == substring[j]) {\n                    j++;\n                }\n                if (j == substring.Length) {\n                    index = i;\n                }\n            }\n            i++;\n        }\n        return index;\n    }\n\n    // Find the index of the last occurrence of a substring in a string\n    // >>> IndexOfSubstring(\"abc\", \"a\")\n    // 0\n    // >>> IndexOfSubstring(\"abc\", \"b\")\n    // 1\n    // >>> IndexOfSubstring(\"abc\", \"c\")\n    // 2\n    // >>> IndexOfSubstring(\"abc\", \"d\")\n    // -1\n    public static int LastIndexOfSubstring(string str, string substring) {\n        int index = -1;\n        int i = str.Length - 1;\n        while (i >= 0 && index == -1) {\n            if (str[i] == substring[0]) {\n                int j = 0;\n                while (j < substring.Length && i - j >= 0 && str[i - j] == substring[j]) {\n                    j++;\n                }\n                if (j == substring.Length) {",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Convert a list of strings to a string array\n    // >>> ToStringArray((new List<string>()))\n    // ()\n    // >>> ToStringArray((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})))\n    // (string[])\n    // {(string) \"abc\", (string) \"bacd\", (string) \"cde\", (string) \"array\"}\n    public static string[] ToStringArray(List<string> strings) {\n        string[] result = new string[strings.Count];\n        int i = 0;\n        foreach (string s in strings) {\n            result[i] = s;\n            i++;\n        }\n        return result;\n    }\n\n    // Convert a string array to a list of strings\n    // >>> ToList((new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"}))\n    // (new List<string>(new string[]{(string)\"abc\",",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        return strings.Where(x => x.Contains(substring));",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Convert a string to upper case\n    // >>> ConvertToUpper(\"abc\")\n    // \"ABC\"\n    // >>> ConvertToUpper(\"AbC\")\n    // \"ABC\"\n    // >>> ConvertToUpper(\"AbCd\")\n    // \"ABCD\"\n    public static string ConvertToUpper(string str) {\n        return str.ToUpper();\n    }\n\n    // Convert a string to lower case\n    // >>> ConvertToLower(\"abc\")\n    // \"abc\"\n    // >>> ConvertToLower(\"AbC\")\n    // \"abc\"\n    // >>> ConvertToLower(\"AbCd\")\n    // \"abcd\"\n    public static string ConvertToLower(string str) {\n        return str.ToLower();\n    }\n\n    // Convert a string to title case\n    // >>> ConvertToTitle(\"abc\")\n    // \"Abc\"\n    // >>> ConvertToTitle(\"AbC\")\n    // \"Abc\"\n    // >>> ConvertToTitle(\"AbCd\")\n    // \"AbcD\"\n    public static string ConvertToTitle(string str) {\n        return",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        return strings.Where(s => s.Contains(substring));",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> filtered = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                filtered.Add(s);\n            }\n        }\n        return filtered;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Convert a list of strings into a list of integers\n    // >>> List<int> ToIntList((new List<string>()))\n    // (new List<int>())\n    // >>> List<int> ToIntList((new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\"})))\n    // (new List<int>{1, 2, 3})\n    public static List<int> ToIntList(List<string> strings) {\n        List<int> result = new List<int>();\n        foreach (string s in strings) {\n            result.Add(Convert.ToInt32(s));\n        }\n        return result;\n    }\n\n    // Convert a list of strings into a list of integers\n    // >>> List<int> ToIntList((new List<string>()), (new int[]{1, 2, 3}))\n    // (new List<int>{1, 2, 3})\n    // >>> List<int> ToIntList((new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\"})), (new int[]{1, 2, 3}))\n    // (new List<int>{1, 2, 3})\n    public static List<int> ToIntList(List<string> strings, int[] ints) {\n        List<int> result = new List<int>();\n        foreach (string s in strings) {\n            result.Add(ints[result.Count]);\n        }\n        return result;\n    }\n\n    // Convert a list of strings into a list of integers\n    // >>> List<int> ToIntList((new List<string>()), (new int[]{1, 2, 3}), (new int[]{1, 2, 3}))\n    // (new List<int>{1, 2, 3})\n    // >>> List<int> ToIntList((new List<string>(new string",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        return strings.Where(x => x.Contains(substring));",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Convert a list of strings to a string array\n    // >>> ToStringArray((new List<string>()))\n    // ()\n    // >>> ToStringArray((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})))\n    // (string[]){(string)\"abc\", (string)\"bacd\", (string)\"array\"}\n    public static string[] ToStringArray(List<string> strings) {\n        string[] result = new string[strings.Count];\n        for (int i = 0; i < strings.Count; i++)\n            result[i] = strings[i];\n        return result;\n    }\n\n    // Convert a string array to a list of strings\n    // >>> ToList((new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"}))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"}))\n    public static List<string>",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Find the first string in a list that contains the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"abc\"\n    public static string FirstBySubstring(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                return s;\n        }\n        return \"\";\n    }\n\n    // Find the last string in a list that contains the given substring\n    // >>> LastBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> LastBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"cde\"\n    public static string LastBySubstring(List<string> strings, string substring) {\n        int index = strings.LastIndexOf(substring);\n        if (index == -1)\n            return \"\";\n        return strings[index];\n    }\n\n    // Find the first string in a list that does not contain the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"bacd\"\n    public static string FirstByNotSubstring(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (!s.Contains(substring))\n                return s;\n        }\n        return \"",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> filtered = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                filtered.Add(s);\n            }\n        }\n        return filtered;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Find the first index of given substring in a string\n    // >>> FirstIndexOfSubstring(\"abc\", \"a\")\n    // 0\n    // >>> FirstIndexOfSubstring(\"abc\", \"b\")\n    // 1\n    // >>> FirstIndexOfSubstring(\"abc\", \"c\")\n    // 2\n    // >>> FirstIndexOfSubstring(\"abc\", \"d\")\n    // -1\n    // >>> FirstIndexOfSubstring(\"abc\", \"ab\")\n    // -1\n    // >>> FirstIndexOfSubstring(\"abc\", \"\")\n    // -1\n    public static int FirstIndexOfSubstring(string str, string substring) {\n        int result = -1;\n        int index = 0;\n        while (index < str.Length) {\n            index = str.IndexOf(substring, index);\n            if (index == -1)\n                break;\n            result = index;\n            index++;\n        }\n        return result;\n    }\n\n    // Find the last index of given substring in a string\n    // >>> LastIndexOfSubstring(\"abc\", \"a\")\n    // 2\n    // >>> LastIndexOfSubstring(\"abc\", \"b\")\n    // 1\n    // >>> LastIndexOfSubstring(\"abc\", \"c\")\n    // 0\n    // >>> LastIndexOfSubstring(\"abc\", \"d\")\n    // -1\n    // >>> LastIndexOfSubstring(\"abc\", \"ab\")\n    // -1\n    // >>> LastIndexOfSubstring(\"abc\", \"\")\n    // -1\n    public static int LastIndexOfSubstring(string str, string substring) {\n        int result = -1;\n        int index = 0;\n        while (index < str.Length) {\n            index = str.LastIndexOf(substring, index);\n            if (index == -1)\n                break;\n            result = index;\n            index++;\n        }\n        return result;\n    }\n\n    // Find the index of the first occurrence",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Find the first string in the input list that contains the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"abc\"\n    public static string FirstBySubstring(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                return s;\n        }\n        return \"\";\n    }\n\n    // Find the last string in the input list that contains the given substring\n    // >>> LastBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> LastBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"cde\"\n    public static string LastBySubstring(List<string> strings, string substring) {\n        int index = strings.LastIndexOf(substring);\n        if (index == -1)\n            return \"\";\n        return strings[index];\n    }\n\n    // Find the first string in the input list that does not contain the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"bacd\"\n    public static string FirstBySubstringNot(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (!s.Contains(substring))\n                return s;\n        }\n",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring, int maxCount) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n                if (result.Count == maxCount) {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring, int maxCount, int minCount) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n                if (result.Count >= minCount && result.Count <= maxCount) {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"}",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Filter an input list of strings only for ones that contain given substring\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"array\"}))\n    public static List<string> FilterBySubstring(List<string> strings, string substring) {\n        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // >>> FilterBySubstring((new List<string>()), (\"a\"))\n    // (new List<string>())\n    // >>> FilterBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Convert a list of strings to a list of integers\n    // >>> ListToInts((new List<string>()))\n    // (new List<int>())\n    // >>> ListToInts((new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\"})))\n    // (new List<int>(new int[]{1, 2, 3}))\n    public static List<int> ListToInts(List<string> strings) {\n        List<int> result = new List<int>();\n        foreach (string s in strings) {\n            result.Add(Convert.ToInt32(s));\n        }\n        return result;\n    }\n\n    // Convert a list of integers to a list of strings\n    // >>> IntsToList((new List<int>()))\n    // (new List<string>())\n    // >>> IntsToList((new List<int>(new int[]{1, 2, 3})))\n    // (new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\"}))\n    public static List<string> IntsToList(List<int> ints) {\n        List<string> result = new List<string>();\n        foreach (int i in ints) {\n            result.Add(Convert.ToString(i));\n        }\n        return result;\n    }\n\n    // Convert a list of strings to a list of integers\n    // >>> ListToInts((new List<string>()))\n    // (new List<int>())\n    // >>> ListToInts((new List<string>(new string[]{(string)\"1\", (string)\"2\", (string)\"3\"})))\n    // (new List<int>(new int[]{1, 2, 3}))\n    public static List<int> ListToInts(List<string> strings) {\n        List<int> result = new List<",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> filtered = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                filtered.Add(s);\n            }\n        }\n        return filtered;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Find the first string in a list that contains the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"abc\"\n    public static string FirstBySubstring(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                return s;\n            }\n        }\n        return \"\";\n    }\n\n    // Find the first string in a list that does not contain the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"bacd\"\n    public static string FirstBySubstringNot(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (!s.Contains(substring)) {\n                return s;\n            }\n        }\n        return \"\";\n    }\n\n    // Find the first string in a list that starts with the given prefix\n    // >>> FirstByPrefix((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstByPrefix((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"abc\"\n    public static string FirstByPrefix(List<string> strings, string prefix) {\n        foreach (string s in strings) {\n            if (s.StartsWith(prefix)) {\n                return s;\n",
    "        return strings.Where(s => s.Contains(substring));",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;\n    }\n\n    // Find the index of the first occurrence of a substring in a string\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"cd\")\n    // 2\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"ab\")\n    // 0\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"\")\n    // 6\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"z\")\n    // -1\n    public static int FirstIndexOfSubstring(string string, string substring) {\n        int result = -1;\n        int index = 0;\n        while (index < string.Length && result == -1) {\n            if (string.Substring(index, substring.Length) == substring) {\n                result = index;\n            }\n            index++;\n        }\n        return result;\n    }\n\n    // Find the index of the last occurrence of a substring in a string\n    // >>> LastIndexOfSubstring(\"abcdef\", \"cd\")\n    // 2\n    // >>> LastIndexOfSubstring(\"abcdef\", \"ab\")\n    // 4\n    // >>> LastIndexOfSubstring(\"abcdef\", \"\")\n    // 6\n    // >>> LastIndexOfSubstring(\"abcdef\", \"z\")\n    // -1\n    public static int LastIndexOfSubstring(string string, string substring) {\n        int result = -1;\n        int index = string.Length - substring.Length;\n        while (index >= 0 && result == -1) {\n            if (string.Substring(index, substring.Length) == substring) {\n                result = index;\n            }\n            index--;\n        }\n        return result;\n    }\n\n    // Find the index of the first occurrence of a substring in a string\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"cd\", 2)\n    // 2\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"ab\", 2)\n    // 1\n    ",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        return strings.Where(x => x.Contains(substring));",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;\n    }\n\n    // Find the first string in the input list that contains the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"abc\"\n    public static string FirstBySubstring(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                return s;\n        }\n        return \"\";\n    }\n\n    // Find the last string in the input list that contains the given substring\n    // >>> LastBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> LastBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"cde\"\n    public static string LastBySubstring(List<string> strings, string substring) {\n        int index = strings.LastIndexOf(substring);\n        if (index == -1)\n            return \"\";\n        return strings[index];\n    }\n\n    // Find the first string in the input list that does not contain the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // \"bacd\"\n    public static string FirstBySubstringNot(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (!s.Contains(substring))\n                return s;\n        }\n        return \"\";\n    ",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring))\n                result.Add(s);\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> filtered = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                filtered.Add(s);\n            }\n        }\n        return filtered;\n    }\n\n    // Find the first string in a list that contains the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"abc\"\n    public static string FirstBySubstring(List<string> strings, string substring) {\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                return s;\n            }\n        }\n        return \"\";\n    }\n\n    // Find the last string in a list that contains the given substring\n    // >>> LastBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> LastBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"cde\"\n    public static string LastBySubstring(List<string> strings, string substring) {\n        int lastIndex = strings.Count - 1;\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                lastIndex = strings.IndexOf(s);\n            }\n        }\n        return strings[lastIndex];\n    }\n\n    // Find the first string in a list that does not contain the given substring\n    // >>> FirstBySubstring((new List<string>()), (\"a\"))\n    // \"\"\n    // >>> FirstBySubstring((new List<string>(new string[]{(string)\"abc\", (string)\"bacd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    // (string)\"bacd\"\n    public static string FirstBySubstringNot(List<string> strings, string substring)",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        return strings.Where(s => s.Contains(substring));\n    }\n\n    // Find the index of the first occurrence of the given substring in the given string\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"c\")\n    // 2\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"d\")\n    // 3\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"e\")\n    // 4\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"f\")\n    // 5\n    // >>> FirstIndexOfSubstring(\"abcdef\", \"g\")\n    // -1\n    public static int FirstIndexOfSubstring(string string, string substring) {\n        int index = string.IndexOf(substring);\n        return index == -1 ? -1 : index;\n    }\n\n    // Find the index of the last occurrence of the given substring in the given string\n    // >>> LastIndexOfSubstring(\"abcdef\", \"c\")\n    // 2\n    // >>> LastIndexOfSubstring(\"abcdef\", \"d\")\n    // 3\n    // >>> LastIndexOfSubstring(\"abcdef\", \"e\")\n    // 4\n    // >>> LastIndexOfSubstring(\"abcdef\", \"f\")\n    // 5\n    // >>> LastIndexOfSubstring(\"abcdef\", \"g\")\n    // -1\n    public static int LastIndexOfSubstring(string string, string substring) {\n        int index = string.LastIndexOf(substring);\n        return index == -1 ? -1 : index;\n    }\n\n    // Return a string that is the result of concatenating the given strings\n    // >>> ConcatenateStrings(\"a\", \"b\", \"c\")\n    // \"abc\"\n    // >>> ConcatenateStrings(\"a\", \"b\", \"c\", \"d\")\n    // \"abcd\"\n    // >>> ConcatenateStrings(\"a\", \"b\", \"c\", \"d\", \"e\")\n    // \"abcde\"\n    public static string ConcatenateStrings(string... strings) {\n        return String.Join(\"\", strings);\n    }\n\n    // Return a string that is the result of concatenating the given strings\n    // >>> Concat",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;",
    "        List<string> result = new List<string>();\n        foreach (string s in strings) {\n            if (s.Contains(substring)) {\n                result.Add(s);\n            }\n        }\n        return result;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
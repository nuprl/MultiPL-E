name: HumanEval_90_next_smallest
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a list of integers.\n    // Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n    // Return null if there\
  \ is no such element.\n    // >>> NextSmallest((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)4L, (long)5L})))\n    // 2L\n    // >>> NextSmallest((new\
  \ List<long>(new long[]{(long)5L, (long)1L, (long)4L, (long)3L, (long)2L})))\n \
  \   // 2L\n    // >>> NextSmallest((new List<long>()))\n    // null\n    // >>>\
  \ NextSmallest((new List<long>(new long[]{(long)1L, (long)1L})))\n    // null\n\
  \    public static Nullable<long> NextSmallest(List<long> lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(NextSmallest((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L}))).Equals(2L));\n\
  \    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)5L, (long)1L, (long)4L,\
  \ (long)3L, (long)2L}))).Equals(2L));\n    Debug.Assert(NextSmallest((new List<long>())).Equals(null));\n\
  \    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L}))).Equals(null));\n\
  \    Debug.Assert(NextSmallest((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
  \ (long)1L, (long)0L}))).Equals(1L));\n    Debug.Assert(NextSmallest((new List<long>(new\
  \ long[]{(long)1L, (long)1L}))).Equals(null));\n    Debug.Assert(NextSmallest((new\
  \ List<long>(new long[]{(long)-35L, (long)34L, (long)12L, (long)-45L}))).Equals(-35L));\n\
  \    }\n\n}\n"
completions: ["        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            }\n            else if (i < second)\
    \ {\n                second = i;\n            }\n        }\n        return second\
    \ == min ? null : second;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            }\n     \
    \       else if (i < second) {\n                second = i;\n            }\n \
    \       }\n        if (second == min) {\n            return null;\n        }\n\
    \        return second;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            } else if\
    \ (i < second) {\n                second = i;\n            }\n        }\n    \
    \    if (min == second) {\n            return null;\n        }\n        return\
    \ second;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            }\n            else if (i < second)\
    \ {\n                second = i;\n            }\n        }\n        if (second\
    \ == min) {\n            return null;\n        }\n        return second;", " \
    \       if (lst.Count == 0)\n            return null;\n        long min = lst[0];\n\
    \        long second_min = lst[0];\n        for (int i = 1; i < lst.Count; i++)\
    \ {\n            if (lst[i] < min) {\n                second_min = min;\n    \
    \            min = lst[i];\n            }\n            else if (lst[i] < second_min)\
    \ {\n                second_min = lst[i];\n            }\n        }\n        return\
    \ second_min;", "        long min = lst[0];\n        int index = 0;\n        for\
    \ (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n       \
    \         min = lst[i];\n                index = i;\n            }\n        }\n\
    \        if (index == 0)\n            return null;\n        else\n           \
    \ return lst[index];", "        long min = lst.First();\n        long second =\
    \ lst.First();\n        for (long i : lst) {\n            if (i < min) {\n   \
    \             second = min;\n                min = i;\n            } else if (i\
    \ < second) {\n                second = i;\n            }\n        }\n       \
    \ if (second == min) {\n            return null;\n        } else {\n         \
    \   return second;\n        }", "        long min = lst.First();\n        long\
    \ max = lst.Last();\n        for (long i = min + 1; i < max; i++) {\n        \
    \    if (lst.Contains(i)) {\n                return i;\n            }\n      \
    \  }\n        return null;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            }\n     \
    \       else if (i < second) {\n                second = i;\n            }\n \
    \       }\n        return second == min ? null : second;", "        long min =\
    \ lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (second == min) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (min == second) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (second == min) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (second == min) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst[0];\n        long secondMin = lst[0];\n        for (int i = 1; i < lst.Count;\
    \ i++) {\n            if (lst[i] < min) {\n                secondMin = min;\n\
    \                min = lst[i];\n            } else if (lst[i] < secondMin) {\n\
    \                secondMin = lst[i];\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        } else {\n            return secondMin;\n\
    \        }", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            }\n            else if (i < second)\
    \ {\n                second = i;\n            }\n        }\n        if (second\
    \ == min) {\n            return null;\n        }\n        return second;", " \
    \       long min = lst.First();\n        long secondMin = min;\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                secondMin = min;\n \
    \               min = i;\n            } else if (i < secondMin) {\n          \
    \      secondMin = i;\n            }\n        }\n        if (secondMin == min)\
    \ {\n            return null;\n        } else {\n            return secondMin;\n\
    \        }", "        long min = lst.First();\n        long secondMin = min;\n\
    \        for (long i : lst) {\n            if (i < min) {\n                secondMin\
    \ = min;\n                min = i;\n            } else if (i < secondMin) {\n\
    \                secondMin = i;\n            }\n        }\n        return secondMin\
    \ == min ? null : secondMin;", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            }\n\
    \            else if (i < second) {\n                second = i;\n           \
    \ }\n        }\n        if (second == min) {\n            return null;\n     \
    \   }\n        return second;", "        if (lst.Count == 0)\n            return\
    \ null;\n        long min = lst[0];\n        for (int i = 1; i < lst.Count; i++)\
    \ {\n            if (lst[i] < min) {\n                min = lst[i];\n        \
    \    }\n        }\n        for (int i = 0; i < lst.Count; i++) {\n           \
    \ if (lst[i] == min) {\n                return min;\n            }\n        }\n\
    \        return null;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            }\n     \
    \       else if (i < second) {\n                second = i;\n            }\n \
    \       }\n        if (min == second) {\n            return null;\n        }\n\
    \        return second;", "        long min = lst.First();\n        long secondMin\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               secondMin = min;\n                min = i;\n            }\n  \
    \          else if (i < secondMin) {\n                secondMin = i;\n       \
    \     }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        else {\n            return secondMin;\n        }", "     \
    \   long min = lst.First();\n        long second = lst.First();\n        for (int\
    \ i = 1; i < lst.Count(); i++) {\n            if (lst[i] < min) {\n          \
    \      second = min;\n                min = lst[i];\n            } else if (lst[i]\
    \ < second) {\n                second = lst[i];\n            }\n        }\n  \
    \      if (min == second)\n            return null;\n        return second;",
  "        long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        else {\n            return\
    \ second;\n        }", "        if (lst.Count == 0)\n            return null;\n\
    \        long min = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n \
    \           if (lst[i] < min) {\n                min = lst[i];\n            }\n\
    \        }\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]\
    \ == min) {\n                return min;\n            }\n        }\n        return\
    \ null;", "        long min = lst[0];\n        long secondMin = lst[0];\n    \
    \    for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n\
    \                secondMin = min;\n                min = lst[i];\n           \
    \ }\n            else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n\
    \            }\n        }\n        if (secondMin == min) {\n            return\
    \ null;\n        }\n        else {\n            return secondMin;\n        }",
  "        long min = lst.First();\n        long second = lst.First();\n        for\
    \ (int i = 1; i < lst.Count(); i++) {\n            if (lst[i] < min) {\n     \
    \           second = min;\n                min = lst[i];\n            }\n    \
    \        else if (lst[i] < second) {\n                second = lst[i];\n     \
    \       }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long secondMin = min;\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                secondMin = min;\n                min = i;\n            }\n\
    \            else if (i < secondMin) {\n                secondMin = i;\n     \
    \       }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        else {\n            return secondMin;\n        }", "     \
    \   long min = lst.First();\n        long second = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                second = min;\n    \
    \            min = i;\n            }\n            else if (i < second) {\n   \
    \             second = i;\n            }\n        }\n        if (min == second)\
    \ {\n            return null;\n        }\n        return second;", "        long\
    \ min = lst.First();\n        long second = lst.First();\n        for (long i\
    \ : lst) {\n            if (i < min) {\n                second = min;\n      \
    \          min = i;\n            } else if (i < second) {\n                second\
    \ = i;\n            }\n        }\n        if (second == min) {\n            return\
    \ null;\n        }\n        return second;", "        long min = lst.First();\n\
    \        long second_min = lst.First();\n        for (long i : lst) {\n      \
    \      if (i < min) {\n                second_min = min;\n                min\
    \ = i;\n            }\n            else if (i < second_min) {\n              \
    \  second_min = i;\n            }\n        }\n        if (second_min == min) {\n\
    \            return null;\n        }\n        return second_min;", "        long\
    \ min = lst.First();\n        long second = lst.First();\n        for (long i\
    \ : lst) {\n            if (i < min) {\n                second = min;\n      \
    \          min = i;\n            }\n            else if (i < second) {\n     \
    \           second = i;\n            }\n        }\n        return second == min\
    \ ? null : second;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            } else if (i < second) {\n   \
    \             second = i;\n            }\n        }\n        return second ==\
    \ min ? null : second;", "        long min = lst.First();\n        long secondMin\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               secondMin = min;\n                min = i;\n            } else\
    \ if (i < secondMin) {\n                secondMin = i;\n            }\n      \
    \  }\n        if (secondMin == min) {\n            return null;\n        } else\
    \ {\n            return secondMin;\n        }", "        if (lst.Count == 0) return\
    \ null;\n        long min = lst[0];\n        for (int i = 1; i < lst.Count; i++)\
    \ {\n            if (lst[i] < min) {\n                min = lst[i];\n        \
    \    }\n        }\n        for (int i = 0; i < lst.Count; i++) {\n           \
    \ if (lst[i] == min) {\n                return min;\n            }\n        }\n\
    \        return null;", "        long min = lst.First();\n        long max = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                min\
    \ = i;\n            }\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        for (long i : lst) {\n            if (i < max\
    \ && i > min) {\n                return i;\n            }\n        }\n       \
    \ return null;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min)\
    \ {\n                second = min;\n                min = lst[i];\n          \
    \  }\n            else if (lst[i] < second) {\n                second = lst[i];\n\
    \            }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long secondMin = lst.First();\n        for (long i : lst) {\n            if\
    \ (i < min) {\n                secondMin = min;\n                min = i;\n  \
    \          } else if (i < secondMin) {\n                secondMin = i;\n     \
    \       }\n        }\n        if (min == secondMin) {\n            return null;\n\
    \        }\n        return secondMin;", "        long min = lst.First();\n   \
    \     long second = lst.First();\n        for (long i : lst) {\n            if\
    \ (i < min) {\n                second = min;\n                min = i;\n     \
    \       }\n            else if (i < second) {\n                second = i;\n \
    \           }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long second = lst.First();\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                second = min;\n                min = i;\n        \
    \    }\n            else if (i < second) {\n                second = i;\n    \
    \        }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long second = lst.First();\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                second = min;\n                min = i;\n        \
    \    }\n            else if (i < second) {\n                second = i;\n    \
    \        }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long second = lst.First();\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                second = min;\n                min = i;\n        \
    \    }\n            else if (i < second) {\n                second = i;\n    \
    \        }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        if (lst.Count == 0) return null;\n\
    \        long min = lst[0];\n        long max = lst[0];\n        for (int i =\
    \ 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                min\
    \ = lst[i];\n            }\n            if (lst[i] > max) {\n                max\
    \ = lst[i];\n            }\n        }\n        for (int i = 1; i < lst.Count;\
    \ i++) {\n            if (lst[i] == min) {\n                return min;\n    \
    \        }\n            if (lst[i] == max) {\n                return max;\n  \
    \          }\n        }\n        return null;", "        long min = lst.First();\n\
    \        long secondMin = min;\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                secondMin = min;\n                min = i;\n     \
    \       } else if (i < secondMin) {\n                secondMin = i;\n        \
    \    }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        return secondMin;", "        long min = lst.First();\n   \
    \     long second = lst.First();\n        for (long i : lst) {\n            if\
    \ (i < min) {\n                second = min;\n                min = i;\n     \
    \       } else if (i < second) {\n                second = i;\n            }\n\
    \        }\n        return second == min ? null : second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (second == min) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst[0];\n        long secondMin = lst[0];\n        for (int i = 1; i < lst.Count;\
    \ i++) {\n            if (lst[i] < min) {\n                secondMin = min;\n\
    \                min = lst[i];\n            }\n            else if (lst[i] < secondMin)\
    \ {\n                secondMin = lst[i];\n            }\n        }\n        if\
    \ (min == secondMin) {\n            return null;\n        }\n        else {\n\
    \            return secondMin;\n        }", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           }\n            else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        if (min == second) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long secondMin = min;\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                secondMin = min;\n                min = i;\n            }\n\
    \            else if (i < secondMin) {\n                secondMin = i;\n     \
    \       }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        return secondMin;", "        long min = lst.First();\n   \
    \     long secondMin = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                secondMin = min;\n                min = i;\n\
    \            } else if (i < secondMin) {\n                secondMin = i;\n   \
    \         }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        return secondMin;", "        long min = lst.First();\n   \
    \     long secondMin = min;\n        for (long i : lst) {\n            if (i <\
    \ min) {\n                secondMin = min;\n                min = i;\n       \
    \     } else if (i < secondMin) {\n                secondMin = i;\n          \
    \  }\n        }\n        if (secondMin == min) {\n            return null;\n \
    \       } else {\n            return secondMin;\n        }", "        if (lst.Count\
    \ == 0) return null;\n        long min = lst[0];\n        for (int i = 1; i <\
    \ lst.Count; i++) {\n            if (lst[i] < min) {\n                min = lst[i];\n\
    \            }\n        }\n        for (int i = 0; i < lst.Count; i++) {\n   \
    \         if (lst[i] == min) {\n                return min;\n            }\n \
    \       }\n        return null;", "        long min = lst.First();\n        long\
    \ secondMin = min;\n        for (long i : lst) {\n            if (i < min) {\n\
    \                secondMin = min;\n                min = i;\n            } else\
    \ if (i < secondMin) {\n                secondMin = i;\n            }\n      \
    \  }\n        if (secondMin == min) {\n            return null;\n        } else\
    \ {\n            return secondMin;\n        }", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           }\n            else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        return second == min ? null : second;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n       \
    \         second = min;\n                min = lst[i];\n            }\n      \
    \      else if (lst[i] < second) {\n                second = lst[i];\n       \
    \     }\n        }\n        if (second == min) {\n            return null;\n \
    \       }\n        return second;", "        long min = lst.First();\n       \
    \ long secondMin = min;\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                secondMin = min;\n                min = i;\n            }\n\
    \            else if (i < secondMin) {\n                secondMin = i;\n     \
    \       }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        else {\n            return secondMin;\n        }", "     \
    \   if (lst.Count == 0)\n            return null;\n        long min = lst[0];\n\
    \        int index = 0;\n        for (int i = 1; i < lst.Count; i++) {\n     \
    \       if (lst[i] < min) {\n                min = lst[i];\n                index\
    \ = i;\n            }\n        }\n        if (index == 0)\n            return\
    \ null;\n        return min;", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            } else\
    \ if (i < second) {\n                second = i;\n            }\n        }\n \
    \       return second == min ? null : second;", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           }\n            else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        return second == min ? null : second;", " \
    \       if (lst.Count == 0)\n            return null;\n        long min = lst[0];\n\
    \        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min)\
    \ {\n                min = lst[i];\n            }\n        }\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (lst[i] == min) {\n           \
    \     return min;\n            }\n        }\n        return null;", "        long\
    \ min = lst.First();\n        long secondMin = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                secondMin = min;\n \
    \               min = i;\n            }\n            else if (i < secondMin) {\n\
    \                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        }\n        else {\n           \
    \ return secondMin;\n        }", "        long min = lst.First();\n        long\
    \ secondMin = min;\n        for (long i : lst) {\n            if (i < min) {\n\
    \                secondMin = min;\n                min = i;\n            } else\
    \ if (i < secondMin) {\n                secondMin = i;\n            }\n      \
    \  }\n        if (secondMin == min) {\n            return null;\n        } else\
    \ {\n            return secondMin;\n        }", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           } else if (i < second) {\n                second = i;\n          \
    \  }\n        }\n        if (min == second) {\n            return null;\n    \
    \    }\n        return second;", "        long min = lst.First();\n        long\
    \ secondMin = lst.First();\n        for (long i : lst) {\n            if (i <\
    \ min) {\n                secondMin = min;\n                min = i;\n       \
    \     } else if (i < secondMin) {\n                secondMin = i;\n          \
    \  }\n        }\n        if (secondMin == min) {\n            return null;\n \
    \       } else {\n            return secondMin;\n        }", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        return second == min ? null\
    \ : second;", "        long min = lst.First();\n        long secondMin = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                secondMin\
    \ = min;\n                min = i;\n            } else if (i < secondMin) {\n\
    \                secondMin = i;\n            }\n        }\n        if (min ==\
    \ secondMin) {\n            return null;\n        }\n        return secondMin;",
  "        long min = lst.First();\n        long secondMin = lst.First();\n      \
    \  for (long i : lst) {\n            if (i < min) {\n                secondMin\
    \ = min;\n                min = i;\n            }\n            else if (i < secondMin)\
    \ {\n                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        }\n        return secondMin;",
  "        long min = lst.First();\n        long second = lst.First();\n        for\
    \ (int i = 1; i < lst.Count(); i++) {\n            if (lst[i] < min) {\n     \
    \           second = min;\n                min = lst[i];\n            } else if\
    \ (lst[i] < second) {\n                second = lst[i];\n            }\n     \
    \   }\n        if (second == min) {\n            return null;\n        }\n   \
    \     return second;", "        long min = lst.First();\n        long secondMin\
    \ = min;\n        for (long i : lst) {\n            if (i < min) {\n         \
    \       secondMin = min;\n                min = i;\n            }\n          \
    \  else if (i < secondMin) {\n                secondMin = i;\n            }\n\
    \        }\n        if (secondMin == min) {\n            return null;\n      \
    \  }\n        return secondMin;", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            }\n\
    \            else if (i < second) {\n                second = i;\n           \
    \ }\n        }\n        return second == min ? null : second;", "        long\
    \ min = lst.First();\n        long second = lst.First();\n        for (int i =\
    \ 1; i < lst.Count(); i++) {\n            if (lst[i] < min) {\n              \
    \  second = min;\n                min = lst[i];\n            } else if (lst[i]\
    \ < second) {\n                second = lst[i];\n            }\n        }\n  \
    \      if (second == min) {\n            return null;\n        }\n        return\
    \ second;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            }\n            else if (i < second)\
    \ {\n                second = i;\n            }\n        }\n        if (second\
    \ == min) {\n            return null;\n        }\n        return second;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            } else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (second == min) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            } else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        return second == min ? null : second;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            } else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (second == min) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (min == second) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (min == second) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            } else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long secondMin = min;\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                secondMin = min;\n                min = i;\n            }\n\
    \            else if (i < secondMin) {\n                secondMin = i;\n     \
    \       }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        else {\n            return secondMin;\n        }", "     \
    \   long min = lst.First();\n        long second = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                second = min;\n    \
    \            min = i;\n            }\n            else if (i < second) {\n   \
    \             second = i;\n            }\n        }\n        return second ==\
    \ min ? null : second;", "        if (lst.Count == 0) return null;\n        long\
    \ min = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n            if\
    \ (lst[i] < min) {\n                min = lst[i];\n            }\n        }\n\
    \        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i] == min)\
    \ {\n                return min;\n            }\n        }\n        return null;",
  "        long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            } else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (min == second) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long secondMin = min;\n        for (long i : lst) {\n\
    \            if (i < min) {\n                secondMin = min;\n              \
    \  min = i;\n            }\n            else if (i < secondMin) {\n          \
    \      secondMin = i;\n            }\n        }\n        if (secondMin == min)\
    \ {\n            return null;\n        }\n        return secondMin;", "      \
    \  long min = lst.First();\n        long second = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                second = min;\n    \
    \            min = i;\n            } else if (i < second) {\n                second\
    \ = i;\n            }\n        }\n        if (second == min) {\n            return\
    \ null;\n        }\n        return second;", "        long min = lst.First();\n\
    \        long max = lst.First();\n        for (int i = 1; i < lst.Count(); i++)\
    \ {\n            if (lst[i] < min) {\n                min = lst[i];\n        \
    \    }\n            if (lst[i] > max) {\n                max = lst[i];\n     \
    \       }\n        }\n        if (min == max) {\n            return null;\n  \
    \      }\n        return max;", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            }\n\
    \            else if (i < second) {\n                second = i;\n           \
    \ }\n        }\n        if (second == min) {\n            return null;\n     \
    \   }\n        return second;", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            } else\
    \ if (i < second) {\n                second = i;\n            }\n        }\n \
    \       if (min == second) {\n            return null;\n        } else {\n   \
    \         return second;\n        }", "        if (lst.Count == 0) return null;\n\
    \        long min = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n \
    \           if (lst[i] < min) {\n                min = lst[i];\n            }\n\
    \        }\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]\
    \ == min) {\n                return min;\n            }\n        }\n        return\
    \ null;", "        long min = lst.First();\n        long secondMin = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                secondMin\
    \ = min;\n                min = i;\n            } else if (i < secondMin) {\n\
    \                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        } else {\n            return secondMin;\n\
    \        }", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            }\n            else if (i < second)\
    \ {\n                second = i;\n            }\n        }\n        if (second\
    \ == min) {\n            return null;\n        }\n        return second;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            } else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        return second == min ? null\
    \ : second;", "        long min = lst.First();\n        long second_min = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second_min\
    \ = min;\n                min = i;\n            } else if (i < second_min) {\n\
    \                second_min = i;\n            }\n        }\n        return second_min\
    \ == min ? null : second_min;", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            }\n\
    \            else if (i < second) {\n                second = i;\n           \
    \ }\n        }\n        if (second == min) {\n            return null;\n     \
    \   }\n        return second;", "        long min = lst.First();\n        long\
    \ second_min = lst.First();\n        for (long i : lst) {\n            if (i <\
    \ min) {\n                second_min = min;\n                min = i;\n      \
    \      } else if (i < second_min) {\n                second_min = i;\n       \
    \     }\n        }\n        return second_min == min ? null : second_min;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long max = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                min = i;\n         \
    \   }\n            if (i > max) {\n                max = i;\n            }\n \
    \       }\n        if (min == max) {\n            return null;\n        }\n  \
    \      return max;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (int i = 1; i < lst.Count(); i++) {\n            if (lst[i] < min)\
    \ {\n                second = min;\n                min = lst[i];\n          \
    \  }\n            else if (lst[i] < second) {\n                second = lst[i];\n\
    \            }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        if (lst.Count == 0) return null;\n\
    \        long min = lst[0];\n        long secondMin = lst[0];\n        for (int\
    \ i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n            \
    \    secondMin = min;\n                min = lst[i];\n            }\n        \
    \    else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n   \
    \         }\n        }\n        if (secondMin == min) return null;\n        return\
    \ secondMin;", "        if (lst.Count == 0) return null;\n        long min = lst[0];\n\
    \        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min)\
    \ {\n                min = lst[i];\n            }\n        }\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (lst[i] == min) {\n           \
    \     return min;\n            }\n        }\n        return null;", "        long\
    \ min = lst[0];\n        long second_min = lst[0];\n        for (int i = 1; i\
    \ < lst.Count; i++) {\n            if (lst[i] < min) {\n                second_min\
    \ = min;\n                min = lst[i];\n            }\n            else if (lst[i]\
    \ < second_min) {\n                second_min = lst[i];\n            }\n     \
    \   }\n        if (second_min == min) {\n            return null;\n        }\n\
    \        return second_min;", "        if (lst.Count == 0)\n            return\
    \ null;\n        long min = lst[0];\n        for (int i = 1; i < lst.Count; i++)\
    \ {\n            if (lst[i] < min) {\n                min = lst[i];\n        \
    \    }\n        }\n        for (int i = 0; i < lst.Count; i++) {\n           \
    \ if (lst[i] == min) {\n                return min;\n            }\n        }\n\
    \        return null;", "        if (lst.Count == 0)\n            return null;\n\
    \        long min = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n \
    \           if (lst[i] < min) {\n                min = lst[i];\n            }\n\
    \        }\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]\
    \ == min) {\n                return min;\n            }\n        }\n        return\
    \ null;", "        if (lst.Count == 0) return null;\n        long min = lst[0];\n\
    \        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min)\
    \ {\n                min = lst[i];\n            }\n        }\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (lst[i] == min) {\n           \
    \     return min;\n            }\n        }\n        return null;", "        if\
    \ (lst.Count == 0)\n            return null;\n        long min = lst.First;\n\
    \        long max = lst.First;\n        for (int i = 0; i < lst.Count; i++) {\n\
    \            if (lst[i] < min) {\n                min = lst[i];\n            }\n\
    \            else if (lst[i] > max) {\n                max = lst[i];\n       \
    \     }\n        }\n        for (int i = 0; i < lst.Count; i++) {\n          \
    \  if (lst[i] == min) {\n                if (i + 1 < lst.Count) {\n          \
    \          return lst[i + 1];\n                }\n                else {\n   \
    \                 return min;\n                }\n            }\n            else\
    \ if (lst[i] == max) {\n                if (i - 1 >= 0) {\n                  \
    \  return lst[i - 1];\n                }\n                else {\n           \
    \         return max;\n                }\n            }\n        }\n        return\
    \ null;", "        long min = lst.First();\n        long secondMin = min;\n  \
    \      for (long i : lst) {\n            if (i < min) {\n                secondMin\
    \ = min;\n                min = i;\n            } else if (i < secondMin) {\n\
    \                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        } else {\n            return secondMin;\n\
    \        }", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            } else if (i < second) {\n   \
    \             second = i;\n            }\n        }\n        if (second == min)\
    \ {\n            return null;\n        } else {\n            return second;\n\
    \        }", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            } else if (i < second) {\n   \
    \             second = i;\n            }\n        }\n        return second ==\
    \ min ? null : second;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            } else if\
    \ (i < second) {\n                second = i;\n            }\n        }\n    \
    \    if (min == second) {\n            return null;\n        }\n        return\
    \ second;", "        if (lst.Count == 0) return null;\n        long min = lst[0];\n\
    \        long second_min = lst[0];\n        for (int i = 1; i < lst.Count; i++)\
    \ {\n            if (lst[i] < min) {\n                second_min = min;\n    \
    \            min = lst[i];\n            }\n            else if (lst[i] < second_min)\
    \ {\n                second_min = lst[i];\n            }\n        }\n        return\
    \ second_min;", "        if (lst.Count == 0)\n            return null;\n     \
    \   long min = lst[0];\n        long secondMin = lst[0];\n        for (int i =\
    \ 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                secondMin\
    \ = min;\n                min = lst[i];\n            }\n            else if (lst[i]\
    \ < secondMin) {\n                secondMin = lst[i];\n            }\n       \
    \ }\n        return secondMin;", "        long min = lst.First();\n        long\
    \ second_min = min;\n        for (long i : lst) {\n            if (i < min) {\n\
    \                second_min = min;\n                min = i;\n            }\n\
    \            else if (i < second_min) {\n                second_min = i;\n   \
    \         }\n        }\n        if (second_min == min) {\n            return null;\n\
    \        }\n        else {\n            return second_min;\n        }", "    \
    \    long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long secondMin = min;\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                secondMin = min;\n \
    \               min = i;\n            } else if (i < secondMin) {\n          \
    \      secondMin = i;\n            }\n        }\n        if (secondMin == min)\
    \ {\n            return null;\n        }\n        return secondMin;", "      \
    \  long min = lst.First();\n        long secondMin = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                secondMin = min;\n\
    \                min = i;\n            } else if (i < secondMin) {\n         \
    \       secondMin = i;\n            }\n        }\n        if (secondMin == min)\
    \ {\n            return null;\n        }\n        return secondMin;", "      \
    \  long min = lst.First();\n        long secondMin = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                secondMin = min;\n\
    \                min = i;\n            }\n            else if (i < secondMin)\
    \ {\n                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        }\n        return secondMin;",
  "        long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        return second\
    \ == min ? null : second;", "        long min = lst.First();\n        long max\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               min = i;\n            }\n            if (i > max) {\n        \
    \        max = i;\n            }\n        }\n        if (min == max) {\n     \
    \       return null;\n        }\n        for (long i : lst) {\n            if\
    \ (i < min && i > max) {\n                min = i;\n            }\n        }\n\
    \        return min;", "        if (lst.Count == 0) return null;\n        long\
    \ min = lst[0];\n        long secondMin = lst[0];\n        for (int i = 1; i <\
    \ lst.Count; i++) {\n            if (lst[i] < min) {\n                secondMin\
    \ = min;\n                min = lst[i];\n            }\n            else if (lst[i]\
    \ < secondMin) {\n                secondMin = lst[i];\n            }\n       \
    \ }\n        return secondMin;", "        long min = lst.First();\n        long\
    \ secondMin = min;\n        for (long i : lst) {\n            if (i < min) {\n\
    \                secondMin = min;\n                min = i;\n            }\n \
    \           else if (i < secondMin) {\n                secondMin = i;\n      \
    \      }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        return secondMin;", "        long min = lst.First();\n   \
    \     long secondMin = min;\n        for (long i : lst) {\n            if (i <\
    \ min) {\n                secondMin = min;\n                min = i;\n       \
    \     } else if (i < secondMin) {\n                secondMin = i;\n          \
    \  }\n        }\n        if (secondMin == min) {\n            return null;\n \
    \       }\n        return secondMin;", "        long min = lst.First();\n    \
    \    long second_min = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second_min = min;\n                min = i;\n\
    \            }\n            else if (i < second_min) {\n                second_min\
    \ = i;\n            }\n        }\n        if (second_min == min) {\n         \
    \   return null;\n        }\n        return second_min;", "        long min =\
    \ lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            } else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        if (min == second) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long second = lst.First();\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                second = min;\n                min = i;\n        \
    \    }\n            else if (i < second) {\n                second = i;\n    \
    \        }\n        }\n        if (min == second) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long second = lst.First();\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                second = min;\n                min = i;\n        \
    \    } else if (i < second) {\n                second = i;\n            }\n  \
    \      }\n        if (second == min) {\n            return null;\n        }\n\
    \        return second;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            }\n     \
    \       else if (i < second) {\n                second = i;\n            }\n \
    \       }\n        return second == min ? null : second;", "        long min =\
    \ lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (min == second) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long secondMin = min;\n        for (long i : lst) {\n\
    \            if (i < min) {\n                secondMin = min;\n              \
    \  min = i;\n            } else if (i < secondMin) {\n                secondMin\
    \ = i;\n            }\n        }\n        if (secondMin == min) {\n          \
    \  return null;\n        }\n        return secondMin;", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           }\n            else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        return second == min ? null : second;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        return second\
    \ == min ? null : second;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            }\n     \
    \       else if (i < second) {\n                second = i;\n            }\n \
    \       }\n        if (second == min) {\n            return null;\n        }\n\
    \        return second;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            } else if\
    \ (i < second) {\n                second = i;\n            }\n        }\n    \
    \    if (second == min) {\n            return null;\n        } else {\n      \
    \      return second;\n        }", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            } else\
    \ if (i < second) {\n                second = i;\n            }\n        }\n \
    \       return second == min ? null : second;", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           }\n            else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        if (min == second) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long second = lst.First();\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                second = min;\n                min = i;\n        \
    \    }\n            else if (i < second) {\n                second = i;\n    \
    \        }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst[0];\n        long\
    \ secondMin = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n       \
    \     if (lst[i] < min) {\n                secondMin = min;\n                min\
    \ = lst[i];\n            }\n            else if (lst[i] < secondMin) {\n     \
    \           secondMin = lst[i];\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        }\n        else {\n           \
    \ return secondMin;\n        }", "        long min = lst.First();\n        long\
    \ secondMin = min;\n        for (long i : lst) {\n            if (i < min) {\n\
    \                secondMin = min;\n                min = i;\n            } else\
    \ if (i < secondMin) {\n                secondMin = i;\n            }\n      \
    \  }\n        if (secondMin == min) {\n            return null;\n        }\n \
    \       return secondMin;", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            }\n     \
    \       else if (i < second) {\n                second = i;\n            }\n \
    \       }\n        if (second == min) {\n            return null;\n        }\n\
    \        return second;", "        if (lst.Count == 0)\n            return null;\n\
    \        long min = lst[0];\n        long secondMin = lst[0];\n        for (int\
    \ i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n            \
    \    secondMin = min;\n                min = lst[i];\n            }\n        \
    \    else if (lst[i] < secondMin) {\n                secondMin = lst[i];\n   \
    \         }\n        }\n        return secondMin;", "        if (lst.Count ==\
    \ 0)\n            return null;\n        long min = lst[0];\n        for (int i\
    \ = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n              \
    \  min = lst[i];\n            }\n        }\n        for (int i = 0; i < lst.Count;\
    \ i++) {\n            if (lst[i] == min) {\n                return min;\n    \
    \        }\n        }\n        return null;", "        long min = lst.First();\n\
    \        long max = lst.Last();\n        for (long i = min + 1; i <= max; i++)\
    \ {\n            if (lst.Contains(i)) {\n                return i;\n         \
    \   }\n        }\n        return null;", "        if (lst.Count == 0) return null;\n\
    \        long min = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n \
    \           if (lst[i] < min) {\n                min = lst[i];\n            }\n\
    \        }\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]\
    \ == min) {\n                return min;\n            }\n        }\n        return\
    \ null;", "        if (lst.Count == 0)\n            return null;\n        long\
    \ min = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n            if\
    \ (lst[i] < min) {\n                min = lst[i];\n            }\n        }\n\
    \        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i] == min)\
    \ {\n                return min;\n            }\n        }\n        return null;",
  "        if (lst.Count == 0) return null;\n        long min = lst.First;\n     \
    \   long max = lst.First;\n        for (int i = 1; i < lst.Count; i++) {\n   \
    \         if (lst[i] < min) {\n                min = lst[i];\n            }\n\
    \            if (lst[i] > max) {\n                max = lst[i];\n            }\n\
    \        }\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]\
    \ == max) {\n                return max;\n            }\n        }\n        return\
    \ null;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            }\n            else if (i < second)\
    \ {\n                second = i;\n            }\n        }\n        if (min ==\
    \ second) {\n            return null;\n        }\n        return second;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (min == second)\
    \ {\n            return null;\n        }\n        return second;", "        long\
    \ min = lst.First();\n        long second = lst.First();\n        for (int i =\
    \ 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n                second\
    \ = min;\n                min = lst[i];\n            }\n            else if (lst[i]\
    \ < second) {\n                second = lst[i];\n            }\n        }\n  \
    \      if (second == min) {\n            return null;\n        }\n        return\
    \ second;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            } else if (i < second) {\n   \
    \             second = i;\n            }\n        }\n        if (second == min)\
    \ {\n            return null;\n        }\n        return second;", "        long\
    \ min = lst.First();\n        long second = lst.First();\n        for (long i\
    \ : lst) {\n            if (i < min) {\n                second = min;\n      \
    \          min = i;\n            } else if (i < second) {\n                second\
    \ = i;\n            }\n        }\n        if (second == min) {\n            return\
    \ null;\n        }\n        return second;", "        long min = lst[0];\n   \
    \     long second = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n \
    \           if (lst[i] < min) {\n                second = min;\n             \
    \   min = lst[i];\n            }\n            else if (lst[i] < second) {\n  \
    \              second = lst[i];\n            }\n        }\n        if (second\
    \ == min) {\n            return null;\n        }\n        return second;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            } else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        return second == min ? null\
    \ : second;", "        if (lst.Count == 0) return null;\n        long min = lst[0];\n\
    \        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min)\
    \ {\n                min = lst[i];\n            }\n        }\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (lst[i] == min) {\n           \
    \     return min;\n            }\n        }\n        return null;", "        long\
    \ min = lst.First();\n        long second = lst.First();\n        for (long i\
    \ : lst) {\n            if (i < min) {\n                second = min;\n      \
    \          min = i;\n            }\n            else if (i < second) {\n     \
    \           second = i;\n            }\n        }\n        if (min == second)\
    \ {\n            return null;\n        }\n        else {\n            return second;\n\
    \        }", "        long min = lst.First();\n        long secondMin = min;\n\
    \        for (long i : lst) {\n            if (i < min) {\n                secondMin\
    \ = min;\n                min = i;\n            }\n            else if (i < secondMin)\
    \ {\n                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        }\n        return secondMin;",
  "        long min = lst.First();\n        long second_min = lst.First();\n     \
    \   for (long i : lst) {\n            if (i < min) {\n                second_min\
    \ = min;\n                min = i;\n            } else if (i < second_min) {\n\
    \                second_min = i;\n            }\n        }\n        if (second_min\
    \ == min)\n            return null;\n        return second_min;", "        long\
    \ min = lst.First();\n        long secondMin = min;\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                secondMin = min;\n          \
    \      min = i;\n            } else if (i < secondMin) {\n                secondMin\
    \ = i;\n            }\n        }\n        if (secondMin == min) {\n          \
    \  return null;\n        }\n        return secondMin;", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           }\n            else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        return second;", "        long min = lst.First();\n      \
    \  long second = lst.First();\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                second = min;\n                min = i;\n        \
    \    }\n            else if (i < second) {\n                second = i;\n    \
    \        }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        else {\n            return second;\n        }", "        long\
    \ min = lst.First();\n        long second = lst.First();\n        for (long i\
    \ : lst) {\n            if (i < min) {\n                second = min;\n      \
    \          min = i;\n            }\n            else if (i < second) {\n     \
    \           second = i;\n            }\n        }\n        if (second == min)\
    \ {\n            return null;\n        }\n        else {\n            return second;\n\
    \        }", "        if (lst.Count == 0) return null;\n        long min = lst[0];\n\
    \        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min)\
    \ {\n                min = lst[i];\n            }\n        }\n        for (int\
    \ i = 0; i < lst.Count; i++) {\n            if (lst[i] == min) {\n           \
    \     return min;\n            }\n        }\n        return null;", "        long\
    \ min = lst.First();\n        long secondMin = min;\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                secondMin = min;\n          \
    \      min = i;\n            } else if (i < secondMin) {\n                secondMin\
    \ = i;\n            }\n        }\n        if (secondMin == min) {\n          \
    \  return null;\n        }\n        return secondMin;", "        long min = lst.First();\n\
    \        long secondMin = min;\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                secondMin = min;\n                min = i;\n     \
    \       } else if (i < secondMin) {\n                secondMin = i;\n        \
    \    }\n        }\n        if (secondMin == min) {\n            return null;\n\
    \        }\n        return secondMin;", "        long min = lst.First();\n   \
    \     long second = lst.First();\n        for (long i : lst) {\n            if\
    \ (i < min) {\n                second = min;\n                min = i;\n     \
    \       }\n            else if (i < second) {\n                second = i;\n \
    \           }\n        }\n        if (second == min) {\n            return null;\n\
    \        }\n        else {\n            return second;\n        }", "        long\
    \ min = lst[0];\n        int index = 0;\n        for (int i = 1; i < lst.Count;\
    \ i++) {\n            if (lst[i] < min) {\n                min = lst[i];\n   \
    \             index = i;\n            }\n        }\n        if (index == 0)\n\
    \            return null;\n        else\n            return min;", "        long\
    \ min = lst.First();\n        long secondMin = min;\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                secondMin = min;\n          \
    \      min = i;\n            } else if (i < secondMin) {\n                secondMin\
    \ = i;\n            }\n        }\n        if (secondMin == min) {\n          \
    \  return null;\n        }\n        return secondMin;", "        long min = lst.First();\n\
    \        long secondMin = min;\n        for (long i : lst) {\n            if (i\
    \ < min) {\n                secondMin = min;\n                min = i;\n     \
    \       }\n            else if (i < secondMin) {\n                secondMin =\
    \ i;\n            }\n        }\n        if (secondMin == min) {\n            return\
    \ null;\n        }\n        return secondMin;", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           }\n            else if (i < second) {\n                second = i;\n\
    \            }\n        }\n        return second == min ? null : second;", " \
    \       long min = lst.First();\n        long secondMin = min;\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                secondMin = min;\n \
    \               min = i;\n            }\n            else if (i < secondMin) {\n\
    \                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        }\n        return secondMin;",
  "        long min = lst.First();\n        long secondMin = min;\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                secondMin = min;\n \
    \               min = i;\n            } else if (i < secondMin) {\n          \
    \      secondMin = i;\n            }\n        }\n        if (secondMin == min)\
    \ {\n            return null;\n        }\n        return secondMin;", "      \
    \  long min = lst.First();\n        long second = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                second = min;\n    \
    \            min = i;\n            }\n            else if (i < second) {\n   \
    \             second = i;\n            }\n        }\n        if (second == min)\
    \ {\n            return null;\n        }\n        return second;", "        long\
    \ min = lst.First();\n        long secondMin = min;\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                secondMin = min;\n          \
    \      min = i;\n            } else if (i < secondMin) {\n                secondMin\
    \ = i;\n            }\n        }\n        if (secondMin == min) {\n          \
    \  return null;\n        } else {\n            return secondMin;\n        }",
  "        long min = lst.First();\n        long secondMin = lst.First();\n      \
    \  for (long i : lst) {\n            if (i < min) {\n                secondMin\
    \ = min;\n                min = i;\n            } else if (i < secondMin) {\n\
    \                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        }\n        return secondMin;",
  "        long min = lst.First();\n        long max = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                min = i;\n         \
    \   }\n            if (i > max) {\n                max = i;\n            }\n \
    \       }\n        if (min == max) {\n            return null;\n        }\n  \
    \      for (long i : lst) {\n            if (i < min && i > max) {\n         \
    \       min = i;\n            }\n        }\n        return min;", "        long\
    \ min = lst[0];\n        long second_min = lst[0];\n        for (int i = 1; i\
    \ < lst.Count; i++) {\n            if (lst[i] < min) {\n                second_min\
    \ = min;\n                min = lst[i];\n            }\n            else if (lst[i]\
    \ < second_min) {\n                second_min = lst[i];\n            }\n     \
    \   }\n        if (second_min == min) {\n            return null;\n        }\n\
    \        return second_min;", "        if (lst.Count == 0) return null;\n    \
    \    long min = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n     \
    \       if (lst[i] < min) {\n                min = lst[i];\n            }\n  \
    \      }\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]\
    \ == min) {\n                return min;\n            }\n        }\n        return\
    \ null;", "        long min = lst[0];\n        long second_min = lst[0];\n   \
    \     for (int i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n\
    \                second_min = min;\n                min = lst[i];\n          \
    \  }\n            else if (lst[i] < second_min) {\n                second_min\
    \ = lst[i];\n            }\n        }\n        if (second_min == min) {\n    \
    \        return null;\n        }\n        return second_min;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (second == min) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long second = lst.First();\n        for (long i : lst)\
    \ {\n            if (i < min) {\n                second = min;\n             \
    \   min = i;\n            }\n            else if (i < second) {\n            \
    \    second = i;\n            }\n        }\n        if (min == second) {\n   \
    \         return null;\n        }\n        return second;", "        long min\
    \ = lst.First();\n        long secondMin = lst.First();\n        for (long i :\
    \ lst) {\n            if (i < min) {\n                secondMin = min;\n     \
    \           min = i;\n            } else if (i < secondMin) {\n              \
    \  secondMin = i;\n            }\n        }\n        if (secondMin == min) {\n\
    \            return null;\n        }\n        return secondMin;", "        long\
    \ min = lst.First();\n        long second = lst.First();\n        for (long i\
    \ : lst) {\n            if (i < min) {\n                second = min;\n      \
    \          min = i;\n            }\n            else if (i < second) {\n     \
    \           second = i;\n            }\n        }\n        if (min == second)\
    \ {\n            return null;\n        }\n        return second;", "        long\
    \ min = lst.First();\n        long max = lst.Last();\n        for (long i = min\
    \ + 1; i <= max; i++) {\n            if (lst.Contains(i)) {\n                return\
    \ i;\n            }\n        }\n        return null;", "        if (lst.Count\
    \ == 0)\n            return null;\n        long min = lst[0];\n        for (int\
    \ i = 1; i < lst.Count; i++) {\n            if (lst[i] < min) {\n            \
    \    min = lst[i];\n            }\n        }\n        for (int i = 0; i < lst.Count;\
    \ i++) {\n            if (lst[i] == min) {\n                return min;\n    \
    \        }\n        }\n        return null;", "        long min = lst.First();\n\
    \        long second = lst.First();\n        for (long i : lst) {\n          \
    \  if (i < min) {\n                second = min;\n                min = i;\n \
    \           } else if (i < second) {\n                second = i;\n          \
    \  }\n        }\n        if (second == min) {\n            return null;\n    \
    \    }\n        return second;", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            }\n\
    \            else if (i < second) {\n                second = i;\n           \
    \ }\n        }\n        if (second == min) {\n            return null;\n     \
    \   }\n        return second;", "        long min = lst.First();\n        long\
    \ second = lst.First();\n        for (long i : lst) {\n            if (i < min)\
    \ {\n                second = min;\n                min = i;\n            } else\
    \ if (i < second) {\n                second = i;\n            }\n        }\n \
    \       if (second == min) {\n            return null;\n        }\n        return\
    \ second;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            }\n            else if (i < second)\
    \ {\n                second = i;\n            }\n        }\n        if (min ==\
    \ second) {\n            return null;\n        }\n        else {\n           \
    \ return second;\n        }", "        long min = lst.First();\n        long second\
    \ = lst.First();\n        for (long i : lst) {\n            if (i < min) {\n \
    \               second = min;\n                min = i;\n            } else if\
    \ (i < second) {\n                second = i;\n            }\n        }\n    \
    \    if (second == min) {\n            return null;\n        }\n        return\
    \ second;", "        long min = lst.First();\n        long second = lst.First();\n\
    \        for (long i : lst) {\n            if (i < min) {\n                second\
    \ = min;\n                min = i;\n            }\n            else if (i < second)\
    \ {\n                second = i;\n            }\n        }\n        if (min ==\
    \ second) {\n            return null;\n        }\n        return second;", " \
    \       long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        else {\n            return\
    \ second;\n        }", "        if (lst.Count == 0)\n            return null;\n\
    \        long min = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n \
    \           if (lst[i] < min) {\n                min = lst[i];\n            }\n\
    \        }\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]\
    \ == min) {\n                return min;\n            }\n        }\n        return\
    \ null;", "        if (lst.Count == 0) {\n            return null;\n        }\n\
    \        long min = lst.First;\n        long secondMin = lst.First;\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                secondMin = min;\n\
    \                min = i;\n            } else if (i < secondMin) {\n         \
    \       secondMin = i;\n            }\n        }\n        if (min == secondMin)\
    \ {\n            return null;\n        }\n        return secondMin;", "      \
    \  long min = lst.First();\n        long second = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                second = min;\n    \
    \            min = i;\n            }\n            else if (i < second) {\n   \
    \             second = i;\n            }\n        }\n        if (min == second)\
    \ {\n            return null;\n        }\n        return second;", "        long\
    \ min = lst.First();\n        long secondMin = lst.First();\n        for (long\
    \ i : lst) {\n            if (i < min) {\n                secondMin = min;\n \
    \               min = i;\n            }\n            else if (i < secondMin) {\n\
    \                secondMin = i;\n            }\n        }\n        if (secondMin\
    \ == min) {\n            return null;\n        }\n        return secondMin;",
  "        long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (second ==\
    \ min) {\n            return null;\n        }\n        return second;", "    \
    \    long min = lst.First();\n        long second = lst.First();\n        for\
    \ (long i : lst) {\n            if (i < min) {\n                second = min;\n\
    \                min = i;\n            }\n            else if (i < second) {\n\
    \                second = i;\n            }\n        }\n        if (min == second)\
    \ {\n            return null;\n        }\n        return second;", "        long\
    \ min = lst.First();\n        long max = lst.Last();\n        for (long i = min\
    \ + 1; i <= max; i++) {\n            if (lst.Contains(i)) {\n                return\
    \ i;\n            }\n        }\n        return null;"]
stop_tokens:
- "\n    }\n"

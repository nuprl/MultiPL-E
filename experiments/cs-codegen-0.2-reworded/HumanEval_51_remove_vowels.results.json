{
  "name": "HumanEval_51_remove_vowels",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else\n                index++;\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00023] in <73d89b62448841a79f6b238827687ea8>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <73d89b62448841a79f6b238827687ea8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00023] in <73d89b62448841a79f6b238827687ea8>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <73d89b62448841a79f6b238827687ea8>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var vowelsIndex = new HashSet<char>(vowels);\n        var result = \"\";\n        for (var i = 0; i < text.Length; i++) {\n            if (!vowelsIndex.Contains(text[i])) {\n                result += text[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d3c5669583e34326ac9e816cb3151f9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d3c5669583e34326ac9e816cb3151f9b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                j = i;\n                while (j < text.Length) {\n                    if (text[j] >= 'a' && text[j] <= 'z') {\n                        text = text.Remove(j, 1);\n                        i = j;\n                        j = i;\n                    }\n                    else {\n                        j++;\n                    }\n                }\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89a741aa58a346a9b830133e1176ab70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89a741aa58a346a9b830133e1176ab70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n                continue;\n            }\n            text[j] = text[i];\n            i++;\n            j++;\n        }\n        text = text.Substring(0, j);\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphjk9jh3q.cs(31,13): error CS0200: Property or indexer 'string.this[int]' cannot be assigned to -- it is read only\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= 'A' && text[index] <= 'Z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= '0' && text[index] <= '9') {\n                index++;\n                continue;\n            }\n            if (text[index] == ' ') {\n                index++;\n                continue;\n            }\n            if (text[index] == '.') {\n                index++;\n                continue;\n            }\n            if (text[index] == ',') {\n                index++;\n                continue;\n            }\n            if (text[index] == '!') {\n                index++;\n                continue;\n            }\n            if (text[index] == '?') {\n                index++;\n                continue;\n            }\n            if (text[index] == ';') {\n                index++;\n                continue;\n            }\n            if (text[index] == ':') {\n                index++;\n                continue;\n            }\n            if (text[index] == '(') {\n                index++;\n                continue;\n            }\n            if (text[index] == ')') {\n                index++;\n                continue;\n            }\n            if (text[index] == '{') {\n                index++;\n                continue;\n            }\n            if (text[index] == '}') {\n                index++;\n                continue;\n            }\n            if (text[index] == '+') {\n                index++;\n                continue;\n            }\n            if (text[index] == '-') {\n                index++;\n                continue;\n            }\n            if (text[index] == '*') {\n                index++;\n                continue;\n            }\n            if (text[index] == '/') {\n                index++;\n                continue;\n            }\n            if (text[index] == '=\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5e3g2z1l.cs(98,32): error CS1010: Newline in constant\n/tmp/tmp5e3g2z1l.cs(98,34): error CS1026: ) expected\n/tmp/tmp5e3g2z1l.cs(98,34): error CS1525: Invalid expression term '}'\n/tmp/tmp5e3g2z1l.cs(98,34): error CS1002: ; expected\n/tmp/tmp5e3g2z1l.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp5e3g2z1l.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001d] in <f22c94814c7a46d3b991dbbef058004e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <f22c94814c7a46d3b991dbbef058004e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001d] in <f22c94814c7a46d3b991dbbef058004e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <f22c94814c7a46d3b991dbbef058004e>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            }\n            else {\n                break;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000cd] in <907e8b4953554d069cc0163df5a60eaa>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <907e8b4953554d069cc0163df5a60eaa>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000cd] in <907e8b4953554d069cc0163df5a60eaa>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <907e8b4953554d069cc0163df5a60eaa>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return \"\";\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\"') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwi7ln3ii.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpwi7ln3ii.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                continue;\n            }\n            i++;\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <59a07c9b92fe471ea5d5252f7fc4a080>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <59a07c9b92fe471ea5d5252f7fc4a080>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '.') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ',') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '!') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '?') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ';') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ':') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '(') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ')') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '{') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl95lrmim.cs(77,27): error CS1003: Syntax error, ']' expected\n/tmp/tmpl95lrmim.cs(77,27): error CS1026: ) expected\n/tmp/tmpl95lrmim.cs(77,27): error CS1525: Invalid expression term '}'\n/tmp/tmpl95lrmim.cs(77,27): error CS1002: ; expected\n/tmp/tmpl95lrmim.cs(79,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpl95lrmim.cs(89,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '<') {\n                i++;\n                continue;\n            }\n            if (text[i] == '>') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if (text[i] == '$') {\n                i++;\n                continue;\n            }\n            if (text[i] == '%') {\n                i\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuuzytd0q.cs(98,18): error CS1002: ; expected\n/tmp/tmpuuzytd0q.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpuuzytd0q.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '<') {\n                i++;\n                continue;\n            }\n            if (text[i] == '>') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if (text[i] == '$') {\n                i++;\n                continue;\n            }\n            if\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5mqbntyh.cs(99,15): error CS1003: Syntax error, '(' expected\n/tmp/tmp5mqbntyh.cs(99,15): error CS1525: Invalid expression term '}'\n/tmp/tmp5mqbntyh.cs(99,15): error CS1026: ) expected\n/tmp/tmp5mqbntyh.cs(99,15): error CS1002: ; expected\n/tmp/tmp5mqbntyh.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp5mqbntyh.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.replaceAll(\"[aeiou]\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppg30f2t8.cs(22,21): error CS1061: 'string' does not contain a definition for 'replaceAll' and no accessible extension method 'replaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprq47_qg7.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprq47_qg7.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int index = 0;\n        int length = text.Length;\n        char[] chars = text.ToCharArray();\n        while (index < length) {\n            if (chars[index] >= 'a' && chars[index] <= 'z') {\n                index++;\n                continue;\n            }\n            if (chars[index] >= 'A' && chars[index] <= 'Z') {\n                index++;\n                continue;\n            }\n            if (chars[index] >= '0' && chars[index] <= '9') {\n                index++;\n                continue;\n            }\n            chars[index] = ' ';\n            index++;\n        }\n        return new string(chars);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <500f035ec3334f9fa04746c20666a598>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <500f035ec3334f9fa04746c20666a598>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25b85ee738a54703b9a4b98e639089c3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25b85ee738a54703b9a4b98e639089c3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            }\n            else {\n                i++;\n                j--;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000ce] in <f64bd2900a684021a1feb2d274b707ee>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <f64bd2900a684021a1feb2d274b707ee>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000ce] in <f64bd2900a684021a1feb2d274b707ee>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <f64bd2900a684021a1feb2d274b707ee>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.IndexOf(text[i]) != -1) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        if (i == text.Length)\n            return \"\";\n        int j = text.Length - 1;\n        while (j >= i) {\n            if (vowels.IndexOf(text[j]) != -1) {\n                j--;\n            }\n            else {\n                break;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000b1] in <e4656cd1224b4ab492bbb05bd5e6da01>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e4656cd1224b4ab492bbb05bd5e6da01>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000b1] in <e4656cd1224b4ab492bbb05bd5e6da01>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e4656cd1224b4ab492bbb05bd5e6da01>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= 'A' && text[index] <= 'Z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= '0' && text[index] <= '9') {\n                index++;\n                continue;\n            }\n            if (text[index] == ' ') {\n                index++;\n                continue;\n            }\n            if (text[index] == '.') {\n                index++;\n                continue;\n            }\n            if (text[index] == ',') {\n                index++;\n                continue;\n            }\n            if (text[index] == '!') {\n                index++;\n                continue;\n            }\n            if (text[index] == '?') {\n                index++;\n                continue;\n            }\n            if (text[index] == '-') {\n                index++;\n                continue;\n            }\n            if (text[index] == '_') {\n                index++;\n                continue;\n            }\n            if (text[index] == '(') {\n                index++;\n                continue;\n            }\n            if (text[index] == ')') {\n                index++;\n                continue;\n            }\n            if (text[index] == '{') {\n                index++;\n                continue;\n            }\n            if (text[index] == '}') {\n                index++;\n                continue;\n            }\n            if (text[index] == ':') {\n                index++;\n                continue;\n            }\n            if (text[index] == ';') {\n                index++;\n                continue;\n            }\n            if (text[index] == '\"') {\n                index++;\n                continue;\n            }\n            if (text[index] == '\\'') {\n                index++;\n                continue;\n            }\n            if (text[index] ==\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvomoeu2a.cs(98,31): error CS1525: Invalid expression term '}'\n/tmp/tmpvomoeu2a.cs(98,31): error CS1026: ) expected\n/tmp/tmpvomoeu2a.cs(98,31): error CS1002: ; expected\n/tmp/tmpvomoeu2a.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpvomoeu2a.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9dfe0d599c34254976b7a3ea3026548>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9dfe0d599c34254976b7a3ea3026548>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <acf7882cc9c84323abce6b773a0019bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <acf7882cc9c84323abce6b773a0019bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.Contains(text[index])) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\"') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[i]\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl9to2tu7.cs(98,24): error CS1026: ) expected\n/tmp/tmpl9to2tu7.cs(98,24): error CS1525: Invalid expression term '}'\n/tmp/tmpl9to2tu7.cs(98,24): error CS1002: ; expected\n/tmp/tmpl9to2tu7.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpl9to2tu7.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return \"\";\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            }\n            else {\n                return text.Substring(i, j - i + 1);\n            }\n        }\n        return text.Substring(i, j - i + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b46f7511960d406fa98637742c90ed88>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b46f7511960d406fa98637742c90ed88>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z')\n                i++;\n            else if (text[i] >= 'A' && text[i] <= 'Z')\n                i++;\n            else\n                break;\n        }\n        if (i == text.Length)\n            return \"\";\n        int j = text.Length - 1;\n        while (j >= 0) {\n            if (text[j] >= 'a' && text[j] <= 'z')\n                j--;\n            else if (text[j] >= 'A' && text[j] <= 'Z')\n                j--;\n            else\n                break;\n        }\n        if (i == j)\n            return text;\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e0ef08c52f4459b94714dba5ed95f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e0ef08c52f4459b94714dba5ed95f6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89414be67b2349a88266b5a7278bdc23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89414be67b2349a88266b5a7278bdc23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo7n7zgop.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpo7n7zgop.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        string vowels = \"aeiou\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.IndexOf(text[i]) != -1) {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6fc6ac98fac1467da597f981973a7449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6fc6ac98fac1467da597f981973a7449>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ReplaceAll(\"a\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp73gl9g5x.cs(22,21): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ReplaceAll(\"a\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp73gl9g5x.cs(22,21): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                i++;\n                continue;\n            }\n            if (c >= 'A' && c <= 'Z') {\n                i++;\n                continue;\n            }\n            if (c >= '0' && c <= '9') {\n                i++;\n                continue;\n            }\n            if (c == ' ') {\n                i++;\n                continue;\n            }\n            if (c == '.') {\n                i++;\n                continue;\n            }\n            if (c == ',') {\n                i++;\n                continue;\n            }\n            if (c == '!') {\n                i++;\n                continue;\n            }\n            if (c == '?') {\n                i++;\n                continue;\n            }\n            if (c == ';') {\n                i++;\n                continue;\n            }\n            if (c == ':') {\n                i++;\n                continue;\n            }\n            if (c == '-') {\n                i++;\n                continue;\n            }\n            if (c == '_') {\n                i++;\n                continue;\n            }\n            if (c == '(') {\n                i++;\n                continue;\n            }\n            if (c == ')') {\n                i++;\n                continue;\n            }\n            if (c == '{') {\n                i++;\n                continue;\n            }\n            if (c == '}') {\n                i++;\n                continue;\n            }\n            if (c == '+') {\n                i++;\n                continue;\n            }\n            if (c == '=') {\n                i++;\n                continue;\n            }\n            if (c == '%') {\n                i++;\n                continue;\n            }\n            if (c == '#') {\n                i++;\n                continue;\n            }\n            if (c == '@') {\n                i++;\n                continue;\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl7omgnw4.cs(113,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpl7omgnw4.cs(123,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgpsdl6ts.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpgpsdl6ts.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9dfe0d599c34254976b7a3ea3026548>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9dfe0d599c34254976b7a3ea3026548>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyc9vqmg1.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpyc9vqmg1.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '.') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ',') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '!') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '?') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ';') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ':') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '(') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ')') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '{') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw8f72mvm.cs(80,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpw8f72mvm.cs(90,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.Contains(text[index])) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ecd8a008c39b4ddf974bd051a2c62197>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ecd8a008c39b4ddf974bd051a2c62197>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return \"\";\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.IndexOf(text[i]) != -1) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        if (i == text.Length) return \"\";\n        string result = \"\";\n        for (int j = i; j < text.Length; j++) {\n            result += text[j];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77da29cf1d5e4ff3ba554ffd08050e9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77da29cf1d5e4ff3ba554ffd08050e9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1c3fb27069e94e028675a64fc252628e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1c3fb27069e94e028675a64fc252628e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0b74240b61fc4cc9a4ea28bd248a01b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0b74240b61fc4cc9a4ea28bd248a01b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89414be67b2349a88266b5a7278bdc23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <89414be67b2349a88266b5a7278bdc23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                j--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <84bc527cdb2841418973a47a045565a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <84bc527cdb2841418973a47a045565a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        string vowels = \"aeiouAEIOU\";\n        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (vowels.Contains(text[i])) {\n                count++;\n            }\n        }\n        if (count == 0) {\n            return text;\n        }\n        int start = 0;\n        int end = text.Length - 1;\n        while (count > 0) {\n            if (vowels.Contains(text[start])) {\n                start++;\n                count--;\n            }\n            if (vowels.Contains(text[end])) {\n                end--;\n                count--;\n            }\n        }\n        return text.Substring(start, end + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293360,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.replaceAll(\"[aeiou]\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppg30f2t8.cs(22,21): error CS1061: 'string' does not contain a definition for 'replaceAll' and no accessible extension method 'replaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\"') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\n')\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpug162c48.cs(98,33): error CS1525: Invalid expression term '}'\n/tmp/tmpug162c48.cs(98,33): error CS1002: ; expected\n/tmp/tmpug162c48.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpug162c48.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00020] in <dbc7dc9556ac461d9c2c4ad643c2b02e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <dbc7dc9556ac461d9c2c4ad643c2b02e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00020] in <dbc7dc9556ac461d9c2c4ad643c2b02e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <dbc7dc9556ac461d9c2c4ad643c2b02e>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2d4130d59e1c43a4bd3a0d2506482229>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2d4130d59e1c43a4bd3a0d2506482229>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] ==\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4podrjbo.cs(98,27): error CS1525: Invalid expression term '}'\n/tmp/tmp4podrjbo.cs(98,27): error CS1026: ) expected\n/tmp/tmp4podrjbo.cs(98,27): error CS1002: ; expected\n/tmp/tmp4podrjbo.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp4podrjbo.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= 'A' && text[index] <= 'Z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= '0' && text[index] <= '9') {\n                index++;\n                continue;\n            }\n            if (text[index] == ' ') {\n                index++;\n                continue;\n            }\n            if (text[index] == '.') {\n                index++;\n                continue;\n            }\n            if (text[index] == ',') {\n                index++;\n                continue;\n            }\n            if (text[index] == '!') {\n                index++;\n                continue;\n            }\n            if (text[index] == '?') {\n                index++;\n                continue;\n            }\n            if (text[index] == ';') {\n                index++;\n                continue;\n            }\n            if (text[index] == ':') {\n                index++;\n                continue;\n            }\n            if (text[index] == '(') {\n                index++;\n                continue;\n            }\n            if (text[index] == ')') {\n                index++;\n                continue;\n            }\n            if (text[index] == '{') {\n                index++;\n                continue;\n            }\n            if (text[index] == '}') {\n                index++;\n                continue;\n            }\n            if (text[index] == '+') {\n                index++;\n                continue;\n            }\n            if (text[index] == '-') {\n                index++;\n                continue;\n            }\n            if (text[index] == '*') {\n                index++;\n                continue;\n            }\n            if (text[index] == '/') {\n                index++;\n                continue;\n            }\n            if (text[index] == '=') {\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7vnm4gkx.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp7vnm4gkx.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                i++;\n                continue;\n            }\n            if (c >= 'A' && c <= 'Z') {\n                i++;\n                continue;\n            }\n            if (c >= '0' && c <= '9') {\n                i++;\n                continue;\n            }\n            if (c == ' ') {\n                i++;\n                continue;\n            }\n            if (c == '.' || c == ',' || c == '?' || c == '!' || c == ':' || c == ';' || c == '\\'' || c == '\\\"' || c == '(' || c == ')' || c == '{' || c == '}' || c == '[' || c == ']' || c == '|' || c == '\\\\' || c == '/' || c == '-' || c == '_' || c == '+' || c == '=') {\n                i++;\n                continue;\n            }\n            text = text.Remove(i, 1);\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <af697910fd6d41e39c292bc4933a6586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <af697910fd6d41e39c292bc4933a6586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] == 'a' || text[index] == 'e' || text[index] == 'i' || text[index] == 'o' || text[index] == 'u') {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7f64d3502d284d8d928db025c92a3507>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7f64d3502d284d8d928db025c92a3507>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else if (c >= 'A' && c <= 'Z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0bed1192ca924cc3a8fbbf3b66aa9832>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0bed1192ca924cc3a8fbbf3b66aa9832>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ReplaceAll(\"a\", \"\").ReplaceAll(\"e\", \"\").ReplaceAll(\"i\", \"\").ReplaceAll(\"o\", \"\").ReplaceAll(\"u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpiht5b8rv.cs(22,21): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00017] in <e0b4a0b488bf4f8aabd1a50d6f1b128e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e0b4a0b488bf4f8aabd1a50d6f1b128e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00017] in <e0b4a0b488bf4f8aabd1a50d6f1b128e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e0b4a0b488bf4f8aabd1a50d6f1b128e>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i] == 'U') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'y') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'Y') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'w') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'W') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'h') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'H') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'b') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'B') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'd') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'D') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'f') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'F') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'g') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'G') {\n                i++;\n                continue;\n            }\n            if (text[i] == 'j')\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprb495y26.cs(90,32): error CS1525: Invalid expression term '}'\n/tmp/tmprb495y26.cs(90,32): error CS1002: ; expected\n/tmp/tmprb495y26.cs(92,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprb495y26.cs(102,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else\n                index++;\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00023] in <73d89b62448841a79f6b238827687ea8>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <73d89b62448841a79f6b238827687ea8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00023] in <73d89b62448841a79f6b238827687ea8>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <73d89b62448841a79f6b238827687ea8>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= 'A' && text[index] <= 'Z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= '0' && text[index] <= '9') {\n                index++;\n                continue;\n            }\n            if (text[index] == ' ') {\n                index++;\n                continue;\n            }\n            if (text[index] == '.') {\n                index++;\n                continue;\n            }\n            if (text[index] == ',') {\n                index++;\n                continue;\n            }\n            if (text[index] == '!') {\n                index++;\n                continue;\n            }\n            if (text[index] == '?') {\n                index++;\n                continue;\n            }\n            if (text[index] == ';') {\n                index++;\n                continue;\n            }\n            if (text[index] == ':') {\n                index++;\n                continue;\n            }\n            if (text[index] == '(') {\n                index++;\n                continue;\n            }\n            if (text[index] == ')') {\n                index++;\n                continue;\n            }\n            if (text[index] == '{') {\n                index++;\n                continue;\n            }\n            if (text[index] == '}') {\n                index++;\n                continue;\n            }\n            if (text[index] == '+') {\n                index++;\n                continue;\n            }\n            if (text[index] == '-') {\n                index++;\n                continue;\n            }\n            if (text[index] == '*') {\n                index++;\n                continue;\n            }\n            if (text[index] == '/') {\n                index++;\n                continue;\n            }\n            if (text[index] == '=') {\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7vnm4gkx.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp7vnm4gkx.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9dfe0d599c34254976b7a3ea3026548>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9dfe0d599c34254976b7a3ea3026548>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.replaceAll(\"[aeiou]\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppg30f2t8.cs(22,21): error CS1061: 'string' does not contain a definition for 'replaceAll' and no accessible extension method 'replaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00017] in <e0b4a0b488bf4f8aabd1a50d6f1b128e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e0b4a0b488bf4f8aabd1a50d6f1b128e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00017] in <e0b4a0b488bf4f8aabd1a50d6f1b128e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e0b4a0b488bf4f8aabd1a50d6f1b128e>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c >= 'A' && c <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c >= '0' && c <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == '.' || c == ',' || c == '!' || c == '?' || c == ';' || c == ':' || c == '(' || c == ')' || c == '[' || c == ']' || c == '{' || c == '}' || c == '+' || c == '-' || c == '*' || c == '/' || c == '^' || c == '&' || c == '|' || c == '=' || c == '@' || c == '#' || c == '$' || c == '%' || c == '^' || c == '&' || c == '*' || c == '(' || c == ')' || c == '[' || c == ']' || c == '{' || c == '}' || c == '<' || c == '>' || c == '~' || c == '_' || c == '\"' || c == '\\'' || c == '\\\\' || c == '|' || c == '&' || c == ';' || c == ':' || c == '.' || c == ',' || c == '!' || c == '?' || c == ';' || c == ':' || c == '.' || c == ',' || c == '!' || c == '?' || c == ';' || c == ':' || c == '.' || c == ',' ||\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx5_o9h24.cs(43,719): error CS1525: Invalid expression term '}'\n/tmp/tmpx5_o9h24.cs(43,719): error CS1026: ) expected\n/tmp/tmpx5_o9h24.cs(43,719): error CS1002: ; expected\n/tmp/tmpx5_o9h24.cs(45,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpx5_o9h24.cs(55,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '<') {\n                i++;\n                continue;\n            }\n            if (text[i] == '>') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if (text[i] == '#') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvtay0iwx.cs(98,28): error CS1010: Newline in constant\n/tmp/tmpvtay0iwx.cs(98,28): error CS1011: Empty character literal\n/tmp/tmpvtay0iwx.cs(98,29): error CS1026: ) expected\n/tmp/tmpvtay0iwx.cs(98,29): error CS1525: Invalid expression term '}'\n/tmp/tmpvtay0iwx.cs(98,29): error CS1002: ; expected\n/tmp/tmpvtay0iwx.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpvtay0iwx.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            }\n            else {\n                break;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000cd] in <907e8b4953554d069cc0163df5a60eaa>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <907e8b4953554d069cc0163df5a60eaa>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000cd] in <907e8b4953554d069cc0163df5a60eaa>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <907e8b4953554d069cc0163df5a60eaa>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '<') {\n                i++;\n                continue;\n            }\n            if (text[i] == '>') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if (text[i] == '#') {\n                i++;\n                continue;\n            }\n            if (text[i] == '$') {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt8soz5vd.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpt8soz5vd.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i]\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppxh1m8oc.cs(99,24): error CS1026: ) expected\n/tmp/tmppxh1m8oc.cs(99,24): error CS1525: Invalid expression term '}'\n/tmp/tmppxh1m8oc.cs(99,24): error CS1002: ; expected\n/tmp/tmppxh1m8oc.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmppxh1m8oc.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.' || text[i] == ',' || text[i] == '!' || text[i] == '?' || text[i] == ';' || text[i] == ':' || text[i] == '(' || text[i] == ')' || text[i] == '{' || text[i] == '}' || text[i] == '[' || text[i] == ']' || text[i] == '+' || text[i] == '-' || text[i] == '*' || text[i] == '/' || text[i] == '%' || text[i] == '$' || text[i] == '^' || text[i] == '&' || text[i] == '|' || text[i] == '=') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\\"') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\\\') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\n') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\r') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\t') {\n                i++;\n                continue\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp_78f1ns.cs(68,25): error CS1002: ; expected\n/tmp/tmpp_78f1ns.cs(70,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpp_78f1ns.cs(80,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprq47_qg7.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprq47_qg7.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprq47_qg7.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprq47_qg7.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var result = \"\";\n        for (var i = 0; i < text.Length; i++) {\n            var ch = text[i];\n            for (var j = 0; j < vowels.Length; j++) {\n                if (ch == vowels[j]) {\n                    break;\n                }\n            }\n            if (j == vowels.Length) {\n                result += ch;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbte218gk.cs(32,17): error CS0103: The name 'j' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0b74240b61fc4cc9a4ea28bd248a01b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0b74240b61fc4cc9a4ea28bd248a01b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c >= 'A' && c <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c >= '0' && c <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == '\\'') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == '-') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == '.') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == ',') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == '!') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == '?') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == ')') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == '(') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == ':') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == ';') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (c == '.') {\n                text\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp11lnurdr.cs(83,21): error CS1002: ; expected\n/tmp/tmp11lnurdr.cs(85,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp11lnurdr.cs(95,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        string vowels = \"aeiou\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <42b349ebccfc43aca8d3cc802c2a24fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <42b349ebccfc43aca8d3cc802c2a24fb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                i++;\n                continue;\n            }\n            if (c >= 'A' && c <= 'Z') {\n                i++;\n                continue;\n            }\n            if (c >= '0' && c <= '9') {\n                i++;\n                continue;\n            }\n            if (c == ' ') {\n                i++;\n                continue;\n            }\n            if (c == '.') {\n                i++;\n                continue;\n            }\n            if (c == ',') {\n                i++;\n                continue;\n            }\n            if (c == '!') {\n                i++;\n                continue;\n            }\n            if (c == '?') {\n                i++;\n                continue;\n            }\n            if (c == ';') {\n                i++;\n                continue;\n            }\n            if (c == ':') {\n                i++;\n                continue;\n            }\n            if (c == '-') {\n                i++;\n                continue;\n            }\n            if (c == '_') {\n                i++;\n                continue;\n            }\n            if (c == '(') {\n                i++;\n                continue;\n            }\n            if (c == ')') {\n                i++;\n                continue;\n            }\n            if (c == '{') {\n                i++;\n                continue;\n            }\n            if (c == '}') {\n                i++;\n                continue;\n            }\n            if (c == '[' || c == ']') {\n                i++;\n                continue;\n            }\n            if (c == '\\\\') {\n                i++;\n                continue;\n            }\n            if (c == '+') {\n                i++;\n                continue;\n            }\n            if (c == '*') {\n                i++;\n                continue;\n            }\n            if (c == '^') {\n                i++;\n                continue\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjqqrcngs.cs(109,25): error CS1002: ; expected\n/tmp/tmpjqqrcngs.cs(111,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpjqqrcngs.cs(121,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text[j] = text[i];\n                j++;\n            }\n            i++;\n        }\n        return text.Substring(j);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpe6bgqyxi.cs(27,17): error CS0200: Property or indexer 'string.this[int]' cannot be assigned to -- it is read only\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ReplaceAll(\"a\", \"\").ReplaceAll(\"e\", \"\").ReplaceAll(\"i\", \"\").ReplaceAll(\"o\", \"\").ReplaceAll(\"u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpiht5b8rv.cs(22,21): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4jsbbig3.cs(98,28): error CS1010: Newline in constant\n/tmp/tmp4jsbbig3.cs(98,28): error CS1011: Empty character literal\n/tmp/tmp4jsbbig3.cs(98,29): error CS1026: ) expected\n/tmp/tmp4jsbbig3.cs(98,29): error CS1525: Invalid expression term '}'\n/tmp/tmp4jsbbig3.cs(98,29): error CS1002: ; expected\n/tmp/tmp4jsbbig3.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp4jsbbig3.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd29gm5o5.cs(98,28): error CS1010: Newline in constant\n/tmp/tmpd29gm5o5.cs(98,30): error CS1026: ) expected\n/tmp/tmpd29gm5o5.cs(98,30): error CS1525: Invalid expression term '}'\n/tmp/tmpd29gm5o5.cs(98,30): error CS1002: ; expected\n/tmp/tmpd29gm5o5.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpd29gm5o5.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z')\n                i++;\n            else if (text[i] >= 'A' && text[i] <= 'Z')\n                i++;\n            else\n                break;\n        }\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z')\n                text = text.Remove(i, 1);\n            else if (text[i] >= 'A' && text[i] <= 'Z')\n                text = text.Remove(i, 1);\n            else\n                break;\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <79a3750f0a474ee08610cdfa43520461>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <79a3750f0a474ee08610cdfa43520461>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001a] in <9fb9233ab97b46329643d24acb7e8c8e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <9fb9233ab97b46329643d24acb7e8c8e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001a] in <9fb9233ab97b46329643d24acb7e8c8e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <9fb9233ab97b46329643d24acb7e8c8e>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.Contains(text[index])) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.Contains(text[index])) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        int length = text.Length;\n        int i = 0;\n        while (i < length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsess2cu0.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpsess2cu0.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '.') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ',') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '!') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '?') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ';') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ':') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '(') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ')') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '{') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw8f72mvm.cs(80,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpw8f72mvm.cs(90,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var result = \"\";\n        for (var i = 0; i < text.Length; i++) {\n            var ch = text[i];\n            for (var j = 0; j < vowels.Length; j++) {\n                if (ch == vowels[j]) {\n                    break;\n                }\n            }\n            if (j == vowels.Length) {\n                result += ch;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbte218gk.cs(32,17): error CS0103: The name 'j' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'A' || text[i] == 'e' || text[i] == 'E' || text[i] == 'i' || text[i] == 'I' || text[i] == 'o' || text[i] == 'O' || text[i] == 'u' || text[i] == 'U') {\n                text = text.Remove(i, 1);\n                j--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90b6e82a2c83422dbcb962127773fa4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90b6e82a2c83422dbcb962127773fa4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\"') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8i_73gu8.cs(99,22): error CS1003: Syntax error, ']' expected\n/tmp/tmp8i_73gu8.cs(99,22): error CS1026: ) expected\n/tmp/tmp8i_73gu8.cs(99,22): error CS1525: Invalid expression term '}'\n/tmp/tmp8i_73gu8.cs(99,22): error CS1002: ; expected\n/tmp/tmp8i_73gu8.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp8i_73gu8.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                index++;\n            }\n            else if (text[index] >= 'A' && text[index] <= 'Z') {\n                index++;\n            }\n            else {\n                break;\n            }\n        }\n        if (index == text.Length) return \"\";\n        string result = \"\";\n        for (int i = index; i < text.Length; i++) {\n            result += text[i];\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b89fa6528e8449e3b482f90a46dd7789>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b89fa6528e8449e3b482f90a46dd7789>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86dae64167ef4951bb720cd41a44f09f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86dae64167ef4951bb720cd41a44f09f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var result = \"\";\n        for (var i = 0; i < text.Length; i++) {\n            for (var j = 0; j < vowels.Length; j++) {\n                if (text[i] == vowels[j]) {\n                    result += text[i];\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779e39d086914459b9eb5384ce97335e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779e39d086914459b9eb5384ce97335e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '<') {\n                i++;\n                continue;\n            }\n            if (text[i] == '>') {\n                i++;\n                continue;\n            }\n            if (text[i] ==\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdlyb4ack.cs(98,27): error CS1525: Invalid expression term '}'\n/tmp/tmpdlyb4ack.cs(98,27): error CS1026: ) expected\n/tmp/tmpdlyb4ack.cs(98,27): error CS1002: ; expected\n/tmp/tmpdlyb4ack.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpdlyb4ack.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                j--;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                i++;\n            }\n            else {\n                i++;\n                j--;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33d449d763dd4e60b833f9048b19eda0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33d449d763dd4e60b833f9048b19eda0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            }\n            else {\n                return text.Substring(i, j + 1);\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000b7] in <e6604ea94feb45e0b7dc87ef4e3c9e62>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e6604ea94feb45e0b7dc87ef4e3c9e62>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000b7] in <e6604ea94feb45e0b7dc87ef4e3c9e62>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <e6604ea94feb45e0b7dc87ef4e3c9e62>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                result += text[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2b1db79731dc4a59b364821716ca7512>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2b1db79731dc4a59b364821716ca7512>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                i++;\n                continue;\n            }\n            if (c >= 'A' && c <= 'Z') {\n                i++;\n                continue;\n            }\n            if (c >= '0' && c <= '9') {\n                i++;\n                continue;\n            }\n            if (c == ' ') {\n                i++;\n                continue;\n            }\n            if (c == '.' || c == ',' || c == '!' || c == '?' || c == ';' || c == ':' || c == '\\'' || c == '\\\"') {\n                i++;\n                continue;\n            }\n            if (c == '\\n' || c == '\\r') {\n                i++;\n                continue;\n            }\n            if (c == '\\t') {\n                i++;\n                continue;\n            }\n            if (c == '\\b') {\n                i++;\n                continue;\n            }\n            if (c == '\\f') {\n                i++;\n                continue;\n            }\n            if (c == '\\v') {\n                i++;\n                continue;\n            }\n            if (c == '\\a') {\n                i++;\n                continue;\n            }\n            if (c == '\\0') {\n                i++;\n                continue;\n            }\n            if (c == '\\u0020') {\n                i++;\n                continue;\n            }\n            if (c == '\\u0027') {\n                i++;\n                continue;\n            }\n            if (c == '\\u0022') {\n                i++;\n                continue;\n            }\n            if (c == '\\u0023') {\n                i++;\n                continue;\n            }\n            if (c == '\\u0024') {\n                i++;\n                continue;\n            }\n            if (c == '\\u0025') {\n                i++;\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9jkc9cdq.cs(99,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp9jkc9cdq.cs(109,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= 'A' && text[index] <= 'Z') {\n                index++;\n                continue;\n            }\n            if (text[index] >= '0' && text[index] <= '9') {\n                index++;\n                continue;\n            }\n            if (text[index] == ' ') {\n                index++;\n                continue;\n            }\n            if (text[index] == '.') {\n                index++;\n                continue;\n            }\n            if (text[index] == ',') {\n                index++;\n                continue;\n            }\n            if (text[index] == '!') {\n                index++;\n                continue;\n            }\n            if (text[index] == '?') {\n                index++;\n                continue;\n            }\n            if (text[index] == ';') {\n                index++;\n                continue;\n            }\n            if (text[index] == ':') {\n                index++;\n                continue;\n            }\n            if (text[index] == '(') {\n                index++;\n                continue;\n            }\n            if (text[index] == ')') {\n                index++;\n                continue;\n            }\n            if (text[index] == '{') {\n                index++;\n                continue;\n            }\n            if (text[index] == '}') {\n                index++;\n                continue;\n            }\n            if (text[index] == '+') {\n                index++;\n                continue;\n            }\n            if (text[index] == '-') {\n                index++;\n                continue;\n            }\n            if (text[index] == '*') {\n                index++;\n                continue;\n            }\n            if (text[index] == '/') {\n                index++;\n                continue;\n            }\n            if (text[index] == '=\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5e3g2z1l.cs(98,32): error CS1010: Newline in constant\n/tmp/tmp5e3g2z1l.cs(98,34): error CS1026: ) expected\n/tmp/tmp5e3g2z1l.cs(98,34): error CS1525: Invalid expression term '}'\n/tmp/tmp5e3g2z1l.cs(98,34): error CS1002: ; expected\n/tmp/tmp5e3g2z1l.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp5e3g2z1l.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                i++;\n                continue;\n            }\n            if (c >= 'A' && c <= 'Z') {\n                i++;\n                continue;\n            }\n            if (c >= '0' && c <= '9') {\n                i++;\n                continue;\n            }\n            if (c == ' ') {\n                i++;\n                continue;\n            }\n            if (c == '\\'') {\n                i++;\n                continue;\n            }\n            if (c == '-') {\n                i++;\n                continue;\n            }\n            if (c == '.') {\n                i++;\n                continue;\n            }\n            if (c == ',') {\n                i++;\n                continue;\n            }\n            if (c == '!') {\n                i++;\n                continue;\n            }\n            if (c == '?') {\n                i++;\n                continue;\n            }\n            if (c == ';') {\n                i++;\n                continue;\n            }\n            if (c == ':') {\n                i++;\n                continue;\n            }\n            if (c == ')') {\n                i++;\n                continue;\n            }\n            if (c == '(') {\n                i++;\n                continue;\n            }\n            if (c == '\\'') {\n                i++;\n                continue;\n            }\n            if (c == '\"') {\n                i++;\n                continue;\n            }\n            if (c == '.') {\n                i++;\n                continue;\n            }\n            if (c == ',') {\n                i++;\n                continue;\n            }\n            if (c == '!') {\n                i++;\n                continue;\n            }\n            if (c == '?') {\n                i++;\n                continue;\n            }\n            if (c == ';') {\n                i++;\n                continue;\n            \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwz1jy_zv.cs(112,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpwz1jy_zv.cs(122,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            }\n            else {\n                break;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000cd] in <907e8b4953554d069cc0163df5a60eaa>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <907e8b4953554d069cc0163df5a60eaa>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000cd] in <907e8b4953554d069cc0163df5a60eaa>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <907e8b4953554d069cc0163df5a60eaa>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.Contains(text[i])) {\n                i++;\n            }\n            else {\n                text = text.Remove(i, 1);\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e2c0436aa45b42c49e09c1c69c5c204d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e2c0436aa45b42c49e09c1c69c5c204d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.replaceAll(\"[aeiou]\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppg30f2t8.cs(22,21): error CS1061: 'string' does not contain a definition for 'replaceAll' and no accessible extension method 'replaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.replaceAll(\"[aeiou]\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppg30f2t8.cs(22,21): error CS1061: 'string' does not contain a definition for 'replaceAll' and no accessible extension method 'replaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd29gm5o5.cs(98,28): error CS1010: Newline in constant\n/tmp/tmpd29gm5o5.cs(98,30): error CS1026: ) expected\n/tmp/tmpd29gm5o5.cs(98,30): error CS1525: Invalid expression term '}'\n/tmp/tmpd29gm5o5.cs(98,30): error CS1002: ; expected\n/tmp/tmpd29gm5o5.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpd29gm5o5.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.Contains(text[index])) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                i++;\n                continue;\n            }\n            if\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw_25_kxy.cs(99,15): error CS1003: Syntax error, '(' expected\n/tmp/tmpw_25_kxy.cs(99,15): error CS1525: Invalid expression term '}'\n/tmp/tmpw_25_kxy.cs(99,15): error CS1026: ) expected\n/tmp/tmpw_25_kxy.cs(99,15): error CS1002: ; expected\n/tmp/tmpw_25_kxy.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpw_25_kxy.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ReplaceAll(\"a\", \"\").ReplaceAll(\"e\", \"\").ReplaceAll(\"i\", \"\").ReplaceAll(\"o\", \"\").ReplaceAll(\"u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpiht5b8rv.cs(22,21): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprq47_qg7.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprq47_qg7.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return text;\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00023] in <18e18780853748f1b65114fa6a9019fe>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <18e18780853748f1b65114fa6a9019fe>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00023] in <18e18780853748f1b65114fa6a9019fe>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <18e18780853748f1b65114fa6a9019fe>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                j = i + 1;\n                while (j < text.Length) {\n                    if (text[j] >= 'a' && text[j] <= 'z') {\n                        text = text.Remove(j, 1);\n                        i = j - 1;\n                    }\n                    else\n                        break;\n                }\n            }\n            else\n                i++;\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293361,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int index = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                index = i;\n                break;\n            }\n        }\n        for (int i = index; i < text.Length; i++) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <71ce9a56e13d4970b82a3cf0ead6952f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <71ce9a56e13d4970b82a3cf0ead6952f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        string vowels = \"aeiou\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <42b349ebccfc43aca8d3cc802c2a24fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <42b349ebccfc43aca8d3cc802c2a24fb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '\\'') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '-') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '.') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ',') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '!') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '?') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ';') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ':') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '(') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt00st4iw.cs(79,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpt00st4iw.cs(89,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                continue;\n            }\n            i++;\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7b2439b47e314d8592c6fbed83ac9238>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7b2439b47e314d8592c6fbed83ac9238>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n                index = 0;\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpafnoraip.cs(99,15): error CS1003: Syntax error, '(' expected\n/tmp/tmpafnoraip.cs(99,15): error CS1525: Invalid expression term '}'\n/tmp/tmpafnoraip.cs(99,15): error CS1026: ) expected\n/tmp/tmpafnoraip.cs(99,15): error CS1002: ; expected\n/tmp/tmpafnoraip.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpafnoraip.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                text = text.Remove(index, 1);\n            }\n            else if (text[index] >= 'A' && text[index] <= 'Z') {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88f0241712e74c039869b5a04146b667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88f0241712e74c039869b5a04146b667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '.') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ',') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '!') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '?') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '-') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '(') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ')') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '{') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '}') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7zlvhfr7.cs(80,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp7zlvhfr7.cs(90,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@')\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9r270g76.cs(97,32): error CS1525: Invalid expression term '}'\n/tmp/tmp9r270g76.cs(97,32): error CS1002: ; expected\n/tmp/tmp9r270g76.cs(99,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp9r270g76.cs(109,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.Contains(text[index])) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                i++;\n                continue;\n            }\n            if (c >= 'A' && c <= 'Z') {\n                i++;\n                continue;\n            }\n            if (c >= '0' && c <= '9') {\n                i++;\n                continue;\n            }\n            if (c == ' ') {\n                i++;\n                continue;\n            }\n            if (c == '.' || c == ',' || c == '!' || c == '?' || c == ';' || c == ':' || c == '(' || c == ')' || c == '{' || c == '}' || c == '[' || c == ']' || c == '^' || c == '_' || c == '&' || c == '*' || c == '+' || c == '-' || c == '=' || c == '@' || c == '#' || c == '$' || c == '%' || c == '~' || c == '`' || c == '|' || c == '\\\\' || c == '&' || c == '/' || c == '<' || c == '>' || c == '.' || c == ',' || c == '!' || c == '?' || c == ';' || c == ':' || c == '(' || c == ')' || c == '{' || c == '}' || c == '[' || c == ']' || c == '^' || c == '_' || c == '&' || c == '*' || c == '+' || c == '-' || c == '=' || c == '@' || c == '#' || c == '$' || c == '%' || c == '~' || c == '`' || c == '|' || c == '\\\\' || c == '&' || c == '/' || c == '<' || c == '>') {\n                text = text.Remove(\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3hi3gggt.cs(43,36): error CS1026: ) expected\n/tmp/tmp3hi3gggt.cs(43,36): error CS1002: ; expected\n/tmp/tmp3hi3gggt.cs(45,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp3hi3gggt.cs(55,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.Contains(text[i])) {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.IndexOf(text[i]) != -1) {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else\n                i++;\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001d] in <8d269e50f00f4bff804532f2a73c93a7>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <8d269e50f00f4bff804532f2a73c93a7>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001d] in <8d269e50f00f4bff804532f2a73c93a7>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <8d269e50f00f4bff804532f2a73c93a7>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                j--;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                i++;\n            }\n            else {\n                i++;\n                j--;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33d449d763dd4e60b833f9048b19eda0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33d449d763dd4e60b833f9048b19eda0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001b] in <685add622ba14ac5b9d761a9d48cb97e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <685add622ba14ac5b9d761a9d48cb97e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001b] in <685add622ba14ac5b9d761a9d48cb97e>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <685add622ba14ac5b9d761a9d48cb97e>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'A' || text[i] == 'e' || text[i] == 'E' || text[i] == 'i' || text[i] == 'I' || text[i] == 'o' || text[i] == 'O' || text[i] == 'u' || text[i] == 'U') {\n                text = text.Remove(i, 1);\n                j--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90b6e82a2c83422dbcb962127773fa4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <90b6e82a2c83422dbcb962127773fa4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                j--;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                i++;\n            }\n            else {\n                i++;\n                j--;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33d449d763dd4e60b833f9048b19eda0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <33d449d763dd4e60b833f9048b19eda0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3e56cefbf5da454bb78aa4f4615ae35e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3e56cefbf5da454bb78aa4f4615ae35e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '.') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ',') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '!') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '?') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ':') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ';') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '-') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '_') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '(') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgrieahew.cs(78,22): error CS1525: Invalid expression term '}'\n/tmp/tmpgrieahew.cs(78,22): error CS1026: ) expected\n/tmp/tmpgrieahew.cs(78,22): error CS1002: ; expected\n/tmp/tmpgrieahew.cs(80,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpgrieahew.cs(90,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '<') {\n                i++;\n                continue;\n            }\n            if (text[i] == '>') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if (text[i] == '#') {\n                i++;\n                continue;\n            }\n            if (text[i] == '$') {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt8soz5vd.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpt8soz5vd.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\"') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if (text[i] == '#') {\n                i++;\n                continue;\n            }\n            if (text[i] == '$') {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjc0qhvvv.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpjc0qhvvv.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3e56cefbf5da454bb78aa4f4615ae35e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3e56cefbf5da454bb78aa4f4615ae35e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        string vowels = \"aeiou\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <42b349ebccfc43aca8d3cc802c2a24fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <42b349ebccfc43aca8d3cc802c2a24fb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprmsvoo36.cs(99,17): error CS1525: Invalid expression term '}'\n/tmp/tmprmsvoo36.cs(99,17): error CS1026: ) expected\n/tmp/tmprmsvoo36.cs(99,17): error CS1002: ; expected\n/tmp/tmprmsvoo36.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprmsvoo36.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '<') {\n                i++;\n                continue;\n            }\n            if (text[i] == '>') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpokj34mll.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpokj34mll.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        text = text.ToLower();\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9dfe0d599c34254976b7a3ea3026548>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d9dfe0d599c34254976b7a3ea3026548>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001b] in <cebbf3bcabde476d8c4de5db957b9222>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <cebbf3bcabde476d8c4de5db957b9222>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001b] in <cebbf3bcabde476d8c4de5db957b9222>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <cebbf3bcabde476d8c4de5db957b9222>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ReplaceAll(\"a\", \"\").ReplaceAll(\"e\", \"\").ReplaceAll(\"i\", \"\").ReplaceAll(\"o\", \"\").ReplaceAll(\"u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpiht5b8rv.cs(22,21): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.IndexOf(text[i]) != -1) {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001d] in <d63dc975cd854981ad2a5b561a2034e8>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <d63dc975cd854981ad2a5b561a2034e8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001d] in <d63dc975cd854981ad2a5b561a2034e8>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <d63dc975cd854981ad2a5b561a2034e8>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return \"\";\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            } else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            } else {\n                return text.Substring(i, j + 1);\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000c1] in <2f249c8dab4d4d14b0aedde79a2a9372>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <2f249c8dab4d4d14b0aedde79a2a9372>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000c1] in <2f249c8dab4d4d14b0aedde79a2a9372>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <2f249c8dab4d4d14b0aedde79a2a9372>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                j = i;\n                while (j < text.Length) {\n                    if (text[j] >= 'a' && text[j] <= 'z') {\n                        text = text.Remove(j, 1);\n                        i--;\n                    }\n                    else {\n                        j++;\n                    }\n                }\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001c] in <137856d911f141eeb72aa29dd9fa71fb>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <137856d911f141eeb72aa29dd9fa71fb>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001c] in <137856d911f141eeb72aa29dd9fa71fb>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <137856d911f141eeb72aa29dd9fa71fb>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            }\n            else {\n                i++;\n                j--;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000d4] in <481ca205684a48519c8f675162e3dd49>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <481ca205684a48519c8f675162e3dd49>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000d4] in <481ca205684a48519c8f675162e3dd49>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <481ca205684a48519c8f675162e3dd49>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u') {\n                j--;\n            }\n            else {\n                break;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000cd] in <907e8b4953554d069cc0163df5a60eaa>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <907e8b4953554d069cc0163df5a60eaa>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x000cd] in <907e8b4953554d069cc0163df5a60eaa>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <907e8b4953554d069cc0163df5a60eaa>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprq47_qg7.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprq47_qg7.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        int j = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if (text[i\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx5bh8hu8.cs(99,23): error CS1003: Syntax error, ']' expected\n/tmp/tmpx5bh8hu8.cs(99,23): error CS1026: ) expected\n/tmp/tmpx5bh8hu8.cs(99,23): error CS1525: Invalid expression term '}'\n/tmp/tmpx5bh8hu8.cs(99,23): error CS1002: ; expected\n/tmp/tmpx5bh8hu8.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpx5bh8hu8.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00023] in <c06dd0908b6848f792d1737e929d1616>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <c06dd0908b6848f792d1737e929d1616>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x00023] in <c06dd0908b6848f792d1737e929d1616>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <c06dd0908b6848f792d1737e929d1616>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.replaceAll(\"[aeiou]\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppg30f2t8.cs(22,21): error CS1061: 'string' does not contain a definition for 'replaceAll' and no accessible extension method 'replaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                result += c;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <efb565fe36ff47ef83af7c312f2bd032>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <efb565fe36ff47ef83af7c312f2bd032>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int index = 0;\n        while (index < text.Length) {\n            char ch = text[index];\n            if (ch >= 'a' && ch <= 'z') {\n                index++;\n                continue;\n            }\n            if (ch >= 'A' && ch <= 'Z') {\n                index++;\n                continue;\n            }\n            if (ch >= '0' && ch <= '9') {\n                index++;\n                continue;\n            }\n            if (ch == ' ') {\n                index++;\n                continue;\n            }\n            if (ch == '.' || ch == ',' || ch == '!' || ch == '?' || ch == ';' || ch == ':' || ch == '\\'' || ch == '\\\"' || ch == '\\n' || ch == '\\r') {\n                index++;\n                continue;\n            }\n            text = text.Remove(index, 1);\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edd0e905b1a64968baac0509dfa55aae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edd0e905b1a64968baac0509dfa55aae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.IndexOf(text[i]) != -1) {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < text.Length) {\n            if (vowels.IndexOf(text[index]) != -1) {\n                text = text.Remove(index, 1);\n            }\n            else {\n                index++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprq47_qg7.cs(101,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprq47_qg7.cs(111,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjqtp_74n.cs(98,28): error CS1010: Newline in constant\n/tmp/tmpjqtp_74n.cs(98,28): error CS1011: Empty character literal\n/tmp/tmpjqtp_74n.cs(98,29): error CS1026: ) expected\n/tmp/tmpjqtp_74n.cs(98,29): error CS1525: Invalid expression term '}'\n/tmp/tmpjqtp_74n.cs(98,29): error CS1002: ; expected\n/tmp/tmpjqtp_74n.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpjqtp_74n.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293356,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7247d93a8b3419489c9fb4de5bc9f5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == ' ') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '.') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == ',') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '!') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '?') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '-') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '_') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '(') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == ')') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '{') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '}') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == '[') {\n                text = text.Remove(i, 1);\n            }\n            else if (text[i] == ']') {\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprpvd8s_4.cs(73,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmprpvd8s_4.cs(83,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return \"\";\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'A' || text[i] == 'e' || text[i] == 'E' || text[i] == 'i' || text[i] == 'I' || text[i] == 'o' || text[i] == 'O' || text[i] == 'u' || text[i] == 'U') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'A' || text[j] == 'e' || text[j] == 'E' || text[j] == 'i' || text[j] == 'I' || text[j] == 'o' || text[j] == 'O' || text[j] == 'u' || text[j] == 'U') {\n                j--;\n            }\n            else {\n                return text.Substring(i, j - i + 1);\n            }\n        }\n        return text.Substring(i, j - i + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e2e34a0a14eb463585e34ea3ca48e8ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e2e34a0a14eb463585e34ea3ca48e8ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '<') {\n                i++;\n                continue;\n            }\n            if (text[i] == '>') {\n                i++;\n                continue;\n            }\n            if (text[i] == '@') {\n                i++;\n                continue;\n            }\n            if (text[i] == '$') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp339hjjxt.cs(98,28): error CS1010: Newline in constant\n/tmp/tmp339hjjxt.cs(98,28): error CS1011: Empty character literal\n/tmp/tmp339hjjxt.cs(98,29): error CS1026: ) expected\n/tmp/tmp339hjjxt.cs(98,29): error CS1525: Invalid expression term '}'\n/tmp/tmp339hjjxt.cs(98,29): error CS1002: ; expected\n/tmp/tmp339hjjxt.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp339hjjxt.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.replaceAll(\"[aeiou]\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppg30f2t8.cs(22,21): error CS1061: 'string' does not contain a definition for 'replaceAll' and no accessible extension method 'replaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpd29gm5o5.cs(98,28): error CS1010: Newline in constant\n/tmp/tmpd29gm5o5.cs(98,30): error CS1026: ) expected\n/tmp/tmpd29gm5o5.cs(98,30): error CS1525: Invalid expression term '}'\n/tmp/tmpd29gm5o5.cs(98,30): error CS1002: ; expected\n/tmp/tmpd29gm5o5.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpd29gm5o5.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= 'A' && text[i] <= 'Z') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] >= '0' && text[i] <= '9') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ' ') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '.') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ',') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '!') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '?') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ';') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ':') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '(') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == ')') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else if (text[i] == '{') {\n                text = text.Remove(i, 1);\n                i--;\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293355,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw8f72mvm.cs(80,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpw8f72mvm.cs(90,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0) return text;\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < text.Length) {\n            if (vowels.IndexOf(text[i]) != -1) {\n                text = text.Remove(i, 1);\n                i--;\n            }\n            else {\n                i++;\n            }\n        }\n        return text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001d] in <d63dc975cd854981ad2a5b561a2034e8>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <d63dc975cd854981ad2a5b561a2034e8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.RemoveVowels (System.String text) [0x0001d] in <d63dc975cd854981ad2a5b561a2034e8>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <d63dc975cd854981ad2a5b561a2034e8>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        int j = text.Length - 1;\n        while (i < j) {\n            if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u' || text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i] == 'U') {\n                i++;\n            }\n            else if (text[j] == 'a' || text[j] == 'e' || text[j] == 'i' || text[j] == 'o' || text[j] == 'u' || text[j] == 'A' || text[j] == 'E' || text[j] == 'I' || text[j] == 'O' || text[j] == 'U') {\n                j--;\n            }\n            else {\n                i++;\n                j--;\n            }\n        }\n        return text.Substring(i, j + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x00145] in <ce5dce6436e84447894a8775a260fed2>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <ce5dce6436e84447894a8775a260fed2>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to a location within the string.\nParameter name: length\n  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RemoveVowels (System.String text) [0x00145] in <ce5dce6436e84447894a8775a260fed2>:0 \n  at Problem.Main (System.String[] args) [0x0001b] in <ce5dce6436e84447894a8775a260fed2>:0 \n",
      "exit_code": 1,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0) return \"\";\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '+') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '*') {\n                i++;\n                continue;\n            }\n            if (text[i] == '/') {\n                i++;\n                continue;\n            }\n            if (text[i] == '=') {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvnzjakmz.cs(99,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpvnzjakmz.cs(109,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            if (text[i] >= 'a' && text[i] <= 'z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= 'A' && text[i] <= 'Z') {\n                i++;\n                continue;\n            }\n            if (text[i] >= '0' && text[i] <= '9') {\n                i++;\n                continue;\n            }\n            if (text[i] == ' ') {\n                i++;\n                continue;\n            }\n            if (text[i] == '.') {\n                i++;\n                continue;\n            }\n            if (text[i] == ',') {\n                i++;\n                continue;\n            }\n            if (text[i] == '!') {\n                i++;\n                continue;\n            }\n            if (text[i] == '?') {\n                i++;\n                continue;\n            }\n            if (text[i] == ';') {\n                i++;\n                continue;\n            }\n            if (text[i] == ':') {\n                i++;\n                continue;\n            }\n            if (text[i] == '(') {\n                i++;\n                continue;\n            }\n            if (text[i] == ')') {\n                i++;\n                continue;\n            }\n            if (text[i] == '{') {\n                i++;\n                continue;\n            }\n            if (text[i] == '}') {\n                i++;\n                continue;\n            }\n            if (text[i] == '-') {\n                i++;\n                continue;\n            }\n            if (text[i] == '_') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\'') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\"') {\n                i++;\n                continue;\n            }\n            if (text[i] == '\\\\') {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm1gk34wg.cs(100,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpm1gk34wg.cs(110,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text == null || text.Length == 0)\n            return text;\n        int i = 0;\n        while (i < text.Length) {\n            char c = text[i];\n            if (c >= 'a' && c <= 'z') {\n                i++;\n                continue;\n            }\n            if (c >= 'A' && c <= 'Z') {\n                i++;\n                continue;\n            }\n            if (c >= '0' && c <= '9') {\n                i++;\n                continue;\n            }\n            if (c == ' ') {\n                i++;\n                continue;\n            }\n            if (c == '.') {\n                i++;\n                continue;\n            }\n            if (c == ',') {\n                i++;\n                continue;\n            }\n            if (c == '-') {\n                i++;\n                continue;\n            }\n            if (c == '_') {\n                i++;\n                continue;\n            }\n            if (c == ':') {\n                i++;\n                continue;\n            }\n            if (c == ';') {\n                i++;\n                continue;\n            }\n            if (c == '!') {\n                i++;\n                continue;\n            }\n            if (c == '?') {\n                i++;\n                continue;\n            }\n            if (c == '(') {\n                i++;\n                continue;\n            }\n            if (c == ')') {\n                i++;\n                continue;\n            }\n            if (c == '{') {\n                i++;\n                continue;\n            }\n            if (c == '}') {\n                i++;\n                continue;\n            }\n            if (c == '+') {\n                i++;\n                continue;\n            }\n            if (c == '=') {\n                i++;\n                continue;\n            }\n            if (c == '%') {\n                i++;\n                continue;\n            }\n            if (c == '#') {\n                i++;\n                continue;\n            }\n            if (c == '@') {\n                i++;\n                continue;\n            }\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpriml1k5p.cs(113,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmpriml1k5p.cs(123,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        if (text.Length == 0)\n            return text;\n        int index = 0;\n        while (index < text.Length) {\n            if (text[index] >= 'a' && text[index] <= 'z') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] >= 'A' && text[index] <= 'Z') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] >= '0' && text[index] <= '9') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == ' ') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == '.') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == ',') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == '!') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == '?') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == ';') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == ':') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == '(') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == ')') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (text[index] == '{') {\n                text = text.Remove(index, 1);\n                index--;\n            }\n            else if (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0wvo3r6b.cs(78,22): error CS1525: Invalid expression term '}'\n/tmp/tmp0wvo3r6b.cs(78,22): error CS1026: ) expected\n/tmp/tmp0wvo3r6b.cs(78,22): error CS1002: ; expected\n/tmp/tmp0wvo3r6b.cs(80,5): error CS0106: The modifier 'public' is not valid for this item\n/tmp/tmp0wvo3r6b.cs(90,2): error CS1513: } expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        // Write your code here\n        return text.ToLower().ReplaceAll(\"a|e|i|o|u\", \"\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293354,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrgpjit4.cs(22,31): error CS1061: 'string' does not contain a definition for 'ReplaceAll' and no accessible extension method 'ReplaceAll' accepting a first argument of type 'string' could be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // remove_vowels is a function that takes string and returns string without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\")\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text) {\n        string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U') {\n                result += text[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\")));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\n}\n",
      "timestamp": 1664293357,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
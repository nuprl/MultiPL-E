name: HumanEval_24_largest_divisor
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // For a given number n, find the largest number that divides n\
  \ evenly, smaller than n\n    // >>> LargestDivisor((15L))\n    // (5L)\n    public\
  \ static long LargestDivisor(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
  \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
  \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
  \ == (7L));\n    }\n\n}\n"
completions: ["        long result = n;\n        while (n % 2 == 0) {\n          \
    \  n /= 2;\n        }\n        while (n % 3 == 0) {\n            n /= 3;\n   \
    \     }\n        while (n % 5 == 0) {\n            n /= 5;\n        }\n      \
    \  while (n % 7 == 0) {\n            n /= 7;\n        }\n        while (n % 11\
    \ == 0) {\n            n /= 11;\n        }\n        while (n % 13 == 0) {\n  \
    \          n /= 13;\n        }\n        while (n % 17 == 0) {\n            n /=\
    \ 17;\n        }\n        while (n % 19 == 0) {\n            n /= 19;\n      \
    \  }\n        while (n % 23 == 0) {\n            n /= 23;\n        }\n       \
    \ while (n % 29 == 0) {\n            n /= 29;\n        }\n        while (n % 31\
    \ == 0) {\n            n /= 31;\n        }\n        while (n % 37 == 0) {\n  \
    \          n /= 37;\n        }\n        while (n % 41 == 0) {\n            n /=\
    \ 41;\n        }\n        while (n % 43 == 0) {\n            n /= 43;\n      \
    \  }\n        while (n % 47 == 0) {\n            n /= 47;\n        }\n       \
    \ while (n % 53 == 0) {\n            n /= 53;\n        }\n        while (n % 59\
    \ == 0) {\n            n /= 59;\n        }\n        while (n % 61 == 0) {\n  \
    \          n /= 61;\n        }\n        while (n % 67 == 0) {\n            n /=\
    \ 67;\n        }\n        while (n % 71 == 0) {\n            n /= 71;\n      \
    \  }\n        while (n % 73 == 0) {\n            n /= 73;\n        }\n       \
    \ while (n % 79 == 0) {\n            n /= 79;\n        }\n        while (n % 83\
    \ == 0) {\n            n /= 83;\n        }\n        while (n % 89 == 0) {\n  \
    \          n /= 89;\n        }\n        ", "        long max = n;\n        for\
    \ (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n               \
    \ max = i;\n            }\n        }\n        return max;", "        if (n ==\
    \ 1) return 1;\n        long max = n;\n        for (long i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \            i++;\n        }\n        return i;", "        long max = n;\n   \
    \     for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n   \
    \             max = Math.Min(max, i);\n            }\n        }\n        return\
    \ max;", "        long max = n;\n        for (long i = 2; i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                max = i;\n            }\n       \
    \ }\n        return max;", "        long max = n;\n        for (long i = 2; i\
    \ < n; i++) {\n            if (n % i == 0) {\n                max = i;\n     \
    \       }\n        }\n        return max;", "        long max = n;\n        for\
    \ (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n           \
    \     max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i <= n; i++) {\n            if (n % i ==\
    \ 0) {\n                max = i;\n            }\n        }\n        return max;",
  "        long max = n;\n        for (long i = 2; i < n; i++) {\n            if (n\
    \ % i == 0) {\n                max = i;\n            }\n        }\n        return\
    \ max;", "        long i = 2;\n        while (i * i <= n) {\n            if (n\
    \ % i == 0) {\n                return i;\n            }\n            i++;\n  \
    \      }\n        return i;", "        long max = n;\n        for (long i = 2;\
    \ i < n; i++) {\n            if (n % i == 0) {\n                max = i;\n   \
    \         }\n        }\n        return max;", "        long max = n;\n       \
    \ for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n            \
    \    max = i;\n            }\n        }\n        return max;", "        long max\
    \ = n;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                max = i;\n            }\n        }\n        return max;",
  "        long result = n;\n        while (result % 2 == 0) {\n            result\
    \ /= 2;\n        }\n        while (result % 3 == 0) {\n            result /= 3;\n\
    \        }\n        while (result % 5 == 0) {\n            result /= 5;\n    \
    \    }\n        while (result % 7 == 0) {\n            result /= 7;\n        }\n\
    \        while (result % 11 == 0) {\n            result /= 11;\n        }\n  \
    \      while (result % 13 == 0) {\n            result /= 13;\n        }\n    \
    \    while (result % 17 == 0) {\n            result /= 17;\n        }\n      \
    \  while (result % 19 == 0) {\n            result /= 19;\n        }\n        while\
    \ (result % 23 == 0) {\n            result /= 23;\n        }\n        while (result\
    \ % 29 == 0) {\n            result /= 29;\n        }\n        while (result %\
    \ 31 == 0) {\n            result /= 31;\n        }\n        while (result % 37\
    \ == 0) {\n            result /= 37;\n        }\n        while (result % 41 ==\
    \ 0) {\n            result /= 41;\n        }\n        while (result % 43 == 0)\
    \ {\n            result /= 43;\n        }\n        while (result % 47 == 0) {\n\
    \            result /= 47;\n        }\n        while (result % 53 == 0) {\n  \
    \          result /= 53;\n        }\n        while (result % 59 == 0) {\n    \
    \        result /= 59;\n        }\n        while (result % 61 == 0) {\n      \
    \      result /= 61;\n        }\n        while (result % 67 == 0) {\n        \
    \    result /= 67;\n        }\n        while (result % 71 == 0) {\n          \
    \  result /= 71;\n        }\n        while (result % 73 == 0) {\n            result\
    \ /= 73;\n        }\n        while (result % 79 == 0) {\n            result /=\
    \ 79;\n        }\n        while (result % 83 == 0) {\n            result /= 83;\n\
    \        }\n        while (result % 89 == 0) {\n            result /= 89;\n  \
    \      }\n        ", "        long result = n;\n        while (n > 1) {\n    \
    \        if (n % 2 == 0) {\n                n /= 2;\n            }\n         \
    \   else {\n                n = (n * 3) + 1;\n            }\n            result\
    \ = Math.Min(result, n);\n        }\n        return result;", "        long max\
    \ = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        long max = n;\n        for (long i = 2;\
    \ i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n  \
    \          }\n        }\n        return max;", "        long result = n;\n   \
    \     while (result % 2 == 0) {\n            result /= 2;\n        }\n       \
    \ while (result % 3 == 0) {\n            result /= 3;\n        }\n        while\
    \ (result % 5 == 0) {\n            result /= 5;\n        }\n        while (result\
    \ % 7 == 0) {\n            result /= 7;\n        }\n        while (result % 11\
    \ == 0) {\n            result /= 11;\n        }\n        while (result % 13 ==\
    \ 0) {\n            result /= 13;\n        }\n        while (result % 17 == 0)\
    \ {\n            result /= 17;\n        }\n        while (result % 19 == 0) {\n\
    \            result /= 19;\n        }\n        while (result % 23 == 0) {\n  \
    \          result /= 23;\n        }\n        while (result % 29 == 0) {\n    \
    \        result /= 29;\n        }\n        while (result % 31 == 0) {\n      \
    \      result /= 31;\n        }\n        while (result % 37 == 0) {\n        \
    \    result /= 37;\n        }\n        while (result % 41 == 0) {\n          \
    \  result /= 41;\n        }\n        while (result % 43 == 0) {\n            result\
    \ /= 43;\n        }\n        while (result % 47 == 0) {\n            result /=\
    \ 47;\n        }\n        while (result % 53 == 0) {\n            result /= 53;\n\
    \        }\n        while (result % 59 == 0) {\n            result /= 59;\n  \
    \      }\n        while (result % 61 == 0) {\n            result /= 61;\n    \
    \    }\n        while (result % 67 == 0) {\n            result /= 67;\n      \
    \  }\n        while (result % 71 == 0) {\n            result /= 71;\n        }\n\
    \        while (result % 73 == 0) {\n            result /= 73;\n        }\n  \
    \      while (result % 79 == 0) {\n            result /= 79;\n        }\n    \
    \    while (result % 83 == 0) {\n            result /= 83;\n        }\n      \
    \  while (result % 89 == 0) {\n            result /= 89;\n        }\n        ",
  "        long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                largestDivisor = i;\n           \
    \ }\n        }\n        return largestDivisor;", "        long max = n;\n    \
    \    for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n         \
    \       max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0)\
    \ {\n                max = i;\n            }\n        }\n        return max;",
  "        long result = n;\n        while (n > 1) {\n            if (n % 2 == 0)\
    \ {\n                n /= 2;\n            }\n            else {\n            \
    \    n = (n * 3) + 1;\n            }\n            result = Math.Min(result, n);\n\
    \        }\n        return result;", "        long max = n;\n        for (long\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                max = i;\n\
    \            }\n        }\n        return max;", "        long max = n;\n    \
    \    for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n        \
    \        max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0)\
    \ {\n                max = i;\n            }\n        }\n        return max;",
  "        long result = n;\n        while (n > 1) {\n            if (n % 2 == 0)\
    \ {\n                n /= 2;\n            }\n            else {\n            \
    \    n = (n * 3) + 1;\n            }\n            result = Math.Min(result, n);\n\
    \        }\n        return result;", "        long max = n;\n        for (long\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                max = i;\n\
    \            }\n        }\n        return max;", "        long result = n;\n \
    \       while (n > 1) {\n            if (n % 2 == 0) {\n                n /= 2;\n\
    \            } else {\n                n = (n * 3) + 1;\n            }\n     \
    \       result = Math.Min(result, n);\n        }\n        return result;", " \
    \       long result = n;\n        while (result > 1 && result % 2 == 0) {\n  \
    \          result /= 2;\n        }\n        return result;", "        long max\
    \ = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        long max = n;\n        for (long i = 2;\
    \ i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n  \
    \          }\n        }\n        return max;", "        long max = n;\n      \
    \  for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n           \
    \     max = i;\n            }\n        }\n        return max;", "        long\
    \ i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n      \
    \          return i;\n            }\n            i++;\n        }\n        return\
    \ i;", "        long i = n;\n        while (i > 1) {\n            if (n % i ==\
    \ 0) {\n                return i;\n            }\n            i--;\n        }\n\
    \        return 1;", "        long result = n;\n        while (n % 2 == 0) {\n\
    \            n /= 2;\n        }\n        while (n % 3 == 0) {\n            n /=\
    \ 3;\n        }\n        while (n % 5 == 0) {\n            n /= 5;\n        }\n\
    \        while (n % 7 == 0) {\n            n /= 7;\n        }\n        while (n\
    \ % 11 == 0) {\n            n /= 11;\n        }\n        while (n % 13 == 0) {\n\
    \            n /= 13;\n        }\n        while (n % 17 == 0) {\n            n\
    \ /= 17;\n        }\n        while (n % 19 == 0) {\n            n /= 19;\n   \
    \     }\n        while (n % 23 == 0) {\n            n /= 23;\n        }\n    \
    \    while (n % 29 == 0) {\n            n /= 29;\n        }\n        while (n\
    \ % 31 == 0) {\n            n /= 31;\n        }\n        while (n % 37 == 0) {\n\
    \            n /= 37;\n        }\n        while (n % 41 == 0) {\n            n\
    \ /= 41;\n        }\n        while (n % 43 == 0) {\n            n /= 43;\n   \
    \     }\n        while (n % 47 == 0) {\n            n /= 47;\n        }\n    \
    \    while (n % 53 == 0) {\n            n /= 53;\n        }\n        while (n\
    \ % 59 == 0) {\n            n /= 59;\n        }\n        while (n % 61 == 0) {\n\
    \            n /= 61;\n        }\n        while (n % 67 == 0) {\n            n\
    \ /= 67;\n        }\n        while (n % 71 == 0) {\n            n /= 71;\n   \
    \     }\n        while (n % 73 == 0) {\n            n /= 73;\n        }\n    \
    \    while (n % 79 == 0) {\n            n /= 79;\n        }\n        while (n\
    \ % 83 == 0) {\n            n /= 83;\n        }\n        while (n % 89 == 0) {\n\
    \            n /= 89;\n        }\n        ", "        long max = n;\n        for\
    \ (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n               \
    \ max = i;\n            }\n        }\n        return max;", "        long max\
    \ = n;\n        for (long i = 2; i <= n / i; i++) {\n            if (n % i ==\
    \ 0) {\n                max = Math.Min(max, i);\n            }\n        }\n  \
    \      return max;", "        long max = n;\n        for (long i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        if (n == 1) return 1;\n      \
    \  long max = n;\n        for (long i = 2; i <= n; i++) {\n            if (n %\
    \ i == 0) {\n                max = i;\n                break;\n            }\n\
    \        }\n        return max;", "        long max = n;\n        for (long i\
    \ = 2; i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n\
    \            }\n        }\n        return max;", "        long max = n;\n    \
    \    for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n         \
    \       max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0)\
    \ {\n                max = i;\n            }\n        }\n        return max;",
  "        long result = n;\n        while (n % 2 == 0) {\n            n /= 2;\n \
    \       }\n        while (n % 3 == 0) {\n            n /= 3;\n        }\n    \
    \    while (n % 5 == 0) {\n            n /= 5;\n        }\n        while (n %\
    \ 7 == 0) {\n            n /= 7;\n        }\n        while (n % 11 == 0) {\n \
    \           n /= 11;\n        }\n        while (n % 13 == 0) {\n            n\
    \ /= 13;\n        }\n        while (n % 17 == 0) {\n            n /= 17;\n   \
    \     }\n        while (n % 19 == 0) {\n            n /= 19;\n        }\n    \
    \    while (n % 23 == 0) {\n            n /= 23;\n        }\n        while (n\
    \ % 29 == 0) {\n            n /= 29;\n        }\n        while (n % 31 == 0) {\n\
    \            n /= 31;\n        }\n        while (n % 37 == 0) {\n            n\
    \ /= 37;\n        }\n        while (n % 41 == 0) {\n            n /= 41;\n   \
    \     }\n        while (n % 43 == 0) {\n            n /= 43;\n        }\n    \
    \    while (n % 47 == 0) {\n            n /= 47;\n        }\n        while (n\
    \ % 53 == 0) {\n            n /= 53;\n        }\n        while (n % 59 == 0) {\n\
    \            n /= 59;\n        }\n        while (n % 61 == 0) {\n            n\
    \ /= 61;\n        }\n        while (n % 67 == 0) {\n            n /= 67;\n   \
    \     }\n        while (n % 71 == 0) {\n            n /= 71;\n        }\n    \
    \    while (n % 73 == 0) {\n            n /= 73;\n        }\n        while (n\
    \ % 79 == 0) {\n            n /= 79;\n        }\n        while (n % 83 == 0) {\n\
    \            n /= 83;\n        }\n        while (n % 89 == 0) {\n            n\
    \ /= 89;\n        }\n        ", "        long max = n;\n        for (long i =\
    \ 2; i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n\
    \            }\n        }\n        return max;", "        long max = n;\n    \
    \    for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n         \
    \       max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i <= n; i++) {\n            if (n % i ==\
    \ 0) {\n                max = i;\n            }\n        }\n        return max;",
  "        long result = n;\n        while (n > 1) {\n            if (n % 2 == 0)\
    \ {\n                n /= 2;\n            } else {\n                n = (n * 3)\
    \ + 1;\n            }\n            result = Math.Min(result, n);\n        }\n\
    \        return result;", "        long max = n;\n        for (long i = 2; i <\
    \ n; i++) {\n            if (n % i == 0) {\n                max = i;\n       \
    \     }\n        }\n        return max;", "        if (n < 2) return n;\n    \
    \    long max = n;\n        for (long i = 2; i < n; i++) {\n            if (n\
    \ % i == 0) {\n                max = i;\n                break;\n            }\n\
    \        }\n        return max;", "        long max = n;\n        for (long i\
    \ = 2; i < n; i++) {\n            if (n % i == 0) {\n                max = i;\n\
    \            }\n        }\n        return max;", "        long max = n;\n    \
    \    for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n         \
    \       max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i <= n; i++) {\n            if (n % i ==\
    \ 0) {\n                max = i;\n            }\n        }\n        return max;",
  "        long max = n;\n        for (long i = 2; i < n; i++) {\n            if (n\
    \ % i == 0) {\n                max = i;\n            }\n        }\n        return\
    \ max;", "        long max = n;\n        for (long i = 2; i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                max = i;\n            }\n       \
    \ }\n        return max;", "        long result = n;\n        while (result %\
    \ 2 == 0) {\n            result /= 2;\n        }\n        while (result % 3 ==\
    \ 0) {\n            result /= 3;\n        }\n        while (result % 5 == 0) {\n\
    \            result /= 5;\n        }\n        while (result % 7 == 0) {\n    \
    \        result /= 7;\n        }\n        while (result % 11 == 0) {\n       \
    \     result /= 11;\n        }\n        while (result % 13 == 0) {\n         \
    \   result /= 13;\n        }\n        while (result % 17 == 0) {\n           \
    \ result /= 17;\n        }\n        while (result % 19 == 0) {\n            result\
    \ /= 19;\n        }\n        while (result % 23 == 0) {\n            result /=\
    \ 23;\n        }\n        while (result % 29 == 0) {\n            result /= 29;\n\
    \        }\n        while (result % 31 == 0) {\n            result /= 31;\n  \
    \      }\n        while (result % 37 == 0) {\n            result /= 37;\n    \
    \    }\n        while (result % 41 == 0) {\n            result /= 41;\n      \
    \  }\n        while (result % 43 == 0) {\n            result /= 43;\n        }\n\
    \        while (result % 47 == 0) {\n            result /= 47;\n        }\n  \
    \      while (result % 53 == 0) {\n            result /= 53;\n        }\n    \
    \    while (result % 59 == 0) {\n            result /= 59;\n        }\n      \
    \  while (result % 61 == 0) {\n            result /= 61;\n        }\n        while\
    \ (result % 67 == 0) {\n            result /= 67;\n        }\n        while (result\
    \ % 71 == 0) {\n            result /= 71;\n        }\n        while (result %\
    \ 73 == 0) {\n            result /= 73;\n        }\n        while (result % 79\
    \ == 0) {\n            result /= 79;\n        }\n        while (result % 83 ==\
    \ 0) {\n            result /= 83;\n        }\n        while (result % 89 == 0)\
    \ {\n            result /= 89;\n        }\n        ", "        long result = n;\n\
    \        while (result > 1 && n % result != 0) {\n            result--;\n    \
    \    }\n        return result;", "        long max = n;\n        for (long i =\
    \ 2; i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n\
    \            }\n        }\n        return max;", "        if (n == 0) return 0;\n\
    \        long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i <= n / 2; i++)\
    \ {\n            if (n % i == 0) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        long result = n;\n        while (result\
    \ > 1 && result % 2 == 0) {\n            result /= 2;\n        }\n        return\
    \ result;", "        long max = n;\n        for (long i = 2; i <= n; i++) {\n\
    \            if (n % i == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        if (n == 1) return 1;\n        long max\
    \ = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i <= n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        long result = n;\n        while (result\
    \ % 2 == 0) {\n            result /= 2;\n        }\n        while (result % 3\
    \ == 0) {\n            result /= 3;\n        }\n        while (result % 5 == 0)\
    \ {\n            result /= 5;\n        }\n        while (result % 7 == 0) {\n\
    \            result /= 7;\n        }\n        while (result % 11 == 0) {\n   \
    \         result /= 11;\n        }\n        while (result % 13 == 0) {\n     \
    \       result /= 13;\n        }\n        while (result % 17 == 0) {\n       \
    \     result /= 17;\n        }\n        while (result % 19 == 0) {\n         \
    \   result /= 19;\n        }\n        while (result % 23 == 0) {\n           \
    \ result /= 23;\n        }\n        while (result % 29 == 0) {\n            result\
    \ /= 29;\n        }\n        while (result % 31 == 0) {\n            result /=\
    \ 31;\n        }\n        while (result % 37 == 0) {\n            result /= 37;\n\
    \        }\n        while (result % 41 == 0) {\n            result /= 41;\n  \
    \      }\n        while (result % 43 == 0) {\n            result /= 43;\n    \
    \    }\n        while (result % 47 == 0) {\n            result /= 47;\n      \
    \  }\n        while (result % 53 == 0) {\n            result /= 53;\n        }\n\
    \        while (result % 59 == 0) {\n            result /= 59;\n        }\n  \
    \      while (result % 61 == 0) {\n            result /= 61;\n        }\n    \
    \    while (result % 67 == 0) {\n            result /= 67;\n        }\n      \
    \  while (result % 71 == 0) {\n            result /= 71;\n        }\n        while\
    \ (result % 73 == 0) {\n            result /= 73;\n        }\n        while (result\
    \ % 79 == 0) {\n            result /= 79;\n        }\n        while (result %\
    \ 83 == 0) {\n            result /= 83;\n        }\n        while (result % 89\
    \ == 0) {\n            result /= 89;\n        }\n        ", "        long max\
    \ = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long result = n;\n        while (n > 1) {\n         \
    \   if (n % 2 == 0) {\n                n /= 2;\n            } else {\n       \
    \         n = (n * 3) + 1;\n            }\n            result = Math.Max(result,\
    \ n);\n        }\n        return result;", "        long max = n;\n        for\
    \ (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n           \
    \     max = i;\n            }\n        }\n        return max;", "        long\
    \ result = n;\n        while (n > 1) {\n            if (n % 2 == 0) {\n      \
    \          n /= 2;\n            } else {\n                n = (n * 3) + 1;\n \
    \           }\n            result = Math.Max(result, n);\n        }\n        return\
    \ result;", "        long max = n;\n        for (long i = 2; i <= n; i++) {\n\
    \            if (n % i == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        long max = n;\n        for (long i = 2;\
    \ i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n  \
    \          }\n        }\n        return max;", "        long max = n;\n      \
    \  for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n           \
    \     max = Math.Min(max, i);\n            }\n        }\n        return max;",
  "        long result = n;\n        while (result > 1 && result % 2 == 0) {\n   \
    \         result /= 2;\n        }\n        return result;", "        long result\
    \ = n;\n        while (result % 2 == 0) {\n            result /= 2;\n        }\n\
    \        while (result % 3 == 0) {\n            result /= 3;\n        }\n    \
    \    while (result % 5 == 0) {\n            result /= 5;\n        }\n        while\
    \ (result % 7 == 0) {\n            result /= 7;\n        }\n        while (result\
    \ % 11 == 0) {\n            result /= 11;\n        }\n        while (result %\
    \ 13 == 0) {\n            result /= 13;\n        }\n        while (result % 17\
    \ == 0) {\n            result /= 17;\n        }\n        while (result % 19 ==\
    \ 0) {\n            result /= 19;\n        }\n        while (result % 23 == 0)\
    \ {\n            result /= 23;\n        }\n        while (result % 29 == 0) {\n\
    \            result /= 29;\n        }\n        while (result % 31 == 0) {\n  \
    \          result /= 31;\n        }\n        while (result % 37 == 0) {\n    \
    \        result /= 37;\n        }\n        while (result % 41 == 0) {\n      \
    \      result /= 41;\n        }\n        while (result % 43 == 0) {\n        \
    \    result /= 43;\n        }\n        while (result % 47 == 0) {\n          \
    \  result /= 47;\n        }\n        while (result % 53 == 0) {\n            result\
    \ /= 53;\n        }\n        while (result % 59 == 0) {\n            result /=\
    \ 59;\n        }\n        while (result % 61 == 0) {\n            result /= 61;\n\
    \        }\n        while (result % 67 == 0) {\n            result /= 67;\n  \
    \      }\n        while (result % 71 == 0) {\n            result /= 71;\n    \
    \    }\n        while (result % 73 == 0) {\n            result /= 73;\n      \
    \  }\n        while (result % 79 == 0) {\n            result /= 79;\n        }\n\
    \        while (result % 83 == 0) {\n            result /= 83;\n        }\n  \
    \      while (result % 89 == 0) {\n            result /= 89;\n        }\n    \
    \    ", "        long result = n;\n        while (n > 1) {\n            if (n\
    \ % 2 == 0) {\n                n /= 2;\n            } else {\n               \
    \ n = (n * 3) + 1;\n            }\n            result = Math.Max(result, n);\n\
    \        }\n        return result;", "        long i = 2;\n        while (i *\
    \ i <= n) {\n            if (n % i == 0) {\n                return i;\n      \
    \      }\n            i++;\n        }\n        return n;", "        long max =\
    \ n;\n        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        long result = n;\n        while (result\
    \ > 1) {\n            if (n % result == 0) {\n                result--;\n    \
    \        }\n            else {\n                break;\n            }\n      \
    \  }\n        return result;", "        long max = n;\n        for (long i = 2;\
    \ i < n; i++) {\n            if (n % i == 0) {\n                max = i;\n   \
    \         }\n        }\n        return max;", "        long max = n;\n       \
    \ for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n           \
    \     max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i\
    \ == 0) {\n                max = Math.Min(max, i);\n            }\n        }\n\
    \        return max;", "        long max = n;\n        for (long i = 2; i < n;\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        long max = n;\n        for (long\
    \ i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                max =\
    \ i;\n            }\n        }\n        return max;", "        long max = n;\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           max = i;\n            }\n        }\n        return max;", "      \
    \  long result = n;\n        while (result > 1 && n % result != 0) {\n       \
    \     result--;\n        }\n        return result;", "        long i = 2;\n  \
    \      while (i * i <= n) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n            i++;\n        }\n        return n;", "      \
    \  long largestDivisor = 1;\n        for (long i = 2; i <= n; i++) {\n       \
    \     if (n % i == 0) {\n                largestDivisor = i;\n            }\n\
    \        }\n        return largestDivisor;", "        long max = n;\n        for\
    \ (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n                max\
    \ = i;\n            }\n        }\n        return max;", "        if (n == 1) return\
    \ 1;\n        long max = n;\n        for (long i = 2; i <= n / 2; i++) {\n   \
    \         if (n % i == 0) {\n                max = i;\n                break;\n\
    \            }\n        }\n        return max;", "        long result = n;\n \
    \       while (n % 2 == 0) {\n            n /= 2;\n        }\n        while (n\
    \ % 3 == 0) {\n            n /= 3;\n        }\n        while (n % 5 == 0) {\n\
    \            n /= 5;\n        }\n        while (n % 7 == 0) {\n            n /=\
    \ 7;\n        }\n        while (n % 11 == 0) {\n            n /= 11;\n       \
    \ }\n        while (n % 13 == 0) {\n            n /= 13;\n        }\n        while\
    \ (n % 17 == 0) {\n            n /= 17;\n        }\n        while (n % 19 == 0)\
    \ {\n            n /= 19;\n        }\n        while (n % 23 == 0) {\n        \
    \    n /= 23;\n        }\n        while (n % 29 == 0) {\n            n /= 29;\n\
    \        }\n        while (n % 31 == 0) {\n            n /= 31;\n        }\n \
    \       while (n % 37 == 0) {\n            n /= 37;\n        }\n        while\
    \ (n % 41 == 0) {\n            n /= 41;\n        }\n        while (n % 43 == 0)\
    \ {\n            n /= 43;\n        }\n        while (n % 47 == 0) {\n        \
    \    n /= 47;\n        }\n        while (n % 53 == 0) {\n            n /= 53;\n\
    \        }\n        while (n % 59 == 0) {\n            n /= 59;\n        }\n \
    \       while (n % 61 == 0) {\n            n /= 61;\n        }\n        while\
    \ (n % 67 == 0) {\n            n /= 67;\n        }\n        while (n % 71 == 0)\
    \ {\n            n /= 71;\n        }\n        while (n % 73 == 0) {\n        \
    \    n /= 73;\n        }\n        while (n % 79 == 0) {\n            n /= 79;\n\
    \        }\n        while (n % 83 == 0) {\n            n /= 83;\n        }\n \
    \       while (n % 89 == 0) {\n            n /= 89;\n        }\n        ", " \
    \       long max = n;\n        for (long i = 2; i <= n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long i = 2;\n        while (i * i <= n) {\n         \
    \   if (n % i == 0) {\n                return i;\n            }\n            i++;\n\
    \        }\n        return n;", "        long i = 1;\n        while (i * i <=\
    \ n) {\n            if (n % i == 0) {\n                return i;\n           \
    \ }\n            i++;\n        }\n        return i;", "        long max = n;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            max = Math.Min(max, i);\n            }\n        }\n        return\
    \ max;", "        long max = n;\n        for (long i = 2; i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                max = i;\n            }\n       \
    \ }\n        return max;", "        long max = n;\n        for (long i = 2; i\
    \ <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n    \
    \        }\n        }\n        return max;", "        long max = n;\n        for\
    \ (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n               \
    \ max = i;\n            }\n        }\n        return max;", "        long max\
    \ = n;\n        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i <= n / 2; i++) {\n         \
    \   if (n % i == 0) {\n                max = i;\n            }\n        }\n  \
    \      return max;", "        long max = n;\n        for (long i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        long i = n;\n        while (i\
    \ > 1) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n            i--;\n        }\n        return 1;", "        if (n == 1) return\
    \ 1;\n        long max = n;\n        for (long i = 2; i <= n; i++) {\n       \
    \     if (n % i == 0) {\n                max = i;\n            }\n        }\n\
    \        return max;", "        long max = n;\n        for (long i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        long max = n;\n        for (long\
    \ i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                max =\
    \ Math.Min(max, i);\n            }\n        }\n        return max;", "       \
    \ long result = n;\n        while (n > 1) {\n            if (n % 2 == 0) {\n \
    \               n /= 2;\n            } else if (n % 3 == 0) {\n              \
    \  n /= 3;\n            } else if (n % 5 == 0) {\n                n /= 5;\n  \
    \          } else {\n                break;\n            }\n            result\
    \ = Math.Min(result, n);\n        }\n        return result;", "        long max\
    \ = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        long max = n;\n        for (long i = 2;\
    \ i < n; i++) {\n            if (n % i == 0) {\n                max = i;\n   \
    \         }\n        }\n        return max;", "        if (n < 2) return n;\n\
    \        long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        long i = 2;\n        while (i * i <=\
    \ n) {\n            if (n % i == 0) {\n                return i;\n           \
    \ }\n            i++;\n        }\n        return i;", "        long max = n;\n\
    \        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long i = 2;\n        while (i * i <= n) {\n         \
    \   if (n % i == 0) {\n                return i;\n            }\n            i++;\n\
    \        }\n        return i;", "        long i = 2;\n        while (i * i <=\
    \ n) {\n            if (n % i == 0) {\n                return i;\n           \
    \ }\n            i++;\n        }\n        return i;", "        long max = n;\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           max = i;\n            }\n        }\n        return max;", "      \
    \  long result = n;\n        while (n > 1) {\n            if (n % 2 == 0) {\n\
    \                n /= 2;\n            } else {\n                n = (n * 3) +\
    \ 1;\n            }\n            result = Math.Min(result, n);\n        }\n  \
    \      return result;", "        long max = n;\n        for (long i = 2; i <=\
    \ n; i++) {\n            if (n % i == 0) {\n                max = i;\n       \
    \     }\n        }\n        return max;", "        long max = n;\n        for\
    \ (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n    \
    \            max = i;\n            }\n        }\n        return max;", "     \
    \   long max = n;\n        for (long i = 2; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                max = i;\n            }\n        }\n        return\
    \ max;", "        long max = n;\n        for (long i = 2; i < n; i++) {\n    \
    \        if (n % i == 0) {\n                max = i;\n            }\n        }\n\
    \        return max;", "        long max = n;\n        for (long i = 2; i < n;\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        long result = 1;\n        while\
    \ (n > 1) {\n            if (n % 2 == 0) {\n                n /= 2;\n        \
    \    }\n            else {\n                n = (n * 3) + 1;\n            }\n\
    \            result = Math.Max(result, n);\n        }\n        return result;",
  "        long result = n;\n        while (n % 2 == 0) {\n            n /= 2;\n \
    \       }\n        while (n % 3 == 0) {\n            n /= 3;\n        }\n    \
    \    while (n % 5 == 0) {\n            n /= 5;\n        }\n        while (n %\
    \ 7 == 0) {\n            n /= 7;\n        }\n        while (n % 11 == 0) {\n \
    \           n /= 11;\n        }\n        while (n % 13 == 0) {\n            n\
    \ /= 13;\n        }\n        while (n % 17 == 0) {\n            n /= 17;\n   \
    \     }\n        while (n % 19 == 0) {\n            n /= 19;\n        }\n    \
    \    while (n % 23 == 0) {\n            n /= 23;\n        }\n        while (n\
    \ % 29 == 0) {\n            n /= 29;\n        }\n        while (n % 31 == 0) {\n\
    \            n /= 31;\n        }\n        while (n % 37 == 0) {\n            n\
    \ /= 37;\n        }\n        while (n % 41 == 0) {\n            n /= 41;\n   \
    \     }\n        while (n % 43 == 0) {\n            n /= 43;\n        }\n    \
    \    while (n % 47 == 0) {\n            n /= 47;\n        }\n        while (n\
    \ % 53 == 0) {\n            n /= 53;\n        }\n        while (n % 59 == 0) {\n\
    \            n /= 59;\n        }\n        while (n % 61 == 0) {\n            n\
    \ /= 61;\n        }\n        while (n % 67 == 0) {\n            n /= 67;\n   \
    \     }\n        while (n % 71 == 0) {\n            n /= 71;\n        }\n    \
    \    while (n % 73 == 0) {\n            n /= 73;\n        }\n        while (n\
    \ % 79 == 0) {\n            n /= 79;\n        }\n        while (n % 83 == 0) {\n\
    \            n /= 83;\n        }\n        while (n % 89 == 0) {\n            n\
    \ /= 89;\n        }\n        ", "        long max = n;\n        for (long i =\
    \ 2; i < n; i++) {\n            if (n % i == 0) {\n                max = i;\n\
    \            }\n        }\n        return max;", "        long max = n;\n    \
    \    for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n         \
    \       max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i <= n; i++) {\n            if (n % i ==\
    \ 0) {\n                max = i;\n            }\n        }\n        return max;",
  "        long max = n;\n        for (long i = 2; i < n; i++) {\n            if (n\
    \ % i == 0) {\n                max = i;\n            }\n        }\n        return\
    \ max;", "        long max = n;\n        for (long i = 2; i <= n; i++) {\n   \
    \         if (n % i == 0) {\n                max = i;\n            }\n       \
    \ }\n        return max;", "        long max = n;\n        for (long i = 2; i\
    \ < n; i++) {\n            if (n % i == 0) {\n                max = i;\n     \
    \       }\n        }\n        return max;", "        long max = n;\n        for\
    \ (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n               \
    \ max = i;\n            }\n        }\n        return max;", "        long max\
    \ = n;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                max = i;\n            }\n        }\n        return max;",
  "        long result = n;\n        while (n > 1) {\n            if (n % 2 == 0)\
    \ {\n                n /= 2;\n            } else {\n                n = (n * 3)\
    \ + 1;\n            }\n            result = Math.Max(result, n);\n        }\n\
    \        return result;", "        long result = n;\n        while (result % 2\
    \ == 0) {\n            result /= 2;\n        }\n        while (result % 3 == 0)\
    \ {\n            result /= 3;\n        }\n        while (result % 5 == 0) {\n\
    \            result /= 5;\n        }\n        while (result % 7 == 0) {\n    \
    \        result /= 7;\n        }\n        while (result % 11 == 0) {\n       \
    \     result /= 11;\n        }\n        while (result % 13 == 0) {\n         \
    \   result /= 13;\n        }\n        while (result % 17 == 0) {\n           \
    \ result /= 17;\n        }\n        return result;", "        long result = n;\n\
    \        while (result > 1) {\n            if (n % result == 0) {\n          \
    \      result = result / 2;\n            }\n            else {\n             \
    \   result = result - 1;\n            }\n        }\n        return result;", " \
    \       long max = n;\n        for (long i = 2; i <= n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long result = n;\n        while (result > 1 && n % result\
    \ != 0) {\n            result--;\n        }\n        return result;", "      \
    \  long result = n;\n        while (n > 1) {\n            if (n % 2 == 0) {\n\
    \                n /= 2;\n            }\n            else {\n                n\
    \ = (n * 3) + 1;\n            }\n            result = Math.Min(result, n);\n \
    \       }\n        return result;", "        long result = n;\n        while (result\
    \ > 1 && n % result != 0) {\n            result--;\n        }\n        return\
    \ result;", "        long result = n;\n        while (n > 1) {\n            if\
    \ (n % 2 == 0) {\n                n /= 2;\n            } else {\n            \
    \    n = (n * 3) + 1;\n            }\n            result = Math.Max(result, n);\n\
    \        }\n        return result;", "        long largestDivisor = n;\n     \
    \   for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n     \
    \           largestDivisor = i;\n            }\n        }\n        return largestDivisor;",
  "        long result = n;\n        while (n > 1) {\n            if (n % 2 == 0)\
    \ {\n                n /= 2;\n            } else if (n % 3 == 0) {\n         \
    \       n /= 3;\n            } else if (n % 5 == 0) {\n                n /= 5;\n\
    \            } else {\n                break;\n            }\n            result\
    \ = Math.Min(result, n);\n        }\n        return result;", "        long result\
    \ = n;\n        while (n % 2 == 0) {\n            n /= 2;\n            result\
    \ /= 2;\n        }\n        while (n % 3 == 0) {\n            n /= 3;\n      \
    \      result /= 3;\n        }\n        while (n % 5 == 0) {\n            n /=\
    \ 5;\n            result /= 5;\n        }\n        while (n % 7 == 0) {\n    \
    \        n /= 7;\n            result /= 7;\n        }\n        while (n % 11 ==\
    \ 0) {\n            n /= 11;\n            result /= 11;\n        }\n        while\
    \ (n % 13 == 0) {\n            n /= 13;\n            result /= 13;\n        }\n\
    \        while (n % 17 == 0) {\n            n /= 17;\n            result /= 17;\n\
    \        }\n        while (n % 19 == 0) {\n            n /= 19;\n            result\
    \ /= 19;\n        }\n        while (n % 23 == 0) {\n            n /= 23;\n   \
    \         result /= 23;\n        }\n        while (n % 29 == 0) {\n          \
    \  n /= 29;\n            result /= 29;\n        }\n        while (n % 31 == 0)\
    \ {\n            n /= 31;\n            result /= 31;\n        }\n        while\
    \ (n % 37 == 0) {\n            n /= 37;\n            result /= 37;\n        }\n\
    \        while (n % 41 == 0) {\n            n /= 41;\n            result /= 41;\n\
    \        }\n        while (n % 43 == 0) {\n            n /= 43;\n            result\
    \ /= 43;\n        }\n        while (n % 47 == 0) {\n            n /= 47;\n   \
    \         result /= 47;\n        }\n        while (n % 53 == 0) {\n          \
    \  n /= 53;\n            result /= 53;\n        }\n        while (n % 59 == 0)\
    \ {\n            n /= 59;\n            result /= 59;\n        }\n        while\
    \ (n % 61 == 0) {\n            n /= 61;\n            result /= 61;\n        }\n\
    \        ", "        if (n == 1) return 1;\n        long max = n;\n        for\
    \ (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n               \
    \ max = Math.Min(max, i);\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i <= n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        long max = n;\n        for (long i\
    \ = 2; i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n\
    \            }\n        }\n        return max;", "        long max = n;\n    \
    \    for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n        \
    \        max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i <= n / i; i++) {\n            if (n % i\
    \ == 0) {\n                max = Math.Min(max, i);\n            }\n        }\n\
    \        return max;", "        long max = n;\n        for (long i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        long result = 1;\n        while\
    \ (n > 1) {\n            if (n % result == 0) {\n                n /= result;\n\
    \            } else {\n                result++;\n            }\n        }\n \
    \       return result;", "        if (n == 1) return 1;\n        long max = n;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            max = Math.Min(max, i);\n            }\n        }\n        return\
    \ max;", "        long max = n;\n        for (long i = 2; i < n; i++) {\n    \
    \        if (n % i == 0) {\n                max = i;\n            }\n        }\n\
    \        return max;", "        long max = n;\n        for (long i = 2; i <= n;\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        long i = 2;\n        while (i\
    \ < n) {\n            if (n % i == 0) {\n                return i;\n         \
    \   }\n            i++;\n        }\n        return i;", "        long max = n;\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           max = i;\n            }\n        }\n        return max;", "      \
    \  long max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n       \
    \     if (n % i == 0) {\n                max = Math.Min(max, i);\n           \
    \ }\n        }\n        return max;", "        long max = n;\n        for (long\
    \ i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                max =\
    \ i;\n            }\n        }\n        return max;", "        long max = n;\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           max = i;\n            }\n        }\n        return max;", "      \
    \  long max = n;\n        for (long i = 2; i <= n / 2; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        long max = n;\n        for (long i = 2;\
    \ i <= n; i++) {\n            if (n % i == 0) {\n                max = i;\n  \
    \          }\n        }\n        return max;", "        long max = n;\n      \
    \  for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n          \
    \      max = i;\n            }\n        }\n        return max;", "        long\
    \ i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n      \
    \          return i;\n            }\n            i++;\n        }\n        return\
    \ n;", "        long max = n;\n        for (long i = 2; i <= n / 2; i++) {\n \
    \           if (n % i == 0) {\n                max = i;\n            }\n     \
    \   }\n        return max;", "        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \            i++;\n        }\n        return n;", "        long max = n;\n   \
    \     for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n        \
    \        max = i;\n            }\n        }\n        return max;", "        long\
    \ max = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0)\
    \ {\n                max = i;\n            }\n        }\n        return max;",
  "        if (n == 1) return 1;\n        if (n == 2) return 2;\n        if (n % 2\
    \ == 0) return 2;\n        long i = 3;\n        while (i * i <= n) {\n       \
    \     if (n % i == 0) return i;\n            i += 2;\n        }\n        return\
    \ i;", "        long max = n;\n        for (long i = 2; i <= n; i++) {\n     \
    \       if (n % i == 0) {\n                max = i;\n            }\n        }\n\
    \        return max;", "        long max = n;\n        for (long i = 2; i < n;\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \  }\n        }\n        return max;", "        long max = n;\n        for (long\
    \ i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                max =\
    \ i;\n            }\n        }\n        return max;", "        long max = n;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            max = i;\n            }\n        }\n        return max;", "     \
    \   long max = n;\n        for (long i = 2; i <= n / 2; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long max = n;\n        for (long i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                max = i;\n            }\n    \
    \    }\n        return max;", "        long result = n;\n        while (result\
    \ % 2 == 0) {\n            result /= 2;\n        }\n        while (result % 3\
    \ == 0) {\n            result /= 3;\n        }\n        while (result % 5 == 0)\
    \ {\n            result /= 5;\n        }\n        while (result % 7 == 0) {\n\
    \            result /= 7;\n        }\n        while (result % 11 == 0) {\n   \
    \         result /= 11;\n        }\n        while (result % 13 == 0) {\n     \
    \       result /= 13;\n        }\n        while (result % 17 == 0) {\n       \
    \     result /= 17;\n        }\n        return result;", "        long max = n;\n\
    \        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           max = i;\n            }\n        }\n        return max;", "      \
    \  long max = n;\n        for (long i = 2; i <= n; i++) {\n            if (n %\
    \ i == 0) {\n                max = i;\n            }\n        }\n        return\
    \ max;", "        long result = n;\n        while (n > 1) {\n            if (n\
    \ % 2 == 0) {\n                n /= 2;\n            }\n            else {\n  \
    \              n = (n * 3) + 1;\n            }\n            result = Math.Min(result,\
    \ n);\n        }\n        return result;", "        long max = n;\n        for\
    \ (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n               \
    \ max = i;\n            }\n        }\n        return max;", "        long max\
    \ = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n            i++;\n        }\n \
    \       return n;", "        long max = n;\n        for (long i = 2; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                max = i;\n            }\n\
    \        }\n        return max;", "        long result = n;\n        while (n\
    \ > 1) {\n            if (n % 2 == 0) {\n                n /= 2;\n           \
    \ } else {\n                n = (n * 3) + 1;\n            }\n            result\
    \ = Math.Min(result, n);\n        }\n        return result;", "        long max\
    \ = n;\n        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = n;\n        for (long i = 2; i < n; i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long largestDivisor = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        long\
    \ max = n;\n        for (long i = 2; i <= n; i++) {\n            if (n % i ==\
    \ 0) {\n                max = i;\n            }\n        }\n        return max;",
  "        long max = n;\n        for (long i = 2; i < n; i++) {\n            if (n\
    \ % i == 0) {\n                max = i;\n            }\n        }\n        return\
    \ max;", "        long max = n;\n        for (long i = 2; i < n; i++) {\n    \
    \        if (n % i == 0) {\n                max = i;\n            }\n        }\n\
    \        return max;", "        long i = 2;\n        while (i * i <= n) {\n  \
    \          if (n % i == 0) {\n                return i;\n            }\n     \
    \       i++;\n        }\n        return i;"]
stop_tokens:
- "\n    }\n"

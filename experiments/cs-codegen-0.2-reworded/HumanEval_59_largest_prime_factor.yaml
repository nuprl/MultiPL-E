name: HumanEval_59_largest_prime_factor
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return the largest prime factor of n. Assume n > 1 and is not\
  \ a prime.\n    // >>> LargestPrimeFactor((13195L))\n    // (29L)\n    // >>> LargestPrimeFactor((2048L))\n\
  \    // (2L)\n    public static long LargestPrimeFactor(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestPrimeFactor((15L))\
  \ == (5L));\n    Debug.Assert(LargestPrimeFactor((27L)) == (3L));\n    Debug.Assert(LargestPrimeFactor((63L))\
  \ == (7L));\n    Debug.Assert(LargestPrimeFactor((330L)) == (11L));\n    Debug.Assert(LargestPrimeFactor((13195L))\
  \ == (29L));\n    }\n\n}\n"
completions: ["        if (n == 1) return 1;\n        long p = 2;\n        while (p\
    \ * p <= n) {\n            if (n % p == 0) {\n                n /= p;\n      \
    \          p = 2;\n            }\n            else {\n                p = p +\
    \ 1;\n            }\n        }\n        return n;", "        if (n == 1) return\
    \ 1;\n        long prime = 2;\n        while (n % prime != 0) {\n            prime++;\n\
    \            if (prime * prime > n) return n;\n        }\n        return prime;",
  "        if (n == 2) return 2;\n        if (n == 3) return 3;\n        if (n % 2\
    \ == 0) return 2;\n        if (n % 3 == 0) return 3;\n        long i = 5;\n  \
    \      while (i * i <= n) {\n            if (n % i == 0) return i;\n         \
    \   i += 2;\n        }\n        return n;", "        if (n == 2) return 2;\n \
    \       if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n        if (n\
    \ % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n) {\n   \
    \         if (n % i == 0) {\n                return i;\n            }\n      \
    \      i += 2;\n        }\n        return n;", "        if (n < 2) return n;\n\
    \        if (n == 2) return 2;\n        if (n % 2 == 0) return 2;\n        long\
    \ i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) {\n      \
    \          return i;\n            }\n            i += 2;\n        }\n        return\
    \ n;", "        long largestPrimeFactor = 2;\n        for (long i = 3; i <= Math.Sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                largestPrimeFactor\
    \ = i;\n                n /= i;\n            }\n        }\n        if (n > 1)\
    \ {\n            largestPrimeFactor = n;\n        }\n        return largestPrimeFactor;",
  "        if (n < 2) return n;\n        if (n == 2) return 2;\n        long max =\
    \ Math.Max(n, 2);\n        for (long i = 3; i <= max; i++) {\n            if (n\
    \ % i == 0) {\n                return i;\n            }\n        }\n        return\
    \ n;", "        long prime = 2;\n        while (n > 1) {\n            if (n %\
    \ prime == 0) {\n                n /= prime;\n            }\n            else\
    \ {\n                prime = prime + 1;\n            }\n        }\n        return\
    \ prime;", "        if (n == 2) return 2;\n        if (n == 3) return 3;\n   \
    \     if (n % 2 == 0) return 2;\n        if (n % 3 == 0) return 3;\n        long\
    \ i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) {\n      \
    \          return i;\n            }\n            i += 2;\n        }\n        return\
    \ n;", "        if (n == 2) return 2;\n        if (n == 3) return 3;\n       \
    \ if (n % 2 == 0) return 2;\n        if (n % 3 == 0) return 3;\n        long i\
    \ = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return i;\n\
    \            i += 2;\n        }\n        return n;", "        long max = n;\n\
    \        for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i ==\
    \ 0) {\n                max = Math.Min(max, i);\n                n /= i;\n   \
    \         }\n        }\n        return max;", "        long prime = 2;\n     \
    \   while (n % prime != 0) {\n            prime++;\n        }\n        return\
    \ prime;", "        if (n == 1) return 1;\n        if (n == 2) return 2;\n   \
    \     if (n == 3) return 3;\n        if (n == 4) return 2;\n        if (n == 5)\
    \ return 5;\n        if (n == 6) return 3;\n        if (n == 7) return 7;\n  \
    \      if (n == 8) return 2;\n        if (n == 9) return 9;\n        if (n ==\
    \ 10) return 5;\n        if (n == 11) return 11;\n        if (n == 12) return\
    \ 2;\n        if (n == 13) return 13;\n        if (n == 14) return 7;\n      \
    \  if (n == 15) return 3;\n        if (n == 16) return 2;\n        if (n == 17)\
    \ return 17;\n        if (n == 18) return 2;\n        if (n == 19) return 19;\n\
    \        if (n == 20) return 2;\n        if (n == 21) return 3;\n        if (n\
    \ == 22) return 2;\n        if (n == 23) return 23;\n        if (n == 24) return\
    \ 2;\n        if (n == 25) return 5;\n        if (n == 26) return 2;\n       \
    \ if (n == 27) return 3;\n        if (n == 28) return 2;\n        if (n == 29)\
    \ return 29;\n        if (n == 30) return 2;\n        if (n == 31) return 31;\n\
    \        if (n == 32) return 2;\n        if (n == 33) return 5;\n        if (n\
    \ == 34) return 2;\n        if (n == 35) return 5;\n        if (n == 36) return\
    \ 2;\n        if (n == 37) return 37;\n        if (n == 38) return 2;\n      \
    \  if (n == 39) return 3;\n        if (n == 40) return 2;\n        if (n == 41)\
    \ return 41;\n        if (n == 42) return 2;\n        if (n == 43) return 43;\n\
    \        if (n == 44) return 2;\n        if (n == 45) return 5;\n        if (n\
    \ == 46) return 2;\n        if (n == 47", "        long prime = 2;\n        while\
    \ (n % prime != 0) {\n            prime++;\n        }\n        return prime;",
  "        long prime = 2;\n        while (n % prime != 0) {\n            prime++;\n\
    \        }\n        return prime;", "        if (n == 1) return 1;\n        long\
    \ max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n                n /= i;\n        \
    \    }\n        }\n        if (n > 1) max = n;\n        return max;", "      \
    \  if (n < 2) return n;\n        if (n == 2) return 2;\n        if (n % 2 == 0)\
    \ return 2;\n        long max = Math.Max(n, 2);\n        for (long i = 3; i <=\
    \ max; i += 2) {\n            if (n % i == 0) {\n                return i;\n \
    \           }\n        }\n        return n;", "        long prime = 2;\n     \
    \   while (n % prime != 0) {\n            prime++;\n        }\n        return\
    \ prime;", "        if (n == 2) return 2;\n        if (n == 3) return 3;\n   \
    \     if (n == 5) return 5;\n        if (n == 7) return 7;\n        if (n == 11)\
    \ return 11;\n        if (n == 13) return 13;\n        if (n == 17) return 17;\n\
    \        if (n == 19) return 19;\n        if (n == 23) return 23;\n        if\
    \ (n == 29) return 29;\n        if (n == 31) return 31;\n        if (n == 37)\
    \ return 37;\n        if (n == 41) return 41;\n        if (n == 43) return 43;\n\
    \        if (n == 47) return 47;\n        if (n == 53) return 53;\n        if\
    \ (n == 59) return 59;\n        if (n == 61) return 61;\n        if (n == 67)\
    \ return 67;\n        if (n == 71) return 71;\n        if (n == 73) return 73;\n\
    \        if (n == 79) return 79;\n        if (n == 83) return 83;\n        if\
    \ (n == 89) return 89;\n        if (n == 97) return 97;\n        if (n == 101)\
    \ return 101;\n        if (n == 103) return 103;\n        if (n == 107) return\
    \ 107;\n        if (n == 109) return 109;\n        if (n == 113) return 113;\n\
    \        if (n == 127) return 127;\n        if (n == 131) return 131;\n      \
    \  if (n == 137) return 137;\n        if (n == 139) return 139;\n        if (n\
    \ == 149) return 149;\n        if (n == 151) return 151;\n        if (n == 157)\
    \ return 157;\n        if (n == 163) return 163;\n        if (n == 167) return\
    \ 167;\n        if (n == 173) return 173;\n        if (n == 179) return 179;\n\
    \        if (n == 181) return 181;\n        if (n == 191) return 191;\n      \
    \  if (n == 193) return 193;\n        if (n == 197) return 197;\n        if (n\
    \ == 199) return 199;\n        if (n == 211", "        if (n == 2) return 2;\n\
    \        if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n        if\
    \ (n % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n) {\n\
    \            if (n % i == 0) return i;\n            i += 2;\n        }\n     \
    \   return n;", "        if (n == 1) return 1;\n        long max = n;\n      \
    \  for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n                n /= i;\n            }\n        }\n\
    \        if (n > 1) max = n;\n        return max;", "        long prime = 2;\n\
    \        while (n % prime != 0) {\n            prime++;\n        }\n        return\
    \ prime;", "        if (n == 1) return 1;\n        long max = n;\n        for\
    \ (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n    \
    \            max = Math.Min(max, i);\n                while (n % i == 0) n /=\
    \ i;\n            }\n        }\n        if (n > 1) max = Math.Min(max, n);\n \
    \       return max;", "        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n == 5) return 5;\n        if (n == 7) return 7;\n        if\
    \ (n == 11) return 11;\n        if (n == 13) return 13;\n        if (n == 17)\
    \ return 17;\n        if (n == 19) return 19;\n        if (n == 23) return 23;\n\
    \        if (n == 29) return 29;\n        if (n == 31) return 31;\n        if\
    \ (n == 37) return 37;\n        if (n == 41) return 41;\n        if (n == 43)\
    \ return 43;\n        if (n == 47) return 47;\n        if (n == 53) return 53;\n\
    \        if (n == 59) return 59;\n        if (n == 61) return 61;\n        if\
    \ (n == 67) return 67;\n        if (n == 71) return 71;\n        if (n == 73)\
    \ return 73;\n        if (n == 79) return 79;\n        if (n == 83) return 83;\n\
    \        if (n == 89) return 89;\n        if (n == 97) return 97;\n        if\
    \ (n == 101) return 101;\n        if (n == 103) return 103;\n        if (n ==\
    \ 107) return 107;\n        if (n == 109) return 109;\n        if (n == 113) return\
    \ 113;\n        if (n == 127) return 127;\n        if (n == 131) return 131;\n\
    \        if (n == 137) return 137;\n        if (n == 139) return 139;\n      \
    \  if (n == 149) return 149;\n        if (n == 151) return 151;\n        if (n\
    \ == 157) return 157;\n        if (n == 163) return 163;\n        if (n == 167)\
    \ return 167;\n        if (n == 173) return 173;\n        if (n == 179) return\
    \ 179;\n        if (n == 181) return 181;\n        if (n == 191) return 191;\n\
    \        if (n == 193) return 193;\n        if (n == 197) return 197;\n      \
    \  if (n == 199) return 199;\n        if (n == 211", "        if (n == 2) return\
    \ 2;\n        if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n     \
    \   if (n % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \            i += 2;\n        }\n        return n;", "        if (n < 2) return\
    \ n;\n        long p = 2;\n        while (n % p == 0) {\n            n /= p;\n\
    \            p = 2;\n        }\n        while (n > 1) {\n            p = 3;\n\
    \            while (n % p == 0) {\n                n /= p;\n                p\
    \ = 3;\n            }\n            p = 5;\n            while (n % p == 0) {\n\
    \                n /= p;\n                p = 5;\n            }\n            p\
    \ = 7;\n            while (n % p == 0) {\n                n /= p;\n          \
    \      p = 7;\n            }\n            p = 11;\n            while (n % p ==\
    \ 0) {\n                n /= p;\n                p = 11;\n            }\n    \
    \        p = 13;\n            while (n % p == 0) {\n                n /= p;\n\
    \                p = 13;\n            }\n            p = 17;\n            while\
    \ (n % p == 0) {\n                n /= p;\n                p = 17;\n         \
    \   }\n            p = 19;\n            while (n % p == 0) {\n               \
    \ n /= p;\n                p = 19;\n            }\n            p = 23;\n     \
    \       while (n % p == 0) {\n                n /= p;\n                p = 23;\n\
    \            }\n            p = 29;\n            while (n % p == 0) {\n      \
    \          n /= p;\n                p = 29;\n            }\n            p = 31;\n\
    \            while (n % p == 0) {\n                n /= p;\n                p\
    \ = 31;\n            }\n            p = 37;\n            while (n % p == 0) {\n\
    \                n /= p;\n                p = 37;\n            }\n           \
    \ p = 41;\n            while (n % p == 0) {\n                n /= p;\n       \
    \         p = 41;\n            }\n            p = 43;\n            while (n %\
    \ p == 0) {\n                n /= p;\n                p = 43;\n            }\n\
    \            p = 47;\n            while (n % p == 0) {\n                n /= p;\n\
    \                p = 47;", "        if (n == 1) return 1;\n        long max =\
    \ n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n %\
    \ i == 0) {\n                max = Math.Min(max, i);\n                while (n\
    \ % i == 0) n /= i;\n            }\n        }\n        if (n > 1) max = Math.Min(max,\
    \ n);\n        return max;", "        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 3;\n        if (n % 2 == 0) return 2;\n        if (n % 3 == 0) return\
    \ 3;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i\
    \ == 0) {\n                return i;\n            }\n            i += 2;\n   \
    \     }\n        return n;", "        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 3;\n        if (n == 5) return 5;\n        if (n == 7) return 7;\n\
    \        if (n == 11) return 11;\n        if (n == 13) return 13;\n        if\
    \ (n == 17) return 17;\n        if (n == 19) return 19;\n        if (n == 23)\
    \ return 23;\n        if (n == 29) return 29;\n        if (n == 31) return 31;\n\
    \        if (n == 37) return 37;\n        if (n == 41) return 41;\n        if\
    \ (n == 43) return 43;\n        if (n == 47) return 47;\n        if (n == 53)\
    \ return 53;\n        if (n == 59) return 59;\n        if (n == 61) return 61;\n\
    \        if (n == 67) return 67;\n        if (n == 71) return 71;\n        if\
    \ (n == 73) return 73;\n        if (n == 79) return 79;\n        if (n == 83)\
    \ return 83;\n        if (n == 89) return 89;\n        if (n == 97) return 97;\n\
    \        if (n == 101) return 101;\n        if (n == 103) return 103;\n      \
    \  if (n == 107) return 107;\n        if (n == 109) return 109;\n        if (n\
    \ == 113) return 113;\n        if (n == 127) return 127;\n        if (n == 131)\
    \ return 131;\n        if (n == 137) return 137;\n        if (n == 139) return\
    \ 139;\n        if (n == 149) return 149;\n        if (n == 151) return 151;\n\
    \        if (n == 157) return 157;\n        if (n == 163) return 163;\n      \
    \  if (n == 167) return 167;\n        if (n == 173) return 173;\n        if (n\
    \ == 179) return 179;\n        if (n == 181) return 181;\n        if (n == 191)\
    \ return 191;\n        if (n == 193) return 193;\n        if (n == 197) return\
    \ 197;\n        if (n == 199) return 199;\n        if (n == 211", "        if\
    \ (n == 1) return 1;\n        long max = Math.Max(n, 2);\n        for (long i\
    \ = 2; i < max; i++) {\n            if (n % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return n;", "        if (n == 1) return\
    \ 1;\n        long max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++)\
    \ {\n            if (n % i == 0) {\n                max = Math.Min(max, i);\n\
    \                while (n % i == 0) n /= i;\n            }\n        }\n      \
    \  if (n > 1) max = Math.Min(max, n);\n        return max;", "        if (n ==\
    \ 1) return 1;\n        long max = n;\n        for (long i = 2; i <= Math.Sqrt(n);\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) max = n;\n      \
    \  return max;", "        long prime = 2;\n        while (n > 1) {\n         \
    \   if (n % prime == 0) {\n                n /= prime;\n            }\n      \
    \      else {\n                prime = prime + 1;\n            }\n        }\n\
    \        return prime;", "        long i = 2;\n        while (i * i <= n) {\n\
    \            if (n % i == 0) {\n                n /= i;\n                i = 2;\n\
    \            }\n            else {\n                i++;\n            }\n    \
    \    }\n        return n;", "        if (n == 1) return 1;\n        long max =\
    \ n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n %\
    \ i == 0) {\n                max = Math.Min(max, i);\n                while (n\
    \ % i == 0) n /= i;\n            }\n        }\n        if (n > 1) max = Math.Min(max,\
    \ n);\n        return max;", "        long prime = 2;\n        while (n % prime\
    \ != 0) {\n            prime++;\n        }\n        return prime;", "        if\
    \ (n == 1) return 1;\n        long max = n;\n        for (long i = 2; i <= Math.Sqrt(n);\
    \ i++) {\n            if (n % i == 0) {\n                max = i;\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) max = n;\n      \
    \  return max;", "        // If n is prime, return it.\n        if (IsPrime(n))\n\
    \            return n;\n\n        // If n is not prime, return the largest prime\
    \ factor.\n        long prime = 2;\n        while (n % prime != 0) {\n       \
    \     prime++;\n        }\n        return prime;\n    }\n\n    // Return true\
    \ if n is prime.\n    // >>> IsPrime(2)\n    // True\n    // >>> IsPrime(3)\n\
    \    // True\n    // >>> IsPrime(4)\n    // False\n    // >>> IsPrime(5)\n   \
    \ // True\n    // >>> IsPrime(6)\n    // False\n    // >>> IsPrime(7)\n    //\
    \ True\n    // >>> IsPrime(8)\n    // False\n    // >>> IsPrime(9)\n    // False\n\
    \    // >>> IsPrime(10)\n    // False\n    // >>> IsPrime(11)\n    // True\n \
    \   // >>> IsPrime(12)\n    // False\n    // >>> IsPrime(13)\n    // True\n  \
    \  // >>> IsPrime(14)\n    // False\n    // >>> IsPrime(15)\n    // False\n  \
    \  // >>> IsPrime(16)\n    // False\n    // >>> IsPrime(17)\n    // True\n   \
    \ // >>> IsPrime(18)\n    // False\n    // >>> IsPrime(19)\n    // False\n   \
    \ // >>> IsPrime(20)\n    // False\n    // >>> IsPrime(21)\n    // False\n   \
    \ // >>> IsPrime(22)\n    // False\n    // >>> IsPrime(23)\n    // False\n   \
    \ // >>> IsPrime(24)\n    // False\n    // >>> IsPrime(25)\n    // False\n   \
    \ // >>> IsPrime(26)\n    // False\n    // >>> IsPrime(27)\n    // False\n   \
    \ // >>> IsPrime(28)\n    // False\n    // >>> IsPrime(29)\n    // False\n   \
    \ // >>> IsPrime(30)\n    // False\n    // >>> IsPrime(31)\n    // False\n   \
    \ // >>> IsPrime(32)\n    // False\n    // >>> IsPrime(33)\n    // False\n   \
    \ // >>> IsPrime(34)\n    // False\n", "        if (n == 1) return 1;\n      \
    \  long max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n       \
    \     if (n % i == 0) {\n                max = i;\n                n /= i;\n \
    \           }\n        }\n        if (n > 1) max = n;\n        return max;", " \
    \       long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n                i = 2;\n            }\n        \
    \    else {\n                i++;\n            }\n        }\n        return n;",
  "        if (n == 1) return 1;\n        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                while\
    \ (n % i == 0) {\n                    n /= i;\n                }\n           \
    \     return i;\n            }\n            i++;\n        }\n        return n;",
  "        if (n == 1) return 1;\n        long prime = 2;\n        while (n % prime\
    \ != 0) {\n            prime++;\n        }\n        return prime;", "        long\
    \ prime = 2;\n        while (n % prime != 0) {\n            prime++;\n       \
    \ }\n        return prime;", "        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                i\
    \ = 2;\n            }\n            else {\n                i++;\n            }\n\
    \        }\n        return n;", "        long i = 2;\n        while (i * i <=\
    \ n) {\n            if (n % i == 0) {\n                n /= i;\n             \
    \   i = 2;\n            }\n            else {\n                i++;\n        \
    \    }\n        }\n        return n;", "        if (n == 1) return 1;\n      \
    \  if (n == 2) return 2;\n        if (n % 2 == 0) return 2;\n        long max\
    \ = Math.Max(2, Math.Sqrt(n));\n        for (long i = 3; i <= max; i += 2) {\n\
    \            if (n % i == 0) {\n                return i;\n            }\n   \
    \     }\n        return n;", "        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                i\
    \ = 2;\n            }\n            else {\n                i++;\n            }\n\
    \        }\n        return n;", "        if (n == 1) return 1;\n        long prime\
    \ = 2;\n        while (n % prime != 0) {\n            prime++;\n        }\n  \
    \      return prime;", "        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n == 5) return 5;\n        if (n == 7) return 7;\n        if\
    \ (n == 11) return 11;\n        if (n == 13) return 13;\n        if (n == 17)\
    \ return 17;\n        if (n == 19) return 19;\n        if (n == 23) return 23;\n\
    \        if (n == 29) return 29;\n        if (n == 31) return 31;\n        if\
    \ (n == 37) return 37;\n        if (n == 41) return 41;\n        if (n == 43)\
    \ return 43;\n        if (n == 47) return 47;\n        if (n == 53) return 53;\n\
    \        if (n == 59) return 59;\n        if (n == 61) return 61;\n        if\
    \ (n == 67) return 67;\n        if (n == 71) return 71;\n        if (n == 73)\
    \ return 73;\n        if (n == 79) return 79;\n        if (n == 83) return 83;\n\
    \        if (n == 89) return 89;\n        if (n == 97) return 97;\n        if\
    \ (n == 101) return 101;\n        if (n == 103) return 103;\n        if (n ==\
    \ 107) return 107;\n        if (n == 109) return 109;\n        if (n == 113) return\
    \ 113;\n        if (n == 127) return 127;\n        if (n == 131) return 131;\n\
    \        if (n == 137) return 137;\n        if (n == 139) return 139;\n      \
    \  if (n == 149) return 149;\n        if (n == 151) return 151;\n        if (n\
    \ == 157) return 157;\n        if (n == 163) return 163;\n        if (n == 167)\
    \ return 167;\n        if (n == 173) return 173;\n        if (n == 179) return\
    \ 179;\n        if (n == 181) return 181;\n        if (n == 191) return 191;\n\
    \        if (n == 193) return 193;\n        if (n == 197) return 197;\n      \
    \  if (n == 199) return 199;\n        if (n == 211", "        if (n == 1) return\
    \ 1;\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i\
    \ == 0) {\n                n /= i;\n                while (n % i == 0) n /= i;\n\
    \                return i;\n            }\n            i++;\n        }\n     \
    \   return n;", "        if (n == 2) return 2;\n        if (n == 3) return 3;\n\
    \        if (n == 5) return 5;\n        if (n == 7) return 7;\n        if (n ==\
    \ 11) return 11;\n        if (n == 13) return 13;\n        if (n == 17) return\
    \ 17;\n        if (n == 19) return 19;\n        if (n == 23) return 23;\n    \
    \    if (n == 29) return 29;\n        if (n == 31) return 31;\n        if (n ==\
    \ 37) return 37;\n        if (n == 41) return 41;\n        if (n == 43) return\
    \ 43;\n        if (n == 47) return 47;\n        if (n == 53) return 53;\n    \
    \    if (n == 59) return 59;\n        if (n == 61) return 61;\n        if (n ==\
    \ 67) return 67;\n        if (n == 71) return 71;\n        if (n == 73) return\
    \ 73;\n        if (n == 79) return 79;\n        if (n == 83) return 83;\n    \
    \    if (n == 89) return 89;\n        if (n == 97) return 97;\n        if (n ==\
    \ 101) return 101;\n        if (n == 103) return 103;\n        if (n == 107) return\
    \ 107;\n        if (n == 109) return 109;\n        if (n == 113) return 113;\n\
    \        if (n == 127) return 127;\n        if (n == 131) return 131;\n      \
    \  if (n == 137) return 137;\n        if (n == 139) return 139;\n        if (n\
    \ == 149) return 149;\n        if (n == 151) return 151;\n        if (n == 157)\
    \ return 157;\n        if (n == 163) return 163;\n        if (n == 167) return\
    \ 167;\n        if (n == 173) return 173;\n        if (n == 179) return 179;\n\
    \        if (n == 181) return 181;\n        if (n == 191) return 191;\n      \
    \  if (n == 193) return 193;\n        if (n == 197) return 197;\n        if (n\
    \ == 199) return 199;\n        if (n == 211", "        if (n == 2) return 2;\n\
    \        if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n        if\
    \ (n % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n) {\n\
    \            if (n % i == 0) {\n                return i;\n            }\n   \
    \         i += 2;\n        }\n        return n;", "        if (n == 2) return\
    \ 2;\n        if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n     \
    \   if (n % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) return i;\n            i += 2;\n        }\n \
    \       return n;", "        if (n == 1) return 1;\n        long max = n;\n  \
    \      for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0)\
    \ {\n                max = Math.Min(max, i);\n                while (n % i ==\
    \ 0) n /= i;\n            }\n        }\n        if (n > 1) max = Math.Min(max,\
    \ n);\n        return max;", "        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 3;\n        if (n == 5) return 5;\n        if (n == 7) return 7;\n\
    \        if (n == 11) return 11;\n        if (n == 13) return 13;\n        if\
    \ (n == 17) return 17;\n        if (n == 19) return 19;\n        if (n == 23)\
    \ return 23;\n        if (n == 29) return 29;\n        if (n == 31) return 31;\n\
    \        if (n == 37) return 37;\n        if (n == 41) return 41;\n        if\
    \ (n == 43) return 43;\n        if (n == 47) return 47;\n        if (n == 53)\
    \ return 53;\n        if (n == 59) return 59;\n        if (n == 61) return 61;\n\
    \        if (n == 67) return 67;\n        if (n == 71) return 71;\n        if\
    \ (n == 73) return 73;\n        if (n == 79) return 79;\n        if (n == 83)\
    \ return 83;\n        if (n == 89) return 89;\n        if (n == 97) return 97;\n\
    \        if (n == 101) return 101;\n        if (n == 103) return 103;\n      \
    \  if (n == 107) return 107;\n        if (n == 109) return 109;\n        if (n\
    \ == 113) return 113;\n        if (n == 127) return 127;\n        if (n == 131)\
    \ return 131;\n        if (n == 137) return 137;\n        if (n == 139) return\
    \ 139;\n        if (n == 149) return 149;\n        if (n == 151) return 151;\n\
    \        if (n == 157) return 157;\n        if (n == 163) return 163;\n      \
    \  if (n == 167) return 167;\n        if (n == 173) return 173;\n        if (n\
    \ == 179) return 179;\n        if (n == 181) return 181;\n        if (n == 191)\
    \ return 191;\n        if (n == 193) return 193;\n        if (n == 197) return\
    \ 197;\n        if (n == 199) return 199;\n        if (n == 211", "        if\
    \ (n == 1) return 1;\n        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n == 4) return 2;\n        if (n == 5) return 5;\n        if\
    \ (n == 6) return 3;\n        if (n == 7) return 7;\n        if (n == 8) return\
    \ 2;\n        if (n == 9) return 9;\n        if (n == 10) return 5;\n        if\
    \ (n == 11) return 11;\n        if (n == 12) return 2;\n        if (n == 13) return\
    \ 13;\n        if (n == 14) return 7;\n        if (n == 15) return 3;\n      \
    \  if (n == 16) return 2;\n        if (n == 17) return 17;\n        if (n == 18)\
    \ return 2;\n        if (n == 19) return 19;\n        if (n == 20) return 2;\n\
    \        if (n == 21) return 3;\n        if (n == 22) return 2;\n        if (n\
    \ == 23) return 23;\n        if (n == 24) return 2;\n        if (n == 25) return\
    \ 5;\n        if (n == 26) return 2;\n        if (n == 27) return 3;\n       \
    \ if (n == 28) return 2;\n        if (n == 29) return 29;\n        if (n == 30)\
    \ return 2;\n        if (n == 31) return 31;\n        if (n == 32) return 2;\n\
    \        if (n == 33) return 5;\n        if (n == 34) return 2;\n        if (n\
    \ == 35) return 7;\n        if (n == 36) return 2;\n        if (n == 37) return\
    \ 2;\n        if (n == 38) return 2;\n        if (n == 39) return 3;\n       \
    \ if (n == 40) return 2;\n        if (n == 41) return 41;\n        if (n == 42)\
    \ return 2;\n        if (n == 43) return 3;\n        if (n == 44) return 2;\n\
    \        if (n == 45) return 3;\n        if (n == 46) return 2;\n        if (n\
    \ == 47", "        long i = 2;\n        while (i * i <= n) {\n            if (n\
    \ % i == 0) {\n                n /= i;\n                i = 2;\n            }\n\
    \            else {\n                i++;\n            }\n        }\n        return\
    \ n;", "        if (n == 1) return 1;\n        long max = n;\n        for (long\
    \ i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n          \
    \      max = i;\n                while (n % i == 0) n /= i;\n            }\n \
    \       }\n        if (n > 1) max = n;\n        return max;", "        long max\
    \ = n;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                max = i;\n                n /= i;\n            }\n        }\n\
    \        return max;", "        if (n == 1) return 1;\n        long p = 2;\n \
    \       while (p * p <= n) {\n            if (n % p == 0) {\n                n\
    \ /= p;\n                p = 2;\n            }\n            else {\n         \
    \       p++;\n            }\n        }\n        return n;", "        if (n ==\
    \ 2) return 2;\n        if (n == 3) return 3;\n        if (n % 2 == 0) return\
    \ 2;\n        if (n % 3 == 0) return 3;\n        long i = 5;\n        while (i\
    \ * i <= n) {\n            if (n % i == 0) return i;\n            i += 2;\n  \
    \      }\n        return n;", "        long prime = 2;\n        while (n % prime\
    \ != 0) {\n            prime++;\n        }\n        return prime;", "        long\
    \ prime = 2;\n        while (n > 1) {\n            if (n % prime == 0) {\n   \
    \             n /= prime;\n            }\n            else {\n               \
    \ prime = prime + 1;\n            }\n        }\n        return prime;", "    \
    \    long prime = 2;\n        while (n % prime != 0) {\n            prime++;\n\
    \        }\n        return prime;", "        long prime = 2;\n        while (n\
    \ > 1) {\n            if (n % prime == 0) {\n                n /= prime;\n   \
    \         }\n            else {\n                prime = prime + 1;\n        \
    \    }\n        }\n        return prime;", "        long prime = 2;\n        while\
    \ (n % prime != 0) {\n            prime++;\n        }\n        return prime;",
  "        if (n == 1) return 1;\n        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                i\
    \ = 2;\n            }\n            else i++;\n        }\n        return n;", " \
    \       long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n                i = 2;\n            }\n        \
    \    else {\n                i++;\n            }\n        }\n        return n;",
  "        if (n == 1) return 1;\n        long largestFactor = 2;\n        for (long\
    \ i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i == 0) {\n       \
    \         largestFactor = i;\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) largestFactor = n;\n        return largestFactor;", " \
    \       if (n < 2) return n;\n        if (n == 2) return 2;\n        if (n % 2\
    \ == 0) return 2;\n        long i = 3;\n        while (i * i <= n) {\n       \
    \     if (n % i == 0) {\n                return i;\n            }\n          \
    \  i += 2;\n        }\n        return n;", "        // Check if n is prime\n \
    \       if (n < 2) return n;\n        if (n % 2 == 0) return 2;\n        if (n\
    \ % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n) {\n   \
    \         if (n % i == 0) {\n                return i;\n            }\n      \
    \      i += 2;\n        }\n        return n;", "        long i = 2;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n   \
    \             i = 2;\n            }\n            else {\n                i++;\n\
    \            }\n        }\n        return n;", "        long prime = 2;\n    \
    \    while (n > 1) {\n            if (n % prime == 0) {\n                n /=\
    \ prime;\n            }\n            else {\n                prime = prime + 1;\n\
    \            }\n        }\n        return prime;", "        if (n == 1) return\
    \ 1;\n        long max = Math.Max(n, 2);\n        for (long i = max; i >= 2; i--)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                while\
    \ (n % i == 0) n /= i;\n                return i;\n            }\n        }\n\
    \        return n;", "        if (n == 1) return 1;\n        long max = Math.Max(n,\
    \ 2);\n        for (long i = 2; i < max; i++) {\n            if (n % i == 0) {\n\
    \                return i;\n            }\n        }\n        return n;", "  \
    \      if (n == 1) return 1;\n        long p = 2;\n        while (p * p <= n)\
    \ {\n            if (n % p == 0) {\n                n /= p;\n                p\
    \ = 2;\n            }\n            else {\n                p = p + 1;\n      \
    \      }\n        }\n        return n;", "        // Check if n is prime\n   \
    \     if (n < 2) return n;\n        // Check if n is a prime\n        if (n %\
    \ 2 == 0) return 2;\n        // Check if n is a prime\n        if (n % 3 == 0)\
    \ return 3;\n        // Check if n is a prime\n        if (n % 5 == 0) return\
    \ 5;\n        // Check if n is a prime\n        if (n % 7 == 0) return 7;\n  \
    \      // Check if n is a prime\n        if (n % 11 == 0) return 11;\n       \
    \ // Check if n is a prime\n        if (n % 13 == 0) return 13;\n        // Check\
    \ if n is a prime\n        if (n % 17 == 0) return 17;\n        // Check if n\
    \ is a prime\n        if (n % 19 == 0) return 19;\n        // Check if n is a\
    \ prime\n        if (n % 23 == 0) return 23;\n        // Check if n is a prime\n\
    \        if (n % 29 == 0) return 29;\n        // Check if n is a prime\n     \
    \   if (n % 31 == 0) return 31;\n        // Check if n is a prime\n        if\
    \ (n % 37 == 0) return 37;\n        // Check if n is a prime\n        if (n %\
    \ 41 == 0) return 41;\n        // Check if n is a prime\n        if (n % 43 ==\
    \ 0) return 43;\n        // Check if n is a prime\n        if (n % 47 == 0) return\
    \ 47;\n        // Check if n is a prime\n        if (n % 53 == 0) return 53;\n\
    \        // Check if n is a prime\n        if (n % 59 == 0) return 59;\n     \
    \   // Check if n is a prime\n        if (n % 61 == 0) return 61;\n        //\
    \ Check if n is a prime\n        if (n % 67 == 0) return 67;\n        // Check\
    \ if n is a prime\n        if (n % 71 == 0) return 71;\n        // Check if n\
    \ is a prime\n        if (n % 73 == 0) return 73;\n        // Check if n is a\
    \ prime\n        if (n % 79 == 0) return 79;\n        // Check if n is a prime\n",
  "        if (n == 1) return 1;\n        long p = 2;\n        while (p * p <= n)\
    \ {\n            if (n % p == 0) {\n                n /= p;\n                p\
    \ = 2;\n            }\n            else {\n                p++;\n            }\n\
    \        }\n        return n;", "        if (n == 1) return 1;\n        if (n\
    \ == 2) return 2;\n        if (n == 3) return 3;\n        if (n == 4) return 2;\n\
    \        if (n == 5) return 5;\n        if (n == 6) return 2;\n        if (n ==\
    \ 7) return 7;\n        if (n == 8) return 2;\n        if (n == 9) return 9;\n\
    \        if (n == 10) return 2;\n        if (n == 11) return 11;\n        if (n\
    \ == 12) return 2;\n        if (n == 13) return 13;\n        if (n == 14) return\
    \ 2;\n        if (n == 15) return 3;\n        if (n == 16) return 2;\n       \
    \ if (n == 17) return 17;\n        if (n == 18) return 2;\n        if (n == 19)\
    \ return 19;\n        if (n == 20) return 2;\n        if (n == 21) return 3;\n\
    \        if (n == 22) return 2;\n        if (n == 23) return 23;\n        if (n\
    \ == 24) return 2;\n        if (n == 25) return 5;\n        if (n == 26) return\
    \ 2;\n        if (n == 27) return 3;\n        if (n == 28) return 2;\n       \
    \ if (n == 29) return 29;\n        if (n == 30) return 2;\n        if (n == 31)\
    \ return 31;\n        if (n == 32) return 2;\n        if (n == 33) return 3;\n\
    \        if (n == 34) return 2;\n        if (n == 35) return 5;\n        if (n\
    \ == 36) return 2;\n        if (n == 37) return 37;\n        if (n == 38) return\
    \ 2;\n        if (n == 39) return 3;\n        if (n == 40) return 2;\n       \
    \ if (n == 41) return 41;\n        if (n == 42) return 2;\n        if (n == 43)\
    \ return 43;\n        if (n == 44) return 2;\n        if (n == 45) return 3;\n\
    \        if (n == 46) return 2;\n        if (n == 47", "        if (n == 1) return\
    \ 1;\n        long max = Math.Max(n, 2);\n        for (long i = max; i >= 2; i--)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \        }\n        return n;", "        if (n < 2) return n;\n        long p\
    \ = 2;\n        while (p * p <= n) {\n            if (n % p == 0) {\n        \
    \        n /= p;\n                p = 2;\n            }\n            else p++;\n\
    \        }\n        return n;", "        long i = 2;\n        while (i * i <=\
    \ n) {\n            if (n % i == 0) {\n                n /= i;\n             \
    \   i = 2;\n            }\n            else {\n                i++;\n        \
    \    }\n        }\n        return n;", "        long i = 2;\n        while (i\
    \ * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n      \
    \          i = 2;\n            }\n            else {\n                i++;\n \
    \           }\n        }\n        return n;", "        long i = 2;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n   \
    \             i = 2;\n            }\n            else {\n                i++;\n\
    \            }\n        }\n        return n;", "        if (n == 1) return 1;\n\
    \        long i = 2;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                n /= i;\n                while (n % i == 0) {\n         \
    \           n /= i;\n                }\n                return i;\n          \
    \  }\n            i++;\n        }\n        return n;", "        if (n == 1) return\
    \ 1;\n        long max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++)\
    \ {\n            if (n % i == 0) {\n                max = i;\n               \
    \ n /= i;\n            }\n        }\n        return max;", "        long prime\
    \ = 2;\n        while (n % prime != 0) {\n            prime++;\n        }\n  \
    \      return prime;", "        if (n == 1) return 1;\n        long largest =\
    \ n;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0)\
    \ {\n                largest = Math.min(largest, i);\n                n /= i;\n\
    \            }\n        }\n        return largest;", "        if (n == 2) return\
    \ 2;\n        if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n     \
    \   if (n % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                return i;\n            }\n\
    \            i += 2;\n        }\n        return n;", "        if (n == 1) return\
    \ 1;\n        long prime = 2;\n        while (n % prime != 0) {\n            prime++;\n\
    \        }\n        return prime;", "        if (n < 2) return 1;\n        if\
    \ (n == 2) return 2;\n        if (n % 2 == 0) return 2;\n        long max = (long)Math.sqrt(n);\n\
    \        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) {\n\
    \                return i;\n            }\n        }\n        return n;", "  \
    \      if (n == 1) return 1;\n        long max = n;\n        for (long i = 2;\
    \ i <= n / i; i++) {\n            if (n % i == 0) {\n                max = Math.Min(max,\
    \ i);\n                n /= i;\n            }\n        }\n        return max;",
  "        if (n == 1) return 1;\n        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                i\
    \ = 2;\n            }\n            else {\n                i++;\n            }\n\
    \        }\n        return n;", "        if (n == 2) return 2;\n        if (n\
    \ == 3) return 3;\n        if (n % 2 == 0) return 2;\n        if (n % 3 == 0)\
    \ return 3;\n        long i = 5;\n        while (i * i <= n) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n            i += 2;\n\
    \        }\n        return n;", "        long i = 2;\n        while (i * i <=\
    \ n) {\n            if (n % i == 0) {\n                n /= i;\n             \
    \   i = 2;\n            }\n            else {\n                i++;\n        \
    \    }\n        }\n        return n;", "        long prime = 2;\n        while\
    \ (n % prime != 0) {\n            prime++;\n        }\n        return prime;",
  "        if (n == 1) return 1;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 3;\n        if (n == 4) return 2;\n        if (n == 5) return 5;\n\
    \        if (n == 6) return 3;\n        if (n == 7) return 7;\n        if (n ==\
    \ 8) return 2;\n        if (n == 9) return 9;\n        if (n == 10) return 5;\n\
    \        if (n == 11) return 11;\n        if (n == 12) return 2;\n        if (n\
    \ == 13) return 13;\n        if (n == 14) return 7;\n        if (n == 15) return\
    \ 3;\n        if (n == 16) return 2;\n        if (n == 17) return 17;\n      \
    \  if (n == 18) return 2;\n        if (n == 19) return 19;\n        if (n == 20)\
    \ return 2;\n        if (n == 21) return 3;\n        if (n == 22) return 2;\n\
    \        if (n == 23) return 23;\n        if (n == 24) return 2;\n        if (n\
    \ == 25) return 5;\n        if (n == 26) return 2;\n        if (n == 27) return\
    \ 27;\n        if (n == 28) return 2;\n        if (n == 29) return 29;\n     \
    \   if (n == 30) return 2;\n        if (n == 31) return 31;\n        if (n ==\
    \ 32) return 2;\n        if (n == 33) return 2;\n        if (n == 34) return 2;\n\
    \        if (n == 35) return 5;\n        if (n == 36) return 2;\n        if (n\
    \ == 37) return 37;\n        if (n == 38) return 2;\n        if (n == 39) return\
    \ 39;\n        if (n == 40) return 2;\n        if (n == 41) return 41;\n     \
    \   if (n == 42) return 2;\n        if (n == 43) return 43;\n        if (n ==\
    \ 44) return 2;\n        if (n == 45) return 3;\n        if (n == 46) return 2;\n\
    \        if (n == 47", "        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n == 5) return 5;\n        if (n == 7) return 7;\n        if\
    \ (n == 11) return 11;\n        if (n == 13) return 13;\n        if (n == 17)\
    \ return 17;\n        if (n == 19) return 19;\n        if (n == 23) return 23;\n\
    \        if (n == 29) return 29;\n        if (n == 31) return 31;\n        if\
    \ (n == 37) return 37;\n        if (n == 41) return 41;\n        if (n == 43)\
    \ return 43;\n        if (n == 47) return 47;\n        if (n == 53) return 53;\n\
    \        if (n == 59) return 59;\n        if (n == 61) return 61;\n        if\
    \ (n == 67) return 67;\n        if (n == 71) return 71;\n        if (n == 73)\
    \ return 73;\n        if (n == 79) return 79;\n        if (n == 83) return 83;\n\
    \        if (n == 89) return 89;\n        if (n == 97) return 97;\n        if\
    \ (n == 101) return 101;\n        if (n == 103) return 103;\n        if (n ==\
    \ 107) return 107;\n        if (n == 109) return 109;\n        if (n == 113) return\
    \ 113;\n        if (n == 127) return 127;\n        if (n == 131) return 131;\n\
    \        if (n == 137) return 137;\n        if (n == 139) return 139;\n      \
    \  if (n == 149) return 149;\n        if (n == 151) return 151;\n        if (n\
    \ == 157) return 157;\n        if (n == 163) return 163;\n        if (n == 167)\
    \ return 167;\n        if (n == 173) return 173;\n        if (n == 179) return\
    \ 179;\n        if (n == 181) return 181;\n        if (n == 191) return 191;\n\
    \        if (n == 193) return 193;\n        if (n == 197) return 197;\n      \
    \  if (n == 199) return 199;\n        if (n == 211", "        if (n == 2) return\
    \ 2;\n        if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n     \
    \   if (n % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) return i;\n            i += 2;\n        }\n \
    \       return n;", "        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n == 5) return 5;\n        if (n == 7) return 7;\n        if\
    \ (n == 11) return 11;\n        if (n == 13) return 13;\n        if (n == 17)\
    \ return 17;\n        if (n == 19) return 19;\n        if (n == 23) return 23;\n\
    \        if (n == 29) return 29;\n        if (n == 31) return 31;\n        if\
    \ (n == 37) return 37;\n        if (n == 41) return 41;\n        if (n == 43)\
    \ return 43;\n        if (n == 47) return 47;\n        if (n == 53) return 53;\n\
    \        if (n == 59) return 59;\n        if (n == 61) return 61;\n        if\
    \ (n == 67) return 67;\n        if (n == 71) return 71;\n        if (n == 73)\
    \ return 73;\n        if (n == 79) return 79;\n        if (n == 83) return 83;\n\
    \        if (n == 89) return 89;\n        if (n == 97) return 97;\n        if\
    \ (n == 101) return 101;\n        if (n == 103) return 103;\n        if (n ==\
    \ 107) return 107;\n        if (n == 109) return 109;\n        if (n == 113) return\
    \ 113;\n        if (n == 127) return 127;\n        if (n == 131) return 131;\n\
    \        if (n == 137) return 137;\n        if (n == 139) return 139;\n      \
    \  if (n == 149) return 149;\n        if (n == 151) return 151;\n        if (n\
    \ == 157) return 157;\n        if (n == 163) return 163;\n        if (n == 167)\
    \ return 167;\n        if (n == 173) return 173;\n        if (n == 179) return\
    \ 179;\n        if (n == 181) return 181;\n        if (n == 191) return 191;\n\
    \        if (n == 193) return 193;\n        if (n == 197) return 197;\n      \
    \  if (n == 199) return 199;\n        if (n == 211", "        if (n == 1) return\
    \ 1;\n        long max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++)\
    \ {\n            if (n % i == 0) {\n                max = i;\n               \
    \ while (n % i == 0) n /= i;\n            }\n        }\n        if (n > 1) max\
    \ = n;\n        return max;", "        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 3;\n        if (n % 2 == 0) return 2;\n        if (n % 3 == 0) return\
    \ 3;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i\
    \ == 0) return i;\n            i += 2;\n        }\n        return n;", "     \
    \   if (n == 1) return 1;\n        long prime = 2;\n        while (n % prime !=\
    \ 0) {\n            prime++;\n        }\n        return prime;", "        if (n\
    \ == 2) return 2;\n        if (n == 3) return 3;\n        if (n == 5) return 5;\n\
    \        if (n == 7) return 7;\n        if (n == 11) return 11;\n        if (n\
    \ == 13) return 13;\n        if (n == 17) return 17;\n        if (n == 19) return\
    \ 19;\n        if (n == 23) return 23;\n        if (n == 29) return 29;\n    \
    \    if (n == 31) return 31;\n        if (n == 37) return 37;\n        if (n ==\
    \ 41) return 41;\n        if (n == 43) return 43;\n        if (n == 47) return\
    \ 47;\n        if (n == 53) return 53;\n        if (n == 59) return 59;\n    \
    \    if (n == 61) return 61;\n        if (n == 67) return 67;\n        if (n ==\
    \ 71) return 71;\n        if (n == 73) return 73;\n        if (n == 79) return\
    \ 79;\n        if (n == 83) return 83;\n        if (n == 89) return 89;\n    \
    \    if (n == 97) return 97;\n        if (n == 101) return 101;\n        if (n\
    \ == 103) return 103;\n        if (n == 107) return 107;\n        if (n == 109)\
    \ return 109;\n        if (n == 113) return 113;\n        if (n == 127) return\
    \ 127;\n        if (n == 131) return 131;\n        if (n == 137) return 137;\n\
    \        if (n == 139) return 139;\n        if (n == 149) return 149;\n      \
    \  if (n == 151) return 151;\n        if (n == 157) return 157;\n        if (n\
    \ == 163) return 163;\n        if (n == 167) return 167;\n        if (n == 173)\
    \ return 173;\n        if (n == 179) return 179;\n        if (n == 181) return\
    \ 181;\n        if (n == 191) return 191;\n        if (n == 193) return 193;\n\
    \        if (n == 197) return 197;\n        if (n == 199) return 199;\n      \
    \  if (n == 211", "        if (n == 2) return 2;\n        if (n == 3) return 3;\n\
    \        if (n == 5) return 5;\n        if (n == 7) return 7;\n        if (n ==\
    \ 11) return 11;\n        if (n == 13) return 13;\n        if (n == 17) return\
    \ 17;\n        if (n == 19) return 19;\n        if (n == 23) return 23;\n    \
    \    if (n == 29) return 29;\n        if (n == 31) return 31;\n        if (n ==\
    \ 37) return 37;\n        if (n == 41) return 41;\n        if (n == 43) return\
    \ 43;\n        if (n == 47) return 47;\n        if (n == 53) return 53;\n    \
    \    if (n == 59) return 59;\n        if (n == 61) return 61;\n        if (n ==\
    \ 67) return 67;\n        if (n == 71) return 71;\n        if (n == 73) return\
    \ 73;\n        if (n == 79) return 79;\n        if (n == 83) return 83;\n    \
    \    if (n == 89) return 89;\n        if (n == 97) return 97;\n        if (n ==\
    \ 101) return 101;\n        if (n == 103) return 103;\n        if (n == 107) return\
    \ 107;\n        if (n == 109) return 109;\n        if (n == 113) return 113;\n\
    \        if (n == 127) return 127;\n        if (n == 131) return 131;\n      \
    \  if (n == 137) return 137;\n        if (n == 139) return 139;\n        if (n\
    \ == 149) return 149;\n        if (n == 151) return 151;\n        if (n == 157)\
    \ return 157;\n        if (n == 163) return 163;\n        if (n == 167) return\
    \ 167;\n        if (n == 173) return 173;\n        if (n == 179) return 179;\n\
    \        if (n == 181) return 181;\n        if (n == 191) return 191;\n      \
    \  if (n == 193) return 193;\n        if (n == 197) return 197;\n        if (n\
    \ == 199) return 199;\n        if (n == 211", "        if (n == 2) return 2;\n\
    \        if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n        if\
    \ (n % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n) {\n\
    \            if (n % i == 0) {\n                return i;\n            }\n   \
    \         i += 2;\n        }\n        return n;", "        if (n == 1) return\
    \ 1;\n        long max = n;\n        for (long i = 2; i < n; i++) {\n        \
    \    if (n % i == 0) {\n                max = Math.Min(max, i);\n            \
    \    n /= i;\n            }\n        }\n        return max;", "        if (n ==\
    \ 1) return 1;\n        long p = 2;\n        while (n % p == 0) {\n          \
    \  n /= p;\n            p = 2;\n        }\n        while (n > 1) {\n         \
    \   p = 3;\n            while (n % p == 0) {\n                n /= p;\n      \
    \          p = 3;\n            }\n            p = 5;\n            while (n % p\
    \ == 0) {\n                n /= p;\n                p = 5;\n            }\n  \
    \          p = 7;\n            while (n % p == 0) {\n                n /= p;\n\
    \                p = 7;\n            }\n            p = 11;\n            while\
    \ (n % p == 0) {\n                n /= p;\n                p = 11;\n         \
    \   }\n            p = 13;\n            while (n % p == 0) {\n               \
    \ n /= p;\n                p = 13;\n            }\n            p = 17;\n     \
    \       while (n % p == 0) {\n                n /= p;\n                p = 17;\n\
    \            }\n            p = 19;\n            while (n % p == 0) {\n      \
    \          n /= p;\n                p = 19;\n            }\n            p = 23;\n\
    \            while (n % p == 0) {\n                n /= p;\n                p\
    \ = 23;\n            }\n            p = 29;\n            while (n % p == 0) {\n\
    \                n /= p;\n                p = 29;\n            }\n        }\n\
    \        return n;", "        if (n == 1) return 1;\n        long i = 2;\n   \
    \     while (i * i <= n) {\n            if (n % i == 0) {\n                n /=\
    \ i;\n                while (n % i == 0) n /= i;\n                return i;\n\
    \            }\n            i++;\n        }\n        return n;", "        if (n\
    \ == 1) return 1;\n        long prime = 2;\n        while (n % prime != 0) {\n\
    \            prime++;\n            if (prime >= n) return n;\n        }\n    \
    \    return prime;", "        if (n == 1) return 1;\n        long maxFactor =\
    \ n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n %\
    \ i == 0) {\n                maxFactor = i;\n                n /= i;\n       \
    \     }\n        }\n        if (n > 1) maxFactor = n;\n        return maxFactor;",
  "        if (n == 1) return 1;\n        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                while\
    \ (n % i == 0) n /= i;\n                return i;\n            }\n           \
    \ i++;\n        }\n        return n;", "        if (n < 2) return 1;\n       \
    \ if (n == 2) return 2;\n        if (n % 2 == 0) return 2;\n        long i = 3;\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ return i;\n            }\n            i += 2;\n        }\n        return n;",
  "        if (n == 1) return 1;\n        long max = n;\n        for (long i = 2;\
    \ i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n                max\
    \ = Math.Min(max, i);\n                n /= i;\n            }\n        }\n   \
    \     return max;", "        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n == 5) return 5;\n        if (n == 7) return 7;\n        if\
    \ (n == 11) return 11;\n        if (n == 13) return 13;\n        if (n == 17)\
    \ return 17;\n        if (n == 19) return 19;\n        if (n == 23) return 23;\n\
    \        if (n == 29) return 29;\n        if (n == 31) return 31;\n        if\
    \ (n == 37) return 37;\n        if (n == 41) return 41;\n        if (n == 43)\
    \ return 43;\n        if (n == 47) return 47;\n        if (n == 53) return 53;\n\
    \        if (n == 59) return 59;\n        if (n == 61) return 61;\n        if\
    \ (n == 67) return 67;\n        if (n == 71) return 71;\n        if (n == 73)\
    \ return 73;\n        if (n == 79) return 79;\n        if (n == 83) return 83;\n\
    \        if (n == 89) return 89;\n        if (n == 97) return 97;\n        if\
    \ (n == 101) return 101;\n        if (n == 103) return 103;\n        if (n ==\
    \ 107) return 107;\n        if (n == 109) return 109;\n        if (n == 113) return\
    \ 113;\n        if (n == 127) return 127;\n        if (n == 131) return 131;\n\
    \        if (n == 137) return 137;\n        if (n == 139) return 139;\n      \
    \  if (n == 149) return 149;\n        if (n == 151) return 151;\n        if (n\
    \ == 157) return 157;\n        if (n == 163) return 163;\n        if (n == 167)\
    \ return 167;\n        if (n == 173) return 173;\n        if (n == 179) return\
    \ 179;\n        if (n == 181) return 181;\n        if (n == 191) return 191;\n\
    \        if (n == 193) return 193;\n        if (n == 197) return 197;\n      \
    \  if (n == 199) return 199;\n        if (n == 211", "        if (n == 2 || n\
    \ == 3) return n;\n        long i = 5;\n        while (i * i <= n) {\n       \
    \     if (n % i == 0) {\n                n /= i;\n                while (n % i\
    \ == 0) {\n                    n /= i;\n                }\n                return\
    \ i;\n            }\n            i += 2;\n        }\n        return n;", "   \
    \     if (n == 1) return 1;\n        long max = Math.Max(n, 2);\n        for (long\
    \ i = max; i >= 2; i--) {\n            if (n % i == 0) {\n                n /=\
    \ i;\n                while (n % i == 0) n /= i;\n                return i;\n\
    \            }\n        }\n        return n;", "        if (n == 2) return 2;\n\
    \        if (n == 3) return 3;\n        if (n == 5) return 5;\n        if (n ==\
    \ 7) return 7;\n        if (n == 11) return 11;\n        if (n == 13) return 13;\n\
    \        if (n == 17) return 17;\n        if (n == 19) return 19;\n        if\
    \ (n == 23) return 23;\n        if (n == 29) return 29;\n        if (n == 31)\
    \ return 31;\n        if (n == 37) return 37;\n        if (n == 41) return 41;\n\
    \        if (n == 43) return 43;\n        if (n == 47) return 47;\n        if\
    \ (n == 53) return 53;\n        if (n == 59) return 59;\n        if (n == 61)\
    \ return 61;\n        if (n == 67) return 67;\n        if (n == 71) return 71;\n\
    \        if (n == 73) return 73;\n        if (n == 79) return 79;\n        if\
    \ (n == 83) return 83;\n        if (n == 89) return 89;\n        if (n == 97)\
    \ return 97;\n        if (n == 101) return 101;\n        if (n == 103) return\
    \ 103;\n        if (n == 107) return 107;\n        if (n == 109) return 109;\n\
    \        if (n == 113) return 113;\n        if (n == 127) return 127;\n      \
    \  if (n == 131) return 131;\n        if (n == 137) return 137;\n        if (n\
    \ == 139) return 139;\n        if (n == 149) return 149;\n        if (n == 151)\
    \ return 151;\n        if (n == 157) return 157;\n        if (n == 163) return\
    \ 163;\n        if (n == 167) return 167;\n        if (n == 173) return 173;\n\
    \        if (n == 179) return 179;\n        if (n == 181) return 181;\n      \
    \  if (n == 191) return 191;\n        if (n == 193) return 193;\n        if (n\
    \ == 197) return 197;\n        if (n == 199) return 199;\n        if (n == 211",
  "        if (n < 2) return n;\n        long largestFactor = 2;\n        for (long\
    \ i = 3; i <= Math.Sqrt(n); i += 2) {\n            if (n % i == 0) {\n       \
    \         largestFactor = i;\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) largestFactor = n;\n        return largestFactor;", " \
    \       long max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n  \
    \          if (n % i == 0) {\n                max = Math.Min(max, i);\n      \
    \          n /= i;\n            }\n        }\n        return max;", "        long\
    \ prime = 2;\n        while (n % prime == 0) {\n            n /= prime;\n    \
    \        prime = 2;\n        }\n        while (n > 1) {\n            long prime\
    \ = 3;\n            while (n % prime == 0) {\n                n /= prime;\n  \
    \              prime = 3;\n            }\n            prime = 5;\n           \
    \ while (n % prime == 0) {\n                n /= prime;\n                prime\
    \ = 5;\n            }\n            prime = 7;\n            while (n % prime ==\
    \ 0) {\n                n /= prime;\n                prime = 7;\n            }\n\
    \            prime = 11;\n            while (n % prime == 0) {\n             \
    \   n /= prime;\n                prime = 11;\n            }\n            prime\
    \ = 13;\n            while (n % prime == 0) {\n                n /= prime;\n \
    \               prime = 13;\n            }\n            prime = 17;\n        \
    \    while (n % prime == 0) {\n                n /= prime;\n                prime\
    \ = 17;\n            }\n            prime = 19;\n            while (n % prime\
    \ == 0) {\n                n /= prime;\n                prime = 19;\n        \
    \    }\n            prime = 23;\n            while (n % prime == 0) {\n      \
    \          n /= prime;\n                prime = 23;\n            }\n         \
    \   prime = 29;\n            while (n % prime == 0) {\n                n /= prime;\n\
    \                prime = 29;\n            }\n            prime = 31;\n       \
    \     while (n % prime == 0) {\n                n /= prime;\n                prime\
    \ = 31;\n            }\n            prime = 37;\n            while (n % prime\
    \ == 0) {\n                n /= prime;\n                prime = 37;\n        \
    \    }\n            prime = 41;\n            while (n % prime == 0) {\n      \
    \          n /= prime;\n                prime = 41;\n            }\n         \
    \   prime = 43;\n            while (n % prime == 0) {\n                n /= prime;\n\
    \                prime = 43;\n            }\n            prime = 47;\n       \
    \     while (n % prime == 0) {\n                n /= prime;\n                prime\
    \ = 47;\n            }\n            prime = 53;\n", "        if (n == 1) return\
    \ 1;\n        long p = 2;\n        while (n % p == 0) {\n            n /= p;\n\
    \            p = 2;\n        }\n        while (n % p == 0) {\n            n /=\
    \ p;\n            p = p + 1;\n        }\n        return n;", "        if (n ==\
    \ 2) return 2;\n        if (n == 3) return 3;\n        if (n == 5) return 5;\n\
    \        if (n == 7) return 7;\n        if (n == 11) return 11;\n        if (n\
    \ == 13) return 13;\n        if (n == 17) return 17;\n        if (n == 19) return\
    \ 19;\n        if (n == 23) return 23;\n        if (n == 29) return 29;\n    \
    \    if (n == 31) return 31;\n        if (n == 37) return 37;\n        if (n ==\
    \ 41) return 41;\n        if (n == 43) return 43;\n        if (n == 47) return\
    \ 47;\n        if (n == 53) return 53;\n        if (n == 59) return 59;\n    \
    \    if (n == 61) return 61;\n        if (n == 67) return 67;\n        if (n ==\
    \ 71) return 71;\n        if (n == 73) return 73;\n        if (n == 79) return\
    \ 79;\n        if (n == 83) return 83;\n        if (n == 89) return 89;\n    \
    \    if (n == 97) return 97;\n        if (n == 101) return 101;\n        if (n\
    \ == 103) return 103;\n        if (n == 107) return 107;\n        if (n == 109)\
    \ return 109;\n        if (n == 113) return 113;\n        if (n == 127) return\
    \ 127;\n        if (n == 131) return 131;\n        if (n == 137) return 137;\n\
    \        if (n == 139) return 139;\n        if (n == 149) return 149;\n      \
    \  if (n == 151) return 151;\n        if (n == 157) return 157;\n        if (n\
    \ == 163) return 163;\n        if (n == 167) return 167;\n        if (n == 173)\
    \ return 173;\n        if (n == 179) return 179;\n        if (n == 181) return\
    \ 181;\n        if (n == 191) return 191;\n        if (n == 193) return 193;\n\
    \        if (n == 197) return 197;\n        if (n == 199) return 199;\n      \
    \  if (n == 211", "        if (n == 1) return 1;\n        long i = 2;\n      \
    \  while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n\
    \                while (n % i == 0) n /= i;\n                return i;\n     \
    \       }\n            i++;\n        }\n        return n;", "        long i =\
    \ 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n          \
    \      n /= i;\n                i = 2;\n            }\n            else {\n  \
    \              i++;\n            }\n        }\n        return n;", "        long\
    \ prime = 2;\n        while (n % prime != 0) {\n            prime++;\n       \
    \ }\n        return prime;", "        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 3;\n        if (n % 2 == 0) return 2;\n        if (n % 3 == 0) return\
    \ 3;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i\
    \ == 0) return i;\n            i += 2;\n        }\n        return n;", "     \
    \   if (n == 2) return 2;\n        if (n == 3) return 3;\n        if (n == 5)\
    \ return 5;\n        if (n == 7) return 7;\n        if (n == 11) return 11;\n\
    \        if (n == 13) return 13;\n        if (n == 17) return 17;\n        if\
    \ (n == 19) return 19;\n        if (n == 23) return 23;\n        if (n == 29)\
    \ return 29;\n        if (n == 31) return 31;\n        if (n == 37) return 37;\n\
    \        if (n == 41) return 41;\n        if (n == 43) return 43;\n        if\
    \ (n == 47) return 47;\n        if (n == 53) return 53;\n        if (n == 59)\
    \ return 59;\n        if (n == 61) return 61;\n        if (n == 67) return 67;\n\
    \        if (n == 71) return 71;\n        if (n == 73) return 73;\n        if\
    \ (n == 79) return 79;\n        if (n == 83) return 83;\n        if (n == 89)\
    \ return 89;\n        if (n == 97) return 97;\n        if (n == 101) return 101;\n\
    \        if (n == 103) return 103;\n        if (n == 107) return 107;\n      \
    \  if (n == 109) return 109;\n        if (n == 113) return 113;\n        if (n\
    \ == 127) return 127;\n        if (n == 131) return 131;\n        if (n == 137)\
    \ return 137;\n        if (n == 139) return 139;\n        if (n == 149) return\
    \ 149;\n        if (n == 151) return 151;\n        if (n == 157) return 157;\n\
    \        if (n == 163) return 163;\n        if (n == 167) return 167;\n      \
    \  if (n == 173) return 173;\n        if (n == 179) return 179;\n        if (n\
    \ == 181) return 181;\n        if (n == 191) return 191;\n        if (n == 193)\
    \ return 193;\n        if (n == 197) return 197;\n        if (n == 199) return\
    \ 199;\n        if (n == 211", "        long prime = 2;\n        while (n % prime\
    \ != 0) {\n            prime++;\n        }\n        return prime;", "        if\
    \ (n == 1) return 1;\n        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n == 4) return 2;\n        if (n == 5) return 5;\n        if\
    \ (n == 6) return 3;\n        if (n == 7) return 7;\n        if (n == 8) return\
    \ 2;\n        if (n == 9) return 9;\n        if (n == 10) return 5;\n        if\
    \ (n == 11) return 11;\n        if (n == 12) return 2;\n        if (n == 13) return\
    \ 13;\n        if (n == 14) return 7;\n        if (n == 15) return 3;\n      \
    \  if (n == 16) return 2;\n        if (n == 17) return 17;\n        if (n == 18)\
    \ return 2;\n        if (n == 19) return 19;\n        if (n == 20) return 2;\n\
    \        if (n == 21) return 3;\n        if (n == 22) return 2;\n        if (n\
    \ == 23) return 23;\n        if (n == 24) return 2;\n        if (n == 25) return\
    \ 5;\n        if (n == 26) return 2;\n        if (n == 27) return 3;\n       \
    \ if (n == 28) return 2;\n        if (n == 29) return 29;\n        if (n == 30)\
    \ return 2;\n        if (n == 31) return 31;\n        if (n == 32) return 2;\n\
    \        if (n == 33) return 3;\n        if (n == 34) return 2;\n        if (n\
    \ == 35) return 5;\n        if (n == 36) return 2;\n        if (n == 37) return\
    \ 37;\n        if (n == 38) return 2;\n        if (n == 39) return 3;\n      \
    \  if (n == 40) return 2;\n        if (n == 41) return 41;\n        if (n == 42)\
    \ return 2;\n        if (n == 43) return 3;\n        if (n == 44) return 2;\n\
    \        if (n == 45) return 5;\n        if (n == 46) return 2;\n        if (n\
    \ == 47", "        if (n == 1) return 1;\n        long max = n;\n        for (long\
    \ i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n          \
    \      max = i;\n                while (n % i == 0) n /= i;\n            }\n \
    \       }\n        if (n > 1) max = n;\n        return max;", "        if (n ==\
    \ 1) return 1;\n        long max = n;\n        for (long i = 2; i <= Math.Sqrt(n);\
    \ i++) {\n            if (n % i == 0) {\n                max = Math.Min(max, i);\n\
    \                while (n % i == 0) n /= i;\n            }\n        }\n      \
    \  if (n > 1) max = Math.Min(max, n);\n        return max;", "        long i =\
    \ 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n          \
    \      n /= i;\n                i = 2;\n            }\n            else {\n  \
    \              i++;\n            }\n        }\n        return n;", "        long\
    \ prime = 2;\n        while (n % prime != 0) {\n            prime++;\n       \
    \ }\n        return prime;", "        if (n == 1) return 1;\n        long prime\
    \ = 2;\n        while (n % prime != 0) {\n            prime++;\n        }\n  \
    \      return prime;", "        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n % 2 == 0) return 2;\n        if (n % 3 == 0) return 3;\n \
    \       long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                return i;\n            }\n            i += 2;\n        }\n\
    \        return n;", "        long prime = 2;\n        while (n % prime != 0)\
    \ {\n            prime++;\n        }\n        return prime;", "        long prime\
    \ = 2;\n        while (n % prime != 0) {\n            prime++;\n        }\n  \
    \      return prime;", "        if (n == 2) return 2;\n        if (n == 3) return\
    \ 3;\n        if (n % 2 == 0) return 2;\n        if (n % 3 == 0) return 3;\n \
    \       long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ return i;\n            i += 2;\n        }\n        return n;", "        if (n\
    \ == 2) return 2;\n        if (n == 3) return 3;\n        if (n % 2 == 0) return\
    \ 2;\n        if (n % 3 == 0) return 3;\n        long i = 5;\n        while (i\
    \ * i <= n) {\n            if (n % i == 0) {\n                return i;\n    \
    \        }\n            i += 2;\n        }\n        return n;", "        if (n\
    \ < 2) return n;\n        long p = 2;\n        while (n % p == 0) {\n        \
    \    n /= p;\n            p = 2;\n        }\n        while (n % p == 0) {\n  \
    \          n /= p;\n            p = p + 1;\n        }\n        return n;", " \
    \       if (n == 1) return 1;\n        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                while\
    \ (n % i == 0) {\n                    n /= i;\n                }\n           \
    \     return i;\n            }\n            i++;\n        }\n        return n;",
  "        long largestFactor = 2;\n        while (n > 1) {\n            if (n % 2\
    \ == 0) {\n                n /= 2;\n            }\n            else if (n % 3\
    \ == 0) {\n                n /= 3;\n            }\n            else if (n % 5\
    \ == 0) {\n                n /= 5;\n            }\n            else if (n % 7\
    \ == 0) {\n                n /= 7;\n            }\n            else if (n % 11\
    \ == 0) {\n                n /= 11;\n            }\n            else if (n % 13\
    \ == 0) {\n                n /= 13;\n            }\n            else if (n % 17\
    \ == 0) {\n                n /= 17;\n            }\n            else if (n % 19\
    \ == 0) {\n                n /= 19;\n            }\n            else if (n % 23\
    \ == 0) {\n                n /= 23;\n            }\n            else if (n % 29\
    \ == 0) {\n                n /= 29;\n            }\n            else if (n % 31\
    \ == 0) {\n                n /= 31;\n            }\n            else if (n % 37\
    \ == 0) {\n                n /= 37;\n            }\n            else if (n % 41\
    \ == 0) {\n                n /= 41;\n            }\n            else if (n % 43\
    \ == 0) {\n                n /= 43;\n            }\n            else if (n % 47\
    \ == 0) {\n                n /= 47;\n            }\n            else if (n % 53\
    \ == 0) {\n                n /= 53;\n            }\n            else if (n % 59\
    \ == 0) {\n                n /= 59;\n            }\n            else if (n % 61\
    \ == 0) {\n                n /= 61;\n            }\n            else if (n % 67\
    \ == 0) {\n                n /= 67;\n            }\n            else if (n % 71\
    \ == 0) {\n                n /= 71;\n            }\n            else if (n % 73\
    \ == 0) {\n                n /= 73;\n            }\n            else if (n % 79\
    \ == 0) {\n                n /= 79;\n            }\n            else if (n % 83\
    \ == 0) {\n", "        long largestPrimeFactor = 2;\n        while (n > 1) {\n\
    \            if (n % 2 == 0) {\n                n /= 2;\n            }\n     \
    \       else if (n % 3 == 0) {\n                n /= 3;\n            }\n     \
    \       else if (n % 5 == 0) {\n                n /= 5;\n            }\n     \
    \       else if (n % 7 == 0) {\n                n /= 7;\n            }\n     \
    \       else if (n % 11 == 0) {\n                n /= 11;\n            }\n   \
    \         else if (n % 13 == 0) {\n                n /= 13;\n            }\n \
    \           else if (n % 17 == 0) {\n                n /= 17;\n            }\n\
    \            else if (n % 19 == 0) {\n                n /= 19;\n            }\n\
    \            else if (n % 23 == 0) {\n                n /= 23;\n            }\n\
    \            else if (n % 29 == 0) {\n                n /= 29;\n            }\n\
    \            else if (n % 31 == 0) {\n                n /= 31;\n            }\n\
    \            else if (n % 37 == 0) {\n                n /= 37;\n            }\n\
    \            else if (n % 41 == 0) {\n                n /= 41;\n            }\n\
    \            else if (n % 43 == 0) {\n                n /= 43;\n            }\n\
    \            else if (n % 47 == 0) {\n                n /= 47;\n            }\n\
    \            else if (n % 53 == 0) {\n                n /= 53;\n            }\n\
    \            else if (n % 59 == 0) {\n                n /= 59;\n            }\n\
    \            else if (n % 61 == 0) {\n                n /= 61;\n            }\n\
    \            else if (n % 67 == 0) {\n                n /= 67;\n            }\n\
    \            else if (n % 71 == 0) {\n                n /= 71;\n            }\n\
    \            else if (n % 73 == 0) {\n                n /= 73;\n            }\n\
    \            else if (n % 79 == 0) {\n                n /= 79;\n            }\n\
    \            else if (n % 83 == 0) {", "        if (n == 1) return 1;\n      \
    \  if (n == 2) return 2;\n        if (n == 3) return 3;\n        if (n == 4) return\
    \ 2;\n        if (n == 5) return 5;\n        if (n == 6) return 3;\n        if\
    \ (n == 7) return 7;\n        if (n == 8) return 2;\n        if (n == 9) return\
    \ 9;\n        if (n == 10) return 5;\n        if (n == 11) return 11;\n      \
    \  if (n == 12) return 2;\n        if (n == 13) return 13;\n        if (n == 14)\
    \ return 7;\n        if (n == 15) return 3;\n        if (n == 16) return 2;\n\
    \        if (n == 17) return 17;\n        if (n == 18) return 2;\n        if (n\
    \ == 19) return 19;\n        if (n == 20) return 2;\n        if (n == 21) return\
    \ 3;\n        if (n == 22) return 2;\n        if (n == 23) return 23;\n      \
    \  if (n == 24) return 2;\n        if (n == 25) return 5;\n        if (n == 26)\
    \ return 2;\n        if (n == 27) return 3;\n        if (n == 28) return 2;\n\
    \        if (n == 29) return 29;\n        if (n == 30) return 2;\n        if (n\
    \ == 31) return 31;\n        if (n == 32) return 2;\n        if (n == 33) return\
    \ 2;\n        if (n == 34) return 2;\n        if (n == 35) return 5;\n       \
    \ if (n == 36) return 2;\n        if (n == 37) return 2;\n        if (n == 38)\
    \ return 2;\n        if (n == 39) return 2;\n        if (n == 40) return 2;\n\
    \        if (n == 41) return 41;\n        if (n == 42) return 2;\n        if (n\
    \ == 43) return 2;\n        if (n == 44) return 2;\n        if (n == 45) return\
    \ 3;\n        if (n == 46) return 2;\n        if (n == 47", "        long i =\
    \ 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n          \
    \      n /= i;\n                i = 2;\n            }\n            else {\n  \
    \              i++;\n            }\n        }\n        return n;", "        if\
    \ (n == 1) return 1;\n        long maxFactor = n;\n        for (long i = 2; i\
    \ < n; i++) {\n            if (n % i == 0) {\n                maxFactor = Math.min(maxFactor,\
    \ i);\n                n /= i;\n            }\n        }\n        return maxFactor;",
  "        long largestPrimeFactor = 2;\n        while (n % 2 == 0) {\n          \
    \  largestPrimeFactor = 2;\n            n /= 2;\n        }\n        for (long\
    \ i = 3; i <= Math.Sqrt(n); i += 2) {\n            while (n % i == 0) {\n    \
    \            largestPrimeFactor = i;\n                n /= i;\n            }\n\
    \        }\n        if (n > 1) {\n            largestPrimeFactor = n;\n      \
    \  }\n        return largestPrimeFactor;", "        long i = 2;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n   \
    \             i = 2;\n            }\n            else {\n                i++;\n\
    \            }\n        }\n        return n;", "        long prime = 2;\n    \
    \    while (n % prime == 0) {\n            n /= prime;\n            prime = 2;\n\
    \        }\n        while (n > 1) {\n            prime = 3;\n            while\
    \ (n % prime == 0) {\n                n /= prime;\n                prime = 3;\n\
    \            }\n            prime = 5;\n            while (n % prime == 0) {\n\
    \                n /= prime;\n                prime = 5;\n            }\n    \
    \        prime = 7;\n            while (n % prime == 0) {\n                n /=\
    \ prime;\n                prime = 7;\n            }\n            prime = 11;\n\
    \            while (n % prime == 0) {\n                n /= prime;\n         \
    \       prime = 11;\n            }\n            prime = 13;\n            while\
    \ (n % prime == 0) {\n                n /= prime;\n                prime = 13;\n\
    \            }\n            prime = 17;\n            while (n % prime == 0) {\n\
    \                n /= prime;\n                prime = 17;\n            }\n   \
    \         prime = 19;\n            while (n % prime == 0) {\n                n\
    \ /= prime;\n                prime = 19;\n            }\n            prime = 23;\n\
    \            while (n % prime == 0) {\n                n /= prime;\n         \
    \       prime = 23;\n            }\n            prime = 29;\n            while\
    \ (n % prime == 0) {\n                n /= prime;\n                prime = 29;\n\
    \            }\n            prime = 31;\n            while (n % prime == 0) {\n\
    \                n /= prime;\n                prime = 31;\n            }\n   \
    \         prime = 37;\n            while (n % prime == 0) {\n                n\
    \ /= prime;\n                prime = 37;\n            }\n            prime = 41;\n\
    \            while (n % prime == 0) {\n                n /= prime;\n         \
    \       prime = 41;\n            }\n            prime = 43;\n            while\
    \ (n % prime == 0) {\n                n /= prime;\n                prime = 43;\n\
    \            }\n            prime = 47;\n            while (n % prime == 0) {\n\
    \                n /= prime;\n                prime = 47;\n            }\n   \
    \         prime = 53;\n            ", "        if (n == 1) return 1;\n       \
    \ long p = 2;\n        while (p * p <= n) {\n            if (n % p == 0) {\n \
    \               n /= p;\n                p = 2;\n            }\n            else\
    \ {\n                p++;\n            }\n        }\n        return n;", "   \
    \     if (n == 1) return 1;\n        long max = n;\n        for (long i = 2; i\
    \ <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n                max\
    \ = Math.Min(max, i);\n                while (n % i == 0) n /= i;\n          \
    \  }\n        }\n        if (n > 1) max = Math.Min(max, n);\n        return max;",
  "        long prime = 2;\n        while (n % prime != 0) {\n            prime++;\n\
    \        }\n        return prime;", "        if (n == 1) return 1;\n        long\
    \ max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if\
    \ (n % i == 0) {\n                max = Math.Min(max, i);\n                while\
    \ (n % i == 0) n /= i;\n            }\n        }\n        if (n > 1) max = Math.Min(max,\
    \ n);\n        return max;", "        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 3;\n        if (n == 5) return 5;\n        if (n == 7) return 7;\n\
    \        if (n == 11) return 11;\n        if (n == 13) return 13;\n        if\
    \ (n == 17) return 17;\n        if (n == 19) return 19;\n        if (n == 23)\
    \ return 23;\n        if (n == 29) return 29;\n        if (n == 31) return 31;\n\
    \        if (n == 37) return 37;\n        if (n == 41) return 41;\n        if\
    \ (n == 43) return 43;\n        if (n == 47) return 47;\n        if (n == 53)\
    \ return 53;\n        if (n == 59) return 59;\n        if (n == 61) return 61;\n\
    \        if (n == 67) return 67;\n        if (n == 71) return 71;\n        if\
    \ (n == 73) return 73;\n        if (n == 79) return 79;\n        if (n == 83)\
    \ return 83;\n        if (n == 89) return 89;\n        if (n == 97) return 97;\n\
    \        if (n == 101) return 101;\n        if (n == 103) return 103;\n      \
    \  if (n == 107) return 107;\n        if (n == 109) return 109;\n        if (n\
    \ == 113) return 113;\n        if (n == 127) return 127;\n        if (n == 131)\
    \ return 131;\n        if (n == 137) return 137;\n        if (n == 139) return\
    \ 139;\n        if (n == 149) return 149;\n        if (n == 151) return 151;\n\
    \        if (n == 157) return 157;\n        if (n == 163) return 163;\n      \
    \  if (n == 167) return 167;\n        if (n == 173) return 173;\n        if (n\
    \ == 179) return 179;\n        if (n == 181) return 181;\n        if (n == 191)\
    \ return 191;\n        if (n == 193) return 193;\n        if (n == 197) return\
    \ 197;\n        if (n == 199) return 199;\n        if (n == 211", "        long\
    \ prime = 2;\n        while (n % prime != 0) {\n            prime++;\n       \
    \ }\n        return prime;", "        if (n == 1) return 1;\n        long max\
    \ = Math.Max(n, 2);\n        for (long i = 2; i <= max; i++) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return n;", "        if (n == 1) return 1;\n        long prime = 2;\n     \
    \   while (n % prime != 0) {\n            prime++;\n            if (prime >= n)\
    \ return n;\n        }\n        return prime;", "        long i = 2;\n       \
    \ while (i * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n\
    \                i = 2;\n            }\n            else {\n                i++;\n\
    \            }\n        }\n        return n;", "        if (n == 1) return 1;\n\
    \        long max = Math.Max(n, 2);\n        for (long i = max; i >= 2; i--) {\n\
    \            if (n % i == 0) {\n                return i;\n            }\n   \
    \     }\n        return n;", "        if (n < 2) return 1;\n        if (n == 2)\
    \ return 2;\n        if (n % 2 == 0) return 2;\n        long i = 3;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0) {\n                return i;\n \
    \           }\n            i += 2;\n        }\n        return n;", "        long\
    \ prime = 2;\n        while (n > 1) {\n            if (n % prime == 0) {\n   \
    \             n /= prime;\n            } else {\n                prime = prime\
    \ + 1;\n            }\n        }\n        return prime;", "        if (n == 1)\
    \ return 1;\n        long prime = 2;\n        while (n % prime != 0) {\n     \
    \       prime++;\n        }\n        return prime;", "        if (n == 2) return\
    \ 2;\n        if (n == 3) return 3;\n        if (n == 5) return 5;\n        if\
    \ (n == 7) return 7;\n        if (n == 11) return 11;\n        if (n == 13) return\
    \ 13;\n        if (n == 17) return 17;\n        if (n == 19) return 19;\n    \
    \    if (n == 23) return 23;\n        if (n == 29) return 29;\n        if (n ==\
    \ 31) return 31;\n        if (n == 37) return 37;\n        if (n == 41) return\
    \ 41;\n        if (n == 43) return 43;\n        if (n == 47) return 47;\n    \
    \    if (n == 53) return 53;\n        if (n == 59) return 59;\n        if (n ==\
    \ 61) return 61;\n        if (n == 67) return 67;\n        if (n == 71) return\
    \ 71;\n        if (n == 73) return 73;\n        if (n == 79) return 79;\n    \
    \    if (n == 83) return 83;\n        if (n == 89) return 89;\n        if (n ==\
    \ 97) return 97;\n        if (n == 101) return 101;\n        if (n == 103) return\
    \ 103;\n        if (n == 107) return 107;\n        if (n == 109) return 109;\n\
    \        if (n == 113) return 113;\n        if (n == 127) return 127;\n      \
    \  if (n == 131) return 131;\n        if (n == 137) return 137;\n        if (n\
    \ == 139) return 139;\n        if (n == 149) return 149;\n        if (n == 151)\
    \ return 151;\n        if (n == 157) return 157;\n        if (n == 163) return\
    \ 163;\n        if (n == 167) return 167;\n        if (n == 173) return 173;\n\
    \        if (n == 179) return 179;\n        if (n == 181) return 181;\n      \
    \  if (n == 191) return 191;\n        if (n == 193) return 193;\n        if (n\
    \ == 197) return 197;\n        if (n == 199) return 199;\n        if (n == 211",
  "        if (n == 1) return 1;\n        long prime = 2;\n        while (n % prime\
    \ != 0) {\n            prime++;\n        }\n        return prime;", "        if\
    \ (n == 2) return 2;\n        if (n == 3) return 3;\n        if (n == 5) return\
    \ 5;\n        if (n == 7) return 7;\n        if (n == 11) return 11;\n       \
    \ if (n == 13) return 13;\n        if (n == 17) return 17;\n        if (n == 19)\
    \ return 19;\n        if (n == 23) return 23;\n        if (n == 29) return 29;\n\
    \        if (n == 31) return 31;\n        if (n == 37) return 37;\n        if\
    \ (n == 41) return 41;\n        if (n == 43) return 43;\n        if (n == 47)\
    \ return 47;\n        if (n == 53) return 53;\n        if (n == 59) return 59;\n\
    \        if (n == 61) return 61;\n        if (n == 67) return 67;\n        if\
    \ (n == 71) return 71;\n        if (n == 73) return 73;\n        if (n == 79)\
    \ return 79;\n        if (n == 83) return 83;\n        if (n == 89) return 89;\n\
    \        if (n == 97) return 97;\n        if (n == 101) return 101;\n        if\
    \ (n == 103) return 103;\n        if (n == 107) return 107;\n        if (n ==\
    \ 109) return 109;\n        if (n == 113) return 113;\n        if (n == 127) return\
    \ 127;\n        if (n == 131) return 131;\n        if (n == 137) return 137;\n\
    \        if (n == 139) return 139;\n        if (n == 149) return 149;\n      \
    \  if (n == 151) return 151;\n        if (n == 157) return 157;\n        if (n\
    \ == 163) return 163;\n        if (n == 167) return 167;\n        if (n == 173)\
    \ return 173;\n        if (n == 179) return 179;\n        if (n == 181) return\
    \ 181;\n        if (n == 191) return 191;\n        if (n == 193) return 193;\n\
    \        if (n == 197) return 197;\n        if (n == 199) return 199;\n      \
    \  if (n == 211", "        if (n == 2) return 2;\n        if (n == 3) return 3;\n\
    \        if (n % 2 == 0) return 2;\n        if (n % 3 == 0) return 3;\n      \
    \  long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return\
    \ i;\n            i += 2;\n        }\n        return n;", "        long i = 2;\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ n /= i;\n            }\n            else {\n                i++;\n         \
    \   }\n        }\n        return n;", "        long prime = 2;\n        while\
    \ (n % prime != 0) {\n            prime++;\n        }\n        return prime;",
  "        long prime = 2;\n        while (n % prime != 0) {\n            prime++;\n\
    \        }\n        return prime;", "        long prime = 2;\n        while (n\
    \ % prime != 0) {\n            prime++;\n        }\n        return prime;", " \
    \       long prime = 2;\n        while (n % prime != 0) {\n            prime++;\n\
    \        }\n        return prime;", "        if (n == 1) return 1;\n        if\
    \ (n == 2) return 2;\n        if (n % 2 == 0) return 2;\n        long i = 3;\n\
    \        while (i * i <= n) {\n            if (n % i == 0) {\n               \
    \ return i;\n            }\n            i += 2;\n        }\n        return n;",
  "        long prime = 2;\n        while (n % prime != 0) {\n            prime++;\n\
    \        }\n        return prime;", "        if (n == 1) return 1;\n        long\
    \ max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if\
    \ (n % i == 0) {\n                max = i;\n                while (n % i == 0)\
    \ {\n                    n /= i;\n                }\n            }\n        }\n\
    \        if (n > 1) max = n;\n        return max;", "        if (n == 1) return\
    \ 1;\n        long p = 2;\n        while (p * p <= n) {\n            if (n % p\
    \ == 0) {\n                n /= p;\n                p = 2;\n            }\n  \
    \          else {\n                p++;\n            }\n        }\n        return\
    \ n;", "        if (n == 1) return 1;\n        if (n == 2) return 2;\n       \
    \ long max = Math.Max(n, 2);\n        for (long i = max; i >= 2; i--) {\n    \
    \        if (n % i == 0) {\n                return i;\n            }\n       \
    \ }\n        return n;", "        long prime = 2;\n        while (n % prime !=\
    \ 0) {\n            prime++;\n        }\n        return prime;", "        long\
    \ prime = 2;\n        while (n % prime != 0) {\n            prime++;\n       \
    \ }\n        return prime;", "        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n            }\n \
    \           else {\n                i++;\n            }\n        }\n        return\
    \ n;", "        if (n == 2) return 2;\n        if (n == 3) return 3;\n       \
    \ if (n == 5) return 5;\n        if (n == 7) return 7;\n        if (n == 11) return\
    \ 11;\n        if (n == 13) return 13;\n        if (n == 17) return 17;\n    \
    \    if (n == 19) return 19;\n        if (n == 23) return 23;\n        if (n ==\
    \ 29) return 29;\n        if (n == 31) return 31;\n        if (n == 37) return\
    \ 37;\n        if (n == 41) return 41;\n        if (n == 43) return 43;\n    \
    \    if (n == 47) return 47;\n        if (n == 53) return 53;\n        if (n ==\
    \ 59) return 59;\n        if (n == 61) return 61;\n        if (n == 67) return\
    \ 67;\n        if (n == 71) return 71;\n        if (n == 73) return 73;\n    \
    \    if (n == 79) return 79;\n        if (n == 83) return 83;\n        if (n ==\
    \ 89) return 89;\n        if (n == 97) return 97;\n        if (n == 101) return\
    \ 101;\n        if (n == 103) return 103;\n        if (n == 107) return 107;\n\
    \        if (n == 109) return 109;\n        if (n == 113) return 113;\n      \
    \  if (n == 127) return 127;\n        if (n == 131) return 131;\n        if (n\
    \ == 137) return 137;\n        if (n == 139) return 139;\n        if (n == 149)\
    \ return 149;\n        if (n == 151) return 151;\n        if (n == 157) return\
    \ 157;\n        if (n == 163) return 163;\n        if (n == 167) return 167;\n\
    \        if (n == 173) return 173;\n        if (n == 179) return 179;\n      \
    \  if (n == 181) return 181;\n        if (n == 191) return 191;\n        if (n\
    \ == 193) return 193;\n        if (n == 197) return 197;\n        if (n == 199)\
    \ return 199;\n        if (n == 211", "        if (n == 1) return 1;\n       \
    \ long max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n        \
    \    if (n % i == 0) {\n                max = Math.Min(max, i);\n            \
    \    while (n % i == 0) n /= i;\n            }\n        }\n        if (n > 1)\
    \ max = Math.Min(max, n);\n        return max;", "        long max = n;\n    \
    \    for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n\
    \                max = Math.Min(max, i);\n                while (n % i == 0) {\n\
    \                    n /= i;\n                }\n            }\n        }\n  \
    \      if (n > 1) {\n            max = Math.Min(max, n);\n        }\n        return\
    \ max;", "        if (n == 1) return 1;\n        long i = 2;\n        while (i\
    \ * i <= n) {\n            if (n % i == 0) {\n                n /= i;\n      \
    \          i = 2;\n            }\n            else {\n                i++;\n \
    \           }\n        }\n        return n;", "        if (n == 1) return 1;\n\
    \        long p = 2;\n        while (p * p <= n) {\n            if (n % p == 0)\
    \ {\n                n /= p;\n                p = 2;\n            }\n        \
    \    else p++;\n        }\n        return n;", "        if (n == 2) return 2;\n\
    \        if (n == 3) return 3;\n        if (n % 2 == 0) return 2;\n        if\
    \ (n % 3 == 0) return 3;\n        long i = 5;\n        while (i * i <= n) {\n\
    \            if (n % i == 0) return i;\n            i += 2;\n        }\n     \
    \   return n;", "        long prime = 2;\n        while (n % prime != 0) {\n \
    \           prime++;\n        }\n        return prime;", "        long max = n;\n\
    \        for (long i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i ==\
    \ 0) {\n                max = Math.Min(max, i);\n                n /= i;\n   \
    \         }\n        }\n        return max;", "        if (n == 2) return 2;\n\
    \        if (n == 3) return 3;\n        if (n == 5) return 5;\n        if (n ==\
    \ 7) return 7;\n        if (n == 11) return 11;\n        if (n == 13) return 13;\n\
    \        if (n == 17) return 17;\n        if (n == 19) return 19;\n        if\
    \ (n == 23) return 23;\n        if (n == 29) return 29;\n        if (n == 31)\
    \ return 31;\n        if (n == 37) return 37;\n        if (n == 41) return 41;\n\
    \        if (n == 43) return 43;\n        if (n == 47) return 47;\n        if\
    \ (n == 53) return 53;\n        if (n == 59) return 59;\n        if (n == 61)\
    \ return 61;\n        if (n == 67) return 67;\n        if (n == 71) return 71;\n\
    \        if (n == 73) return 73;\n        if (n == 79) return 79;\n        if\
    \ (n == 83) return 83;\n        if (n == 89) return 89;\n        if (n == 97)\
    \ return 97;\n        if (n == 101) return 101;\n        if (n == 103) return\
    \ 103;\n        if (n == 107) return 107;\n        if (n == 109) return 109;\n\
    \        if (n == 113) return 113;\n        if (n == 127) return 127;\n      \
    \  if (n == 131) return 131;\n        if (n == 137) return 137;\n        if (n\
    \ == 139) return 139;\n        if (n == 149) return 149;\n        if (n == 151)\
    \ return 151;\n        if (n == 157) return 157;\n        if (n == 163) return\
    \ 163;\n        if (n == 167) return 167;\n        if (n == 173) return 173;\n\
    \        if (n == 179) return 179;\n        if (n == 181) return 181;\n      \
    \  if (n == 191) return 191;\n        if (n == 193) return 193;\n        if (n\
    \ == 197) return 197;\n        if (n == 199) return 199;\n        if (n == 211",
  "        if (n == 2) return 2;\n        if (n == 3) return 3;\n        if (n ==\
    \ 5) return 5;\n        if (n == 7) return 7;\n        if (n == 11) return 11;\n\
    \        if (n == 13) return 13;\n        if (n == 17) return 17;\n        if\
    \ (n == 19) return 19;\n        if (n == 23) return 23;\n        if (n == 29)\
    \ return 29;\n        if (n == 31) return 31;\n        if (n == 37) return 37;\n\
    \        if (n == 41) return 41;\n        if (n == 43) return 43;\n        if\
    \ (n == 47) return 47;\n        if (n == 53) return 53;\n        if (n == 59)\
    \ return 59;\n        if (n == 61) return 61;\n        if (n == 67) return 67;\n\
    \        if (n == 71) return 71;\n        if (n == 73) return 73;\n        if\
    \ (n == 79) return 79;\n        if (n == 83) return 83;\n        if (n == 89)\
    \ return 89;\n        if (n == 97) return 97;\n        if (n == 101) return 101;\n\
    \        if (n == 103) return 103;\n        if (n == 107) return 107;\n      \
    \  if (n == 109) return 109;\n        if (n == 113) return 113;\n        if (n\
    \ == 127) return 127;\n        if (n == 131) return 131;\n        if (n == 137)\
    \ return 137;\n        if (n == 139) return 139;\n        if (n == 149) return\
    \ 149;\n        if (n == 151) return 151;\n        if (n == 157) return 157;\n\
    \        if (n == 163) return 163;\n        if (n == 167) return 167;\n      \
    \  if (n == 173) return 173;\n        if (n == 179) return 179;\n        if (n\
    \ == 181) return 181;\n        if (n == 191) return 191;\n        if (n == 193)\
    \ return 193;\n        if (n == 197) return 197;\n        if (n == 199) return\
    \ 199;\n        if (n == 211", "        long prime = 2;\n        while (n > 1)\
    \ {\n            if (n % prime == 0) {\n                n /= prime;\n        \
    \    }\n            else {\n                prime = prime + 1;\n            }\n\
    \        }\n        return prime;", "        if (n == 1) return 1;\n        long\
    \ prime = 2;\n        while (n % prime != 0) {\n            prime++;\n       \
    \ }\n        return prime;", "        long i = 2;\n        while (i * i <= n)\
    \ {\n            if (n % i == 0) {\n                n /= i;\n                i\
    \ = 2;\n            }\n            else {\n                i++;\n            }\n\
    \        }\n        return n;", "        if (n == 2) return 2;\n        if (n\
    \ == 3) return 3;\n        if (n % 2 == 0) return 2;\n        if (n % 3 == 0)\
    \ return 3;\n        long i = 5;\n        while (i * i <= n) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n            i += 2;\n\
    \        }\n        return n;", "        long prime = 2;\n        while (n % prime\
    \ != 0) {\n            prime++;\n        }\n        return prime;", "        if\
    \ (n == 1) return 1;\n        long prime = 2;\n        while (n % prime != 0)\
    \ {\n            prime++;\n            if (prime * prime > n) return n;\n    \
    \    }\n        return prime;", "        if (n == 1) return 1;\n        if (n\
    \ == 2) return 2;\n        if (n == 3) return 3;\n        if (n == 4) return 2;\n\
    \        if (n == 5) return 5;\n        if (n == 6) return 3;\n        if (n ==\
    \ 7) return 7;\n        if (n == 8) return 2;\n        if (n == 9) return 9;\n\
    \        if (n == 10) return 5;\n        if (n == 11) return 11;\n        if (n\
    \ == 12) return 2;\n        if (n == 13) return 13;\n        if (n == 14) return\
    \ 7;\n        if (n == 15) return 3;\n        if (n == 16) return 2;\n       \
    \ if (n == 17) return 17;\n        if (n == 18) return 2;\n        if (n == 19)\
    \ return 19;\n        if (n == 20) return 2;\n        if (n == 21) return 3;\n\
    \        if (n == 22) return 2;\n        if (n == 23) return 23;\n        if (n\
    \ == 24) return 2;\n        if (n == 25) return 5;\n        if (n == 26) return\
    \ 2;\n        if (n == 27) return 3;\n        if (n == 28) return 2;\n       \
    \ if (n == 29) return 29;\n        if (n == 30) return 2;\n        if (n == 31)\
    \ return 31;\n        if (n == 32) return 2;\n        if (n == 33) return 3;\n\
    \        if (n == 34) return 2;\n        if (n == 35) return 5;\n        if (n\
    \ == 36) return 2;\n        if (n == 37) return 37;\n        if (n == 38) return\
    \ 2;\n        if (n == 39) return 3;\n        if (n == 40) return 2;\n       \
    \ if (n == 41) return 41;\n        if (n == 42) return 2;\n        if (n == 43)\
    \ return 3;\n        if (n == 44) return 2;\n        if (n == 45) return 3;\n\
    \        if (n == 46) return 2;\n        if (n == 47", "        if (n < 2) return\
    \ n;\n        long i = 2;\n        while (i * i <= n) {\n            if (n % i\
    \ == 0) {\n                n /= i;\n                i = 2;\n            }\n  \
    \          else {\n                i++;\n            }\n        }\n        return\
    \ n;", "        if (n == 1) return 1;\n        long max = n;\n        for (long\
    \ i = 2; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n          \
    \      max = i;\n                n /= i;\n            }\n        }\n        if\
    \ (n > 1) max = n;\n        return max;", "        if (n == 1) return 1;\n   \
    \     long max = n;\n        for (long i = 2; i <= Math.Sqrt(n); i++) {\n    \
    \        if (n % i == 0) {\n                max = Math.Min(max, i);\n        \
    \        while (n % i == 0) n /= i;\n            }\n        }\n        if (n >\
    \ 1) max = Math.Min(max, n);\n        return max;"]
stop_tokens:
- "\n    }\n"

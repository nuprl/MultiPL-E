{
  "name": "HumanEval_136_largest_smallest_integers",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Create a function that returns a tuple (a, b), where 'a' is\n    // the largest of negative integers, and 'b' is the smallest\n    // of positive integers in a list.\n    // If there is no negative or positive integers, return them as null.\n    // Examples:\n    // >>> LargestSmallestIntegers((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)3L, (long)5L, (long)7L})))\n    // Tuple.Create((Nullable<long>)null, 1L)\n    // >>> LargestSmallestIntegers((new List<long>()))\n    // Tuple.Create((Nullable<long>)null, (Nullable<long>)null)\n    // >>> LargestSmallestIntegers((new List<long>(new long[]{(long)0L})))\n    // Tuple.Create((Nullable<long>)null, (Nullable<long>)null)\n    public static Tuple<Nullable<long>, Nullable<long>> LargestSmallestIntegers(List<long> lst) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)3L, (long)5L, (long)7L}))).Equals(Tuple.Create((Nullable<long>)null, 1L)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)3L, (long)5L, (long)7L, (long)0L}))).Equals(Tuple.Create((Nullable<long>)null, 1L)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)1L, (long)3L, (long)2L, (long)4L, (long)5L, (long)6L, (long)-2L}))).Equals(Tuple.Create(-2L, 1L)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)4L, (long)5L, (long)3L, (long)6L, (long)2L, (long)7L, (long)-7L}))).Equals(Tuple.Create(-7L, 2L)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)7L, (long)3L, (long)8L, (long)4L, (long)9L, (long)2L, (long)5L, (long)-9L}))).Equals(Tuple.Create(-9L, 2L)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>())).Equals(Tuple.Create((Nullable<long>)null, (Nullable<long>)null)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)0L}))).Equals(Tuple.Create((Nullable<long>)null, (Nullable<long>)null)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)-1L, (long)-3L, (long)-5L, (long)-6L}))).Equals(Tuple.Create(-1L, (Nullable<long>)null)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)-1L, (long)-3L, (long)-5L, (long)-6L, (long)0L}))).Equals(Tuple.Create(-1L, (Nullable<long>)null)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)-6L, (long)-4L, (long)-4L, (long)-3L, (long)1L}))).Equals(Tuple.Create(-3L, 1L)));\n    Debug.Assert(LargestSmallestIntegers((new List<long>(new long[]{(long)-6L, (long)-4L, (long)-4L, (long)-3L, (long)-100L, (long)1L}))).Equals(Tuple.Create(-3L, 1L)));\n    }\n\n}\n",
  "completions": [
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable.Create(min) : Nullable.Create(max), max > 0 ? Nullable.Create(max) : Nullable.Create(min));",
    "        long min = 0;\n        long max = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (min == 0) {\n                    min = i;\n                }\n                else {\n                    min = Math.min(min, i);\n                }\n            }\n            else {\n                if (max == 0) {\n                    max = i;\n                }\n                else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        return Tuple.Create(min == 0 ? null : min, max == 0 ? null : max);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        if (a == 0 && b == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(a), new Nullable<long>(b));\n        }",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? null : max, min > 0 ? min : null);",
    "        long min = 0;\n        long max = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (min == 0) {\n                    min = i;\n                }\n                else {\n                    min = Math.min(min, i);\n                }\n            }\n            else if (i > 0) {\n                if (max == 0) {\n                    max = i;\n                }\n                else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        if (min == 0 && max == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (a == 0) {\n                    a = i;\n                }\n                else {\n                    a = Math.max(a, i);\n                }\n            }\n            else if (i > 0) {\n                if (b == 0) {\n                    b = i;\n                }\n                else {\n                    b = Math.min(b, i);\n                }\n            }\n        }\n        return Tuple.Create(a == 0 ? null : a, b == 0 ? null : b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > a) {\n                    a = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < b) {\n                    b = i;\n                }\n            }\n        }\n        return Tuple.Create(a == 0 ? null : a, b == 0 ? null : b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable.Create(min) : Nullable.Create(max), max > 0 ? Nullable.Create(max) : Nullable.Create(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable.Create(max) : Nullable.Create(0), min > 0 ? Nullable.Create(min) : Nullable.Create(0));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable.Create(min) : Nullable.Create(max), max > 0 ? Nullable.Create(max) : Nullable.Create(min));",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                min = Math.Min(min, i);\n            }\n            if (i > 0) {\n                max = Math.Max(max, i);\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable.Create(min) : Nullable.Create(max), max > 0 ? Nullable.Create(max) : Nullable.Create(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long a = 0, b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a < 0 ? null : a, b > 0 ? b : null);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long a = 0;\n        long b = 0;\n        if (lst.Count > 0) {\n            a = lst[0];\n            b = lst[0];\n            for (int i = 1; i < lst.Count; i++) {\n                if (lst[i] > a) {\n                    a = lst[i];\n                }\n                if (lst[i] < b) {\n                    b = lst[i];\n                }\n            }\n        }\n        return Tuple.Create(a < 0 ? Nullable<long>() : Nullable<long>(a), b > 0 ? Nullable<long>(b) : Nullable<long>());",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > a) {\n                    a = i;\n                }\n            }\n            else {\n                if (i < b) {\n                    b = i;\n                }\n            }\n        }\n        return Tuple.Create(a == 0 ? null : a, b == 0 ? null : b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long min = 0;\n        long max = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (min == 0) {\n                    min = i;\n                }\n                else {\n                    min = Math.min(min, i);\n                }\n            }\n            else {\n                if (max == 0) {\n                    max = i;\n                }\n                else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        if (min == 0 && max == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min == Long.MaxValue ? null : min, max == Long.MinValue ? null : max);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MaxValue || max == Long.MinValue) {\n            return Tuple.Create(Nullable.getValue(min), Nullable.getValue(max));\n        }\n        else {\n            return Tuple.Create(Nullable.getValue(min), Nullable.getValue(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min == Long.MaxValue ? null : min, max == Long.MinValue ? null : max);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a == 0 ? null : a, b == 0 ? null : b);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else {\n                b = Math.Min(b, i);\n            }\n        }\n        if (a == 0 && b == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(a), new Nullable<long>(b));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        if (min == max) {\n            return Tuple.Create(Nullable.getValue(min), Nullable.getValue(max));\n        }\n        return Tuple.Create(Nullable.getValue(min), Nullable.getValue(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable.Create(max) : Nullable.Create(min), min > 0 ? Nullable.Create(min) : Nullable.Create(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MaxValue || max == Long.MinValue) {\n            return Tuple.Create(Nullable.getValue(min), Nullable.getValue(max));\n        }\n        else {\n            return Tuple.Create(Nullable.getValue(min), Nullable.getValue(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable<long>((long)0), Nullable<long>((long)0));\n        }\n        else if (min == Long.MAX_VALUE) {\n            return Tuple.Create(Nullable<long>((long)0), Nullable<long>(max));\n        }\n        else if (max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable<long>(min), Nullable<long>((long)0));\n        }\n        else {\n            return Tuple.Create(Nullable<long>(min), Nullable<long>(max));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.True, Nullable.True);\n        }\n        else if (min == Long.MAX_VALUE) {\n            return Tuple.Create(Nullable.True, Nullable.False);\n        }\n        else if (max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.False, Nullable.True);\n        }\n        else {\n            return Tuple.Create(Nullable.False, Nullable.False);\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min == Long.MAX_VALUE ? null : min, max == Long.MIN_VALUE ? null : max);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min == Long.MaxValue ? null : min, max == Long.MinValue ? null : max);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a < 0 ? Nullable<long>() : Nullable<long>(a), b > 0 ? Nullable<long>(b) : Nullable<long>());",
    "        long a = 0;\n        long b = 0;\n        if (lst.Count > 0) {\n            for (long i : lst) {\n                if (i < 0) {\n                    a = Math.Max(a, i);\n                }\n                else {\n                    b = Math.Min(b, i);\n                }\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable.Create(min) : Nullable.Create(max), max > 0 ? Nullable.Create(max) : Nullable.Create(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > a) {\n                    a = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < b) {\n                    b = i;\n                }\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MaxValue && max == Long.MinValue) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MaxValue && max == Long.MinValue) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        if (a == 0 && b == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(a), new Nullable<long>(b));",
    "        long min = 0;\n        long max = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (min == 0) {\n                    min = i;\n                } else {\n                    min = Math.min(min, i);\n                }\n            } else if (i > 0) {\n                if (max == 0) {\n                    max = i;\n                } else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        return Tuple.Create(min == 0 ? null : min, max == 0 ? null : max);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = 0;\n        long max = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (min == 0) {\n                    min = i;\n                }\n                else {\n                    min = Math.min(min, i);\n                }\n            }\n            else if (i > 0) {\n                if (max == 0) {\n                    max = i;\n                }\n                else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        return Tuple.Create(min == 0 ? null : min, max == 0 ? null : max);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        if (a == 0 && b == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(a), new Nullable<long>(b));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                min = Math.min(min, i);\n            }\n            if (i > 0) {\n                max = Math.max(max, i);\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.getInstance(null), Nullable.getInstance(null));\n        }\n        return Tuple.Create(Nullable.getInstance(min), Nullable.getInstance(max));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE) {\n            return Tuple.Create(Nullable.getInstance(min), Nullable.getInstance(max));\n        }\n        else {\n            return Tuple.Create(Nullable.getInstance(min), Nullable.getInstance(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            } else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long a = 0, b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            } else {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a < 0 ? Nullable.Create(a) : Nullable.Create(b), b > 0 ? Nullable.Create(b) : Nullable.Create(a));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.True, Nullable.True);\n        }\n        else if (min == Long.MAX_VALUE) {\n            return Tuple.Create(Nullable.True, Nullable.False);\n        }\n        else if (max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.False, Nullable.True);\n        }\n        else {\n            return Tuple.Create(Nullable.False, Nullable.False);\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.True, Nullable.True);\n        }\n        else if (min == Long.MAX_VALUE) {\n            return Tuple.Create(Nullable.True, Nullable.False);\n        }\n        else if (max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.False, Nullable.True);\n        }\n        else {\n            return Tuple.Create(Nullable.False, Nullable.False);\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        if (min == max) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        if (min < 0) {\n            return Tuple.Create((Nullable<long>)null, min);\n        }\n        if (max > 0) {\n            return Tuple.Create(max, (Nullable<long>)null);\n        }\n        return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long a = 0;\n        long b = 0;\n        if (lst.Count > 0) {\n            a = lst.First;\n            b = lst.Last;\n        }\n        return Tuple.Create(a, b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long a = 0, b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a < 0 ? Nullable.Create(a) : Nullable.Create(b), b > 0 ? Nullable.Create(b) : Nullable.Create(a));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                min = Math.min(i, min);\n            }\n            else if (i > 0) {\n                max = Math.max(i, max);\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.True, Nullable.True);\n        }\n        else if (min == Long.MAX_VALUE) {\n            return Tuple.Create(Nullable.True, Nullable.False);\n        }\n        else if (max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.False, Nullable.True);\n        }\n        else {\n            return Tuple.Create(Nullable.False, Nullable.False);\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min == Long.MAX_VALUE ? null : min, max == Long.MIN_VALUE ? null : max);",
    "        long a = 0, b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > a) {\n                    a = i;\n                }\n            }\n            else {\n                if (i < b) {\n                    b = i;\n                }\n            }\n        }\n        return Tuple.Create(a == 0 ? null : a, b == 0 ? null : b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            } else {\n                b = Math.Min(b, i);\n            }\n        }\n        if (a == 0 && b == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        } else {\n            return Tuple.Create(new Nullable<long>(a), new Nullable<long>(b));\n        }",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MaxValue || max == Long.MinValue) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                min = Math.Min(min, i);\n            }\n            else if (i > 0) {\n                max = Math.Max(max, i);\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable.Create(min) : Nullable.Create(max), max > 0 ? Nullable.Create(max) : Nullable.Create(min));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (a == 0) {\n                    a = i;\n                }\n                else {\n                    a = Math.Max(a, i);\n                }\n            }\n            else if (i > 0) {\n                if (b == 0) {\n                    b = i;\n                }\n                else {\n                    b = Math.Min(b, i);\n                }\n            }\n        }\n        return Tuple.Create(a == 0 ? null : a, b == 0 ? null : b);",
    "        long a = 0;\n        long b = 0;\n        if (lst.Count > 0) {\n            a = lst.First;\n            b = lst.Last;\n        }\n        return Tuple.Create(a, b);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MaxValue) {\n            return Tuple.Create(Nullable.getValue(null), Nullable.getValue(null));\n        }\n        else {\n            return Tuple.Create(Nullable.getValue(min), Nullable.getValue(max));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MaxValue && max == Long.MinValue) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable<long>() : Nullable<long>(min), max > 0 ? Nullable<long>(max) : Nullable<long>());",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>((long)0) : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>((long)0));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create(Nullable.getValue(null), Nullable.getValue(null));\n        }\n        return Tuple.Create(Nullable.getValue(min), Nullable.getValue(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                min = Math.min(i, min);\n            }\n            else {\n                max = Math.max(i, max);\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < min) {\n                min = i;\n            }\n            if (i > max) {\n                max = i;\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable<long>((long)0) : Nullable<long>(min), max > 0 ? Nullable<long>(max) : Nullable<long>((long)0));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? null : max, min > 0 ? min : null);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                min = Math.Min(i, min);\n            }\n            if (i > 0) {\n                max = Math.Max(i, max);\n            }\n        }\n        if (min == Long.MaxValue || max == Long.MinValue) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (a == 0) {\n                    a = i;\n                }\n                else {\n                    a = Math.Max(a, i);\n                }\n            }\n            else if (i > 0) {\n                if (b == 0) {\n                    b = i;\n                }\n                else {\n                    b = Math.Min(b, i);\n                }\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        return Tuple.Create(min < 0 ? Nullable.Create(min) : Nullable.Create(max), max > 0 ? Nullable.Create(max) : Nullable.Create(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>((long)0) : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>((long)0));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? null : max, min > 0 ? min : null);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));\n        }",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < min)\n                min = i;\n            if (i > max)\n                max = i;\n        }\n        if (min == max)\n            return Tuple.Create(Nullable.Create(min), Nullable.Create(min));\n        if (min < 0)\n            return Tuple.Create(Nullable.Create(min), Nullable.Create(max));\n        return Tuple.Create(Nullable.Create(max), Nullable.Create(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long min = Long.MAX_VALUE;\n        long max = Long.MIN_VALUE;\n        for (long i : lst) {\n            if (i < 0) {\n                min = Math.min(min, i);\n            }\n            else {\n                max = Math.max(max, i);\n            }\n        }\n        if (min == Long.MAX_VALUE && max == Long.MIN_VALUE) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        else {\n            return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));\n        }",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (a == 0) {\n                    a = i;\n                }\n                else {\n                    a = Math.Max(a, i);\n                }\n            }\n            else {\n                if (b == 0) {\n                    b = i;\n                }\n                else {\n                    b = Math.Min(b, i);\n                }\n            }\n        }\n        return Tuple.Create(a == 0 ? null : a, b == 0 ? null : b);",
    "        long a = 0;\n        long b = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                a = Math.Max(a, i);\n            }\n            else if (i > 0) {\n                b = Math.Min(b, i);\n            }\n        }\n        if (a == 0 && b == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(a), new Nullable<long>(b));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : new Nullable<long>(max), min == 0 ? null : new Nullable<long>(min));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long a = 0;\n        long b = 0;\n        if (lst.Count > 0) {\n            a = lst[0];\n            b = lst[0];\n            for (int i = 1; i < lst.Count; i++) {\n                if (lst[i] > a) {\n                    a = lst[i];\n                }\n                if (lst[i] < b) {\n                    b = lst[i];\n                }\n            }\n        }\n        return Tuple.Create(a, b);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max == 0 ? null : max, min == 0 ? null : min);",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        if (max == 0 && min == 0) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(max), new Nullable<long>(min));",
    "        long min = Long.MaxValue;\n        long max = Long.MinValue;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n            else if (i > 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n        }\n        if (min == Long.MaxValue && max == Long.MinValue) {\n            return Tuple.Create((Nullable<long>)null, (Nullable<long>)null);\n        }\n        return Tuple.Create(new Nullable<long>(min), new Nullable<long>(max));",
    "        long max = 0;\n        long min = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i;\n                }\n            }\n            else if (i > 0) {\n                if (i < min) {\n                    min = i;\n                }\n            }\n        }\n        return Tuple.Create(max < 0 ? Nullable<long>() : Nullable<long>(max), min > 0 ? Nullable<long>(min) : Nullable<long>());",
    "        long min = 0;\n        long max = 0;\n        for (long i : lst) {\n            if (i < 0) {\n                if (min == 0) {\n                    min = i;\n                }\n                else {\n                    min = Math.min(min, i);\n                }\n            }\n            else if (i > 0) {\n                if (max == 0) {\n                    max = i;\n                }\n                else {\n                    max = Math.max(max, i);\n                }\n            }\n        }\n        return Tuple.Create(min == 0 ? null : min, max == 0 ? null : max);"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
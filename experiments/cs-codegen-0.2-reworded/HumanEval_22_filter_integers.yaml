name: HumanEval_22_filter_integers
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Filter given list of any csthon values only for integers\n \
  \   // >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,\
  \ (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new\
  \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
  \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static\
  \ List<long> FilterIntegers(List<object> values) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new\
  \ List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new\
  \ List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new\
  \ long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values, int min, int max) {\n        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                long val = (long) value;\n                if (val >= min\
    \ && val <= max) {\n                    result.Add(val);\n                }\n\
    \            }\n        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new\
    \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new\
    \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static\
    \ List<long> FilterIntegers(List<object> values, long min, long max) {\n     \
    \   List<long> result = new List<long>();\n        for (object value : values)\
    \ {\n            if (value.GetType() == type", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values, int startIndex) {\n        List<long> result = new List<long>();\n \
    \       for (int i = startIndex; i < values.Count; i++) {\n            if (values[i].GetType()\
    \ == typeof(long)) {\n                result.Add((long) values[i]);\n        \
    \    }\n        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new\
    \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new\
    \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static\
    \ List<long> FilterIntegers(List<object> values, int startIndex, int count) {\n\
    \        List<long> result = new List<long>();\n        for (int i = startIndex;\
    \ i < values.Count && i < startIndex + count; i++) {\n            if (values[i",
  "        List<long> result = new List<long>();\n        for (object value : values)\
    \ {\n            if (value.GetType() == typeof(long)) {\n                result.Add((long)\
    \ value);\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (object value : values) {\n        \
    \    if (value.GetType() == typeof(long)) {\n                result.Add((long)\
    \ value);\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (object value : values) {\n        \
    \    if (value.GetType() == typeof(long)) {\n                result.Add((long)\
    \ value);\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (object value : values) {\n        \
    \    if (value.GetType() == typeof(long)) {\n                result.Add((long)\
    \ value);\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (object value : values) {\n        \
    \    if (value.GetType() == typeof(long)) {\n                result.Add((long)\
    \ value);\n            }\n        }\n        return result;\n    }\n\n    // >>>\
    \ FilterIntegers((new List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    // >>>\
    \ FilterIntegers((new List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public\
    \ static List<long> FilterIntegers(List<object> values) {\n        List<long>\
    \ result = new List<long>();\n        for (object value : values) {\n        \
    \    if (value.GetType() == typeof(long)) {\n                result.Add((long)\
    \ value);\n            }\n        }\n        return result;\n    }\n\n    // >>>\
    \ FilterIntegers((new List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    // >>>\
    \ FilterIntegers((new List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public\
    \ static List<long> FilterIntegers(List<object> values) {\n        List<long>\
    \ result = new List<long>();\n        for (object value : values) {\n        \
    \    if (value.GetType() == typeof(long)) {\n                result.Add((long)\
    \ value);\n            }\n        }\n        return result;\n    }\n\n    // >>>\
    \ FilterIntegers", "        List<long> result = new List<long>();\n        for\
    \ (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values, int min, int max) {\n        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                long num = (long) value;\n                if (num >= min\
    \ && num <= max) {\n                    result.Add(num);\n                }\n\
    \            }\n        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new\
    \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new\
    \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static\
    \ List<long> FilterIntegers(List<object> values, long min, long max) {\n     \
    \   List<long> result = new List<long>();\n        for (object value : values)\
    \ {\n            if (value.GetType() == type", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values, int min, int max) {\n        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                long val = (long) value;\n                if (val >= min\
    \ && val <= max) {\n                    result.Add(val);\n                }\n\
    \            }\n        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new\
    \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new\
    \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static\
    \ List<long> FilterIntegers(List<object> values, long min, long max) {\n     \
    \   List<long> result = new List<long>();\n        for (object value : values)\
    \ {\n            if (value.GetType() == type", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()", "        List<long> result\
    \ = new List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (object value : values) {\n            if (value.GetType() == typeof(long))\
    \ {\n                result.Add((long) value);\n            }\n        }\n   \
    \     return result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new\
    \ object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    // >>> FilterIntegers((new List<object>(new object[]{1L,\
    \ 2L, 3L, \"abc\", new List<object>()})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))\n    public static List<long> FilterIntegers(List<object>\
    \ values) {\n        List<long> result = new List<long>();\n        for (object\
    \ value : values) {\n            if (value.GetType() == typeof(long)) {\n    \
    \            result.Add((long) value);\n            }\n        }\n        return\
    \ result;\n    }\n\n    // >>> FilterIntegers", "        List<long> result = new\
    \ List<long>();\n        for (object value : values) {\n            if (value.GetType()\
    \ == typeof(long)) {\n                result.Add((long) value);\n            }\n\
    \        }\n        return result;"]
stop_tokens:
- "\n    }\n"

{
  "name": "HumanEval_23_strlen",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull((\"\"))\n    // (False)\n    // >>> StringIsNotEmptyOrNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length >\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprlwy5kfy.cs(78,28): error CS1525: Invalid expression term '}'\n/tmp/tmprlwy5kfy.cs(78,28): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a hexadecimal number\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtsgngnu.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StringIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StringIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StringIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullOrEmpty(\"\")\n    // (False)\n    // >>> StringIsNotNullOrEmpty(\"abc\")\n    // (True)\n    public static bool StringIsNotNullOrEmpty(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StringIsNullOrEmpty(char[] str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullOrEmpty(\"\")\n    // (False)\n    // >>> StringIsNotNullOrEmpty(\"abc\")\n    // (True)\n    public static bool StringIsNotNullOrEmpty(char[] str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp39v9e4r5.cs(84,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StrIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullOrEmpty(\"\")\n    // (False)\n    // >>> StringIsNotNullOrEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotNullOrEmpty(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StrIsNullOrEmpty(char[] str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullOrEmpty(\"\")\n    // (False)\n    // >>> StringIsNotNullOrEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotNullOrEmpty(char[] str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2p1av62a.cs(84,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(sbyte[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(short[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ushort[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int32[] arr) {\n        return arr.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl690kuby.cs(87,26): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object value) {\n        return 1;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int value) {\n        return 1;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long value) {\n        return 1;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float value) {\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpavh0fmj2.cs(32,36): error CS0246: The type or namespace name 'IGenericArray' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(Object arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdqz8_jy0.cs(87,5): error CS1519: Invalid token '}' in class, struct, or interface member declaration\n/tmp/tmpdqz8_jy0.cs(94,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbzpfagc5.cs(73,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (18L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5, string str6) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfp92d15f.cs(60,74): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    // >>> StringLength((\"abc\" +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprdkmj7m3.cs(74,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull((\"\"))\n    // (False)\n    // >>> StringIsNotEmptyOrNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a valid integer\n    // >>> StringIsInteger(\"\")\n    // (False)\n    // >>> StringIsInteger(\"123\")\n    // (True)\n    public static bool StrIsInteger(string str) {\n        return Int64.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcsskhnzn.cs(78,22): error CS1001: Identifier expected\n/tmp/tmpcsskhnzn.cs(78,22): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary dict) {\n        return dict.Count;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object val) {\n        return val.Length;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericValue val) {\n        return val.Length;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpokn496au.cs(94,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.IndexOfAny(\"0123456789\") != -1;\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.IndexOfAny(\"0123456789.\") != -1;\n    }\n\n    // Return true if given string is a hexadecimal number\n    // >>> StringIsHex(\"\")\n    // (False)\n    // >>> StringIsHex(\"123\")\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6dbd4q4x.cs(86,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    // >>> StringLength((\"abc\" +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprdkmj7m3.cs(74,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end) {\n        return end - start;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, int start, int end, int step) {\n        return (end - start) / step + 1;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, int start, int end, int step, int length) {\n        return (end - start) / step + 1;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max) {\n        return (end - start) / step + 1;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max, int max\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnkd88cgd.cs(59,101): error CS1026: ) expected\n/tmp/tmpnkd88cgd.cs(59,101): error CS1002: ; expected\n/tmp/tmpnkd88cgd.cs(67,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    public static long Strlen(string str, int max) {\n        return Math.Min(max, str.Length);\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"), 10)\n    // (3L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"), 10)\n    // (10L)\n    public static long Strlen(string str, int max, int min) {\n        return Math.Max(min, Math.Min(max, str.Length));\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StringIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    public static bool StringIsEmpty(string str, int max) {\n        return Math.Min(max, str.Length) == 0;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"abc\", 10)\n    // (False)\n    // >>> StringIsEmpty(\"abcdefghijklmnopqrstuvwxyz\", 10)\n    // (False)\n    public static bool StringIsEmpty(string str, int max, int min) {\n        return Math.Max(min, Math.Min(max, str.Length)) == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StringIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6kiap632.cs(80,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr, int startIndex, int length) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr, int startIndex, int length) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr, int startIndex, int length) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5tbo9zd4.cs(90,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic tuple\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((1, 2, 3))\n    // (3L)\n    public static long ArrayLength(ITuple arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic tuple\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((1, 2, 3))\n    // (3L)\n    public static long ArrayLength(IEnumerable arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic tuple\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((1, 2, 3))\n    // (3L)\n    public static long ArrayLength(IEnumerator arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic tuple\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((1, 2, 3))\n    // (3\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphjn6_8_i.cs(93,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end) {\n        return end - start;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, int start, int end, int step) {\n        return (end - start) / step + 1;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, int start, int end, int step, int length) {\n        return (end - start) / step + 1;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max) {\n        return (end - start) / step + 1;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max, int mod\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpi6qnf0mc.cs(59,101): error CS1026: ) expected\n/tmp/tmpi6qnf0mc.cs(59,101): error CS1002: ; expected\n/tmp/tmpi6qnf0mc.cs(67,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a hexadecimal number\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtsgngnu.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull((\"\"))\n    // (False)\n    // >>> StringIsNotEmptyOrNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    public static bool StrIsEmptyOrNull(string str\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnx1z48sh.cs(77,51): error CS1026: ) expected\n/tmp/tmpnx1z48sh.cs(77,51): error CS1002: ; expected\n/tmp/tmpnx1z48sh.cs(85,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char[] str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char str[]) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(string str, int start, int length) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char str[], int start, int length) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char str[], int start) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(string str, int start) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char str[], int start, int length, int radix) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>>\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgze95obm.cs(32,39): error CS1552: Array type specifier, [], must appear before parameter name\n/tmp/tmpgze95obm.cs(50,39): error CS1552: Array type specifier, [], must appear before parameter name\n/tmp/tmpgze95obm.cs(59,39): error CS1552: Array type specifier, [], must appear before parameter name\n/tmp/tmpgze95obm.cs(77,39): error CS1552: Array type specifier, [], must appear before parameter name\n/tmp/tmpgze95obm.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(T[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<T> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<T> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<T> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0zz0slei.cs(93,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<object, object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpycxt57vj.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"abc\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\"))\n    // (9L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (12L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (15L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (18L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (18L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsh43ip59.cs(74,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull(\"\")\n    // (True)\n    // >>> StringIsEmptyOrNull(null)\n    // (True)\n    // >>> StringIsEmptyOrNull(\"abc\")\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return StrIsNull(str) || StrIsEmpty(str);\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull(\"\")\n    // (False)\n    // >>> StringIsNotEmptyOrNull(null)\n    // (False)\n    // >>> StringIsNotEmptyOrNull(\"abc\")\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return StrIsNotNull(str) && StrIsNotEmpty(str);\n    }\n\n    // Return true if given string is in given array\n    // >>> StringContains(\"abc\", \"a\")\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwgm4m82i.cs(86,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n    // (62L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n    // (62L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n    // \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n    // (124L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n    // \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n    // (124L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n    // \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8546vrkp.cs(60,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StrIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StrIsNullOrEmpty(object obj) {\n        return obj == null || obj.Length == 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StrIsNullOrEmpty(object obj, string str) {\n        return obj == null || obj.Length == 0 || str.Length == 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StrIsNullOrEmpty(object obj, string str, string str2) {\n        return obj == null || obj.Length == 0 || str.Length == 0 || str2.Length == 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwtguwz_9.cs(82,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength(1)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    // >>> ArrayLength(1.0f)\n    // (1L)\n    // >>> ArrayLength(1.0d)\n    // (1L)\n    // >>> ArrayLength(1L)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    // >>> ArrayLength(1.0f)\n    // (1L)\n    // >>> ArrayLength(1.0d)\n    // (1L)\n    // >>> ArrayLength(1L)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    // >>> ArrayLength(1.0f)\n    // (1L)\n    // >>> ArrayLength(1.0d)\n    // (1L)\n    public static\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2pe5pk2g.cs(82,5): error CS1519: Invalid token '}' in class, struct, or interface member declaration\n/tmp/tmp2pe5pk2g.cs(89,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a valid number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    // >>> StringIsNumber(\"123.45\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && Numerics.IsNumber(str);\n    }\n\n    // Return true if given string is a valid decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && Numerics.IsDecimal(str);\n    }\n\n    // Return true if given string is a valid hexadecimal number\n    // >>> StringIsHex(\"\")\n    // (False\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb4idcmt8.cs(86,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end) {\n        return end - start;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\"+\"def\"), 2, 4)\n    // (3L)\n    public static long Strlen(string str, int start, int end, int step) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"), 2, 4)\n    // (3L)\n    // >>> StringLength((\"abc\"+\"def\"), 2, 4, 1)\n    // (3L)\n    public static long Strlen(string str, int start, int end, int step, int count) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"), 2, 4, 1, 2)\n    // (3L)\n    public static long Strlen(string str, int start, int end, int step, int count, int offset) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"), 2, 4, 1, 2, 3)\n    // (3L)\n    public static long Strlen(string str, int start, int end, int step, int count, int offset, int step2) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"), 2, 4, 1, 2, 3, 4)\n    // (3L)\n    public static long Strlen(string str, int start, int end, int step, int count, int offset, int step2, int step3) {\n        return (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw9yp5uho.cs(63,17): error CS1525: Invalid expression term '}'\n/tmp/tmpw9yp5uho.cs(63,17): error CS1026: ) expected\n/tmp/tmpw9yp5uho.cs(63,17): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is numeric\n    // >>> StringIsNumeric(\"\")\n    // (False)\n    // >>> StringIsNumeric(\"123\")\n    // (True)\n    public static bool StrIsNumeric(string str) {\n        return str.Length > 0 && Numeric.TryParse(str, out double d);\n    }\n\n    // Return true if given string is not numeric\n    // >>> StringIsNotNumeric(\"\")\n    // (True)\n    // >>> StringIsNotNumeric(\"123\")\n    // (False)\n    public static bool StrIsNotNumeric(string str) {\n        return !StrIsNumeric(str);\n    }\n\n    // Return true if given string is numeric\n    // >>> StringIsNumeric(\"123\")\n    // (True)\n    // >>> StringIsNumeric(\"123.45\")\n    // (True)\n    // >>> StringIsNumeric(\"abc\")\n    // (False)\n    public static bool StrIsNumeric(string str, int rad\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzi1my0oa.cs(79,56): error CS1026: ) expected\n/tmp/tmpzi1my0oa.cs(79,56): error CS1002: ; expected\n/tmp/tmpzi1my0oa.cs(87,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<char> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmphvaqs1fp.cs(93,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.ToLower() == \"0\" || str.ToLower().Contains(\".\") || str.ToLower().Contains(\"e\");\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.ToLower().Contains(\".\") || str.ToLower().Contains(\"e\");\n    }\n\n    // Return true if given string is a hexadecimal number\n    // >>> StringIsHex(\"\")\n    // (False)\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc4ln4fqh.cs(85,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(T[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(List<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(Dictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa7r_07h5.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<object, object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerator<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1onbcid8.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end) {\n        return end - start;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, int start, int end, int step) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, int start, int end, int step, int length) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max, int mod) {\n        return (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjvbuvny9.cs(60,17): error CS1525: Invalid expression term '}'\n/tmp/tmpjvbuvny9.cs(60,17): error CS1026: ) expected\n/tmp/tmpjvbuvny9.cs(60,17): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpbzpfagc5.cs(73,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end, int step) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end, int step, int string) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end, int step, int string, int start1) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end, int step, int string, int start1, int length1) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo0y5s9dr.cs(50,89): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(50,89): error CS1003: Syntax error, ',' expected\n/tmp/tmpo0y5s9dr.cs(50,95): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(59,89): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(59,89): error CS1003: Syntax error, ',' expected\n/tmp/tmpo0y5s9dr.cs(59,95): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(68,89): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(68,89): error CS1003: Syntax error, ',' expected\n/tmp/tmpo0y5s9dr.cs(68,95): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(81,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(Array.CreateInstance(int, 0))\n    // (0L)\n    // >>> ArrayLength(Array.CreateInstance(int, 1))\n    // (1L)\n    // >>> ArrayLength(Array.CreateInstance(int, 2))\n    // (2L)\n    // >>> ArrayLength(Array.CreateInstance(int, 3))\n    // (3L)\n    public static long ArrayLength(array<int>^ arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(List<int>::CreateInstance(0))\n    // (0L)\n    // >>> ArrayLength(List<int>::CreateInstance(1))\n    // (1L)\n    // >>> ArrayLength(List<int>::CreateInstance(2))\n    // (2L)\n    // >>> ArrayLength(List<int>::CreateInstance(3))\n    // (3L)\n    public static long ArrayLength(IEnumerable<int>^ arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic list\n    // >>> List<int>::CreateInstance(0).Count\n    // (0L)\n    // >>> List<int>::CreateInstance(1).Count\n    // (1L)\n    // >>> List<int>::CreateInstance(2).Count\n    // (2L)\n    // >>> List<int>::CreateInstance(3).Count\n    // (3L)\n    public static long ListLength(List<int>^ list) {\n        return list.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> Dictionary<int, int>::CreateInstance(0).Count\n    // (0L)\n    // >>> Dictionary<int, int>::CreateInstance(1).Count\n    // (1L)\n    // >>> Dictionary<int, int>::CreateInstance(2).Count\n    // (2L)\n    // >>> Dictionary<int, int>::CreateInstance(3).Count\n    // (3L)\n    public static long DictionaryLength(Dictionary<int, int>^\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn43fflpk.cs(27,46): error CS1001: Identifier expected\n/tmp/tmpn43fflpk.cs(27,46): error CS1003: Syntax error, ',' expected\n/tmp/tmpn43fflpk.cs(27,48): error CS1003: Syntax error, ',' expected\n/tmp/tmpn43fflpk.cs(27,51): error CS1001: Identifier expected\n/tmp/tmpn43fflpk.cs(40,52): error CS1001: Identifier expected\n/tmp/tmpn43fflpk.cs(40,52): error CS1003: Syntax error, ',' expected\n/tmp/tmpn43fflpk.cs(40,54): error CS1003: Syntax error, ',' expected\n/tmp/tmpn43fflpk.cs(40,57): error CS1001: Identifier expected\n/tmp/tmpn43fflpk.cs(53,44): error CS1001: Identifier expected\n/tmp/tmpn43fflpk.cs(53,44): error CS1003: Syntax error, ',' expected\n/tmp/tmpn43fflpk.cs(53,46): error CS1003: Syntax error, ',' expected\n/tmp/tmpn43fflpk.cs(53,50): error CS1001: Identifier expected\n/tmp/tmpn43fflpk.cs(66,61): error CS1001: Identifier expected\n/tmp/tmpn43fflpk.cs(66,61): error CS1003: Syntax error, ',' expected\n/tmp/tmpn43fflpk.cs(66,62): error CS1026: ) expected\n/tmp/tmpn43fflpk.cs(66,62): error CS1002: ; expected\n/tmp/tmpn43fflpk.cs(74,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(Array.CreateInstance(int, 0))\n    // (0L)\n    // >>> ArrayLength(Array.CreateInstance(int, 1))\n    // (1L)\n    // >>> ArrayLength(Array.CreateInstance(int, 2))\n    // (2L)\n    // >>> ArrayLength(Array.CreateInstance(int, 3))\n    // (3L)\n    // >>> ArrayLength(Array.CreateInstance(int, 4))\n    // (4L)\n    // >>> ArrayLength(Array.CreateInstance(int, 5))\n    // (5L)\n    public static long ArrayLength(array<int>^ arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray)\n    // (3L)\n    public static long GenericArrayLength(IEnumerable<int>^ arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray)\n    // (3L)\n    public static long GenericArrayLength(IEnumerable<object>^ arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray)\n    // (3L)\n    public static long GenericArrayLength(IEnumerable<string>^ arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray)\n    // (3L)\n    public static long GenericArrayLength(IEnumerable<int>^ arr, int startIndex, int count) {\n        return arr.Skip(startIndex).Take(count).Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray)\n    // (3L)\n    public static long GenericArrayLength(IEnumerable<object>^ arr, int startIndex, int count) {\n        return arr.Skip(startIndex).Take(count).Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray)\n    // (3\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqxntik3o.cs(31,46): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(31,46): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(31,48): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(31,51): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(38,59): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(38,59): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(38,61): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(38,64): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(45,62): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(45,62): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(45,64): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(45,67): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(52,62): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(52,62): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(52,64): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(52,67): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(59,59): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(59,59): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(59,61): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(59,64): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(66,62): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(66,62): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(66,64): error CS1003: Syntax error, ',' expected\n/tmp/tmpqxntik3o.cs(66,67): error CS1001: Identifier expected\n/tmp/tmpqxntik3o.cs(80,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<int> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl4suvtdj.cs(93,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull((\"\"))\n    // (False)\n    // >>> StringIsNotEmptyOrNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is in given array\n    // >>> StringContains((\"abc\", \"abc\"), (\"abc\", \"abc\"))\n    // (True)\n    // >>> StringContains((\"abc\", \"abc\"), (\"abc\", \"def\"))\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfi78_z1y.cs(84,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary dict) {\n        return dict.Count;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength(1)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    // >>> ArrayLength(1.0f)\n    // (1L)\n    // >>> ArrayLength(1.0d)\n    // (1L)\n    // >>> ArrayLength(1L)\n    // (1L)\n    // >>> ArrayLength(1.0d)\n    // (1L)\n    // >>> ArrayLength(1.0f)\n    // (1L)\n    // >>> ArrayLength(1)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    public static long ArrayLength(object val) {\n        if (val == null)\n            return 0;\n        if (val.GetType().IsValueType)\n            return 1;\n        if (val.GetType().IsArray)\n            return ((object[\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjs5rrxes.cs(81,22): error CS1525: Invalid expression term 'object'\n/tmp/tmpjs5rrxes.cs(81,29): error CS1003: Syntax error, ']' expected\n/tmp/tmpjs5rrxes.cs(81,29): error CS1026: ) expected\n/tmp/tmpjs5rrxes.cs(81,29): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\"))\n    // (9L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (12L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (15L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (18L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\" + \"abc\"))\n    // (21L)\n    public static long Strlen7(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>>\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgaezp9n_.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(Array.CreateInstance(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(Array.CreateInstance(typeof(int), 3))\n    // (3L)\n    public static long ArrayLength(array<int> arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 3))\n    // (3L)\n    public static long GenericArrayLength(IEnumerable<int> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 3))\n    // (3L)\n    public static long GenericArrayLength(IEnumerator<int> arr) {\n        int count = 0;\n        while (arr.MoveNext()) {\n            count++;\n        }\n        return count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 3))\n    // (3L)\n    public static long GenericArrayLength(IList<int> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 3))\n    // (3L)\n    public static long GenericArrayLength(ICollection<int> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray.CreateInstance(typeof(int), 0))\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2xpdz071.cs(77,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(sbyte[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(short[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ushort[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ulong[] arr) {\n        return arr.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5z004izy.cs(87,26): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end) {\n        return end - start;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, int start, int end, int step) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, int start, int end, int step, int length) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, int start, int end, int step, int length, int maxLength) {\n        return (end - start) / step;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen(string str, int start, int end, int step, int length, int maxLength, int maxLength2) {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1mhiyz9d.cs(59,24): error CS0161: 'Problem.Strlen(string, int, int, int, int, int, int)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end, int step) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end, int step, int string) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end, int step, int string, int start1) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length, int end, int step, int string, int start1, int length1) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo0y5s9dr.cs(50,89): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(50,89): error CS1003: Syntax error, ',' expected\n/tmp/tmpo0y5s9dr.cs(50,95): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(59,89): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(59,89): error CS1003: Syntax error, ',' expected\n/tmp/tmpo0y5s9dr.cs(59,95): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(68,89): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(68,89): error CS1003: Syntax error, ',' expected\n/tmp/tmpo0y5s9dr.cs(68,95): error CS1001: Identifier expected\n/tmp/tmpo0y5s9dr.cs(81,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic collection\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic enumerator\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerator arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object val) {\n        return val.Length;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int val\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_c2wdbbr.cs(86,43): error CS1026: ) expected\n/tmp/tmp_c2wdbbr.cs(86,43): error CS1002: ; expected\n/tmp/tmp_c2wdbbr.cs(94,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    public static long StringLength(string str) {\n        return str.Length;\n    }\n\n    // Return a string of given length\n    // >>> StringOfLength(0, \"\")\n    // \"\"\n    // >>> StringOfLength(3, \"abc\")\n    // \"abc\"\n    // >>> StringOfLength(26, \"abcdefghijklmnopqrstuvwxyz\")\n    // \"abcdefghijklmnopqrstuvwxyz\"\n    public static string StringOfLength(int length, string str) {\n        return String.Repeat(str, length);\n    }\n\n    // Return a string of given length\n    // >>> StringOfLength(0, \"abc\")\n    // \"abc\"\n    // >>> StringOfLength(3, \"abcdefghijklmnopqrstuvwxyz\")\n    // \"abcdefghijklmnopqrstuvwxyz\"\n    public static string StringOfLength(int length, string str) {\n        return String.Repeat(str, length);\n    }\n\n    // Return a string of given length\n    // >>> StringOfLength(0, \"abc\")\n    // \"abc\"\n    // >>> StringOfLength(3, \"abcdefghijklmnopqrstuvwxyz\")\n    // \"abcdefghijklmnopqrstuvwxyz\"\n    public static string StringOfLength(int length, string str) {\n        return String.Repeat(str, length);\n    }\n\n    // Return a string of given length\n    // >>> StringOfLength(0, \"abc\")\n    // \"abc\"\n    // >>> StringOfLength(3, \"abcdefghijklmnopqrstuvwxyz\")\n    // \"abcdefghijklmnopqrstuvwxyz\"\n    public static string StringOfLength(int length, string str) {\n        return String.Repeat(str, length);\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpr9guclhe.cs(43,26): error CS0111: Type 'Problem' already defines a member called 'StringOfLength' with the same parameter types\n/tmp/tmpr9guclhe.cs(52,26): error CS0111: Type 'Problem' already defines a member called 'StringOfLength' with the same parameter types\n/tmp/tmpr9guclhe.cs(61,26): error CS0111: Type 'Problem' already defines a member called 'StringOfLength' with the same parameter types\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n    // (62L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n    // (62L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJ\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprwuahyx_.cs(47,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(T[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(List<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(Dictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptaace0ji.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull((\"\"))\n    // (False)\n    // >>> StringIsNotEmptyOrNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length >\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprlwy5kfy.cs(78,28): error CS1525: Invalid expression term '}'\n/tmp/tmprlwy5kfy.cs(78,28): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(Array.CreateInstance(int, 0))\n    // (0L)\n    // >>> ArrayLength(Array.CreateInstance(int, 1))\n    // (1L)\n    // >>> ArrayLength(Array.CreateInstance(int, 2))\n    // (2L)\n    public static long ArrayLength(array<int>^ arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(List<int>::CreateInstance(10))\n    // (10L)\n    public static long ArrayLength(IEnumerable<int>^ arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(List<int>::CreateInstance(10))\n    // (10L)\n    public static long ArrayLength(IEnumerator<int>^ arr) {\n        int count = 0;\n        while (arr->MoveNext()) {\n            count++;\n        }\n        return count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(List<int>::CreateInstance(10))\n    // (10L)\n    public static long ArrayLength(IList<int>^ arr) {\n        return arr->Count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(List<int>::CreateInstance(10))\n    // (10L)\n    public static long ArrayLength(ICollection<int>^ arr) {\n        return arr->Count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(List<int>::CreateInstance(10))\n    // (10L)\n    public static long ArrayLength(IList<int>^ arr) {\n        return arr->Count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(List<int>::CreateInstance(10))\n    // (10L)\n    public static long ArrayLength(ICollection<int>^ arr) {\n        return arr->Count;\n    }\n\n    // Return length of given generic array\n    // >>>\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqq24seju.cs(25,46): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(25,46): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(25,48): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(25,51): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(32,52): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(32,52): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(32,54): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(32,57): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(39,52): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(39,52): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(39,54): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(39,57): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(50,46): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(50,46): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(50,48): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(50,51): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(57,52): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(57,52): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(57,54): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(57,57): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(64,46): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(64,46): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(64,48): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(64,51): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(71,52): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(71,52): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(71,54): error CS1003: Syntax error, ',' expected\n/tmp/tmpqq24seju.cs(71,57): error CS1001: Identifier expected\n/tmp/tmpqq24seju.cs(84,1): error CS1022: Type or namespace definition, or end-of-file e",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(sbyte[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(short[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ushort[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int32[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(uint32[] arr) {\n        return arr.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp23uiadx3.cs(87,20): error CS1001: Identifier expected\n/tmp/tmp23uiadx3.cs(87,20): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    // >>> StringLength((\"abc\" +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprdkmj7m3.cs(74,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr, int index) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr, int index, int count) {\n        return arr.Count;\n    }\n\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf2imx3j3.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return the number of times the given character appears in the given string\n    // >>> StringCount(\"\", 'a')\n    // (0L)\n    // >>> StringCount(\"abc\", 'a')\n    // (1L)\n    // >>> StringCount(\"abc\", 'b')\n    // (1L)\n    // >>> StringCount(\"abc\", 'c')\n    // (1L)\n    // >>> StringCount(\"abc\", 'd')\n    // (0L)\n    public static long Strcount(string str, char ch) {\n        return str.Count(ch);\n    }\n\n    // Return the first index of the given character in the given string\n    // >>> StringIndexOf(\"\", 'a')\n    // (-1L)\n    // >>> StringIndexOf(\"abc\", 'a')\n    // (0L)\n    // >>> StringIndexOf(\"abc\", 'b')\n    // (1L)\n    // >>> StringIndexOf(\"abc\", 'c')\n    // (2L)\n    // >>> StringIndexOf(\"abc\", 'd')\n    // (-1L)\n    public static long Strindexof(string str, char ch) {\n        return str.IndexOf(ch);\n    }\n\n    // Return the last index of the given character in the given string\n    // >>> StringLastIndexOf(\"\", 'a')\n    // (-1L)\n    // >>> StringLastIndexOf(\"abc\", 'a')\n    // (0L)\n    // >>> StringLastIndexOf(\"abc\", 'b')\n    // (1L)\n    // >>> StringLastIndexOf(\"abc\", 'c')\n    // (2L)\n    // >>> StringLastIndexOf(\"abc\", 'd')\n    // (-1L)\n    public static long Strlastindexof(string str, char ch) {\n        return str.LastIndexOf(ch);\n    }\n\n    // Return a string that is the concatenation of the given strings\n    // >>> StringConcat(\"\", \"\", \"\")\n    // (\"\")\n    // >>> StringConcat(\"a\", \"\", \"\")\n    // (\"a\")\n    // >>> StringConcat(\"\", \"b\", \"\")\n    // (\"b\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpskz1uvlj.cs(77,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty((\"\"))\n    // (True)\n    // >>> StringIsNullOrEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullOrEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotNullOrEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotNullOrEmpty(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty((\"\"))\n    // (True)\n    // >>> StringIsNullOrEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsNullOrEmpty(char[] str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullOrEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotNullOrEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotNullOrEmpty(char[] str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty((\"\"))\n    // (True)\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5xnzsui2.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsNullOrEmpty((\"\"))\n    // (True)\n    // >>> StringIsNullOrEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotNullOrEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotNullOrEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotNullOrEmpty(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is in given list\n    // >>> StringContains(\"abc\", [\"a\", \"b\", \"c\"])\n    // (True)\n    // >>> StringContains(\"abc\", [\"a\", \"b\", \"d\"])\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3alvsgmn.cs(84,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StringIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StringIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StringIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StringIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a valid number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StringIsNumber(string str) {\n        return str.Length > 0 && Numerics.IsNumber(str);\n    }\n\n    // Return true if given string is a valid decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StringIsDecimal(string str) {\n        return str.Length > 0 && Numerics.IsDecimal(str);\n    }\n\n    // Return true if given string is a valid hexadecimal number\n    // >>> StringIsHex(\"\")\n    // (False)\n    // >>> StringIsHex(\"123\")\n    // (False)\n    // >>> StringIsHex\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqrtsmajg.cs(87,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(array<object> arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(List<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic array\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9_ckqwlh.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(Array.CreateInstance(Int32, 0))\n    // (0L)\n    // >>> ArrayLength(Array.CreateInstance(Int32, 1))\n    // (1L)\n    // >>> ArrayLength(Array.CreateInstance(Int32, 2))\n    // (2L)\n    public static long ArrayLength(array<int>^ arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray)\n    // (0L)\n    // >>> ArrayLength(GenericArray(1))\n    // (1L)\n    // >>> ArrayLength(GenericArray(2))\n    // (2L)\n    public static long GenericArrayLength(IEnumerable<int>^ arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray(1, 2))\n    // (2L)\n    public static long GenericArrayLength(IEnumerable<int>^ arr, int start, int length) {\n        return arr.Count(i => i >= start && i < start + length);\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray(1, 2, 3))\n    // (3L)\n    public static long GenericArrayLength(IEnumerable<int>^ arr, int start, int length, int step) {\n        return arr.Count(i => i >= start && i < start + length && i % step == 0);\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray(1, 2, 3, 4))\n    // (4L)\n    public static long GenericArrayLength(IEnumerable<int>^ arr, int start, int length, int step, int end) {\n        return arr.Count(i => i >= start && i < start + length && i % step == 0 && i <= end);\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArray(1, 2, 3, 4, 5))\n    // (5L)\n    public static long Generic\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz1uhhrta.cs(25,46): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(25,46): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(25,48): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(25,51): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(36,59): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(36,59): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(36,61): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(36,64): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(43,59): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(43,59): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(43,61): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(43,64): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(50,59): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(50,59): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(50,61): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(50,64): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(57,59): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(57,59): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(57,61): error CS1003: Syntax error, ',' expected\n/tmp/tmpz1uhhrta.cs(57,64): error CS1001: Identifier expected\n/tmp/tmpz1uhhrta.cs(64,31): error CS1002: ; expected\n/tmp/tmpz1uhhrta.cs(72,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber((\"\"))\n    // (False)\n    // >>> StringIsNumber((\"123\"))\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.ToLower() == \"0\" || str.ToLower().Contains(\"-\") || str.ToLower().Contains(\".\") || str.ToLower().Contains(\"e\");\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal((\"\"))\n    // (False)\n    // >>> StringIsDecimal((\"123\"))\n    // (False)\n    // >>> StringIsDecimal((\"123.45\"))\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.ToLower().Contains(\".\") || str.ToLower().Contains(\"e\");\n    }\n\n    // Return true if given string is a hexadecimal number\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl0ceo351.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.ToCharArray().All(x => x >= '0' && x <= '9');\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.ToCharArray().All(x => x >= '0' && x <= '9');\n    }\n\n    // Return true if given string is a hexadecimal number\n    // >>> StringIsHex(\"\")\n    // (False)\n    // >>> String\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp03b7956m.cs(85,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic tuple\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ITuple arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value type\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IValueType arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value type\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value type\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc39fki2h.cs(86,35): error CS1002: ; expected\n/tmp/tmpc39fki2h.cs(94,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.ToCharArray().All(x => x >= '0' && x <= '9');\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.ToCharArray().All(x => x >= '0' && x <= '9');\n    }\n\n    // Return true if given string is a hexadecimal number\n    // >>> StringIsHex(\"\")\n    // (False)\n    // >>> String\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp03b7956m.cs(85,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    public static long StringLength(string str) {\n        return str.Length;\n    }\n\n    // Return a string of given length\n    // >>> StringOfLength(0, \"\")\n    // (0L, \"\")\n    // >>> StringOfLength(3, \"abc\")\n    // (3L, \"abc\")\n    // >>> StringOfLength(26, \"abcdefghijklmnopqrstuvwxyz\")\n    // (26L, \"abcdefghijklmnopqrstuvwxyz\")\n    public static string StringOfLength(int length, string str) {\n        return String.Repeat(str, length);\n    }\n\n    // Return a string of given length\n    // >>> StringOfLength(0, \"abc\")\n    // (3L, \"abc\")\n    // >>> StringOfLength(3, \"abcdefghijklmnopqrstuvwxyz\")\n    // (26L, \"abcdefghijklmnopqrstuvwxyz\")\n    public static string StringOfLength(int length, string str) {\n        return String.Repeat(str, length);\n    }\n\n    // Return a string of given length\n    // >>> StringOfLength(0, \"abc\")\n    // (3L, \"abc\")\n    // >>> StringOfLength(3, \"abcdefghijklmnopqrstuvwxyz\")\n    // (26L, \"abcdefghijklmnopqrstuvwxyz\")\n    public static string StringOfLength(int length, char ch) {\n        return String.Repeat(ch, length);\n    }\n\n    // Return a string of given length\n    // >>> StringOfLength(0, 'a')\n    // (1L, 'a')\n    // >>> StringOfLength(3, 'abcdefghijklmnopqrstuvwxyz')\n    // (26L, 'abcdefghijklmn\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqyr0i1t3.cs(68,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull(\"\")\n    // (True)\n    // >>> StringIsEmptyOrNull(null)\n    // (True)\n    // >>> StringIsEmptyOrNull(\"abc\")\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return StrIsNull(str) || StrIsEmpty(str);\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull(\"\")\n    // (False)\n    // >>> StringIsNotEmptyOrNull(null)\n    // (False)\n    // >>> StringIsNotEmptyOrNull(\"abc\")\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return StrIsNotNull(str) && StrIsNotEmpty(str);\n    }\n\n    // Return true if given string is in given array\n    // >>> StringContains(\"abc\", \"a\")\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwgm4m82i.cs(86,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull((\"\"))\n    // (False)\n    // >>> StringIsNotEmptyOrNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is in given array\n    // >>> StringContains(\"abc\", { \"a\", \"b\", \"c\" })\n    // (True)\n    // >>> StringContains(\"abc\", { \"a\", \"b\", \"d\" })\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8ziihwyx.cs(84,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull(\"\")\n    // (True)\n    // >>> StringIsEmptyOrNull(null)\n    // (True)\n    // >>> StringIsEmptyOrNull(\"abc\")\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull(\"\")\n    // (False)\n    // >>> StringIsNotEmptyOrNull(null)\n    // (False)\n    // >>> StringIsNotEmptyOrNull(\"abc\")\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc3z7xby7.cs(88,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull(\"\")\n    // (True)\n    // >>> StringIsEmptyOrNull(null)\n    // (True)\n    // >>> StringIsEmptyOrNull(\"abc\")\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull(\"\")\n    // (False)\n    // >>> StringIsNotEmptyOrNull(null)\n    // (False)\n    // >>> StringIsNotEmptyOrNull(\"abc\")\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is in given collection\n    // >>> StringContains(\"abc\", {\"abc\", \"def\", \"ghi\"})\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvke6ddtw.cs(86,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a hexadecimal number\n    // >>> StringIsHex(\"\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp3qccg8r.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull(\"\")\n    // (True)\n    // >>> StringIsEmptyOrNull(null)\n    // (True)\n    // >>> StringIsEmptyOrNull(\"abc\")\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull(\"\")\n    // (False)\n    // >>> StringIsNotEmptyOrNull(null)\n    // (False)\n    // >>> StringIsNotEmptyOrNull(\"abc\")\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a valid integer\n    // >>> StringIsInteger(\"\")\n    // (False)\n    // >>> StringIsInteger(\"123\")\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjekbo0bf.cs(87,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int length) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, int start, int length, int end) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, int start, int length, int end, int step) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, int start, int length, int end, int step, int count) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen(string str, int start, int length, int end, int step, int count, int charCount) {\n        return str.Length;\n    }\n\n    // Return length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpr2rq9_5p.cs(71,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    // >>> StringLength((\"abc\" +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprdkmj7m3.cs(74,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjdyhmpqa.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull(\"\")\n    // (True)\n    // >>> StringIsEmptyOrNull(null)\n    // (True)\n    // >>> StringIsEmptyOrNull(\"abc\")\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull(\"\")\n    // (False)\n    // >>> StringIsNotEmptyOrNull(null)\n    // (False)\n    // >>> StringIsNotEmptyOrNull(\"abc\")\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is in given array\n    // >>> StringContains(\"abc\", \"a\")\n    // (True)\n    // >>> StringCont\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsgbjti1d.cs(87,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjdyhmpqa.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    // >>> StringIsNumber(\"abc\")\n    // (False)\n    public static bool StrIsNumber(string str) {\n        return String.IsDigit(str, 0, str.Length);\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"123\")\n    // (True)\n    // >>> StringIsDecimal(\"abc\")\n    // (False)\n    public static bool StrIsDecimal(string str) {\n        return String.IsDigit(str, 0, str.Length) && str.IndexOf('.') != -1;\n    }\n\n    // Return true if given string is a hexadecimal number\n    // >>> StringIsHex(\"123\")\n    // (False)\n    // >>> StringIsHex(\"0x123\")\n    // (True)\n    public static bool StrIsH\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5eaz96kz.cs(77,30): error CS1002: ; expected\n/tmp/tmp5eaz96kz.cs(85,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(Object[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return the first character of given string\n    // >>> FirstChar(\"\")\n    // (0)\n    // >>> FirstChar(\"abc\")\n    // (a)\n    public static char FirstChar(string str) {\n        return str[0];\n    }\n\n    // Return the last character of given string\n    // >>> LastChar(\"\")\n    // (0)\n    // >>> LastChar(\"abc\")\n    // (c)\n    public static char LastChar(string str) {\n        return str[str.Length - 1];\n    }\n\n    // Return the number of times a character appears in given string\n    // >>> CountChar(\"\", 'a')\n    // (0L)\n    // >>> CountChar(\"abc\", 'a')\n    // (1L)\n    // >>> CountChar(\"abc\", 'b')\n    // (1L)\n    // >>> CountChar(\"abc\", 'c')\n    // (1L)\n    public static long CountChar(string str, char ch) {\n        return str.Count(ch);\n    }\n\n    // Return the number of times a substring appears in given string\n    // >>> CountSubstring(\"\", \"\")\n    // (0L)\n    // >>> CountSubstring(\"abc\", \"\")\n    // (0L)\n    // >>> CountSubstring(\"abc\", \"a\")\n    // (1L)\n    // >>> CountSubstring(\"abc\", \"ab\")\n    // (1L)\n    // >>> CountSubstring(\"abc\", \"abc\")\n    // (1L)\n    public static long CountSubstring(string str, string sub) {\n        return str.IndexOf(sub) + 1;\n    }\n\n    // Return the number of times a substring appears in given string\n    // >>> CountSubstring(\"\", \"\")\n    // (0L)\n    // >>> CountSubstring(\"abc\", \"\")\n    // (0L)\n    // >>> CountSubstring(\"abc\", \"a\")\n    // (1L)\n    // >>> CountSubstring(\"abc\", \"ab\")\n    // (1L)\n    // >>> CountSubstring(\"abc\", \"abc\")\n    // (1L)\n    public static long\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6dp17_g0.cs(76,5): error CS1519: Invalid token '}' in class, struct, or interface member declaration\n/tmp/tmp6dp17_g0.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(T[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<T> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<T> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<T> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpubinuheo.cs(93,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(Array.CreateInstance(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(Array.CreateInstance(typeof(int), 3))\n    // (3L)\n    public static long ArrayLength(array<int> arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 3))\n    // (3L)\n    public static long GenericArrayLength(IEnumerable<int> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 3))\n    // (3L)\n    public static long GenericArrayLength(IEnumerator<int> arr) {\n        int count = 0;\n        while (arr.MoveNext()) {\n            count++;\n        }\n        return count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 3))\n    // (3L)\n    public static long GenericArrayLength(IList<int> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 3))\n    // (3L)\n    public static long GenericArrayLength(ICollection<int> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(GenericArrayCreate(typeof(int), 0))\n    // (0L)\n    // >>> ArrayLength(GenericArrayCreate(typeof(\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpoeohe_zm.cs(78,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr, int index) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr, int index) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr, int index, int count) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp1pwa2ob.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty((\"\"))\n    // (True)\n    // >>> StringIsNullOrEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullAndNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotNullAndNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotNullAndNotEmpty(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty((\"\"))\n    // (True)\n    // >>> StringIsNullOrEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullAndNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotNullAndNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotNullAndNotEmpty(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty((\"\"))\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprgnk0xx9.cs(82,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a hexadecimal number\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtsgngnu.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(T[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(List<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(Dictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic IEnumerable\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<string> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic IEnumerator\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerator<string> arr) {\n        return arr.Count;\n    }\n\n    //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgd594iev.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull(\"\")\n    // (True)\n    // >>> StringIsEmptyOrNull(null)\n    // (True)\n    // >>> StringIsEmptyOrNull(\"abc\")\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull(\"\")\n    // (False)\n    // >>> StringIsNotEmptyOrNull(null)\n    // (False)\n    // >>> StringIsNotEmptyOrNull(\"abc\")\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a valid integer\n    // >>> StringIsInteger(\"\")\n    // (False)\n    // >>> StringIsInteger(\"123\")\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjekbo0bf.cs(87,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    public static long StringLength(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyz\"))\n    // (26L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n    // (62L)\n    public static long StringLength2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\n    // (62L)\n    // >>> StringLength((\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJK\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvy1j5ivf.cs(47,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18L)\n    // >>> StringLength((\"abc\" +\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprdkmj7m3.cs(74,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(string[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(Object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292884,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull(\"\")\n    // (True)\n    // >>> StringIsEmptyOrNull(null)\n    // (True)\n    // >>> StringIsEmptyOrNull(\"abc\")\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull(\"\")\n    // (False)\n    // >>> StringIsNotEmptyOrNull(null)\n    // (False)\n    // >>> StringIsNotEmptyOrNull(\"abc\")\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is in given array\n    // >>> StringContains(\"abc\", \"a\")\n    // (True)\n    // >>> StringCont\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsgbjti1d.cs(87,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"def\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\"+\"def\"+\"ghi\"))\n    // (9L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"+\"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\"+\"def\"+\"ghi\"+\"jkl\"))\n    // (12L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"+\"ghi\"+\"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\"+\"def\"+\"ghi\"+\"jkl\"+\"mno\"))\n    // (15L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"+\"ghi\"+\"jkl\"+\"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\"+\"def\"+\"ghi\"+\"jkl\"+\"mno\"+\"pqr\"))\n    // (18L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"+\"def\"+\"ghi\"+\"jkl\"+\"mno\"+\"pqr\"))\n    // (18L)\n    // >>> StringLength((\"abc\"+\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp8h5wimlx.cs(74,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<string, object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<object, object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpws0h59lw.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a hexadecimal number\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtsgngnu.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char[] str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char chr) {\n        return 1;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char chr[]) {\n        return chr.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char chr[], int start, int length) {\n        return length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(String str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(String str, int start, int length) {\n        return length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public static long Strlen(char chr, int start, int length) {\n        return length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"\"))\n    // (0L)\n    public\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyfjy65r5.cs(41,39): error CS1552: Array type specifier, [], must appear before parameter name\n/tmp/tmpyfjy65r5.cs(50,39): error CS1552: Array type specifier, [], must appear before parameter name\n/tmp/tmpyfjy65r5.cs(87,5): error CS1519: Invalid token '}' in class, struct, or interface member declaration\n/tmp/tmpyfjy65r5.cs(94,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    // >>> StringIsNull((\"\"))\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    // >>> StringIsNotNull((\"\"))\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull((\"abc\"))\n    // (True)\n    // >>> StringIsNotEmptyOrNull((\"\"))\n    // (False)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    // >>> StringIsNumber(\"abc\")\n    // (False)\n    public static bool StrIsNumber(string str) {\n        return str.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnfk9756y.cs(78,26): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic tuple\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ITuple arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value type\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IValueType arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value type\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value type\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpc39fki2h.cs(86,35): error CS1002: ; expected\n/tmp/tmpc39fki2h.cs(94,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"\"))\n    // (4L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"\"))\n    // (4L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"\"))\n    // (4L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"\"))\n    // (4L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"\"))\n    // (4L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"\"))\n    // (4L)\n    public static long Strlen7(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\"+\"\"))\n    // (4L)\n    public static long Strlen8(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1g2_cal4.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull(\"\")\n    // (False)\n    // >>> StringIsNull(null)\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull(\"\")\n    // (True)\n    // >>> StringIsNotNull(null)\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.IndexOfAny(\"0123456789\") != -1;\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.IndexOfAny(\"0123456789.\") != -1;\n    }\n\n    // Return true if given string is a hexadecimal number\n    // >>> StringIsHex(\"\")\n    // (False)\n    // >>> StringIsHex(\"123\")\n    // (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6dbd4q4x.cs(86,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph5n16q9f.cs(95,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((null))\n    // (True)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((null))\n    // (False)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a decimal number\n    // >>> StringIsDecimal(\"\")\n    // (False)\n    // >>> StringIsDecimal(\"123\")\n    // (False)\n    // >>> StringIsDecimal(\"123.45\")\n    // (True)\n    public static bool StrIsDecimal(string str) {\n        return str.Length > 0 && str.ToCharArray()[0] >= '0' && str.ToCharArray()[0] <= '9';\n    }\n\n    // Return true if given string is a hexadecimal number\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2g8hdbmz.cs(83,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty(\"\")\n    // (True)\n    // >>> StringIsEmpty(\"abc\")\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty(\"\")\n    // (False)\n    // >>> StringIsNotEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StrIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullOrEmpty(\"\")\n    // (False)\n    // >>> StringIsNotNullOrEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotNullOrEmpty(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    // (False)\n    public static bool StrIsNullOrEmpty(char[] chars) {\n        return chars == null || chars.Length == 0;\n    }\n\n    // Return true if given string is not null and not empty\n    // >>> StringIsNotNullOrEmpty(\"\")\n    // (False)\n    // >>> StringIsNotNullOrEmpty(\"abc\")\n    // (True)\n    public static bool StrIsNotNullOrEmpty(char[] chars) {\n        return chars != null && chars.Length > 0;\n    }\n\n    // Return true if given string is null or empty\n    // >>> StringIsNullOrEmpty(\"\")\n    // (True)\n    // >>> StringIsNullOrEmpty(\"abc\")\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx1unqngo.cs(84,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(T[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(List<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(Dictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<string, string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<string> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpa7r_07h5.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<object, object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerable<object> arr) {\n        return arr.Count();\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IEnumerator<object> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpv1csm1jh.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IGenericArray arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IList arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic value\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength(1)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    // >>> ArrayLength(1.0f)\n    // (1L)\n    // >>> ArrayLength(1.0d)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    // >>> ArrayLength(1L)\n    // (1L)\n    // >>> ArrayLength(1)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    // >>> ArrayLength(1.0f)\n    // (1L)\n    // >>> ArrayLength(1.0d)\n    // (1L)\n    // >>> ArrayLength(1.0)\n    // (1L)\n    // >>> ArrayLength(1L)\n    // (1L)\n    // >>> ArrayLength(1\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqy1ximuv.cs(89,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsNullOrEmpty((\"\"))\n    // (True)\n    // >>> StringIsNullOrEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsNullOrEmpty(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotNullOrEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotNullOrEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotNullOrEmpty(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a valid integer\n    // >>> StringIsInteger(\"\")\n    // (False)\n    // >>> StringIsInteger(\"123\")\n    // (True)\n    public static bool StrIsInteger(string str) {\n        if (StrIs\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2zjyenxx.cs(78,18): error CS1026: ) expected\n/tmp/tmp2zjyenxx.cs(78,18): error CS1525: Invalid expression term '}'\n/tmp/tmp2zjyenxx.cs(78,18): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(int[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(long[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(float[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(double[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(bool[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(char[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(byte[] arr) {\n        return arr.Length;\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return true if given string is empty\n    // >>> StringIsEmpty((\"\"))\n    // (True)\n    // >>> StringIsEmpty((\"abc\"))\n    // (False)\n    public static bool StrIsEmpty(string str) {\n        return str.Length == 0;\n    }\n\n    // Return true if given string is not empty\n    // >>> StringIsNotEmpty((\"\"))\n    // (False)\n    // >>> StringIsNotEmpty((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmpty(string str) {\n        return str.Length > 0;\n    }\n\n    // Return true if given string is null\n    // >>> StringIsNull((\"\"))\n    // (False)\n    // >>> StringIsNull((\"abc\"))\n    // (False)\n    public static bool StrIsNull(string str) {\n        return str == null;\n    }\n\n    // Return true if given string is not null\n    // >>> StringIsNotNull((\"\"))\n    // (True)\n    // >>> StringIsNotNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotNull(string str) {\n        return str != null;\n    }\n\n    // Return true if given string is empty or null\n    // >>> StringIsEmptyOrNull((\"\"))\n    // (True)\n    // >>> StringIsEmptyOrNull((\"abc\"))\n    // (False)\n    public static bool StrIsEmptyOrNull(string str) {\n        return str == null || str.Length == 0;\n    }\n\n    // Return true if given string is not empty and not null\n    // >>> StringIsNotEmptyOrNull((\"\"))\n    // (False)\n    // >>> StringIsNotEmptyOrNull((\"abc\"))\n    // (True)\n    public static bool StrIsNotEmptyOrNull(string str) {\n        return str != null && str.Length > 0;\n    }\n\n    // Return true if given string is a number\n    // >>> StringIsNumber(\"\")\n    // (False)\n    // >>> StringIsNumber(\"123\")\n    // (True)\n    public static bool StrIsNumber(string str) {\n        return str.Length >\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprlwy5kfy.cs(78,28): error CS1525: Invalid expression term '}'\n/tmp/tmprlwy5kfy.cs(78,28): error CS1002: ; expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, string str2) {\n        return str.Length + str2.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    public static long Strlen(string str, string str2, string str3) {\n        return str.Length + str2.Length + str3.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\"))\n    // (9L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    public static long Strlen(string str, string str2, string str3, string str4) {\n        return str.Length + str2.Length + str3.Length + str4.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\"))\n    // (12L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    public static long Strlen(string str, string str2, string str3, string str4, string str5) {\n        return str.Length + str2.Length + str3.Length + str4.Length + str5.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\"))\n    // (15L)\n    // >>> StringLength((\"abc\" + \"def\" + \"ghi\" + \"jkl\" + \"mno\" + \"pqr\"))\n    // (18\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292882,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqdb61wzk.cs(66,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen2(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen3(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen4(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen5(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen6(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen7(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen8(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmph3hpd24_.cs(91,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(object[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic array\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(T[] arr) {\n        return arr.Length;\n    }\n\n    // Return length of given generic list\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(List<T> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(Dictionary<T, T> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(IDictionary<T, T> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic dictionary\n    // >>> ArrayLength(())\n    // (0L)\n    // >>> ArrayLength((\"\"))\n    // (0L)\n    // >>> ArrayLength((\"abc\"))\n    // (3L)\n    public static long ArrayLength(ICollection<T> arr) {\n        return arr.Count;\n    }\n\n    // Return length of given generic\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw8oq9h8_.cs(92,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return length of given string\n    // >>> StringLength((\"\"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public static long Strlen(string str) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end, int step) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end, int step, int length) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max, int min) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    // >>> StringLength((\"abc\" + \"def\"))\n    // (6L)\n    public static long Strlen(string str, int start, int end, int step, int length, int max, int min, int pattern) {\n        return str.Length;\n    }\n\n    // Return length of given string\n    // >>> StringLength\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n",
      "timestamp": 1664292883,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvx97uh76.cs(81,1): error CS1022: Type or namespace definition, or end-of-file expected\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
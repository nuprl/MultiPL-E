{
  "name": "HumanEval_152_compare",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // I think we all remember that feeling when the result of some long-awaited\n    // event is finally known. The feelings and thoughts you have at that moment are\n    // definitely worth noting down and comparing.\n    // Your task is to determine if a person correctly guessed the results of a number of matches.\n    // You are given two lists of scores and guesses of equal length, where each index shows a match. \n    // Return a list of the same length denoting how far off each guess was. If they have guessed correctly,\n    // the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long> game, List<long> guess) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n",
  "completions": [
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diff = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        int k = 0;\n        int l = 0;\n        int m = 0;\n        int n = 0;\n        int o = 0;\n        int p = 0;\n        int q = 0;\n        int r = 0;\n        int s = 0;\n        int t = 0;\n        int u = 0;\n        int v = 0;\n        int w = 0;\n        int x = 0;\n        int y = 0;\n        int z = 0;\n        int a = 0;\n        int b = 0;\n        int c = 0;\n        int d = 0;\n        int e = 0;\n        int f = 0;\n        int g = 0;\n        int h = 0;\n        int i1 = 0;\n        int j1 = 0;\n        int k1 = 0;\n        int l1 = 0;\n        int m1 = 0;\n        int n1 = 0;\n        int o1 = 0;\n        int p1 = 0;\n        int q1 = 0;\n        int r1 = 0;\n        int s1 = 0;\n        int t1 = 0;\n        int u1 = 0;\n        int v1 = 0;\n        int w1 = 0;\n        int x1 = 0;\n        int y1 = 0;\n        int z1 = 0;\n        int a1 = 0;\n        int b1 = 0;\n        int c1 = 0;\n        int d1 = 0;\n        int e1 = 0;\n        int f1 = 0;\n        int g1 = 0;\n        int h1 = 0;\n        int i2 = 0;\n        int j2 = 0;\n        int k2 = 0;\n        int l2 = 0;\n        int m2 = 0;\n        int n2 = 0;\n        int o2 = 0;\n        int p2 = 0;\n        int q2 = 0;\n        int r2 = 0;\n        int s2 = 0;\n        int t2 = 0;\n        int u2 = 0;\n        int v2 = 0;\n        int w",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(guess[i] - game[i]));\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of the same size.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.Abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diff = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.of(diff);",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists are not of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize) {\n            throw new Exception(\"The lists must be of equal size.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength)\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        List<long> diffs = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore == guessScore)\n                diffs.Add(0);\n            else\n                diffs.Add(Math.Abs(gameScore - guessScore));\n        }\n        return diffs;",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> diff = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            diff.Add(Math.Abs(game.Get(i) - guess.Get(i)));\n        }\n        return diff;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diff = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int length = scores.Length;\n        if (length != guesses.Length)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int n = game.Count;\n        if (n != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The game and guess lists must be of the same size.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore == guessScore)\n                result.Add(0);\n            else\n                result.Add(Math.Abs(gameScore - guessScore));\n        }\n        return result;",
    "        // Write your code here\n        int n = game.Count;\n        int m = guess.Count;\n        if (n != m)\n            throw new IllegalArgumentException(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize) {\n            throw new Exception(\"The lists must be of equal size.\");\n        }\n        List<long> diff = new List<long>(gameSize);\n        for (int i = 0; i < gameSize; i++) {\n            diff.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return diff;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength) {\n            throw new Exception(\"Game and guess lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            result.Add(Math.Abs(gameArray[i] - guessArray[i]));\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists are not of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int i = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && i < guess.Count) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n            i++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0;\n        while (i < game.Count && i < guess.Count) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore == guessScore) {\n                result.Add(0);\n            }\n            else {\n                result.Add(Math.Abs(gameScore - guessScore));\n            }\n            i++;\n        }\n        while (i < game.Count) {\n            result.Add(game[i]);\n            i++;\n        }\n        while (i < guess.Count) {\n            result.Add(guess[i]);\n            i++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int i = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && i < guess.Count) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n            i++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(guesses[i] - scores[i]));\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of equal size\");\n        List<long> diff = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            diff.Add(Math.Abs(game.Item(i) - guess.Item(i)));\n        }\n        return diff;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            j++;\n        }\n        return result;",
    "        int n = game.Count;\n        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(gameArray[i] - guessArray[i]);\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diffs = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.of(diffs);",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        long diff = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            diff = game.get(i) - guess.get(j);\n            if (diff == 0) {\n                result.Add(0);\n                i++;\n                j++;\n            }\n            else if (diff > 0) {\n                result.Add(diff);\n                i++;\n            }\n            else {\n                result.Add(diff * -1);\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(game.get(i) - guess.get(j));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(guess.get(j) - game.get(i));\n            j++;\n        }\n        return result;",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(guess[i] - game[i]);\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        if (scores.Length != guesses.Length) {\n            throw new Exception(\"The lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        // Write your code here\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int len = scores.Length;\n        if (len != guesses.Length)\n            throw new Exception(\"The lists must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            result.Add(Math.Abs(guesses[i] - scores[i]));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diff = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int length = scores.Length;\n        if (length != guesses.Length) {\n            throw new Exception(\"The lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"Inputs must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diff = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of equal length\");\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            long gameScore = game[i];\n            long guessScore = guess[j];\n            if (gameScore == guessScore) {\n                result.Add(0);\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(gameScore - guessScore));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(game[i]);\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(guess[j]);\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of equal size\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore == guessScore)\n                result.Add(0);\n            else\n                result.Add(Math.Abs(gameScore - guessScore));\n        }\n        return result;",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore == guessScore)\n                result.Add(0);\n            else\n                result.Add(Math.Abs(gameScore - guessScore));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diffs = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.of(diffs);",
    "        List<long> result = new List<long>();\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diffs = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        for (int i = 0; i < guesses.Length; i++) {\n            result.Add(diffs[i]);\n        }\n        return result;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            result.Add(Math.Abs(gameArray[i] - guessArray[i]));\n        }\n        return result;",
    "        int n = game.Count;\n        if (n != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            result.Add(Math.Abs(gameArray[i] - guessArray[i]));\n        }\n        return result;",
    "        int length = game.Count;\n        if (guess.Count != length)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < length; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        int len2 = guess.Count;\n        if (len != len2)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of equal size.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(guess.GetValue(i) - game.GetValue(i)));\n        }\n        return result;",
    "        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            j++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(guess[i] - game[i]));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists are not of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                if (game.get(i) < guess.get(j)) {\n                    result.Add(guess.get(j) - game.get(i));\n                    j++;\n                }\n                else {\n                    result.Add(game.get(i) - guess.get(j));\n                    i++;\n                }\n            }\n        }\n        while (i < game.Count) {\n            result.Add(game.get(i) - guess.get(j));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(guess.get(j) - game.get(i));\n            j++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int n = game.Count;\n        int m = guess.Count;\n        if (n != m)\n            throw new Exception(\"Game and guess lists must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of the same length.\");\n        }\n        List<long> diff = new List<long>(gameLength);\n        for (int i = 0; i < gameLength; i++) {\n            diff.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return diff;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The game and guess lists must be of equal size.\");\n        List<long> diff = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            diff.Add(Math.Abs(game.Get(i) - guess.Get(i)));\n        }\n        return diff;",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int count = 0;\n        for (int i = 0; i < game.Count; i++) {\n            if (guess.Count > i) {\n                long diff = Math.Abs(guess.get(i) - game.get(i));\n                if (diff == 0) {\n                    count++;\n                }\n                result.Add(diff);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        if (game.Count != guess.Count) {\n            throw new Exception(\"The lists must be of equal length\");\n        }\n        for (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game[i] - guess[i]);\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength)\n            throw new Exception(\"The game and guess lists must be of the same length.\");\n        List<long> result = new List<long>(gameLength);\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long difference = Math.Abs(gameScore - guessScore);\n            result.Add(difference);\n        }\n        return result;",
    "        // Write your code here\n        int n = game.Count;\n        int m = guess.Count;\n        if (n != m)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(game[i] - guess[i]);\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists are not of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int len = game.Count;\n        if (guess.Count != len)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            result.Add(Math.Abs(gameArray[i] - guessArray[i]));\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(guess[i] - game[i]));\n        }\n        return result;",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        }\n        List<long> diff = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            diff.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return diff;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int n = scores.Length;\n        long[] diff = new long[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.of(diff);",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of equal size.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.Abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int len = scores.Length;\n        if (len != guesses.Length)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of the same size\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.Abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int length = game.Count;\n        if (length != guess.Count) {\n            throw new Exception(\"The lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < length; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        long[] result = new long[gameArray.Length];\n        for (int i = 0; i < gameArray.Length; i++) {\n            result[i] = Math.Abs(gameArray[i] - guessArray[i]);\n        }\n        return new List<long>(result);",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                if (game.get(i) < guess.get(j)) {\n                    result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                    j++;\n                }\n                else {\n                    result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                    i++;\n                }\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            result.Add(Math.Abs(gameArray[i] - guessArray[i]));\n        }\n        return result;",
    "        int length = game.Count;\n        if (length != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < length; i++) {\n            result.Add(Math.Abs(game.Get(i) - guess.Get(i)));\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        long diff = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            diff = game.get(i) - guess.get(j);\n            if (diff == 0) {\n                result.Add(0);\n                i++;\n                j++;\n            }\n            else if (diff > 0) {\n                result.Add(diff);\n                i++;\n            }\n            else {\n                result.Add(-diff);\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(game.get(i) - guess.get(j));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(guess.get(j) - game.get(i));\n            j++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int n = game.Count;\n        int m = guess.Count;\n        if (n != m)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of equal size.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(guess[i] - game[i]));\n        }\n        return result;",
    "        // Write your code here\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        if (scores.Length != guesses.Length)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < scores.Length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            j++;\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of equal size.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0;\n        while (i < game.Count && i < guess.Count) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n            i++;\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int n = scores.Length;\n        int m = guesses.Length;\n        if (n != m) {\n            throw new Exception(\"The lists must be of equal length\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        // Write your code here\n        int n = game.Count;\n        int m = guess.Count;\n        if (n != m)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long g = guess[i];\n            long g2 = game[i];\n            if (g == g2)\n                result.Add(0);\n            else\n                result.Add(Math.Abs(g - g2));\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                if (game.get(i) > guess.get(j)) {\n                    result.Add(game.get(i) - guess.get(j));\n                    i++;\n                }\n                else {\n                    result.Add(guess.get(j) - game.get(i));\n                    j++;\n                }\n            }\n        }\n        while (i < game.Count) {\n            result.Add(game.get(i) - guess.get(j));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(guess.get(j) - game.get(i));\n            j++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diffs = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.of(diffs);",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(guess[i] - game[i]);\n            result.Add(diff);\n        }\n        return result;",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"Game and guess must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore == guessScore)\n                result.Add(0);\n            else\n                result.Add(Math.Abs(gameScore - guessScore));\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            result.Add(Math.Abs(gameArray[i] - guessArray[i]));\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        long[] diff = new long[gameArray.Length];\n        for (int i = 0; i < gameArray.Length; i++) {\n            diff[i] = Math.Abs(gameArray[i] - guessArray[i]);\n        }\n        return List.of(diff);",
    "        int gameLength = game.Count;\n        int guessLength = guess.Count;\n        if (gameLength != guessLength)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long difference = Math.Abs(gameScore - guessScore);\n            result.Add(difference);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(guess.Get(i) - game.Get(i)));\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The game and guess lists must be of equal size.\");\n        List<long> diff = new List<long>(gameSize);\n        for (int i = 0; i < gameSize; i++) {\n            diff.Add(Math.Abs(game.Item(i) - guess.Item(i)));\n        }\n        return diff;",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        // Write your code here\n        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        if (guess.Count != game.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < guess.Count; i++) {\n            result.Add(Math.Abs(guess[i] - game[i]));\n        }\n        return result;",
    "        int n = game.Count;\n        if (n != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diff = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize) {\n            throw new Exception(\"The game and guess lists must be of equal size.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The game and guess lists must be of equal size.\");\n        List<long> diff = new List<long>(gameSize);\n        for (int i = 0; i < gameSize; i++) {\n            diff.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return diff;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength)\n            throw new Exception(\"The two lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = gameArray[i];\n            long guessScore = guessArray[i];\n            long difference = Math.Abs(gameScore - guessScore);\n            result.Add(difference);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diffs = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.of(diffs);",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game.get(i) - guess.get(i)));\n        }\n        return result;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = gameArray[i];\n            long guessScore = guessArray[i];\n            long difference = Math.Abs(gameScore - guessScore);\n            result.Add(difference);\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            j++;\n        }\n        return result;",
    "        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The game and guess lists must be of equal size.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            long diff = Math.Abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game.get(i) - guess.get(i)));\n        }\n        return result;",
    "        // Write your code here\n        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diffs = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diffs);",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                if (game.get(i) > guess.get(j)) {\n                    result.Add(game.get(i) - guess.get(j));\n                    i++;\n                }\n                else {\n                    result.Add(guess.get(j) - game.get(i));\n                    j++;\n                }\n            }\n        }\n        while (i < game.Count) {\n            result.Add(game.get(i) - guess.get(j));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(guess.get(j) - game.get(i));\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize) {\n            throw new Exception(\"Game and guess lists must be of equal size.\");\n        }\n        List<long> diff = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            diff.Add(Math.Abs(game.Get(i) - guess.Get(i)));\n        }\n        return diff;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diffs = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diffs);",
    "        List<long> result = new List<long>();\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        for (int i = 0; i < scores.Length; i++) {\n            long score = scores[i];\n            long guess = guesses[i];\n            if (score == guess) {\n                result.Add(0);\n            }\n            else {\n                result.Add(Math.Abs(score - guess));\n            }\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                if (game.get(i) > guess.get(j)) {\n                    result.Add(game.get(i) - guess.get(j));\n                    i++;\n                }\n                else {\n                    result.Add(guess.get(j) - game.get(i));\n                    j++;\n                }\n            }\n        }\n        while (i < game.Count) {\n            result.Add(game.get(i) - guess.get(j));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(guess.get(j) - game.get(i));\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diffs = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.of(diffs);",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength) {\n            throw new Exception(\"The game and guess lists must be of equal length.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = gameArray[i];\n            long guessScore = guessArray[i];\n            long diff = Math.Abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return List.Create(diff);",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize) {\n            throw new Exception(\"The lists must be of the same size.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore != guessScore) {\n                result.Add(Math.Abs(gameScore - guessScore));\n            }\n        }\n        return result;",
    "        // Write your code here\n        int n = game.Count;\n        if (n != guess.Count)\n            throw new Exception(\"The lists must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int length = scores.Length;\n        if (length != guesses.Length)\n            throw new Exception(\"The lists must be of the same length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < length; i++) {\n            result.Add(Math.Abs(scores[i] - guesses[i]));\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize)\n            throw new Exception(\"The lists must be of the same size.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore == guessScore)\n                result.Add(0);\n            else\n                result.Add(Math.Abs(gameScore - guessScore));\n        }\n        return result;",
    "        // Write your code here\n        if (game.Count != guess.Count)\n            throw new Exception(\"The lists are not of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        // Write your code here\n        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        int n = game.Count;\n        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            result.Add(Math.Abs(guessArray[i] - gameArray[i]));\n        }\n        return result;",
    "        // Write your code here\n        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(j)));\n                i++;\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(game.get(i) - guess.get(j)));\n            i++;\n            j++;\n        }\n        return result;",
    "        long[] gameArray = game.ToArray();\n        long[] guessArray = guess.ToArray();\n        int gameLength = gameArray.Length;\n        int guessLength = guessArray.Length;\n        if (gameLength != guessLength)\n            throw new Exception(\"Game and guess lists must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameLength; i++) {\n            long gameScore = gameArray[i];\n            long guessScore = guessArray[i];\n            long diff = Math.abs(gameScore - guessScore);\n            result.Add(diff);\n        }\n        return result;",
    "        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(guess.get(i) - game.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int gameSize = game.Count;\n        int guessSize = guess.Count;\n        if (gameSize != guessSize) {\n            throw new Exception(\"The lists must be of equal size.\");\n        }\n        List<long> result = new List<long>();\n        for (int i = 0; i < gameSize; i++) {\n            long gameScore = game[i];\n            long guessScore = guess[i];\n            if (gameScore == guessScore) {\n                result.Add(0);\n            }\n            else {\n                result.Add(Math.Abs(gameScore - guessScore));\n            }\n        }\n        return result;",
    "        // Write your code here\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diffs = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diffs[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diffs);",
    "        int i = 0;\n        int j = 0;\n        List<long> result = new List<long>();\n        while (i < game.Count && j < guess.Count) {\n            if (game.get(i) == guess.get(j)) {\n                i++;\n                j++;\n            }\n            else {\n                result.Add(Math.Abs(guess.get(j) - game.get(i)));\n                j++;\n            }\n        }\n        while (i < game.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            i++;\n        }\n        while (j < guess.Count) {\n            result.Add(Math.Abs(guess.get(j) - game.get(i)));\n            j++;\n        }\n        return result;",
    "        // Write your code here\n        if (guess.Count != game.Count)\n            throw new Exception(\"The lists must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < guess.Count; i++) {\n            result.Add(Math.Abs(guess[i] - game[i]));\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        if (game.Count != guess.Count) {\n            throw new Exception(\"The lists must be of equal length\");\n        }\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return result;",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            result.Add(Math.Abs(game.Get(i) - guess.Get(i)));\n        }\n        return result;",
    "        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game[i] - guess[i]);\n            result.Add(diff);\n        }\n        return result;",
    "        // Write your code here\n        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        long[] diff = new long[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(guesses[i] - scores[i]);\n        }\n        return diff;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n            result.Add(Math.Abs(game.get(i) - guess.get(i)));\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        int i = 0;\n        while (i < game.Count && i < guess.Count) {\n            if (game.get(i) == guess.get(i)) {\n                result.Add(0);\n            }\n            else {\n                result.Add(Math.Abs(game.get(i) - guess.get(i)));\n            }\n            i++;\n        }\n        return result;",
    "        long[] scores = game.ToArray();\n        long[] guesses = guess.ToArray();\n        int[] diff = new int[guesses.Length];\n        for (int i = 0; i < guesses.Length; i++) {\n            diff[i] = Math.Abs(scores[i] - guesses[i]);\n        }\n        return List.Create(diff);",
    "        // Write your code here\n        int len = game.Count;\n        if (len != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < len; i++) {\n            long diff = Math.Abs(game[i] - guess[i]);\n            result.Add(diff);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        if (game.Count != guess.Count)\n            throw new Exception(\"The lists must be of equal length.\");\n        for (int i = 0; i < game.Count; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;",
    "        int n = game.Count;\n        if (n != guess.Count)\n            throw new Exception(\"The lists must be of the same length.\");\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            long diff = Math.Abs(game.get(i) - guess.get(i));\n            result.Add(diff);\n        }\n        return result;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
{
  "name": "HumanEval_31_is_prime",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2)\n            if (n % i == 0) return false;\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2)\n            if (n % i == 0) return false;\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx7t72s_0.cs(28,31): error CS0117: 'Math' does not contain a definition for 'sqrt'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2)\n            if (n % i == 0) return false;\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return false;\n        }\n        if (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n            return false;\n        }\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                return false;\n            }\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return false;\n        }\n        if (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n            return false;\n        }\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                return false;\n            }\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return false;\n        }\n        if (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n            return false;\n        }\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrtN = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrtN; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2)\n            if (n % i == 0) return false;\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx7t72s_0.cs(28,31): error CS0117: 'Math' does not contain a definition for 'sqrt'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2)\n            if (n % i == 0) return false;\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2)\n            if (n % i == 0) return false;\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2)\n            if (n % i == 0) return false;\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.Sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return false;\n        }\n        if (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n            return false;\n        }\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) {\n                return false;\n            }\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long max = (long)Math.sqrt(n);\n        for (long i = 3; i <= max; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx7t72s_0.cs(28,31): error CS0117: 'Math' does not contain a definition for 'sqrt'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i += 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) {\n            return false;\n        }\n        if (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n            return false;\n        }\n        long root = (long)Math.Sqrt(n);\n        for (long i = 3; i <= root; i += 2) {\n            if (n % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 5; i <= sqrt; i += 6) {\n            if (n % (i - 1) == 0 || n % (i + 1) == 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b674528b524a4b2d8ea90bb007c4eea7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b674528b524a4b2d8ea90bb007c4eea7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        long i = 5;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Return true if a given number is prime, and false otherwise.\n    // >>> IsPrime((6L))\n    // (false)\n    // >>> IsPrime((101L))\n    // (true)\n    // >>> IsPrime((11L))\n    // (true)\n    // >>> IsPrime((13441L))\n    // (true)\n    // >>> IsPrime((61L))\n    // (true)\n    // >>> IsPrime((4L))\n    // (false)\n    // >>> IsPrime((1L))\n    // (false)\n    public static bool IsPrime(long n) {\n        if (n < 2) return false;\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n        long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0) return false;\n            i += 2;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPrime((6L)) == (false));\n    Debug.Assert(IsPrime((101L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((13441L)) == (true));\n    Debug.Assert(IsPrime((61L)) == (true));\n    Debug.Assert(IsPrime((4L)) == (false));\n    Debug.Assert(IsPrime((1L)) == (false));\n    Debug.Assert(IsPrime((5L)) == (true));\n    Debug.Assert(IsPrime((11L)) == (true));\n    Debug.Assert(IsPrime((17L)) == (true));\n    Debug.Assert(IsPrime((85L)) == (false));\n    Debug.Assert(IsPrime((77L)) == (false));\n    Debug.Assert(IsPrime((255379L)) == (false));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
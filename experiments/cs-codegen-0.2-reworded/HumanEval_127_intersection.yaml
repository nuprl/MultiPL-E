name: HumanEval_127_intersection
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given two intervals,\n    // where each interval is\
  \ a pair of integers. For example, interval = (start, end) = (1, 2).\n    // The\
  \ given intervals are closed which means that the interval (start, end)\n    //\
  \ includes both start and end.\n    // For each given interval, it is assumed that\
  \ its start is less or equal its end.\n    // Your task is to determine whether\
  \ the length of intersection of these two \n    // intervals is a prime number.\n\
  \    // Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n  \
  \  // which its length is 1, which not a prime number.\n    // If the length of\
  \ the intersection is a prime number, return \"YES\",\n    // otherwise, return\
  \ \"NO\".\n    // If the two intervals don't intersect, return \"NO\".\n    // [input/output]\
  \ samples:\n    // >>> Intersection((Tuple.Create(1L, 2L)), (Tuple.Create(2L, 3L)))\n\
  \    // (\"NO\")\n    // >>> Intersection((Tuple.Create(-1L, 1L)), (Tuple.Create(0L,\
  \ 4L)))\n    // (\"NO\")\n    // >>> Intersection((Tuple.Create(-3L, -1L)), (Tuple.Create(-5L,\
  \ 5L)))\n    // (\"YES\")\n    public static string Intersection(Tuple<long, long>\
  \ interval1, Tuple<long, long> interval2) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(2L, 3L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-1L,\
  \ 1L)), (Tuple.Create(0L, 4L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-3L,\
  \ -1L)), (Tuple.Create(-5L, 5L))).Equals((\"YES\")));\n    Debug.Assert(Intersection((Tuple.Create(-2L,\
  \ 2L)), (Tuple.Create(-4L, 0L))).Equals((\"YES\")));\n    Debug.Assert(Intersection((Tuple.Create(-11L,\
  \ 2L)), (Tuple.Create(-1L, -1L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(3L, 5L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(1L, 2L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-2L,\
  \ -2L)), (Tuple.Create(-3L, -2L))).Equals((\"NO\")));\n    }\n\n}\n"
completions: ["        if (interval1.Item1 > interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item1 == interval2.Item1) {\n            if (interval1.Item2\
    \ > interval2.Item2)\n                return \"NO\";\n            if (interval1.Item2\
    \ == interval2.Item2)\n                return \"YES\";\n        }\n        return\
    \ \"NO\";", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 < start2 || end1 < end2)\n            return \"NO\";\n      \
    \  long min = Math.Min(start1, start2);\n        long max = Math.Max(end1, end2);\n\
    \        if (min > max)\n            return \"NO\";\n        long length = max\
    \ - min + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n     \
    \   if (length % 3 == 0)\n            return \"NO\";\n        if (length % 5 ==\
    \ 0)\n            return \"NO\";\n        if (length % 7 == 0)\n            return\
    \ \"NO\";\n        if (length % 11 == 0)\n            return \"NO\";\n       \
    \ if (length % 13 == 0)\n            return \"NO\";\n        if (length % 17 ==\
    \ 0)\n            return \"NO\";\n        if (length % 19 == 0)\n            return\
    \ \"NO\";\n        if (length % 23 == 0)\n            return \"NO\";\n       \
    \ if (length % 29 == 0)\n            return \"NO\";\n        if (length % 31 ==\
    \ 0)\n            return \"NO\";\n        if (length % 37 == 0)\n            return\
    \ \"NO\";\n        if (length % 41 == 0)\n            return \"NO\";\n       \
    \ if (length % 43 == 0)\n            return \"NO\";\n        if (length % 47 ==\
    \ 0)\n            return \"NO\";\n        if (length % 53 == 0)\n            return\
    \ \"NO\";\n        if (length % 59 == 0)\n            return \"NO\";\n       \
    \ if (length % 61 == 0)\n            return \"NO\";\n        if (length % 67 ==\
    \ 0)\n            return \"NO\";\n        if (length % 71 == 0)\n            return\
    \ \"NO\";\n        if (length % 73 == 0)\n            return \"NO\";\n       \
    \ if (length % 79 == 0)\n            return \"NO\";\n        if (length % 83 ==\
    \ 0)\n            return \"", "        long start1 = interval1.Item1;\n      \
    \  long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n    \
    \    long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        long length = end1 - start1;\n        if (length\
    \ % 2 == 0)\n            return \"NO\";\n        long length2 = end2 - start2;\n\
    \        if (length2 % 2 == 0)\n            return \"NO\";\n        if (length\
    \ != length2)\n            return \"NO\";\n        long count = 0;\n        for\
    \ (long i = start1; i <= end1; i++) {\n            for (long j = start2; j <=\
    \ end2; j++) {\n                if (i == j)\n                    count++;\n  \
    \          }\n        }\n        if (count % 2 == 0)\n            return \"NO\"\
    ;\n        return \"YES\";", "        long start1 = interval1.Item1;\n       \
    \ long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n     \
    \   long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 >= start2 && start1 <= end2)\n\
    \            return \"YES\";\n        if (start2 >= start1 && start2 <= end1)\n\
    \            return \"YES\";\n        return \"NO\";", "        if (interval1.Item1\
    \ > interval2.Item1)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 <\
    \ interval2.Item1)\n            return \"NO\";\n        if (interval1.Item1 ==\
    \ interval2.Item1 && interval1.Item2 < interval2.Item2)\n            return \"\
    NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        return \"NO\";", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval", "    \
    \    if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp\
    \ = interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length", "        if (interval1.Item1 > interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        return \"YES\";", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        long min = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long max = Math.Max(interval1.Item2, interval2.Item2);\n        if (min\
    \ > max)\n            return \"NO\";\n        if (min == max)\n            return\
    \ \"YES\";\n        long count = 0;\n        for (long i = min; i <= max; i++)\
    \ {\n            if (Intersect(interval1, interval2, i))\n                count++;\n\
    \        }\n        if (count % 2 == 0)\n            return \"NO\";\n        return\
    \ \"YES\";\n    }\n\n    public static bool Intersect(Tuple<long, long> interval1,\
    \ Tuple<long, long> interval2, long i) {\n        if (i < interval1.Item1 || i\
    \ > interval1.Item2)\n            return false;\n        if (i < interval2.Item1\
    \ || i > interval2.Item2)\n            return false;\n        return true;", " \
    \       if (interval1.Item1 > interval2.Item1) {\n            return \"NO\";\n\
    \        }\n        if (interval1.Item2 < interval2.Item2) {\n            return\
    \ \"NO\";\n        }\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        if (length % 2 == 0) {\n            return \"NO\";\n   \
    \     }\n        if (length % 3 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 5 == 0) {\n            return \"NO\";\n        }\n     \
    \   if (length % 7 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 11 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 13 == 0) {\n            return \"NO\";\n        }\n        if (length % 17\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 19 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 23 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 29 == 0) {\n    \
    \        return \"NO\";\n        }\n        if (length % 31 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length % 37 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 41 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 43 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 47 == 0) {\n            return \"NO\";\n      \
    \  }\n        if (length % 53 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 59 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length % 61 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 67 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ %", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2 || start2 > end1)\n            return \"NO\";\n        if\
    \ (start1 == end2 || start2 == end1)\n            return \"NO\";\n        if (start1\
    \ == end1 && start2 == end2)\n            return \"YES\";\n        if (start1\
    \ > end2 || start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end2 || start2 == end1)\n            return \"NO\";\n        if (start1 > end2\
    \ || start2 > end1)\n            return \"NO\";\n        if (start1 == end2 ||\
    \ start2 == end1)\n            return \"NO\";\n        if (start1 > end2 || start2\
    \ > end1)\n            return \"NO\";\n        if (start1 == end2 || start2 ==\
    \ end1)\n            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n\
    \            return \"NO\";\n        if (start1 == end2 || start2 == end1)\n \
    \           return \"NO\";\n        if (start1 > end2 || start2 > end1)\n    \
    \        return \"NO\";\n        if (start1 == end2 || start2 == end1)\n     \
    \       return \"NO\";\n        if (start1 > end2 || start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end2 || start2 == end1)\n         \
    \   return \"NO\";\n        if (start1 > end2 || start2 > end1)\n            return\
    \ \"NO\";\n        if (start1 == end2 || start2 == end1)\n            return \"\
    NO\";\n        if", "        if (interval1.Item1 > interval2.Item1) {\n      \
    \      Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        long length\
    \ = end - start + 1;\n        if (length % 2 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 3 == 0) {\n            return \"NO\";\n   \
    \     }\n        if (length % 5 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 7 == 0) {\n            return \"NO\";\n        }\n     \
    \   if (length % 11 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 13 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 17 == 0) {\n            return \"NO\";\n        }\n        if (length % 19\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 23 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 29 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 31 == 0) {\n    \
    \        return \"NO\";\n        }\n        if (length % 37 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length % 41 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 43 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 47 == 0", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 < start2) {\n            long temp\
    \ = start1;\n            start1 = start2;\n            start2 = temp;\n      \
    \  }\n        if (end1 > end2) {\n            long temp = end1;\n            end1\
    \ = end2;\n            end2 = temp;\n        }\n        long length = end1 - start1\
    \ + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ % 3 == 0)\n            return \"NO\";\n        if (length % 5 == 0)\n      \
    \      return \"NO\";\n        if (length % 7 == 0)\n            return \"NO\"\
    ;\n        if (length % 11 == 0)\n            return \"NO\";\n        if (length\
    \ % 13 == 0)\n            return \"NO\";\n        if (length % 17 == 0)\n    \
    \        return \"NO\";\n        if (length % 19 == 0)\n            return \"\
    NO\";\n        if (length % 23 == 0)\n            return \"NO\";\n        if (length\
    \ % 29 == 0)\n            return \"NO\";\n        if (length % 31 == 0)\n    \
    \        return \"NO\";\n        if (length % 37 == 0)\n            return \"\
    NO\";\n        if (length % 41 == 0)\n            return \"NO\";\n        if (length\
    \ % 43 == 0)\n            return \"NO\";\n        if (length % 47 == 0)\n    \
    \        return \"NO\";\n        if (length % 53 == 0)\n            return \"\
    NO\";\n        if (length % 59 == 0)\n            return \"NO\";\n        if (length\
    \ % 61 == 0)\n            return \"NO\";\n        ", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        if (start1 > end2 || start2 > end1)\n      \
    \      return \"NO\";\n        long length = end1 - start1 + 1;\n        if (length\
    \ % 2 == 0)\n            return \"NO\";\n        long start = Math.Max(start1,\
    \ start2);\n        long end = Math.Min(end1, end2);\n        if (start > end)\n\
    \            return \"NO\";\n        long prime = length / 2;\n        for (long\
    \ i = start; i <= end; i++) {\n            if (Numerics.IsPrime(i) && Numerics.IsPrime(prime\
    \ - i))\n                return \"YES\";\n        }\n        return \"NO\";",
  "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ long length = end1 - start1 + 1;\n        if (length % 2 == 0)\n           \
    \ return \"NO\";\n        long length2 = end2 - start2 + 1;\n        if (length2\
    \ % 2 == 0)\n            return \"NO\";\n        if (length != length2)\n    \
    \        return \"NO\";\n        long length3 = length / 2;\n        long length4\
    \ = length / 2;\n        long start3 = start1 + length3;\n        long end3 =\
    \ end1 - length3;\n        long start4 = start2 + length4;\n        long end4\
    \ = end2 - length4;\n        if (start3 > end3 || start4 > end4)\n           \
    \ return \"NO\";\n        if (start3 > end4 || start4 > end3)\n            return\
    \ \"NO\";\n        if (start3 == end3 && start4 == end4)\n            return \"\
    YES\";\n        if (start3 == end4 || start4 == end3)\n            return \"NO\"\
    ;\n        long length5 = end3 - start3 + 1;\n        if (length5 % 2 == 0)\n\
    \            return \"NO\";\n        long length6 = end4 - start4 + 1;\n     \
    \   if (length6 % 2 == 0)\n            return \"NO\";\n        if (length5 !=\
    \ length6)\n            return \"NO\";\n        return \"YES\";", "        if\
    \ (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp =\
    \ interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length", "        if (interval1.Item1 > interval2.Item1) {\n           \
    \ Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n  \
    \          interval2 = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        long length\
    \ = end - start + 1;\n        if (length % 2 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 3 == 0) {\n            return \"NO\";\n   \
    \     }\n        if (length % 5 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 7 == 0) {\n            return \"NO\";\n        }\n     \
    \   if (length % 11 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 13 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 17 == 0) {\n            return \"NO\";\n        }\n        if (length % 19\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 23 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 29 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 31 == 0) {\n    \
    \        return \"NO\";\n        }\n        if (length % 37 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length % 41 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 43 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 47 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 53 == 0) {\n            return \"NO", "       \
    \ if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp\
    \ = interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2 ==\
    \ interval2.Item1)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return \"\
    YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1 && interval1.", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item1\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item1) {\n            return \"NO\";\n        }\n        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        if (start == end) {\n            return \"YES\";\n       \
    \ }\n        long length = end - start + 1;\n        if (length % 2 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 3 == 0) {\n     \
    \       return \"NO\";\n        }\n        if (length % 5 == 0) {\n          \
    \  return \"NO\";\n        }\n        if (length % 7 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 11 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 13 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 17 == 0) {\n            return \"NO\";\n      \
    \  }\n        if (length % 19 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 23 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length % 29 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 31 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 37 == 0) {\n            return \"NO\";\n        }\n        if (length % 41\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 43 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 47 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 53 == 0) {\n    \
    \        return", "        if (interval1.Item1 > interval2.Item1) {\n        \
    \    return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        long length = interval1.Item2\
    \ - interval1.Item1 + 1;\n        if (length % 2 == 0) {\n            return \"\
    NO\";\n        }\n        if (length % 3 == 0) {\n            return \"NO\";\n\
    \        }\n        if (length % 5 == 0) {\n            return \"NO\";\n     \
    \   }\n        if (length % 7 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 11 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length % 13 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 17 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 19 == 0) {\n            return \"NO\";\n        }\n        if (length % 23\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 29 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 31 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 37 == 0) {\n    \
    \        return \"NO\";\n        }\n        if (length % 41 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length % 43 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 47 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 53 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 59 == 0) {\n            return \"NO\";\n      \
    \  }\n        if (length % 61 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 67 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length %", "        long start1 = interval1.Item1;\n        long end1\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n          \
    \  return \"NO\";\n        if (start1 > end2 || start2 > end1)\n            return\
    \ \"NO\";\n        if (start1 == end1 && start2 == end2)\n            return \"\
    YES\";\n        if (start1 == end2 || start2 == end1)\n            return \"NO\"\
    ;\n        long length = end1 - start1;\n        if (length == 0)\n          \
    \  return \"NO\";\n        if (length == 1)\n            return \"YES\";\n   \
    \     if (length % 2 == 0)\n            return \"NO\";\n        long length2 =\
    \ end2 - start2;\n        if (length2 == 0)\n            return \"NO\";\n    \
    \    if (length2 == 1)\n            return \"YES\";\n        if (length2 % 2 ==\
    \ 0)\n            return \"NO\";\n        long length3 = length + length2;\n \
    \       if (length3 % 2 == 0)\n            return \"NO\";\n        return \"YES\"\
    ;", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2)\n            return \"NO\";\n        if (start2 > end1)\n\
    \            return \"NO\";\n        long length = end1 - start1 + 1;\n      \
    \  if (length % 2 == 0)\n            return \"NO\";\n        long start = start1\
    \ + (start2 - start1) / 2;\n        long end = start1 + (end2 - start1) / 2;\n\
    \        if (start > end)\n            return \"NO\";\n        if (start == end)\n\
    \            return \"YES\";\n        if (start < end) {\n            if (length\
    \ % 2 == 0)\n                return \"NO\";\n            if (length % 3 == 0)\n\
    \                return \"YES\";\n            if (length % 5 == 0)\n         \
    \       return \"YES\";\n            if (length % 7 == 0)\n                return\
    \ \"YES\";\n            if (length % 11 == 0)\n                return \"YES\"\
    ;\n            if (length % 13 == 0)\n                return \"YES\";\n      \
    \      if (length % 17 == 0)\n                return \"YES\";\n            if\
    \ (length % 19 == 0)\n                return \"YES\";\n            if (length\
    \ % 23 == 0)\n                return \"YES\";\n            if (length % 29 ==\
    \ 0)\n                return \"YES\";\n            if (length % 31 == 0)\n   \
    \             return \"YES\";\n            if (length % 37 == 0)\n           \
    \     return \"YES\";\n            if (length % 41 == 0)\n                return\
    \ \"YES\";\n            if (length % 43 == 0)\n                return \"YES\"\
    ;\n            if (length % 47 == 0)\n                return \"YES\";\n      \
    \      if", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 == end2 && start2 == end1)\n            return \"YES\";\n       \
    \ if (start1 > end2)\n            return \"NO\";\n        if (start2 > end1)\n\
    \            return \"NO\";\n        if (start1 == end2)\n            return \"\
    YES\";\n        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (", "        if (interval1.Item1 > interval2.Item1) {\n\
    \            Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        return\
    \ \"NO\";", "        // Write your code here\n        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item2\
    \ < interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item1\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        if (start == end) {\n            return \"YES\";\n       \
    \ }\n        long length = end - start + 1;\n        if (length % 2 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 3 == 0) {\n     \
    \       return \"NO\";\n        }\n        if (length % 5 == 0) {\n          \
    \  return \"NO\";\n        }\n        if (length % 7 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 11 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 13 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 17 == 0) {\n            return \"NO\";\n      \
    \  }\n        if (length % 19 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 23 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length % 29 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 31 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 37 == 0) {\n            return \"NO\";\n        }\n        if (length % 41\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 43 == 0)\
    \ {\n            return \"NO\";\n        }\n        ", "        long start1 =\
    \ interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start1\
    \ > end1 || start2 > end2)\n            return \"NO\";\n        if (start1 < start2\
    \ || end1 < end2)\n            return \"NO\";\n        long length = end1 - start1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ == 1)\n            return \"YES\";\n        long start = start1 + (start2 -\
    \ start1) / 2;\n        long end = start1 + (end2 - start1) / 2;\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length2 = end - start;\n        if (length2 % 2 == 0)\n\
    \            return \"NO\";\n        if (length2 == 1)\n            return \"\
    YES\";\n        return \"NO\";", "        long start1 = interval1.Item1;\n   \
    \     long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n \
    \       long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        long length = end1 - start1;\n        if (length\
    \ == 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        if (length % 2 == 0)\n            return \"NO\";\n       \
    \ long mid1 = start1 + (length / 2);\n        long mid2 = start2 + (length / 2);\n\
    \        if (mid1 == mid2)\n            return \"YES\";\n        if (mid1 > mid2)\n\
    \            return Intersection(Tuple.Create(start1, mid1), Tuple.Create(start2,\
    \ mid2));\n        return Intersection(Tuple.Create(mid1, end1), Tuple.Create(mid2,\
    \ end2));", "        if (interval1.Item1 > interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item1 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item2 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item1 && interval1.Item2 < interval2.Item2)\n            return \"\
    YES\";\n        if (interval1.Item1 < interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 < interval2.Item1 &&\
    \ interval1.Item2 < interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 > interval2.Item1 && interval1.Item2 > interval2.Item2)\n \
    \           return \"NO\";\n        if (interval1.Item1 > interval2.Item1 && interval1.Item2\
    \ < interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ < interval2.Item1 && interval1.Item2 > interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ > interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ > interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        return \"NO\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 < start2 && end1 < end2)\n       \
    \     return \"NO\";\n        if (start1 < start2 && end1 > end2)\n          \
    \  return \"NO\";\n        if (start1 > start2 && end1 < end2)\n            return\
    \ \"NO\";\n        if (start1 > start2 && end1 > end2)\n            return \"\
    NO\";\n        if (start1 == start2 && end1 == end2)\n            return \"YES\"\
    ;\n        if (start1 < start2 && end1 > end2)\n            return \"YES\";\n\
    \        if (start1 > start2 && end1 < end2)\n            return \"YES\";\n  \
    \      if (start1 < start2 && end1 > end2)\n            return \"YES\";\n    \
    \    if (start1 > start2 && end1 < end2)\n            return \"YES\";\n      \
    \  if (start1 < start2 && end1 > end2)\n            return \"YES\";\n        if\
    \ (start1 > start2 && end1 < end2)\n            return \"YES\";\n        if (start1\
    \ < start2 && end1 > end2)\n            return \"YES\";\n        if (start1 >\
    \ start2 && end1 < end2)\n            return \"YES\";\n        return \"NO\";",
  "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 == end2 && start2 == end1)\n            return \"YES\";\n       \
    \ if (start1 == end1 && start2 != end2)\n            return \"NO\";\n        if\
    \ (start1 != end1 && start2 == end2)\n            return \"NO\";\n        if (start1\
    \ != end1 && start2 != end2)\n            return \"YES\";\n        if (start1\
    \ != end1 && start2 != end2) {\n            long start = Math.Max(start1, start2);\n\
    \            long end = Math.Min(end1, end2);\n            if (start > end)\n\
    \                return \"NO\";\n            if (start == end)\n             \
    \   return \"YES\";\n            if (start == end - 1)\n                return\
    \ \"NO\";\n            if (start == end + 1)\n                return \"YES\";\n\
    \            if (start == end - 2)\n                return \"NO\";\n         \
    \   if (start == end + 2)\n                return \"YES\";\n            if (start\
    \ == end - 3)\n                return \"NO\";\n            if (start == end +\
    \ 3)\n                return \"YES\";\n            if (start == end - 4)\n   \
    \             return \"NO\";\n            if (start == end + 4)\n            \
    \    return \"YES\";\n            if (start == end - 5)\n                return\
    \ \"NO\";\n            if (start == end + 5)\n                return \"YES\";\n\
    \            if (start == end - 6)\n                return \"NO\";\n         \
    \   if (start == end + 6)\n                return \"YES\";\n            if (start\
    \ == end - 7)\n                return \"NO\";\n            if (start ==", "  \
    \      if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long>\
    \ temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2) {\n     \
    \       return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        long length\
    \ = end - start + 1;\n        if (length % 2 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 3 == 0) {\n            return \"NO\";\n   \
    \     }\n        if (length % 5 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 7 == 0) {\n            return \"NO\";\n        }\n     \
    \   if (length % 11 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 13 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 17 == 0) {\n            return \"NO\";\n        }\n        if (length % 19\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 23 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 29 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 31 == 0) {\n    \
    \        return \"NO\";\n        }\n        if (length % 37 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length % 41 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 43 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 47 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 53 == 0) {\n            return \"NO", "       \
    \ if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp\
    \ = interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item2 < interval2.Item1) return \"NO\";\n  \
    \      if (interval1.Item1 > interval2.Item2) return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2) return \"NO\";\n        if (interval1.Item1 == interval2.Item1)\
    \ return \"YES\";\n        if (interval1.Item2 == interval2.Item2) return \"YES\"\
    ;\n        if (interval1.Item1 == interval2.Item1) return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item2) return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item2) return \"YES\";\n        if (interval1.Item2 == interval2.Item1)\
    \ return \"YES\";\n        if (interval1.Item1 == interval2.Item2) return \"YES\"\
    ;\n        if (interval1.Item2 == interval2.Item1) return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item2) return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1) return \"YES\";\n        if (interval1.Item2 == interval2.Item1)\
    \ return \"YES\";\n        if (interval1.Item1 == interval2.Item2) return \"YES\"\
    ;\n        if (interval1.Item2 == interval2.Item2) return \"YES\";\n        return\
    \ \"NO\";", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2)\n            return \"NO\";\n        if (start2 > end1)\n\
    \            return \"NO\";\n        if (start1 == end2)\n            return \"\
    YES\";\n        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2)\n            return \"NO\";\n        if (start2 > end1)\n          \
    \  return \"NO\";\n        if (start1 == end2)\n            return \"YES\";\n\
    \        if (start2 == end1", "        if (interval1.Item1 > interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1)\n            return \"NO\";\n        if\
    \ (interval1.Item2 == interval2.Item2)\n            return \"NO\";\n        if\
    \ (interval1.Item1 == interval2.Item2)\n            return \"NO\";\n        if\
    \ (interval1.Item2 == interval2.Item1)\n            return \"NO\";\n        if\
    \ (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.", "        if (interval1.Item1 > interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item1 > interval2.Item2 ||\
    \ interval1.Item2 < interval2.Item1)\n            return \"NO\";\n        long\
    \ min = Math.Max(interval1.Item1, interval2.Item1);\n        long max = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (min > max)\n            return \"NO\";\n    \
    \    if (min == max)\n            return \"YES\";\n        long length = max -\
    \ min + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n       \
    \ return \"YES\";", "        long start1 = interval1.Item1;\n        long end1\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n          \
    \  return \"NO\";\n        if (start1 > end2 || start2 > end1)\n            return\
    \ \"NO\";\n        if (start1 == end1 && start2 == end2)\n            return \"\
    YES\";\n        if (start1 == end2 || start2 == end1)\n            return \"NO\"\
    ;\n        if (start1 > end2)\n            return \"NO\";\n        if (start2\
    \ > end1)\n            return \"NO\";\n        if (start1 == end2)\n         \
    \   return \"YES\";\n        if (start2 == end1)\n            return \"YES\";\n\
    \        if (start1 > end2)\n            return \"NO\";\n        if (start2 >\
    \ end1)\n            return \"NO\";\n        if (start1 == end2)\n           \
    \ return \"YES\";\n        if (start2 == end1)\n            return \"YES\";\n\
    \        if (start1 > end2)\n            return \"NO\";\n        if (start2 >\
    \ end1)\n            return \"NO\";\n        if (start1 == end2)\n           \
    \ return \"YES\";\n        if (start2 == end1)\n            return \"YES\";\n\
    \        if (start1 > end2)\n            return \"NO\";\n        if (start2 >\
    \ end1)\n            return \"NO\";\n        if (start1 == end2)\n           \
    \ return \"YES\";\n        if (start2 == end1)\n            return \"YES\";\n\
    \        if (start1 > end2)\n            return \"NO\";\n        if (start2 >\
    \ end1)\n            return \"NO\";\n        if (start1 == end2)\n           \
    \ return \"YES\";\n        if (start2 == end1)\n            return \"YES\";\n\
    \        if (start1 > end2)\n            return \"NO\";\n        if (start2 >\
    \ end1)\n            return \"NO\";\n        if (start1 == end2)\n           \
    \ return \"YES\";\n        if (start2 == end1", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        long length = end1 - start1 + 1;\n        if\
    \ (length % 2 == 0)\n            return \"NO\";\n        long start = Math.Max(start1,\
    \ start2);\n        long end = Math.Min(end1, end2);\n        long count = 0;\n\
    \        for (long i = start; i <= end; i++) {\n            if (i % 2 == 0)\n\
    \                count++;\n        }\n        if (count % 2 == 0)\n          \
    \  return \"NO\";\n        return \"YES\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        long min = Math.Min(start1, start2);\n      \
    \  long max = Math.Max(end1, end2);\n        if (min > max)\n            return\
    \ \"NO\";\n        long length = max - min + 1;\n        if (length % 2 == 0)\n\
    \            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length % 71 == 0)\n            return \"NO\";\n        ", "        if (interval1.Item1\
    \ > interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        if (start == end)\n\
    \            return \"YES\";\n        if (start == end - 1)\n            return\
    \ \"YES\";\n        if (start == end + 1)\n            return \"YES\";\n     \
    \   if (start == end - 2)\n            return \"YES\";\n        if (start == end\
    \ + 2)\n            return \"YES\";\n        if (start == end - 3)\n         \
    \   return \"YES\";\n        if (start == end + 3)\n            return \"YES\"\
    ;\n        if (start == end - 4)\n            return \"YES\";\n        if (start\
    \ == end + 4)\n            return \"YES\";\n        if (start == end - 5)\n  \
    \          return \"YES\";\n        if (start == end + 5)\n            return\
    \ \"YES\";\n        if (start == end - 6)\n            return \"YES\";\n     \
    \   if (start == end + 6)\n            return \"YES\";\n        if (start == end\
    \ - 7)\n            return \"YES\";\n        if (start == end + 7)\n         \
    \   return \"YES\";\n        if (start == end - 8)\n            return \"YES\"\
    ;\n        if (start == end + 8)\n            return \"YES\";\n        if (start\
    \ == end - 9)\n            return \"YES\";\n        if (start == end + 9)\n  \
    \          return \"YES\";\n        if (start == end - 10)\n            return\
    \ \"YES\";\n        if (start == end + 10)\n            return \"YES\";\n    \
    \    if (start == end - 11)\n            return \"YES\";\n        if (start ==\
    \ end + 11)\n            return", "        long start1 = interval1.Item1;\n  \
    \      long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 > start2) {\n            long temp\
    \ = start1;\n            start1 = start2;\n            start2 = temp;\n      \
    \  }\n        if (end1 > end2) {\n            long temp = end1;\n            end1\
    \ = end2;\n            end2 = temp;\n        }\n        long length = end1 - start1\
    \ + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ == 1)\n            return \"YES\";\n        if (length == 2) {\n           \
    \ if (start1 == end1) {\n                if (start2 == end2)\n               \
    \     return \"YES\";\n                else\n                    return \"NO\"\
    ;\n            }\n            else {\n                if (start2 == end2)\n  \
    \                  return \"YES\";\n                else\n                   \
    \ return \"NO\";\n            }\n        }\n        if (length == 3) {\n     \
    \       if (start1 == end1) {\n                if (start2 == end2)\n         \
    \           return \"YES\";\n                else\n                    return\
    \ \"NO\";\n            }\n            else {\n                if (start2 == end2)\n\
    \                    return \"YES\";\n                else\n                 \
    \   return \"NO\";\n            }\n        }\n        if (length == 4) {\n   \
    \         if (start1 == end1) {\n                if (start2 == end2)\n       \
    \             return \"YES\";\n                else\n                    return\
    \ \"NO\";\n            }\n            else {\n                if (start2 == end2)\n\
    \                    return \"YES\";\n                else\n                 \
    \   return \"NO\";\n            }\n        }\n        if (length == 5) {\n   \
    \         ", "        if (interval1.Item1 > interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item1 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item2 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2 ==\
    \ interval2.Item1)\n            return \"YES\";\n        return \"NO\";", "  \
    \      long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 < start2 || end1 < end2)\n            return \"NO\";\n      \
    \  long length = end1 - start1 + 1;\n        if (length % 2 == 0)\n          \
    \  return \"NO\";\n        long max = Math.Max(end1, end2);\n        long min\
    \ = Math.Min(start1, start2);\n        long count = 0;\n        for (long i =\
    \ min; i <= max; i++) {\n            if (i % 2 == 0)\n                count++;\n\
    \        }\n        if (count % 2 == 0)\n            return \"NO\";\n        return\
    \ \"YES\";", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 > interval2.Item2)\n       \
    \     return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        if (start == end - 1)\n            return \"YES\";\n     \
    \   if (start == end + 1)\n            return \"YES\";\n        if (start == end\
    \ - 2)\n            return \"YES\";\n        if (start == end + 2)\n         \
    \   return \"YES\";\n        if (start == end - 3)\n            return \"YES\"\
    ;\n        if (start == end + 3)\n            return \"YES\";\n        if (start\
    \ == end - 4)\n            return \"YES\";\n        if (start == end + 4)\n  \
    \          return \"YES\";\n        if (start == end - 5)\n            return\
    \ \"YES\";\n        if (start == end + 5)\n            return \"YES\";\n     \
    \   if (start == end - 6)\n            return \"YES\";\n        if (start == end\
    \ + 6)\n            return \"YES\";\n        if (start == end - 7)\n         \
    \   return \"YES\";\n        if (start == end + 7)\n            return \"YES\"\
    ;\n        if (start == end - 8)\n            return \"YES\";\n        if (start\
    \ == end + 8)\n            return \"YES\";\n        if (start == end - 9)\n  \
    \          return \"YES\";\n        if (start == end + 9)\n            return\
    \ \"YES\";\n        if (start == end - 10)\n            return \"YES\";\n    \
    \    if (start == end + 10)\n            return \"YES\";", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        long i = 3;\n        while (i * i <=\
    \ length) {\n            if (length % i == 0)\n                return \"NO\";\n\
    \            i += 2;\n        }\n        return \"YES\";", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item1\
    \ < interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2) {\n            return\
    \ \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ < interval2.Item2) {\n            return \"YES\";\n        }\n        if (interval1.Item1\
    \ > interval2.Item1 && interval1.Item2 > interval2.Item2) {\n            return\
    \ \"YES\";\n        }\n        if (interval1.Item1 > interval2.Item1 && interval1.Item2\
    \ < interval2.Item2) {\n            return \"YES\";\n        }\n        if (interval1.Item1\
    \ < interval2.Item1 && interval1.Item2 > interval2.Item2) {\n            return\
    \ \"YES\";\n        }\n        if (interval1.Item1 < interval2.Item1 && interval1.Item2\
    \ < interval2.Item2) {\n            return \"YES\";\n        }\n        return\
    \ \"NO\";", "        if (interval1.Item1 > interval2.Item1) {\n            return\
    \ \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2) {\n     \
    \       return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) {\n            return \"YES\";\n    \
    \    }\n        long min = Math.Min(interval1.Item1, interval2.Item1);\n     \
    \   long max = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = max - min + 1;\n        if (length % 2 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length == 2) {\n            return \"YES\";\n      \
    \  }\n        if (length % 3 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 5 == 0) {\n            return \"NO\";\n        }\n     \
    \   if (length % 7 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 11 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 13 == 0) {\n            return \"NO\";\n        }\n        if (length % 17\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 19 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 23 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 29 == 0) {\n    \
    \        return \"NO\";\n        }\n        if (length % 31 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length % 37 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 41 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 43 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 47 == 0) {\n            ", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item2 < interval2.Item1) {\n            return \"NO\";\n\
    \        }\n        if (interval1.Item1 > interval2.Item2) {\n            return\
    \ \"NO\";\n        }\n        if (interval1.Item2 > interval2.Item2) {\n     \
    \       return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        long length\
    \ = end - start + 1;\n        if (length % 2 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 3 == 0) {\n            return \"NO\";\n   \
    \     }\n        if (length % 5 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 7 == 0) {\n            return \"NO\";\n        }\n     \
    \   if (length % 11 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 13 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 17 == 0) {\n            return \"NO\";\n        }\n        if (length % 19\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 23 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 29 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 31 == 0) {\n    \
    \        return \"NO\";\n        }\n        if (length % 37 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length % 41 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 43 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 47 == 0", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2) {\n            return\
    \ \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item1) {\n   \
    \         return \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item1)\
    \ {\n            return \"YES\";\n        }\n        long length = interval1.Item2\
    \ - interval1.Item1 + 1;\n        if (length % 2 == 0) {\n            return \"\
    NO\";\n        }\n        if (length % 3 == 0) {\n            return \"NO\";\n\
    \        }\n        if (length % 5 == 0) {\n            return \"NO\";\n     \
    \   }\n        if (length % 7 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 11 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length % 13 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 17 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 19 == 0) {\n            return \"NO\";\n        }\n        if (length % 23\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 29 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 31 == 0) {\n\
    \            return", "        if (interval1.Item1 > interval2.Item1) {\n    \
    \        Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end)\n            return \"NO\";\n  \
    \      if (start == end)\n            return \"YES\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     if (length % 3 == 0)\n            return \"NO\";\n        if (length % 5\
    \ == 0)\n            return \"NO\";\n        if (length % 7 == 0)\n          \
    \  return \"NO\";\n        if (length % 11 == 0)\n            return \"NO\";\n\
    \        if (length % 13 == 0)\n            return \"NO\";\n        if (length\
    \ % 17 == 0)\n            return \"NO\";\n        if (length % 19 == 0)\n    \
    \        return \"NO\";\n        if (length % 23 == 0)\n            return \"\
    NO\";\n        if (length % 29 == 0)\n            return \"NO\";\n        if (length\
    \ % 31 == 0)\n            return \"NO\";\n        if (length % 37 == 0)\n    \
    \        return \"NO\";\n        if (length % 41 == 0)\n            return \"\
    NO\";\n        if (length % 43 == 0)\n            return \"NO\";\n        if (length\
    \ % 47 == 0)\n            return \"NO\";\n        if (length % 53 == 0)\n    \
    \        return \"NO\";\n        if (length % 59 == 0)\n            return \"\
    NO\";\n        ", "        long start1 = interval1.Item1;\n        long end1 =\
    \ interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n          \
    \  return \"NO\";\n        if (start1 > end2 || start2 > end1)\n            return\
    \ \"NO\";\n        if (start1 == end1 && start2 == end2)\n            return \"\
    YES\";\n        if (start1 == end2 || start2 == end1)\n            return \"NO\"\
    ;\n        if (start1 < start2) {\n            long temp = start1;\n         \
    \   start1 = start2;\n            start2 = temp;\n        }\n        if (end1\
    \ > end2) {\n            long temp = end1;\n            end1 = end2;\n       \
    \     end2 = temp;\n        }\n        long length = end1 - start1 + 1;\n    \
    \    if (length % 2 == 0)\n            return \"NO\";\n        long mid = start1\
    \ + (length / 2);\n        if (mid == end2)\n            return \"YES\";\n   \
    \     if (mid > end2)\n            return \"NO\";\n        if (mid < start2)\n\
    \            return \"NO\";\n        if (mid == start2) {\n            if (mid\
    \ == end2)\n                return \"YES\";\n            if (mid == end1)\n  \
    \              return \"NO\";\n            return \"YES\";\n        }\n      \
    \  if (mid == end1)\n            return \"YES\";\n        return \"NO\";", " \
    \       if (interval1.Item1 > interval2.Item1)\n            return \"NO\";\n \
    \       if (interval1.Item1 == interval2.Item1) {\n            if (interval1.Item2\
    \ > interval2.Item2)\n                return \"NO\";\n            if (interval1.Item2\
    \ == interval2.Item2)\n                return \"YES\";\n            return \"\
    NO\";\n        }\n        return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        long length\
    \ = end - start + 1;\n        if (length % 2 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 3 == 0) {\n            return \"NO\";\n   \
    \     }\n        if (length % 5 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 7 == 0) {\n            return \"NO\";\n        }\n     \
    \   if (length % 11 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 13 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 17 == 0) {\n            return \"NO\";\n        }\n        if (length % 19\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 23 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 29 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 31 == 0) {\n    \
    \        return \"NO\";\n        }\n        if (length % 37 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length % 41 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 43 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 47 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 53 == 0) {\n            return \"NO\";\n      \
    \  }\n        if (length % 59 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 61 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length % 67 ==", "        long start1 = interval1.Item1;\n        long\
    \ end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n     \
    \       return \"NO\";\n        if (start1 > end2 || start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end1 && start2 == end2)\n         \
    \   return \"YES\";\n        if (start1 == end2 || start2 == end1)\n         \
    \   return \"NO\";\n        if (start1 < start2) {\n            long temp = start1;\n\
    \            start1 = start2;\n            start2 = temp;\n        }\n       \
    \ if (end1 < end2) {\n            long temp = end1;\n            end1 = end2;\n\
    \            end2 = temp;\n        }\n        long length = end1 - start1 + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ == 1)\n            return \"YES\";\n        long mid = start1 + (length / 2);\n\
    \        if (mid == end1)\n            return \"YES\";\n        if (mid > end1)\n\
    \            mid = end1;\n        if (mid < start2)\n            mid = start2;\n\
    \        if (mid == start2)\n            return \"YES\";\n        if (mid == end2)\n\
    \            return \"YES\";\n        if (mid > end2)\n            mid = end2;\n\
    \        if (mid < start1)\n            mid = start1;\n        long count = 0;\n\
    \        for (long i = mid; i <= end2; i++) {\n            if (i >= start1 &&\
    \ i <= end1)\n                count++;\n        }\n        if (count % 2 == 0)\n\
    \            return \"NO\";\n        return \"YES\";", "        if (interval1.Item1\
    \ > interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     if (length % 3 == 0)\n            return \"NO\";\n        if (length % 5\
    \ == 0)\n            return \"NO\";\n        if (length % 7 == 0)\n          \
    \  return \"NO\";\n        if (length % 11 == 0)\n            return \"NO\";\n\
    \        if (length % 13 == 0)\n            return \"NO\";\n        if (length\
    \ % 17 == 0)\n            return \"NO\";\n        if (length % 19 == 0)\n    \
    \        return \"NO\";\n        if (length % 23 == 0)\n            return \"\
    NO\";\n        if (length % 29 == 0)\n            return \"NO\";\n        if (length\
    \ % 31 == 0)\n            return \"NO\";\n        if (length % 37 == 0)\n    \
    \        return \"NO\";\n        if (length % 41 == 0)\n            return \"\
    NO\";\n        if (length % 43 == 0)\n            return \"NO\";\n        if (length\
    \ % 47 == 0)\n            return \"NO\";\n        if (length % 53 == 0)\n    \
    \        return \"NO\";\n        if (length % 59 == 0)\n            return \"\
    NO\";\n        if (length % 61 == 0)\n            return \"NO\";\n        if (length\
    \ % 67 == 0)\n            return \"NO\";\n        if (length % 71 == 0)\n    \
    \        return \"NO\";\n        if (length % 73 == 0)\n            return \"\
    NO\";\n        if (length % 79 == 0)\n            return \"NO\";", "        long\
    \ start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        if\
    \ (start1 > end1 || start2 > end2)\n            return \"NO\";\n        if (start1\
    \ > end2 || start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end1 && start2 == end2)\n            return \"YES\";\n        if (start1 ==\
    \ end2 || start2 == end1)\n            return \"NO\";\n        if (start1 > end2\
    \ || start2 > end1)\n            return \"NO\";\n        if (start1 == end2 ||\
    \ start2 == end1)\n            return \"NO\";\n        if (start1 > end2 && start2\
    \ > end1)\n            return \"NO\";\n        if (start1 == end2 && start2 ==\
    \ end1)\n            return \"NO\";\n        if (start1 > end2 && start2 > end1)\n\
    \            return \"NO\";\n        if (start1 == end2 && start2 == end1)\n \
    \           return \"NO\";\n        if (start1 > end2 && start2 > end1)\n    \
    \        return \"NO\";\n        if (start1 == end2 && start2 == end1)\n     \
    \       return \"NO\";\n        if (start1 > end2 && start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end2 && start2 == end1)\n         \
    \   return \"NO\";\n        if (start1 > end2 && start2 > end1)\n            return\
    \ \"NO\";\n        if (start1 == end2 && start2 == end1)\n            return \"\
    NO\";\n        if (start1 > end2 && start2 > end1)\n            return \"NO\"\
    ;\n        if (start1 == end2 && start2 == end1)\n            return \"NO\";\n\
    \        if (start1 > end2 && start2 > end1)\n            return \"NO\";\n   \
    \     if (start1 == end2 && start2 == end1)\n            return \"NO\";\n    \
    \    if (start1 > end2 && start2 > end1)\n            return \"NO\";\n       \
    \ if", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2 || start2 > end1)\n            return \"NO\";\n        if\
    \ (start1 == end2 || start2 == end1)\n            return \"NO\";\n        if (start1\
    \ > end2 || start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end2 || start2 == end1)\n            return \"NO\";\n        if (start1 > end2\
    \ || start2 > end1)\n            return \"NO\";\n        if (start1 == end2 ||\
    \ start2 == end1)\n            return \"NO\";\n        if (start1 > end2 || start2\
    \ > end1)\n            return \"NO\";\n        if (start1 == end2 || start2 ==\
    \ end1)\n            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n\
    \            return \"NO\";\n        if (start1 == end2 || start2 == end1)\n \
    \           return \"NO\";\n        if (start1 > end2 || start2 > end1)\n    \
    \        return \"NO\";\n        if (start1 == end2 || start2 == end1)\n     \
    \       return \"NO\";\n        if (start1 > end2 || start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end2 || start2 == end1)\n         \
    \   return \"NO\";\n        if (start1 > end2 || start2 > end1)\n            return\
    \ \"NO\";\n        if (start1 == end2 || start2 == end1)\n            return \"\
    NO\";\n        if (start1 > end2 || start2 > end1)\n            return \"NO\"\
    ;\n        if", "        if (interval1.Item1 > interval2.Item1) {\n          \
    \  Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n \
    \           interval2 = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item2 > interval2.Item2)\n\
    \            return \"NO\";\n        long min = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long max = Math.Min(interval1.Item2, interval2.Item2);\n        if (min\
    \ > max)\n            return \"NO\";\n        if (min == max)\n            return\
    \ \"YES\";\n        if (min == max - 1)\n            return \"YES\";\n       \
    \ if (min == max - 2)\n            return \"YES\";\n        if (min == max - 3)\n\
    \            return \"YES\";\n        if (min == max - 4)\n            return\
    \ \"YES\";\n        if (min == max - 5)\n            return \"YES\";\n       \
    \ if (min == max - 6)\n            return \"YES\";\n        if (min == max - 7)\n\
    \            return \"YES\";\n        if (min == max - 8)\n            return\
    \ \"YES\";\n        if (min == max - 9)\n            return \"YES\";\n       \
    \ if (min == max - 10)\n            return \"YES\";\n        if (min == max -\
    \ 11)\n            return \"YES\";\n        if (min == max - 12)\n           \
    \ return \"YES\";\n        if (min == max - 13)\n            return \"YES\";\n\
    \        if (min == max - 14)\n            return \"YES\";\n        if (min ==\
    \ max - 15)\n            return \"YES\";\n        if (min == max - 16)\n     \
    \       return \"YES\";\n        if (min == max - 17)\n            return \"YES\"\
    ;\n        if (min == max - 18)\n            return \"YES\";\n        if (min\
    \ == max - 19)\n            return \"YES\";\n        if (min == max - 20)\n  \
    \          return \"YES\";", "        long start1 = interval1.Item1;\n       \
    \ long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n     \
    \   long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 < start2) {\n            long temp\
    \ = start1;\n            start1 = start2;\n            start2 = temp;\n      \
    \  }\n        if (end1 > end2) {\n            long temp = end1;\n            end1\
    \ = end2;\n            end2 = temp;\n        }\n        long length = end1 - start1\
    \ + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n        long\
    \ i = start1 + 1;\n        while (i <= end2) {\n            if (i % 2 == 0) {\n\
    \                i += 2;\n                continue;\n            }\n         \
    \   if (i % 3 == 0) {\n                i += 3;\n                continue;\n  \
    \          }\n            if (i % 5 == 0) {\n                i += 5;\n       \
    \         continue;\n            }\n            if (i % 7 == 0) {\n          \
    \      i += 7;\n                continue;\n            }\n            if (i %\
    \ 11 == 0) {\n                i += 11;\n                continue;\n          \
    \  }\n            if (i % 13 == 0) {\n                i += 13;\n             \
    \   continue;\n            }\n            if (i % 17 == 0) {\n               \
    \ i += 17;\n                continue;\n            }\n            if (i % 19 ==\
    \ 0) {\n                i += 19;\n                continue;\n            }\n \
    \           if (i % 23 == 0) {\n                i += 23;\n                continue;\n\
    \            }\n            if (i % 29 == 0) {\n                i += 29;\n   \
    \             continue;\n            }\n            if (i % 31 == 0) {\n     \
    \           i", "        if (interval1.Item1 > interval2.Item1 || interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ <= interval2.Item1 && interval1.Item2 >= interval2.Item2)\n            return\
    \ \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        long length = end - start + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        long prime\
    \ = length / 2;\n        if (prime == 1)\n            return \"YES\";\n      \
    \  return \"NO\";", "        if (interval1.Item1 > interval2.Item1 || interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        long length = end - start + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ % 3 == 0)\n            return \"NO\";\n        if (length % 5 == 0)\n      \
    \      return \"NO\";\n        if (length % 7 == 0)\n            return \"NO\"\
    ;\n        if (length % 11 == 0)\n            return \"NO\";\n        if (length\
    \ % 13 == 0)\n            return \"NO\";\n        if (length % 17 == 0)\n    \
    \        return \"NO\";\n        if (length % 19 == 0)\n            return \"\
    NO\";\n        if (length % 23 == 0)\n            return \"NO\";\n        if (length\
    \ % 29 == 0)\n            return \"NO\";\n        if (length % 31 == 0)\n    \
    \        return \"NO\";\n        if (length % 37 == 0)\n            return \"\
    NO\";\n        if (length % 41 == 0)\n            return \"NO\";\n        if (length\
    \ % 43 == 0)\n            return \"NO\";\n        if (length % 47 == 0)\n    \
    \        return \"NO\";\n        if (length % 53 == 0)\n            return \"\
    NO\";\n        if (length % 59 == 0)\n            return \"NO\";\n        if (length\
    \ % 61 == 0)\n            return \"NO\";\n        if (length % 67 == 0)\n    \
    \        return \"NO\";\n        if (length % 71 == 0)\n            return \"\
    NO\";\n        if (length % 73 == 0)\n            return \"NO\";\n        if (length\
    \ % 79 == 0)\n            return \"NO\";\n        if (length % 83 == 0)\n    \
    \        return \"NO\";\n        if (length %", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 > end2)\n            return \"NO\"\
    ;\n        if (start2 > end1)\n            return \"NO\";\n        if (start1\
    \ == end2)\n            return \"YES\";\n        if (start2 == end1)\n       \
    \     return \"YES\";\n        if (start1 > end2)\n            return \"NO\";\n\
    \        if (start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end2)\n            return \"YES\";\n        if (start2 == end1)\n          \
    \  return \"YES\";\n        if (start1 > end2)\n            return \"NO\";\n \
    \       if (start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end2)\n            return \"YES\";\n        if (start2 == end1)\n          \
    \  return \"YES\";\n        if (start1 > end2)\n            return \"NO\";\n \
    \       if (start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end2)\n            return \"YES\";\n        if (start2 == end1)\n          \
    \  return \"YES\";\n        if (start1 > end2)\n            return \"NO\";\n \
    \       if (start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end2)\n            return \"YES\";\n        if (start2 == end1)\n          \
    \  return \"YES\";\n        if (start1 > end2)\n            return \"NO\";\n \
    \       if (start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end2)\n            return \"YES\";\n        if (start2 == end1", "        long\
    \ start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        if\
    \ (start1 > end1 || start2 > end2)\n            return \"NO\";\n        if (start1\
    \ < start2 || end1 < end2)\n            return \"NO\";\n        long length =\
    \ end1 - start1 + 1;\n        if (length % 2 == 0)\n            return \"NO\"\
    ;\n        long max = Math.Max(end1, end2);\n        for (long i = start1 + 1;\
    \ i <= max; i++) {\n            if (i % 2 == 0)\n                continue;\n \
    \           if (i > end1 || i > end2)\n                return \"NO\";\n      \
    \      if (i == end1 || i == end2)\n                return \"YES\";\n        }\n\
    \        return \"NO\";", "        long start1 = interval1.Item1;\n        long\
    \ end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n     \
    \       return \"NO\";\n        if (start1 < start2 || end1 < end2)\n        \
    \    return \"NO\";\n        if (start1 > end2 || start2 > end1)\n           \
    \ return \"NO\";\n        if (start1 == start2 && end1 == end2)\n            return\
    \ \"YES\";\n        if (start1 == start2) {\n            if (end1 > end2)\n  \
    \              return \"YES\";\n            return \"NO\";\n        }\n      \
    \  if (start1 > start2) {\n            if (end1 < end2)\n                return\
    \ \"NO\";\n            return \"YES\";\n        }\n        if (end1 < end2) {\n\
    \            if (start1 > start2)\n                return \"NO\";\n          \
    \  return \"YES\";\n        }\n        if (end1 == end2) {\n            if (start1\
    \ < start2)\n                return \"NO\";\n            return \"YES\";\n   \
    \     }\n        return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        long min = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long max = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        if (min > max)\n            return \"NO\";\n        if (min == max)\n\
    \            return \"YES\";\n        long length = max - min + 1;\n        if\
    \ (length % 2 == 0)\n            return \"NO\";\n        return \"YES\";", " \
    \       long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2)\n            return \"NO\";\n        if (start2 > end1)\n\
    \            return \"NO\";\n        long length = Math.min(end1, end2) - Math.max(start1,\
    \ start2) + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     if (length == 2)\n            return \"YES\";\n        if (length == 3)\n\
    \            return \"YES\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item1)\n            return \"YES\";\n        return \"NO\";", " \
    \       if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long>\
    \ temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item1 > interval2.Item1 && interval1.Item2 <\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 >\
    \ interval2.Item1 && interval1.Item2 > interval2.Item2)\n            return \"\
    YES\";\n        if (interval1.Item1 < interval2.Item1 && interval1.Item2 > interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 < interval2.Item1 &&\
    \ interval1.Item2 < interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 < interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item", "        long start1\
    \ = interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start1\
    \ > end1 || start2 > end2)\n            return \"NO\";\n        if (start1 > end2\
    \ || start2 > end1)\n            return \"NO\";\n        if (start1 == end1 &&\
    \ start2 == end2)\n            return \"YES\";\n        if (start1 == end2 ||\
    \ start2 == end1)\n            return \"NO\";\n        long length = end1 - start1\
    \ + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n        long\
    \ start = Math.Max(start1, start2);\n        long end = Math.Min(end1, end2);\n\
    \        long length1 = end - start + 1;\n        long length2 = end2 - start2\
    \ + 1;\n        if (length1 % 2 == 0 || length2 % 2 == 0)\n            return\
    \ \"NO\";\n        long length12 = length1 + length2;\n        if (length12 %\
    \ 2 == 0)\n            return \"NO\";\n        long length3 = length12 / 2;\n\
    \        long length4 = length12 - length3;\n        long length5 = length12 -\
    \ length3 - length4;\n        long length6 = length12 - length3 - length4 - length5;\n\
    \        long length7 = length12 - length3 - length4 - length5 - length6;\n  \
    \      long length8 = length12 - length3 - length4 - length5 - length6 - length7;\n\
    \        long length9 = length12 - length3 - length4 - length5 - length6 - length7\
    \ - length8;\n        long length10 = length12 - length3 - length4 - length5 -\
    \ length6 - length7 - length8 - length9;\n        long length11 = length12 - length3\
    \ - length4 - length5 - length6 - length7 - length8 - length9 - length10;\n  \
    \      long length12 = length12 - length3 - length4 - length5 - length6 - length7\
    \ - length8 - length9 - length10 - length11;\n        if (length12 == 1)\n   \
    \         return", "        if (interval1.Item1 > interval2.Item1) {\n       \
    \     Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n\
    \            return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        long length = end - start + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ == 2)\n            return \"YES\";\n        long[] primes = {2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173,\
    \ 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263,\
    \ 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359,\
    \ 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457,\
    \ 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569,\
    \ 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,\
    \ 661, 673, 677, 683,", "        if (interval1.Item1 > interval2.Item1)\n    \
    \        return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n    \
    \        return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n    \
    \        return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n    \
    \        return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        long min = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long max = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        if (min > max)\n            return \"NO\";\n        if (min == max)\n\
    \            return \"YES\";\n        long length = max - min + 1;\n        if\
    \ (length % 2 == 0)\n            return \"NO\";\n        return \"YES\";", " \
    \       long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2)\n            return Intersection(new Tuple<long, long>(start1,\
    \ end1), interval2);\n        if (start2 > end1)\n            return Intersection(interval1,\
    \ new Tuple<long, long>(start2, end2));\n        if (start1 == end2)\n       \
    \     return Intersection(new Tuple<long, long>(start1, end1), new Tuple<long,\
    \ long>(start2, end2));\n        if (start2 == end1)\n            return Intersection(new\
    \ Tuple<long, long>(start1, end1), new Tuple<long, long>(start2, end2));\n   \
    \     if (start1 > end2)\n            return Intersection(new Tuple<long, long>(start1,\
    \ end1), new Tuple<long, long>(start2, end2));\n        if (start2 > end1)\n \
    \           return Intersection(new Tuple<long, long>(start1, end1), new Tuple<long,\
    \ long>(start2, end2));\n        if (start1 == end2)\n            return Intersection(new\
    \ Tuple<long, long>(start1, end1), new Tuple<long, long>(start2, end2));\n   \
    \     if (start2 == end1)\n            return Intersection(new Tuple<long, long>(start1,\
    \ end1), new Tuple<long, long>(start2, end2));\n        if (start1 == end2)\n\
    \            return Intersection(new Tuple<long, long>(start1, end1), new Tuple<long,\
    \ long>(start2, end2));\n        ", "        if (interval1.Item1 > interval2.Item1\
    \ || interval1.Item2 < interval2.Item2)\n            return \"NO\";\n        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end)\n            return \"NO\";\n  \
    \      if (start == end)\n            return \"YES\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     long prime = length / 2;\n        if (prime == 2)\n            return \"\
    YES\";\n        if (prime % 2 == 0)\n            return \"NO\";\n        return\
    \ \"YES\";", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2)\n            return Intersection(interval2, interval1);\n\
    \        if (start2 > end1)\n            return Intersection(interval1, interval2);\n\
    \        if (start1 == end2)\n            return Intersection(interval1, interval2);\n\
    \        if (start2 == end1)\n            return Intersection(interval2, interval1);\n\
    \        if (start1 == end2)\n            return Intersection(interval1, interval2);\n\
    \        if (start2 == end1)\n            return Intersection(interval2, interval1);\n\
    \        if (start1 > end2)\n            return Intersection(interval2, interval1);\n\
    \        if (start2 > end1)\n            return Intersection(interval1, interval2);\n\
    \        if (start1 == end2)\n            return Intersection(interval1, interval2);\n\
    \        if (start2 == end1)\n            return Intersection(interval2, interval1);\n\
    \        if (start1 > end2)\n            return Intersection(interval2, interval1);\n\
    \        if (start2 > end1)\n            return Intersection(interval1, interval2);\n\
    \        if (start1 == end2)\n            return Intersection(interval1, interval2);\n\
    \        if (start2 == end1)\n            return Intersection(interval2, interval1);\n\
    \        if (start1 > end2)\n            return Intersection(interval2, interval1);\n\
    \        if (start2 > end1)\n            return Intersection(interval1, interval2);\n\
    \        if (start1 == end2", "        long start1 = interval1.Item1;\n      \
    \  long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n    \
    \    long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 < start2 && end1 > end2)\n       \
    \     return \"NO\";\n        if (start2 < start1 && end2 > end1)\n          \
    \  return \"NO\";\n        if (start1 < start2 && end1 > end2)\n            return\
    \ \"YES\";\n        if (start2 < start1 && end2 > end1)\n            return \"\
    YES\";\n        if (start1 == start2 && end1 == end2)\n            return \"YES\"\
    ;\n        if (start1 == start2 && end1 > end2)\n            return \"YES\";\n\
    \        if (start1 > start2 && end1 < end2)\n            return \"YES\";\n  \
    \      if (start2 > start1 && end2 < end1)\n            return \"YES\";\n    \
    \    if (start1 > start2 && end1 < end2)\n            return \"YES\";\n      \
    \  if (start2 > start1 && end2 < end1)\n            return \"YES\";\n        if\
    \ (start1 == start2 && end1 < end2)\n            return \"YES\";\n        if (start2\
    \ == start1 && end2 < end1)\n            return \"YES\";\n        if (start1 >\
    \ start2 && end1 == end2)\n            return \"YES\";\n        if (start2 > start1\
    \ && end2 == end1)\n            return \"YES\";\n        if (start1 == start2\
    \ && end1 == end2)\n            return \"YES\";\n        if (start1 > start2 &&\
    \ end1 > end2)\n            return \"YES\";\n        if (start2 > start1 && end2\
    \ > end1)\n            return \"YES\";\n        if", "        if (interval1.Item1\
    \ > interval2.Item1 || interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        long length = end - start + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ == 2)\n            return \"YES\";\n        long[] primes = {2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97};\n        for (int i = 0; i < primes.Length; i++) {\n            if (primes[i]\
    \ > length)\n                return \"YES\";\n            if (length % primes[i]\
    \ == 0)\n                return \"NO\";\n        }\n        return \"YES\";",
  "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ long length = end1 - start1 + 1;\n        if (length % 2 == 0)\n           \
    \ return \"NO\";\n        long length2 = end2 - start2 + 1;\n        if (length2\
    \ % 2 == 0)\n            return \"NO\";\n        long length3 = length * length2;\n\
    \        if (length3 % 2 == 0)\n            return \"NO\";\n        long length4\
    \ = length3 / 2;\n        if (length4 % 2 == 0)\n            return \"NO\";\n\
    \        return \"YES\";", "        long start1 = interval1.Item1;\n        long\
    \ end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n     \
    \       return \"NO\";\n        if (start1 > end2 || start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end1 && start2 == end2)\n         \
    \   return \"YES\";\n        long min = Math.Min(start1, start2);\n        long\
    \ max = Math.Max(end1, end2);\n        if (min > max)\n            return \"NO\"\
    ;\n        if (min == max)\n            return \"YES\";\n        long length =\
    \ max - min + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n \
    \       if (length % 3 == 0)\n            return \"NO\";\n        if (length %\
    \ 5 == 0)\n            return \"NO\";\n        if (length % 7 == 0)\n        \
    \    return \"NO\";\n        if (length % 11 == 0)\n            return \"NO\"\
    ;\n        if (length % 13 == 0)\n            return \"NO\";\n        if (length\
    \ % 17 == 0)\n            return \"NO\";\n        if (length % 19 == 0)\n    \
    \        return \"NO\";\n        if (length % 23 == 0)\n            return \"\
    NO\";\n        if (length % 29 == 0)\n            return \"NO\";\n        if (length\
    \ % 31 == 0)\n            return \"NO\";\n        if (length % 37 == 0)\n    \
    \        return \"NO\";\n        if (length % 41 == 0)\n            return \"\
    NO\";\n        if (length % 43 == 0)\n            return \"NO\";\n        if (length\
    \ % 47 == 0)\n            return \"NO\";\n        if (length % 53 == 0)\n    \
    \        return \"NO\";\n        if (length % 59 == 0)\n            return \"\
    NO\";\n        if (length % 61 == 0)\n            return \"NO\";\n        if (length\
    \ % 67 == 0)\n            return \"NO\";\n        if (length % 71 == 0)\n    \
    \        return \"NO\";\n        if (length % 73 == 0)", "        if (interval1.Item1\
    \ > interval2.Item1 || interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 < interval2.Item1 && interval1.Item2 >\
    \ interval2.Item2)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839,", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item2 < interval2.Item1) {\n     \
    \       return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) {\n            return \"YES\";\n    \
    \    }\n        if (interval1.Item1 == interval2.Item1) {\n            return\
    \ \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item2) {\n   \
    \         return \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item1)\
    \ {\n            return \"YES\";\n        }\n        long min = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long max = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = max - min + 1;\n        if (length % 2 == 0) {\n      \
    \      return \"NO\";\n        }\n        if (length % 3 == 0) {\n           \
    \ return \"NO\";\n        }\n        if (length % 5 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 7 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 11 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 13 == 0) {\n            return \"NO\";\n      \
    \  }\n        if (length % 17 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 19 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length % 23 == 0) {\n            return \"NO\";\n", "        long start1\
    \ = interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start1\
    \ > end1 || start2 > end2)\n            return \"NO\";\n        if (start1 > end2\
    \ || start2 > end1)\n            return \"NO\";\n        if (start1 == end1 &&\
    \ start2 == end2)\n            return \"YES\";\n        if (start1 == end2 ||\
    \ start2 == end1)\n            return \"NO\";\n        if (start1 > end2)\n  \
    \          return \"NO\";\n        if (start2 > end1)\n            return \"NO\"\
    ;\n        if (start1 == end2)\n            return \"YES\";\n        if (start2\
    \ == end1)\n            return \"YES\";\n        if (start1 > end2)\n        \
    \    return \"NO\";\n        if (start2 > end1)\n            return \"NO\";\n\
    \        if (start1 == end2)\n            return \"YES\";\n        if (start2\
    \ == end1)\n            return \"YES\";\n        if (start1 > end2)\n        \
    \    return \"NO\";\n        if (start2 > end1)\n            return \"NO\";\n\
    \        if (start1 == end2)\n            return \"YES\";\n        if (start2\
    \ == end1)\n            return \"YES\";\n        if (start1 > end2)\n        \
    \    return \"NO\";\n        if (start2 > end1)\n            return \"NO\";\n\
    \        if (start1 == end2)\n            return \"YES\";\n        if (start2\
    \ == end1)\n            return \"YES\";\n        if (start1 > end2)\n        \
    \    return \"NO\";\n        if (start2 > end1)\n            return \"NO\";\n\
    \        if (start1 == end2)\n            return \"YES\";\n        if (start2\
    \ == end1)\n            return \"YES\";\n        if (start1 > end2)\n        \
    \    return \"NO\";\n        if (start2 > end1)\n            return \"NO\";\n\
    \        if (start1 == end2)\n            return \"YES\";\n        if (start2\
    \ == end1", "        if (interval1.Item1 > interval2.Item1 || interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     long prime = length / 2;\n        if (Numerics.IsPrime(prime))\n       \
    \     return \"YES\";\n        return \"NO\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"YES\";\n        if (start1 < start2 && end1 > end2)\n      \
    \      return \"NO\";\n        if (start2 < start1 && end2 > end1)\n         \
    \   return \"NO\";\n        if (start1 < start2 && end1 > end2)\n            return\
    \ \"YES\";\n        if (start2 < start1 && end2 > end1)\n            return \"\
    YES\";\n        long length = Math.Max(end1 - start1, end2 - start2);\n      \
    \  if (length % 2 == 0)\n            return \"NO\";\n        if (length % 3 ==\
    \ 0)\n            return \"NO\";\n        if (length % 5 == 0)\n            return\
    \ \"NO\";\n        if (length % 7 == 0)\n            return \"NO\";\n        if\
    \ (length % 11 == 0)\n            return \"NO\";\n        if (length % 13 == 0)\n\
    \            return \"NO\";\n        if (length % 17 == 0)\n            return\
    \ \"NO\";\n        if (length % 19 == 0)\n            return \"NO\";\n       \
    \ if (length % 23 == 0)\n            return \"NO\";\n        if (length % 29 ==\
    \ 0)\n            return \"NO\";\n        if (length % 31 == 0)\n            return\
    \ \"NO\";\n        if (length % 37 == 0)\n            return \"NO\";\n       \
    \ if (length % 41 == 0)\n            return \"NO\";\n        if (length % 43 ==\
    \ 0)\n            return \"NO\";\n        if (length % 47 == 0)\n            return\
    \ \"NO\";\n        if (length % 53 == 0)\n            return \"NO\";\n       \
    \ if (length % 59 == 0)\n            return \"NO\";\n        if (length % 61 ==\
    \ 0)\n            return \"NO\";\n        ", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) {\n            return \"YES\";\n    \
    \    }\n        if (interval1.Item1 == interval2.Item1) {\n            return\
    \ \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item2) {\n   \
    \         return \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item1)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) {\n            return \"YES\";\n    \
    \    }\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) {\n            return \"YES\";\n    \
    \    }\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) {\n            return \"YES\";\n    \
    \    }\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval", "        if (interval1.Item1 > interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item1 == interval2.Item1) {\n\
    \            if (interval1.Item2 > interval2.Item2)\n                return \"\
    NO\";\n            if (interval1.Item2 == interval2.Item2)\n                return\
    \ \"YES\";\n            return \"NO\";\n        }\n        return \"NO\";", " \
    \       if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long>\
    \ temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.", " \
    \       long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 < start2 || end1 < end2)\n            return \"NO\";\n      \
    \  long length = end1 - start1 + 1;\n        if (length % 2 == 0)\n          \
    \  return \"NO\";\n        long mid = start1 + (length / 2);\n        if (mid\
    \ > end2)\n            return \"NO\";\n        if (mid < start2)\n           \
    \ return \"NO\";\n        if (length == 2)\n            return \"YES\";\n    \
    \    long left = start2 - mid;\n        long right = mid - start1;\n        if\
    \ (left > right)\n            return \"NO\";\n        if (left == right)\n   \
    \         return \"YES\";\n        if (left == 0)\n            return \"YES\"\
    ;\n        if (right == 0)\n            return \"YES\";\n        long left_prime\
    \ = left;\n        long right_prime = right;\n        while (left_prime < right_prime)\
    \ {\n            if (left_prime % 2 == 0)\n                left_prime++;\n   \
    \         else\n                left_prime += 2;\n        }\n        while (right_prime\
    \ < left_prime) {\n            if (right_prime % 2 == 0)\n                right_prime++;\n\
    \            else\n                right_prime += 2;\n        }\n        if (left_prime\
    \ == right_prime)\n            return \"YES\";\n        return \"NO\";", "   \
    \     if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long>\
    \ temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2",
  "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ long length = end1 - start1 + 1;\n        if (length % 2 == 0)\n           \
    \ return \"NO\";\n        long length2 = end2 - start2 + 1;\n        if (length2\
    \ % 2 == 0)\n            return \"NO\";\n        long length3 = length + length2;\n\
    \        if (length3 % 2 == 0)\n            return \"NO\";\n        long length4\
    \ = length * length2;\n        if (length4 % 2 == 0)\n            return \"NO\"\
    ;\n        return \"YES\";", "        if (interval1.Item1 > interval2.Item1) {\n\
    \            Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        long length\
    \ = end - start + 1;\n        if (length % 2 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 2 == 1) {\n            return \"YES\";\n  \
    \      }\n        return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 == interval2.Item1)\
    \ {\n            if (interval1.Item2 > interval2.Item2) {\n                return\
    \ \"NO\";\n            }\n            if (interval1.Item2 == interval2.Item2)\
    \ {\n                return \"YES\";\n            }\n        }\n        return\
    \ \"NO\";", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ long min = Math.Min(start1, start2);\n        long max = Math.Max(end1, end2);\n\
    \        if (min > max)\n            return \"NO\";\n        long length = max\
    \ - min + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n     \
    \   long count = 0;\n        for (long i = min; i <= max; i++) {\n           \
    \ if (i % 2 == 0)\n                count++;\n        }\n        if (count == length\
    \ / 2)\n            return \"YES\";\n        return \"NO\";", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n\
    \            return \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        if (start == end - 1)\n            return \"YES\";\n     \
    \   if (start == end + 1)\n            return \"YES\";\n        if (start + 2\
    \ == end)\n            return \"YES\";\n        if (start + 2 < end)\n       \
    \     return \"YES\";\n        if (start - 2 > end)\n            return \"YES\"\
    ;\n        if (start - 2 == end)\n            return \"YES\";\n        if (start\
    \ - 2 < end)\n            return \"YES\";\n        if (start - 2 == end - 1)\n\
    \            return \"YES\";\n        if (start - 2 == end + 1)\n            return\
    \ \"YES\";\n        if (start - 2 < end - 1)\n            return \"YES\";\n  \
    \      if (start - 2 > end + 1)\n            return \"YES\";\n        if (start\
    \ - 2 == end", "        if (interval1.Item1 > interval2.Item1) {\n           \
    \ Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n  \
    \          interval2 = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item2 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end)\n            return \"NO\";\n  \
    \      if (start == end)\n            return \"YES\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     if (length % 3 == 0)\n            return \"NO\";\n        if (length % 5\
    \ == 0)\n            return \"NO\";\n        if (length % 7 == 0)\n          \
    \  return \"NO\";\n        if (length % 11 == 0)\n            return \"NO\";\n\
    \        if (length % 13 == 0)\n            return \"NO\";\n        if (length\
    \ % 17 == 0)\n            return \"NO\";\n        if (length % 19 == 0)\n    \
    \        return \"NO\";\n        if (length % 23 == 0)\n            return \"\
    NO\";\n        if (length % 29 == 0)\n            return \"NO\";\n        if (length\
    \ % 31 == 0)\n            return \"NO\";\n        if (length % 37 == 0)\n    \
    \        return \"NO\";\n        if (length % 41 == 0)\n            return \"\
    NO\";\n        if (length % 43 == 0)\n            return \"NO\";\n        if (",
  "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2 || start2 > end1)\n            return \"NO\";\n        if\
    \ (start1 == end2 && start2 == end1)\n            return \"YES\";\n        if\
    \ (start1 == end2 && start2 == end1)\n            return \"YES\";\n        if\
    \ (start1 > end2 && start2 > end1)\n            return \"NO\";\n        if (start1\
    \ == end2 && start2 == end1)\n            return \"YES\";\n        if (start1\
    \ == end2 && start2 == end1)\n            return \"YES\";\n        if (start1\
    \ > end2 && start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end2 && start2 == end1)\n            return \"YES\";\n        if (start1 ==\
    \ end2 && start2 == end1)\n            return \"YES\";\n        if (start1 > end2\
    \ && start2 > end1)\n            return \"NO\";\n        if (start1 == end2 &&\
    \ start2 == end1)\n            return \"YES\";\n        if (start1 == end2 &&\
    \ start2 == end1)\n            return \"YES\";\n        if (start1 > end2 && start2\
    \ > end1)\n            return \"NO\";\n        if (start1 == end2 && start2 ==\
    \ end1)\n            return \"YES\";\n        if (start1 == end2 && start2 ==\
    \ end1)\n            return \"YES\";\n        if (start1 > end2 && start2 > end1)\n\
    \            return \"NO\";\n        if (start1 == end2 && start2 == end1)\n \
    \           return \"YES\";\n        if", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 > end2)\n   \
    \         return \"NO\";\n        if (start1 > start2) {\n            long temp\
    \ = start1;\n            start1 = start2;\n            start2 = temp;\n      \
    \  }\n        if (end1 < end2) {\n            long temp = end1;\n            end1\
    \ = end2;\n            end2 = temp;\n        }\n        if (start1 == end1 &&\
    \ start2 == end2)\n            return \"YES\";\n        if (start1 == end1 ||\
    \ start2 == end2)\n            return \"NO\";\n        if (start1 == start2 &&\
    \ end1 == end2)\n            return \"YES\";\n        if (start1 == start2 &&\
    \ end1 != end2)\n            return \"NO\";\n        if (start1 != start2 && end1\
    \ == end2)\n            return \"NO\";\n        if (start1 != start2 && end1 !=\
    \ end2)\n            return \"YES\";\n        if (start1 == start2 && end1 !=\
    \ end2) {\n            long temp = end1;\n            end1 = end2;\n         \
    \   end2 = temp;\n        }\n        if (start1 != start2 && end1 == end2) {\n\
    \            long temp = start1;\n            start1 = start2;\n            start2\
    \ = temp;\n        }\n        if (start1 != start2 && end1 != end2) {\n      \
    \      long temp = start1;\n            start1 = start2;\n            start2 =\
    \ temp;\n            temp = end1;\n            end1 = end2;\n            end2\
    \ = temp;\n        }\n        if (start1 == start2 && end1 == end2) {\n      \
    \      long temp = start1;\n            start1 = start2;\n            start2 =\
    \ temp;\n            temp = end1;\n            end1 = end2;\n            end2\
    \ = temp;\n        ", "        if (interval1.Item1 > interval2.Item1)\n      \
    \      return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n      \
    \      return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length % 71 == 0)\n            return \"NO\";\n        if (length % 73 ==\
    \ 0)\n            return \"NO\";\n        if (length % 79 == 0)\n            return\
    \ \"NO\";\n        if (length % 83 == 0)\n            return \"NO\";\n       \
    \ if (length % 89 == 0)\n            return \"NO\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        long min = Math.Min(start1, start2);\n      \
    \  long max = Math.Max(end1, end2);\n        if (min > max)\n            return\
    \ \"NO\";\n        long length = max - min + 1;\n        if (length % 2 == 0)\n\
    \            return \"NO\";\n        long i = min;\n        while (i <= max) {\n\
    \            if (length % 2 == 0) {\n                if (i == min)\n         \
    \           return \"YES\";\n                if (i == max)\n                 \
    \   return \"YES\";\n                if (i == min + 1)\n                    return\
    \ \"YES\";\n                if (i == max - 1)\n                    return \"YES\"\
    ;\n            }\n            i++;\n        }\n        return \"NO\";", "    \
    \    if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp\
    \ = interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item2 > interval2.Item2)\n            return\
    \ \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        if (start + 1 == end)\n            return \"YES\";\n     \
    \   if (start + 2 == end)\n            return \"YES\";\n        if (start + 3\
    \ == end)\n            return \"YES\";\n        if (start + 4 == end)\n      \
    \      return \"YES\";\n        if (start + 5 == end)\n            return \"YES\"\
    ;\n        if (start + 6 == end)\n            return \"YES\";\n        if (start\
    \ + 7 == end)\n            return \"YES\";\n        if (start + 8 == end)\n  \
    \          return \"YES\";\n        if (start + 9 == end)\n            return\
    \ \"YES\";\n        if (start + 10 == end)\n            return \"YES\";\n    \
    \    if (start + 11 == end)\n            return \"YES\";\n        if (start +\
    \ 12 == end)\n            return \"YES\";\n        if (start + 13 == end)\n  \
    \          return \"YES\";\n        if (start + 14 == end)\n            return\
    \ \"YES\";\n        if (start + 15 == end)\n            return \"YES\";\n    \
    \    if (start + 16 == end)\n            return \"YES\";\n        if (start +\
    \ 17 == end)\n            return \"YES\";\n        if (start + 18 == end)\n  \
    \          return \"YES\";\n        if (start + 19 == end)\n            return\
    \ \"YES\";\n        if (start + 20 == end)\n            return \"YES\";", "  \
    \      long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ long length = Math.min(end1, end2) - Math.max(start1, start2) + 1;\n       \
    \ if (length % 2 == 0)\n            return \"NO\";\n        if (length % 3 ==\
    \ 0)\n            return \"NO\";\n        if (length % 5 == 0)\n            return\
    \ \"NO\";\n        if (length % 7 == 0)\n            return \"NO\";\n        if\
    \ (length % 11 == 0)\n            return \"NO\";\n        if (length % 13 == 0)\n\
    \            return \"NO\";\n        if (length % 17 == 0)\n            return\
    \ \"NO\";\n        if (length % 19 == 0)\n            return \"NO\";\n       \
    \ if (length % 23 == 0)\n            return \"NO\";\n        if (length % 29 ==\
    \ 0)\n            return \"NO\";\n        if (length % 31 == 0)\n            return\
    \ \"NO\";\n        if (length % 37 == 0)\n            return \"NO\";\n       \
    \ if (length % 41 == 0)\n            return \"NO\";\n        if (length % 43 ==\
    \ 0)\n            return \"NO\";\n        if (length % 47 == 0)\n            return\
    \ \"NO\";\n        if (length % 53 == 0)\n            return \"NO\";\n       \
    \ if (length % 59 == 0)\n            return \"NO\";\n        if (length % 61 ==\
    \ 0)\n            return \"NO\";\n        if (length % 67 == 0)\n            return\
    \ \"NO\";\n        if (length % 71 == 0)\n            return \"NO\";\n       \
    \ if (length % 73 == 0)\n            return \"NO\";\n        if (length % 79 ==\
    \ 0)\n            ", "        if (interval1.Item1 > interval2.Item1) {\n     \
    \       Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item2 == interval2.Item1)\n            return \"YES\";\n        if\
    \ (interval1.Item1 == interval2.Item2)\n            return \"YES\";\n        return\
    \ \"NO\";", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        if (start + 1 == end)\n            return \"YES\";\n     \
    \   long length = end - start + 1;\n        if (length % 2 == 0)\n           \
    \ return \"NO\";\n        if (length % 3 == 0)\n            return \"NO\";\n \
    \       if (length % 5 == 0)\n            return \"NO\";\n        if (length %\
    \ 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n       \
    \     return \"NO\";\n        if (length % 13 == 0)\n            return \"NO\"\
    ;\n        if (length % 17 == 0)\n            return \"NO\";\n        if (length\
    \ % 19 == 0)\n            return \"NO\";\n        if (length % 23 == 0)\n    \
    \        return \"NO\";\n        if (length % 29 == 0)\n            return \"\
    NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n        if (length\
    \ % 37 == 0)\n            return \"NO\";\n        if (length % 41 == 0)\n    \
    \        return \"NO\";\n        if (length % 43 == 0)\n            return \"\
    NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n        if (length\
    \ % 53 == 0)\n            return \"NO\";\n        if (length % 59 == 0)\n    \
    \        return \"NO\";\n        if (length % 61 == 0)\n            return \"\
    NO\";\n        if (length", "        long start1 = interval1.Item1;\n        long\
    \ end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n     \
    \       return \"NO\";\n        if (start1 > end2 || start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end1 && start2 == end2)\n         \
    \   return \"YES\";\n        if (start1 == end2 || start2 == end1)\n         \
    \   return \"NO\";\n        long min = Math.Min(start1, start2);\n        long\
    \ max = Math.Max(end1, end2);\n        if (min > max)\n            return \"NO\"\
    ;\n        if (min == max)\n            return \"YES\";\n        long length =\
    \ max - min + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n \
    \       if (length % 3 == 0)\n            return \"NO\";\n        if (length %\
    \ 5 == 0)\n            return \"NO\";\n        if (length % 7 == 0)\n        \
    \    return \"NO\";\n        if (length % 11 == 0)\n            return \"NO\"\
    ;\n        if (length % 13 == 0)\n            return \"NO\";\n        if (length\
    \ % 17 == 0)\n            return \"NO\";\n        if (length % 19 == 0)\n    \
    \        return \"NO\";\n        if (length % 23 == 0)\n            return \"\
    NO\";\n        if (length % 29 == 0)\n            return \"NO\";\n        if (length\
    \ % 31 == 0)\n            return \"NO\";\n        if (length % 37 == 0)\n    \
    \        return \"NO\";\n        if (length % 41 == 0)\n            return \"\
    NO\";\n        if (length % 43 == 0)\n            return \"NO\";\n        if (length\
    \ % 47 == 0)\n            return \"NO\";\n        if (length % 53 == 0)\n    \
    \        return \"NO\";\n        if (length % 59 == 0)\n            return \"\
    NO\";\n        if (length % 61 == 0)\n            return \"NO\";\n        if (length\
    \ % 67 == 0)\n            return \"NO\";\n        if (", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 > interval2.Item1 &&\
    \ interval1.Item2 < interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 > interval2.Item1 && interval1.Item2 > interval2.Item2)\n \
    \           return \"YES\";\n        if (interval1.Item1 < interval2.Item1 &&\
    \ interval1.Item2 > interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 < interval2.Item1 && interval1.Item2 < interval2.Item2)\n \
    \           return \"YES\";\n        if (interval1.Item1 < interval2.Item1 &&\
    \ interval1.Item2 > interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 > interval2.Item1 && interval1.Item2 < interval2.Item2)\n \
    \           return \"YES\";\n        if (interval1.Item1 > interval2.Item1 &&\
    \ interval1.Item2 > interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 < interval2.Item1 && interval1.Item2 < interval2.Item2)\n \
    \           return \"YES\";\n        if (interval1.Item1 > interval2.Item1 &&\
    \ interval1.Item2 > interval2.Item2)\n            ", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item1\
    \ == interval2.Item1) {\n            if (interval1.Item2 > interval2.Item2) {\n\
    \                return \"NO\";\n            }\n            if (interval1.Item2\
    \ == interval2.Item2) {\n                return \"YES\";\n            }\n    \
    \    }\n        return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item2\
    \ < interval2.Item1) return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\
    \ return \"NO\";\n        if (interval1.Item2 > interval2.Item2) return \"NO\"\
    ;\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\
    \ return \"YES\";\n        if (interval1.Item1 == interval2.Item1) return \"NO\"\
    ;\n        if (interval1.Item2 == interval2.Item2) return \"NO\";\n        if\
    \ (interval1.Item1 == interval2.Item2) return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item1) return \"YES\";\n        if (interval1.Item1 == interval2.Item2)\
    \ return \"YES\";\n        if (interval1.Item2 == interval2.Item1) return \"YES\"\
    ;\n        if (interval1.Item1 == interval2.Item1) return \"NO\";\n        if\
    \ (interval1.Item2 == interval2.Item2) return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item2) return \"NO\";\n        if (interval1.Item2 == interval2.Item1)\
    \ return \"NO\";\n        return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        long min = Math.Max(interval1.Item1, interval2.Item1);\n \
    \       long max = Math.Min(interval1.Item2, interval2.Item2);\n        if (min\
    \ > max)\n            return \"NO\";\n        if (min == max)\n            return\
    \ \"YES\";\n        long length = max - min + 1;\n        if (length % 2 == 0)\n\
    \            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        ", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item2\
    \ < interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item1\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        if (start == end) {\n            return \"YES\";\n       \
    \ }\n        long length = end - start + 1;\n        if (length % 2 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length % 3 == 0) {\n     \
    \       return \"NO\";\n        }\n        if (length % 5 == 0) {\n          \
    \  return \"NO\";\n        }\n        if (length % 7 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length % 11 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length % 13 == 0) {\n            return \"NO\";\n  \
    \      }\n        if (length % 17 == 0) {\n            return \"NO\";\n      \
    \  }\n        if (length % 19 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length % 23 == 0) {\n            return \"NO\";\n        }\n    \
    \    if (length % 29 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length % 31 == 0) {\n            return \"NO\";\n        }\n        if (length\
    \ % 37 == 0) {\n            return \"NO\";\n        }\n        if (length % 41\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length % 43 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length % 47 == 0", " \
    \       if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long>\
    \ temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 < interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 < interval2.Item1 && interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 <\
    \ interval2.Item1 && interval1.Item2 < interval2.Item2) {\n            long l\
    \ = interval1.Item2 - interval1.Item1 + 1;\n            long r = interval2.Item2\
    \ - interval2.Item1 + 1;\n            if (l % 2 == 0) {\n                if (r\
    \ % 2 == 0) {\n                    if (l % r == 0) {\n                       \
    \ return \"YES\";\n                    }\n                }\n            }\n \
    \       }\n        return \"NO\";", "        // Write your code here\n       \
    \ long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n     \
    \   long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n   \
    \     if (start1 > end1 || start2 > end2)\n            return \"NO\";\n      \
    \  if (start1 < end1 && start2 < end2) {\n            long min = Math.Min(start1,\
    \ start2);\n            long max = Math.Max(end1, end2);\n            if (max\
    \ - min + 1 == 2)\n                return \"YES\";\n            if (max - min\
    \ + 1 == 3) {\n                if (Math.Sqrt((max - min + 1) * (max - min + 1)\
    \ - 4 * (max - min + 1)) == 1)\n                    return \"YES\";\n        \
    \    }\n            if (max - min + 1 == 4) {\n                if (Math.Sqrt((max\
    \ - min + 1) * (max - min + 1) - 4 * (max - min + 1)) == 2)\n                \
    \    return \"YES\";\n            }\n            if (max - min + 1 == 5) {\n \
    \               if (Math.Sqrt((max - min + 1) * (max - min + 1) - 4 * (max - min\
    \ + 1)) == 3)\n                    return \"YES\";\n            }\n          \
    \  if (max - min + 1 == 6) {\n                if (Math.Sqrt((max - min + 1) *\
    \ (max - min + 1) - 4 * (max - min + 1)) == 2)\n                    return \"\
    YES\";\n            }\n            if (max - min + 1 == 7) {\n               \
    \ if (Math.Sqrt((max - min + 1) * (max - min + 1) - 4 * (max - min + 1)) == 3)\n\
    \                    return \"YES\";\n            }\n            if (max - min\
    \ + 1 == 8) {\n                if (Math.Sqrt((max - min + 1) * (max - min + 1)\
    \ - 4 * (max - min + 1)) == 2)\n                    return \"YES\";\n        \
    \    }\n            if (max - min + 1 == 9) {\n                if (", "      \
    \  if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp\
    \ = interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item1 > interval2.Item2) {\n            return\
    \ \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item1) {\n     \
    \       return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (end - start + 1 == 2) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 3) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 4) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 5) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 6) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 7) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 8) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 9) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 10) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 11) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 12) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 13) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 14) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 == 15) {\n            return \"YES\";\n        }\n        if\
    \ (end - start + 1 ==", "        if (interval1.Item1 > interval2.Item1 || interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     if (length == 2)\n            return \"YES\";\n        long[] primes = {2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883,", "        long start1 = interval1.Item1;\n        long\
    \ end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n     \
    \       return \"NO\";\n        if (start1 > end2 || start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end1 && start2 == end2)\n         \
    \   return \"YES\";\n        if (start1 == end2 || start2 == end1)\n         \
    \   return \"NO\";\n        long min = Math.Min(start1, start2);\n        long\
    \ max = Math.Max(end1, end2);\n        if (min == max)\n            return \"\
    YES\";\n        if (min > max)\n            return \"NO\";\n        long length\
    \ = max - min + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n\
    \        long i = min + 1;\n        while (i <= max) {\n            if (length\
    \ % i == 0)\n                return \"YES\";\n            i++;\n        }\n  \
    \      return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\n    \
    \        return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n    \
    \        return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n    \
    \        return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n    \
    \        return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length % 71 == 0)\n            return \"NO\";\n        if (length % 73 ==\
    \ 0)\n            return \"NO\";\n        ", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        if (start == end - 1)\n            return \"YES\";\n     \
    \   if (start == end + 1)\n            return \"YES\";\n        if (start == end\
    \ - 2)\n            return \"YES\";\n        if (start == end + 2)\n         \
    \   return \"YES\";\n        if (start == end - 3)\n            return \"YES\"\
    ;\n        if (start == end + 3)\n            return \"YES\";\n        if (start\
    \ == end - 4)\n            return \"YES\";\n        if (start == end + 4)\n  \
    \          return \"YES\";\n        if (start == end - 5)\n            return\
    \ \"YES\";\n        if (start == end + 5)\n            return \"YES\";\n     \
    \   if (start == end - 6)\n            return \"YES\";\n        if (start == end\
    \ + 6)\n            return \"YES\";\n        if (start == end - 7)\n         \
    \   return \"YES\";\n        if (start == end + 7)\n            return \"YES\"\
    ;\n        if (start == end - 8)\n            return \"YES", "        long start1\
    \ = interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start1\
    \ > end1 || start2 > end2)\n            return \"NO\";\n        if (start1 > end2\
    \ || start2 > end1)\n            return \"NO\";\n        if (start1 == end1 &&\
    \ start2 == end2)\n            return \"YES\";\n        if (start1 == end2 ||\
    \ start2 == end1)\n            return \"NO\";\n        long length = end1 - start1;\n\
    \        long length2 = end2 - start2;\n        if (length % 2 == 0)\n       \
    \     length++;\n        if (length2 % 2 == 0)\n            length2++;\n     \
    \   if (length == length2)\n            return \"YES\";\n        if (length ==\
    \ 0 || length2 == 0)\n            return \"NO\";\n        long i = 3;\n      \
    \  while (i <= Math.Max(length, length2)) {\n            if (length % i == 0 &&\
    \ length2 % i == 0)\n                return \"YES\";\n            i += 2;\n  \
    \      }\n        return \"NO\";", "        long start1 = interval1.Item1;\n \
    \       long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\
    \ return \"NO\";\n        if (start1 >= start2 && end1 <= end2) return \"YES\"\
    ;\n        if (start2 >= start1 && end2 <= end1) return \"YES\";\n        return\
    \ \"NO\";", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 < start2 || start2 < start1)\n            return \"NO\";\n     \
    \   if (end1 < end2 || end2 < end1)\n            return \"NO\";\n        if (end1\
    \ - start1 == end2 - start2)\n            return \"YES\";\n        return \"NO\"\
    ;", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 < start2 || end1 > end2)\n            return \"NO\";\n      \
    \  if (start1 == start2 && end1 == end2)\n            return \"YES\";\n      \
    \  long min = Math.Min(start1, start2);\n        long max = Math.Max(end1, end2);\n\
    \        if (min == max)\n            return \"NO\";\n        if (min == max -\
    \ 1)\n            return \"YES\";\n        if (min == max - 2)\n            return\
    \ \"YES\";\n        if (min == max - 3)\n            return \"YES\";\n       \
    \ if (min == max - 4)\n            return \"YES\";\n        if (min == max - 5)\n\
    \            return \"YES\";\n        if (min == max - 6)\n            return\
    \ \"YES\";\n        if (min == max - 7)\n            return \"YES\";\n       \
    \ if (min == max - 8)\n            return \"YES\";\n        if (min == max - 9)\n\
    \            return \"YES\";\n        if (min == max - 10)\n            return\
    \ \"YES\";\n        if (min == max - 11)\n            return \"YES\";\n      \
    \  if (min == max - 12)\n            return \"YES\";\n        if (min == max -\
    \ 13)\n            return \"YES\";\n        if (min == max - 14)\n           \
    \ return \"YES\";\n        if (min == max - 15)\n            return \"YES\";\n\
    \        if (min == max - 16)\n            return \"YES\";\n        if (min ==\
    \ max - 17)\n            return \"YES\";\n        if (min == max - 18)\n     \
    \       return \"YES\";\n        if (min == max - 19)\n            return \"YES\"\
    ;\n        if (min == max - 20)\n            return \"YES\";\n        if (min\
    \ == max - 21)\n            return \"YES\";\n        if (min == max - 22)\n  \
    \          return \"YES\";\n        if", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        long min = Math.Min(start1, start2);\n      \
    \  long max = Math.Max(end1, end2);\n        if (min > max)\n            return\
    \ \"NO\";\n        if (min == max)\n            return \"YES\";\n        long\
    \ length = max - min + 1;\n        if (length % 2 == 0)\n            return \"\
    NO\";\n        if (length % 3 == 0)\n            return \"NO\";\n        if (length\
    \ % 5 == 0)\n            return \"NO\";\n        if (length % 7 == 0)\n      \
    \      return \"NO\";\n        if (length % 11 == 0)\n            return \"NO\"\
    ;\n        if (length % 13 == 0)\n            return \"NO\";\n        if (length\
    \ % 17 == 0)\n            return \"NO\";\n        if (length % 19 == 0)\n    \
    \        return \"NO\";\n        if (length % 23 == 0)\n            return \"\
    NO\";\n        if (length % 29 == 0)\n            return \"NO\";\n        if (length\
    \ % 31 == 0)\n            return \"NO\";\n        if (length % 37 == 0)\n    \
    \        return \"NO\";\n        if (length % 41 == 0)\n            return \"\
    NO\";\n        if (length % 43 == 0)\n            return \"NO\";\n        if (length\
    \ % 47 == 0)\n            return \"NO\";\n        if (length % 53 == 0)\n    \
    \        return \"NO\";\n        if (length % 59 == 0)\n            return \"\
    NO\";\n        if (length % 61 == 0)\n            return \"NO\";\n        if (length\
    \ % 67 == 0)\n            return \"NO\";\n        if (", "        long start1\
    \ = interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start1\
    \ > end1 || start2 > end2)\n            return \"NO\";\n        if (start1 > end2\
    \ || start2 > end1)\n            return \"NO\";\n        if (start1 == end1 &&\
    \ start2 == end2)\n            return \"YES\";\n        if (start1 == end2 ||\
    \ start2 == end1)\n            return \"NO\";\n        long length = end1 - start1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        long length1\
    \ = end2 - start2;\n        if (length1 % 2 == 0)\n            return \"NO\";\n\
    \        long length2 = end1 - start2;\n        if (length2 % 2 == 0)\n      \
    \      return \"NO\";\n        long length3 = end2 - start1;\n        if (length3\
    \ % 2 == 0)\n            return \"NO\";\n        long length4 = end1 - start2;\n\
    \        if (length4 % 2 == 0)\n            return \"NO\";\n        long length5\
    \ = end2 - start1;\n        if (length5 % 2 == 0)\n            return \"NO\";\n\
    \        long length6 = end1 - start2;\n        if (length6 % 2 == 0)\n      \
    \      return \"NO\";\n        long length7 = end2 - start1;\n        if (length7\
    \ % 2 == 0)\n            return \"NO\";\n        long length8 = end1 - start2;\n\
    \        if (length8 % 2 == 0)\n            return \"NO\";\n        long length9\
    \ = end2 - start1;\n        if (length9 % 2 == 0)\n            return \"NO\";\n\
    \        long length10 = end1 - start2;\n        if (length10 % 2 == 0)\n    \
    \        return \"NO\";\n        long length11 = end2 - start1;\n        if (length11\
    \ % 2 == 0)\n            return \"NO\";\n        long length12 = end1 - start2;\n\
    \        if (length12 % 2 == 0)\n            return \"NO\";\n        ", "    \
    \    if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp\
    \ = interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item2 < interval2.Item1) return \"NO\";\n  \
    \      if (interval1.Item1 > interval2.Item2) return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2) return \"NO\";\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) return \"YES\";\n        long min = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long max = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        if (min > max) return \"NO\";\n        long length = max - min + 1;\n\
    \        if (length % 2 == 0) return \"NO\";\n        if (length % 3 == 0) return\
    \ \"NO\";\n        if (length % 5 == 0) return \"NO\";\n        if (length % 7\
    \ == 0) return \"NO\";\n        if (length % 11 == 0) return \"NO\";\n       \
    \ if (length % 13 == 0) return \"NO\";\n        if (length % 17 == 0) return \"\
    NO\";\n        if (length % 19 == 0) return \"NO\";\n        if (length % 23 ==\
    \ 0) return \"NO\";\n        if (length % 29 == 0) return \"NO\";\n        if\
    \ (length % 31 == 0) return \"NO\";\n        if (length % 37 == 0) return \"NO\"\
    ;\n        if (length % 41 == 0) return \"NO\";\n        if (length % 43 == 0)\
    \ return \"NO\";\n        if (length % 47 == 0) return \"NO\";\n        if (length\
    \ % 53 == 0) return \"NO\";\n        if (length % 59 == 0) return \"NO\";\n  \
    \      if (length % 61 == 0) return \"NO\";\n        if (length % 67 == 0) return\
    \ \"NO\";\n        if (length % 71 == 0) return \"NO\";\n        if (length %\
    \ 73 == 0) return \"NO\";\n        if (", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        if (start1 == start2 && end1 == end2)\n    \
    \        return \"YES\";\n        long length = end1 - start1 + 1;\n        if\
    \ (length % 2 == 0)\n            return \"NO\";\n        long start = start1 +\
    \ (end1 - start1) / 2;\n        long end = start1 + (end1 - start1) / 2 + 1;\n\
    \        if (start > end)\n            return \"NO\";\n        if (start < start2\
    \ || end > end2)\n            return \"NO\";\n        if (start == start2 && end\
    \ == end2)\n            return \"YES\";\n        if (start2 < start) {\n     \
    \       start2 = start2 + (end2 - start2) / 2;\n            end2 = start2 + (end2\
    \ - start2) / 2 + 1;\n        }\n        if (end2 > end) {\n            end2 =\
    \ end2 - (end2 - end) / 2;\n            end = end2 - (end2 - end) / 2 + 1;\n \
    \       }\n        if (start2 > end2)\n            return \"NO\";\n        if\
    \ (start2 == end2)\n            return \"YES\";\n        if (start2 < start) {\n\
    \            start2 = start2 + (end2 - start2) / 2;\n            end2 = start2\
    \ + (end2 - start2) / 2 + 1;\n        }\n        if (end2 > end) {\n         \
    \   end2 = end2 - (end2 - end) / 2;\n            end = end2 - (end2 - end) / 2\
    \ + 1;\n        }\n        if (start2 > end2)\n            return \"NO\";\n  \
    \      if (start2 == end2)\n            return \"YES\";\n        if (start2 <\
    \ start) {\n            start2 = start", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        if (start1 > end2 || start2 > end1)\n      \
    \      return \"NO\";\n        if (start1 == start2 && end1 == end2)\n       \
    \     return \"YES\";\n        long length = Math.Max(end1 - start1, end2 - start2);\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ % 3 == 0)\n            return \"NO\";\n        if (length % 5 == 0)\n      \
    \      return \"NO\";\n        if (length % 7 == 0)\n            return \"NO\"\
    ;\n        if (length % 11 == 0)\n            return \"NO\";\n        if (length\
    \ % 13 == 0)\n            return \"NO\";\n        if (length % 17 == 0)\n    \
    \        return \"NO\";\n        if (length % 19 == 0)\n            return \"\
    NO\";\n        if (length % 23 == 0)\n            return \"NO\";\n        if (length\
    \ % 29 == 0)\n            return \"NO\";\n        if (length % 31 == 0)\n    \
    \        return \"NO\";\n        if (length % 37 == 0)\n            return \"\
    NO\";\n        if (length % 41 == 0)\n            return \"NO\";\n        if (length\
    \ % 43 == 0)\n            return \"NO\";\n        if (length % 47 == 0)\n    \
    \        return \"NO\";\n        if (length % 53 == 0)\n            return \"\
    NO\";\n        if (length % 59 == 0)\n            return \"NO\";\n        if (length\
    \ % 61 == 0)\n            return \"NO\";\n        if (length % 67 == 0)\n    \
    \        return \"NO\";\n        if (length % 71 == 0)\n            return \"\
    NO\";\n        if (length % 73 == 0)\n            return \"NO\";\n        if (length\
    \ % 79 == 0)\n            return \"NO\";\n        if (", "        if (interval1.Item1\
    \ > interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        if (start == end)\n\
    \            return \"YES\";\n        long length = end - start + 1;\n       \
    \ if (length % 2 == 0)\n            return \"NO\";\n        if (length % 3 ==\
    \ 0)\n            return \"NO\";\n        if (length % 5 == 0)\n            return\
    \ \"NO\";\n        if (length % 7 == 0)\n            return \"NO\";\n        if\
    \ (length % 11 == 0)\n            return \"NO\";\n        if (length % 13 == 0)\n\
    \            return \"NO\";\n        if (length % 17 == 0)\n            return\
    \ \"NO\";\n        if (length % 19 == 0)\n            return \"NO\";\n       \
    \ if (length % 23 == 0)\n            return \"NO\";\n        if (length % 29 ==\
    \ 0)\n            return \"NO\";\n        if (length % 31 == 0)\n            return\
    \ \"NO\";\n        if (length % 37 == 0)\n            return \"NO\";\n       \
    \ if (length % 41 == 0)\n            return \"NO\";\n        if (length % 43 ==\
    \ 0)\n            return \"NO\";\n        if (length % 47 == 0)\n            return\
    \ \"NO\";\n        if (length % 53 == 0)\n            return \"NO\";\n       \
    \ if (length % 59 == 0)\n            return \"NO\";\n        if (length % 61 ==\
    \ 0)\n            return \"NO\";\n        if (length % 67 == 0)\n            return\
    \ \"NO\";\n        if (length % 71 == 0)\n            return \"NO\";\n       \
    \ if (length % 73 == 0)\n            return \"NO\";\n        if (length % 79 ==\
    \ 0)\n            return \"NO\";\n        if (length % 83 == 0)\n            return\
    \ \"NO\";\n        if (length % 89 == 0)\n            return \"NO\";", "     \
    \   long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n   \
    \     long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n \
    \       if (start1 > end1 || start2 > end2)\n            return \"NO\";\n    \
    \    if (start1 < start2 || end1 < end2)\n            return \"NO\";\n       \
    \ long length = end1 - start1 + 1;\n        if (length % 2 == 0)\n           \
    \ return \"NO\";\n        long mid1 = start1 + (length / 2);\n        long mid2\
    \ = start2 + (length / 2);\n        if (mid1 < mid2)\n            return \"NO\"\
    ;\n        if (mid1 > mid2)\n            return \"NO\";\n        if (mid1 == mid2)\n\
    \            return \"YES\";\n        long prime = length / 2;\n        if (prime\
    \ % 2 == 0)\n            return \"YES\";\n        long mid3 = start1 + prime;\n\
    \        long mid4 = start2 + prime;\n        if (mid3 < mid4)\n            return\
    \ \"YES\";\n        if (mid3 > mid4)\n            return \"YES\";\n        if\
    \ (mid3 == mid4)\n            return \"YES\";\n        return \"NO\";", "    \
    \    if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp\
    \ = interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2 ==\
    \ interval2.Item1)\n            return \"YES\";\n        return \"NO\";", "  \
    \      long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 < start2 && end1 < end2)\n            return \"NO\";\n        if\
    \ (start1 < start2 && end1 > end2)\n            return \"NO\";\n        if (start1\
    \ > start2 && end1 < end2)\n            return \"NO\";\n        if (start1 > start2\
    \ && end1 > end2)\n            return \"NO\";\n        if (start1 < start2 &&\
    \ end1 > end2)\n            return \"NO\";\n        if (start1 < start2 && end1\
    \ < end2)\n            return \"NO\";\n        if (start1 == start2 && end1 ==\
    \ end2)\n            return \"YES\";\n        if (start1 == start2 && end1 > end2)\n\
    \            return \"NO\";\n        if (start1 > start2 && end1 == end2)\n  \
    \          return \"NO\";\n        if (start1 == start2 && end1 < end2)\n    \
    \        return \"NO\";\n        if (start1 < start2 && end1 == end2)\n      \
    \      return \"NO\";\n        if (start1 < start2 && end1 > end2)\n         \
    \   return \"NO\";\n        if (start1 == start2 && end1 > end2)\n           \
    \ return \"NO\";\n        if (start1 > start2 && end1 < end2)\n            return\
    \ \"NO\";\n        if (start1 == start2 && end1 < end2)\n            return \"\
    NO\";\n        if (start1 > start2 && end1 < end2)\n            return \"NO\"\
    ;\n        if (start1 < start2 && end1 > end2)\n            return \"NO\";\n \
    \       if (start1 == start2 && end1 > end2)\n            return \"NO\";\n   \
    \     if (start1 > start2 && end1 == end2)\n            return \"NO\";\n     \
    \   if", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 < start2 || start2 < start1)\n            return \"NO\";\n     \
    \   if (end1 > end2 || end2 > end1)\n            return \"NO\";\n        if (end1\
    \ < end2 || end2 < end1)\n            return \"NO\";\n        long length = end1\
    \ - start1 + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n  \
    \      return \"YES\";", "        if (interval1.Item1 > interval2.Item1 || interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     long prime = length / 2;\n        if (prime % 2 == 0)\n            return\
    \ \"NO\";\n        return \"YES\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        long length = end - start + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ % 3 == 0)\n            return \"NO\";\n        if (length % 5 == 0)\n      \
    \      return \"NO\";\n        if (length % 7 == 0)\n            return \"NO\"\
    ;\n        if (length % 11 == 0)\n            return \"NO\";\n        if (length\
    \ % 13 == 0)\n            return \"NO\";\n        if (length % 17 == 0)\n    \
    \        return \"NO\";\n        if (length % 19 == 0)\n            return \"\
    NO\";\n        if (length % 23 == 0)\n            return \"NO\";\n        if (length\
    \ % 29 == 0)\n            return \"NO\";\n        if (length % 31 == 0)\n    \
    \        return \"NO\";\n        if (length % 37 == 0)\n            return \"\
    NO\";\n        if (length % 41 == 0)\n            return \"NO\";\n        if (length\
    \ % 43 == 0)\n            return \"NO\";\n        if (length % 47 == 0)\n    \
    \        return \"NO\";\n        if (length % 53 == 0)\n            return \"\
    NO\";\n        if (length % 59 == 0)\n            return \"NO\";\n        if (length\
    \ % 61 == 0)\n            return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ > interval2.Item2)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        if (start == end)\n\
    \            return \"YES\";\n        long length = end - start + 1;\n       \
    \ if (length % 2 == 0)\n            return \"NO\";\n        if (length % 3 ==\
    \ 0)\n            return \"NO\";\n        if (length % 5 == 0)\n            return\
    \ \"NO\";\n        if (length % 7 == 0)\n            return \"NO\";\n        if\
    \ (length % 11 == 0)\n            return \"NO\";\n        if (length % 13 == 0)\n\
    \            return \"NO\";\n        if (length % 17 == 0)\n            return\
    \ \"NO\";\n        if (length % 19 == 0)\n            return \"NO\";\n       \
    \ if (length % 23 == 0)\n            return \"NO\";\n        if (length % 29 ==\
    \ 0)\n            return \"NO\";\n        if (length % 31 == 0)\n            return\
    \ \"NO\";\n        if (length % 37 == 0)\n            return \"NO\";\n       \
    \ if (length % 41 == 0)\n            return \"NO\";\n        if (length % 43 ==\
    \ 0)\n            return \"NO\";\n        if (length % 47 == 0)\n            return\
    \ \"NO\";\n        if (length % 53 == 0)\n            return \"NO\";\n       \
    \ if (length % 59 == 0)\n            return \"NO\";\n        if (length % 61 ==\
    \ 0)\n            return \"NO\";\n        if (length % 67 == 0)\n            return\
    \ \"NO\";\n        if (length", "        long start1 = interval1.Item1;\n    \
    \    long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n  \
    \      long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 < start2) {\n            long temp\
    \ = start1;\n            start1 = start2;\n            start2 = temp;\n      \
    \  }\n        if (end1 > end2) {\n            long temp = end1;\n            end1\
    \ = end2;\n            end2 = temp;\n        }\n        long length = end1 - start1\
    \ + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ % 3 == 0)\n            return \"NO\";\n        if (length % 5 == 0)\n      \
    \      return \"NO\";\n        if (length % 7 == 0)\n            return \"NO\"\
    ;\n        if (length % 11 == 0)\n            return \"NO\";\n        if (length\
    \ % 13 == 0)\n            return \"NO\";\n        if (length % 17 == 0)\n    \
    \        return \"NO\";\n        if (length % 19 == 0)\n            return \"\
    NO\";\n        if (length % 23 == 0)\n            return \"NO\";\n        if (length\
    \ % 29 == 0)\n            return \"NO\";\n        if (length % 31 == 0)\n    \
    \        return \"NO\";\n        if (length % 37 == 0)\n            return \"\
    NO\";\n        if (length % 41 == 0)\n            return \"NO\";\n        if (length\
    \ % 43 == 0)\n            return \"NO\";\n        if (length % 47 == 0)\n    \
    \        return \"NO\";\n        if (length % 53 == 0)\n            return \"\
    NO\";\n        if (length % 59 == 0)\n            return \"NO\";\n        if (length\
    \ % 61 == 0)\n            return \"NO\";\n        ", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 > end2)\n            return Intersection(Tuple.Create(start1,\
    \ end1), Tuple.Create(start2, end2));\n        if (start2 > end1)\n          \
    \  return Intersection(Tuple.Create(start1, end1), Tuple.Create(start2, end2));\n\
    \        long length = end1 - start1 + 1;\n        if (length % 2 == 0)\n    \
    \        return \"NO\";\n        long mid = start1 + (length / 2);\n        if\
    \ (mid == end2)\n            return \"YES\";\n        if (mid > end2)\n      \
    \      return Intersection(Tuple.Create(start1, mid), Tuple.Create(start2, end2));\n\
    \        if (mid < start2)\n            return Intersection(Tuple.Create(start1,\
    \ mid), Tuple.Create(start2, end2));\n        return Intersection(Tuple.Create(start1,\
    \ mid), Tuple.Create(start2, mid));", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        if (start1 == start2 && end1 == end2)\n    \
    \        return \"YES\";\n        long length = end1 - start1 + 1;\n        if\
    \ (length % 2 == 0)\n            return \"NO\";\n        long half = length /\
    \ 2;\n        long start = start1 + half;\n        long end = end1 - half;\n \
    \       if (start > end)\n            return \"NO\";\n        if (start == end)\n\
    \            return \"YES\";\n        if (start < end) {\n            if (start\
    \ < start2 && end > end2)\n                return \"YES\";\n            if (start\
    \ < start2 && end < end2)\n                return \"NO\";\n            if (start\
    \ > start2 && end > end2)\n                return \"NO\";\n            if (start\
    \ > start2 && end < end2)\n                return \"YES\";\n            if (start\
    \ < start2 && end > end2)\n                return \"YES\";\n        }\n      \
    \  if (start > start2 && end < end2)\n            return \"YES\";\n        if\
    \ (start < start2 && end > end2)\n            return \"NO\";\n        if (start\
    \ > start2 && end < end2)\n            return \"NO\";\n        if (start < start2\
    \ && end > end2)\n            return \"YES\";\n        return \"NO\";", "    \
    \    long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n  \
    \      long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 < end2 && end1 > start2)\n            return \"YES\";\n     \
    \   if (start2 < end1 && end2 > start1)\n            return \"YES\";\n       \
    \ return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\n         \
    \   return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n         \
    \   return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        long length = end - start + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        return \"YES\"\
    ;", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        return \"YES\";", "        long start1\
    \ = interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start1\
    \ > end1 || start2 > end2)\n            return \"NO\";\n        if (start1 > end2\
    \ || start2 > end1)\n            return \"NO\";\n        if (start1 == end1 &&\
    \ start2 == end2)\n            return \"YES\";\n        if (start1 == end2 ||\
    \ start2 == end1)\n            return \"NO\";\n        if (start1 > end2 || start2\
    \ > end1)\n            return \"NO\";\n        if (start1 == end2 || start2 ==\
    \ end1)\n            return \"NO\";\n        if (start1 > end2 && start2 > end1)\n\
    \            return \"NO\";\n        if (start1 == end2 && start2 == end1)\n \
    \           return \"NO\";\n        if (start1 > end2 && start2 > end1)\n    \
    \        return \"NO\";\n        if (start1 == end2 && start2 == end1)\n     \
    \       return \"NO\";\n        if (start1 > end2 && start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end2 && start2 == end1)\n         \
    \   return \"NO\";\n        if (start1 > end2 && start2 > end1)\n            return\
    \ \"NO\";\n        if (start1 == end2 && start2 == end1)\n            return \"\
    NO\";\n        if (start1 > end2 && start2 > end1)\n            return \"NO\"\
    ;\n        if (start1 == end2 && start2 == end1)\n            return \"NO\";\n\
    \        if (start1 > end2 && start2 > end1)\n            return \"NO\";\n   \
    \     if (start1 == end2 && start2 == end1)\n            return \"NO\";\n    \
    \    if (start1 > end2 && start2 > end1)\n            return \"NO\";\n       \
    \ if (start1 == end2 && start2 == end1)\n            return \"NO\";\n        if\
    \ (start1 > end2 && start2 > end1)\n            return \"NO\";\n        if", " \
    \       long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ long min = Math.Min(start1, start2);\n        long max = Math.Max(end1, end2);\n\
    \        if (min > max)\n            return \"NO\";\n        long length = max\
    \ - min + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n     \
    \   return \"YES\";", "        if (interval1.Item1 > interval2.Item1) {\n    \
    \        Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) {\n            return \"YES\";\n    \
    \    }\n        long min = Math.Max(interval1.Item1, interval2.Item1);\n     \
    \   long max = Math.Min(interval1.Item2, interval2.Item2);\n        if (min >\
    \ max) {\n            return \"NO\";\n        }\n        long length = max - min\
    \ + 1;\n        if (length % 2 == 0) {\n            return \"NO\";\n        }\n\
    \        if (length == 2) {\n            return \"YES\";\n        }\n        long[]\
    \ primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149,\
    \ 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\
    \ 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331,\
    \ 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431,\
    \ 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523,\
    \ 541, 547, 557, 563", "        if (interval1.Item1 > interval2.Item1)\n     \
    \       return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n     \
    \       return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n     \
    \       return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n     \
    \       return \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length % 71 == 0)\n            return \"NO\";\n        if (length % 73 ==\
    \ 0)\n            return \"NO\";\n        ", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        long length = end1 - start1 + 1;\n        if\
    \ (length % 2 == 0)\n            return \"NO\";\n        long i = start1 + 1;\n\
    \        while (i <= end1) {\n            if (i % 2 == 0)\n                i +=\
    \ 2;\n            else\n                i += 1;\n        }\n        if (i != end1\
    \ + 1)\n            return \"NO\";\n        return \"YES\";", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        long prime = length / 2;\n        if\
    \ (prime % 2 == 0)\n            return \"NO\";\n        return \"YES\";", "  \
    \      long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 < start2) {\n            long temp = start1;\n            start1\
    \ = start2;\n            start2 = temp;\n        }\n        if (end1 > end2) {\n\
    \            long temp = end1;\n            end1 = end2;\n            end2 = temp;\n\
    \        }\n        if (start1 == end1) {\n            if (start2 == end2)\n \
    \               return \"YES\";\n            return \"NO\";\n        }\n     \
    \   if (start2 == end2)\n            return \"NO\";\n        if (start1 == end2)\n\
    \            return \"NO\";\n        if (start2 < start1) {\n            long\
    \ temp = start2;\n            start2 = start1;\n            start1 = temp;\n \
    \       }\n        if (end2 > end1) {\n            long temp = end2;\n       \
    \     end2 = end1;\n            end1 = temp;\n        }\n        if (start2 ==\
    \ end1)\n            return \"NO\";\n        if (start1 == end2)\n           \
    \ return \"NO\";\n        if (start1 < start2) {\n            long temp = start1;\n\
    \            start1 = start2;\n            start2 = temp;\n        }\n       \
    \ if (end1 > end2) {\n            long temp = end1;\n            end1 = end2;\n\
    \            end2 = temp;\n        }\n        if (start1 == end1)\n          \
    \  return \"YES\";\n        if (start2 == end2)\n            return \"YES\";\n\
    \        if (start1 < start2) {\n            long temp = start1;\n           \
    \ start1", "        if (interval1.Item1 > interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 > interval2.Item2 || interval1.Item2 <\
    \ interval2.Item1)\n            return \"NO\";\n        long min = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long max = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (min > max)\n            return \"NO\";\n        long length = max\
    \ - min + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n     \
    \   if (length == 2)\n            return \"YES\";\n        if (length % 3 == 0)\n\
    \            return \"YES\";\n        if (length % 5 == 0)\n            return\
    \ \"YES\";\n        return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1) {\n            if (interval1.Item2 == interval2.Item2)\n\
    \                return \"YES\";\n            return \"NO\";\n        }\n    \
    \    if (interval1.Item1 == interval2.Item2)\n            return \"YES\";\n  \
    \      if (interval1.Item2 == interval2.Item2)\n            return \"YES\";\n\
    \        if (interval1.Item1 == interval2.Item1)\n            return \"YES\";\n\
    \        return \"NO\";", "        long start1 = interval1.Item1;\n        long\
    \ end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n     \
    \       return \"NO\";\n        if (start1 > end2 || start2 > end1)\n        \
    \    return \"NO\";\n        if (start1 == end1 && start2 == end2)\n         \
    \   return \"YES\";\n        if (start1 == end2 || start2 == end1)\n         \
    \   return \"NO\";\n        long length = end1 - start1;\n        if (length ==\
    \ 1)\n            return \"YES\";\n        if (length == 2) {\n            if\
    \ (start1 == start2 && end1 == end2)\n                return \"YES\";\n      \
    \      if (start1 == start2 || end1 == end2)\n                return \"NO\";\n\
    \            if (start1 == end2 || end1 == start2)\n                return \"\
    NO\";\n            return \"YES\";\n        }\n        if (length % 2 == 0)\n\
    \            return \"NO\";\n        if (length % 2 == 1) {\n            if (start1\
    \ == start2 && end1 == end2)\n                return \"YES\";\n            if\
    \ (start1 == start2 || end1 == end2)\n                return \"NO\";\n       \
    \     if (start1 == end2 || end1 == start2)\n                return \"NO\";\n\
    \            return \"YES\";\n        }\n        return \"NO\";", "        if\
    \ (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp =\
    \ interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1 ==\
    \ interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2 ==\
    \ interval2.Item1)\n            return \"YES\";\n        return \"NO\";", "  \
    \      long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ long length = end1 - start1;\n        if (length % 2 == 0)\n            return\
    \ \"NO\";\n        long length2 = end2 - start2;\n        if (length2 % 2 == 0)\n\
    \            return \"NO\";\n        if (length == length2)\n            return\
    \ \"YES\";\n        if (length == length2 + 1)\n            return \"YES\";\n\
    \        if (length == length2 - 1)\n            return \"YES\";\n        if (length\
    \ == length2 + 2)\n            return \"YES\";\n        if (length == length2\
    \ - 2)\n            return \"YES\";\n        if (length == length2 + 3)\n    \
    \        return \"YES\";\n        if (length == length2 - 3)\n            return\
    \ \"YES\";\n        if (length == length2 + 4)\n            return \"YES\";\n\
    \        if (length == length2 - 4)\n            return \"YES\";\n        if (length\
    \ == length2 + 5)\n            return \"YES\";\n        if (length == length2\
    \ - 5)\n            return \"YES\";\n        if (length == length2 + 6)\n    \
    \        return \"YES\";\n        if (length == length2 - 6)\n            return\
    \ \"YES\";\n        if (length == length2 + 7)\n            return \"YES\";\n\
    \        if (length == length2 - 7)\n            return \"YES\";\n        if (length\
    \ == length2 + 8)\n            return \"YES\";\n        if (length == length2\
    \ - 8)\n            return \"YES\";\n        if (length == length2 + 9)\n    \
    \        return \"YES\";\n        if (length == length2 - 9)\n            return\
    \ \"YES\";", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 < start2 && end1 > end2)\n            return \"NO\";\n        if\
    \ (start2 < start1 && end2 > end1)\n            return \"NO\";\n        if (start1\
    \ > start2 && end1 < end2)\n            return \"NO\";\n        if (start2 > start1\
    \ && end2 < end1)\n            return \"NO\";\n        if (start1 == start2 &&\
    \ end1 == end2)\n            return \"YES\";\n        if (start1 == start2 &&\
    \ end1 > end2)\n            return \"NO\";\n        if (start1 > start2 && end1\
    \ < end2)\n            return \"NO\";\n        if (start2 > start1 && end2 < end1)\n\
    \            return \"NO\";\n        if (start1 > start2 && end1 < end2)\n   \
    \         return \"NO\";\n        if (start2 > start1 && end2 < end1)\n      \
    \      return \"NO\";\n        if (start1 == start2 && end1 == end2)\n       \
    \     return \"YES\";\n        if (start1 > start2 && end1 < end2)\n         \
    \   return \"NO\";\n        if (start2 > start1 && end2 < end1)\n            return\
    \ \"NO\";\n        if (start1 == start2 && end1 > end2)\n            return \"\
    NO\";\n        if (start2 == start1 && end2 > end1)\n            return \"NO\"\
    ;\n        if (start1 > start2 && end1 < end2)\n            return \"NO\";\n \
    \       if (start2 > start1 && end2 < end1)\n            return \"NO\";\n    \
    \    if", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2)\n            return \"NO\";\n        if (start2 > end1)\n\
    \            return \"NO\";\n        long length = end1 - start1 + 1;\n      \
    \  if (length % 2 == 0)\n            return \"NO\";\n        long length2 = end2\
    \ - start2 + 1;\n        if (length2 % 2 == 0)\n            return \"NO\";\n \
    \       if (length == length2)\n            return \"YES\";\n        long half\
    \ = length / 2;\n        long half2 = length2 / 2;\n        long start = start1\
    \ + half;\n        long end = end1 - half;\n        long start2 = start2 + half2;\n\
    \        long end2 = end2 - half2;\n        if (start > end || start2 > end2)\n\
    \            return \"NO\";\n        if (start > end2 || start2 > end)\n     \
    \       return \"NO\";\n        if (start == end && start2 == end2)\n        \
    \    return \"YES\";\n        if (start == end2 || start2 == end)\n          \
    \  return \"NO\";\n        if (start > end)\n            return \"NO\";\n    \
    \    if (start2 > end2)\n            return \"NO\";\n        if (start == end2)\n\
    \            return \"YES\";\n        if (start2 == end)\n            return \"\
    YES\";\n        if (start > end2)\n            return \"NO\";\n        if (start2\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        if (start2 == end2)\n            return \"YES\";\n       \
    \ if (start2", "        // Write your code here\n        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        long start = Math.Max(start1, start2);\n   \
    \     long end = Math.Min(end1, end2);\n        if (start == end)\n          \
    \  return \"NO\";\n        long length = end - start + 1;\n        if (length\
    \ % 2 == 0)\n            return \"NO\";\n        if (length % 3 == 0)\n      \
    \      return \"NO\";\n        if (length % 5 == 0)\n            return \"NO\"\
    ;\n        if (length % 7 == 0)\n            return \"NO\";\n        if (length\
    \ % 11 == 0)\n            return \"NO\";\n        if (length % 13 == 0)\n    \
    \        return \"NO\";\n        if (length % 17 == 0)\n            return \"\
    NO\";\n        if (length % 19 == 0)\n            return \"NO\";\n        if (length\
    \ % 23 == 0)\n            return \"NO\";\n        if (length % 29 == 0)\n    \
    \        return \"NO\";\n        if (length % 31 == 0)\n            return \"\
    NO\";\n        if (length % 37 == 0)\n            return \"NO\";\n        if (length\
    \ % 41 == 0)\n            return \"NO\";\n        if (length % 43 == 0)\n    \
    \        return \"NO\";\n        if (length % 47 == 0)\n            return \"\
    NO\";\n        if (length % 53 == 0)\n            return \"NO\";\n        if (length\
    \ % 59 == 0)\n            return \"NO\";\n        if (length % 61 == 0)\n    \
    \        return \"NO\";\n        if (length % 67 == 0)\n            return \"\
    NO\";\n        if (length % 71 == 0)\n            return \"NO\";\n        if (length\
    \ % 73 == 0)\n            return \"NO\";\n        if (length % 79 == 0)\n    \
    \        return \"NO\";\n        if (length % 83", "        if (interval1.Item1\
    \ > interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item2 < interval2.Item1) {\n            return \"NO\";\n\
    \        }\n        if (interval1.Item1 > interval2.Item2) {\n            return\
    \ \"NO\";\n        }\n        if (interval1.Item2 > interval2.Item2) {\n     \
    \       return \"NO\";\n        }\n        if (interval1.Item1 == interval2.Item1\
    \ && interval1.Item2 == interval2.Item2) {\n            return \"YES\";\n    \
    \    }\n        if (interval1.Item1 == interval2.Item1) {\n            return\
    \ \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item2) {\n   \
    \         return \"YES\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        if (start\
    \ == end - 1) {\n            return \"YES\";\n        }\n        if (start ==\
    \ end + 1) {\n            return \"YES\";\n        }\n        if (start == end\
    \ + 2) {\n            return \"YES\";\n        }\n        if (start == end + 3)\
    \ {\n            return \"YES\";\n        }\n        if (start == end + 4) {\n\
    \            return \"YES\";\n        }\n        if (start == end + 5) {\n   \
    \         return \"YES\";\n        }\n        if (start == end + 6) {\n      \
    \      return \"YES\";\n        }\n        if (start == end + 7) {\n         \
    \   return \"YES\";\n        }\n        if (start == end + 8) {\n            return\
    \ \"YES\";\n        }\n        if (start == end + 9) {\n            return \"\
    YES\";\n        }\n        if (start == end", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2) {\n            return\
    \ \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item1) {\n   \
    \         return \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item1 == interval2.Item2)\
    \ {\n            return \"YES\";\n        }\n        if (interval1.Item2 == interval2.Item1)\
    \ {\n            return \"YES\";\n        }\n        return \"NO\";", "      \
    \  long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n    \
    \    long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n  \
    \      if (start1 > end1 || start2 > end2)\n            return \"NO\";\n     \
    \   if (start1 > end2 || start2 > end1)\n            return \"NO\";\n        if\
    \ (start1 == end1 && start2 == end2)\n            return \"YES\";\n        if\
    \ (start1 == end2 || start2 == end1)\n            return \"NO\";\n        long\
    \ mid1 = (start1 + end1) / 2;\n        long mid2 = (start2 + end2) / 2;\n    \
    \    if (mid1 == mid2)\n            return \"YES\";\n        if (mid1 > mid2)\n\
    \            return Intersection(new Tuple<long, long>(start1, mid1), new Tuple<long,\
    \ long>(start2, mid2));\n        return Intersection(new Tuple<long, long>(start1,\
    \ mid1), new Tuple<long, long>(mid2, end2));", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        long min = Math.Min(start1, start2);\n     \
    \   long max = Math.Max(end1, end2);\n        if (min > max)\n            return\
    \ \"NO\";\n        long length = max - min + 1;\n        if (length % 2 == 0)\n\
    \            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length % 71 == 0)\n            return \"NO\";\n        if (length % 73 ==\
    \ 0)\n            return \"NO\";\n        if (length % 79 ==", "        long start1\
    \ = interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start1\
    \ > end1 || start2 > end2)\n            return \"NO\";\n        if (start1 < start2\
    \ || end1 > end2)\n            return \"NO\";\n        long length = end1 - start1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        long start\
    \ = Math.Max(start1, start2);\n        long end = Math.Min(end1, end2);\n    \
    \    if (start == end)\n            return \"NO\";\n        if (length == 1)\n\
    \            return \"YES\";\n        long prime = length / 2;\n        long i\
    \ = start + prime;\n        while (i < end) {\n            if (IsPrime(i))\n \
    \               return \"YES\";\n            i += prime;\n        }\n        return\
    \ \"NO\";", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item2 < interval2.Item1) {\n     \
    \       return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        if (start\
    \ == end - 1) {\n            return \"YES\";\n        }\n        if (end - start\
    \ == 1) {\n            return \"YES\";\n        }\n        if (end - start ==\
    \ 2) {\n            return \"YES\";\n        }\n        if (end - start == 3)\
    \ {\n            return \"YES\";\n        }\n        if (end - start == 4) {\n\
    \            return \"YES\";\n        }\n        if (end - start == 5) {\n   \
    \         return \"YES\";\n        }\n        if (end - start == 6) {\n      \
    \      return \"YES\";\n        }\n        if (end - start == 7) {\n         \
    \   return \"YES\";\n        }\n        if (end - start == 8) {\n            return\
    \ \"YES\";\n        }\n        if (end - start == 9) {\n            return \"\
    YES\";\n        }\n        if (end - start == 10) {\n            return \"YES\"\
    ;\n        }\n        if (end - start == 11) {\n            return \"YES\";\n\
    \        }\n        if (end - start == 12) {\n            return \"YES\";\n  \
    \      }\n        if (end - start == 13) {\n            return \"YES\";\n    \
    \    }\n        if (end - start == 14) {\n            return \"YES\";\n      \
    \  }", "        if (interval1.Item1 > interval2.Item1)\n            return \"\
    NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return \"NO\"\
    ;\n        if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n\
    \        if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n\
    \        if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start1 =\
    \ interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        if (start1\
    \ > end1 || start2 > end2)\n            return \"NO\";\n        if (start1 < start2\
    \ || end1 < end2)\n            return \"NO\";\n        if (start1 > end2 || start2\
    \ > end1)\n            return \"NO\";\n        long length = end1 - start1 + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        long length2\
    \ = end2 - start2 + 1;\n        if (length2 % 2 == 0)\n            return \"NO\"\
    ;\n        if (length != length2)\n            return \"NO\";\n        return\
    \ \"YES\";", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        if (start == end)\n\
    \            return \"YES\";\n        if (start + 1 == end)\n            return\
    \ \"YES\";\n        if (start + 2 == end)\n            return \"YES\";\n     \
    \   if (start + 3 == end)\n            return \"YES\";\n        if (start + 4\
    \ == end)\n            return \"YES\";\n        if (start + 5 == end)\n      \
    \      return \"YES\";\n        if (start + 6 == end)\n            return \"YES\"\
    ;\n        if (start + 7 == end)\n            return \"YES\";\n        if (start\
    \ + 8 == end)\n            return \"YES\";\n        if (start + 9 == end)\n  \
    \          return \"YES\";\n        if (start + 10 == end)\n            return\
    \ \"YES\";\n        if (start + 11 == end)\n            return \"YES\";\n    \
    \    if (start + 12 == end)\n            return \"YES\";\n        if (start +\
    \ 13 == end)\n            return \"YES\";\n        if (start + 14 == end)\n  \
    \          return \"YES\";\n        if (start + 15 == end)\n            return\
    \ \"YES", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        if (start == end)\n\
    \            return \"YES\";\n        long length = end - start + 1;\n       \
    \ if (length % 2 == 0)\n            return \"NO\";\n        if (length % 3 ==\
    \ 0)\n            return \"NO\";\n        if (length % 5 == 0)\n            return\
    \ \"NO\";\n        if (length % 7 == 0)\n            return \"NO\";\n        if\
    \ (length % 11 == 0)\n            return \"NO\";\n        if (length % 13 == 0)\n\
    \            return \"NO\";\n        if (length % 17 == 0)\n            return\
    \ \"NO\";\n        if (length % 19 == 0)\n            return \"NO\";\n       \
    \ if (length % 23 == 0)\n            return \"NO\";\n        if (length % 29 ==\
    \ 0)\n            return \"NO\";\n        if (length % 31 == 0)\n            return\
    \ \"NO\";\n        if (length % 37 == 0)\n            return \"NO\";\n       \
    \ if (length % 41 == 0)\n            return \"NO\";\n        if (length % 43 ==\
    \ 0)\n            return \"NO\";\n        if (", "        if (interval1.Item1\
    \ > interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n            return\
    \ \"YES\";\n        return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 < interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 > interval2.Item2)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item2 > interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (end - start + 1 == 2) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 3) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 5) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 7) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 11) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 13) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 17) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 19) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 23) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 29) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 31) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 37) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 41) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 43) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 47) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1 == 53) {\n            return \"YES\";\n        }\n\
    \        if (end - start + 1", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start + 1;\n        if (length % 2 == 0)\n            return\
    \ \"NO\";\n        if (length % 3 == 0)\n            return \"NO\";\n        if\
    \ (length % 5 == 0)\n            return \"NO\";\n        if (length % 7 == 0)\n\
    \            return \"NO\";\n        if (length % 11 == 0)\n            return\
    \ \"NO\";\n        if (length % 13 == 0)\n            return \"NO\";\n       \
    \ if (length % 17 == 0)\n            return \"NO\";\n        if (length % 19 ==\
    \ 0)\n            return \"NO\";\n        if (length % 23 == 0)\n            return\
    \ \"NO\";\n        if (length % 29 == 0)\n            return \"NO\";\n       \
    \ if (length % 31 == 0)\n            return \"NO\";\n        if (length % 37 ==\
    \ 0)\n            return \"NO\";\n        if (length % 41 == 0)\n            return\
    \ \"NO\";\n        if (length % 43 == 0)\n            return \"NO\";\n       \
    \ if (length % 47 == 0)\n            return \"NO\";\n        if (length % 53 ==\
    \ 0)\n            return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item1) {\n            return \"NO\";\n        }\n        if (interval1.Item2\
    \ < interval2.Item2) {\n            return \"NO\";\n        }\n        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        if (start == end) {\n            return \"YES\";\n       \
    \ }\n        long length = end - start + 1;\n        if (length % 2 == 0) {\n\
    \            return \"NO\";\n        }\n        long prime = length / 2;\n   \
    \     if (prime == 1) {\n            return \"YES\";\n        }\n        long\
    \ sum = prime;\n        for (long i = 2; i <= prime; i++) {\n            if (prime\
    \ % i == 0) {\n                sum -= i;\n            }\n        }\n        if\
    \ (sum == 0) {\n            return \"YES\";\n        }\n        return \"NO\";",
  "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long>\
    \ temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1)\n      \
    \      return \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n    \
    \        return \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n  \
    \          return \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        return \"NO\";", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\n\
    \            return \"NO\";\n        if (start == end)\n            return \"\
    YES\";\n        long length = end - start + 1;\n        if (length % 2 == 0)\n\
    \            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2)\n            return Intersection(Tuple.Create(start1, end1),\
    \ Tuple.Create(start2, end2));\n        if (start2 > end1)\n            return\
    \ Intersection(Tuple.Create(start1, end1), Tuple.Create(start2, end2));\n    \
    \    if (start1 == end2)\n            return Intersection(Tuple.Create(start1,\
    \ end1), Tuple.Create(start2, end2));\n        if (start2 == end1)\n         \
    \   return Intersection(Tuple.Create(start1, end1), Tuple.Create(start2, end2));\n\
    \        if (start1 > end2)\n            return Intersection(Tuple.Create(start1,\
    \ end1), Tuple.Create(start2, end2));\n        if (start2 > end1)\n          \
    \  return Intersection(Tuple.Create(start1, end1), Tuple.Create(start2, end2));\n\
    \        if (start1 == end2)\n            return Intersection(Tuple.Create(start1,\
    \ end1), Tuple.Create(start2, end2));\n        if (start2 == end1)\n         \
    \   return Intersection(Tuple.Create(start1, end1), Tuple.Create(start2, end2));\n\
    \        if (start1 == end2)\n            return Intersection(Tuple.Create(start1,\
    \ end1), Tuple.Create(start2, end2));\n        if (start2 == end1)\n         \
    \   return Intersection(Tuple.Create(start1, end1), Tuple.Create(start2,", " \
    \       long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 < start2 || end1 > end2)\n            return \"NO\";\n      \
    \  long length = end1 - start1;\n        if (length % 2 == 0)\n            return\
    \ \"NO\";\n        long length2 = end2 - start2;\n        if (length2 % 2 == 0)\n\
    \            return \"NO\";\n        if (length == length2)\n            return\
    \ \"YES\";\n        long i = 2;\n        while (i <= length) {\n            if\
    \ (length % i == 0 && length2 % i == 0)\n                return \"YES\";\n   \
    \         i++;\n        }\n        return \"NO\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 < end2 && start2 < end1) {\n     \
    \       if (end1 - start1 == end2 - start2) {\n                if (IsPrime(end1\
    \ - start1))\n                    return \"YES\";\n            }\n        }\n\
    \        return \"NO\";", "        if (interval1.Item1 > interval2.Item1) {\n\
    \            Tuple<long, long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        if (interval1.Item2 < interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item1 > interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n\
    \            return \"NO\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end)\n            return \"NO\";\n  \
    \      if (start == end)\n            return \"YES\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     if (length % 2 == 1)\n            return \"YES\";\n        long i = 3;\n\
    \        while (i <= Math.Sqrt(length)) {\n            if (length % i == 0)\n\
    \                return \"NO\";\n            i += 2;\n        }\n        return\
    \ \"YES\";", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643,", "        if (interval1.Item1 > interval2.Item1 || interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        long length = end\
    \ - start + 1;\n        if (length % 2 == 0)\n            return \"NO\";\n   \
    \     if (length % 3 == 0)\n            return \"YES\";\n        if (length %\
    \ 5 == 0)\n            return \"YES\";\n        return \"NO\";", "        long\
    \ start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        if\
    \ (start1 > end1 || start2 > end2)\n            return \"NO\";\n        if (start1\
    \ > end2 || start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end1 && start2 == end2)\n            return \"YES\";\n        if (start1 ==\
    \ end2 || start2 == end1)\n            return \"NO\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if (start1 == end1\
    \ && start2 == end2)\n            return \"YES\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if (start1 == end1\
    \ && start2 == end2)\n            return \"YES\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if (start1 == end1\
    \ && start2 == end2)\n            return \"YES\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if (start1 == end1\
    \ && start2 == end2)\n            return \"YES\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if (start1 == end1\
    \ && start2 == end2)\n            return \"YES\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if (start1 == end1\
    \ && start2 == end2)\n            return \"YES\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if (start1 == end1\
    \ && start2 == end2)\n            return \"YES\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if (start1 == end1\
    \ && start2 == end2)\n            return \"YES\";\n        if (start1 == end2\
    \ && start2 == end1)\n            return \"YES\";\n        if", "        long\
    \ start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        if\
    \ (start1 > end1 || start2 > end2)\n            return \"NO\";\n        if (start1\
    \ > end2 || start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end1 && start2 == end2)\n            return \"YES\";\n        if (start1 ==\
    \ end2 || start2 == end1)\n            return \"NO\";\n        long min = Math.Min(start1,\
    \ start2);\n        long max = Math.Max(end1, end2);\n        if (min > max)\n\
    \            return \"NO\";\n        if (min == max)\n            return \"YES\"\
    ;\n        long length = max - min + 1;\n        if (length % 2 == 0)\n      \
    \      return \"NO\";\n        return \"YES\";", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        long length = end - start + 1;\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ % 3 == 0)\n            return \"NO\";\n        if (length % 5 == 0)\n      \
    \      return \"NO\";\n        if (length % 7 == 0)\n            return \"NO\"\
    ;\n        if (length % 11 == 0)\n            return \"NO\";\n        if (length\
    \ % 13 == 0)\n            return \"NO\";\n        if (length % 17 == 0)\n    \
    \        return \"NO\";\n        if (length % 19 == 0)\n            return \"\
    NO\";\n        if (length % 23 == 0)\n            return \"NO\";\n        if (length\
    \ % 29 == 0)\n            return \"NO\";\n        if (length % 31 == 0)\n    \
    \        return \"NO\";\n        if (length % 37 == 0)\n            return \"\
    NO\";\n        if (length % 41 == 0)\n            return \"NO\";\n        if (length\
    \ % 43 == 0)\n            return \"NO\";\n        if (length % 47 == 0)\n    \
    \        return \"NO\";\n        if (length % 53 == 0)\n            return \"\
    NO\";\n        if (length % 59 == 0)\n            return \"NO\";\n        if (length\
    \ % 61 == 0)\n            return \"NO\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        long length = end1 - start1 + 1;\n        if\
    \ (length % 2 == 0)\n            return \"NO\";\n        long start = Math.Max(start1,\
    \ start2);\n        long end = Math.Min(end1, end2);\n        if (start > end)\n\
    \            return \"NO\";\n        if (start == end)\n            return \"\
    YES\";\n        long prime = length / 2;\n        for (long i = start; i <= end;\
    \ i++) {\n            if (i % prime != 0)\n                return \"NO\";\n  \
    \      }\n        return \"YES\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            Tuple<long, long> temp = interval1;\n            interval1 =\
    \ interval2;\n            interval2 = temp;\n        }\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ == interval2.Item1 && interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item1)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item1 == interval2.Item2)\n            return\
    \ \"YES\";\n        if (interval1.Item2 == interval2.Item1)\n            return\
    \ \"YES\";\n        return \"NO\";", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 == interval2.Item1)\
    \ {\n            if (interval1.Item2 > interval2.Item2) {\n                return\
    \ \"NO\";\n            }\n            if (interval1.Item2 == interval2.Item2)\
    \ {\n                return \"YES\";\n            }\n        }\n        return\
    \ \"NO\";", "        if (interval1.Item1 > interval2.Item1) {\n            Tuple<long,\
    \ long> temp = interval1;\n            interval1 = interval2;\n            interval2\
    \ = temp;\n        }\n        if (interval1.Item1 > interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n       \
    \     return \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n       \
    \     return \"NO\";\n        if (interval1.Item1 == interval2.Item1 && interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item1)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item1\
    \ == interval2.Item2)\n            return \"YES\";\n        if (interval1.Item2\
    \ == interval2.Item1)\n            return \"YES\";\n        return \"NO\";", " \
    \       if (interval1.Item1 > interval2.Item1)\n            return \"NO\";\n \
    \       if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n \
    \       if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n \
    \       if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n \
    \       if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 > interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 < interval2.Item1 && interval1.Item2 > interval2.Item2)\n \
    \           return \"YES\";\n        if (interval1.Item1 < interval2.Item1 &&\
    \ interval1.Item2 == interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 > interval2.Item1 && interval1.Item2 < interval2.Item2)\n \
    \           return \"YES\";\n        if (interval1.Item1 == interval2.Item1 &&\
    \ interval1.Item2 < interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 < interval2.Item1 && interval1.Item2 > interval2.Item2)\n \
    \           return \"YES\";\n        if (interval1.Item1 > interval2.Item1 &&\
    \ interval1.Item2 < interval2.Item2)\n            return \"YES\";\n        if\
    \ (interval1.Item1 < interval2.Item1 && interval1.Item2 > interval2.Item2)\n \
    \           return \"YES\";\n        return \"NO\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 < start2 && end1 < end2)\n       \
    \     return \"NO\";\n        if (start2 < start1 && end2 < end1)\n          \
    \  return \"NO\";\n        long length = (end1 - start1) + (end2 - start2);\n\
    \        if (length % 2 == 0)\n            return \"NO\";\n        if (length\
    \ % 3 == 0)\n            return \"NO\";\n        if (length % 5 == 0)\n      \
    \      return \"NO\";\n        if (length % 7 == 0)\n            return \"NO\"\
    ;\n        if (length % 11 == 0)\n            return \"NO\";\n        if (length\
    \ % 13 == 0)\n            return \"NO\";\n        if (length % 17 == 0)\n    \
    \        return \"NO\";\n        if (length % 19 == 0)\n            return \"\
    NO\";\n        if (length % 23 == 0)\n            return \"NO\";\n        if (length\
    \ % 29 == 0)\n            return \"NO\";\n        if (length % 31 == 0)\n    \
    \        return \"NO\";\n        if (length % 37 == 0)\n            return \"\
    NO\";\n        if (length % 41 == 0)\n            return \"NO\";\n        if (length\
    \ % 43 == 0)\n            return \"NO\";\n        if (length % 47 == 0)\n    \
    \        return \"NO\";\n        if (length % 53 == 0)\n            return \"\
    NO\";\n        if (length % 59 == 0)\n            return \"NO\";\n        if (length\
    \ % 61 == 0)\n            return \"NO\";\n        if (length % 67 == 0)\n    \
    \        return \"NO\";\n        if (length % 71 == 0", "        if (interval1.Item1\
    \ > interval2.Item1)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item2)\n            return \"NO\";\n        if (interval1.Item1\
    \ > interval2.Item2)\n            return \"NO\";\n        if (interval1.Item2\
    \ < interval2.Item1)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end)\n            return \"NO\";\n        if (start == end)\n\
    \            return \"YES\";\n        long length = end - start + 1;\n       \
    \ if (length % 2 == 0)\n            return \"NO\";\n        if (length % 3 ==\
    \ 0)\n            return \"NO\";\n        if (length % 5 == 0)\n            return\
    \ \"NO\";\n        if (length % 7 == 0)\n            return \"NO\";\n        if\
    \ (length % 11 == 0)\n            return \"NO\";\n        if (length % 13 == 0)\n\
    \            return \"NO\";\n        if (length % 17 == 0)\n            return\
    \ \"NO\";\n        if (length % 19 == 0)\n            return \"NO\";\n       \
    \ if (length % 23 == 0)\n            return \"NO\";\n        if (length % 29 ==\
    \ 0)\n            return \"NO\";\n        if (length % 31 == 0)\n            return\
    \ \"NO\";\n        if (length % 37 == 0)\n            return \"NO\";\n       \
    \ if (length % 41 == 0)\n            return \"NO\";\n        if (length % 43 ==\
    \ 0)\n            return \"NO\";\n        if (length % 47 == 0)\n            return\
    \ \"NO\";\n        if (length % 53 == 0)\n            return \"NO\";\n       \
    \ if (length % 59 == 0)\n            return \"NO\";\n        if (length % 61 ==\
    \ 0)\n            return \"NO\";\n        if (length % 67 == 0)\n            return\
    \ \"NO\";\n        if (length % 71 == 0)\n            return \"NO\";\n       \
    \ if (length % 73 == 0)\n            return \"NO\";\n        ", "        if (interval1.Item1\
    \ > interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n    \
    \        interval1 = interval2;\n            interval2 = temp;\n        }\n  \
    \      if (interval1.Item1 > interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item1)\n            return \"NO\";\n  \
    \      if (interval1.Item2 < interval2.Item2)\n            return \"NO\";\n  \
    \      if (interval1.Item1 == interval2.Item1 && interval1.Item2 == interval2.Item2)\n\
    \            return \"YES\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        ", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 > end2)\n            return Intersection(interval2,\
    \ interval1);\n        if (start2 > end1)\n            return Intersection(interval1,\
    \ interval2);\n        if (start1 == end2)\n            return Intersection(interval1,\
    \ interval2);\n        if (start2 == end1)\n            return Intersection(interval2,\
    \ interval1);\n        long length = end1 - start1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        long length2 = end2 - start2;\n    \
    \    if (length2 % 2 == 0)\n            return \"NO\";\n        if (length ==\
    \ length2)\n            return \"YES\";\n        if (length < length2)\n     \
    \       return Intersection(interval2, interval1);\n        if (length > length2)\n\
    \            return Intersection(interval1, interval2);\n        if (length ==\
    \ length2)\n            return Intersection(interval1, interval2);\n        return\
    \ \"NO\";", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 > end2 || start2 > end1)\n            return \"NO\";\n      \
    \  if (start1 == end1 && start2 == end2)\n            return \"YES\";\n      \
    \  if (start1 == end2 || start2 == end1)\n            return \"NO\";\n       \
    \ if (start1 > end2)\n            return Intersection(interval2, interval1);\n\
    \        if (start2 > end1)\n            return Intersection(interval1, interval2);\n\
    \        long length = end1 - start1;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        if (length\
    \ % 2 == 0)\n            return \"NO\";\n        long start = start1 + (start2\
    \ - start1) / 2;\n        long end = start + length / 2;\n        if (start >=\
    \ end)\n            return \"NO\";\n        if (end - start + 1 == length)\n \
    \           return \"YES\";\n        return \"NO\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        long min = Math.Min(start1, start2);\n      \
    \  long max = Math.Max(end1, end2);\n        if (min > max)\n            return\
    \ \"NO\";\n        long length = max - min + 1;\n        if (length % 2 == 0)\n\
    \            return \"NO\";\n        long[] primes = {2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\
    \ 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,\
    \ 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\
    \ 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373,\
    \ 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,\
    \ 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\
    \ 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673,\
    \ 677, 683, 691, 701, 709, 719, 727", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 > end2 || start2 > end1)\n   \
    \         return \"NO\";\n        if (start1 == end1 && start2 == end2)\n    \
    \        return \"YES\";\n        if (start1 == end2 || start2 == end1)\n    \
    \        return \"NO\";\n        if (start1 > end2) {\n            long temp =\
    \ start1;\n            start1 = start2;\n            start2 = temp;\n        }\n\
    \        if (start2 > end1) {\n            long temp = start2;\n            start2\
    \ = start1;\n            start1 = temp;\n        }\n        long length = Math.Max(end1\
    \ - start1, end2 - start2);\n        if (length % 2 == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ left = start1 + (length / 2);\n        long right = start1 + (length / 2) -\
    \ 1;\n        if (left > end1 || right < start2)\n            return \"NO\";\n\
    \        if (left > end2 || right < start2)\n            return \"NO\";\n    \
    \    if (left == end1 && right == end2)\n            return \"YES\";\n       \
    \ if (left > end2) {\n            long temp = left;\n            left = right;\n\
    \            right = temp;\n        }\n        if (right < start2) {\n       \
    \     long temp = right;\n            right = left;\n            left = temp;\n\
    \        }\n        if (left == end1 && right == end2)\n            return \"\
    YES\";\n        if (left > end2) {\n            long temp = left;\n          \
    \  left = right;\n            right = temp;\n        }\n        if (right < start2)\
    \ {\n            long temp = right;\n            right = left;\n            left\
    \ = temp;\n        }\n        if (left == end1 && right == end2)\n", "       \
    \ if (interval1.Item1 > interval2.Item1) {\n            Tuple<long, long> temp\
    \ = interval1;\n            interval1 = interval2;\n            interval2 = temp;\n\
    \        }\n        if (interval1.Item1 > interval2.Item2)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item1)\n            return\
    \ \"NO\";\n        if (interval1.Item2 < interval2.Item2)\n            return\
    \ \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end)\n            return \"NO\";\n        if (start == end)\n            return\
    \ \"YES\";\n        long length = end - start + 1;\n        if (length % 2 ==\
    \ 0)\n            return \"NO\";\n        if (length % 3 == 0)\n            return\
    \ \"NO\";\n        if (length % 5 == 0)\n            return \"NO\";\n        if\
    \ (length % 7 == 0)\n            return \"NO\";\n        if (length % 11 == 0)\n\
    \            return \"NO\";\n        if (length % 13 == 0)\n            return\
    \ \"NO\";\n        if (length % 17 == 0)\n            return \"NO\";\n       \
    \ if (length % 19 == 0)\n            return \"NO\";\n        if (length % 23 ==\
    \ 0)\n            return \"NO\";\n        if (length % 29 == 0)\n            return\
    \ \"NO\";\n        if (length % 31 == 0)\n            return \"NO\";\n       \
    \ if (length % 37 == 0)\n            return \"NO\";\n        if (length % 41 ==\
    \ 0)\n            return \"NO\";\n        if (length % 43 == 0)\n            return\
    \ \"NO\";\n        if (length % 47 == 0)\n            return \"NO\";\n       \
    \ if (length % 53 == 0)\n            return \"NO\";\n        if (length % 59 ==\
    \ 0)\n            return \"NO\";\n        if (length % 61 == 0)\n            return\
    \ \"NO\";\n        if (length % 67 == 0)\n            return \"NO\";\n       \
    \ if (length", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2)\n            return \"NO\";\n   \
    \     if (start1 < start2 || end1 < end2)\n            return \"NO\";\n      \
    \  long length = end1 - start1 + 1;\n        if (length % 2 == 0)\n          \
    \  return \"NO\";\n        long length2 = end2 - start2 + 1;\n        if (length2\
    \ % 2 == 0)\n            return \"NO\";\n        if (length == length2)\n    \
    \        return \"YES\";\n        long start = Math.Max(start1, start2);\n   \
    \     long end = Math.Min(end1, end2);\n        long count = 0;\n        for (long\
    \ i = start; i <= end; i++) {\n            if (i % 2 == 0)\n                count++;\n\
    \        }\n        if (count == length)\n            return \"YES\";\n      \
    \  return \"NO\";", "        long start1 = interval1.Item1;\n        long end1\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n          \
    \  return \"NO\";\n        if (start1 > end2 || start2 > end1)\n            return\
    \ \"NO\";\n        if (start1 == end2 || start2 == end1)\n            return \"\
    YES\";\n        if (start1 == end2 && start2 == end1)\n            return \"YES\"\
    ;\n        if (start1 > end2 || start2 > end1)\n            return \"NO\";\n \
    \       long length = Math.Max(end1 - start1, end2 - start2);\n        if (length\
    \ % 2 == 0)\n            return \"NO\";\n        return \"YES\";", "        long\
    \ start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        if\
    \ (start1 > end1 || start2 > end2)\n            return \"NO\";\n        if (start1\
    \ > end2 || start2 > end1)\n            return \"NO\";\n        if (start1 ==\
    \ end1 && start2 == end2)\n            return \"YES\";\n        if (start1 ==\
    \ end2 || start2 == end1)\n            return \"NO\";\n        long min = Math.Min(start1,\
    \ start2);\n        long max = Math.Max(end1, end2);\n        if (min > max)\n\
    \            return \"NO\";\n        if (min == max)\n            return \"YES\"\
    ;\n        long length = max - min + 1;\n        if (length % 2 == 0)\n      \
    \      return \"NO\";\n        long half = length / 2;\n        long start = min\
    \ + half;\n        long end = min + half;\n        while (start <= max) {\n  \
    \          if (IsPrime(start))\n                return \"YES\";\n            start++;\n\
    \        }\n        return \"NO\";", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        if (start1 > end1 || start2 > end2)\n\
    \            return \"NO\";\n        if (start1 < start2 || end1 < end2)\n   \
    \         return \"NO\";\n        if (start1 > end2 || start2 > end1)\n      \
    \      return \"NO\";\n        long length = end1 - start1 + 1;\n        if (length\
    \ % 2 == 0)\n            return \"NO\";\n        long length2 = end2 - start2\
    \ + 1;\n        if (length2 % 2 == 0)\n            return \"NO\";\n        if\
    \ (length != length2)\n            return \"NO\";\n        long count = 0;\n \
    \       for (long i = start1; i <= end1; i++) {\n            for (long j = start2;\
    \ j <= end2; j++) {\n                if (i == j)\n                    count++;\n\
    \            }\n        }\n        if (count % 2 == 0)\n            return \"\
    NO\";\n        return \"YES\";", "        if (interval1.Item1 > interval2.Item1)\n\
    \            return \"NO\";\n        if (interval1.Item1 == interval2.Item1) {\n\
    \            if (interval1.Item2 > interval2.Item2)\n                return \"\
    NO\";\n            if (interval1.Item2 == interval2.Item2)\n                return\
    \ \"YES\";\n        }\n        return \"NO\";", "        if (interval1.Item1 >\
    \ interval2.Item1) {\n            Tuple<long, long> temp = interval1;\n      \
    \      interval1 = interval2;\n            interval2 = temp;\n        }\n    \
    \    if (interval1.Item2 < interval2.Item1) {\n            return \"NO\";\n  \
    \      }\n        if (interval1.Item1 > interval2.Item2) {\n            return\
    \ \"NO\";\n        }\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        if (end - start + 1\
    \ == 1) {\n            return \"YES\";\n        }\n        if (end - start + 1\
    \ == 2) {\n            return \"NO\";\n        }\n        if (end - start + 1\
    \ == 3) {\n            return \"YES\";\n        }\n        if (end - start + 1\
    \ == 4) {\n            return \"NO\";\n        }\n        if (end - start + 1\
    \ == 5) {\n            return \"YES\";\n        }\n        if (end - start + 1\
    \ == 6) {\n            return \"NO\";\n        }\n        if (end - start + 1\
    \ == 7) {\n            return \"YES\";\n        }\n        if (end - start + 1\
    \ == 8) {\n            return \"NO\";\n        }\n        if (end - start + 1\
    \ == 9) {\n            return \"YES\";\n        }\n        if (end - start + 1\
    \ == 10) {\n            return \"NO\";\n        }\n        if (end - start + 1\
    \ == 11) {\n            return \"YES\";\n        }\n        if (end - start +\
    \ 1 == 12) {\n            return \"NO\";\n        }\n        if (end - start +\
    \ 1 == 13) {\n            return \"YES\";\n        }\n        if (end - start\
    \ + 1 == 14) {\n            return \"NO\";\n        }\n        if (end - start\
    \ + 1 == 15) {\n            return \"YES\";\n        }\n        if (end - start\
    \ + 1 == 16) {\n            ", "        if (interval1.Item1 > interval2.Item1)\
    \ {\n            return \"NO\";\n        }\n        if (interval1.Item1 == interval2.Item1)\
    \ {\n            if (interval1.Item2 > interval2.Item2) {\n                return\
    \ \"NO\";\n            }\n            if (interval1.Item2 == interval2.Item2)\
    \ {\n                return \"YES\";\n            }\n        }\n        return\
    \ \"NO\";"]
stop_tokens:
- "\n    }\n"

name: HumanEval_134_check_if_last_char_is_a_letter
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function that returns true if the last character\n\
  \    // of a given string is an alphabetical character and is not\n    // a part\
  \ of a word, and false otherwise.\n    // Note: \"word\" is a group of characters\
  \ separated by space.\n    // Examples:\n    // >>> CheckIfLastCharIsALetter((\"\
  apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsALetter((\"apple pi e\"\
  ))\n    // (true)\n    // >>> CheckIfLastCharIsALetter((\"apple pi e \"))\n    //\
  \ (false)\n    // >>> CheckIfLastCharIsALetter((\"\"))\n    // (false)\n    public\
  \ static bool CheckIfLastCharIsALetter(string txt) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckIfLastCharIsALetter((\"\
  apple\")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"apple pi e\"\
  )) == (true));\n    Debug.Assert(CheckIfLastCharIsALetter((\"eeeee\")) == (false));\n\
  \    Debug.Assert(CheckIfLastCharIsALetter((\"A\")) == (true));\n    Debug.Assert(CheckIfLastCharIsALetter((\"\
  Pumpkin pie \")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"Pumpkin\
  \ pie 1\")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"\")) == (false));\n\
  \    Debug.Assert(CheckIfLastCharIsALetter((\"eeeee e \")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"\
  apple pie\")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"apple pi\
  \ e \")) == (false));\n    }\n\n}\n"
completions: ["        // your code goes here\n        return txt.LastIndexOf(' ')\
    \ == -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a digit and false otherwise.\n    // Note: \"digit\"\
    \ is a character that is a digit according to\n    // the ASCII table.\n    //\
    \ Examples:\n    // >>> CheckIfLastCharIsADigit((\"apple\"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsADigit((\"apple 9\"))\n    // (true)\n    // >>>\
    \ CheckIfLastCharIsADigit((\"apple 9 \"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\
    \"))\n    // (false)\n    public static bool CheckIfLastCharIsADigit(string txt)\
    \ {\n        // your code goes here\n        return txt.LastIndexOf(' ') == -1;\n\
    \    }\n\n    // Create a function that returns true if the last character\n \
    \   // of a given string is a lowercase character and false otherwise.\n    //\
    \ Note: \"lowercase\" is a character that is a lowercase letter according\n  \
    \  // to the ASCII table.\n    // Examples:\n    // >>> CheckIfLastCharIsALowercase((\"\
    apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple 9\"\
    ))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple 9 \"))\n \
    \   // (true)\n    // >>> CheckIfLastCharIsALowercase((\"\"))\n    // (false)\n\
    \    public static bool CheckIfLastCharIsALowercase(string txt) {\n        //\
    \ your code goes here\n        return txt.LastIndexOf(' ') == -1;\n    }\n\n \
    \   // Create a function that returns true if the last character\n    // of a\
    \ given string is an uppercase character and false otherwise.\n    // Note: \"\
    uppercase\" is a character that is a uppercase letter according\n    // to the\
    \ ASCII table.\n    // Examples:\n    // >>> CheckIfLastCharIsAnUppercase((\"\
    apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsAnUppercase", "       \
    \ // your code goes here\n        return txt.LastIndexOf(' ') == -1;", "     \
    \   // your code goes here\n        return txt.LastIndexOf(' ') == -1;", "   \
    \     // your code goes here\n        return txt.LastIndexOf(' ') == -1;", " \
    \       // your code goes here\n        return txt.LastIndexOf(' ') == -1;", " \
    \       // your code goes here\n        return txt.LastIndexOf(' ') == -1;", " \
    \       // your code goes here\n        return txt.LastIndexOf(\" \") == -1;",
  "        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf('\
    \ ') == -1;", "        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf('\
    \ ') == -1;", "        // your code goes here\n        return txt.LastIndexOf('\
    \ ') == -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a digit and false otherwise.\n    // Note: \"digit\"\
    \ is a character that is a digit according to\n    // the ASCII table.\n    //\
    \ Examples:\n    // >>> CheckIfLastCharIsADigit((\"apple\"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsADigit((\"apple3\"))\n    // (true)\n    // >>> CheckIfLastCharIsADigit((\"\
    apple3 \"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\"))\n    //\
    \ (false)\n    public static bool CheckIfLastCharIsADigit(string txt) {\n    \
    \    // your code goes here\n        return txt.LastIndexOf(' ') == -1;\n    }\n\
    \n    // Create a function that returns true if the last character\n    // of\
    \ a given string is a lowercase character and false otherwise.\n    // Note: \"\
    lowercase\" is a character that is a lowercase letter according\n    // to the\
    \ ASCII table.\n    // Examples:\n    // >>> CheckIfLastCharIsALowercase((\"apple\"\
    ))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple3\"))\n   \
    \ // (true)\n    // >>> CheckIfLastCharIsALowercase((\"apple3 \"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsALowercase((\"\"))\n    // (false)\n    public static\
    \ bool CheckIfLastCharIsALowercase(string txt) {\n        // your code goes here\n\
    \        return txt.LastIndexOf(' ') == -1;\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a uppercase\
    \ character and false otherwise.\n    // Note: \"uppercase\" is a character that\
    \ is a uppercase letter according\n    // to the ASCII table.\n    // Examples:\n\
    \    // >>> CheckIfLastCharIsAUppercase((\"apple\"))\n    // (false)\n    // >>>\
    \ CheckIfLastCharIsAUppercase((\"", "        if (txt.Length == 0) return false;\n\
    \        return txt[txt.Length - 1].IsLetter() && !txt.Contains(\" \");", "  \
    \      if (txt.Length == 0) return false;\n        return txt[txt.Length - 1].IsLetter()\
    \ && !txt.Contains(\" \");", "        // your code goes here\n        return txt.LastIndexOf('\
    \ ') == -1;", "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") &&\
    \ !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\"\
    ) && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"(\") &&\
    \ !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"\
    {\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") &&\
    \ !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"@\") && !txt.EndsWith(\"\
    #\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") &&\
    \ !txt.EndsWith(\"*\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"\
    \\\\\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\"\
    ) && !txt.EndsWith(\">\") && !txt.EndsWith(\"@\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"\
    $\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"*\") &&\
    \ !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") &&\
    \ !txt.EndsWith(\"@\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"\
    %\") && !", "        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf('\
    \ ') == -1 || txt.LastIndexOf(' ') == txt.Length - 1;", "        return txt.LastIndexOf('\
    \ ') == -1;", '        return !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1;',
  "        // your code goes here\n        return txt.LastIndexOf(' ') == -1;\n  \
    \  }\n\n    // Create a function that returns true if the last character\n   \
    \ // of a given string is a digit and false otherwise.\n    // Note: \"digit\"\
    \ is a character that is a digit according to\n    // the ASCII table.\n    //\
    \ Examples:\n    // >>> CheckIfLastCharIsADigit((\"apple\"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsADigit((\"apple 9\"))\n    // (true)\n    // >>>\
    \ CheckIfLastCharIsADigit((\"apple 9 \"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\
    \"))\n    // (false)\n    public static bool CheckIfLastCharIsADigit(string txt)\
    \ {\n        // your code goes here\n        return txt.LastIndexOf(' ') == -1;\n\
    \    }\n\n    // Create a function that returns true if the last character\n \
    \   // of a given string is a lowercase character and false otherwise.\n    //\
    \ Note: \"lowercase\" is a character that is a lowercase letter according\n  \
    \  // to the ASCII table.\n    // Examples:\n    // >>> CheckIfLastCharIsALowercase((\"\
    apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple 9\"\
    ))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple 9 \"))\n \
    \   // (true)\n    // >>> CheckIfLastCharIsALowercase((\"\"))\n    // (false)\n\
    \    public static bool CheckIfLastCharIsALowercase(string txt) {\n        //\
    \ your code goes here\n        return txt.LastIndexOf(' ') == -1;\n    }\n\n \
    \   // Create a function that returns true if the last character\n    // of a\
    \ given string is a uppercase character and false otherwise.\n    // Note: \"\
    uppercase\" is a character that is a uppercase letter according\n    // to the\
    \ ASCII table.\n    // Examples:\n    // >>> CheckIfLastCharIsAUppercase((\"apple\"\
    ))\n    // (false)\n    // >>> CheckIfLastCharIsAUppercase((\"", "        // your\
    \ code goes here\n        return txt.LastIndexOf(' ') == -1;", "        return\
    \ txt.LastIndexOf(' ') == -1;", '        return txt.LastIndexOf(" ") == -1;',
  "        if (txt.Length == 0) return false;\n        return txt[txt.Length - 1].IsLetter()\
    \ && !txt.Contains(\" \");", "        return txt.LastIndexOf(' ') == -1;", '        return
    !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1 && !txt.Contains(" ");', "  \
    \      return txt.LastIndexOf(' ') == -1;", "        // your code goes here\n\
    \        return txt.LastIndexOf(' ') == -1;", "        return !txt.EndsWith(\"\
    \ \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\")\
    \ && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\"\
    ) && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\
    \") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\"\
    ) && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") &&\
    \ !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"\
    `\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\"\
    ) && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") &&\
    \ !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\"\
    ) && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !", "        return txt.LastIndexOf(' ') == -1;", "        return !txt.EndsWith(\"\
    \ \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\")\
    \ && !txt.EndsWith(\";\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") &&\
    \ !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\
    \\\\\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\"\
    ) && !txt.EndsWith(\"]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") &&\
    \ !txt.EndsWith(\"@\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"\
    %\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"+\") &&\
    \ !txt.EndsWith(\"=\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"~\") && !txt.EndsWith(\"\
    \\\\\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    -\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\"\
    ) && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"\
    ]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"\
    @\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !", "        return txt.LastIndexOf('\
    \ ') == -1;", '        return txt.LastIndexOf(" ") == -1;', "        return txt.LastIndexOf('\
    \ ') == -1 ||\n            txt.LastIndexOf(' ') == txt.Length - 1 &&\n       \
    \     txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n            txt.LastIndexOf('\
    \ ') == txt.LastIndexOf(' ') - 1 &&\n            txt.LastIndexOf(' ') == txt.LastIndexOf('\
    \ ') - 1 &&\n            txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n\
    \            txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n           \
    \ txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n            txt.LastIndexOf('\
    \ ') == txt.LastIndexOf(' ') - 1 &&\n            txt.LastIndexOf(' ') == txt.LastIndexOf('\
    \ ') - 1 &&\n            txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n\
    \            txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n           \
    \ txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n            txt.LastIndexOf('\
    \ ') == txt.LastIndexOf(' ') - 1 &&\n            txt.LastIndexOf(' ') == txt.LastIndexOf('\
    \ ') - 1 &&\n            txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n\
    \            txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n           \
    \ txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n            txt.LastIndexOf('\
    \ ') == txt.LastIndexOf(' ') - 1 &&\n            txt.LastIndexOf(' ') == txt.LastIndexOf('\
    \ ') - 1 &&\n            txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n\
    \            txt.LastIndexOf(' ') == txt.LastIndexOf(' ') - 1 &&\n           \
    \ txt.LastIndexOf(' ') == txt.LastIndexOf(' '", '        return !txt.EndsWith("
    ") && txt.LastIndexOf(" ") == -1;', "        return !txt.EndsWith(\" \") && !txt.EndsWith(\"\
    .\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") &&\
    \ !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"\
    _\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"(\"\
    ) && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"\
    {\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") &&\
    \ !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"\
    ,\") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") &&\
    \ !txt.EndsWith(\";\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"\
    -\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\"\
    ) && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"\
    ]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"\
    =\") && !txt.EndsWith(\",\") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") &&\
    \ !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.", "        return txt.LastIndexOf(' ') == -1 && txt.LastIndexOf('-')\
    \ == -1 && txt.LastIndexOf('.') == -1 && txt.LastIndexOf('_') == -1 && txt.LastIndexOf('(')\
    \ == -1 && txt.LastIndexOf(')') == -1 && txt.LastIndexOf('!') == -1 && txt.LastIndexOf('?')\
    \ == -1 && txt.LastIndexOf('\"') == -1 && txt.LastIndexOf('\\'') == -1 && txt.LastIndexOf('/')\
    \ == -1 && txt.LastIndexOf('\\\\') == -1 && txt.LastIndexOf('|') == -1 && txt.LastIndexOf(':')\
    \ == -1 && txt.LastIndexOf(';') == -1 && txt.LastIndexOf('=') == -1 && txt.LastIndexOf('+')\
    \ == -1 && txt.LastIndexOf('-') == -1 && txt.LastIndexOf('*') == -1 && txt.LastIndexOf('&')\
    \ == -1 && txt.LastIndexOf('%') == -1 && txt.LastIndexOf('#') == -1 && txt.LastIndexOf('@')\
    \ == -1 && txt.LastIndexOf('$') == -1 && txt.LastIndexOf('^') == -1 && txt.LastIndexOf('&')\
    \ == -1 && txt.LastIndexOf('*') == -1 && txt.LastIndexOf('(') == -1 && txt.LastIndexOf(')')\
    \ == -1 && txt.LastIndexOf('!') == -1 && txt.LastIndexOf('?') == -1 && txt.LastIndexOf('\"\
    ') == -1 && txt.LastIndexOf('\\'') == -1 && txt.LastIndexOf('/') == -1 && txt.LastIndexOf('\\\
    \\') == -1 && txt.LastIndexOf('|') == -1 && txt.LastIndexOf(':') == -1 && txt.LastIndexOf(';')\
    \ == -1 && txt.LastIndexOf('=') == -1 && t", "        return txt.LastIndexOf('\
    \ ') == -1 || txt.LastIndexOf(' ') == txt.Length - 1;", "        return txt.LastIndexOf('\
    \ ') == -1;\n    }\n\n    // Create a function that returns true if the given\
    \ string\n    // contains at least one word that is a palindrome and false\n \
    \   // otherwise.\n    // Note: \"word\" is a group of characters separated by\
    \ space.\n    // Examples:\n    // >>> CheckIfStringContainsPalindrome(\"\")\n\
    \    // (false)\n    // >>> CheckIfStringContainsPalindrome(\"a\")\n    // (false)\n\
    \    // >>> CheckIfStringContainsPalindrome(\"ab\")\n    // (true)\n    // >>>\
    \ CheckIfStringContainsPalindrome(\"ab \")\n    // (false)\n    // >>> CheckIfStringContainsPalindrome(\"\
    a b\")\n    // (true)\n    // >>> CheckIfStringContainsPalindrome(\"a b \")\n\
    \    // (true)\n    // >>> CheckIfStringContainsPalindrome(\"a b c\")\n    //\
    \ (true)\n    // >>> CheckIfStringContainsPalindrome(\"a b c \")\n    // (true)\n\
    \    // >>> CheckIfStringContainsPalindrome(\"a b c d\")\n    // (false)\n   \
    \ // >>> CheckIfStringContainsPalindrome(\"a b c d \")\n    // (false)\n    //\
    \ >>> CheckIfStringContainsPalindrome(\"a b c d e\")\n    // (false)\n    // >>>\
    \ CheckIfStringContainsPalindrome(\"a b c d e \")\n    // (false)\n    // >>>\
    \ CheckIfStringContainsPalindrome(\"a b c d e f\")\n    // (true)\n    // >>>\
    \ CheckIfStringContainsPalindrome(\"a b c d e f \")\n    // (true)\n    // >>>\
    \ CheckIfStringContainsPalindrome(\"a b c d e f g\")\n    // (false)\n    // >>>\
    \ CheckIfStringContainsPalindrome(\"a b c d e f g \")\n    // (false)\n    public\
    \ static bool CheckIfStringContainsPalindrome(string txt) {\n        return txt.IndexOf('\
    \ ') == -1;\n    }\n\n    // Create a function that returns true if the given\
    \ string\n    // contains", "        return txt.LastIndexOf(' ') == -1;", "  \
    \      return txt.LastIndexOf(' ') == -1;", '        return !txt.EndsWith(" ")
    && !txt.Contains(" ") && txt.LastIndexOf(" ") == -1 && !txt.Contains(" ");', " \
    \       // your code goes here\n        return txt.LastIndexOf(' ') == -1;", " \
    \       // your code goes here\n        return txt.LastIndexOf(' ') == -1;", " \
    \       return txt.LastIndexOf(' ') == -1;", "        return !txt.EndsWith(\"\
    \ \") && txt.LastIndexOf(\" \") == -1 &&\n            txt.LastIndexOf(\".\") ==\
    \ -1 && txt.LastIndexOf(\"!\") == -1 &&\n            txt.LastIndexOf(\"?\") ==\
    \ -1 && txt.LastIndexOf(\";\") == -1 &&\n            txt.LastIndexOf(\"'\") ==\
    \ -1 && txt.LastIndexOf(\"\\\"\") == -1 &&\n            txt.LastIndexOf(\"-\"\
    ) == -1 && txt.LastIndexOf(\"_\") == -1 &&\n            txt.LastIndexOf(\"/\"\
    ) == -1 && txt.LastIndexOf(\"@\") == -1 &&\n            txt.LastIndexOf(\"#\"\
    ) == -1 && txt.LastIndexOf(\"$\") == -1 &&\n            txt.LastIndexOf(\"%\"\
    ) == -1 && txt.LastIndexOf(\"^\") == -1 &&\n            txt.LastIndexOf(\"&\"\
    ) == -1 && txt.LastIndexOf(\"*\") == -1 &&\n            txt.LastIndexOf(\"(\"\
    ) == -1 && txt.LastIndexOf(\")\") == -1 &&\n            txt.LastIndexOf(\"[\"\
    ) == -1 && txt.LastIndexOf(\"]\") == -1 &&\n            txt.LastIndexOf(\"{\"\
    ) == -1 && txt.LastIndexOf(\"}\") == -1 &&\n            txt.LastIndexOf(\"+\"\
    ) == -1 && txt.LastIndexOf(\"=\") == -1 &&\n            txt.LastIndexOf(\",\"\
    ) == -1 && txt.LastIndexOf(\".\") == -1 &&\n            txt.LastIndexOf(\"<\"\
    ) == -1 && txt.LastIndexOf(\">\") == -1 &&\n            txt.LastIndexOf(\"?\"\
    ) == -1 && txt.LastIndexOf(\"|\") == -1 &&\n            txt.LastIndexOf(\"\\\\\
    \") == -1 && txt.LastIndexOf(\"`\") == -1 &&\n            txt.LastIndexOf(\"~\"\
    ) == -1 && txt.LastIndexOf(\"#\") == -1 &&\n            txt.LastIndexOf(\"$\"\
    ) == -1 && txt.LastIndexOf(\"%\") == -1 &&\n            txt", "        return\
    \ !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\";\") && !txt.EndsWith(\":\") && !txt.EndsWith(\"-\") &&\
    \ !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"\
    /\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\"\
    ) && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"\
    %\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") &&\
    \ !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"\
    ^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") &&\
    \ !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"\
    &\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") &&\
    \ !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"\
    *\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") &&\
    \ !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"\
    #\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !", "        return txt.LastIndexOf('\
    \ ') == -1 &&\n            txt.LastIndexOf('-') == -1 &&\n            txt.LastIndexOf('.')\
    \ == -1 &&\n            txt.LastIndexOf('_') == -1 &&\n            txt.LastIndexOf('/')\
    \ == -1 &&\n            txt.LastIndexOf('\\\\') == -1 &&\n            txt.LastIndexOf('\\\
    n') == -1 &&\n            txt.LastIndexOf('\\r') == -1 &&\n            txt.LastIndexOf('\\\
    t') == -1 &&\n            txt.LastIndexOf('\\0') == -1 &&\n            txt.LastIndexOf('\\\
    f') == -1 &&\n            txt.LastIndexOf('\\b') == -1 &&\n            txt.LastIndexOf('\\\
    x00') == -1 &&\n            txt.LastIndexOf('\\x01') == -1 &&\n            txt.LastIndexOf('\\\
    x02') == -1 &&\n            txt.LastIndexOf('\\x03') == -1 &&\n            txt.LastIndexOf('\\\
    x04') == -1 &&\n            txt.LastIndexOf('\\x05') == -1 &&\n            txt.LastIndexOf('\\\
    x06') == -1 &&\n            txt.LastIndexOf('\\x07') == -1 &&\n            txt.LastIndexOf('\\\
    x08') == -1 &&\n            txt.LastIndexOf('\\x09') == -1 &&\n            txt.LastIndexOf('\\\
    x0a') == -1 &&\n            txt.LastIndexOf('\\x0b') == -1 &&\n            txt.LastIndexOf('\\\
    x0c') == -1 &&\n            txt.LastIndexOf('\\x0d') == -1 &&\n            txt.LastIndexOf('\\\
    x0e') == -1 &&\n            txt.LastIndexOf('\\x0f') == -1 &&\n            txt.LastIndexOf('\\\
    x10') == -1 &&\n            txt.LastIndexOf('\\x11') == -1 &&\n            txt.LastIndexOf('\\\
    x12') == -1 &&\n            txt.LastIndexOf('\\x13') == -1 &&\n            txt.LastIndexOf('\\\
    x14", "        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf('\
    \ ') == -1;", "        if (txt.Length == 0)\n            return false;\n     \
    \   return txt[txt.Length - 1].IsLetter() && !txt.Contains(\" \");", "       \
    \ return txt.LastIndexOf(' ') == -1;", "        // your code goes here\n     \
    \   return txt.LastIndexOf(' ') == -1;", '        return txt.LastIndexOf(" ")
    == -1;', "        // your code goes here\n        return txt.LastIndexOf(\" \"\
    ) == -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a digit and false otherwise.\n    // Note: \"digit\"\
    \ is a character that is a digit on the keyboard.\n    // Examples:\n    // >>>\
    \ CheckIfLastCharIsADigit((\"apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\
    apple3\"))\n    // (true)\n    // >>> CheckIfLastCharIsADigit((\"apple3 \"))\n\
    \    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\"))\n    // (false)\n\
    \    public static bool CheckIfLastCharIsADigit(string txt) {\n        // your\
    \ code goes here\n        return txt.LastIndexOf(\" \") == -1;\n    }\n\n    //\
    \ Create a function that returns true if the last character\n    // of a given\
    \ string is a lowercase character and false otherwise.\n    // Note: \"lowercase\"\
    \ is a character that is a lowercase letter on the keyboard.\n    // Examples:\n\
    \    // >>> CheckIfLastCharIsALowercase((\"apple\"))\n    // (false)\n    // >>>\
    \ CheckIfLastCharIsALowercase((\"apple3\"))\n    // (true)\n    // >>> CheckIfLastCharIsALowercase((\"\
    apple3 \"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"\"))\n\
    \    // (false)\n    public static bool CheckIfLastCharIsALowercase(string txt)\
    \ {\n        // your code goes here\n        return txt.LastIndexOf(\" \") ==\
    \ -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is an uppercase character and false otherwise.\n   \
    \ // Note: \"uppercase\" is a character that is a uppercase letter on the keyboard.\n\
    \    // Examples:\n    // >>> CheckIfLastCharIsAnUppercase((\"apple\"))\n    //\
    \ (false)\n    // >>> CheckIfLastCharIsAnUppercase((\"apple3\"))\n    // (true)\n\
    \    // >>>", "        // your code goes here\n        return txt.LastIndexOf(\"\
    \ \") == -1;", "        // your code goes here\n        if (txt.Length == 0)\n\
    \            return false;\n        return txt[txt.Length - 1].IsLetter() && !txt.Contains(\"\
    \ \");", "        // your code goes here\n        return txt.LastIndexOf(' ')\
    \ == -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a digit and false otherwise.\n    // Note: \"digit\"\
    \ is a character that is a digit.\n    // Examples:\n    // >>> CheckIfLastCharIsADigit((\"\
    apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"apple3\"))\n\
    \    // (true)\n    // >>> CheckIfLastCharIsADigit((\"apple3 \"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsADigit((\"\"))\n    // (false)\n    public static\
    \ bool CheckIfLastCharIsADigit(string txt) {\n        // your code goes here\n\
    \        return txt.LastIndexOf(' ') == -1;\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a lowercase\
    \ character and false otherwise.\n    // Note: \"lowercase\" is a character that\
    \ is a lowercase letter.\n    // Examples:\n    // >>> CheckIfLastCharIsALowercase((\"\
    apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple3\"\
    ))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple3 \"))\n  \
    \  // (true)\n    // >>> CheckIfLastCharIsALowercase((\"\"))\n    // (false)\n\
    \    public static bool CheckIfLastCharIsALowercase(string txt) {\n        //\
    \ your code goes here\n        return txt.LastIndexOf(' ') == -1;\n    }\n\n \
    \   // Create a function that returns true if the last character\n    // of a\
    \ given string is a uppercase character and false otherwise.\n    // Note: \"\
    uppercase\" is a character that is a uppercase letter.\n    // Examples:\n   \
    \ // >>> CheckIfLastCharIsAnUppercase((\"apple\"))\n    // (false)\n    // >>>\
    \ CheckIfLastCharIsAnUppercase((\"apple3\"))\n    // (true)\n    // >>> CheckIfLastCharIsAnUppercase",
  "        return txt.LastIndexOf(' ') == -1;", "        return !txt.EndsWith(\" \"\
    ) && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\"\
    ;\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"-\"\
    ) && !txt.EndsWith(\"_\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") &&\
    \ !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"\
    ]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"\
    *\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"@\") &&\
    \ !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"\
    ^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"~\") && !txt.EndsWith(\"`\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") &&\
    \ !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\
    \") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\"\
    ) && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\"\
    ) && !", "        return txt.LastIndexOf(' ') == -1 || txt.LastIndexOf(' ') ==\
    \ txt.Length - 1;", "        // your code goes here\n        return txt.LastIndexOf(\"\
    \ \") == -1;\n    }\n\n    // Create a function that returns true if the last\
    \ character\n    // of a given string is a digit and false otherwise.\n    //\
    \ Note: \"digit\" is a character that is part of a number.\n    // Examples:\n\
    \    // >>> CheckIfLastCharIsADigit((\"apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\
    apple 9\"))\n    // (true)\n    // >>> CheckIfLastCharIsADigit((\"apple 9 \"))\n\
    \    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\"))\n    // (false)\n\
    \    public static bool CheckIfLastCharIsADigit(string txt) {\n        // your\
    \ code goes here\n        return txt.LastIndexOf(\" \") == -1;\n    }\n\n    //\
    \ Create a function that returns true if the last character\n    // of a given\
    \ string is a lowercase character and false otherwise.\n    // Note: \"lowercase\"\
    \ is a character that is part of a lowercase word.\n    // Examples:\n    // >>>\
    \ CheckIfLastCharIsALowercase((\"apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"\
    apple 9\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple 9\
    \ \"))\n    // (true)\n    // >>> CheckIfLastCharIsALowercase((\"\"))\n    //\
    \ (false)\n    public static bool CheckIfLastCharIsALowercase(string txt) {\n\
    \        // your code goes here\n        return txt.LastIndexOf(\" \") == -1;\n\
    \    }\n\n    // Create a function that returns true if the last character\n \
    \   // of a given string is an uppercase character and false otherwise.\n    //\
    \ Note: \"uppercase\" is a character that is part of a uppercase word.\n    //\
    \ Examples:\n    // >>> CheckIfLastCharIsAnUppercase((\"apple\"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsAnUppercase((\"apple 9\"))\n    // (false)\n    //\
    \ >>> CheckIfLast", "        // your code goes here\n        return txt.LastIndexOf('\
    \ ') == -1;", "        // your code goes here\n        if (txt.Length == 0)\n\
    \            return false;\n        return txt[txt.Length - 1].IsLetter() && !txt.Contains(\"\
    \ \");", "        // your code goes here\n        return txt.LastIndexOf(' ')\
    \ == -1;", "        // your code goes here\n        return txt.LastIndexOf(\"\
    \ \") == -1;", "        return txt.LastIndexOf(' ') == -1 && txt.LastIndexOf('-')\
    \ == -1 && txt.LastIndexOf('.') == -1 && txt.LastIndexOf('_') == -1 && txt.LastIndexOf('!')\
    \ == -1 && txt.LastIndexOf('?') == -1 && txt.LastIndexOf('@') == -1 && txt.LastIndexOf('#')\
    \ == -1 && txt.LastIndexOf('$') == -1 && txt.LastIndexOf('%') == -1 && txt.LastIndexOf('^')\
    \ == -1 && txt.LastIndexOf('&') == -1 && txt.LastIndexOf('*') == -1 && txt.LastIndexOf('(')\
    \ == -1 && txt.LastIndexOf(')') == -1 && txt.LastIndexOf('=') == -1 && txt.LastIndexOf('+')\
    \ == -1 && txt.LastIndexOf('{') == -1 && txt.LastIndexOf('}') == -1 && txt.LastIndexOf('[')\
    \ == -1 && txt.LastIndexOf(']') == -1 && txt.LastIndexOf(':') == -1 && txt.LastIndexOf(';')\
    \ == -1 && txt.LastIndexOf('\"') == -1 && txt.LastIndexOf('\\'') == -1 && txt.LastIndexOf('|')\
    \ == -1 && txt.LastIndexOf('<') == -1 && txt.LastIndexOf('>') == -1 && txt.LastIndexOf('@')\
    \ == -1 && txt.LastIndexOf('~') == -1;", "        // your code goes here\n   \
    \     return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf(' ')\
    \ == -1;", "        return txt.LastIndexOf(' ') == -1;", "        // your code\
    \ goes here\n        return txt.LastIndexOf(' ') == -1;", "        return !txt.EndsWith(\"\
    \ \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\")\
    \ && !txt.EndsWith(\";\") && !txt.EndsWith(\":\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"\
    _\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\"\
    ) && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") &&\
    \ !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"@\") && !txt.EndsWith(\"\
    #\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    ~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") &&\
    \ !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\"\
    >\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"|\"\
    ) && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"?\") &&\
    \ !txt.EndsWith(\";\") && !txt.EndsWith(\":\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"\
    _\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\"\
    ) && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") &&\
    \ !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"@\") && !",
  "        // your code goes here\n        return txt.LastIndexOf(' ') == -1;", '        return
    !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1;', "        // your code goes\
    \ here\n        return txt.LastIndexOf(' ') == -1;", "        // your code goes\
    \ here\n        return txt.LastIndexOf(' ') == -1;", '        return txt.LastIndexOf("
    ") == -1;', "        // your code goes here\n        return txt.LastIndexOf('\
    \ ') == -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a digit and false otherwise.\n    // Note: \"digit\"\
    \ is a character that is part of a number.\n    // Examples:\n    // >>> CheckIfLastCharIsADigit((\"\
    apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"apple 3\"\
    ))\n    // (true)\n    // >>> CheckIfLastCharIsADigit((\"apple 3 \"))\n    //\
    \ (false)\n    // >>> CheckIfLastCharIsADigit((\"\"))\n    // (false)\n    public\
    \ static bool CheckIfLastCharIsADigit(string txt) {\n        // your code goes\
    \ here\n        return txt.LastIndexOf(' ') == -1;\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a lowercase\
    \ character and false otherwise.\n    // Note: \"lowercase\" is a character that\
    \ is part of a word.\n    // Examples:\n    // >>> CheckIfLastCharIsALowercase((\"\
    apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple\
    \ 3\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple 3 \"\
    ))\n    // (true)\n    // >>> CheckIfLastCharIsALowercase((\"\"))\n    // (false)\n\
    \    public static bool CheckIfLastCharIsALowercase(string txt) {\n        //\
    \ your code goes here\n        return txt.LastIndexOf(' ') == -1;\n    }\n\n \
    \   // Create a function that returns true if the last character\n    // of a\
    \ given string is an uppercase character and false otherwise.\n    // Note: \"\
    uppercase\" is a character that is part of a word.\n    // Examples:\n    // >>>\
    \ CheckIfLastCharIsAnUppercase((\"apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsAnUppercase((\"\
    apple 3\"))\n    // (false)\n    // >>> CheckIfLastCharIs", '        return txt.LastIndexOf("
    ") == -1;', "        return !txt.EndsWith(\" \") && txt.LastIndexOf(\" \") ==\
    \ -1 &&\n            txt.LastIndexOf(\"-\") == -1 && txt.LastIndexOf(\"_\") ==\
    \ -1 &&\n            txt.LastIndexOf(\".\") == -1 && txt.LastIndexOf(\"'\") ==\
    \ -1 &&\n            txt.LastIndexOf(\";\") == -1 && txt.LastIndexOf(\":\") ==\
    \ -1 &&\n            txt.LastIndexOf(\"!\") == -1 && txt.LastIndexOf(\"?\") ==\
    \ -1 &&\n            txt.LastIndexOf(\"@\") == -1 && txt.LastIndexOf(\"#\") ==\
    \ -1 &&\n            txt.LastIndexOf(\"$\") == -1 && txt.LastIndexOf(\"%\") ==\
    \ -1 &&\n            txt.LastIndexOf(\"^\") == -1 && txt.LastIndexOf(\"&\") ==\
    \ -1 &&\n            txt.LastIndexOf(\"*\") == -1 && txt.LastIndexOf(\"(\") ==\
    \ -1 &&\n            txt.LastIndexOf(\")\") == -1 && txt.LastIndexOf(\"+\") ==\
    \ -1 &&\n            txt.LastIndexOf(\"=\") == -1 && txt.LastIndexOf(\"-\") ==\
    \ -1 &&\n            txt.LastIndexOf(\"/\") == -1 && txt.LastIndexOf(\"\\\\\"\
    ) == -1 &&\n            txt.LastIndexOf(\"|\") == -1 && txt.LastIndexOf(\"<\"\
    ) == -1 &&\n            txt.LastIndexOf(\">\") == -1 && txt.LastIndexOf(\"\\\"\
    \") == -1 &&\n            txt.LastIndexOf(\"'\") == -1 && txt.LastIndexOf(\"`\"\
    ) == -1 &&\n            txt.LastIndexOf(\"[\") == -1 && txt.LastIndexOf(\"]\"\
    ) == -1 &&\n            txt.LastIndexOf(\"{\") == -1 && txt.LastIndexOf(\"}\"\
    ) == -1 &&\n            txt.LastIndexOf(\"|\") == -1 && txt.LastIndexOf(\";\"\
    ) == -1 &&\n            txt.LastIndexOf(\".\") == -1 && txt.LastIndexOf(\"_\"\
    ) == -1 &&\n            txt", "        if (txt.Length == 0) return false;\n  \
    \      return txt[txt.Length - 1].IsLetter() && !txt.Contains(\" \");", "    \
    \    return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf(' ')\
    \ == -1 &&\n            txt.LastIndexOf('-') == -1 &&\n            txt.LastIndexOf('_')\
    \ == -1 &&\n            txt.LastIndexOf('.') == -1 &&\n            txt.LastIndexOf('!')\
    \ == -1 &&\n            txt.LastIndexOf('?') == -1 &&\n            txt.LastIndexOf('@')\
    \ == -1 &&\n            txt.LastIndexOf('#') == -1 &&\n            txt.LastIndexOf('$')\
    \ == -1 &&\n            txt.LastIndexOf('%') == -1 &&\n            txt.LastIndexOf('^')\
    \ == -1 &&\n            txt.LastIndexOf('&') == -1 &&\n            txt.LastIndexOf('*')\
    \ == -1 &&\n            txt.LastIndexOf('(') == -1 &&\n            txt.LastIndexOf(')')\
    \ == -1 &&\n            txt.LastIndexOf('{') == -1 &&\n            txt.LastIndexOf('}')\
    \ == -1 &&\n            txt.LastIndexOf('[') == -1 &&\n            txt.LastIndexOf(']')\
    \ == -1 &&\n            txt.LastIndexOf('+') == -1 &&\n            txt.LastIndexOf('=')\
    \ == -1 &&\n            txt.LastIndexOf(',') == -1 &&\n            txt.LastIndexOf(';')\
    \ == -1 &&\n            txt.LastIndexOf(':') == -1 &&\n            txt.LastIndexOf('\"\
    ') == -1 &&\n            txt.LastIndexOf('\\'') == -1 &&\n            txt.LastIndexOf('<')\
    \ == -1 &&\n            txt.LastIndexOf('>') == -1 &&\n            txt.LastIndexOf('/')\
    \ == -1 &&\n            txt.LastIndexOf('\\\\') == -1 &&\n            txt.LastIndexOf('|')\
    \ == -1 &&\n            txt.LastIndexOf(' ') == -1 &&\n            txt.LastIndexOf('\\\
    n') == -1 &&\n            txt.LastIndexOf('\\r') == -1 &&\n            txt.LastIndexOf('\\\
    t') == -1 &&\n            txt.LastIndexOf('\\0') == -1 &&\n            ", "  \
    \      return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\\\"\"\
    ) && !txt.EndsWith(\"'\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"\
    /\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\"\
    ) && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"\
    }\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") &&\
    \ !txt.EndsWith(\">\") && !txt.EndsWith(\":\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\"\
    ) && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"(\") &&\
    \ !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"\
    {\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") &&\
    \ !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\":\") && !txt.EndsWith(\"\
    ;\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"-\"\
    ) && !txt.EndsWith(\"_\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") &&\
    \ !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"\
    ]\") && !", "        // your code goes here\n        return txt.LastIndexOf(\"\
    \ \") == -1;", "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") &&\
    \ !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\
    :\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") &&\
    \ !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"\
    #\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"\
    $\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") &&\
    \ !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"\
    %\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") &&\
    \ !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"\
    ^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") &&\
    \ !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"\
    &\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") &&\
    \ !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"\
    *\") && !", "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    ?\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\";\") && !txt.EndsWith(\":\") &&\
    \ !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    &\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") &&\
    \ !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    ~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") &&\
    \ !txt.EndsWith(\"@\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"\
    =\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"[\") &&\
    \ !txt.EndsWith(\"]\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"<\"\
    ) && !txt.EndsWith(\">\") && !txt.EndsWith(\"@\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"\
    +\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") &&\
    \ !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\"\
    )\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"`\"\
    ) && !", "        return txt.LastIndexOf(' ') == -1 && txt.LastIndexOf('-') ==\
    \ -1 && txt.LastIndexOf('.') == -1 && txt.LastIndexOf('_') == -1 && txt.LastIndexOf('*')\
    \ == -1 && txt.LastIndexOf('+') == -1 && txt.LastIndexOf('/') == -1 && txt.LastIndexOf('\\\
    \\') == -1 && txt.LastIndexOf('@') == -1 && txt.LastIndexOf('#') == -1 && txt.LastIndexOf('$')\
    \ == -1 && txt.LastIndexOf('%') == -1 && txt.LastIndexOf('^') == -1 && txt.LastIndexOf('&')\
    \ == -1 && txt.LastIndexOf('|') == -1 && txt.LastIndexOf('~') == -1 && txt.LastIndexOf('=')\
    \ == -1 && txt.LastIndexOf('<') == -1 && txt.LastIndexOf('>') == -1 && txt.LastIndexOf('!')\
    \ == -1 && txt.LastIndexOf('?') == -1 && txt.LastIndexOf('\"') == -1 && txt.LastIndexOf('\\\
    '') == -1 && txt.LastIndexOf('(') == -1 && txt.LastIndexOf(')') == -1 && txt.LastIndexOf('{')\
    \ == -1 && txt.LastIndexOf('}') == -1 && txt.LastIndexOf('[') == -1 && txt.LastIndexOf(']')\
    \ == -1 && txt.LastIndexOf(':') == -1 && txt.LastIndexOf(';') == -1 && txt.LastIndexOf('\\\
    n') == -1 && txt.LastIndexOf('\\r') == -1 && txt.LastIndexOf('\\t') == -1 && txt.LastIndexOf('\\\
    b') == -1 && txt.LastIndexOf('\\f') == -1 && txt.LastIndexOf('\\v') == -1;", " \
    \       return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    ?\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\";\") && !txt.EndsWith(\":\") &&\
    \ !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    (\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") &&\
    \ !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    &\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"*\") &&\
    \ !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"@\") && !txt.EndsWith(\"\
    #\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    ~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"\\\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"`\"\
    );", '        return !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1;', "   \
    \     return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\":\") &&\
    \ !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") &&\
    \ !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"\
    &\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") &&\
    \ !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"\
    *\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") &&\
    \ !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"\
    #\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"\
    $\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") &&\
    \ !txt.EndsWith(\"*\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"\
    %\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") &&\
    \ !", "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\
    \\\\\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\"\
    ) && !txt.EndsWith(\"]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") &&\
    \ !txt.EndsWith(\"*\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"\
    @\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") &&\
    \ !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"\\\"\"\
    ) && !txt.EndsWith(\"'\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\
    -\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"(\"\
    ) && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"\
    {\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") &&\
    \ !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"*\") && !",
  "        return txt.LastIndexOf(' ') == -1;", "        if (txt.Length == 0) return\
    \ false;\n        return txt[txt.Length - 1] >= 'a' && txt[txt.Length - 1] <=\
    \ 'z';", "        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf(\"\
    \ \") == -1 && txt.LastIndexOf(\".\") == -1 && txt.LastIndexOf(\"-\") == -1 &&\
    \ txt.LastIndexOf(\"_\") == -1 && txt.LastIndexOf(\"'\") == -1 && txt.LastIndexOf(\"\
    \\\"\") == -1 && txt.LastIndexOf(\"!\") == -1 && txt.LastIndexOf(\"?\") == -1\
    \ && txt.LastIndexOf(\";\") == -1 && txt.LastIndexOf(\"/\") == -1 && txt.LastIndexOf(\"\
    (\") == -1 && txt.LastIndexOf(\")\") == -1 && txt.LastIndexOf(\"[\") == -1 &&\
    \ txt.LastIndexOf(\"]\") == -1 && txt.LastIndexOf(\"{\") == -1 && txt.LastIndexOf(\"\
    }\") == -1 && txt.LastIndexOf(\"|\") == -1 && txt.LastIndexOf(\"&\") == -1 &&\
    \ txt.LastIndexOf(\"@\") == -1 && txt.LastIndexOf(\"#\") == -1 && txt.LastIndexOf(\"\
    $\") == -1 && txt.LastIndexOf(\"%\") == -1 && txt.LastIndexOf(\"^\") == -1 &&\
    \ txt.LastIndexOf(\"&\") == -1 && txt.LastIndexOf(\"*\") == -1 && txt.LastIndexOf(\"\
    +\") == -1 && txt.LastIndexOf(\"=\") == -1 && txt.LastIndexOf(\",\") == -1 &&\
    \ txt.LastIndexOf(\".\") == -1 && txt.LastIndexOf(\"<\") == -1 && txt.LastIndexOf(\"\
    >\") == -1 && txt.LastIndexOf(\"?\") == -1 && txt.LastIndexOf(\"\\\\\") == -1\
    \ && txt.LastIndexOf(\"|\") == -1 && txt.LastIndexOf(\"~\") == -1 && txt.LastIndexOf(\"\
    `\") == -1 && txt.LastIndexOf(\"\\\"\") == -1 && txt.LastIndexOf(\"'\") == -1;",
  "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\":\") &&\
    \ !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    (\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") &&\
    \ !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    &\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"*\") &&\
    \ !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"@\") && !txt.EndsWith(\"\
    #\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") &&\
    \ !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    ~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\"\
    ) && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\"\
    ) && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") &&\
    \ !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"'\") && !", '        return txt.LastIndexOf(" ") ==
    -1;', "        return txt.LastIndexOf(' ') == -1 && txt.LastIndexOf('-') == -1\
    \ && txt.LastIndexOf('.') == -1 && txt.LastIndexOf('_') == -1 && txt.LastIndexOf('*')\
    \ == -1 && txt.LastIndexOf('+') == -1 && txt.LastIndexOf('/') == -1 && txt.LastIndexOf('\\\
    \\') == -1 && txt.LastIndexOf('(') == -1 && txt.LastIndexOf(')') == -1 && txt.LastIndexOf('[')\
    \ == -1 && txt.LastIndexOf(']') == -1 && txt.LastIndexOf('{') == -1 && txt.LastIndexOf('}')\
    \ == -1 && txt.LastIndexOf('|') == -1 && txt.LastIndexOf(':') == -1 && txt.LastIndexOf(';')\
    \ == -1 && txt.LastIndexOf('!') == -1 && txt.LastIndexOf('@') == -1 && txt.LastIndexOf('#')\
    \ == -1 && txt.LastIndexOf('$') == -1 && txt.LastIndexOf('%') == -1 && txt.LastIndexOf('^')\
    \ == -1 && txt.LastIndexOf('&') == -1 && txt.LastIndexOf('*') == -1 && txt.LastIndexOf('(')\
    \ == -1 && txt.LastIndexOf(')') == -1 && txt.LastIndexOf('{') == -1 && txt.LastIndexOf('}')\
    \ == -1 && txt.LastIndexOf('|') == -1 && txt.LastIndexOf(':') == -1 && txt.LastIndexOf(';')\
    \ == -1 && txt.LastIndexOf('!') == -1 && txt.LastIndexOf('@') == -1 && txt.LastIndexOf('#')\
    \ == -1 && txt.LastIndexOf('$') == -1 && txt.LastIndexOf('%') == -1 && txt.LastIndexOf('^')\
    \ == -1 && txt.LastIndexOf('&') == -1 && txt.", "        if (txt.Length == 0)\n\
    \            return false;\n        return !txt.Substring(txt.Length - 1, 1).Contains(\"\
    \ \");", "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"\
    /\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\"\
    ) && !txt.EndsWith(\"*\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"\
    @\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") &&\
    \ !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"\
    (\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") &&\
    \ !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\"\
    >\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"`\"\
    ) && !txt.EndsWith(\"~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"\\\\\");",
  "        return txt.LastIndexOf(' ') == -1 || txt.LastIndexOf(' ') == txt.Length\
    \ - 1;", "        // your code goes here\n        return txt.LastIndexOf(' ')\
    \ == -1;", "        // your code goes here\n        return txt.LastIndexOf(' ')\
    \ == -1;", "        if (txt.Length == 0) {\n            return false;\n      \
    \  }\n        return txt[txt.Length - 1].IsLetter() && !txt.Contains(\" \");",
  "        return txt.LastIndexOf(' ') == -1;", "        return !txt.EndsWith(\" \"\
    ) && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\"\
    ;\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") &&\
    \ !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"\
    @\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") &&\
    \ !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"\
    (\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") &&\
    \ !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    +\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"\
    ~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\" \");", "        return !txt.EndsWith(\"\
    \ \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\")\
    \ && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\"\
    ) && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\
    \") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\"\
    ) && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") &&\
    \ !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"\
    `\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\"\
    ) && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") &&\
    \ !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\"\
    ) && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !", "        return txt.LastIndexOf(' ') == -1;", "        if (txt.Length\
    \ == 0) return false;\n        return txt[txt.Length - 1].IsLetter() && !txt.Contains(\"\
    \ \");", "        // your code goes here\n        return txt.LastIndexOf(' ')\
    \ == -1;", "        // your code goes here\n        return txt.LastIndexOf(' ')\
    \ == -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a digit and false otherwise.\n    // Note: \"digit\"\
    \ is a character that is a digit.\n    // Examples:\n    // >>> CheckIfLastCharIsADigit((\"\
    apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"apple 9\"))\n\
    \    // (true)\n    // >>> CheckIfLastCharIsADigit((\"apple 9 \"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsADigit((\"\"))\n    // (false)\n    public static\
    \ bool CheckIfLastCharIsADigit(string txt) {\n        // your code goes here\n\
    \        return txt.LastIndexOf(' ') == -1;\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a special\
    \ character and false otherwise.\n    // Note: \"special character\" is a character\
    \ that is not a digit\n    // and is not an alphabetical character.\n    // Examples:\n\
    \    // >>> CheckIfLastCharIsASpecialChar((\"apple\"))\n    // (false)\n    //\
    \ >>> CheckIfLastCharIsASpecialChar((\"apple 9\"))\n    // (false)\n    // >>>\
    \ CheckIfLastCharIsASpecialChar((\"apple 9 \"))\n    // (true)\n    // >>> CheckIfLastCharIsASpecialChar((\"\
    \"))\n    // (false)\n    public static bool CheckIfLastCharIsASpecialChar(string\
    \ txt) {\n        // your code goes here\n        return txt.LastIndexOf(' ')\
    \ == -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a whitespace character and false otherwise.\n   \
    \ // Note: \"whitespace character\" is a character that is a space,\n    // a\
    \ tab, or a newline character.\n    // Examples:\n    // >>> CheckIfLastCharIsAWhitespaceChar((\"\
    apple\"))\n    // (false)\n    // >>> CheckIfLastCharIsAWhitespaceChar", "   \
    \     return !txt.EndsWith(\" \") && txt.LastIndexOf(\" \") == -1 &&\n       \
    \     txt.LastIndexOf(\".\") == -1 && txt.LastIndexOf(\"!\") == -1 &&\n      \
    \      txt.LastIndexOf(\"?\") == -1 && txt.LastIndexOf(\"-\") == -1 &&\n     \
    \       txt.LastIndexOf(\"_\") == -1 && txt.LastIndexOf(\"@\") == -1 &&\n    \
    \        txt.LastIndexOf(\"#\") == -1 && txt.LastIndexOf(\"$\") == -1 &&\n   \
    \         txt.LastIndexOf(\"%\") == -1 && txt.LastIndexOf(\"^\") == -1 &&\n  \
    \          txt.LastIndexOf(\"&\") == -1 && txt.LastIndexOf(\"*\") == -1 &&\n \
    \           txt.LastIndexOf(\"(\") == -1 && txt.LastIndexOf(\")\") == -1 &&\n\
    \            txt.LastIndexOf(\"[\") == -1 && txt.LastIndexOf(\"]\") == -1 &&\n\
    \            txt.LastIndexOf(\"{\") == -1 && txt.LastIndexOf(\"}\") == -1 &&\n\
    \            txt.LastIndexOf(\"|\") == -1 && txt.LastIndexOf(\"\\\\\") == -1 &&\n\
    \            txt.LastIndexOf(\"/\") == -1 && txt.LastIndexOf(\":\") == -1 &&\n\
    \            txt.LastIndexOf(\";\") == -1 && txt.LastIndexOf(\"'\") == -1 &&\n\
    \            txt.LastIndexOf(\"\\\"\") == -1 && txt.LastIndexOf(\"<\") == -1 &&\n\
    \            txt.LastIndexOf(\">\") == -1 && txt.LastIndexOf(\".\") == -1 &&\n\
    \            txt.LastIndexOf(\",\") == -1 && txt.LastIndexOf(\".\") == -1 &&\n\
    \            txt.LastIndexOf(\".\") == -1 && txt.LastIndexOf(\".\") == -1 &&\n\
    \            txt.LastIndexOf(\".\") == -1 && txt.LastIndexOf(\".\") == -1 &&\n\
    \            txt.LastIndexOf(\".\") == -1 && txt.LastIndexOf(\".\") == -1 &&\n\
    \            txt.LastIndexOf(\".\") ==", "        // your code goes here\n   \
    \     return txt.LastIndexOf(\" \") == -1;\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a digit\
    \ and false otherwise.\n    // Note: \"digit\" is a character that is a digit.\n\
    \    // Examples:\n    // >>> CheckIfLastCharIsADigit((\"apple\"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsADigit((\"apple 9\"))\n    // (true)\n    // >>>\
    \ CheckIfLastCharIsADigit((\"apple 9 \"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\
    \"))\n    // (false)\n    public static bool CheckIfLastCharIsADigit(string txt)\
    \ {\n        // your code goes here\n        return txt.LastIndexOf(\" \") ==\
    \ -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a lowercase character and false otherwise.\n    //\
    \ Note: \"lowercase\" is a character that is a lowercase character.\n    // Examples:\n\
    \    // >>> CheckIfLastCharIsALowercase((\"apple\"))\n    // (false)\n    // >>>\
    \ CheckIfLastCharIsALowercase((\"apple 9\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"\
    apple 9 \"))\n    // (true)\n    // >>> CheckIfLastCharIsALowercase((\"\"))\n\
    \    // (false)\n    public static bool CheckIfLastCharIsALowercase(string txt)\
    \ {\n        // your code goes here\n        return txt.LastIndexOf(\" \") ==\
    \ -1;\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a uppercase character and false otherwise.\n    //\
    \ Note: \"uppercase\" is a character that is a uppercase character.\n    // Examples:\n\
    \    // >>> CheckIfLastCharIsAUppercase((\"apple\"))\n    // (true)\n    // >>>\
    \ CheckIfLastCharIsAUppercase((\"apple 9\"))\n    // (false)\n    // >>> CheckIfLastCharIsAUppercase((\"\
    apple", "        return txt.LastIndexOf(' ') == -1;", "        return !txt.EndsWith(\"\
    \ \") && txt.LastIndexOf(\" \") == -1 &&\n            txt.LastIndexOf(\".\") ==\
    \ -1 && txt.LastIndexOf(\"!\") == -1 &&\n            txt.LastIndexOf(\"?\") ==\
    \ -1 && txt.LastIndexOf(\"-\") == -1 &&\n            txt.LastIndexOf(\"_\") ==\
    \ -1 && txt.LastIndexOf(\"+\") == -1 &&\n            txt.LastIndexOf(\"/\") ==\
    \ -1 && txt.LastIndexOf(\"@\") == -1 &&\n            txt.LastIndexOf(\"#\") ==\
    \ -1 && txt.LastIndexOf(\"$\") == -1 &&\n            txt.LastIndexOf(\"%\") ==\
    \ -1 && txt.LastIndexOf(\"^\") == -1 &&\n            txt.LastIndexOf(\"&\") ==\
    \ -1 && txt.LastIndexOf(\"*\") == -1 &&\n            txt.LastIndexOf(\"(\") ==\
    \ -1 && txt.LastIndexOf(\")\") == -1 &&\n            txt.LastIndexOf(\"[\") ==\
    \ -1 && txt.LastIndexOf(\"]\") == -1 &&\n            txt.LastIndexOf(\"{\") ==\
    \ -1 && txt.LastIndexOf(\"}\") == -1 &&\n            txt.LastIndexOf(\"|\") ==\
    \ -1 && txt.LastIndexOf(\":\") == -1 &&\n            txt.LastIndexOf(\";\") ==\
    \ -1 && txt.LastIndexOf(\"'\") == -1 &&\n            txt.LastIndexOf(\"\\\"\"\
    ) == -1 && txt.LastIndexOf(\"<\") == -1 &&\n            txt.LastIndexOf(\">\"\
    ) == -1 && txt.LastIndexOf(\".\") == -1 &&\n            txt.LastIndexOf(\",\"\
    ) == -1 && txt.LastIndexOf(\".\") == -1 &&\n            txt.LastIndexOf(\".\"\
    ) == -1 && txt.LastIndexOf(\".\") == -1 &&\n            txt.LastIndexOf(\".\"\
    ) == -1 && txt.LastIndexOf(\".\") == -1 &&\n            txt.LastIndexOf(\".\"\
    ) == -1 && txt.LastIndexOf(\".\") == -1 &&\n            txt.LastIndexOf(\".\"\
    ) ==", "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"\
    /\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\"\
    ) && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"\
    }\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") &&\
    \ !txt.EndsWith(\">\") && !txt.EndsWith(\"@\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"\
    $\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") &&\
    \ !txt.EndsWith(\"*\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"\
    ~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"~\");", '        return !txt.EndsWith("
    ") && txt.LastIndexOf(" ") == -1;', "        // your code goes here\n        return\
    \ txt.LastIndexOf(\" \") == -1;", "        return txt.LastIndexOf(' ') == -1;",
  "        // your code goes here\n        return txt.LastIndexOf(' ') == -1;", " \
    \       // your code goes here\n        return txt.LastIndexOf(' ') == -1;", " \
    \       // your code goes here\n        return txt.LastIndexOf(\" \") == -1;",
  "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"'\"\
    ) && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\
    (\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"{\") &&\
    \ !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\":\") && !txt.EndsWith(\";\") && !txt.EndsWith(\".\") &&\
    \ !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\";\") &&\
    \ !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"\
    {\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"'\") &&\
    \ !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") &&\
    \ !txt.EndsWith(\"|\") && !txt.EndsWith(\":\") && !txt.EndsWith(\";\") && !txt.EndsWith(\"\
    .\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\"\\\"\"\
    ) && !txt.EndsWith(\"'\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"\
    ;\") && !txt.", "        return txt.LastIndexOf(' ') == -1;", '        return
    txt.LastIndexOf(" ") == -1;', "        // your code goes here\n        if (txt.Length\
    \ == 0)\n            return false;\n        else\n            return txt[txt.Length\
    \ - 1].IsLetter() && !txt.Contains(\" \");\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a digit\
    \ and false otherwise.\n    // Note: \"digit\" is a group of characters separated\
    \ by space.\n    // Examples:\n    // >>> CheckIfLastCharIsADigit((\"apple pie\"\
    ))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"apple pi e\"))\n   \
    \ // (true)\n    // >>> CheckIfLastCharIsADigit((\"apple pi e \"))\n    // (false)\n\
    \    // >>> CheckIfLastCharIsADigit((\"\"))\n    // (false)\n    public static\
    \ bool CheckIfLastCharIsADigit(string txt) {\n        // your code goes here\n\
    \        if (txt.Length == 0)\n            return false;\n        else\n     \
    \       return txt[txt.Length - 1].IsDigit();\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a special\
    \ character and false otherwise.\n    // Note: \"special character\" is a group\
    \ of characters separated by space.\n    // Examples:\n    // >>> CheckIfLastCharIsASpecialChar((\"\
    apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsASpecialChar((\"apple\
    \ pi e\"))\n    // (true)\n    // >>> CheckIfLastCharIsASpecialChar((\"apple pi\
    \ e \"))\n    // (false)\n    // >>> CheckIfLastCharIsASpecialChar((\"\"))\n \
    \   // (false)\n    public static bool CheckIfLastCharIsASpecialChar(string txt)\
    \ {\n        // your code goes here\n        if (txt.Length == 0)\n          \
    \  return false;\n        else\n            return txt[txt.Length - 1].IsLetterOrDigit();\n\
    \    }\n\n    // Create a function that returns true if the last character\n \
    \   // of a given string is a whitespace character and false otherwise.\n    //\
    \ Note: \"whitespace character\" is a", "        // your code goes here\n    \
    \    return txt.LastIndexOf(\" \") == -1;", "        // your code goes here\n\
    \        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf('\
    \ ') == -1 || txt.LastIndexOf(' ') == txt.Length - 1;", "        return txt.LastIndexOf('\
    \ ') == -1;", "        // your code goes here\n        return txt.LastIndexOf('\
    \ ') == -1;", "        // your code goes here\n        return txt.LastIndexOf('\
    \ ') == -1;", "        return txt.LastIndexOf(' ') == -1;", "        if (txt.Length\
    \ == 0) return false;\n        return !txt.Substring(txt.Length - 1, 1).Contains(\"\
    \ \");", "        return txt.LastIndexOf(' ') == -1;", '        return txt.LastIndexOf("
    ") == -1;', "        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf(\"\
    \ \") == -1 && txt.LastIndexOf(\"-\") == -1 && txt.LastIndexOf(\".\") == -1 &&\
    \ txt.LastIndexOf(\"_\") == -1 && txt.LastIndexOf(\"'\") == -1 && txt.LastIndexOf(\"\
    \\\"\") == -1 && txt.LastIndexOf(\"!\") == -1 && txt.LastIndexOf(\"?\") == -1\
    \ && txt.LastIndexOf(\"/\") == -1 && txt.LastIndexOf(\"\\\\\") == -1 && txt.LastIndexOf(\"\
    (\") == -1 && txt.LastIndexOf(\")\") == -1 && txt.LastIndexOf(\"[\") == -1 &&\
    \ txt.LastIndexOf(\"]\") == -1 && txt.LastIndexOf(\"{\") == -1 && txt.LastIndexOf(\"\
    }\") == -1 && txt.LastIndexOf(\"|\") == -1 && txt.LastIndexOf(\";\") == -1 &&\
    \ txt.LastIndexOf(\":\") == -1 && txt.LastIndexOf(\",\") == -1 && txt.LastIndexOf(\"\
    .\") == -1 && txt.LastIndexOf(\"@\") == -1 && txt.LastIndexOf(\"$\") == -1 &&\
    \ txt.LastIndexOf(\"%\") == -1 && txt.LastIndexOf(\"&\") == -1 && txt.LastIndexOf(\"\
    #\") == -1 && txt.LastIndexOf(\"~\") == -1 && txt.LastIndexOf(\"`\") == -1 &&\
    \ txt.LastIndexOf(\"^\") == -1 && txt.LastIndexOf(\"*\") == -1 && txt.LastIndexOf(\"\
    +\") == -1 && txt.LastIndexOf(\"=\") == -1 && txt.LastIndexOf(\"-\") == -1 &&\
    \ txt.LastIndexOf(\"<\") == -1 && txt.LastIndexOf(\">\") == -1 && txt.LastIndexOf(\"\
    .\") == -1 && txt.LastIndexOf(\" \") == -1;", "        // your code goes here\n\
    \        return txt.LastIndexOf(' ') == -1;\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a digit\
    \ and false otherwise.\n    // Note: \"digit\" is a character that is either a\
    \ number or a letter.\n    // Examples:\n    // >>> CheckIfLastCharIsADigit((\"\
    apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"apple 2\"\
    ))\n    // (true)\n    // >>> CheckIfLastCharIsADigit((\"apple 2 \"))\n    //\
    \ (false)\n    // >>> CheckIfLastCharIsADigit((\"\"))\n    // (false)\n    public\
    \ static bool CheckIfLastCharIsADigit(string txt) {\n        // your code goes\
    \ here\n        return txt.LastIndexOf(' ') == -1;\n    }\n\n    // Create a function\
    \ that returns true if the last character\n    // of a given string is a lowercase\
    \ character and false otherwise.\n    // Note: \"lowercase\" is a character that\
    \ is either a lowercase letter\n    // or a digit.\n    // Examples:\n    // >>>\
    \ CheckIfLastCharIsALowercase((\"apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"\
    apple 2\"))\n    // (false)\n    // >>> CheckIfLastCharIsALowercase((\"apple 2\
    \ \"))\n    // (true)\n    // >>> CheckIfLastCharIsALowercase((\"\"))\n    //\
    \ (false)\n    public static bool CheckIfLastCharIsALowercase(string txt) {\n\
    \        // your code goes here\n        return txt.LastIndexOf(' ') == -1;\n\
    \    }\n\n    // Create a function that returns true if the last character\n \
    \   // of a given string is an uppercase character and false otherwise.\n    //\
    \ Note: \"uppercase\" is a character that is either an uppercase letter\n    //\
    \ or a digit.\n    // Examples:\n    // >>> CheckIfLastCharIsAnUppercase((\"apple\
    \ pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsAnUppercase((\"apple",
  "        return !txt.EndsWith(\" \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"\
    !\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") && !txt.EndsWith(\":\") &&\
    \ !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"(\") &&\
    \ !txt.EndsWith(\")\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"\
    [\") && !txt.EndsWith(\"]\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") &&\
    \ !txt.EndsWith(\"@\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"\
    %\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") &&\
    \ !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"~\") && !txt.EndsWith(\"\
    `\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\\\"\
    \") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\"\
    ) && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"&\") &&\
    \ !txt.EndsWith(\"*\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"\
    {\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") &&\
    \ !txt.EndsWith(\"<\") && !", "        return txt.LastIndexOf(' ') == -1;", '        return
    !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1;', "        return txt.LastIndexOf('\
    \ ') == -1;", '        return txt.LastIndexOf(" ") == -1;', '        return txt.LastIndexOf("
    ") == -1;', "        return txt.LastIndexOf(' ') == -1 &&\n            txt.LastIndexOf('-')\
    \ == -1 &&\n            txt.LastIndexOf('.') == -1 &&\n            txt.LastIndexOf('_')\
    \ == -1 &&\n            txt.LastIndexOf('(') == -1 &&\n            txt.LastIndexOf(')')\
    \ == -1 &&\n            txt.LastIndexOf('!') == -1 &&\n            txt.LastIndexOf('@')\
    \ == -1 &&\n            txt.LastIndexOf('#') == -1 &&\n            txt.LastIndexOf('$')\
    \ == -1 &&\n            txt.LastIndexOf('%') == -1 &&\n            txt.LastIndexOf('^')\
    \ == -1 &&\n            txt.LastIndexOf('&') == -1 &&\n            txt.LastIndexOf('*')\
    \ == -1 &&\n            txt.LastIndexOf('(') == -1 &&\n            txt.LastIndexOf(')')\
    \ == -1 &&\n            txt.LastIndexOf('[') == -1 &&\n            txt.LastIndexOf(']')\
    \ == -1 &&\n            txt.LastIndexOf('{') == -1 &&\n            txt.LastIndexOf('}')\
    \ == -1 &&\n            txt.LastIndexOf('|') == -1 &&\n            txt.LastIndexOf(':')\
    \ == -1 &&\n            txt.LastIndexOf(';') == -1 &&\n            txt.LastIndexOf('\"\
    ') == -1 &&\n            txt.LastIndexOf('\\'') == -1 &&\n            txt.LastIndexOf('/')\
    \ == -1 &&\n            txt.LastIndexOf('\\\\') == -1 &&\n            txt.LastIndexOf('<')\
    \ == -1 &&\n            txt.LastIndexOf('>') == -1 &&\n            txt.LastIndexOf('?')\
    \ == -1 &&\n            txt.LastIndexOf('~') == -1 &&\n            txt.LastIndexOf('-')\
    \ == -1 &&\n            txt.LastIndexOf('+') == -1 &&\n            txt.LastIndexOf('=')\
    \ == -1 &&\n            txt.LastIndexOf('{') == -1 &&\n            txt.LastIndexOf('}')\
    \ == -1 &&\n            txt.LastIndex", "        return txt.LastIndexOf(' ') ==\
    \ -1;", "        // your code goes here\n        return txt.LastIndexOf(' ') ==\
    \ -1;", "        if (txt.Length == 0)\n            return false;\n        else\
    \ {\n            return txt[txt.Length - 1].IsLetter() && !txt.Contains(\" \"\
    );\n        }", "        return txt.LastIndexOf(' ') == -1;", "        // your\
    \ code goes here\n        return txt.LastIndexOf(' ') == -1;", "        return\
    \ txt.LastIndexOf(' ') == -1 &&\n            txt.LastIndexOf('-') == -1 &&\n \
    \           txt.LastIndexOf('_') == -1 &&\n            txt.LastIndexOf('.') ==\
    \ -1 &&\n            txt.LastIndexOf('!') == -1 &&\n            txt.LastIndexOf('?')\
    \ == -1 &&\n            txt.LastIndexOf('@') == -1 &&\n            txt.LastIndexOf('#')\
    \ == -1 &&\n            txt.LastIndexOf('$') == -1 &&\n            txt.LastIndexOf('%')\
    \ == -1 &&\n            txt.LastIndexOf('^') == -1 &&\n            txt.LastIndexOf('&')\
    \ == -1 &&\n            txt.LastIndexOf('*') == -1 &&\n            txt.LastIndexOf('(')\
    \ == -1 &&\n            txt.LastIndexOf(')') == -1 &&\n            txt.LastIndexOf('{')\
    \ == -1 &&\n            txt.LastIndexOf('}') == -1 &&\n            txt.LastIndexOf('[')\
    \ == -1 &&\n            txt.LastIndexOf(']') == -1 &&\n            txt.LastIndexOf('+')\
    \ == -1 &&\n            txt.LastIndexOf('=') == -1 &&\n            txt.LastIndexOf(',')\
    \ == -1 &&\n            txt.LastIndexOf(';') == -1 &&\n            txt.LastIndexOf(':')\
    \ == -1 &&\n            txt.LastIndexOf('\"') == -1 &&\n            txt.LastIndexOf('\\\
    '') == -1 &&\n            txt.LastIndexOf('<') == -1 &&\n            txt.LastIndexOf('>')\
    \ == -1 &&\n            txt.LastIndexOf('/') == -1 &&\n            txt.LastIndexOf('\\\
    \\') == -1 &&\n            txt.LastIndexOf('|') == -1 &&\n            txt.LastIndexOf('\
    \ ') == -1;", '        return !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1;',
  '        return txt.LastIndexOf(" ") == -1;', "        return !txt.EndsWith(\" \"\
    ) && !txt.EndsWith(\".\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"\
    ;\") && !txt.EndsWith(\":\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") &&\
    \ !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\
    \\\\\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\"\
    ) && !txt.EndsWith(\"]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") &&\
    \ !txt.EndsWith(\"*\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"\
    @\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") &&\
    \ !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"~\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"\\\"\"\
    ) && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\") &&\
    \ !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\
    \") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") &&\
    \ !txt.EndsWith(\"]\") && !txt.EndsWith(\"{\") && !", '        return !txt.EndsWith("
    ") && txt.LastIndexOf(" ") == -1;', "        if (txt.Length == 0) return false;\n\
    \        return !txt.Substring(txt.Length - 1, 1).Contains(\" \");", "       \
    \ return txt.LastIndexOf(' ') == -1 && txt.LastIndexOf('-') == -1 && txt.LastIndexOf('.')\
    \ == -1 && txt.LastIndexOf('_') == -1 && txt.LastIndexOf('!') == -1 && txt.LastIndexOf('?')\
    \ == -1 && txt.LastIndexOf('/') == -1 && txt.LastIndexOf('\\\\') == -1 && txt.LastIndexOf('\\\
    '') == -1 && txt.LastIndexOf('\"') == -1 && txt.LastIndexOf('(') == -1 && txt.LastIndexOf(')')\
    \ == -1 && txt.LastIndexOf('{') == -1 && txt.LastIndexOf('}') == -1 && txt.LastIndexOf('[')\
    \ == -1 && txt.LastIndexOf(']') == -1 && txt.LastIndexOf('|') == -1 && txt.LastIndexOf('&')\
    \ == -1 && txt.LastIndexOf(':') == -1 && txt.LastIndexOf(';') == -1 && txt.LastIndexOf('@')\
    \ == -1 && txt.LastIndexOf('#') == -1 && txt.LastIndexOf('$') == -1 && txt.LastIndexOf('%')\
    \ == -1 && txt.LastIndexOf('^') == -1 && txt.LastIndexOf('*') == -1 && txt.LastIndexOf('+')\
    \ == -1 && txt.LastIndexOf('=') == -1 && txt.LastIndexOf('<') == -1 && txt.LastIndexOf('>')\
    \ == -1 && txt.LastIndexOf('~') == -1 && txt.LastIndexOf('`') == -1 && txt.LastIndexOf('\\\
    \\') == -1 && txt.LastIndexOf('|') == -1 && txt.LastIndexOf('&') == -1 && txt.LastIndexOf(';')\
    \ == -1 && txt.LastIndexOf('@') == -1 && txt.LastIndexOf('#') == -1 && txt.LastIndexOf('$')\
    \ == -1 && txt", "        if (txt.Length == 0) return false;\n        return txt[txt.Length\
    \ - 1] >= 'a' && txt[txt.Length - 1] <= 'z';", "        if (txt.Length == 0) {\n\
    \            return false;\n        }\n        return !txt.Substring(txt.Length\
    \ - 1, 1).Contains(\" \");\n    }\n\n    // Create a function that returns true\
    \ if a given string\n    // contains at least one palindrome and false otherwise.\n\
    \    // A palindrome is a word or a phrase that is the same\n    // forward and\
    \ backward.\n    // Examples:\n    // >>> CheckIfStringContainsAPalindrome(\"\
    A man, a plan, a canal: Panama\")\n    // (true)\n    // >>> CheckIfStringContainsAPalindrome(\"\
    race a car\")\n    // (false)\n    // >>> CheckIfStringContainsAPalindrome(\"\"\
    )\n    // (false)\n    public static bool CheckIfStringContainsAPalindrome(string\
    \ txt) {\n        if (txt.Length == 0) {\n            return false;\n        }\n\
    \        for (int i = 0; i < txt.Length / 2; i++) {\n            if (txt[i] !=\
    \ txt[txt.Length - i - 1]) {\n                return false;\n            }\n \
    \       }\n        return true;\n    }\n\n    // Create a function that returns\
    \ true if a given string\n    // contains at least one word that is also a substring\n\
    \    // of another word and false otherwise.\n    // Examples:\n    // >>> CheckIfStringContainsAWord(\"\
    A man, a plan, a canal: Panama\")\n    // (true)\n    // >>> CheckIfStringContainsAWord(\"\
    A man, a plan, a canal\")\n    // (false)\n    // >>> CheckIfStringContainsAWord(\"\
    \")\n    // (false)\n    public static bool CheckIfStringContainsAWord(string\
    \ txt) {\n        if (txt.Length == 0) {\n            return false;\n        }\n\
    \        for (int i = 0; i < txt.Length; i++) {\n            if (txt[i] == ' ')\
    \ {\n                continue;\n            }\n            for (int j = i + 1;\
    \ j < txt.Length; j++) {\n                if (txt[i] == txt[j]) {\n          \
    \          return true;\n                }", "        return !txt.EndsWith(\"\
    \ \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\")\
    \ && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    (\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") &&\
    \ !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    ;\") && !txt.EndsWith(\":\") && !txt.EndsWith(\"@\") && !txt.EndsWith(\"#\") &&\
    \ !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") && !txt.EndsWith(\"^\") && !txt.EndsWith(\"\
    &\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") &&\
    \ !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\".\");", "  \
    \      // your code goes here\n        return txt.LastIndexOf(\" \") == -1;",
  "        return !txt.EndsWith(\" \") && txt.LastIndexOf(\" \") == -1 && !txt.Contains(\"\
    \ \");\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a digit and false otherwise.\n    // Note: \"digit\"\
    \ is a group of characters separated by space.\n    // Examples:\n    // >>> CheckIfLastCharIsADigit((\"\
    apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsADigit((\"apple pi\
    \ e\"))\n    // (true)\n    // >>> CheckIfLastCharIsADigit((\"apple pi e \"))\n\
    \    // (false)\n    // >>> CheckIfLastCharIsADigit((\"\"))\n    // (false)\n\
    \    public static bool CheckIfLastCharIsADigit(string txt) {\n        return\
    \ !txt.EndsWith(\" \") && txt.LastIndexOf(\" \") == -1 && txt.Contains(\" \");\n\
    \    }\n\n    // Create a function that returns true if the last character\n \
    \   // of a given string is a special character and false otherwise.\n    // Note:\
    \ \"special\" is a group of characters separated by space.\n    // Examples:\n\
    \    // >>> CheckIfLastCharIsASpecial((\"apple pie\"))\n    // (false)\n    //\
    \ >>> CheckIfLastCharIsASpecial((\"apple pi e\"))\n    // (true)\n    // >>> CheckIfLastCharIsASpecial((\"\
    apple pi e \"))\n    // (false)\n    // >>> CheckIfLastCharIsASpecial((\"\"))\n\
    \    // (false)\n    public static bool CheckIfLastCharIsASpecial(string txt)\
    \ {\n        return !txt.EndsWith(\" \") && txt.LastIndexOf(\" \") == -1 && !txt.Contains(\"\
    \ \");\n    }\n\n    // Create a function that returns true if the last character\n\
    \    // of a given string is a lowercase character and false otherwise.\n    //\
    \ Note: \"lower\" is a group of characters separated by space.\n    // Examples:\n\
    \    // >>> CheckIfLastCharIsALower((\"apple pie\"))\n    // (false)\n    // >>>\
    \ CheckIf", "        // your code goes here\n        return txt.LastIndexOf(\"\
    \ \") == -1;", '        return !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1;',
  "        return txt.LastIndexOf(' ') == -1;", '        return !txt.EndsWith(" ")
    && !txt.EndsWith(".") && !txt.EndsWith("!") && !txt.EndsWith("?") && !txt.EndsWith("-")
    && !txt.EndsWith("_");', "        return !txt.EndsWith(\" \") && !txt.EndsWith(\"\
    .\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\";\") &&\
    \ !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"\
    (\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") &&\
    \ !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"|\") && !txt.EndsWith(\"\
    :\") && !txt.EndsWith(\";\") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") &&\
    \ !txt.EndsWith(\"?\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"\
    '\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\\\\\
    \") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") && !txt.EndsWith(\"[\") &&\
    \ !txt.EndsWith(\"]\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\":\") && !txt.EndsWith(\";\") && !txt.EndsWith(\".\") &&\
    \ !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\") && !txt.EndsWith(\"-\") && !txt.EndsWith(\"\
    _\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") && !txt.EndsWith(\"/\"\
    ) && !txt.EndsWith(\"\\\\\") && !txt.EndsWith(\"(\") && !txt.EndsWith(\")\") &&\
    \ !txt.EndsWith(\"[\") && !txt.EndsWith(\"]\") && !txt.", "        // your code\
    \ goes here\n        return txt.LastIndexOf(\" \") == -1;", "        return txt.LastIndexOf('\
    \ ') == -1;", '        return !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1;',
  '        return !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1 && !txt.Contains("
    ");', "        // your code goes here\n        return txt.LastIndexOf(\" \") ==\
    \ -1;\n    }\n\n    // Create a function that returns true if the given string\n\
    \    // contains at least one palindrome and false otherwise.\n    // A palindrome\
    \ is a word or a phrase that is the same forwards\n    // and backwards.\n   \
    \ // Examples:\n    // >>> CheckIfStringContainsAPalindrome(\"A man, a plan, a\
    \ canal: Panama\")\n    // (true)\n    // >>> CheckIfStringContainsAPalindrome(\"\
    race a car\")\n    // (false)\n    // >>> CheckIfStringContainsAPalindrome(\"\"\
    )\n    // (false)\n    public static bool CheckIfStringContainsAPalindrome(string\
    \ txt) {\n        // your code goes here\n        return txt.Contains(txt.Reverse());\n\
    \    }\n\n    // Create a function that returns true if the given string\n   \
    \ // contains at least one non-palindrome and false otherwise.\n    // A non-palindrome\
    \ is a word or a phrase that is the same forwards\n    // but not backwards.\n\
    \    // Examples:\n    // >>> CheckIfStringContainsANonPalindrome(\"A man, a plan,\
    \ a canal: Panama\")\n    // (true)\n    // >>> CheckIfStringContainsANonPalindrome(\"\
    race a car\")\n    // (true)\n    // >>> CheckIfStringContainsANonPalindrome(\"\
    \")\n    // (false)\n    public static bool CheckIfStringContainsANonPalindrome(string\
    \ txt) {\n        // your code goes here\n        return txt.Contains(txt.ToLower());\n\
    \    }\n\n    // Create a function that returns true if the given string\n   \
    \ // contains at least one word that contains at least one vowel\n    // and false\
    \ otherwise.\n    // Examples:\n    // >>> CheckIfStringContainsAWordWithAVowel(\"\
    A man, a plan, a canal: Panama\")\n    // (true)\n    // >>> CheckIfStringContainsAWordWithAVowel(\"\
    race a car\")\n    // (false)\n    // >>> CheckIfStringContainsAWordWithAVowel(\"\
    \")\n    // (false)\n    public static", "        if (txt.Length == 0) return\
    \ false;\n        return !txt.Substring(txt.Length - 1, 1).Contains(\" \");",
  '        return !txt.EndsWith(" ") && txt.LastIndexOf(" ") == -1;', '        return
    txt.LastIndexOf(" ") == -1;', "        // your code goes here\n        return\
    \ txt.LastIndexOf(' ') == -1;", "        if (txt.Length == 0) return false;\n\
    \        return !txt.Substring(txt.Length - 1, 1).Contains(\" \");", '        return
    !txt.EndsWith(" ") && !txt.Contains(" ");', "        return txt.LastIndexOf('\
    \ ') == -1 && txt.LastIndexOf('-') == -1 && txt.LastIndexOf('.') == -1 && txt.LastIndexOf('_')\
    \ == -1 && txt.LastIndexOf('+') == -1 && txt.LastIndexOf('*') == -1 && txt.LastIndexOf('/')\
    \ == -1 && txt.LastIndexOf('(') == -1 && txt.LastIndexOf(')') == -1 && txt.LastIndexOf('[')\
    \ == -1 && txt.LastIndexOf(']') == -1 && txt.LastIndexOf('{') == -1 && txt.LastIndexOf('}')\
    \ == -1 && txt.LastIndexOf('\"') == -1 && txt.LastIndexOf('\\'') == -1 && txt.LastIndexOf('|')\
    \ == -1 && txt.LastIndexOf(':') == -1 && txt.LastIndexOf(';') == -1 && txt.LastIndexOf('!')\
    \ == -1 && txt.LastIndexOf('?') == -1 && txt.LastIndexOf('@') == -1 && txt.LastIndexOf('$')\
    \ == -1 && txt.LastIndexOf('%') == -1 && txt.LastIndexOf('^') == -1 && txt.LastIndexOf('&')\
    \ == -1 && txt.LastIndexOf('=') == -1 && txt.LastIndexOf('<') == -1 && txt.LastIndexOf('>')\
    \ == -1 && txt.LastIndexOf('~') == -1 && txt.LastIndexOf('\\\\') == -1 && txt.LastIndexOf('\\\
    n') == -1 && txt.LastIndexOf('\\r') == -1 && txt.LastIndexOf('\\t') == -1 && txt.LastIndexOf('\\\
    b') == -1 && txt.LastIndexOf('\\f') == -1;", "        return !txt.EndsWith(\"\
    \ \") && !txt.EndsWith(\".\") && !txt.EndsWith(\"!\") && !txt.EndsWith(\"?\")\
    \ && !txt.EndsWith(\";\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"\\\"\") &&\
    \ !txt.EndsWith(\"-\") && !txt.EndsWith(\"_\") && !txt.EndsWith(\"/\") && !txt.EndsWith(\"\
    \\\\\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"(\"\
    ) && !txt.EndsWith(\")\") && !txt.EndsWith(\"+\") && !txt.EndsWith(\"=\") && !txt.EndsWith(\"\
    @\") && !txt.EndsWith(\"#\") && !txt.EndsWith(\"$\") && !txt.EndsWith(\"%\") &&\
    \ !txt.EndsWith(\"^\") && !txt.EndsWith(\"&\") && !txt.EndsWith(\"*\") && !txt.EndsWith(\"\
    |\") && !txt.EndsWith(\"{\") && !txt.EndsWith(\"}\") && !txt.EndsWith(\"[\") &&\
    \ !txt.EndsWith(\"]\") && !txt.EndsWith(\"<\") && !txt.EndsWith(\">\") && !txt.EndsWith(\"\
    \\\"\") && !txt.EndsWith(\"'\") && !txt.EndsWith(\"`\") && !txt.EndsWith(\"~\"\
    ) && !txt.EndsWith(\"`\");", "        return txt.LastIndexOf(' ') == -1;", " \
    \       return txt.LastIndexOf(' ') == -1;", "        // your code goes here\n\
    \        return txt.LastIndexOf(' ') == -1;", '        return txt.LastIndexOf("
    ") == -1;', "        return txt.LastIndexOf(' ') == -1;", "        // your code\
    \ goes here\n        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf('\
    \ ') == -1;", "        // your code goes here\n        return txt.LastIndexOf(\"\
    \ \") == -1;", "        return txt.LastIndexOf(' ') == -1;", "        return txt.LastIndexOf('\
    \ ') == -1 &&\n            txt.LastIndexOf('-') == -1 &&\n            txt.LastIndexOf('.')\
    \ == -1 &&\n            txt.LastIndexOf('_') == -1 &&\n            txt.LastIndexOf('/')\
    \ == -1 &&\n            txt.LastIndexOf('\\\\') == -1 &&\n            txt.LastIndexOf('\\\
    '') == -1 &&\n            txt.LastIndexOf('\"') == -1 &&\n            txt.LastIndexOf('!')\
    \ == -1 &&\n            txt.LastIndexOf('@') == -1 &&\n            txt.LastIndexOf('#')\
    \ == -1 &&\n            txt.LastIndexOf('$') == -1 &&\n            txt.LastIndexOf('%')\
    \ == -1 &&\n            txt.LastIndexOf('^') == -1 &&\n            txt.LastIndexOf('&')\
    \ == -1 &&\n            txt.LastIndexOf('*') == -1 &&\n            txt.LastIndexOf('(')\
    \ == -1 &&\n            txt.LastIndexOf(')') == -1 &&\n            txt.LastIndexOf('=')\
    \ == -1 &&\n            txt.LastIndexOf(':') == -1 &&\n            txt.LastIndexOf(';')\
    \ == -1 &&\n            txt.LastIndexOf('?') == -1 &&\n            txt.LastIndexOf('+')\
    \ == -1 &&\n            txt.LastIndexOf('{') == -1 &&\n            txt.LastIndexOf('}')\
    \ == -1 &&\n            txt.LastIndexOf('[') == -1 &&\n            txt.LastIndexOf(']')\
    \ == -1 &&\n            txt.LastIndexOf('|') == -1 &&\n            txt.LastIndexOf('<')\
    \ == -1 &&\n            txt.LastIndexOf('>') == -1 &&\n            txt.LastIndexOf('~')\
    \ == -1 &&\n            txt.LastIndexOf('\\\\') == -1 &&\n            txt.LastIndexOf('\\\
    n') == -1 &&\n            txt.LastIndexOf('\\r') == -1 &&\n            txt.LastIndexOf('\\\
    t') == -1 &&\n            txt.LastIndexOf('\\b') == -1 &&\n            ", "  \
    \      // your code goes here\n        return txt.LastIndexOf(' ') == -1;", " \
    \       // your code goes here\n        return txt.LastIndexOf(\" \") == -1;\n\
    \    }\n\n    // Create a function that returns true if the given string\n   \
    \ // contains at least one vowel, and false otherwise.\n    // Examples:\n   \
    \ // >>> CheckIfStringContainsVowel((\"apple\"))\n    // (false)\n    // >>> CheckIfStringContainsVowel((\"\
    apple pie\"))\n    // (true)\n    // >>> CheckIfStringContainsVowel((\"apple pi\"\
    ))\n    // (true)\n    // >>> CheckIfStringContainsVowel((\"apple pie pi\"))\n\
    \    // (true)\n    // >>> CheckIfStringContainsVowel((\"apple pie pi e\"))\n\
    \    // (true)\n    // >>> CheckIfStringContainsVowel((\"apple pie pi e \"))\n\
    \    // (false)\n    // >>> CheckIfStringContainsVowel((\"\"))\n    // (false)\n\
    \    public static bool CheckIfStringContainsVowel(string txt) {\n        // your\
    \ code goes here\n        return txt.Contains(\"a\") || txt.Contains(\"e\") ||\
    \ txt.Contains(\"i\") || txt.Contains(\"o\") || txt.Contains(\"u\");\n    }\n\n\
    \    // Create a function that returns true if the given string\n    // contains\
    \ at least one consonant, and false otherwise.\n    // Examples:\n    // >>> CheckIfStringContainsConsonant((\"\
    apple\"))\n    // (true)\n    // >>> CheckIfStringContainsConsonant((\"apple pie\"\
    ))\n    // (true)\n    // >>> CheckIfStringContainsConsonant((\"apple pi\"))\n\
    \    // (true)\n    // >>> CheckIfStringContainsConsonant((\"apple pie pi\"))\n\
    \    // (true)\n    // >>> CheckIfStringContainsConsonant((\"apple pie pi e\"\
    ))\n    // (false)\n    // >>> CheckIfStringContainsConsonant((\"apple pie pi\
    \ e \"))\n    // (false)\n    // >>> CheckIfStringContainsConsonant((\"\"))\n\
    \    // (false)\n    public static bool CheckIfStringContainsConsonant(string\
    \ txt) {\n", '        return txt.LastIndexOf(" ") == -1;', "        if (txt.Length\
    \ == 0)\n            return false;\n        return !txt.Substring(txt.Length -\
    \ 1, 1).Contains(\" \");", "        return txt.LastIndexOf(' ') == -1;", '        return
    txt.LastIndexOf(" ") == -1;', '        return !txt.EndsWith(" ") && txt.LastIndexOf("
    ") == -1;']
stop_tokens:
- "\n    }\n"

{
  "name": "HumanEval_91_is_bored",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // You'll be given a string of words, and your task is to count the number\n    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>> IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n    // (1L)\n    public static long IsBored(string S) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) == (0L));\n    }\n\n}\n",
  "completions": [
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        var boredCount = 0;\n        for (var i = 0; i < S.Length; i++) {\n            var c = S[i];\n            if (c == '.' || c == '?' || c == '!') {\n                boredCount++;\n            }\n            else if (c == 'I') {\n                boredCount--;\n            }\n        }\n        return boredCount;",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        long count = 0;\n        for (int i = 0; i < S.Length; i++) {\n            if (S[i] == 'I') {\n                count++;\n            }\n        }\n        return count;",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitString SplitString = \".\";\n            public StringSplitOptions.SeparatorChar SeparatorChar = '.';\n            public StringSplitOptions.SeparatorType SeparatorType = StringSplitOptions.SeparatorType.Char;\n        }).Count(x => x.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new char[] { '.', '?', '!' }, true).Count(s => s.StartsWith(\"I\"));",
    "        var boredoms = 0;\n        var words = S.Split(' ');\n        for (var word in words) {\n            if (word.StartsWith(\"I\")) {\n                boredoms++;\n            }\n        }\n        return boredoms;",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        var words = S.Split(' ');\n        var count = 0;\n        for (var i = 0; i < words.Length; i++) {\n            if (words[i].StartsWith(\"I\")) {\n                count++;\n            }\n        }\n        return count;",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(s => s.Split('?').Select(s2 => s2.Split('!').Select(s3 => s3.Split(' ').Select(s4 => s4.ToLower()).Contains(\"i\") ? 1 : 0).Sum()).Sum()).Sum();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        var bored = 0;\n        foreach (var word in S.Split(' ')) {\n            if (word.StartsWith(\"I\")) {\n                bored++;\n            }\n        }\n        return bored;",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n            public StringSplitOptions.TrimOption Trim = StringSplitOptions.TrimOption.None;\n            public StringSplitOptions.RemoveEmptyEntriesOption RemoveEmptyEntries = StringSplitOptions.RemoveEmptyEntriesOption.None;\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n            public StringSplitOptions.Trim Trim = true;\n            public StringSplitOptions.RemoveEmptyEntries RemoveEmptyEntries = true;\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries })\n            .Select(x => x.Split('!', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries })\n                .Select(y => y.Split('?', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries })\n                    .Select(z => z.Split(' ', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries })\n                        .Select(w => w.StartsWith(\"I\") ? 1 : 0)\n                        .Sum())\n                    .Sum())\n                .Sum())\n            .Sum();",
    "        var bored = 0;\n        for (var i = 0; i < S.Length; i++) {\n            if (S[i] == 'I') {\n                bored++;\n            }\n        }\n        return bored;",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n            public StringSplitOptions.TrimExistingDelimiter TrimExistingDelimiter = true;\n            public StringSplitOptions.TrimExistingDelimiters TrimExistingDelimiters = true;\n        }).Count(x => x.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n        }).Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(x => x.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new char[] { '.', '?', '!' }, true).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n        }).Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n        }).Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public bool IncludeEmptyEntries = true;\n            public bool TrimSeparators = true;\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitType SplitType = StringSplitOptions.SplitType.Char;\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        long count = 0;\n        for (int i = 0; i < S.Length; i++) {\n            if (S[i] == 'I') {\n                count++;\n            }\n        }\n        return count;",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        var boredoms = 0;\n        var words = S.Split(' ');\n        for (var i = 0; i < words.Length; i++) {\n            if (words[i].StartsWith(\"I\")) {\n                boredoms++;\n            }\n        }\n        return boredoms;",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', true).Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(x => x.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        var boredoms = 0;\n        var words = S.Split(' ');\n        for (var i = 0; i < words.Length; i++) {\n            if (words[i].StartsWith(\"I\")) {\n                boredoms++;\n            }\n        }\n        return boredoms;",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        long count = 0;\n        for (int i = 0; i < S.Length; i++) {\n            if (S[i] == 'I') {\n                count++;\n            }\n        }\n        return count;",
    "        // Write your code here\n        return S.Split('.', new char[] { '.', '?', '!' }, true).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(x => x.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitChar SplitChar = '.';\n            public StringSplitOptions.Trim Trim = true;\n            public StringSplitOptions.RemoveEmptyEntries RemoveEmptyEntries = true;\n        }).Count(s => s.StartsWith(\"I\"));",
    "        var words = S.Split(' ');\n        var boredoms = 0;\n        for (var i = 0; i < words.Length; i++) {\n            if (words[i].StartsWith(\"I\")) {\n                boredoms++;\n            }\n        }\n        return boredoms;",
    "        // Write your code here\n        return S.Split('.').Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(x => x.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        S = S.ToLower();\n        int count = 0;\n        for (int i = 0; i < S.Length; i++) {\n            if (S[i] == 'i') {\n                count++;\n            }\n        }\n        return count;",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.', new char[] { '.', '?', '!' }, true).Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public bool IncludeEmptyEntries = true;\n            public bool TrimSeparators = true;\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', true).Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions[] { StringSplitOptions.RemoveEmptyEntries }).Count(x => x.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.').Select(s => s.StartsWith(\"I\")).Count();",
    "        // Write your code here\n        return S.Split('.', new StringSplitOptions() {\n            public StringSplitOptions.SplitString SplitString = \"I\";\n            public StringSplitOptions.SeparatorSeparator Separator = \".\";\n            public StringSplitOptions.SeparatorChar SeparatorChar = '.';\n            public StringSplitOptions.SeparatorSplitChar SeparatorSplitChar = '.';\n        }).Count(s => s.StartsWith(\"I\"));",
    "        // Write your code here\n        return S.Split('.').Select(x => x.StartsWith(\"I\")).Count();",
    "        long count = 0;\n        for (int i = 0; i < S.Length; i++) {\n            if (S[i] == 'I') {\n                count++;\n            }\n        }\n        return count;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}